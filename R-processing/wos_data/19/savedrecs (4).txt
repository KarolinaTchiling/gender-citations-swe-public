FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Qiu, X
   Ali, S
   Yue, T
   Zhang, L
AF Qiu, Xiang
   Ali, Shaukat
   Yue, Tao
   Zhang, Li
TI Reliability-redundancy-location allocation with maximum reliability and
   minimum cost using search techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Reliability block diagram; Redundancy structure; Search algorithms; UML;
   Optimization; Empirical studies
ID SERIES-PARALLEL SYSTEMS; OPTIMIZATION; ALGORITHM
AB Context: A safety critical system requires an automated and optimal allocation of redundant component instances to its existing components, including: 1) the selection of components (locations) on which the redundancy must be applied, 2) how many redundant component instances of varying reliability and cost should be allocated to each selected location.
   Objective: Our work aims to searching for the near optimal allocation solutions achieving the higher reliability of the system within the allowed cost. Such allocation must be made earlier, for example, while designing the architecture of the system to avoid unnecessary complexity of addressing unsafe situations discovered in the system development and deployment phases.
   Method: With the above objective in mind, we propose a search-based allocation approach based on the overall objectives of maximizing the overall system reliability and minimizing the cost of introducing and allocating redundancy structures to the system. The architecture of a system modeled using the Unified Modeling Language (UML) along with redundancy structures is encoded as an optimization problem. To guide a search algorithm to solve the problem, we propose a fitness function based on the two optimization objectives: high reliability and low cost.
   Results: We empirically evaluated the performance of four search algorithms (Genetic Algorithm, (1 +1) Evolutionary Algorithm, Alternating Variable Method (AVM) and Random Search) together with the proposed fitness function on. 10 real-world Subsea Oil&Gas Production Systems of varying complexity. Results show that the AVM algorithm significantly outperforms the rest.
   Conclusion: Based on the results of empirical evaluation, we found that AVM can provide the best allocation of redundancy structures as compared to the rest of the algorithms. On average, AVM provided 0.008% of more reliability while saving 26.78% on allocation cost as compared to RS. Our novel solution based on the results of empirical evaluation is implemented as a software tool. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Qiu, Xiang] Design Inst Co Ltd, China Mobile Grp, Beijing, Peoples R China.
   [Ali, Shaukat; Yue, Tao] Simula Res Lab, Oslo, Norway.
   [Yue, Tao] Univ Oslo, Dept Informat, Oslo, Norway.
   [Qiu, Xiang; Zhang, Li] Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
C3 China Mobile; University of Oslo; Beihang University
RP Zhang, L (corresponding author), Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
EM qiuxiang008@gmail.com; shaukat@simula.no; tao@simula.no;
   lily@buaa.edu.cn
RI yue, tao/H-6783-2013; Zhang, Li/AAA-9787-2020
OI Yue, Tao/0000-0003-3262-5577
FU Zen-Configurator project [240024]; MBT4CPS project - Research Council of
   Norway under the category of Young Research Talents of the FRIPO funding
   scheme [240013]; EU Horizon project U-Test; MBE-CR [239063]; Certus SFI
FX This work was supported by the Zen-Configurator project (No. 240024) and
   the MBT4CPS project (No. 240013) funded by the Research Council of
   Norway under the category of Young Research Talents of the FRIPO funding
   scheme. Tao Yue and Shaukat Ali are also supported by the EU Horizon
   2020 project U-Test (http://www.u-test.eu/), the MBE-CR (No. 239063) and
   the Certus SFI (http://certus-sfi.no/).
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 2015, IBM RATIONAL SOFTWAR
   [Anonymous], 2015, RELIASOFTS RELIABILI
   [Anonymous], 2015, PAPYRUS
   [Anonymous], 2015, MAGICDRAW
   [Anonymous], 2009, APPL RM MANUAL DEFEN
   [Anonymous], 2015, UML 2 PLUGIN ECLIPSE
   [Anonymous], 1362862006 ISO
   [Anonymous], 2002, OFFSHORE RELIABILITY
   [Anonymous], 2011, UML SPECIFICATION 2
   [Anonymous], UML PROFILE MARTE MO
   [Anonymous], 2013, PROC
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ardakan MA, 2014, SIMUL MODEL PRACT TH, V42, P107, DOI 10.1016/j.simpat.2013.12.013
   Assaf T. S., 2001, THESIS
   Bai Y, 2012, SUBSEA ENGINEERING HANDBOOK, P1
   Behjati R, 2013, INFORM SOFTWARE TECH, V55, P607, DOI 10.1016/j.infsof.2012.09.006
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Boddu P, 2013, P I MECH ENG O-J RIS, V227, P187, DOI 10.1177/1748006X12473569
   Cao DZ, 2013, RELIAB ENG SYST SAFE, V111, P154, DOI 10.1016/j.ress.2012.09.013
   Chambari A, 2013, RELIAB ENG SYST SAFE, V119, P158, DOI 10.1016/j.ress.2013.05.016
   Dogahe SM, 2015, MATH PROBL ENG, V2015, DOI 10.1155/2015/396864
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   FMC Projects, 2015, FMC PROJECTS
   Garg H., 2015, BENI SUEF U J BASIC, V4, P14, DOI DOI 10.1016/J.BJBAS.2015.02.003
   Garg H, 2015, SWARM EVOL COMPUT, V24, P1, DOI 10.1016/j.swevo.2015.05.001
   Garg H, 2014, J MANUF SYST, V33, P335, DOI 10.1016/j.jmsy.2014.02.008
   Garg H, 2013, COMPUT IND ENG, V64, P247, DOI 10.1016/j.cie.2012.09.015
   Kanagaraj G, 2013, COMPUT IND ENG, V66, P1115, DOI 10.1016/j.cie.2013.08.003
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lagarde Francois., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE'07, P445
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Nie KM, 2013, LECT NOTES COMPUT SC, V8107, P370, DOI 10.1007/978-3-642-41533-3_23
   Pai G. J., 2001, THESIS
   Ran L, 2014, J SYST ENG ELECTRON, V25, P332, DOI 10.1109/JSEE.2014.00038
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Sooktip T, 2012, 2012 INTERNATIONAL CONFERENCE ON QUALITY, RELIABILITY, RISK, MAINTENANCE, AND SAFETY ENGINEERING (ICQR2MSE), P1050, DOI 10.1109/ICQR2MSE.2012.6246402
   Sunde L. T., 2003, OFFSH TECHN C, P5
   Taboada H. A., INT J APPL EVOL COMP, V3
   Tekiner-Mogulkoc H, 2011, IEEE T RELIAB, V60, P667, DOI 10.1109/TR.2011.2161029
   Tian ZG, 2009, RELIAB ENG SYST SAFE, V94, P1568, DOI 10.1016/j.ress.2009.02.021
   Zia L, 2010, IEEE T RELIAB, V59, P706, DOI 10.1109/TR.2010.2085530
   Ziani A, 2012, EUROMICRO CONF PROC, P166, DOI 10.1109/SEAA.2012.47
NR 44
TC 16
Z9 18
U1 1
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 36
EP 54
DI 10.1016/j.infsof.2016.09.010
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000003
DA 2024-07-18
ER

PT J
AU Sedrakyan, G
   Poelmans, S
   Snoeck, M
AF Sedrakyan, Gayane
   Poelmans, Stephan
   Snoeck, Monique
TI Assessing the influence of feedback-inclusive rapid prototyping on
   understanding the semantics of parallel UML statecharts by novice
   modellers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Conceptual modelling; Statechart; Model pragmatics;
   Prototyping/simulation; Automated feedback; Testability of requirements
ID TECHNOLOGY; SIMULATION; QUALITY
AB Context: UML diagrams are the de facto standard for analysing, communicating and designing software systems, as well as automated code generation. However there is a certain degree of difficulty in understanding a system represented by means of UML diagrams.
   Object: Our previous research demonstrates a significant improvement in understanding the structural aspects of a system represented as a UML class diagram when using a feedback-inclusive prototype of a model. This paper extends our previous work with an empirical validation study for the effectiveness of the feedback-inclusive rapid prototyping (FIRP) method, on the comprehension of system dynamics represented as multiple interacting UML statecharts. Because models often combine structural and behavioural views that are highly intertwined, we additionally evaluate the effectiveness of the proposed method with respect to comprehension of the between-view consistency.
   Method: The FIRP environment was built following the principles of Design Science Research in Information Systems. This study targets the empirical validation of the effectiveness of the proposed technique using an experimental study method. Two experiments were conducted with the participation of 65 final-year master students in the context of different modelling courses from different study programs at KU Leuven using two two-group factorial experimental designs. The effectiveness of the FIRP method was measured by comparing students' performance between the cycles with and without the use of the method, using the understandability (comprehension test results) as the dependent variable and the use of FIRP as the independent variable. Effects from unknown variables were neutralized by means of randomized group compositions. The effectiveness of FIRP was additionally assessed with respect to personal characteristics (age, gender, previous knowledge, self-efficacy) and user acceptance (perceived ease of use, perceived utility, preference, satisfaction).
   Results: The findings reveal a significant positive impact of the use of the prototyping technique on students' comprehension of system dynamics represented as multiple interacting statecharts.
   Conclusions: The findings provide empirical support for the advantage of the use of FIRP over manual inspection of interacting statecharts. The findings also suggest that the method is suitable for training system's analysis and modelling skills when UML statecharts are involved. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Sedrakyan, Gayane; Snoeck, Monique] Katholieke Univ Leuven, Fac Business & Econ, Dept Decis Sci & Informat Management, Res Ctr Management Informat LIRIS, Naamsestr 69,HOG 03-118, B-3000 Louvain, Belgium.
   [Poelmans, Stephan] Katholieke Univ Leuven, Ctr Informat Management Modeling & Simulat CIMS, Fac Econ & Business, Campus Brussel HUB,Warmoesberg 26, B-1000 Brussels, Belgium.
C3 KU Leuven; KU Leuven
RP Sedrakyan, G (corresponding author), Katholieke Univ Leuven, Fac Business & Econ, Dept Decis Sci & Informat Management, Res Ctr Management Informat LIRIS, Naamsestr 69,HOG 03-118, B-3000 Louvain, Belgium.
EM gsedrakyan@gmail.com; Stephan.Poelmans@kuleuven.be;
   Monique.Snoeck@kuleuven.be
RI Snoeck, Monique/H-7771-2018
OI Snoeck, Monique/0000-0002-3824-3214
CR [Anonymous], MIS Q
   [Anonymous], DISCR EV SYST 2002 P
   Banks J., 1999, P 31 C WINT SIM SIM, V1
   Bavota G, 2011, LECT NOTES COMPUT SC, V6981, P168, DOI 10.1007/978-3-642-24485-8_13
   Bernardi S., 2002, 3 INT WORKSH SOFTW P
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Bourgonjon J, 2010, COMPUT EDUC, V54, P1145, DOI 10.1016/j.compedu.2009.10.022
   Bradley JH, 2006, INFORM MANAGE-AMSTER, V43, P77, DOI 10.1016/j.im.2004.11.009
   Buckl S, 2010, LECT NOTES BUS INF P, V50, P169
   Capretz LuizFernando., 2003, A C M SIG Sof TSoftw are Engineering Notes, V28, P6
   Carbone M., 2002, P 6 ECOOP WORKSH QUA
   Cruz-Lemus JA, 2005, LECT NOTES COMPUT SC, V3713, P113, DOI 10.1007/11557432_9
   Cruz-Lemus JA, 2008, LECT NOTES COMPUT SC, V4895, P129
   Cruz-Lemus JA, 2007, LECT NOTES COMPUT SC, V4802, P213
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Damassa D.A., 2010, RES ECAR RES B
   Dan L., 2010, INF SCI ENG ISIS 201
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   DEDENE G, 1995, DATA KNOWL ENG, V15, P1, DOI 10.1016/0169-023X(94)00031-9
   Denger C., 2003, EUR C 2003 P 29
   Embley D.W., 2012, Handbook of conceptual modeling: theory, practice, and research challenges
   Erickson J., 2007, P 12 WORKSH EXPL MOD
   Eshuis R., 2000, REQUIREMENTS LEVEL S
   European Commission, 2013, INN TEACH LEARN OP U
   Genero M, 2003, LECT NOTES COMPUT SC, V2814, P118
   Genero M, 2009, INFORM SOFTWARE TECH, V51, P1629, DOI 10.1016/j.infsof.2009.04.006
   Grubisic A, 2009, COMPUT EDUC, V53, P591, DOI 10.1016/j.compedu.2009.03.014
   Gustas R, 2010, LECT NOTES BUS INF P, V62, P17
   Hair JF, 2010, Multivariate data analysis
   Hess T.A., 2012, INVESTIGATION PROTOT
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Ingalls R.G., 2008, P 40 C WINT SIM
   IVES B, 1983, COMMUN ACM, V26, P785, DOI 10.1145/358413.358430
   Keller C., 2009, COMMUN ASS INF SYST, V25
   Lange C.F., 2006, P 28 INT C SOFTW ENG
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Liu S., 2013, INT FORM METH
   Nelson HJ, 2012, SOFTWARE QUAL J, V20, P201, DOI 10.1007/s11219-011-9136-9
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   Poelmans S., 2013, CONSTRUCTIVIST APPRO
   Reggio G., 2013, EESSMOD MODELS
   Schenk K. D., 1998, Journal of Management Information Systems, V15, P9
   Sedrakyan G., 2014, CEUR WORKSH P
   Sedrakyan G., 2013, P MOD 2013 1 INT C M
   Sedrakyan G., 2016, MOD 2016 4 INT C MOD
   Sedrakyan G., 2016, THESIS
   Sedrakyan G, 2016, COMPUT HUM BEHAV, V57, P352, DOI 10.1016/j.chb.2015.12.040
   Sedrakyan G, 2015, LECT NOTES COMPUT SC, V9382, P327, DOI 10.1007/978-3-319-25747-1_32
   Sedrakyan G, 2014, COMPUT HUM BEHAV, V41, P486, DOI 10.1016/j.chb.2014.09.054
   Sedrakyan G, 2014, LECT NOTES COMPUT SC, V8823, P298, DOI 10.1007/978-3-319-12256-4_32
   Sedrakyan G, 2012, LECT NOTES BUS INF P, V113, P435
   Sedrakyan G, 2013, LECT NOTES BUS INF P, V147, P411
   Sedrakyan G, 2014, COMPUT EDUC, V78, P367, DOI 10.1016/j.compedu.2014.06.014
   SEGARS AH, 1993, MIS QUART, V17, P517, DOI 10.2307/249590
   Siau K, 2005, J DATABASE MANAGE, V16, P40, DOI 10.4018/jdm.2005070103
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   Snoeck M, 2003, LECT NOTES COMPUT SC, V2814, P105
   Snoeck M, 2014, ENTERP ENG SER, P1, DOI 10.1007/978-3-319-10145-3
   Snoeck M, 1998, IEEE T SOFTWARE ENG, V24, P233, DOI 10.1109/32.677182
   Snoeck M, 2007, INFORM EDUC, V6, P231
   Trochim W.M. K., 2015, Research Methods Knowledge Base
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Wilmont I, 2013, LECT NOTES COMPUT SC, V8217, P74, DOI 10.1007/978-3-642-41924-9_7
   Wixom BH, 2005, INFORM SYST RES, V16, P85, DOI 10.1287/isre.1050.0042
   Yang MC, 2005, DESIGN STUD, V26, P649, DOI 10.1016/j.destud.2005.04.005
NR 67
TC 12
Z9 12
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 159
EP 172
DI 10.1016/j.infsof.2016.11.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ochodek, M
AF Ochodek, Miroslaw
TI Functional size approximation based on use-case names
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional size measurement; Approximate software sizing methods;
   COSMIC; IFPUG Function Point Analysis; Size estimation methods; Use
   cases
ID STATISTICS; SYSTEMS
AB Context: Functional size measures, such as IFPUG Function Points or COSMIC, are widely used to support software development effort estimation. Unfortunately, applying the COSMIC or IFPUG Function Point Analysis methods at early stages of software development is difficult or even impossible because available functional requirements are imprecise. Moreover, the resources that could be allocated to perform such measurement are usually limited. Therefore, it is worth investigating the possibility of automating the approximation of IFPUG Function Points or COSMIC early in software projects.
   Objective: Given a UML use-case diagram or a list of use-case names, approximate COSMIC and IFPUG FPA functional size in an automatic way.
   Method: We propose a two-step process of approximating the functional size of applications based on use-case goals. In the first step, we process the names of use cases, expressed in a natural language and assign each of their goals into one of thirteen categories. In the second step, we employ information about categories of use-case goals and historical data to construct prediction models and use them to approximate the size in COSMIC and Function Points. We compare the accuracy of the proposed methods to the average use-case approximation (AUC), which is their most intuitive counterpart, and the automatic method proposed by Hussain, Kosseim and Ormandjieva (HKO).
   Results: The prediction accuracy of the two proposed approximation methods was evaluated using a cross-validation procedure on a data set of 26 software development projects. For both methods, the prediction error was low compared to AUC and HKO.
   Conclusion: Developers who document functional requirements in a form of use cases might use the proposed methods to obtain an early approximation of the application size as soon as use-case goals are identified. The proposed methods are automatic and can be considered as a replacement for AUC. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Ochodek, Miroslaw] Poznan Univ Tech, Inst Comp Sci, Fac Comp, Ul Piotrowo 2, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Ochodek, M (corresponding author), Poznan Univ Tech, Inst Comp Sci, Fac Comp, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM mochodek@cs.put.poznan.pl
RI Ochodek, Mirosław/G-1505-2014
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], P SMEF 07
   [Anonymous], COSMIC FUNCTIONAL SI
   [Anonymous], 9 INT WORKSH SOFTW M
   [Anonymous], 2009, MAN SUCC PROJ PRINCE
   [Anonymous], COSMIC FUNCTION POIN
   [Anonymous], 2015, COSMIC FUNCT SIZ MEA
   [Anonymous], P IWSM MENSURA 2007
   Bagriyanik S, 2016, INFORM SOFTWARE TECH, V72, P189, DOI 10.1016/j.infsof.2015.12.011
   Bernardez B., 2004, P SMEF 04 ROM IT
   Bird S., 2009, NATURAL LANGUAGE PRO
   Cantone G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P280, DOI 10.1109/METRIC.2004.1357912
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cockburn A., 2001, Writing effective use cases
   Cohen J., 1988, STAT POWER ANAL BEHA
   CONOVER WJ, 1999, PRACTICAL NONPARAMET
   Conte M., 2004, P SMEF 04 ROM IT
   Davey B. A., 2002, INTRO LATTICES ORDER, V2nd, DOI DOI 10.1017/CBO9780511809088
   De Marneffe M.-C., 2006, LREC, V6, P449
   De Vito G, 2014, EUROMICRO CONF PROC, P69, DOI 10.1109/SEAA.2014.30
   del Bianco V, 2014, INFORM SOFTWARE TECH, V56, P1253, DOI 10.1016/j.infsof.2014.04.009
   Di Martino S, 2016, INFORM SOFTWARE TECH, V72, P90, DOI 10.1016/j.infsof.2015.12.001
   Diev S., 2006, SIGSOFT SOFTWARE ENG, V31, P1, DOI DOI 10.1145/1118537.1118540
   Fetcke T, 1998, TOOLS 23 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P192, DOI 10.1109/TOOLS.1997.654721
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Harput V., 2005, 11 IEEE INT S SOFTW, P10
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hussain I, 2008, LECT NOTES COMPUT SC, V5039, P287
   Hussain I, 2013, DATA KNOWL ENG, V85, P2, DOI 10.1016/j.datak.2012.06.005
   Information Technology, 2010, Standard ISO/IEC 29881:2010
   Iorio T., 2004, P SMEF 04 ROM IT
   Iorio Tommaso, 2007, P SOFTWARE MEASUREME, P179
   ISO/IEC, 2004, INF TECHN SOFTW ME 5
   ISO/IEC, 2007, INF TECHN SOFTW ME 1
   ISO/IEC, 2009, 209262009 ISOIEC
   *ISO IEC, 2005, 245702005 ISOIEC
   ISO/IEC, 2003, 197612011 ISOIEC
   Issa A, 2006, INFORM SOFTWARE TECH, V48, P836, DOI 10.1016/j.infsof.2005.10.005
   Jenner M.S., 2001, 4 EUROPEAN C SOFTWAR, P173
   Jurkiewicz J, 2015, INFORM SOFTWARE TECH, V58, P110, DOI 10.1016/j.infsof.2014.09.011
   Jurkiewicz J, 2015, EMPIR SOFTW ENG, V20, P82, DOI 10.1007/s10664-013-9277-5
   Kamer G., 1993, THESIS
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kopczynska Sylwia, 2012, 2012 First International Workshop on Software Engineering Education based on Real-World Experiences (EduRex 2012), P13, DOI 10.1109/EduRex.2012.6225698
   Kraemer HC, 2006, BIOL PSYCHIAT, V59, P990, DOI 10.1016/j.biopsych.2005.09.014
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lavazza L, 2013, INFORM SOFTWARE TECH, V55, P1796, DOI 10.1016/j.infsof.2013.04.003
   Levine H.A., 2007, Project portfolio management: a practical guide to selecting projects, managing portfolios, and maximizing benefits
   Lin D, 1998, P 15 INT C MACH LEAR, V98, P296
   Marín B, 2008, LECT NOTES COMPUT SC, V5338, P170
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   NESMA, 2005, APPL FUNCT POINT AN
   NESMA, 2008, FPA APPL UML USE CAS
   Nielsen T.D., 2009, BAYESIAN NETWORKS DE
   Object Management Group (OMG), 2010, OMG UN MOD LANG OMG
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P885, DOI 10.1016/j.infsof.2011.02.004
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   OCHODEK M, 2010, FDN COMPUTING DECISI, V35, P91
   OGC (Office of Government Commerce), 2011, MAN PORTF
   Overgaard G., 2004, Use Cases Patterns and Blueprints
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Ridao M, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P120
   Rolland C, 1998, DATA KNOWL ENG, V25, P125, DOI 10.1016/S0169-023X(97)86223-4
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Santillo L, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P137, DOI 10.1109/IWSM-MENSURA.2012.29
   Sellami A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P282, DOI 10.1109/ICSEA.2009.96
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   Vogelezang F., 2015, COSMIC GUIDELINE EAR, DOI 10.13140/RG.2.1.4195.0567
   Vogelezang F, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P27, DOI 10.1109/IWSM-Mensura.2013.14
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Zivkovic A, 2005, INFORM SOFTWARE TECH, V47, P881, DOI 10.1016/j.infsof.2005.02.008
NR 79
TC 7
Z9 7
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 73
EP 88
DI 10.1016/j.infsof.2016.08.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800005
DA 2024-07-18
ER

PT J
AU Yu, CP
   Chen, HG
   Klein, G
   Jiang, R
AF Yu, Chia-Ping
   Chen, Houn-Gee
   Klein, Gary
   Jiang, Randi
TI The roots of executive information system development risks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Executive information systems; Project management; Software development;
   Risk; Socio-technical model
ID SOCIOTECHNICAL CHANGE; SOFTWARE RISK; MANAGEMENT; PROJECT; REQUIREMENTS;
   MODEL
AB Context: Executive information systems (EIS) are valuable tools that enable executives to formulate and execute strategic decisions in their organizations. However, implementation of an EIS is complex and laden with numerous risks.
   Objective: We apply the socio-technical model (STM) to propose a framework of risks for the development and implementation of an EIS. Such a framework may serve to guide risk management strategies and procedures beyond current practices.
   Method: To assess, and better understand, the risks associated with implementing an EIS, interviews were conducted with the employees of three principle stakeholders of a taxation EIS. The interviews centered on the detailed experiences of the participants applying and working with EIS projects at their respective organizations.
   Results: Content analysis of the interviews confirmed an ability to designate risks to both the project and the product of development through dimensions of task, actor, structure and technology as well as the fit between each combination. The result adds credence to the model for purposes of risk management in the development of an EIS.
   Conclusion: Executive information systems play an integral role in business decision making. The successful construction and implementation of an EIS are reliant upon a clear understanding of the appropriate technology to be used, the end-user accessing the system, and the tasks executed. The STM is a useful tool for the identification of risks in the creation of an EIS. Further work should consider the extendability to other systems and its compatibility with development approaches. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Yu, Chia-Ping] Tamkang Univ, Dept Informat Management, Tamsui 25137, New Taipei, Taiwan.
   [Chen, Houn-Gee] Natl Taiwan Univ, Dept Management, Taipei 10617, Taiwan.
   [Klein, Gary] Univ Colorado, Coll Business & Adm, Colorado Springs, CO 80918 USA.
   [Jiang, Randi] Florida State Univ, Dept Accounting, Coll Business, Tallahassee, FL 32306 USA.
C3 Tamkang University; National Taiwan University; University of Colorado
   System; University of Colorado at Colorado Springs; State University
   System of Florida; Florida State University
RP Chen, HG (corresponding author), Natl Taiwan Univ, Dept Management, 85,Sec 4 Roosevelt Rd, Taipei 10617, Taiwan.
EM cpyu@mail.tku.edu.tw; hgchen@ntu.edu.tw; gklein@uccs.edu;
   rjiang05@gmail.com
FU Ministry of Science and Technology, Taiwan [100-2410-H-002-015-MY3,
   103-2410-H-002-107-MY3]
FX This research was partly supported by grants from Ministry of Science
   and Technology, Taiwan under the projects [100-2410-H-002-015-MY3] and
   [103-2410-H-002-107-MY3].
CR Affeldt Fabrício Sobrosa, 2013, JISTEM J.Inf.Syst. Technol. Manag., V10, P251
   [Anonymous], ACM T MANAGEMENT INF
   [Anonymous], J INT TECHNOLOGY INF
   Bannerman PL, 2008, J SYST SOFTWARE, V81, P2118, DOI 10.1016/j.jss.2008.03.059
   BELCHER LW, 1993, MIS QUART, V17, P239, DOI 10.2307/249770
   Benaroch M, 2006, J MANAGE INFORM SYST, V23, P239, DOI 10.2753/MIS0742-1222230108
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Bostrom RP., 1977, MIS Quarterly, V1, P11, DOI [10.2307/248710, DOI 10.2307/249019, DOI 10.2307/248710, 10.2307/249019]
   Chang JYT, 2013, J SYST SOFTWARE, V86, P1453, DOI 10.1016/j.jss.2013.01.030
   Cooper M.D.R., 2008, BUSINESS RES METHODS
   GOODHUE DL, 1995, MIS QUART, V19, P213, DOI 10.2307/249689
   Ikart EM, 2005, AUSTRALAS J INF SYST, V13, P78
   Islam S, 2014, INFORM SOFTWARE TECH, V56, P117, DOI 10.1016/j.infsof.2013.06.003
   Jiang J., 2002, PROJ MANAG J, V33, P30
   Jiang JJ, 2006, J ASSOC INF SYST, V7, P68, DOI 10.17705/1jais.00082
   Khaifi K., 2011, P UK AC INF SYST C
   Klein G, 2001, J SYST SOFTWARE, V56, P195, DOI 10.1016/S0164-1212(00)00097-2
   Krippendorff K., 1980, CONTENT ANAL INTRO I
   Leavitt H.J., 1964, NEW PERSPECTIVES ORG, P55
   Lesca N, 2008, EUR J INFORM SYST, V17, P371, DOI 10.1057/ejis.2008.21
   Lihong Zhou, 2008, Information Management & Computer Security, V16, P166, DOI 10.1108/09685220810879636
   Lim WK, 2011, J ASSOC INF SYST, V12, P414
   Luftman J., 2007, MIS Quarterly Executive, V6, P165
   Luna-Reyes LF, 2005, EUR J INFORM SYST, V14, P93, DOI 10.1057/palgrave.ejis.3000524
   Lyytinen K, 1998, INFORM SYST RES, V9, P233, DOI 10.1287/isre.9.3.233
   Lyytinen K, 2008, EUR J INFORM SYST, V17, P589, DOI 10.1057/ejis.2008.50
   Mathiassen L, 2007, J ASSOC INF SYST, V8, P569
   Mayer J, 2013, INF SYST E-BUS MANAG, V11, P507, DOI 10.1007/s10257-012-0207-7
   McLeod L, 2012, EUR J INFORM SYST, V21, P176, DOI 10.1057/ejis.2011.43
   Neuendorf K. A., 2017, The content analysis guidebook, V2nd, DOI 10.4135/9781071802878
   Pommeranz A, 2012, ETHICS INF TECHNOL, V14, P285, DOI 10.1007/s10676-011-9282-6
   RAI A, 1994, ACCOUNTING MANAGEMEN, V4, P87
   Reich BH, 2000, MIS QUART, V24, P81, DOI 10.2307/3250980
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Tesch D, 2007, J COMPUT INFORM SYST, V47, P61
   THOMAS JB, 1993, ACAD MANAGE J, V36, P239, DOI 10.5465/256522
   Nguyen TH, 2014, SOFTWARE QUAL J, V22, P87, DOI 10.1007/s11219-013-9202-6
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   Vandenbosch B, 1997, MIS QUART, V21, P81, DOI 10.2307/249743
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   WATSON HJ, 1993, MIS QUART, V17, P255, DOI 10.2307/249771
   Wixom BH, 2001, MIS QUART, V25, P17, DOI 10.2307/3250957
   Xu Mark, 2010, International Journal of Strategic Information Technology and Applications, V1, P1, DOI 10.4018/jsita.2010100101
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Young Raymond, 2008, International Journal of Project Management, V26, P713, DOI 10.1016/j.ijproman.2008.06.001
   Yu CI, 2013, J COMPUT INFORM SYST, V53, P28, DOI 10.1080/08874417.2013.11645629
NR 46
TC 8
Z9 11
U1 2
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2015
VL 68
BP 34
EP 44
DI 10.1016/j.infsof.2015.08.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CT8OP
UT WOS:000363076200003
DA 2024-07-18
ER

PT J
AU Parra, E
   Dimou, C
   Llorens, J
   Moreno, V
   Fraga, A
AF Parra, Eugenio
   Dimou, Christos
   Llorens, Juan
   Moreno, Valentin
   Fraga, Anabel
TI A methodology for the classification of quality of requirements using
   machine learning techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Software engineering; Requirements engineering; Requirements quality;
   Machine learning
AB Context: One of the most important factors in the development of a software project is the quality of their requirements. Erroneous requirements, if not detected early, may cause many serious problems, such as substantial additional costs, failure to meet the expected objectives and delays in delivery dates. For these reasons, great effort must be devoted in requirements engineering to ensure that the project's requirements results are of high quality. One of the aims of this discipline is the automatic processing of requirements for assessing their quality; this aim, however, results in a complex task because the quality of requirements depends mostly on the interpretation of experts and the necessities and demands of the project at hand.
   Objective: The objective of this paper is to assess the quality of requirements automatically, emulating the assessment that a quality expert of a project would assess.
   Method: The proposed methodology is based on the idea of learning based on standard metrics that represent the characteristics that an expert takes into consideration when deciding on the good or bad quality of requirements. Using machine learning techniques, a classifier is trained with requirements earlier classified by the expert, which then is used for classifying newly provided requirements.
   Results: We present two approaches to represent the methodology with two situations of the problem in function of the requirement corpus learning balancing, obtaining different results in the accuracy and the efficiency in order to evaluate both representations. The paper demonstrates the reliability of the methodology by presenting a case study with requirements provided by the Requirements Working Group of the INCOSE organization.
   Conclusions: A methodology that evaluates the quality of requirements written in natural language is presented in order to emulate the quality that the expert would provide for new requirements, with 86.1 of average in the accuracy. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Parra, Eugenio; Dimou, Christos; Llorens, Juan; Moreno, Valentin; Fraga, Anabel] Univ Carlos III Madrid, Knowledge Reuse Grp, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Parra, E (corresponding author), Univ Carlos III Madrid, Knowledge Reuse Grp, Av Univ 30, Madrid 28911, Spain.
EM eparra@kr.inf.uc3m.es; cdimou@kr.inf.uc3m.es; llorens@kr.inf.uc3m.es;
   vmpelayo@kr.inf.uc3m.es; afraga@kr.inf.uc3m.es
OI LLORENS, JUAN/0000-0001-7951-6357; FRAGA, ANABEL/0000-0001-5837-920X;
   MORENO, VALENTIN/0000-0002-8731-7443
FU European Union's seventh framework program (FP7) for CRYSTAL - CRITICAL
   SYSTEM ENGINEERING ACCELERATION [332830]
FX The research leading to these results has received funding from the
   European Union's seventh framework program (FP7/2007-2013) for CRYSTAL -
   CRITICAL SYSTEM ENGINEERING ACCELERATION joint undertaking under Grant
   Agreement No. 332830 and from specific national programs and/or funding
   authorities.
CR Aceituna D, 2014, INFORM SOFTWARE TECH, V56, P321, DOI 10.1016/j.infsof.2013.11.004
   Alencar F, 2009, LECT NOTES BUS INF P, V39, P99
   Alexander I. F., 2002, Writing Better Requirements
   Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   [Anonymous], 2001, P 7 INT WORKSH REQ E
   Baegh J, 2008, IEEE SOFTWARE, V25, P57, DOI 10.1109/MS.2008.30
   Bloomberg J., 2006, SERVICE ORIENT BE DO
   Bourque P., 2004, GUIDE SOFTWARE ENG B, DOI [http://dx.doi.org/10.1109/SESS.1999.767664., DOI 10.1109/SESS.1999.767664]
   Braude E.J., 2000, SOFTWARE ENG OBJECT
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Chantree F.J., 2006, IDENTIFYING NOCUOUS, P203
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   Company T.R., RQA REQ QUAL AN
   Dargan JL, 2014, PROCEDIA COMPUT SCI, V28, P347, DOI 10.1016/j.procs.2014.03.043
   de Sousa T.C., 2010, ACM SIGSOFT SOFTW EN, V35, P1, DOI [http://dx.doi.org/10.1145/1734103.1734114, DOI 10.1145/1734103.1734114]
   Ditterrich T., 1997, ARTIF INTELL, V4, P97
   E.S.A. (ESA), 1995, GUID SOFTW REQ DEF P
   Fabbrini F, 2002, 26TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P97, DOI 10.1109/SEW.2001.992662
   Fraga A., 2010, METHODOLOGY REUSING
   Frank E., 1998, ICML
   Génova G, 2013, REQUIR ENG, V18, P25, DOI 10.1007/s00766-011-0134-z
   Glass R., 2003, FACTS FALLACIES SOFT
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Group T.S., 2013, CHAOS MANIFESTO 2013
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Hong J., 1986, AQ15: Incremental Learning of Attribute-Based Descriptions from Examples: The Method and User's Guide
   Hooks I., 1993, P 3 NCOSE INT S, V2, P1, DOI [http://dx.doi.org/10.1002/j.2334-5837.1994.tb01834.X, DOI 10.1002/J.2334-5837.1994.TB01834.X]
   Hooks I.F., 2000, GUIDE MANAGING WRITI
   Hussain I, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P209
   [International Council on Systems Engineering (INCOSE) Requirements Working Group], 2012, GUIDE FOR WRITING RE, P59
   Islam A., FRAMEWORK SOFTWARE R, P152
   [ISO IEC], 2007, 25 ISOIEC
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Ko Y, 2007, INFORM SOFTWARE TECH, V49, P1128, DOI 10.1016/j.infsof.2006.11.007
   Loucopoulos P., 1995, SYSTEM REQUIREMENTS
   Magee S, 1997, GUIDE SOFTWARE ENG S
   Major J. A., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P39, DOI 10.1007/BF00962821
   McCoy JR, 2002, 26TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P69, DOI 10.1109/SEW.2001.992657
   Moreno V., 2010, ANALISIS CRITERIOS R
   Otero Carlos E., 2010, Asia Modelling Symposium. Proceedings 4th Asia International Conference on Mathematical Modelling and Computer Simulation (AMS 2010), P187, DOI 10.1109/AMS.2010.48
   Ott Daniel, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P50, DOI 10.1007/978-3-642-37422-7_4
   Popescu D, 2008, LECT NOTES COMPUT SC, V5320, P103
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Racheva Z., 2010, ESEM 2010 P 2010 ACM, DOI DOI 10.1145/1852786.1852837
   Rosenberg L.H., 2001, P AIAA SPAC 2001 C E, P28
   S.E.S. Committee, 1998, IEEE REC PRACT SOFTW
   Sardinha A, 2013, AUTOMAT SOFTW ENG, V20, P111, DOI 10.1007/s10515-012-0106-7
   Thakurta R, 2013, SOFTWARE QUAL J, V21, P573, DOI 10.1007/s11219-012-9188-5
   Turk W., 2006, WRITING REQUIREMENTS, P20
   Yue Wang, 2013, Natural Language Processing and Information Systems. 18th International Conference on Applications of Natural Language to Information Systems, NLDB 2013. Proceedings: LNCS 7934, P25, DOI 10.1007/978-3-642-38824-8_3
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
NR 53
TC 33
Z9 36
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 180
EP 195
DI 10.1016/j.infsof.2015.07.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600010
DA 2024-07-18
ER

PT J
AU Petersen, K
   Vakkalanka, S
   Kuzniarz, L
AF Petersen, Kai
   Vakkalanka, Sairam
   Kuzniarz, Ludwik
TI Guidelines for conducting systematic mapping studies in software
   engineering: An update
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping studies; Software engineering; Guidelines
ID LITERATURE-REVIEWS; PRODUCT LINES
AB Context: Systematic mapping studies are used to structure a research area, while systematic reviews are focused on gathering and synthesizing evidence. The most recent guidelines for systematic mapping are from 2008. Since that time, many suggestions have been made of how to improve systematic literature reviews (SLRs). There is a need to evaluate how researchers conduct the process of systematic mapping and identify how the guidelines should be updated based on the lessons learned from the existing systematic maps and SLR guidelines.
   Objective: To identify how the systematic mapping process is conducted (including search, study selection, analysis and presentation of data, etc.); to identify improvement potentials in conducting the systematic mapping process and updating the guidelines accordingly.
   Method: We conducted a systematic mapping study of systematic maps, considering some practices of systematic review guidelines as well (in particular in relation to defining the search and to conduct a quality assessment).
   Results: In a large number of studies multiple guidelines are used and combined, which leads to different ways in conducting mapping studies. The reason for combining guidelines was that they differed in the recommendations given.
   Conclusion: The most frequently followed guidelines are not sufficient alone. Hence, there was a need to provide an update of how to conduct systematic mapping studies. New guidelines have been proposed consolidating existing findings. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Petersen, Kai; Vakkalanka, Sairam; Kuzniarz, Ludwik] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
EM kai.petersen@bth.se; savall@student.bth.se; ludwik.kuzniarz@bth.se
RI vakkalanka, sairam/AAP-4255-2021
OI Petersen, Kai/0000-0002-1532-8223; vakkalanka,
   sairam/0000-0003-3575-8463
FU ELLIIT (The Linkoping-Lund Initiative on IT and Mobile Communication)
FX This work was partly funded by ELLIIT (The Linkoping-Lund Initiative on
   IT and Mobile Communication). We also would like to thank Claes Wohlin
   for valuable comments on the manuscript.
CR Abran A., 2001, Guide to the software engineering body of knowledge: trial version
   Acuna Silvia T., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P42, DOI 10.1049/ic.2012.0005
   Afzal Wasif, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P488
   Ali N.B., 2014, P 8 INT S EMP SOFTW
   Anjum M., 2012, P 16 INT C EV ASS SO, P57
   [Anonymous], 2008, SYSTEMATIC REV SOCIA
   Antonio E. A., 2012, 2012 Second Brazilian Conference on Critical Embedded Systems (CBSEC 2012), P18, DOI 10.1109/CBSEC.2012.22
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Arshad Ali, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P164, DOI 10.1049/ic.2011.0020
   Badampudi D., 2015, S19 INT C EV ASS SOF
   Bailey John, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P482
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Barreiros E, 2011, INT SYMP EMP SOFTWAR, P107, DOI 10.1109/ESEM.2011.19
   Biolchini J., 2005, Systematic review in software engineering(05)
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Castro Llanos John Wilmar, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P131, DOI 10.1007/978-3-642-31063-8_11
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Cavalcanti T. R., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P14, DOI 10.1109/SBES.2011.36
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Neto PADS, 2012, INFORM SOFTWARE TECH, V54, P802, DOI 10.1016/j.infsof.2012.01.003
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Da Silva F.Q., EMPIRICAL SOFTW ENG
   da Silva F. Q. B., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P61, DOI 10.1109/RESER.2011.14
   da Silva FQB, 2012, J SOFTW-EVOL PROC, V24, P625, DOI 10.1002/smr.563
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   da Silva IF, 2011, SOFTWARE PRACT EXPER, V41, P899, DOI 10.1002/spe.1078
   Daud Nik Marsyahariani Nik, 2012, Proceedings of the 2012 8th International Conference on Information Science and Digital Content Technology (ICIS and IDCTA), P626
   DURELLI V. H., 2010, VIRT MACH INT LANG A, P4
   Durelli V. H. S., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P30, DOI 10.1109/SBES.2011.17
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Fauzi SSM, 2010, ASIA PAC SOFWR ENG, P404, DOI 10.1109/APSEC.2010.53
   Feitosa D, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P738
   Felizardo Katia R., 2012, Journal of Software, V7, P450, DOI 10.4304/jsw.7.2.450-461
   Felizardo K.R., 2010, Proc. of EASE, V10, P1
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Ferreira Bastos Jonatas, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P11, DOI 10.1049/ic.2011.0002
   Fortaleza L. L., 2012, 2012 Second International Workshop on Collaborative Teaching of Globally Distributed Software Development - Community Building Workshop (CTGDSD 2012), P1, DOI 10.1109/CTGDSD.2012.6226944
   Guessi M, 2010, C TITLE LATIN AM INF
   Guessi Milena, 2011, CLEIej, V14, P3
   Hellmann Theodore D., 2012, Proceedings of the 2012 Agile Conference, P55, DOI 10.1109/Agile.2012.8
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kerzazi N., 2010, Proceedings 2010 5th International Multi-Conference on Computing in the Global Information Technology (ICCGI 2010), P180, DOI 10.1109/ICCGI.2010.16
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham B., MAPPING STUDY COMPLE
   Kitchenham B., 2010, P ACM IEEE INT C SOF, P589, DOI DOI 10.1145/1806799.1806887
   Kitchenham B. A., 2010, EASE, V10, P25
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kusumo D.S., RISKS OFF THE SHELF
   Laguna M.A., SYSTEMATIC MAPPING S
   Lemos J., 2012, Proceedings of the Annual ACM Symposium on Applied Computing (SAC), P1083
   Lobato L.L., RISK MANAGEMENT SOFT
   Maglyas A., 2011, 2011 5th International Workshop on Software Product Management (IWSPM 2011), P26, DOI 10.1109/IWSPM.2011.6046201
   Menezes J., 2008, PROC 5 EXPT SOFTWARE
   Mohebzada J. G., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P200, DOI 10.1109/ICSSP.2012.6225965
   Mujtaba S., SOFTWARE PRODUCT LIN
   Munoz L., 2011, LATIN AM T IEEE REV, V9, P358
   Murugesupillai E., 2011, P 15 INT SOFTW PROD, V2, P11
   Nakagawa E. Y., 2010, P 2010 ICSE WORKSH S, P29
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Petersen K., EMPIRICAL SOFTW ENG
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Pretorius R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P342
   Qadir M. M., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P269, DOI 10.1109/MySEC.2011.6140682
   Saraiva Juliana, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P253, DOI 10.1049/ic.2012.0033
   Sharma Abhishek, 2012, 2012 IEEE Eighth World Congress on Services, P346, DOI 10.1109/SERVICES.2012.21
   Shippey T., MAPPING STUDY SOFTWA
   Sousa Gomes Joas, 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P4, DOI 10.1109/SBES.2011.11
   Steinmacher I., COMPUTER SUPPORTED C
   Tahir A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P326, DOI 10.1109/ICSM.2012.6405289
   Ueda ET, 2012, IEEE LAT AM T, V10, P1243, DOI 10.1109/TLA.2012.6142468
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Wendler R, 2012, INFORM SOFTWARE TECH, V54, P1317, DOI 10.1016/j.infsof.2012.07.007
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
NR 97
TC 1247
Z9 1291
U1 16
U2 139
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2015
VL 64
BP 1
EP 18
DI 10.1016/j.infsof.2015.03.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ3EB
UT WOS:000355365100001
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Rebollo, O
   Mellado, D
   Fernández-Medina, E
   Mouratidis, H
AF Rebollo, Oscar
   Mellado, Daniel
   Fernandez-Medina, Eduardo
   Mouratidis, Haralambos
TI Empirical evaluation of a cloud computing information security
   governance framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information security governance; Case study; Cloud computing; Security
   governance framework; Cloud lifecycle
AB Context: Cloud computing is a thriving paradigm that supports an efficient way to provide IT services by introducing on-demand services and flexible computing resources. However, significant adoption of cloud services is being hindered by security issues that are inherent to this new paradigm. In previous work, we have proposed ISGcloud, a security governance framework to tackle cloud security matters in a comprehensive manner whilst being aligned with an enterprise's strategy.
   Objective: Although a significant body of literature has started to build up related to security aspects of cloud computing, the literature fails to report on evidence and real applications of security governance frameworks designed for cloud computing environments. This paper introduces a detailed application of ISGCloud into a real life case study of a Spanish public organisation, which utilises a cloud storage service in a critical security deployment.
   Method: The empirical evaluation has followed a formal process, which includes the definition of research questions previously to the framework's application. We describe ISGcloud process and attempt to answer these questions gathering results through direct observation and from interviews with related personnel.
   Results: The novelty of the paper is twofold: on the one hand, it presents one of the first applications, in the literature, of a cloud security governance framework to a real-life case study along with an empirical evaluation of the framework that proves its validity; on the other hand, it demonstrates the usefulness of the framework and its impact to the organisation.
   Conclusion: As discussed on the paper, the application of ISGCloud has resulted in the organisation in question achieving its security governance objectives, minimising the security risks of its storage service and increasing security awareness among its users. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Rebollo, Oscar] Minist Labour & Social Secur, Social Secur IT Management, Madrid 28041, Spain.
   [Mellado, Daniel] Spanish Tax Agcy, Large Taxpayers Dept, IT Auditing Unit, Madrid 28045, Spain.
   [Fernandez-Medina, Eduardo] Univ Castilla La Mancha, Dept Informat Technol & Syst, GSyA Res Grp, E-13071 Ciudad Real, Spain.
   [Mouratidis, Haralambos] Univ Brighton, Sch Comp Engn & Math, Secure & Dependable Software Syst Res Cluster, Brighton BN2 4GJ, E Sussex, England.
C3 Universidad de Castilla-La Mancha; University of Brighton
RP Rebollo, O (corresponding author), Minist Labour & Social Secur, Social Secur IT Management, Doctor Tolosa Latour S-N, Madrid 28041, Spain.
EM orebollo@gmail.com; damefe@esdebian.org; Eduardo.FdezMedina@uclm.es;
   h.mouratidis@brighton.ac.uk
RI Rosado, David G./L-8221-2014; Fernandez-Medina, Eduardo/D-4648-2011
OI Rosado, David G./0000-0003-4613-5501; Mouratidis,
   Haralambos/0000-0002-2599-0712; Fernandez-Medina,
   Eduardo/0000-0003-2553-9320
FU Consejeria de Educacion, Ciencia y Cultura de la Junta de Comunidades de
   Castilla La Mancha; Fondo Europeo de Desarrollo Regional FEDER
   [PEII11-0327-7035, TIN2012-36904]; Ministerio de Economia y
   Competitividad
FX This research has been funded by the SERENIDAD project (Consejeria de
   Educacion, Ciencia y Cultura de la Junta de Comunidades de Castilla La
   Mancha and Fondo Europeo de Desarrollo Regional FEDER, PEII11-0327-7035)
   and by the SIGMA-CC project (Ministerio de Economia y Competitividad and
   Fondo Europeo de Desarrollo Regional FEDER, TIN2012-36904).
CR Abbadi I.M., 2012, INT J INF SECUR, P1
   [Anonymous], 2012, UNL POT CLOUD COMP E
   [Anonymous], SOC INF ESP 2011
   [Anonymous], 2008, 385002008 ISOIEC
   [Anonymous], 2009, SEC GUID CRIT AR FOC
   [Anonymous], 2005, 270012005 ISOIEC
   Avanade, 2011, 3 AV
   Bisong A., 2011, International Journal of Network Security and Its Application (IJNSA), V3, P30, DOI [10.5121/ijnsa.2011.3103, DOI 10.5121/IJNSA.2011.3103]
   Bradshaw D., 2012, QUANTITATIVE ESTIMAT
   Catteddu D., 2009, CLOUD COMPUTING SECU
   Chen Y., 2010, U CALIFORNIA BERKELE, P2010
   Chen Y, 2012, J MANAGE INFORM SYST, V29, P157, DOI 10.2753/MIS0742-1222290305
   Crampton J, 2011, INT J INF SECUR, V10, P137, DOI 10.1007/s10207-011-0123-8
   Gartner, 2012, GARTN HYP CYCL CLOUD
   Graydon PJ, 2013, INFORM SOFTWARE TECH, V55, P1551, DOI 10.1016/j.infsof.2013.02.008
   Hamlen K, 2010, INT J INF SECUR PRIV, V4, P36, DOI 10.4018/jisp.2010040103
   Tran H, 2012, INFORM SOFTWARE TECH, V54, P531, DOI 10.1016/j.infsof.2012.01.001
   ISACA, 2011, IT CONTR OBJ CLOUD C
   ISO/IEC, 27014 ISOIEC
   ISO/IEC, 27036 ISOIEC
   ITGI, 2012, CONTR OBJ INF REL TE
   Varela-Vaca AJ, 2013, INFORM SOFTWARE TECH, V55, P1948, DOI 10.1016/j.infsof.2013.05.007
   Ko R. K. L., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P584, DOI 10.1109/SERVICES.2011.91
   Kundra V., 2011, Federal Cloud Computing Strategy
   Mell P. M., 2011, 800145 SP NAT I STAN
   Mellado D, 2013, ADV INF SECUR PRIV, P1, DOI 10.4018/978-1-4666-2083-4
   Mellado D, 2010, INFORM SOFTWARE TECH, V52, P1094, DOI 10.1016/j.infsof.2010.05.007
   *OMG, 2008, SOFTW SYST PROC ENG
   Pew Research Center, 2011, GLOB DIG COMM TEXT
   Rebollo O, 2013, WOSIS: PROCEEDINGS OF THE 10TH INTERNATIONAL WORKSHOP ON SECURITY IN INFORMATION SYSTEMS, P24, DOI 10.5220/0004601400240033
   Rebollo O, 2012, J UNIVERS COMPUT SCI, V18, P798
   Rebollo O, 2011, WOSIS 2011: SECURITY IN INFORMATION SYSTEMS, P3
   Rebollo O, 2011, PROCEEDINGS OF THE 11TH EUROPEAN CONFERENCE ON EGOVERNMENT, P482
   Rong CM, 2013, COMPUT ELECTR ENG, V39, P47, DOI 10.1016/j.compeleceng.2012.04.015
   Rosado DG, 2012, FUTURE INTERNET, V4, P469, DOI 10.3390/fi4020469
   Rosado DG, 2010, INFORM SOFTWARE TECH, V52, P517, DOI 10.1016/j.infsof.2010.01.002
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saripalli P., 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P280, DOI 10.1109/CLOUD.2010.22
   Subashini S, 2011, J NETW COMPUT APPL, V34, P1, DOI 10.1016/j.jnca.2010.07.006
   Verner J.M., 2011, INF SOFTW TECHNOL, V54, P866
   VonSolms R, 2009, INFORMATION SECURITY GOVERNANCE, P1, DOI 10.1007/978-0-387-79984-1
   Zhu Y, 2012, J SYST SOFTWARE, V85, P1083, DOI 10.1016/j.jss.2011.12.024
NR 42
TC 38
Z9 58
U1 0
U2 70
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 44
EP 57
DI 10.1016/j.infsof.2014.10.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cazzola, W
   Marchetto, A
AF Cazzola, Walter
   Marchetto, Alessandro
TI A concern-oriented framework for dynamic measurements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software measurements and metrics; Static and dynamic software artifact
   analysis; Software feature and concern
ID COUPLING MEASUREMENT; METRICS
AB Evolving software programs requires that software developers reason quantitatively about the modularity impact of several concerns, which are often scattered over the system. To this respect, concern-oriented software analysis is rising to a dominant position in software development. Hence, measurement techniques play a fundamental role in assessing the concern modularity of a software system. Unfortunately, existing measurements are still fundamentally module-oriented rather than concern-oriented. Moreover, the few available concern-oriented metrics are defined in a non-systematic and shared way and mainly focus on static properties of a concern, even if many properties can only be accurately quantified at runtime. Hence, novel concern-oriented measurements and, in particular, shared and systematic ways to define them are still welcome. This paper poses the basis for a unified framework for concern-driven measurement. The framework provides a basic terminology and criteria for defining novel concern metrics. To evaluate the framework feasibility and effectiveness, we have shown how it can be used to adapt some classic metrics to quantify concerns and in particular to instantiate new dynamic concern metrics from their static counterparts. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Cazzola, Walter] Univ Milan, Dept Comp Sci, I-20122 Milan, Italy.
   [Marchetto, Alessandro] Fdn Bruno Kessler, Trento, Italy.
C3 University of Milan; Fondazione Bruno Kessler
RP Cazzola, W (corresponding author), Univ Milan, Dept Comp Sci, I-20122 Milan, Italy.
EM cazzola@di.unimi.it; alex.marchetto@gmail.com
RI Cazzola, Walter/AAA-3953-2019; Marchetto, Alessandro/AAE-4179-2022
OI Cazzola, Walter/0000-0002-4652-8113; Marchetto,
   Alessandro/0000-0002-6833-896X
FU MIUR project CINA: Compositionality, Interaction, Negotiation,
   Autonomicity for the future ICT society
FX The authors wish to thank Alessandro Garcia, Eduardo Figueiredo and
   Thiago Bartolomei for their precious help on defining the static version
   of this framework. Moreover, the authors wish to thank the anonymous
   reviewers for their insights that helped to improve the scientific
   content and presentation of this work. Walter Cazzola's work has been
   partially supported by the MIUR project CINA: Compositionality,
   Interaction, Negotiation, Autonomicity for the future ICT society.
CR AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   [Anonymous], INT ARAB J INFORM TE
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Batory D, 2003, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2003.1201199
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P246, DOI 10.1109/METRIC.1998.731251
   BROWN NR, 1993, PSYCHOL REV, V100, P511, DOI 10.1037/0033-295X.100.3.511
   Buckner J, 2005, PROG COMPREHEN, P149, DOI 10.1109/WPC.2005.22
   Cazzola W, 2008, J OBJECT TECHNOL, V7, P53, DOI 10.5381/jot.2008.7.2.a3
   Cohen J., 1988, STAT POWER ANAL BEHA
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Conejero JM, 2012, INFORM SOFTWARE TECH, V54, P212, DOI 10.1016/j.infsof.2011.09.003
   Ducasse S, 2006, PROC IEEE INT CONF S, P203
   Dufour B, 2004, ACM SIGPLAN NOTICES, V39, P150, DOI 10.1145/1035292.1028990
   Dufour B, 2003, ACM SIGPLAN NOTICES, V38, P149, DOI 10.1145/949343.949320
   Eaddy M., 2007, P 1 INT WORKSH ASS C
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Figueiredo E., 2008, P 30 INT C SOFTW ENG
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Filho F.C., 2006, INT C FDN SOFTWARE E, P152
   Franch X, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P348
   Geetika Rani, 2014, ACM SIGSOFT Software Engineering Notes, V39, P1, DOI [10.1145/2557833.2557847, DOI 10.1145/2557833.2557847]
   Genero M, 2003, LECT NOTES COMPUT SC, V2814, P118
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Gupta V, 2011, J SYST ARCHITECT, V57, P452, DOI 10.1016/j.sysarc.2010.05.008
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heumann Jim., 2001, The Rational Edge, V6
   HOCKING RR, 1976, BIOMETRICS, V32, P1, DOI 10.2307/2529336
   Jacquet JP, 1997, THIRD IEEE INTERNATIONAL SOFTWARE ENGINEERING STANDARDS SYMPOSIUM AND FORUM (ISESS 97) - EMERGING INTERNATIONAL STANDARDS, PROCEEDINGS, P128, DOI 10.1109/SESS.1997.595954
   Kan S. H., 2003, METRICS MODELS SOFTW
   Kaur A., 2009, WORLD ACAD SCI ENG T, V36
   Kaur A., 2009, International Journal of Engineering Science and Technology 1, V3, P166
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Lopez-Herrejon RE, 2007, LECT NOTES COMPUT SC, V4422, P423
   Marchetto A., 2005, INFOCOMP Journal of Computer Science, V4, P11
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Marin M, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314496
   Martin RC, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.24
   Massol Vincent., 2003, JUNIT ACTION
   Mcfadden D., 1978, BEHAV TRAVEL MODELLI, P279, DOI [DOI 10.4324/9781003156055-18, 10.4324/9781003156055-18]
   McKeown K.A., 2000, P 33 HAW INT C SYST, P4046
   Mitchell A., 2003, P 7 ECOOP WORKSH QUA
   Mouchawrab S, 2005, INFORM SOFTWARE TECH, V47, P979, DOI 10.1016/j.infsof.2005.09.003
   Nelder J.A., 2001, J ROY STAT SOC, V135, P370
   Pearce DJ, 2007, SOFTWARE PRACT EXPER, V37, P747, DOI 10.1002/spe.788
   Ponmuthuramalingam P., 2011, INT J COMPUT TECHNOL, V1, P43
   Revelle M, 2005, PROG COMPREHEN, P23, DOI 10.1109/WPC.2005.43
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sant'Anna C., 2003, P BRAZILIAN S SOFTWA, P19
   Savage T., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P255, DOI 10.1145/1810295.1810345
   Seffah A, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P311, DOI 10.1109/APAQS.2001.990036
   Soni D., 2009, International Journal of Computer Science and Information Security, V6, P46
   Tahir A., 2012, P 28 IEEE INT C SOFT
   Talbi T, 2001, TOOLS, V39, P164, DOI 10.1109/TOOLS.2001.941670
   Taveira J.C., 2009, P OOPSLA WORKSH ASS
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wong WE, 2000, J SYST SOFTWARE, V54, P87, DOI 10.1016/S0164-1212(00)00029-7
   Yacoub S. M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P50, DOI 10.1109/METRIC.1999.809725
NR 67
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 32
EP 51
DI 10.1016/j.infsof.2014.08.006
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jiménez-Ramírez, A
   Weber, B
   Barba, I
   Del Valle, C
AF Jimenez-Ramirez, Andres
   Weber, Barbara
   Barba, Irene
   Del Valle, Carmelo
TI Generating optimized configurable business process models in scenarios
   subject to uncertainty
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Configurable business process models; Constraint-based business process
   models; Flexibility; Robustness; Planning and scheduling; Constraint
   programming
ID PROCESS MANAGEMENT; FLEXIBILITY; CONSTRAINTS; DEFINITION;
   RECOMMENDATIONS; IDENTIFICATION; DISTRIBUTIONS; ALGORITHMS
AB Context: The quality of business process models (i.e., software artifacts that capture the relations between the organizational units of a business) is essential for enhancing the management of business processes. However, such modeling is typically carried out manually. This is already challenging and time consuming when (1) input uncertainty exists, (2) activities are related, and (3) resource allocation has to be considered. When including optimization requirements regarding flexibility and robustness it becomes even more complicated potentially resulting into non-optimized models, errors, and lack of flexibility.
   Objective: To facilitate the human work and to improve the resulting models in scenarios subject to uncertainty, we propose a software-supported approach for automatically creating configurable business process models from declarative specifications considering all the aforementioned requirements.
   Method: First, the scenario is modeled through a declarative language which allows the analysts to specify its variability and uncertainty. Thereafter, a set of optimized enactment plans (each one representing a potential execution alternative) are generated from such a model considering the input uncertainty. Finally, to deal with this uncertainty during run-time, a flexible configurable business process model is created from these plans.
   Results: To validate the proposed approach, we conduct a case study based on a real business which is subject to uncertainty.Results indicate that our approach improves the actual performance of the business and that the generated models support most of the uncertainty inherent to the business.
   Conclusions: The proposed approach automatically selects the best part of the variability of a declarative specification. Unlike existing approaches, our approach considers input uncertainty, the optimization of multiple objective functions, as well as the resource and the control-flow perspectives. However, our approach also presents a few limitations: (I) it is focused on the control-flow and the data perspective is only partially addressed and (2) model attributes need to be estimated. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Jimenez-Ramirez, Andres; Barba, Irene; Del Valle, Carmelo] Univ Seville, Dpto Lenguajes & Sistemas Informat, Seville, Spain.
   [Weber, Barbara] Univ Innsbruck, Dept Comp Sci, A-6020 Innsbruck, Austria.
C3 University of Sevilla; University of Innsbruck
RP Jiménez-Ramírez, A (corresponding author), Univ Seville, Dpto Lenguajes & Sistemas Informat, Seville, Spain.
EM ajramirez@us.es; barbara.weber@uibk.ac.at; irenebr@us.es; carmelo@us.es
RI Ramirez, Andres Jimenez/G-6351-2010; Barba, Irene/K-5453-2014; Del Valle
   Sevillano, Carmelo/L-4202-2014
OI Ramirez, Andres Jimenez/0000-0001-8657-992X; Weber,
   Barbara/0000-0002-6004-4860; Barba, Irene/0000-0002-8933-8731; Del Valle
   Sevillano, Carmelo/0000-0003-0155-4841
FU Spanish Ministerio de Ciencia e Innovacion [TIN2009-13714]; European
   Regional Development Fund (ERDF/FEDER)
FX This work has been partially funded by the Spanish Ministerio de Ciencia
   e Innovacion (TIN2009-13714) and the European Regional Development Fund
   (ERDF/FEDER).
CR Aaker D.A., 1994, CALIFORNIA MANAGE RE, V5, P72
   ABOURIZK SM, 1994, J CONSTR ENG M ASCE, V120, P288, DOI 10.1061/(ASCE)0733-9364(1994)120:2(288)
   Aissi H, 2010, INT SER OPER RES MAN, V142, P87, DOI 10.1007/978-1-4419-5904-1_4
   [Anonymous], J COMPUTER SCI
   [Anonymous], 2011, Business process model and notation (bpmn)
   [Anonymous], LEAD TIM TRANS 2010
   [Anonymous], 1977, PROCESS SPECIFICATIO
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Athan TW, 1996, ENG OPTIMIZ, V27, P155, DOI 10.1080/03052159608941404
   Back WE, 2000, J CONSTR ENG M ASCE, V126, P29, DOI 10.1061/(ASCE)0733-9364(2000)126:1(29)
   Barba I., 2011, P COPLAS, P55
   Barba I., 2011, P BPI
   Barba I, 2012, LECT NOTES BUS INF P, V113, P195
   Barba I, 2013, INT J COOP INF SYST, V22, DOI 10.1142/S0218843013500093
   Barba I, 2013, DATA KNOWL ENG, V86, P61, DOI 10.1016/j.datak.2013.01.004
   Barták R, 2010, T I MEAS CONTROL, V32, P73, DOI 10.1177/0142331208100099
   Brereton P., 2008, P EASE 2008 BCS EWIC
   Brucker P, 2006, GOR-PUBL, P1, DOI 10.1007/3-540-29546-1
   Carlson JM, 2002, P NATL ACAD SCI USA, V99, P2538, DOI 10.1073/pnas.012582499
   Chankong V, 2008, Multiobjective Decision Making Theory and Methodology
   Chesani F, 2009, LECT NOTES COMPUT SC, V5460, P278
   Cicerone S, 2012, INFORM SCIENCES, V190, P107, DOI 10.1016/j.ins.2011.12.010
   Das I, 1997, STRUCT OPTIMIZATION, V14, P63, DOI 10.1007/BF01197559
   de Haan J, 2011, FUTURES, V43, P923, DOI 10.1016/j.futures.2011.06.002
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Dourish P., 1996, CSCW '96, P190
   Dynadec, 2013, COM DOWNL
   Ehrgott M., 2002, International Series in Operations Research & Management Science, V2, DOI [10.1007/b101915, DOI 10.1007/B101915]
   EPPINK DJ, 1978, LONG RANGE PLANN, V11, P9
   Fargier Dubois H., 1993, P IJCAI 93 SIGMAN WO
   Fente J, 2000, J CONSTR ENG M ASCE, V126, P234, DOI 10.1061/(ASCE)0733-9364(2000)126:3(234)
   Ferreira HM, 2006, INT J COOP INF SYST, V15, P485, DOI 10.1142/S0218843006001463
   Gantt Henry Laurence, 1913, Work, wages, and profits
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Ghallab M., 2004, AUTOMATED PLANNING T
   Golden W, 2000, OMEGA-INT J MANAGE S, V28, P373, DOI 10.1016/S0305-0483(99)00057-2
   Gottschalk F, 2008, INT J COOP INF SYST, V17, P177, DOI 10.1142/S0218843008001798
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   HAIMES YY, 1971, IEEE T SYST MAN CYB, VSMC1, P296
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Hummer W, 2013, INFORM SOFTWARE TECH, V55, P1884, DOI 10.1016/j.infsof.2013.05.001
   Jensen M. T., 2001, Applied Soft Computing, V1, P35, DOI 10.1016/S1568-4946(01)00005-9
   Jensen MT, 2003, IEEE T EVOLUT COMPUT, V7, P275, DOI 10.1109/TEVC.2003.810067
   Jimenez-Ramirez Andres, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P99, DOI 10.1007/978-3-642-38709-8_7
   Jimenez-Ramirez A., 2012, P ISD, P429
   Karim A, 2013, BUS PROCESS MANAG J, V19, P169, DOI 10.1108/14637151311294912
   KOSKI J, 1985, COMMUN APPL NUMER M, V1, P333, DOI 10.1002/cnm.1630010613
   Kumar A, 2012, COMPUT IND, V63, P112, DOI 10.1016/j.compind.2011.12.002
   Shukla PK, 2007, EUR J OPER RES, V181, P1630, DOI 10.1016/j.ejor.2006.08.002
   La Rosa M, 2011, INFORM SYST, V36, P313, DOI 10.1016/j.is.2010.07.001
   La Rosa Marcello, 2012, ACM T SOFTWARE ENG M
   La Rosa Marcello, 2008, HDB RES BUSINESS PRO
   Laborie P., 2009, REASONING CONDITIO 2
   Lamma E, 2007, LECT NOTES COMPUT SC, V4714, P344
   LAROSA M, 2010, 18 INT C COOP INF SY, V6426, P96
   Laumanns M, 2006, EUR J OPER RES, V169, P932, DOI 10.1016/j.ejor.2004.08.029
   LEITMANN G, 1977, J OPTIMIZ THEORY APP, V23, P93, DOI 10.1007/BF00932299
   Lu R., 2006, P 17 AUSTR DAT C, V49, P157
   Lu RP, 2009, DATA KNOWL ENG, V68, P642, DOI 10.1016/j.datak.2009.02.009
   Ly LT, 2008, DATA KNOWL ENG, V64, P3, DOI 10.1016/j.datak.2007.06.007
   Maio C, 2000, J CONSTR ENG M ASCE, V126, P285, DOI 10.1061/(ASCE)0733-9364(2000)126:4(285)
   Marsans M.A., 1995, WILEY SERIES PARALLE
   Mendling J, 2007, LECT NOTES COMPUT SC, V4803, P113
   Messac A, 2000, OPTIM ENG, V1, P171, DOI 10.1023/A:1010035730904
   Montali M., 2013, P 28 ANN ACM S APPL, P1391
   Montali M., 2009, THESIS U BOLOGNA
   Montali M, 2010, ACM T WEB, V4, DOI 10.1145/1658373.1658376
   Pesic M, 2007, LECT NOTES COMPUT SC, V4803, P77
   Pesic M., 2008, THESIS EINDHOVEN U T
   Reijers H.A., 2003, DESIGN CONTROL WORKF
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Sadiq SW, 2005, INFORM SYST, V30, P349, DOI 10.1016/j.is.2004.05.002
   Salido MA, 2010, J INTELL MANUF, V21, P1, DOI 10.1007/s10845-008-0188-z
   Schnieders A., 2006, 9 INT C BUSINESS INF, P583
   Schonenberg H, 2008, LECT NOTES COMPUT SC, V5240, P51, DOI 10.1007/978-3-540-85758-7_7
   Schonenberg H, 2008, LECT NOTES BUS INF, V10, P16
   Schunselaar D. M. M., 2012, PROC OTM CONFEDERATE, P20
   Shah R, 2003, J OPER MANAG, V21, P129, DOI 10.1016/S0272-6963(02)00108-0
   Smith KI, 2008, IEEE T EVOLUT COMPUT, V12, P323, DOI 10.1109/TEVC.2007.904345
   Souki M., 2011, Journal of Applied Operational Research, V3, P177
   Stadler W., 1995, MICROCOMPUT CIV ENG, V10, P291
   Stevenson M, 2007, INT J OPER PROD MAN, V27, P685, DOI 10.1108/01443570710756956
   Suman B, 2004, COMPUT CHEM ENG, V28, P1849, DOI 10.1016/j.compchemeng.2004.02.037
   Sun CA, 2008, LECT NOTES COMPUT SC, V5030, P257, DOI 10.1007/978-3-540-68073-4_25
   UPTON DM, 1994, CALIF MANAGE REV, V36, P72, DOI 10.2307/41165745
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V3812, P512
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   van der Krogt R, 2010, J SCHEDULING, V13, P301, DOI 10.1007/s10951-009-0144-6
   Vullings LAE, 2013, APPL SPAT ANAL POLIC, V6, P25, DOI 10.1007/s12061-012-9076-1
   Wainer J, 2003, LECT NOTES COMPUT SC, V2806, P151
   Weber B., 2012, ENABLING FLEXIBILITY
   Westergaard Michael, 2012, MOVE MEANINGFUL INTE, P250
   Zeleny M., 1982, MULTIPLE CRITERIA DE
   Zilberstein S, 1996, AI MAG, V17, P73
NR 96
TC 20
Z9 20
U1 1
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 571
EP 594
DI 10.1016/j.infsof.2014.06.006
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500032
OA Green Published
DA 2024-07-18
ER

PT J
AU Uzunov, AV
   Falkner, K
   Fernandez, EB
AF Uzunov, Anton V.
   Falkner, Katrina
   Fernandez, Eduardo B.
TI A comprehensive pattern-oriented approach to engineering security
   methodologies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Secure software engineering; Security methodologies; Method engineering;
   Process patterns; Software security; Modeling
ID DISTRIBUTED SYSTEMS; SOFTWARE; REQUIREMENTS; MODEL; VERIFICATION;
   LANGUAGES
AB Context: Developing secure software systems is an issue of ever-growing importance. Researchers have generally come to acknowledge that to develop such systems successfully, their security features must be incorporated in the context of a systematic approach: a security methodology. There are a number of such methodologies in the literature, but no single security methodology is adequate for every situation, requiring the construction of "fit-to-purpose" methodologies or the tailoring of existing methodologies to the project specifics at hand. While a large body of research exists addressing the same requirement for development methodologies - constituting the field of Method Engineering - there is nothing comparable for security methodologies as such; in fact, the topic has never been studied before in such a context.
   Objective: In this paper we draw inspiration from a number of Method Engineering ideas and fill the latter gap by proposing a comprehensive approach to engineering security methodologies.
   Method: Our approach is embodied in three interconnected parts: a framework of interrelated security process patterns; a security-specific meta-model; and a meta-methodology to guide engineers in using the latter artefacts in a step-wise fashion. A UML-inspired notation is used for representing all pattern-based methodology models during design and construction. The approach is illustrated and evaluated by tailoring an existing, real-life security methodology to a distributed-system-specific project situation.
   Results: The paper proposes a novel pattern-oriented approach to modeling, constructing, tailoring and combining security methodologies, which is the very first and currently sole such approach in the literature. We illustrate and evaluate our approach in an academic setting, and perform a feature analysis to highlight benefits and deficiencies.
   Conclusion: Using our proposal, developers, architects and researchers can analyze and engineer security methodologies in a structured, systematic fashion, taking into account all security methodology aspects. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Uzunov, Anton V.; Falkner, Katrina] Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
   [Fernandez, Eduardo B.] Florida Atlantic Univ, Dept Comp & Elect Engn & Comp Sci, Boca Raton, FL 33431 USA.
C3 University of Adelaide; State University System of Florida; Florida
   Atlantic University
RP Uzunov, AV (corresponding author), Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
EM anton.uzunov@adelaide.edu.au; katrina.falkner@adelaide.edu.au;
   ed@cse.fau.edu
RI Fernandez, Eduardo Buglioni/AFR-8834-2022
OI Fernandez, Eduardo Buglioni/0000-0002-5109-4591; Falkner,
   Katrina/0000-0003-0309-4332
CR Abadi M, 2005, SCI COMPUT PROGRAM, V58, P3, DOI 10.1016/j.scico.2005.02.002
   Ambler S W., 1998, Process patterns. Building large-scale systems using object technology
   Anderson R., 2008, Security engineering, V2nd
   [Anonymous], 451 U HAG FAC BUS AD
   [Anonymous], 2008, Metamodelling for software engineering
   [Anonymous], 2007, PATTERN ORIENTED SOF
   [Anonymous], 1996, PATTERN ORIENTED SOF
   [Anonymous], P 2 WORKSH SOFTW ENG
   [Anonymous], J ACCOUNT MANAGE INF
   [Anonymous], 2000, P C FUTURE SOFTWARE, DOI DOI 10.1145/336512.336559
   [Anonymous], 2009, OBJECT ORIENTED SOFT
   [Anonymous], 2005, Secure Systems Development with UML
   Asadi Mohsen, 2010, Proceedings 8th ACIS International Conference on Software Engineering Research, Management and Applications (SERA 2010), P190, DOI 10.1109/SERA.2010.32
   Asadi M, 2009, STUD COMPUT INTELL, V253, P277, DOI 10.1007/978-3-642-05441-9_24
   Baldassarre MT, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P103, DOI 10.1109/ISESE.2002.1166930
   BASKERVILLE R, 1996, PRINCIPLES METHOD CO, P8
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Birkmeier D.Q., 2010, PROCEEDING 18 EUROPE, P51
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Brinkkemper S, 1998, LECT NOTES COMPUT SC, V1413, P381, DOI 10.1007/BFb0054236
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cabot J., 2008, P 1 MOD SEC WORKSH S
   Cervera M, 2011, IFIP ADV INF COMM TE, V351, P138
   Chahar C, 2012, INF SECUR J, V21, P346, DOI 10.1080/19393555.2012.727132
   Chen Y., 2007, P ANN HAWAII INT C S, p280a
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Datta Anupam., 2003, FMSE 03, P11
   Delessy NA, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P416, DOI 10.1109/ARES.2008.89
   Deneckère R, 2002, LECT NOTES COMPUT SC, V2425, P124
   Dittmann T., 2002, P 1 WORKSH PROC PATT
   Dong J, 2010, INFORM SOFTWARE TECH, V52, P274, DOI 10.1016/j.infsof.2009.10.001
   Dowd M., 2007, ART SOFTW SECURITY A
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Engels G, 2010, LECT NOTES COMPUT SC, V5765, P411, DOI 10.1007/978-3-642-17322-6_18
   Fahmideh M., 2011, P 5 INT C RES CHALLE, P1
   Fernandez E. B., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P837, DOI 10.1109/DEXA.1999.795291
   Fernandez EB, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P107
   Fernandez E.B., 2012, LNCS, V7672, P470
   Fernandez EB, 2000, LECT NOTES COMPUT SC, V1920, P183
   FERNANDEZ EB, 2003, P CHILIPLOP 2003
   Fernandez EB, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P566, DOI 10.1109/ARES.2009.139
   Fernandez Eduardo B, 2011, Software Engineering for Secure Systems: Industrial and Research Perspectives, P16
   Fernández-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   Fernández-Medina E, 2009, INFORM SOFTWARE TECH, V51, P809, DOI 10.1016/j.infsof.2008.05.010
   Firesmith D.G., 2002, OPEN PROCESS FRAMEWO
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   García-Borgoñón L, 2014, INFORM SOFTWARE TECH, V56, P103, DOI 10.1016/j.infsof.2013.10.001
   Gholami M. F., 2010, Proceedings 2010 UKSim 4th European Modelling Symposium on Computer Modelling and Simulation (EMS 2010), P75, DOI 10.1109/EMS.2010.24
   Ghosh AK, 2002, IEEE SOFTWARE, V19, P14, DOI 10.1109/MS.2002.976936
   Gnatz M., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P326
   Gnatz M., 2003, SOFTW QUAL PROFESS, V5, P1
   Gupta D., 2001, Requirements Engineering, V6, P135, DOI 10.1007/s007660170001
   Gutiérrez C, 2009, INFORM SOFTWARE TECH, V51, P1712, DOI 10.1016/j.infsof.2009.05.004
   Hagen M., 2004, 3 IASTED C SOFTW ENG, P436
   Harmsen A. F., 1997, SITUATIONAL METHOD E
   Hellstrom P., 2009, THESIS LINKOPING U
   Henderson-Sellers B, 2004, J UNIVERS COMPUT SCI, V10, P326
   Henderson-Sellers B, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P479, DOI 10.1109/ASWEC.2008.67
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Henderson-Sellers Brian., 2005, AGENT ORIENTED METHO
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Howard M., 2006, SECURITY DEV LIFECYC
   Huang HY, 2003, IEEE SYS MAN CYBERN, P1353
   Hug C, 2009, J SYST SOFTWARE, V82, P1730, DOI 10.1016/j.jss.2009.05.020
   Alegría JAH, 2014, J SOFTW-EVOL PROC, V26, P386, DOI 10.1002/smr.1576
   Jeusfeld M., 2009, METAMODELING METHOD
   Jeusfeld MA, 2011, IFIP ADV INF COMM TE, V351, P123
   Jürjens J, 2005, PROC INT CONF SOFTW, P322
   Kara Mehmet, 2012, International Journal of Computer Science & Information Technology, V4, P83, DOI 10.5121/ijcsit.2012.4207
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Khaari Massood, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P241, DOI 10.1109/ECBS.2010.33
   Khan Muhammad Umair Ahmed, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P399, DOI 10.1109/CSE.2009.383
   Khan R, 2011, COMPUT FRAUD SECUR, P12, DOI 10.1016/S1361-3723(11)70083-5
   Kitchenham B., 1996, DESMET: A method for evaluating Software Engineering methods and tools
   Kitchenham B. A., 1997, Software Engineering Notes, V22, P13, DOI 10.1145/251759.251790
   Knapp K.J., 2009, HDB RES MODERN SYSTE, P295
   Kneuper R, 1998, LECT NOTES COMPUT SC, V1487, P111
   Kolfschoten GL, 2011, LECT NOTES COMPUT SC, V6510, P62, DOI 10.1007/978-3-642-19432-0_4
   Liu Y, 2005, LECT NOTES COMPUT SC, V3450, P31
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Low G, 2010, J OBJECT TECHNOL, V9, P93, DOI 10.5381/jot.2010.9.4.a5
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   McGraw G., 2006, Software security: building security in
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Mellado D, 2010, INFORM SOFTWARE TECH, V52, P1094, DOI 10.1016/j.infsof.2010.05.007
   Miede A, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P430, DOI 10.1109/ARES.2010.17
   Moral-Garcia S., 2014, SECUR COMM IN PRESS
   Moral-García S, 2014, COMPUT STAND INTER, V36, P748, DOI 10.1016/j.csi.2013.12.009
   Mouratidis H, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P1
   Mouratidis H., 2009, INT J COMPUT SCI SEC, V3, P241
   Nehan YR, 2007, INT FED INFO PROC, V244, P161
   ODELL JJ, 1996, P IFIP TC8 WG8 1 8 2, P1
   Oladimeji EA, 2006, PROCEEDINGS OF THE 10TH IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND APPLICATIONS, P178
   *OMG, 2008, SOFTW SYST PROC ENG
   Opdahl AL, 2009, INFORM SOFTWARE TECH, V51, P916, DOI 10.1016/j.infsof.2008.05.013
   Prakash N, 2006, REQUIR ENG, V11, P221, DOI 10.1007/s00766-005-0026-1
   Pressman R., 2009, Software Engineering: A Practitioner's Approach, V7th
   Ralyte J., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P267
   Ralyte J, 2004, PROCEEDINGS OF THE THIRTEENTH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS DEVELOPMENT: ADVANCES IN THEORY, PRACTICE AND EDUCATION, P271
   Ralyté J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Ralyte J., 2001, Procs. 20th International Conf erence Conceptual Modelling (ER2001), V2224, P471
   Ralyte J., 2004, LNCS, P695
   Ramsin R, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1322432.1322435
   Raspotnig C, 2013, J SYST SOFTWARE, V86, P1124, DOI 10.1016/j.jss.2012.12.002
   Rodríguez A, 2011, DECIS SUPPORT SYST, V51, P446, DOI 10.1016/j.dss.2011.01.018
   Rodríguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Rodriguez L.C., 2009, Handbook of Research on Modern Systems Analysis and Design Technologies and Applications, P76
   Rolland C, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P173, DOI 10.1109/ICRE.1996.491442
   Rolland C, 2009, FRONT ARTIF INTEL AP, V199, P22, DOI 10.3233/978-1-60750-049-0-22
   Rosado DG, 2010, INFORM SOFTWARE TECH, V52, P517, DOI 10.1016/j.infsof.2010.01.002
   Sadler C., 1996, Software Engineering Notes, V21, P11, DOI 10.1145/235969.235972
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Schumacher Markus., 2003, SECURITY ENG PATTERN
   Seidita V., 2007, CAISE 2007 FOR P, P85
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shin ME, 2007, SCI COMPUT PROGRAM, V66, P60, DOI 10.1016/j.scico.2006.10.009
   Smith S, 2011, ANN IEEE SYST CONF, P72
   Srivatanakul T, 2004, LECT NOTES COMPUT SC, V3225, P416
   Storrle H., 2001, Software Process Technology. 8th European Workshop, EWSPT 2001. Proceedings (Lecture Notes in Computer Science Vol.2077), P173
   Swiderski F., 2004, Threat modeling
   Taylor Richard N., 2010, Software Architecture-Foundations, Theory, and Practice.
   Tondel IA, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P438, DOI 10.1109/ARES.2010.101
   Tran Dan Thu, 2005, Software Process Improvement and Practice, V10, P217, DOI 10.1002/spip.217
   Tran H. N., 2007, P SEKE KNOWL SYST I, P57
   Tran H.N., 2007, IEEE P 2 INT C SOFTW, P15
   Tran HN, 2006, LECT NOTES COMPUT SC, V4034, P429
   Trujillo J, 2009, COMPUT STAND INTER, V31, P969, DOI 10.1016/j.csi.2008.09.040
   Trujillo J, 2009, INFORM SOFTWARE TECH, V51, P1033, DOI 10.1016/j.infsof.2008.12.003
   Uzunov A.V., SECURITY SOLUTION FR
   Uzunov AV, 2013, IEEE AUS SOFT ENGR, P30, DOI 10.1109/ASWEC.2013.14
   Uzunov AV, 2014, COMPUT STAND INTER, V36, P734, DOI 10.1016/j.csi.2013.12.008
   Uzunov AV, 2012, J UNIVERS COMPUT SCI, V18, P2920
   Uzunov AV, 2012, COMPUT SECUR, V31, P681, DOI 10.1016/j.cose.2012.04.005
   van de Weerd I., 2009, HDB RES MODERN SYSTE, P35
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   VANSLOOTEN K, 1996, P IFIP TC8 WORK C ME, P29
   Vela B, 2013, INFORM SOFTWARE TECH, V55, P1651, DOI 10.1016/j.infsof.2013.03.003
   Wagner R., 2011, P 23 INT C SOFTW ENG, P672
   Whyte B, 2011, SOFTWARE ENG SECURE, P1
   Xu DX, 2006, IEEE T SOFTWARE ENG, V32, P265, DOI 10.1109/TSE.2006.40
NR 144
TC 13
Z9 15
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 217
EP 247
DI 10.1016/j.infsof.2014.09.001
PG 31
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500014
DA 2024-07-18
ER

PT J
AU Zhao, YY
   Yang, YB
   Lu, HM
   Zhou, YM
   Song, QB
   Xu, BW
AF Zhao, Yangyang
   Yang, Yibiao
   Lu, Hongmin
   Zhou, Yuming
   Song, Qinbao
   Xu, Baowen
TI An empirical analysis of package-modularization metrics: Implications
   for software fault-proneness
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Modularization; Metrics; Package; Fault-proneness; Prediction;
   Object-oriented
ID DEFECT PREDICTION; QUALITY
AB Context: In a large object-oriented software system, packages play the role of modules which group related classes together to provide well-identified services to the rest of the system. In this context, it is widely believed that modularization has a large influence on the quality of packages. Recently, Sarkar, Kak, and Rama proposed a set of new metrics to characterize the modularization quality of packages from important perspectives such as inter-module call traffic, state access violations, fragile base-class design, programming to interface, and plugin pollution. These package-modularization metrics are quite different from traditional package-level metrics, which measure software quality mainly from size, extensibility, responsibility, independence, abstractness, and instability perspectives. As such, it is expected that these package-modularization metrics should be useful predictors for fault-proneness. However, little is currently known on their actual usefulness for fault-proneness prediction, especially compared with traditional package-level metrics.
   Objective: In this paper, we examine the role of these new package-modularization metrics for determining software fault-proneness in object-oriented systems.
   Method: We first use principal component analysis to analyze whether these new package-modularization metrics capture additional information compared with traditional package-level metrics. Second, we employ univariate prediction models to investigate how these new package-modularization metrics are related to fault-proneness. Finally, we build multivariate prediction models to examine the ability of these new package-modularization metrics for predicting fault-prone packages.
   Results: Our results, based on six open-source object-oriented software systems, show that: (I) these new package-modularization metrics provide new and complementary views of software complexity compared with traditional package-level metrics; (2) most of these new package-modularization metrics have a significant association with fault-proneness in an expected direction; and (3) these new package-modularization metrics can substantially improve the effectiveness of fault-proneness prediction when used with traditional package-level metrics together.
   Conclusions: The package-modularization metrics proposed by Sarkar, Kak, and Rama are useful for practitioners to develop quality software systems. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Zhao, Yangyang; Yang, Yibiao; Lu, Hongmin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Zhao, Yangyang; Yang, Yibiao; Lu, Hongmin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
   [Song, Qinbao] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian, Peoples R China.
C3 Nanjing University; Nanjing University; Xi'an Jiaotong University
RP Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
RI zhao, yang/GXF-4424-2022; zhao, yang/HTN-4320-2023; Yang,
   Yibiao/ABP-4159-2022; Xu, Baowen/IXW-4882-2023
OI Yang, Yibiao/0000-0003-1153-2013; Xu, Baowen/0000-0001-7743-1296
FU National Key Basic Research and Development Program of China
   [2014CB340702]; National Natural Science Foundation of China [91318301,
   61432001, 61321491, 61300051, 61272082]; National Natural Science
   Foundation of Jiangsu Province [BK20130014]
FX The authors would like to thank the editor and anonymous reviewers for
   very helpful suggestions in greatly improving the quality of this paper.
   The work in this paper is supported by the National Key Basic Research
   and Development Program of China (2014CB340702), the National Natural
   Science Foundation of China (91318301, 61432001, 61321491, 61300051,
   61272082), and the National Natural Science Foundation of Jiangsu
   Province (BK20130014).
CR Abdeen H., 2011, 2011 18th Working Conference on Reverse Engineering, P394, DOI 10.1109/WCRE.2011.55
   Alho P., COST EFFICIENT DESIG
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], P 6 INT C PRED MOD S
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2000, ICSE 00, DOI DOI 10.1145/336512.336551
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Azizienis A., 2001, 1145 LAASCNRS
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Belsley D. A., 2005, REGRESSION DIAGNOSTI
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   CLIFF N, 1988, PSYCHOL BULL, V103, P276, DOI 10.1037/0033-2909.103.2.276
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Elish MO, 2011, ADV ENG SOFTW, V42, P852, DOI 10.1016/j.advengsoft.2011.06.001
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kuo J., 2012, THESIS NATL CENTRAL
   Kutner M., 2004, HLTH ENV RES ONLINE, Vfourth
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Mende T., 2009, P 5 INT C PRED MOD S, P1
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Sarkar S, 2008, IEEE T SOFTWARE ENG, V34, P700, DOI 10.1109/TSE.2008.43
   Schein A. I., 2003, P MACH LEARN RES PML, V3, P10
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
NR 37
TC 18
Z9 19
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 186
EP 203
DI 10.1016/j.infsof.2014.09.006
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500012
DA 2024-07-18
ER

PT J
AU Mäntylä, MV
   Itkonen, J
AF Mantyla, Mika V.
   Itkonen, Juha
TI How are software defects found? The role of implicit defect detection,
   individual responsibility, documents, and knowledge
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Defect detection; Activities; Documents; Human
   factors; Industrial questionnaire study
ID DESIGN
AB Context: Prior research has focused heavily on explicit defect detection, such as formal testing and reviews. However, in reality, humans find software defects in various activities. Implicit defect detection activities, such as preparing a product demonstration or updating a user manual, are not designed for defect detection, yet through such activities defects are discovered. In addition, the type of documentation, and knowledge used, in defect detection is diverse.
   Objective: To understand how defect detection is affected by the perspectives of responsibility, activity, knowledge, and document use. To provide illustrative numbers concerning the multidimensionality of defect detection in an industrial context.
   Method: The data were collected with a survey on four software development organizations in three different companies. We designed the survey based on our prior extensive work with these companies.
   Results: We found that among our subjects (n = 105), implicit defect detection made a higher contribution than explicit defect detection in terms of found defects, 62% vs. 38%. We show that defect detection was performed by subjects in various roles supporting the earlier reports of testing being a cross-cutting activity in software development organizations. We found a low use of test cases (18%), but a high use of other documents in software defect detection, and furthermore, we found that personal knowledge was applied as an oracle in defect detection much more often than documented oracles. Finally, we recognize that contextual factors largely affect the transferability of our results, and we provide elaborate discussion about the most important contextual factors. Furthermore, we must be cautious as the results were obtained with a survey, and come from a small number of organizations.
   Conclusions: In this paper, we show the large impact of implicit defect detection activities in four case organizations. Implicit defect detection has a large contribution to defect detection in practice, and can be viewed as an extremely low-cost way of detecting defects. Thus, harnessing and supporting it better may increase quality without increasing costs. For example, if an employee can update the user manual, and simultaneously detect defects from the software, then the defect detection part of this activity can be seen as cost-free. Additionally, further research is needed on how diverse types of useful documentation and knowledge can be utilized in defect detection. (c) 2014 Elsevier B.V. All rights reserved.
C1 [Mantyla, Mika V.; Itkonen, Juha] Aalto Univ, Dept Comp Sci & Engn, Espoo, Finland.
C3 Aalto University
RP Mäntylä, MV (corresponding author), POB 15400, FI-00076 Aalto, Finland.
EM mika.mantyla@aalto.fi; juha.itkonen@aalto.fi
RI Mäntylä, Mika V/E-7644-2012; Itkonen, Juha/E-8360-2012
OI Mantyla, Mika/0000-0002-2841-5879; Itkonen, Juha/0000-0001-9084-495X
CR Ahonen JJ, 2004, EMPIR SOFTW ENG, V9, P275, DOI 10.1023/B:EMSE.0000039880.99096.af
   Andersson C, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P37, DOI 10.1109/ISESE.2002.1166923
   Andersson Carina, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P458
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Beer A, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P258, DOI 10.1109/SEAA.2008.28
   Berling T, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P226, DOI 10.1109/METRIC.2003.1232470
   Briand Lionel C., 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P1
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   Ciolkowski M, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1241366
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Cusumano M.A., 1995, MICROSOFT SECRETS
   DOLAN RJ, 1993, J PROD INNOVAT MANAG, V10, P318, DOI 10.1111/1540-5885.1040318
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Engström E, 2013, INFORM SOFTWARE TECH, V55, P581, DOI 10.1016/j.infsof.2012.04.009
   Fogelstrom N.D., 2007, WORKSH ENG REQ WER 0, P116
   Folstad A, 2010, INTERACT COMPUT, V22, P75, DOI 10.1016/j.intcom.2009.09.001
   Galletta F., 1993, Accounting, Management Information Technology, V3, P79, DOI [10.1016/0959-8022(93)90001-M, DOI 10.1016/0959-8022(93)90001-M]
   Glass RL, 2006, IEEE SOFTWARE, V23, P55, DOI 10.1109/MS.2006.113
   Glerum K, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P103
   Grechanik M., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P149, DOI DOI 10.1145/1882362.1882394
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Harrison W., 2006, IEEE Software, V23, P5, DOI DOI 10.1109/MS.2006.72
   Itkonen J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P82, DOI 10.1109/ISESE.2005.1541817
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Itkonen J., 2013, EMPIRICAL SOFTW ENG
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Itkonen J, 2009, INT SYMP EMP SOFTWAR, P495
   Jalote P, 2007, J SYST SOFTWARE, V80, P584, DOI 10.1016/j.jss.2006.07.025
   Jones C, 1996, COMPUTER, V29, P94, DOI 10.1109/2.488361
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kit E., 1995, SOFTWARE TESTING REA
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Klein BD, 1997, MIS QUART, V21, P169, DOI 10.2307/249418
   Komssi M., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P283, DOI 10.1109/RE.2010.40
   Laitenberger O., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P312, DOI 10.1109/METRIC.1999.809752
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Lehtinen TOA, 2011, INFORM SOFTWARE TECH, V53, P1045, DOI 10.1016/j.infsof.2011.05.005
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   Mahmud J, 2014, SOFTW TEST VERIF REL, V24, P61, DOI 10.1002/stvr.1484
   Mäntylä MV, 2011, EUR CON SFTWR MTNCE, P131, DOI 10.1109/CSMR.2011.19
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Merkel R., 2010, TECHNICAL REPORT, V1
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Poon PL, 2011, SOFTWARE QUAL J, V19, P141, DOI 10.1007/s11219-010-9109-4
   Post H, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P295, DOI 10.1109/RE.2009.43
   Robillard P. N., 2007, P INT MULT COMP GLOB, P5
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   Sabaliauskaite G, 2010, LECT NOTES COMPUT SC, V6182, P128, DOI 10.1007/978-3-642-14192-8_14
   Siy H, 2001, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2001.972741
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   Vanhanen Jari, 2009, 2009 Third International Workshop on Software Product Management (IWSPM 2009), P42, DOI 10.1109/IWSPM.2009.5
NR 54
TC 6
Z9 7
U1 0
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2014
VL 56
IS 12
SI SI
BP 1597
EP 1612
DI 10.1016/j.infsof.2013.12.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AP2LG
UT WOS:000341903100005
DA 2024-07-18
ER

PT J
AU Teruel, MA
   Navarro, E
   López-Jaquero, V
   Montero, F
   González, P
AF Teruel, Miguel A.
   Navarro, Elena
   Lopez-Jaquero, Victor
   Montero, Francisco
   Gonzalez, Pascual
TI A CSCW Requirements Engineering CASE Tool: Development and usability
   evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Usability evaluation; CASE tool; CSRML; Requirements engineering; CSCW;
   ISO/IEC 25062:2006
ID AWARENESS; SUPPORT; FAMILY; MODEL
AB Context: CSRML Tool 2012 is a Requirements Engineering CASE Tool for the Goal-Oriented Collaborative Systems Requirements Modeling Language (CSRML).
   Objective: This work aims at evaluating the usability of CSRML Tool 2012, thus identifying any possible usability flaw to be solved in the next releases of the application, as well as giving a general overview on how to develop a DSL tool similar to the one evaluated in this work by means of Visual Studio Modelling SDK.
   Method: In this evaluation, which was reported by following the ISO/IEC 25062:2006 Common Industry Format for usability tests, 28 fourth-course Computer Science students took part. They were asked to carry out a series of modifications to an incomplete CSRML requirements specification. Usability was assessed by measuring the task's completion rate, the elapsed time, number of accesses to the help system of the tool and the instructor's verbal assistance. The participants' arousal and pleasantness were assessed by analyzing both facial expressions and a USE questionnaire.
   Results: In spite of obtaining high usability levels, the test outcome revealed some usability flaws that should be addressed.
   Conclusion: The important lessons learnt from this evaluation are also applicable to the success of other usability tests as well as to the development of new CASE tools. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Teruel, Miguel A.; Navarro, Elena; Lopez-Jaquero, Victor; Montero, Francisco; Gonzalez, Pascual] Univ Castilla La Mancha, Comp Syst Dept, LoUISE Res Grp, Albacete 02071, Spain.
C3 Universidad de Castilla-La Mancha
RP Navarro, E (corresponding author), Univ Castilla La Mancha, Comp Syst Dept, LoUISE Res Grp, Avda Espana S-N, Albacete 02071, Spain.
EM miguel@dsi.uclm.es; enavarro@dsi.uclm.es; victor@dsi.uclm.es;
   fmontero@dsi.uclm.es; pgonzalez@dsi.uclm.es
RI López-Jaquero, Víctor/AAE-2232-2022; Martínez, Miguel Ángel
   Teruel/AAD-2356-2020; montero, francisco/U-4830-2019; Navarro,
   Elena/I-7452-2013; González, Pascual/E-3693-2016
OI Martínez, Miguel Ángel Teruel/0000-0003-0102-6918; montero,
   francisco/0000-0002-0902-9681; Navarro, Elena/0000-0001-9496-6890;
   González, Pascual/0000-0003-3549-5712; Lopez Jaquero, Victor
   Manuel/0000-0003-2093-4065
FU Spanish Ministry of Economy and Competitiveness; FEDER funds of the EU
   under the project Grant insPIre [TIN2012-34003]; Spanish Ministry of
   Education, Culture and Sports with the FPU scholarship [AP2010-0259]
FX This research has been funded by the Spanish Ministry of Economy and
   Competitiveness and by the FEDER funds of the EU under the project Grant
   insPIre (TIN2012-34003). It has also been funded by Spanish Ministry of
   Education, Culture and Sports with the FPU scholarship (AP2010-0259). We
   would like to thank the members of SymbiaIT and the fourth-year Computer
   Science students of the University of Castilla-La Mancha for their
   valuable collaboration.
CR Abrahao S, 2011, INFORM SCIENCES, V181, P3356, DOI 10.1016/j.ins.2011.04.005
   Aitken P.G., 2003, NET GRAPHICS PRINTIN
   [Anonymous], 2011, ISO 13314
   [Anonymous], 2006, 25062 ISOIEC
   [Anonymous], 2006, Introduction to Probability
   [Anonymous], 2010, 250602010 ISOIEC TR
   [Anonymous], 1998, ISO 9241-11
   Ardito C., 2011, Proceedings of International Conference on Software Engineering and Knowledge Engineering, P282
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Belkadi F, 2013, INT J HUM-COMPUT ST, V71, P110, DOI 10.1016/j.ijhcs.2012.03.002
   Blau I., 2009, Proceedings of the Chais Conference on Instructional Technologies Research 2009:Learning in the technological era, P48
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Budgen D, 2003, J SYST SOFTWARE, V67, P55, DOI 10.1016/S0164-1212(02)00088-2
   de Gea JMC, 2012, INFORM SOFTWARE TECH, V54, P1142, DOI 10.1016/j.infsof.2012.04.005
   Carstensen PH, 1999, HDB HUMAN FACTORS, P1
   Castro J., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P108
   Cochran W.G., 1992, Experimental designs
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Condori-Fernández N, 2013, SCI COMPUT PROGRAM, V78, P2245, DOI 10.1016/j.scico.2012.07.017
   Cook Steve., 2007, Domain-specific devel- opment with visual studio dsl tools, Vfirst
   Cronbach LJ, 2004, EDUC PSYCHOL MEAS, V64, P391, DOI 10.1177/0013164404266386
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Cysneiros LM, 2004, SPRING INT SER ENG C, V753, P115
   Desmet P.M.A., 2003, FUNOLOGY USABILITY E, P1
   Dudek D, 2007, LIBR REV, V56, P224, DOI 10.1108/00242530710736000
   Edwards PJ, 2008, INT J HUM-COMPUT ST, V66, P718, DOI 10.1016/j.ijhcs.2008.06.002
   ELLIS CA, 1991, COMMUN ACM, V34, P38
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Finstad K, 2006, J USABILITY STUD, V1, P185
   Finstad K, 2010, INTERACT COMPUT, V22, P323, DOI 10.1016/j.intcom.2010.04.004
   Grau G, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P359
   Gronback R.C., 2009, ECLIPSE MODELLING PR
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   Gutwin C., 1996, P 1996 ACM C COMPUTE, P258, DOI DOI 10.1145/240080.240298
   Honda S, 1999, INFORM SOFTWARE TECH, V41, P383, DOI 10.1016/S0950-5849(98)00070-6
   Horkoff J., 2011, iStar Tool Fair: Proceedings of the 5th International i* Workshop, P154
   Hornbæk K, 2006, INT J HUM-COMPUT ST, V64, P79, DOI 10.1016/j.ijhcs.2005.06.002
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Kline P., 1999, The Handbook of Psychological Testing, V2nd
   Lee J, 2001, INFORM SOFTWARE TECH, V43, P121, DOI 10.1016/S0950-5849(00)00144-0
   López L, 2011, LECT NOTES COMPUT SC, V6998, P62, DOI 10.1007/978-3-642-24606-7_6
   Lund A. M., 2001, Usability User Exp. Newsl. STC Usability SIG, V8, P1
   Martinez D, 2010, VISUAL COMPUT, V26, P619, DOI 10.1007/s00371-010-0499-x
   Microsoft Corporation, AG EMP ONL
   Microsoft Corporation, INT MOD US VIS STUD
   Nayyeri K., 2008, PROFESSIONAL VISUAL
   Peevers G, 2008, INT J HUM-COMPUT ST, V66, P113, DOI 10.1016/j.ijhcs.2007.09.005
   RUSSELL JA, 1980, J PERS SOC PSYCHOL, V39, P1161, DOI 10.1037/h0077714
   Sears A, 1997, INT J HUM-COMPUT INT, V9, P213, DOI 10.1207/s15327590ijhc0903_2
   Senapathi M, 2005, J INF TECHNOL EDUC-R, V4, P61
   Staiano J., 2012, Proceedings of the Designing Interactive Systems Conference (DIS '12), Newcastle, UK, P741, DOI DOI 10.1145/2317956.2318068
   Sutcliffe A, 2012, INT J HUM-COMPUT ST, V70, P508, DOI 10.1016/j.ijhcs.2012.01.005
   Tang A., 2012, Proceedings of the ACM 2012 conference on Computer Supported Cooperative Work, P579
   Teruel Miguel A., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P114, DOI 10.1049/ic.2011.0014
   Teruel M.A., 2013, USABILITY EVALUATION
   Teruel M.A., 2012, CSRMI TOOL
   Teruel MA, 2012, EVALUATION NOVEL APP, P169
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Teruel MA, 2011, LECT NOTES COMPUT SC, V6998, P33, DOI 10.1007/978-3-642-24606-7_4
   Tran MH, 2006, INFORM SOFTWARE TECH, V48, P1006, DOI 10.1016/j.infsof.2005.12.009
   Trapani G., 2010, COMPLETE GUIDE GOOLG
   van Mensvoort K, 2008, INT J HUM-COMPUT ST, V66, P438, DOI 10.1016/j.ijhcs.2007.12.004
   Vasalou A, 2010, INT J HUM-COMPUT ST, V68, P719, DOI 10.1016/j.ijhcs.2010.06.002
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Wohlin C., 2012, Experimentation in Software Engineering
   Zielczynski P., 2007, REQUIREMENTS MANAGEM
NR 67
TC 20
Z9 22
U1 0
U2 32
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 922
EP 949
DI 10.1016/j.infsof.2014.02.009
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AI9OL
UT WOS:000337261800007
DA 2024-07-18
ER

PT J
AU van Waardenburg, G
   van Vliet, H
AF van Waardenburg, Guus
   van Vliet, Hans
TI When agile meets the enterprise
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile development; Enterprise environment; Grounded theory
ID SOFTWARE-DEVELOPMENT; GROUNDED THEORY; PROJECT-MANAGEMENT; ADOPTION;
   MODELS; STATE; XP
AB Context: While renowned agile methods like XP and Scrum were initially intended for projects with small teams, traditional enterprise environments, i.e. environments where plan-driven development is prevalent, have also become attracted by the promises of a faster time to market through agility. Agile software development methods emphasize lightweight software development. Projects within enterprise environments, however, are typically confronted with a large and complex IT landscape, where mission-critical information is at play whose criticality requires prudence regarding design and development. In many an organization, both approaches are used simultaneously.
   Objective: Find out which challenges the co-existence of agile methods and plan-driven development brings, and how organizations deal with those challenges.
   Method: We present a grounded theory of the challenges of using agile methods in traditional enterprise environments, based on a Grounded Theory research involving 21 agile practitioners from two large enterprise organizations in the Netherlands.
   Results: We organized the challenges under two factors: Increased landscape complexity and Lack of business involvement. For both factors, we identify successful mitigation strategies. These mitigation strategies concern the communication between the agile and traditional part of the organization, and the timing of that communication.
   Conclusion: Agile practices can coexist with plan-driven development. One should, however, keep in mind the context and take actions to mitigate the challenges incurred. (C) 2013 Elsevier B.V. All rights reserved.
C1 [van Vliet, Hans] Vrije Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
   [van Waardenburg, Guus] Avanade Netherlands, NL-1322 AP Almere, Netherlands.
C3 Vrije Universiteit Amsterdam; Accenture
RP van Vliet, H (corresponding author), Vrije Univ Amsterdam, Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
EM guusvanwaardenburg@gmail.com; hans@cs.vu.nl
RI Jolugbo, Olajide/D-3216-2017
OI Jolugbo, Olajide/0000-0001-6512-4117
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Adolph S, 2012, J SYST SOFTWARE, V85, P1269, DOI 10.1016/j.jss.2012.01.059
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Agarwal R, 2002, MIS QUART, V1, P1
   Allan G., 2003, ELECT J BUSINESS RES, V2
   [Anonymous], 2005, Communications of the ACM
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   Baskerville R, 2011, INFORM SOFTWARE TECH, V53, P543, DOI 10.1016/j.infsof.2010.10.010
   Beck K., 2011, MANIFESTO AGILE SOFT
   Birks DF, 2013, EUR J INFORM SYST, V22, P1, DOI 10.1057/ejis.2012.48
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   BOEHM B, 2002, BALANCING AGILITY DI
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Brown AW, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P873, DOI 10.1109/ICSE.2013.6606636
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Chan FKY, 2009, DECIS SUPPORT SYST, V46, P803, DOI 10.1016/j.dss.2008.11.009
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cohn M, 2003, COMPUTER, V36, P74, DOI 10.1109/MC.2003.1204378
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Conboy K, 2007, INT FED INFO PROC, V235, P217
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Denison DR., 1991, Research in Organizational Change and Development, V5, P1
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Drobka J, 2004, IEEE SOFTWARE, V21, P70, DOI 10.1109/MS.2004.47
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Gabrielle B., 2008, P 41 HAW INT C SYST, P462
   Glaser B.G., 1967, BRIT J SOCIOL, V20, P227
   Glaser B. G., 1978, [No title captured]
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Grisham PaulS., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1
   HARVEY JB, 1974, ORGAN DYN, V3, P63, DOI 10.1016/0090-2616(74)90005-9
   He ZL, 2004, ORGAN SCI, V15, P481, DOI 10.1287/orsc.1040.0078
   Heidenberg J, 2010, LECT NOTES COMPUT SC, V6156, P47, DOI 10.1007/978-3-642-13792-1_6
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Iivari J, 2011, INFORM SOFTWARE TECH, V53, P509, DOI 10.1016/j.infsof.2010.10.008
   Isham M, 2008, AGILE 2008, PROCEEDINGS, P484, DOI 10.1109/Agile.2008.16
   Janis I. L., 1972, VICTIMS GROUPTHINK P
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Kettunen P., 2008, SOFTWARE PROCESS IMP, V13, P183, DOI [10.1002/, DOI 10.1002/SPIP.354]
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   Kurapati N, 2012, LECT NOTES BUS INF P, V111, P16
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Levina N, 2005, MIS QUART, V29, P335
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Magdaleno AM, 2012, J SYST SOFTWARE, V85, P351, DOI 10.1016/j.jss.2011.08.028
   Markus M. L., 2000, Framing the domains of IT research: Glimpsing the future through the past, P173
   Matavire R, 2013, EUR J INFORM SYST, V22, P119, DOI 10.1057/ejis.2011.35
   McAvoy J, 2009, EUR J INFORM SYST, V18, P372, DOI 10.1057/ejis.2009.22
   Mishra D, 2011, J SOFTW MAINT EVOL-R, V23, P549, DOI 10.1002/smr.528
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Moore E, 2008, AGILE 2008, PROCEEDINGS, P121, DOI 10.1109/Agile.2008.43
   OGC (Office of Government Commerce), 2009, INTR PRINCE2 MAN DIR
   Parry KW, 1998, LEADERSHIP QUART, V9, P85, DOI 10.1016/S1048-9843(98)90043-1
   Perreira J., 2011, SOFTWARE PRACTICE EX, V41, P963
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Pikkarainen M, 2012, EMPIR SOFTW ENG, V17, P675, DOI 10.1007/s10664-011-9185-5
   Pink D., 2011, [No title captured]
   Rasmusson J, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1196316
   Robinson H., 2005, P AG DEV C ADC 05 IE
   Schwaber K., 1991, SCRUM GUIDE OFFICIAL
   Siakas Kerstin V., 2007, Software Process: Improvement and Practice, V12, P597, DOI 10.1002/spip.344
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Steven Fraser., 2004, Proc. of 19th Annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, P148, DOI [10.1145/1028664.1028723, DOI 10.1145/1028664.1028723]
   STRAUSS A, 1988, SOCIOL QUART, V29, P163, DOI 10.1111/j.1533-8525.1988.tb01249.x
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Strong DR, 2009, ECOLOGY, V90, P1, DOI 10.1890/0012-9658-90.1.1
   Sutherland J., 2001, Cutter IT Journal, V14, P5
   Svensson Harald, 2005, P 9 EUR C SOFTW MAIN
   Tolfo C, 2008, J SYST SOFTWARE, V81, P1955, DOI 10.1016/j.jss.2008.01.014
   vanVliet H., 2008, SOFTWARE ENG PRINCIP
   Vijayasarathy L, 2012, INFORM SOFTWARE TECH, V54, P137, DOI 10.1016/j.infsof.2011.08.003
   Vinekar V, 2006, INFORM SYST MANAGE, V23, P31, DOI 10.1201/1078.10580530/46108.23.3.20060601/93705.4
NR 80
TC 65
Z9 76
U1 1
U2 131
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2154
EP 2171
DI 10.1016/j.infsof.2013.07.012
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100006
DA 2024-07-18
ER

PT J
AU Keum, C
   Kang, S
   Kim, M
AF Keum, Changsup
   Kang, Sungwon
   Kim, Myungchul
TI Architecture-based testing of service-oriented applications in
   distributed systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service-oriented application testing; Service composition; Test
   architecture; Architecture-based testing
ID TEST SUITE DERIVATION; COMMUNICATION PROTOCOLS; WEB SERVICES;
   ORCHESTRATION
AB Context: Testing distributed service-oriented applications (SOAs) is more challenging than testing monolithic applications since these applications have complex interactions between participant services. Test engineers can observe test results only through a front service that handles request messages sent by test engineers. Message exchanges between participant services are hidden behind the front service and cannot be easily observed or controlled through the front service. For this reason, testing SOAs suffer from limited observability and controllability problem.
   Objective: This paper proposes a new test method that is architecture-based and exploits interaction architecture of a SOA. The proposed test method alleviates the limited observability and controllability problem by employing test architecture, thereby facilitating test execution and analysis through monitoring and controlling message exchanges.
   Method: Our proposed method derives an interaction architecture from the specification of a SOA. Test architectures can be designed from the derived interaction architecture by extending it with additional test elements. At the same time, architecture-neutral test scenarios are automatically generated from the test model that is constructed from the specification. Our method combines test architecture information with the test scenarios to obtain architecture-enabled test scenarios under the selected test architectures. Finally, architecture-enabled test execution and analysis are conducted in the real network environment.
   Results: The efficacy of the proposed method is demonstrated with an industrial case study, which shows that it is practical and effective for testing SOAs. Even though our method increases an additional test generation effort owing to test architecture, it is counterbalanced by higher fault detection rate and faster fault locating time.
   Conclusion: The main benefit of our approach is that using test architecture it enhances testability of SOA by increasing observability and controllability through monitoring and controlling message exchanges. Our architecture-based test method enables test engineers to detect faults efficiently and also reduce fault locating time significantly. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Keum, Changsup; Kang, Sungwon; Kim, Myungchul] Korea Adv Inst Sci & Technol, Dept Informat & Commun Engn, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Keum, C (corresponding author), Korea Adv Inst Sci & Technol, Dept Informat & Commun Engn, 291 Daehak Ro, Taejon 305701, South Korea.
EM cskeum@kaist.ac.kr; sungwon.kang@kaist.ac.kr; mck@kaist.ac.kr
RI Kim, Myungchul/C-1730-2011
FU National Research Foundation of Korea (NRF); Korea government (MEST)
   [2012R1A2A2A01008244]
FX We are grateful to the anonymous reviewers for their useful comments and
   suggestions which have helped us improve this work. This work was
   supported in part by the National Research Foundation of Korea (NRF)
   grant funded by the Korea government (MEST) (No. 2012R1A2A2A01008244).
CR Bai XY, 2007, P INT COMP SOFTW APP, P368
   Bentakouk L, 2009, LECT NOTES COMPUT SC, V5826, P16, DOI 10.1007/978-3-642-05031-2_2
   Bertolino A, 2006, LECT NOTES COMPUT SC, V3938, P1
   Cao T., ICST 10 IEEE INT C S, P363
   Endo AT, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P3, DOI 10.1109/TAIC-PART.2008.9
   ISO/IEC, 1995, 96461 ISOIEC
   ISO/IEC, 1995, 96462 ISOIEC
   Kang SW, 2000, COMPUT NETW, V32, P347, DOI 10.1016/S1389-1286(00)00005-0
   Keum C, 2006, LECT NOTES COMPUT SC, V3964, P103
   La HJ, 2011, INFORM SOFTWARE TECH, V53, P1275, DOI 10.1016/j.infsof.2011.06.001
   Li L, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P205, DOI 10.1109/ICWS.2009.97
   Mei LJ, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P151, DOI 10.1145/1595696.1595720
   Mei LJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P371, DOI 10.1145/1368088.1368139
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Seol S, 2004, IEEE J SEL AREA COMM, V22, P2062, DOI 10.1109/JSAC.2004.836015
   Seol S, 2003, COMPUT NETW, V43, P735, DOI 10.1016/S1389-1286(03)00316-5
   Souza SRS, 2008, CONCURR COMP-PRACT E, V20, P1893, DOI 10.1002/cpe.1297
   Thimbleby H, 2003, SOFTWARE PRACT EXPER, V33, P1081, DOI 10.1002/spe.540
   Ulrich A, 1999, INT FED INFO PROC, V21, P93
   Walter T, 1998, IWTCS 98 INT WORKSH, P149
   Yan J, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P75
NR 21
TC 6
Z9 6
U1 0
U2 24
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1212
EP 1223
DI 10.1016/j.infsof.2013.01.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900005
DA 2024-07-18
ER

PT J
AU Svensson, RB
   Olsson, T
   Regnell, B
AF Svensson, Richard Berntsson
   Olsson, Thomas
   Regnell, Bjorn
TI An investigation of how quality requirements are specified in industrial
   practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality requirements; Case study; Qualitative research; Document
   analysis; Metrics
ID NONFUNCTIONAL REQUIREMENTS; MANAGEMENT
AB Context: This paper analyses a sub-contractor specification in the mobile handset domain.
   Objective: The objective is to understand how quality requirements are specified and which types of requirements exist in a requirements specification from industry.
   Method: The case study is performed in the mobile handset domain, where a requirements specification was analyzed by categorizing and characterizing the pertaining requirements.
   Results: The requirements specification is written in structured natural language with unique identifiers for the requirements. Of the 2178 requirements, 827 (38%) are quality requirements. Of the quality requirements, 56% are quantified, i.e., having a direct metric in the requirement. The variation across the different sub-domains within the requirements specification is large.
   Conclusion: The findings from this study suggest that methods for quality requirements need to encompass many aspects to comprehensively support working with quality requirements. Solely focusing on, for example, quantification of quality requirements might overlook important requirements since there are many quality requirements in the studied specification where quantification is not appropriate. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Svensson, Richard Berntsson; Olsson, Thomas; Regnell, Bjorn] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
C3 Lund University
RP Svensson, RB (corresponding author), Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
EM richard.berntsson_svensson@cs.lth.se; thomas.olsson@cs.lth.se;
   bjorn.regnell@cs.lth.se
RI Olsson, Thomas/AAB-8447-2019
OI Olsson, Thomas/0000-0002-2933-1925; Regnell, Bjorn/0000-0002-9380-6120
FU VINNOVA (the Swedish Agency for Innovation Systems) within the MARS
   project; Industrial Excellence Center EASE - Embedded Applications
   Software Engineering
FX This work was partly funded by VINNOVA (the Swedish Agency for
   Innovation Systems) within the MARS project and by the Industrial
   Excellence Center EASE - Embedded Applications Software Engineering,
   (http://ease.cs.lth.se). Furthermore, we would like to thank all of the
   participants and their companies who have helped in making the data
   collection possible for this research.
CR Al-Kilidar H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P122, DOI 10.1109/ISESE.2005.1541821
   Alexander I., 2003, Computing & Control Engineering, V14, P40, DOI 10.1049/cce:20030108
   [Anonymous], SOFTWARE PRODUCT LIN
   [Anonymous], 3 C SOFTW ENG RES PR
   [Anonymous], WORKSH MEAS REQ PROJ
   [Anonymous], P 34 ANN HAW INT C S
   [Anonymous], VOLERE REQUIREMENTS
   [Anonymous], P IEEE 1 INT S REQ E
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P 36 EUROMICRO C SOF
   [Anonymous], P C EUR IND REQ ENG
   [Anonymous], 2001, 912612001E ISOIEC
   [Anonymous], LNCS
   [Anonymous], 8301998 IEEE
   Baegh J, 2008, IEEE SOFTWARE, V25, P57, DOI 10.1109/MS.2008.30
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Chung L., 2006, SOFTWARE ENG RES APP, V3647, P29
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Cysneiros L. M., 2001, Requirements Engineering, V6, P97, DOI 10.1007/s007660170008
   De La Vara Jose Luis, 2011, SEKE, P438
   Doerr J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P373, DOI 10.1109/RE.2005.47
   Ebert C, 1998, INFORM SOFTWARE TECH, V40, P175, DOI 10.1016/S0950-5849(98)00049-4
   Ernst NA, 2010, LECT NOTES COMPUT SC, V6182, P143, DOI 10.1007/978-3-642-14192-8_15
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Grimshaw DJ, 2001, INFORM SOFTWARE TECH, V43, P629, DOI 10.1016/S0950-5849(01)00171-9
   Hassenzahl M., 2001, 15th Annual Conference of the Human-Computer Interaction Group of the British Computer Society. IHM-HCI 2001, P95
   Herrmann A, 2008, REQUIR ENG, V13, P73, DOI 10.1007/s00766-007-0058-9
   Jacobs S, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/ISRE.1999.777997
   Jung HW, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1331309
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Konrad S, 2008, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2008.31
   Leung HKN, 2001, INFORM MANAGE, V38, P137, DOI 10.1016/S0378-7206(00)00060-4
   Robson C., 2002, Real world research
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sibisi Mbusi, 2007, AFRICON 2007, P547
   Svensson RB, 2012, REQUIR ENG, V17, P283, DOI 10.1007/s00766-011-0125-0
   Svensson RB, 2012, IEEE T SOFTWARE ENG, V38, P923, DOI 10.1109/TSE.2011.47
   Svensson RB, 2011, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2011.6051652
NR 40
TC 20
Z9 22
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1224
EP 1236
DI 10.1016/j.infsof.2013.01.006
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900006
OA Green Published
DA 2024-07-18
ER

PT J
AU Wood, S
   Michaelides, G
   Thomson, C
AF Wood, Stephen
   Michaelides, George
   Thomson, Chris
TI Successful extreme programming: Fidelity to the methodology or good
   teamworking?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development; Extreme programming; Agile methods; Teamwork;
   Cooperation; Performance
ID AGILE SOFTWARE-DEVELOPMENT; PERCEIVED COHESION; PERFORMANCE; DIVERSITY;
   CONFLICT
AB Context: Developing a theory of agile technology, in combination with empirical work, must include assessing its performance effects, and whether all or some of its key ingredients account for any performance advantage over traditional methods. Given the focus on teamwork, is the agile technology what really matters, or do general team factors, such as cohesion, primarily account for a team's success? Perhaps the more specific software engineering team factors, for example the agile development method's collective ownership and code management, are decisive.
   Objective: To assess the contribution of agile methodology, agile-specific team methods, and general team factors in the performance of software teams.
   Method: We studied 40 small-scale software development teams which used Extreme Programming (XP). We measured (1) the teams' adherence to XP methods, (2) their use of XP-specific team practices, and (3) standard team attributes, as well as the quality of the project's outcomes. We used Williams et al.'s (2004a) [33] Shodan measures of XP methods, and regression analysis.
   Results: All three types of variables are associated with the project's performance. Teamworking is important but it is the XP-specific team factor (continuous integration, coding standards, and collective code ownership) that is significant. Only customer planning (release planning/planning game, customer access, short releases, and stand-up meeting) is positively related to performance. A negative relationship between foundations (automated unit tests, customer acceptance tests, test-first design, pair programming, and refactoring) is found and is moderated by craftsmanship (sustainable pace, simple design, and metaphor/system of names). Of the general team factors only cooperation is related to performance. Cooperation mediates the relationship between the XP-specific team factor and performance.
   Conclusion: Client and team foci of the XP method are its critical active ingredients. (C) 2013 Published by Elsevier B.V.
C1 [Wood, Stephen] Univ Leicester, Sch Management, Leicester, Leics, England.
   [Michaelides, George] Univ London, London, England.
   [Thomson, Chris] Codepilots Com, West Halton DN15 9AP, Scunthorpe, England.
C3 University of Leicester; University of London
RP Wood, S (corresponding author), Univ Leicester, Sch Management, Leicester, Leics, England.
EM s.j.wood@le.ac.uk
OI Michaelides, George/0000-0002-4224-7728
FU UK's Engineering and Physical Sciences Research Council [EP/D031516/1];
   EPSRC [EP/D031516/1] Funding Source: UKRI
FX The research reported in this paper was supported by a grant from the
   UK's Engineering and Physical Sciences Research Council (Reference:
   EP/D031516/1). We are grateful for comments on an earlier draft of this
   paper from Mike Holcombe, for assistance in the data collection from
   John Kahn, to Alison Geldart and Pat Hewson for their editorial
   assistance, and particularly to the students for their cooperation with
   the study.
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   [Anonymous], 2004, XP Ser
   [Anonymous], AG DEV C
   [Anonymous], 2001, Cinema Journal
   Balijepally V, 2009, MIS QUART, V33, P91
   BARON RM, 1986, J PERS SOC PSYCHOL, V51, P1173, DOI 10.1037/0022-3514.51.6.1173
   Beal DJ, 2003, J APPL PSYCHOL, V88, P989, DOI 10.1037/0021-9010.88.6.989
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   BOLLEN KA, 1990, SOC FORCES, V69, P479, DOI 10.2307/2579670
   CAMPION MA, 1993, PERS PSYCHOL, V46, P823, DOI 10.1111/j.1744-6570.1993.tb01571.x
   Campion MA, 1996, PERS PSYCHOL, V49, P429, DOI 10.1111/j.1744-6570.1996.tb01806.x
   CARRON AV, 1982, J SPORT PSYCHOL, V4, P123, DOI 10.1123/jsp.4.2.123
   Chamberlin T.C., 1890, Science, V15
   Chin WW, 1999, SMALL GR RES, V30, P751, DOI 10.1177/104649649903000605
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cohen SG, 1997, J MANAGE, V23, P239, DOI 10.1177/014920639702300303
   Conboy K, 2011, INFORM SOFTWARE TECH, V53, P535, DOI 10.1016/j.infsof.2010.10.007
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Cunningham W., MANIFESTO AGILE SOFT
   DALCHER D, 2005, P 12 INT C WORKSH EN
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Gersick C.J. G., 1998, ACAD MANAGE J, V31, P9
   GUZZO RA, 1993, BRIT J SOC PSYCHOL, V32, P87, DOI 10.1111/j.2044-8309.1993.tb00987.x
   HACKMAN JR, 1975, J APPL PSYCHOL, V60, P159, DOI 10.1037/h0076546
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Holcombe M., 2008, Running an Agile software development project
   Iivari J, 1998, INFORM SOFTWARE TECH, V40, P501, DOI 10.1016/S0950-5849(98)00077-9
   Ilieva S, 2004, EUROMICRO CONF PROC, P326, DOI 10.1109/EURMIC.2004.1333387
   JAMES LR, 1984, J APPL PSYCHOL, V69, P85, DOI 10.1037/0021-9010.69.1.85
   Karlsson F, 2009, EUR J INFORM SYST, V18, P300, DOI 10.1057/ejis.2009.20
   Kilduff M, 2000, ORGAN SCI, V11, P21, DOI 10.1287/orsc.11.1.21.12569
   Krebs W., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P60
   Lott A J, 1965, Psychol Bull, V64, P259, DOI 10.1037/h0022386
   MACIAS F, 2003, P 4 MEX INT C COMP S
   Mangalaraj G, 2009, EUR J INFORM SYST, V18, P344, DOI 10.1057/ejis.2009.23
   Mannaro K, 2004, LECT NOTES COMPUT SC, V3092, P166
   Marshall S., 2010, ACM SIGPLAN NOTICES, P74, DOI DOI 10.1145/1932682.1869467
   Maruping LM, 2009, EUR J INFORM SYST, V18, P355, DOI 10.1057/ejis.2009.24
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   McGrath J.E., 1984, GROUPS INTERACTION P
   Michaelides G, 2010, EMPIR SOFTW ENG, V15, P599, DOI 10.1007/s10664-010-9130-z
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Port D, 2009, EUR J INFORM SYST, V18, P317, DOI 10.1057/ejis.2009.19
   Robinson H, 2004, LECT NOTES COMPUT SC, V3092, P139
   Sawyer S, 2001, INFORM SYST J, V11, P155, DOI 10.1046/j.1365-2575.2001.00100.x
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sharp J.H., 2010, C INF SYST APPL RES, V3, P1
   Shin S.-Y., 2009, J BEHAV STUDIES BUSI, V1
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
   Svensson H, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P256, DOI 10.1109/CSMR.2005.33
   Turner N., 2010, HDB POSITIVE PSYCHOL, P715
   Warr P., 2007, WORK HAPPINESS UNHAP
   Webber SS, 2001, J MANAGE, V27, P141, DOI 10.1016/S0149-2063(00)00093-3
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Williams L.A., 2004, Extreme programming evaluation framework for object-oriented languages version 1.4
   Wood S, 2011, TEAM PERFORM MANAG, V17, P382, DOI 10.1108/13527591111182643
   Young S. Michelle, 2005, Workshop on Human and Social Factors of Software Engineering, P1, DOI 10.1145/1083106.1083123
NR 62
TC 31
Z9 36
U1 3
U2 118
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2013
VL 55
IS 4
BP 660
EP 672
DI 10.1016/j.infsof.2012.10.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 111NE
UT WOS:000316527200002
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Siegmund, N
   Rosenmüller, M
   Kästner, C
   Giarrusso, PG
   Apel, S
   Kolesnikov, SS
AF Siegmund, Norbert
   Rosenmueller, Marko
   Kaestner, Christian
   Giarrusso, Paolo G.
   Apel, Sven
   Kolesnikov, Sergiy S.
TI Scalable prediction of non-functional properties in software product
   lines: Footprint and memory consumption
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Non-functional properties; Prediction; Measurement; Software product
   lines; SPL Conqueror
ID SYSTEMS; MODEL
AB Context: A software product line is a family of related software products, typically created from a set of common assets. Users select features to derive a product that fulfills their needs. Users often expect a product to have specific non-functional properties, such as a small footprint or a bounded response time. Because a product line may have an exponential number of products with respect to its features, it is usually not feasible to generate and measure non-functional properties for each possible product.
   Objective: Our overall goal is to derive optimal products with respect to non-functional requirements by showing customers which features must be selected.
   Method: We propose an approach to predict a product's non-functional properties based on the product's feature selection. We aggregate the influence of each selected feature on a non-functional property to predict a product's properties. We generate and measure a small set of products and, by comparing measurements, we approximate each feature's influence on the non-functional property in question. As a research method, we conducted controlled experiments and evaluated prediction accuracy for the non-functional properties footprint and main-memory consumption. But, in principle, our approach is applicable for all quantifiable non-functional properties.
   Results: With nine software product lines, we demonstrate that our approach predicts the footprint with an average accuracy of 94%, and an accuracy of over 99% on average if feature interactions are known. In a further series of experiments, we predicted main memory consumption of six customizable programs and achieved an accuracy of 89% on average.
   Conclusion: Our experiments suggest that, with only few measurements, it is possible to accurately predict non-functional properties of products of a product line. Furthermore, we show how already little domain knowledge can improve predictions and discuss trade-offs between accuracy and required number of measurements. With this technique, we provide a basis for many reasoning and product-derivation approaches. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Siegmund, Norbert; Rosenmueller, Marko] Univ Magdeburg, Dept Comp Sci, D-39016 Magdeburg, Germany.
   [Kaestner, Christian; Giarrusso, Paolo G.] Univ Marburg, Dept Comp Sci & Math, D-35032 Marburg, Germany.
   [Apel, Sven; Kolesnikov, Sergiy S.] Univ Passau, Dept Math & Informat, Passau, Germany.
C3 Otto von Guericke University; Philipps University Marburg; University of
   Passau
RP Siegmund, N (corresponding author), Univ Magdeburg, POB 4120, D-39016 Magdeburg, Germany.
EM nsiegmun@ovgu.de
RI Siegmund, Norbert/U-1325-2019
OI Siegmund, Norbert/0000-0001-7741-7777; Kastner,
   Christian/0000-0002-4450-4572; Apel, Sven/0000-0003-3687-2233
FU German Ministry of Education and Science (BMBF) [01IM10002B]; German
   Research Foundation (DFG) [SA 465/34-1, AP 206/2, AP 206/4, LE 912/13];
   ERC Grant [203099]
FX We thank Martin Kuhlemann, Thomas Thum, and Tillmann Rendel for helpful
   comments on previous drafts of the paper. Especially, we thank Janet
   Siegmund for advice on statistical evaluations. Norbert Siegmund's work
   is supported by the German Ministry of Education and Science (BMBF), No.
   01IM10002B. The work of Marko Rosenmuller, Sven Apel, and Sergiy S.
   Kolesnikov is supported by the German Research Foundation (DFG), Project
   Nos. #SA 465/34-1 #AP 206/2, and #AP 206/4, #LE 912/13. Christian
   Kastner's and Paolo Giarrusso's work is supported by ERC Grant #203099.
CR Anderson T.W., 1996, NEW STAT ANAL DATA
   [Anonymous], P INT C FUND APPR SO
   [Anonymous], SOFTWARE QUALITY J
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   Apel S, 2005, LECT NOTES COMPUT SC, V3676, P125
   Apel S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P372, DOI 10.1109/ASE.2011.6100075
   Apel S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/1985793.1985851
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Basili Victor R, 1992, CSTR2956
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Clements P., 2002, Software product lines
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Gobel S., 2004, AOSD 04, P74
   Henzinger TA, 2008, PHILOS T R SOC A, V366, P3727, DOI 10.1098/rsta.2008.0141
   Henzinger TA, 2007, COMPUTER, V40, P32, DOI 10.1109/MC.2007.364
   Hunleth F, 2002, ACM SIGPLAN NOTICES, V37, P38, DOI 10.1145/566225.513838
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kang K., 1990, CMUSET90TR21
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Li H., 2002, Software Engineering Notes, V27, P89, DOI 10.1145/605466.605481
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Nhlabatsi Armstrong, 2008, Progress in Informatics, P75, DOI 10.2201/NiiPi.2008.5.8
   Post Hendrik, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P347, DOI 10.1109/ASE.2008.45
   Pour G., 1998, Proceedings. Technology of Object-Oriented Languages. TOOLS 26 (Cat. No.98EX176), P376, DOI 10.1109/TOOLS.1998.711055
   Roos-Frantz F., 2011, SOFTW QUAL J, P1
   Segura Sergio., 2008, 1st Workshop on Analyses of Software Product Lines (SPLC'08), P201
   Siegmund N., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P160, DOI 10.1109/SPLC.2011.20
   Siegmund N., 2008, P WORKSH VAR MOD SOF, P25
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Siegmund N, 2008, ASIA PAC SOFWR ENG, P187, DOI 10.1109/APSEC.2008.45
   Sincero J, 2010, ASIA PAC SOFWR ENG, P147, DOI 10.1109/APSEC.2010.26
   Steger M, 2004, LECT NOTES COMPUT SC, V3154, P34
   STEVENS SS, 1946, SCIENCE, V103, P677, DOI 10.1126/science.103.2684.677
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Toft P, 2000, KLUWER INT SER ENG C, V576, P111
   White J, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P129, DOI 10.1109/SPLINE.2007.19
   White J, 2009, J SYST SOFTWARE, V82, P1268, DOI 10.1016/j.jss.2009.02.011
   Zubrow D., 2003, CMUSEI2003TN031
NR 43
TC 39
Z9 39
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 491
EP 507
DI 10.1016/j.infsof.2012.07.020
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200002
DA 2024-07-18
ER

PT J
AU Melo, CD
   Cruzes, DS
   Kon, F
   Conradi, R
AF Melo, Claudia de O.
   Cruzes, Daniela S.
   Kon, Fabio
   Conradi, Reidar
TI Interpretative case studies on agile team productivity and management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Team productivity factors; Team management;
   Thematic analysis; Industrial case studies
ID SOFTWARE-DEVELOPMENT; 2 HEADS; WORK; PERFORMANCE; TURNOVER; IMPACT;
   LEVEL; COMMUNICATION; COORDINATION; GUIDELINES
AB Context: The management of software development productivity is a key issue in software organizations, where the major drivers are lower cost and shorter time-to-market. Agile methods, including Extreme Programming and Scrum, have evolved as "light" approaches that simplify the software development process, potentially leading to increased team productivity. However, little empirical research has examined which factors do have an impact on productivity and in what way, when using agile methods.
   Objective: Our objective is to provide a better understanding of the factors and mediators that impact agile team productivity.
   Method: We have conducted a multiple-case study for 6 months in three large Brazilian companies that have been using agile methods for over 2 years. We have focused on the main productivity factors perceived by team members through interviews, documentation from retrospectives, and non-participant observation.
   Results: We developed a novel conceptual framework, using thematic analysis to understand the possible mechanisms behind such productivity factors. Agile team management was found to be the most influential factor in achieving agile team productivity. At the intra-team level, the main productivity factors were team design (structure and work allocation) and member turnover. At the inter-team level, the main productivity factors were how well teams could be effectively coordinated by proper interfaces and other dependencies and avoiding delays in providing promised software to dependent teams.
   Conclusion: Teams should be aware of the influence and magnitude of turnover, which has been shown negative for agile team productivity. Team design choices remain an important factor impacting team productivity, even more pronounced on agile teams that rely on teamwork and people factors. The intra-team coordination processes must be adjusted to enable productive work by considering priorities and pace between teams. Finally, the revised conceptual framework for agile team productivity supports further tests through confirmatory studies. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Melo, Claudia de O.; Kon, Fabio] Univ Sao Paulo, Dept Comp Sci, Sao Paulo, Brazil.
   [Cruzes, Daniela S.; Conradi, Reidar] NTNU, Dept Comp & Informat Sci, Trondheim, Norway.
C3 Universidade de Sao Paulo; Norwegian University of Science & Technology
   (NTNU)
RP Melo, CD (corresponding author), Univ Sao Paulo, Dept Comp Sci, Sao Paulo, Brazil.
EM claudia@ime.usp.br; dcruzes@idi.ntnu.no; fabio.kon@ime.usp.br;
   conradi@idi.ntnu.no
RI Kon, Fabio/H-2743-2012
OI Kon, Fabio/0000-0003-3888-7340; Melo, Claudia/0000-0002-8082-8048
FU FAPESP, Brazil [2009/10338-3]; CNPq, Brazil [76661/2010-2]; Research
   Council of Norway [202657]
FX We would like to thank the companies and their employees who contributed
   to this project. This research is supported by FAPESP, Brazil, proc.
   2009/10338-3, CNPq, Brazil, proc. 76661/2010-2, and the Research Council
   of Norway, proc. 202657.
CR Abbas N, 2008, LECT NOTES BUS INF P, V9, P94
   Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   Abrahamsson P, 2009, EUR J INFORM SYST, V18, P281, DOI 10.1057/ejis.2009.27
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   [Anonymous], 1995, BUS HORIZONS
   [Anonymous], 2008, Applied social research methods series
   [Anonymous], 2008, Changing Software Development: Learning to Be Agile
   [Anonymous], 2010, QSR International
   ARROW H, 1995, RES ORGAN BEHAV, V17, P373
   Attride-Stirling J., 2016, Qualitative Research, V1, DOI [DOI 10.1177/146879410100100307, 10.1177/146879410100100307]
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   Balijepally V, 2009, MIS QUART, V33, P91
   BASILI VR, 1990, IEEE SOFTWARE, V7, P19, DOI 10.1109/52.43045
   Beck K., 2000, EXTREME PROGRAMMING
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Behfar KJ, 2011, SMALL GR RES, V42, P127, DOI 10.1177/1046496410389194
   Bell ST, 2007, J APPL PSYCHOL, V92, P595, DOI 10.1037/0021-9010.92.3.595
   BLACKBURN J., 2000, Communications of the ACM, V43, P200
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   BOEHM BW, 1987, COMPUTER, V20, P43, DOI 10.1109/MC.1987.1663694
   Boehm BW., 1981, Software Engineering Economics
   Bosch-Sijtsema PM, 2009, J KNOWL MANAG, V13, P533, DOI 10.1108/13673270910997178
   Boyatzis R.E., 1998, TRANSFORMING QUALITA
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brooks Frederick P., 1995, The mythical man-month
   Cascio F.W., 1991, MANAGING HUMAN RESOU, V3rd
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cohen SG, 1997, J MANAGE, V23, P239, DOI 10.1177/014920639702300303
   COHEN SG, 1994, HUM RELAT, V47, P13, DOI 10.1177/001872679404700102
   Coram M, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P363, DOI 10.1109/ECBS.2005.68
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   De Dreu CKW, 2003, J APPL PSYCHOL, V88, P741, DOI 10.1037/0021-9010.88.4.741
   Dineen BR, 2003, RES PERS H, V22, P1
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   Eccles M., 2010, Communications of the IBIMA, V2010, P1
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Fereday J., 2006, INT J QUAL METH, V5, P80, DOI [10.1177/160940690600500107, DOI 10.1177/160940690600500107]
   Flin R, 2004, QUAL SAF HEALTH CARE, V13, P45, DOI 10.1136/qshc.2003.009555
   Fowler M., 2001, Software Development, V9, P28
   Galbraith J.R., 1973, Designing complex organizations
   Gerring J, 2007, CASE STUDY RESEARCH: PRINCIPLES AND PRACTICES, P1, DOI 10.2277/0521676568
   Guzzo RA, 1996, ANNU REV PSYCHOL, V47, P307, DOI 10.1146/annurev.psych.47.1.307
   Hamilton BH, 2003, J POLIT ECON, V111, P465, DOI 10.1086/374182
   Hannay J.E., 2010, P 2010 ACM IEEE INT, P1
   Highsmith J. A., 2004, Agile Project Management: Creating Innovative Products
   Hinds P., 2002, Distributed Work
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   Joshi A, 2009, J ORGAN BEHAV, V30, P731, DOI 10.1002/job.567
   Kacmar KM, 2006, ACAD MANAGE J, V49, P133, DOI 10.2307/20159750
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kozlowski SWJ, 2006, PSYCHOL SCI, P77, DOI 10.1111/j.1529-1006.2006.00030.x
   Lee G, 2010, MIS QUART, V34, P87
   Leffingwell D., 2007, The Agile Software Development Series, V1a
   Levine J. M., 2004, TEAM COGNITION UNDER, P153, DOI [10.1037/10690-008, DOI 10.1037/10690-008]
   LEVINE JM, 1990, ANNU REV PSYCHOL, V41, P585, DOI 10.1146/annurev.ps.41.020190.003101
   Licorish S, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P66, DOI 10.1109/CHASE.2009.5071413
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Lu YB, 2011, COMPUT HUM BEHAV, V27, P811, DOI 10.1016/j.chb.2010.11.006
   MacCormack A, 2001, MANAGE SCI, V47, P133, DOI 10.1287/mnsc.47.1.133.10663
   Malone T. W., 1993, Proceedings. Second Workshop on Enabling Technologies Infrastructure for Collaborative Enterprises (Cat. No. 93TH0529-8), P72, DOI 10.1109/ENABL.1993.263061
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   Maxwell KD, 2000, IEEE SOFTWARE, V17, P80, DOI 10.1109/52.820015
   McAvoy J, 2007, INFORM SOFTWARE TECH, V49, P552, DOI 10.1016/j.infsof.2007.02.012
   McHugh O., 2011, Scandinavian Journal of Information Systems, V23, P85
   Melo C., 2011, Proceedings of the 2011 Agile Conference, P57, DOI 10.1109/AGILE.2011.35
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mishra D, 2009, HUM FACTORS ERGONOM, V19, P438, DOI 10.1002/hfm.20164
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Mulder M., 1999, Academyfor Human Resource DevelopmentJournal, V1, P83
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   Parolia N, 2007, INFORM MANAGE-AMSTER, V44, P635, DOI 10.1016/j.im.2007.06.003
   Patton MQ, 1999, HEALTH SERV RES, V34, P1189
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   Ramirez Y.W., 2004, Journal of Intellectual Capital, V5, P602, DOI [10.1108/14691930410567040, DOI 10.1108/14691930410567040]
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Salas E., 2004, Encyclopedia of Applied Psychology, V1, P497
   Schwaber K., 2001, Agile software development with scrum
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P61, DOI 10.1007/978-3-642-12575-1_4
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Stewart K. J., 2006, Software Process Improvement and Practice, V11, P177, DOI 10.1002/spip.258
   Strode D.E., 2011, P 15 PAC AS C INF SY, P1
   Sudhakar GP, 2011, TEAM PERFORM MANAG, V17, P187, DOI 10.1108/13527591111143718
   Tan T, 2009, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2009.5316044
   Tang X., 2010, P IN TC INF SYST ICI, P142
   Tangen S, 2005, INT J PRODUCT PERFOR, V54, P34, DOI 10.1108/17410400510571437
   Teasley S., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P339, DOI 10.1145/358916.359005
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   Tziner A, 1996, HUM RESOUR MANAGE R, V6, P113, DOI 10.1016/S1053-4822(96)90015-7
   van der Vegt GS, 2010, J MANAGE, V36, P1168, DOI 10.1177/0149206309344117
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Wageman R, 2001, ORGAN SCI, V12, P559, DOI 10.1287/orsc.12.5.559.10097
   Wagner S., 2008, TUM10832 I INF
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Whitworth E, 2007, LECT NOTES COMPUT SC, V4536, P62
   Yeatts D.E., 1998, High-performing self-managed work teams: A comparison of theory to practice
NR 110
TC 95
Z9 105
U1 9
U2 196
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 412
EP 427
DI 10.1016/j.infsof.2012.09.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 060EO
UT WOS:000312759500015
DA 2024-07-18
ER

PT J
AU Cañete-Valdeón, JM
AF Miguel Canete-Valdeon, Jose
TI How influential has academic and industrial research been in current
   software life cycles? A retrospective analysis of four mainstream
   activities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Knowledge transfer; History of computing; Practice of software
   development; Standardisation
AB Context: Knowledge transfer is an important responsibility of universities and research institutes as part of their contribution to society. In the field of software engineering, several studies have been performed to show the influence of research in popular technologies such as middleware systems. However, there is no scholarly analysis of the influence that research has had in mainstream activities of current software life cycles.
   Objective: We analyse how methodological research has influenced activities of widespread use in current software life cycles. To keep this goal into manageable bounds, we focus on four very successful trends of current practice: iterative development, architecture-centric development, requirements-driven development, and coherent method integration.
   Method: We follow different forms of evidence backwards in time. As signs of influence we admit the following categories: citations included in papers and standards, interviews, historical essays, people movement, and acquisitions of companies.
   Results: For each one of the mentioned activities, we obtain a trace diagram showing the indirect influence that pieces of research have had in the selected activities of software life cycles.
   Conclusions: Our results support the following claims: (1) mainstream dissemination of the analysed methodological research has taken on the order of 20-40 years; (2) interdisciplinarity has been important in the research that influenced some very popular activities of current software life cycles; (3) research on life cycles is more influential when it originates from large development projects; and (4) probably the best results can be obtained if industrial research goes hand in hand with academic research. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Miguel Canete-Valdeon, Jose] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
C3 University of Sevilla
RP Cañete-Valdeón, JM (corresponding author), Escuela Tecn Super Ingn Informat, Ave Reina Mercedes S-N, Seville 41012, Spain.
EM jmcv@us.es
RI Valdeón, José/S-8261-2019
OI Canete-Valdeon, Jose Miguel/0000-0003-3284-5406
FU Spanish Ministry of Science and Innovation (Ministerio de Ciencia e
   Innovacion) [HUM2007-66607-C04-04]; Andalusian Government (Junta de
   Andalucia) [2008/337]
FX Jose Miguel Canete-Valdeon has been partially funded by the Spanish
   Ministry of Science and Innovation (Ministerio de Ciencia e Innovacion)
   through Project HUM2007-66607-C04-04 and by the Andalusian Government
   (Junta de Andalucia) through Project 2008/337.
CR Abrahamsson P., P IND SEM AG METH PR
   [Adaptive Alcatel Borland Computer-Associates Domain-Architects Ericsson Fujitsu Hewlett-Packard I-Logix IBM IONA Kabira-Technologies MEGA-International Motorola OMG Oracle Project-Technology SOFTEAM Telelogic Unisys X-Change-Technologies], 2005, UN MOD LANG VERS 2 0
   Alexander I., 2004, REQUIREMENTS MANAGEM
   Allen P.M., P 4 INT C INF SYST D, P264
   Andersen S.F., 7 EUR C SOFTW QUAL S
   [Anonymous], 1997, BUSINESS OBJECT DESI, DOI DOI 10.1007/978-1-4471-0947-1_11
   [Anonymous], 1996, 12331996 IEEE INC
   [Anonymous], 1988, Principles of software engineering management
   [Anonymous], 1997, RAT OTH CO UML SEM V
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1998, 12331998 IEEE INC
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 1986, HARVARD BUSINESS REV
   [Anonymous], DEMING AM WHO TAUGHT
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   [Anonymous], PSYCHOL COMPUTER PRO
   [Anonymous], 2000, 14712000 IEEE INC
   [Anonymous], 2006, 10742006 IEEE INC
   [Anonymous], IBM SYSTEMS J
   Aoyama M., P 20 INT C SOFTW ENG
   APPLETON DS, 1984, DATAMATION, V30, P145
   Austenfeld R.B., 2001, PAPERS RES SOC COMME, VXXXXII, P49
   Baker F. T., 1975, SIGPLAN Notices, V10, P172, DOI 10.1145/390016.808437
   Basili V. R., 1975, IEEE Transactions on Software Engineering, VSE-1, P390, DOI 10.1109/TSE.1975.6312870
   Bass L., RESULTS SEI INDEPEND
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass Len, 2012, SEI S SOFTW
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Benington H.D., P S ADV PROGR METH D, P15
   Blanchard B.S., 1991, System engineering management
   Boehm B., 1986, P INT WORKSH SOFTW P
   Boehm B., 1986, ACM SIGSOFT SOFTWARE, V11, P22
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Booch G., 1994, REPORT OBJECT ANAL D, V1, P3
   BOOCH G., 1983, SOFTWARE ENG ADA
   Booch G., 1991, Object-Oriented Analysis and Design with Applications
   Booch G., 1995, Object solutions: managing the object-oriented project
   Bowers A. N., 2007, Software Process Improvement and Practice, V12, P283, DOI 10.1002/spip.326
   CARLSSON B, 1976, SLOAN MANAGE REV, V17, P1
   Carver J.C., P 29 INT C SOFTW ENG
   CIOC, 2001, PRACT GUID FED ENT A
   CIOC, 1999, FED ENT ARCH FRAM VE
   Clark T., 1999, RESPONSE UML 2 UNPUB
   Conway M.E., 1968, DATAMATION, V14
   Cusumano M.A., 1995, Microsoft secrets how the world's most powerful software company creates technology, shapes markets, and manages people
   D'Souza C., P AG GOA 2007 C
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Dana W.H., 1993, AIAA930309
   deJong J., 2008, SDTIMES
   Deming W. E., OUT CRISIS
   Docker T.W.G., 1988, LOGIC PROGRAMMING
   Duggan J., 2007, GARTNER HYPE CYCLE A, V2007
   DYER M, 1980, IBM SYST J, V19, P451, DOI 10.1147/sj.194.0451
   Emmerich W, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487692
   Ernst N.A., P 12 INT WORKSH PRIN
   ESA, 1991, SOFTW ENG STAND
   Evans A., LECT NOTES COMPUTER, V1723, P140
   Evans A., 1997, PRECISE UML GROUP OR
   Fencott P.C., 1992, P METH INT WORKSH LE
   Finley I., 2011, GARTNER HYPE CYCLE A, V20
   Fogelstrom ND, 2010, J SOFTW MAINT EVOL-R, V22, P53, DOI [10.1002/spip.420, 10.1002/smr.453]
   Fong E. N., 1989, INFORM MANAGEMENT DI
   France R.B., 1996, P BCS FACS METH INT, P140
   France R.B., P SOFTWARE ENG, V88, P191
   France R.B., 1991, SEMANTICALLY EXTENDE
   Gause D.C., 1989, EXPLORING REQUIREMEN
   GIDDINGS RV, 1984, COMMUN ACM, V27, P428, DOI 10.1145/358189.358066
   Gilb T., 1981, SIGSOFT SOFTW ENG NO, V6, P17, DOI DOI 10.1145/1010865.1010868
   GILB T, 1976, SOFTWARE METRICS
   Glass R.L., 1969, ACM COMPUTING SURVEY, V1
   Hall A., BCS FACS WORKSH IMP
   HALSTEAD MH, 1962, MACHINE INDEPENDENT
   Hamilton V., 1992, P METH INT WORKSH LE
   IBM, 2008, RAT METH COMP VERS 7
   IBM, 1981, GE200527 IBM CORP
   IEEE - Institute of Electrical and Electronics Engineers, 2004, GUID SOFTW ENG BOD K
   ISO/IEC, 2008, Standard ISO/IEC 15288:2008
   Jacobson I., 2000, ROAD UNIFIED SOFTWAR, P213
   Jacobson I., 2000, ROAD UNIFIED SOFTWAR, P233
   Jacobson I., 2007, P IBM RAT SOFTW DEV
   Jacobson I., 2000, ROAD UNIFIED SOFTWAR, P59
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kazman R., 2004, TECHNICAL REPORT
   Kerner D.V., S EC INF PROC
   Klein M., P 3 ANN SATURN WORKS
   Kolb D.A., 1973, On management and the learning process, P652
   Kroll P., 2003, RATIONAL EDGE
   KRONLOF K, 1993, METHOD INTEGRATION C
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Kruchten P., 1995, SOFTWARE ARCHITECTUR
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krutchten P., 1996, Crosstalk, V9, P11
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Larman Craig., 2003, AGILE ITERATIVE DEV
   Larsen P.G., 1992, P METH INT WORKSH LE
   Larson G. D., 1985, COMMUNICATION
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lehman M.M., 1969, 2722 IBM RC
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   McCracken D. D., 1982, SIGSOFT Software Engineering Notes, V7, P29, DOI 10.1145/1005937.1005943
   Mills H. D., 1976, IEEE Transactions on Software Engineering, VSE-2, P265, DOI 10.1109/TSE.1976.233831
   Mills H.D., 1974, P 3 TEX C COMP SYST
   Mills H.D., 1971, DEBUGGING TECHNIQUES
   MILLS HD, 1987, IEEE SOFTWARE, V4, P19, DOI 10.1109/MS.1987.231413
   Moriarty T., 2002, COMMUNICATION
   Nuseibeh B., 2000, 22 INT C SOFTW ENG I
   Obbink H., 1991, P EUR S SOFTW DEV EN, P1
   ONEILL D, 1983, J SYST SOFTWARE, V3, P77, DOI 10.1016/0164-1212(83)90006-7
   Paige R. F., 1998, Formal Aspects of Computing, V10, P233, DOI 10.1007/s001650050013
   Paige RF, 1999, INFORM SOFTWARE TECH, V41, P157, DOI 10.1016/S0950-5849(98)00119-0
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   PITTMAN M, 1993, IEEE SOFTWARE, V10, P43, DOI 10.1109/52.207226
   Plat N., 1993, THESIS TU DELFT NETH
   Redmond-Pyle D., 1992, P METH INT WORKSH LE
   Reggio G., P OOPSLA 99 WORKSH R
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Rumbaugh J., 1994, J OBJECT ORIENTED PR, V7
   Rumbaugh J., 1996, J OBJECT ORIENTED PR, V8
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Ryder B.G., 2006, IEEE SOFTWARE, P31
   Schwaber C., 2006, CHANGING FACE APPL L
   Semmens L., 1993, VERIFICATION RELIABI, V3, P113
   Semmens L., 1991, P 5 Z US WORKSH OXF
   Semmens L.T., 1990, Z US WORKSH P 5 ANN
   Semmens L.T., 1992, P METH INT WORKSH LE
   SEMMENS LT, 1992, COMPUT J, V35, P600, DOI 10.1093/comjnl/35.6.600
   Sessions R., 2007, COMMUNICATION, P2
   Sharma S., 2007, GROWING IMPORTANCE A
   Shewhart W.A., 1986, STAT METHOD VIEWPOIN
   Shu XL, 2007, LECT NOTES COMPUT SC, V4536, P169
   Stapleton J., 1997, DYNAMIC SYSTEMS DEV
   Telelogic, 2005, TEL NEWS REL TEL ACQ
   Tse T.H., 1991, UNIFYING FRAMEWORK S
   Ury, 1981, GETTING YES NEGOTIAT
   von Neumann J., 2005, J VONNEUMANN SELECTE, P95
   Walton D, 2008, ARGUMENTATION SCHEMES, P1, DOI 10.1017/CBO9780511802034
   Williams R. D., 1975, SIGPLAN Notices, V10, P3, DOI 10.1145/390016.808418
   Wolf A.L., 2008, P SPA 214 M IMP SOFT
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
   ZACHMAN JA, 1982, IBM SYST J, V21, P31, DOI 10.1147/sj.211.0031
   Zurcher F.W., 1968, P IFIP C 1968 INF PR
NR 143
TC 4
Z9 4
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 226
EP 240
DI 10.1016/j.infsof.2012.07.019
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500004
DA 2024-07-18
ER

PT J
AU Acuña, ST
   Castro, JW
   Juristo, N
AF Acuna, Silvia T.
   Castro, John W.
   Juristo, Natalia
TI A HCI technique for improving requirements elicitation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Personas technique; Human-computer interaction; Requirements; Analysis
   activity; Software process
ID USABILITY
AB Context: To develop usable software we need to understand the users that will interact with the system. Personas is a HCI technique that gathers information about users in order to comprehend their characteristics. This information is used to define fictitious persons on which development should focus. Personas provides an understanding of the user, often overlooked in SE developments.
   Objective: The goal of our research is to modify Personas to readily build the technique into the requirements stage of regular SE developments.
   Method: We tried to apply Cooper's version of the Personas technique and we found shortcomings in both the definition of the procedure to be enacted and the formalization of the product resulting from the execution of each step of the Personas technique. For each of these limitations (up to a total of 11), we devised an improvement to be built into Personas. We have incorporated these improvements into a SE version of Personas. The improved Personas avoid the weaknesses encountered by an average software developer unfamiliar with HCI techniques applying the original Personas.
   Results: We aim to improve requirements elicitation through the use of Personas. We have systematized and formalized Personas in the SE tradition in order to build this new version of the technique into the requirements stage. We have applied our proposal in an application example.
   Conclusion: The integration of Personas into the SE requirements stage might improves the understanding of what the software product should do and how it should behave. We have modified the HCI Personas technique to comply with the levels of systematization required by SE. We have enriched the SE requirements process by incorporating Personas activities into requirements activities. Requirements elicitation and requirements analysis are the RE activities most affected by incorporating Personas. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Acuna, Silvia T.; Castro, John W.] Univ Autonoma Madrid, Dept Ingn Informat, E-28049 Madrid, Spain.
   [Juristo, Natalia] Univ Politecn Madrid, Fac Informat, E-28660 Madrid, Spain.
C3 Autonomous University of Madrid; Universidad Politecnica de Madrid
RP Castro, JW (corresponding author), Univ Autonoma Madrid, Dept Ingn Informat, Calle Francisco Tomas y Valiente 11, E-28049 Madrid, Spain.
EM silvia.acunna@uam.es; john.castro@estudian-te.uam.es; natalia@fi.upm.es
RI Castro, John W./V-4583-2019; Acuna, Silvia/A-7395-2008
OI Castro, John W./0000-0002-7938-7564; Acuna, Silvia/0000-0003-2135-6113
FU Spanish Ministry of Science and Innovation as part of the "Tecnologias
   para la Replicacion y Sintesis de Experimentos en IS" [TIN2011-23216];
   Spanish Ministry of Science and Innovation as part of the "Go Lite"
   [TIN2011-24139]
FX This work has been funded by the Spanish Ministry of Science and
   Innovation as part of the "Tecnologias para la Replicacion y Sintesis de
   Experimentos en IS" (TIN2011-23216) and "Go Lite" (TIN2011-24139)
   projects.
CR A P.T., 2005, 2005 LATIN AM C HUMA, P277, DOI [DOI 10.1145/1111360.1111388, 10.1145/1111360.1111388]
   Adlin Tamara., 2010, ESSENTIAL PERSONA LI
   [Anonymous], 2007, FACE 3 0 ESSENTIALS
   [Anonymous], 2003, About Face 2.0: The Essentials of Interaction Design
   [Anonymous], 1991, Human Factors for Informatics Usability, DOI DOI 10.1016/J.INTCOM.2009.04.007
   Aoyama M, 2007, INT REQUIR ENG CONF, P185, DOI 10.1109/RE.2007.50
   Baecker H., 1996, ACM SIGCHI CURRICULA
   Blomquist A., 2002, Proceedings of the Second Nordic Conference on Human-computer Interaction, P197, DOI [10.1145/572020.572044, DOI 10.1145/572020.572044]
   Calde S., 2002, P C HUM FACT COMP SY
   Cooper Alan, 2003, The Origin of Personas
   Dong JM, 2007, LECT NOTES COMPUT SC, V4559, P291
   Ferré X, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.903160
   Goodwin K., 2002, GETTING RES PERSONAS
   Goodwin K., 2002, COOPER U INTERACTION
   Grudin J., 2002, PDC 2002. Proceedings of the Participatory Design Conference, P144
   Hix D., 1993, Developing User Interfaces: Ensuring Usability through Product Process
   *IEEE COMP SOC PRO, 2004, GUID SOFTW ENG BOD K
   Mayhew D.J., 1999, USABILITY ENG LIFECY
   Pruitt J., 2006, The Persona Lifecycle, DOI [DOI 10.1016/B9780125662512/500034, 10.1016/b978-012566251-2/50003-4, DOI 10.1016/B978-012566251-2/50003-4]
   Pruitt John, 2003, P 2003 C DES US EXP, P1, DOI 10.1145/997078.997089
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Vasara K., 2003, THESIS U TECHNOLOGY
NR 22
TC 33
Z9 34
U1 0
U2 30
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1357
EP 1375
DI 10.1016/j.infsof.2012.07.011
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200005
DA 2024-07-18
ER

PT J
AU Abualkishik, AZ
   Desharnais, JM
   Khelifi, A
   Abd Ghani, AA
   Atan, R
   Selamat, MH
AF Abualkishik, Abedallah Zaid
   Desharnais, Jean-Marc
   Khelifi, Adel
   Abd Ghani, Abdul Azim
   Atan, Rodziah
   Selamat, Mohd Hasan
TI An exploratory study on the accuracy of FPA to COSMIC measurement method
   conversion types
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software measurement; Functional size conversion; FPA; COSMI; FTR
ID FUNCTIONAL SIZE; FUNCTION POINTS; REAL-TIME; VALIDATION; IFPUG
AB Background: Functional size measurement methods are increasingly being adopted by software organizations due to the benefits they provide to software project managers. The Function Point Analysis (FPA) measurement method has been used extensively and globally in software organizations. The COSMIC measurement method is considered a second generation FSM method, because of the novel aspects it brings to the FSM field. After the COSMIC method was proposed, the issue of convertibility from FPA to COSMIC method arose, the main problem being the ability to convert FPA historical data to the corresponding COSMIC Function Point (CFP) data with a high level of accuracy, which would give organizations the ability to use the data in their future planning. Almost all the convertibility studies found in the literature involve converting FPA measures to COSMIC measures statistically, based on the final size generated by both methods.
   Objectives: This paper has three main objectives. The first is to explore the accuracy of the conversion type that converts FPA measures to COSMIC measures statistically, and that of the type that converts FPA transaction function measures to COSMIC measures. The second is to propose a new conversion type that predicts the number of COSMIC data movements based on the number of file type references referenced by all the elementary processes in a single application. The third is to compare the accuracy of our proposed conversion type with the other two conversion types found in the literature.
   Method: One dataset from the management information systems domain was used to compare the accuracy of all three conversion types using a systematic conversion approach that applies three regression models: Ordinary Least Squares, Robust Least Trimmed Squares, and logarithmic transformation were used. Four datasets from previous studies were used to evaluate the accuracy of the three conversion types, to which the Leave One Out Cross Validation technique was applied to obtain the measures of fitting accuracy.
   Results: The conversion type most often used as well as the conversion type based on transaction function size were found to generate nonlinear, inaccurate and invalid results according to measurement theory. In addition, they produce a loss of measurement information in the conversion process, because of the FPA weighting system and FPA structural problems, such as illegal scale transformation. Our proposed conversion type avoids the problems inherent in the other two types but not the nonlinearity problem. Furthermore, the proposed conversion type has been found to be more accurate than the other types when the COSMIC functional processes comprise dataset applications that are systematically larger than their corresponding FPA elementary processes, or when the processes vary from small to large. Finally, our proposed conversion type delivered better results over the tested datasets, whereas, in general, there is no statistical significant difference between the accuracy of the conversion types examined for every dataset, particularly the conversion type most often used is not the most accurate.
   Conclusions: Our proposed conversion type achieves accurate results over the tested datasets. However, the lack of knowledge needed to use it over all the datasets in the literature limits the value of this conclusion. Consequently, practitioners converting from FPA to COSMIC should not stay with only one conversion type, assuming that it is the best. In order to achieve a high level of accuracy in the conversion process, all three conversion types must be tested via a systematic conversion approach. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Abualkishik, Abedallah Zaid; Abd Ghani, Abdul Azim; Atan, Rodziah; Selamat, Mohd Hasan] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Dept Informat Syst, Serdang 43400, Darul Ehsan, Malaysia.
   [Desharnais, Jean-Marc] ETS, Software Engn & IT Dept, Montreal, PQ, Canada.
   [Khelifi, Adel] ALHOSN Univ, Software Engn Dept, Abu Dhabi, U Arab Emirates.
C3 Universiti Putra Malaysia; University of Quebec; Ecole de Technologie
   Superieure - Canada
RP Abualkishik, AZ (corresponding author), Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Dept Informat Syst, Serdang 43400, Darul Ehsan, Malaysia.
EM azasoft1@gmail.com; desharnaisjm@gmail.com; a.khelifi@alhosnu.ae;
   azim@fsktm.upm.edu.my; rodziah@fsktm.upm.edu.my; mhbselamat@gmail.com
RI Atan, Rodziah/IUQ-8446-2023; Abualkishik, Abedallah Zaid
   Zaid/AAX-2698-2021
OI Abualkishik, Abedallah Zaid/0000-0003-0920-6454; Atan,
   Rodziah/0000-0003-2655-7280
FU Ministry of Science, Technology & Innovation, Malaysia, under project
   name: Software Project Sizing Metrics for an Object Oriented Environment
   [01-01-04:SF0845]
FX The authors thank Prof. Luigi Lavazza from the University of Insubria in
   Varese, Italy, for his constructive suggestions on this research. We
   also thank the anonymous reviewers for their valuable comments that have
   enriched this research, and the editor-in-chief and the editor who
   handled the paper for their nonstop help and communication. We
   acknowledge the financial support of the Ministry of Science, Technology
   & Innovation, Malaysia, under project name: Software Project Sizing
   Metrics for an Object Oriented Environment, Project Number
   01-01-04:SF0845.
CR Abrahao S., 2008, SOFTW ENG ADV APPL S
   ABRAN A, 1994, J SYST SOFTWARE, V25, P171, DOI 10.1016/0164-1212(94)90004-3
   Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   ABRAN A, 2005, P 15 INT WORKSH SOFT, P227
   Abu Talib M., 2005, UN SCAL TYP 15 INT W
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 2003, P 13 INT WORKSH SOFT
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2003, 141433 ISOIEC
   [Anonymous], 20 INT WORKSH SOFTW
   [Anonymous], 2009, COSMIC MEAS MAN VERS
   Cook RD, 1982, RESIDUALS INFLUENCE
   COSMIC, 2007, ADV REL TOP DEC
   Cuadrado-Gallego JJ, 2007, LECT NOTES COMPUT SC, V4589, P273
   Cuadrado-Gallego JJ, 2008, J SYST SOFTWARE, V81, P661, DOI 10.1016/j.jss.2007.07.042
   Cuadrado-Gallego JJ, 2010, INFORM SOFTWARE TECH, V52, P347, DOI 10.1016/j.infsof.2009.12.001
   Cuadrado-Gallego JJ, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P427, DOI 10.1109/SEAA.2008.75
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   Desharnais J.-M., 2006, INT C SOFTW PROC PRO
   Desharnais J.M., 1988, THESIS UQAM MONTREAL
   Desharnais JM, 2009, LECT NOTES COMPUT SC, V5891, P122, DOI 10.1007/978-3-642-05415-0_9
   Dreger J.B., 1989, FUNCTION POINT ANAL
   FETCKE T, 1999, 199920 U QUEB MONTR
   Gencel C., P 1 INT S EMP SOFTW, P305
   Glass R., 2003, FACTS FALLACIES SOFT
   Graham I., 1995, MIGRATING OBJECT TEC
   Heeringen H.V., 2007, P SOFTW MEAS EUR FOR
   Hetzel William C., 1993, MAKING SOFTWARE MEAS
   *INT FUNCT POINT U, 2004, FUNCT POINTS COUNT P
   ISO, 2005, SOFTW ENG NESMA FUNC
   ISO, 2003, SOFTW ENG IFPUG 4 1
   ISO, 2008, SOFTW ENG FISM FUNCT
   ISO, 2011, SOFTW ENG COSMIC FUN
   ISO, 2002, SOFTW ENG MK 2 FUNCT
   Jeffery R., 1996, Empirical Software Engineering, V1, P11, DOI 10.1007/BF00125809
   Jones C., 1991, APPL SOFTWARE MEASUR
   Jones C., 1998, Estimating Software Cost
   Kan S. H., 2003, METRICS MODELS SOFTW
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P29, DOI 10.1109/MS.1997.582972
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Lavazza L., 2010, P 2010 ACM IEEE INT, P1, DOI DOI 10.1145/1868328.1868338
   Lavazza L, 2011, INFORM SOFTWARE TECH, V53, P874, DOI 10.1016/j.infsof.2011.02.005
   Lavazza L, 2009, INT SYMP EMP SOFTWAR, P100, DOI 10.1109/ESEM.2009.5316018
   Lavazza Luigi, 2009, P 5 INT C PRED MOD S, P1
   Marín B, 2010, DATA KNOWL ENG, V69, P472, DOI 10.1016/j.datak.2010.01.001
   Miles C., 2001, APPL REGRESSION CORR
   Morris P., 1998, IFPUG FALL C ORL FLO
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   REIFER DJ, 1990, J SYST SOFTWARE, V11, P159, DOI 10.1016/0164-1212(90)90082-W
   Rousseeuw P.J., 1987, ROBUST REGRESSION OU
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Whitmire S A, 1995, SOFTWARE DEV, V3, P43
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 59
TC 5
Z9 6
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1250
EP 1264
DI 10.1016/j.infsof.2012.06.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500008
DA 2024-07-18
ER

PT J
AU Sudeikat, J
   Steghöfer, JP
   Seebach, H
   Reif, W
   Renz, W
   Preisler, T
   Salchow, P
AF Sudeikat, J.
   Steghoefer, J-P
   Seebach, H.
   Reif, W.
   Renz, W.
   Preisler, T.
   Salchow, P.
TI On the combination of top-down and bottom-up methodologies for the
   design of coordination mechanisms in self-organising systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Self-organization; Multi-agent system; Resource-flow system; Organic
   computing
AB In resource-flow systems, e.g. production lines, agents are processing resources by applying capabilities to them in a given order. Such systems benefit from self-organization as they become easier to manage and more robust against failures. In this paper, we demonstrate the conception of a decentralized coordination process for resource-flow systems and its integration into an agent-based software system. This process restores a system's functionality after a failure by propagating information about the error through the system until a fitting agent is found that is able to perform the required function. The mechanism has been designed by combining a top-down design approach for self-organizing resource-flow system and a systemic development framework for the development of decentralized, distributed coordination processes. Using the latter framework, a process is designed and integrated in a system realization that follows the former conceptual model. Evaluations of convergence as well as performance of the mechanism and the required amount of redundancy of the system are performed by simulations. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Sudeikat, J.; Renz, W.; Preisler, T.; Salchow, P.] Hamburg Univ Appl Sci, Fac Engn & Comp Sci, Multimedia Syst Lab MMLab, Hamburg, Germany.
   [Steghoefer, J-P; Seebach, H.; Reif, W.] Univ Augsburg, Inst Software & Syst Engn, D-86159 Augsburg, Germany.
C3 Hochschule Angewandte Wissenschaft Hamburg; University of Augsburg
RP Sudeikat, J (corresponding author), Hamburg Univ Appl Sci, Fac Engn & Comp Sci, Multimedia Syst Lab MMLab, Hamburg, Germany.
EM jan.sudeikat@acm.org; steghoefer@informatik.uni-augsburg.de;
   seebach@informatik.uni-augsburg.de; reif@informatik.uni-augsburg.de;
   wolfgang.renz@haw-hamburg.de; thomas.preisler@haw-hamburg.de;
   peter.salchow@haw-hamburg.de
RI Steghöfer, Jan-Philipp/CAC-0554-2022; Steghöfer,
   Jan-Philipp/AAM-2555-2020
OI Steghöfer, Jan-Philipp/0000-0003-1694-0972; Steghöfer,
   Jan-Philipp/0000-0003-1694-0972; Reif, Wolfgang/0000-0002-4086-0043;
   Sudeikat, Jan/0009-0007-7871-9006
FU German Research Foundation (DFG); DFG [SPP 1183]
FX This research is partly sponsored by the German Research Foundation
   (DFG) in the project SodekoVS and in the DFG special priority program
   "Organic Computing" (SPP 1183) in the project SAVE ORCA.
CR [Anonymous], 2006, SPRINGER SERIES SYNE
   Brun Y., 2009, ENG SELF ADAPTIVE SY, P48, DOI [10.1007/978-3-642-02161-9_3, DOI 10.1007/978-3-642-02161-9_3]
   Casadei M., 2006, 5 INT WORKSH FDN COO
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cicirello VA, 2001, 5TH INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS, PROCEEDINGS, P383, DOI 10.1109/ISADS.2001.917443
   Clair G, 2008, SASO 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, PROCEEDINGS, P107, DOI 10.1109/SASO.2008.19
   Cossentino Massimo, 2007, International Journal of Agent-Oriented Software Engineering, V1, P91, DOI 10.1504/IJAOSE.2007.013266
   De Wolf T, 2007, LECT NOTES ARTIF INT, V4335, P28
   Forrester JW, 1961, Industrial dynamics
   Gagné C, 2006, EUR J OPER RES, V174, P1427, DOI 10.1016/j.ejor.2005.02.063
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Giorgini P., 2005, AGENT ORIENTED METHO, P20, DOI DOI 10.4018/978-1-59140-581-8.CH002
   Güdemann M, 2008, SASO 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, PROCEEDINGS, P233, DOI 10.1109/SASO.2008.66
   Herrmann K., 2006, INT T SYSTEMS SCI AP, V2, P41
   Hoffmann A., 2010, WORKSH BIOINSP SELF
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jennings NR, 2003, IEEE CONTR SYST MAG, V23, P61, DOI 10.1109/MCS.2003.1200249
   Kaddoum E, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P137, DOI 10.1109/ComputationWorld.2009.100
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Liouane N, 2007, INT J COMPUT COMMUN, V2, P174, DOI 10.15837/ijccc.2007.2.2350
   Mamei M, 2006, J SYST ARCHITECT, V52, P443, DOI 10.1016/j.sysarc.2006.02.002
   Muhl G, 2006, Distributed Event-Based Systems
   Nafz F, 2010, LECT NOTES COMPUT SC, V6407, P17, DOI 10.1007/978-3-642-16576-4_2
   Nafz F, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P96, DOI 10.1109/SEAMS.2009.5069078
   Nafz F, 2009, LECT NOTES COMPUT SC, V5586, P17, DOI 10.1007/978-3-642-02704-8_3
   Parunak HV, 1998, LECT NOTES ARTIF INT, V1534, P10
   Parunak HVD, 2004, MU S ART SOC SIM ORG, P341
   Phillips A., 2010, SYMBOLIC SYSTEMS BIO
   Priami C, 1995, COMPUT J, V38, P578, DOI 10.1093/comjnl/38.7.578
   Prokopenko M, 2008, ADV INFORM KNOWL PRO, P3, DOI 10.1007/978-1-84628-982-8_1
   Puviani M, 2009, 2009 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 2, P66
   Renz W., 2008, ORG ADAPTATION MULTI, P72
   Rougemaille S, 2009, LECT NOTES COMPUT SC, V5386, P74, DOI 10.1007/978-3-642-01338-6_6
   Seebach H., 2010, 2010 Proceedings of 4th IEEE International Conference on Self-Adaptive and Self-Organizing Systems (SASO 2010), P194, DOI 10.1109/SASO.2010.26
   Seebach H., 2011, DESIGN IMPLEMENT SEL
   Seebach H, 2007, IEEE C EVOL COMPUTAT, P4215, DOI 10.1109/CEC.2007.4425021
   Serugendo GD, 2006, INFORM-J COMPUT INFO, V30, P45
   Steghöfer JP, 2010, LECT NOTES COMPUT SC, V5974, P87, DOI 10.1007/978-3-642-11950-7_9
   Sudeikat J., 2010, THESIS U HAMBURG
   Sudeikat J., 2010, P MULT LOG LANG ORG, V627
   Sudeikat J., 2004, Agentoriented software engineering, VV, P126, DOI DOI 10.1007/978-3-540-30578-1_9
   Sudeikat J., 2008, APPL COMPLEX ADAPTIV, P229
   Sudeikat J., 2009, KOMMUNIKATION VERTEI, P79
   Sudeikat J., 2009, COMMUNICATIONS SIWN, V7, P91
   Sudeikat J., 2009, ELECT COMMUNICATIONS, V17
   Sudeikat J, 2009, INT CONF SELF SELF, P291, DOI 10.1109/SASO.2009.10
   Sudeikat J, 2011, LECT NOTES COMPUT SC, V6038, P80
   Sudeikat J, 2010, LECT NOTES COMPUT SC, V6090, P251, DOI 10.1007/978-3-642-14412-7_12
   Sudeikat J, 2009, 2009 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 2, P104
   Van dyke Parunak H, 2004, LECT NOTES COMPUT SC, V2935, P123
   Yokoo M, 1998, IEEE T KNOWL DATA EN, V10, P673, DOI 10.1109/69.729707
NR 51
TC 9
Z9 12
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2012
VL 54
IS 6
BP 593
EP 607
DI 10.1016/j.infsof.2011.08.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 922ZH
UT WOS:000302587100006
DA 2024-07-18
ER

PT J
AU Ovaska, E
   Evesti, A
   Henttonen, K
   Palviainen, M
   Aho, P
AF Ovaska, Eila
   Evesti, Antti
   Henttonen, Katja
   Palviainen, Marko
   Aho, Pekka
TI Knowledge based quality-driven architecture design and evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality attribute; Model-driven development; Software architecture;
   Ontology; Evaluation; Tool
ID SOFTWARE; RELIABILITY
AB Modelling and evaluating quality properties of software is of high importance, especially when our every day life depends on the quality of services produced by systems and devices embedded into our surroundings. This paper contributes to the body of research in quality and model driven software engineering. It does so by introducing: (1) a quality aware software architecting approach and (2) a supporting tool chain. The novel approach with supporting tools enables the systematic development of high quality software by merging benefits of knowledge modelling and management, and model driven architecture design enhanced with domain-specific quality attributes. The whole design flow of software engineering is semi-automatic; specifying quality requirements, transforming quality requirements to architecture design, representing quality properties in architectural models, predicting quality fulfilment from architectural models, and finally, measuring quality aspects from implemented source code. The semi-automatic design flow is exemplified by the ongoing development of a secure middleware for peer-to-peer embedded systems. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Ovaska, Eila; Evesti, Antti; Henttonen, Katja; Palviainen, Marko; Aho, Pekka] VTT Tech Res Ctr Finland, Oulu 90570, Finland.
C3 VTT Technical Research Center Finland
RP Ovaska, E (corresponding author), VTT Tech Res Ctr Finland, Kaitovayla 1, Oulu 90570, Finland.
EM eila.ovaska@vtt.fi
RI Palviainen, Marko/KCY-0649-2024
OI Evesti, Antti/0000-0002-2350-9673; Ovaska, Eila/0000-0003-2114-3257
FU European Commission [EU-FP6-IST 0333563]; National Technology Agency
   (Tekes); VU Technical Research Centre of Finland
FX The publication of this paper has been supported by the following
   research projects: EU-SMEPP (EU-FP6-IST 0333563), ITEA-COSI,
   ITEA-CAM4HOME and ARTEMIS-SOFIA. The first mentioned project is mainly
   funded by the European Commission. The three others are funded by the
   National Technology Agency (Tekes) and VU Technical Research Centre of
   Finland.
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], ENCY INFORM SCI TECH
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 2007, P INT WORKSH SYST DE
   AVGERIOU P, 2007, SIGSOFT SOFTW ENG NO, V32, P41, DOI DOI 10.1145/1281421.1281443
   BACHMANN F, 2000, 2000TR001 CMUSEI
   BACHMANN F, 2001, 23 INT C SOFTW ENG I
   BARSTOW A, 2004, OWL WEB ONTOLOGY LAN
   BOOCH G, 2005, MDA J MODEL DRIVEN A
   Booch G., 1996, UNIFIED MODELING LAN
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BRAY T, 1999, EXTENSIBLE MARKUP LA
   Brickley D., 2004, RDF VOCABULARY DESCR
   BRUCK J, 2007, DEFINING GENERICS UM
   CHENG SW, 2002, P 11 IEEE INT S HIGH
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   DOBSON G, 2005, P 31 EUROMICRO C SOF
   Edgington T, 2004, COMMUN ACM, V47, P85, DOI 10.1145/1029496.1029499
   Evans J.R., 1999, The Management and Control of Quality, V4th
   EVESTI A, 2007, P INT C SOFTW SYST E
   EVESTI A, 2008, P 12 INT SOFTW PROD
   FARENHORST R, 2007, P 18 AUSTR SOFTW ENG
   FARENHOST R, 2007, LECT NOTES COMPUTER, V4758
   FAROOQ U, 2008, P 19 AUSTR C SOFTW E
   FERNANDEZLOPEZ M, 1997, P SPRING S ONT ENG A
   *FIPA, 2002, 20090211 FIPA
   France R., 2007, FUTURE SOFTWARE ENG
   GAMMA E, 1994, DESING PATTERNS ELEM
   Garshol L.M., 2002, BNF EBNF WHAT ARE TH
   GLASER H, 2006, RESIST ONTOLOGY
   GRUENBACKER P, 2003, SOFTWARE SYSTEMS MOD, V3, P235
   Hasselbring W, 2006, COMPUTER, V39, P91, DOI 10.1109/MC.2006.142
   Hayes P., 2004, RDF SEMANTICS
   Heckel Reiko., 2003, Electronic Notes in Theoretical Computer Science, V82, P33
   HENTTONEN K, 2007, P 2007 C SOFTW ENG S
   HENTTONEN K., 2007, OPEN SOFTWARE ENG J, V1, P1
   HENTTONEN K, 2007, 2387 VTT TECHN RES C
   Henttonen K, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P41, DOI 10.1109/WICSA.2009.5290790
   *IEEE, 2005, 9821 IEEE
   IMMONEN A, 2005, P 31 EUR C SOFTW ENG
   IMMONEN A, 2008, P 12 INT SOFTW PROD, V2
   IMMONEN A, 2007, 7 INT C QUAL SOFTW Q
   Immonen A., 2006, Research Issues in Software Product-Lines - Engineering and Managemen, P373, DOI DOI 10.1007/978-3-540-33253-4_10
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   *ISO IEC, 2003, 912624 ISOIEC
   KALAOJA J, 2008, D3 2 CONCEPTUAL ARCH
   KALAOJA J, 2008, D3 3 CONCRETE ARCHIT
   Kelly S., 2008, Domain-Specific Modeling
   Matinlassi M., 2002, QUALITY DRIVEN ARCHI
   McGuinness D.L., 2004, W3C RECOMMENDATION, V10
   Mellor S.J., 2004, MDA DISTILLED
   MERILINNA J, 2005, TOOL QUALITY DRIVEN
   MERILINNA J, 2005, P ESTONIAN ACAD SCI, V11
   Miller J., 2003, MDA Guide
   Musa JD, 1996, COMPUTER, V29, P61, DOI 10.1109/2.544239
   Niemelä E, 2005, IEEE T SOFTWARE ENG, V31, P361, DOI 10.1109/TSE.2005.60
   NIEMELA E, 2005, 5 WORK IEEE IFIP C S
   NIEMELA E, 2008, 3 INT C EV NOV APPR
   *OBJ MAN GROUP, 2008, MET OBJ FAC MOF 2 0
   *OBJ MAN GROUP, 2007, MARTE SPEC
   *OBJ MAN GROUP, 2006, CORBA COMP MOD V 4 0
   *OBJ MAN GROUP, 2005, PROP MDA FDN MOD
   *OBJ MAN GROUP, 2005, UML SUP SPEC 2 0
   PAKKALA D, 2005, P JOINT INT C AUT AU
   PALVIAINEN M, 2010, 3 INT C SOFTW UNPUB
   ROBINSON H, 1999, INT C TEST COMP SOFT
   RUBEL D., 2006, Queue, V4, P36, DOI [10.1145/1165754.1165767, DOI 10.1145/1165754.1165767]
   *RUP, 2009, RAT UN PROC BEST PRA
   SAVOLAINEN P, 2007, 33 EUROMICRO C SOFTW
   SELIC B, 2004, 2 SUMM SCH MDA EMB S
   TARVAINEN P, 2008, OPEN SOFTWARE ENG J, V2, P1
   Tarvainen P, 2007, P INT COMP SOFTW APP, P579
   TIAN M, 2004, P IEEE WIC ACM INT C
   UTTING M, 2005, P VER SOFTW THEOR TO
   UTTING M, 2005, TAXONOMY MODEL BASED
   VAIRO C, 2008, 5 ANN INT C MOB UB S
   Zhou C, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P472, DOI 10.1109/ICWS.2004.1314772
   ZHOU C, 2005, IEEE INT C BUS ENG I
   Zhou CY, 2005, ADV NONLINEAR STUD, V5, P1
   ZHOU J, 2007, 6 WORK IEEE IFIP C S
   ZHOU J, 2008, P QACOS2008 IEEE COM
   2009, SCRUM WHAT IS SCRUM
NR 84
TC 29
Z9 33
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 577
EP 601
DI 10.1016/j.infsof.2009.11.008
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 602PE
UT WOS:000278150500001
DA 2024-07-18
ER

PT J
AU Al-Emran, A
   Kapur, P
   Pfahl, D
   Ruhe, G
AF Al-Emran, Ahmed
   Kapur, Puneet
   Pfahl, Dietmar
   Ruhe, Guenther
TI Studying the impact of uncertainty in operational release planning - An
   integrated method and its initial evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Operational release planning; Uncertainty; Impact analysis;
   Discrete-event simulation; Heuristic optimization; Explorative case
   study
ID PROCESS SIMULATION; SOFTWARE
AB Context: Uncertainty is an unavoidable issue in software engineering and an important area of investigation. This paper studies the impact of uncertainty on total duration (i.e., make-span) for implementing all features in operational release planning.
   Objective: The uncertainty factors under investigation are: (1) the number of new features arriving during release construction, (2) the estimated effort needed to implement features, (3) the availability of developers, and (4) the productivity of developers.
   Method: An integrated method is presented combining Monte-Carlo simulation (to model uncertainty in the operational release planning (ORP) process) with process simulation (to model the ORP process steps and their dependencies as well as an associated optimization heuristic representing an organization-specific staffing policy for make-span minimization). The method allows for evaluating the impact of uncertainty on make-span. The impact of uncertainty factors both in isolation and in combination are studied in three different pessimism levels through comparison with a baseline plan. Initial evaluation of the method is done by an explorative case study at Chartwell Technology Inc. to demonstrate its applicability and its usefulness.
   Results: The impact of uncertainty on release make-span increases - both in terms of magnitude and variance - with an increase of pessimism level as well as with an increase of the number of uncertainty factors. Among the four uncertainty factors, we found that the strongest impact stems from the number of new features arriving during release construction. We have also demonstrated that for any combination of uncertainty factors their combined (i.e., simultaneous) impact is bigger than the addition of their individual impacts.
   Conclusion: The added value of the presented method is that managers are able to study the impact of uncertainty on existing (i.e., baseline) operational release plans pro-actively. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Al-Emran, Ahmed; Pfahl, Dietmar; Ruhe, Guenther] Univ Calgary, Dept Elect & Comp Engn, Schulich Sch Engn, Calgary, AB T2N 1N4, Canada.
   [Kapur, Puneet] Chartwell Technol Inc, Calgary, AB T2P 3N7, Canada.
   [Pfahl, Dietmar] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
   [Pfahl, Dietmar] Simula Res Lab, N-1325 Lysaker, Norway.
   [Ruhe, Guenther] Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary; University of Oslo; University of Calgary
RP Al-Emran, A (corresponding author), Univ Calgary, Dept Elect & Comp Engn, Schulich Sch Engn, 2500 Univ Calgary NW, Calgary, AB T2N 1N4, Canada.
EM aalemran@ucalgary.ca
RI Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015
OI Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X; Kapur,
   Puneet/0000-0001-8821-9012
FU Informatics Circle of Research Excellence (iCORE) of Alberta in Canada;
   Natural Sciences and Engineering Research Council (NSERC) of Canada
   [327665-06, 250343-07]
FX Part of the work presented was financially supported by the Informatics
   Circle of Research Excellence (iCORE) of Alberta in Canada, and the
   Natural Sciences and Engineering Research Council (NSERC) of Canada
   under Discovery Grant No. 327665-06 as well as Discovery Grant No.
   250343-07. Ahmed Al-Emran would like to thank NSERC, iCORE, and the
   Killam Trust for their postgraduate/pre-doctoral scholarships and to
   Imagine That Inc. for supporting implementation of the research
   prototype. Chartwell's Jenny Ye and the late Andrew Smith provided
   valuable contributions for the acquisition of the simulation data and
   portions of Section 5. Thanks to Jim McElroy and Kornelia Streb for
   their efforts and comments on the paper.
CR Acuña ST, 2006, IEEE SOFTWARE, V23, P94, DOI 10.1109/MS.2006.47
   Al-Emran A., 2007, P 10 INT C INT DES P, P191
   Al-Emran A, 2008, LECT NOTES COMPUT SC, V5007, P269, DOI 10.1007/978-3-540-79588-9_24
   ALEMRAN A, 2007, SOFTW PROCESS IMPROV, V13, P19
   [Anonymous], 2009, CHAOS SUMM 2009
   Anselmo D, 2003, COMMUN ACM, V46, P121, DOI 10.1145/948383.948391
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   BOLCH A, 2003, MURPHYS LAW
   Chang CK, 2001, ANN SOFTW ENG, V11, P107, DOI 10.1023/A:1012543203763
   Duggan J, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.1293077
   Gruschke TM, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487693
   Johnson D, 1997, J ROY STAT SOC D-STA, V46, P387, DOI 10.1111/1467-9884.00091
   Kapur P, 2008, J SOFTW MAINT EVOL-R, V20, P365, DOI 10.1002/smr.379
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Kitchenham B, 2005, INFORM SOFTWARE TECH, V47, P761, DOI 10.1016/j.infsof.2005.01.001
   Kitchenham BA, 2005, INFORM SOFTWARE TECH, V47, P747, DOI 10.1016/j.infsof.2004.05.005
   Kolisch R., 1999, Project scheduling: Recent models, algorithms and applications, P147, DOI [DOI 10.1007/978-1-4615-5533-97, 10.1007/978-1-4615-5533-97, 10.1007/978-1-4615-5533-9_7, DOI 10.1007/978-1-4615-5533-9_7]
   Kolisch R, 2006, EUR J OPER RES, V174, P23, DOI 10.1016/j.ejor.2005.01.065
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   Padberg F, 2005, P INT COMP SOFTW APP, P127
   Padberg F, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P300, DOI 10.1109/APSEC.2004.39
   Padberg F, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P581, DOI 10.1109/APSEC.2002.1183094
   Pfahl Dietmar, 2007, Software Process: Improvement and Practice, V12, P475, DOI 10.1002/spip.336
   Pfahl D, 2006, VALUE-BASED SOFTWARE ENGINEERING, P263
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   *STAND GROUP, 2009, SOL ENT PROJ PORTF M
   Stark GE, 1999, J SOFTW MAINT-RES PR, V11, P293, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<293::AID-SMR198>3.0.CO;2-R
   Turban E., 2005, Decision Support Systems and Intelligent Systems, V7th ed
   Verner JM, 2007, INFORM SOFTWARE TECH, V49, P181, DOI 10.1016/j.infsof.2006.05.001
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yang B, 2008, IEEE T SOFTWARE ENG, V34, P813, DOI 10.1109/TSE.2008.47
   Zhang H, 2008, ASIA PAC SOFWR ENG, P59, DOI 10.1109/APSEC.2008.50
   ZIV H, 1996, UCITR9633
NR 35
TC 20
Z9 21
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2010
VL 52
IS 4
BP 446
EP 461
DI 10.1016/j.infsof.2009.11.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 576CL
UT WOS:000276121400007
DA 2024-07-18
ER

PT J
AU Eichelberger, H
   Schmid, K
AF Eichelberger, Holger
   Schmid, Klaus
TI Guidelines on the aesthetic quality of UML class diagrams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Layout guidelines; Aesthetic quality; UML class diagrams; Software
   engineering; Modeling tools; Automatic layout
AB In the past. formatting guidelines have proved to be a successful method to improve the readability of source code. With the increasing success of visual specification languages such as UML for model-driven software engineering visual guidelines are needed to standardize the presentation and the exchange of modeling diagrams with respect to human communication, understandability and readability. In this article, we introduce a new and encompassing taxonomy of visual guidelines capturing the aesthetic quality of UML class diagrams. We propose these guidelines as a framework to improve the aesthetic quality and thus the understandability of UML class diagrams. To validate this claim, we describe in detail a controlled experiment carried out as a pilot study to gather preliminary insights on the effects of some or the guideline rules on the understandability of UML class diagrams. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Eichelberger, Holger; Schmid, Klaus] Univ Hildesheim, D-31141 Hildesheim, Germany.
C3 University of Hildesheim
RP Eichelberger, H (corresponding author), Univ Hildesheim, Marienburger Pl 22, D-31141 Hildesheim, Germany.
RI Schmid, Klaus/AAB-1480-2019
OI Schmid, Klaus/0000-0002-4147-3942
CR Ambler S.W., 2005, ELEMENTS UML 2 0 STY
   ANDRIYEVSKA O, 2005, VISSOFT05
   [Anonymous], 2000, Information Visualization: Perception for Design
   [Anonymous], EXPT SOFTWARE ENG
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Cockburn A., 2001, Writing effective use cases
   DENGLER E, 1998, P LECT NOTES COMPUTE, V1547
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Egyed A, 2002, ACM T SOFTW ENG METH, V11, P449, DOI 10.1145/606612.606616
   EICHELBERGER H, 2005, THESIS WURZBURG U GE
   EICHELBERGER H, 2002, 298 U WURZB I INF
   EICHELBERGER H, 2008, EXPT MAT SOFTWARE EN
   EICHELBERGER H, 2008, P SOFTVIS 2008 ACM S
   EICHELBERGER H, 2008, 108 U HILD I INF
   Eichelberger H, 2003, P 2003 ACM S SOFTW V
   KONING H, 2002, SIGDOC 02
   LANGE CF, 2006, LECT NOTES COMPUTER, V4199
   LANZA M, 2003, P VISS 2003 INT WORK
   *OMG, 2007, MOD LANG SUP VERS 2
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   PURCHASE H, 2003, SOFTWARE VISUALIZATI
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase H. C., 2002, Journal of Graph Algorithms and Applications, V6, DOI 10.7155/jgaa.00054
   PURCHASE HC, 2000, LECT NOTES COMPUTER, V1984
   PURCHASE HC, 2001, P AUSTR S INF VIS AU
   SUN D, 2005, P 13 INT WORKSH PROG, P13
   YUSUF S, 2007, ICPC 07
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 30
TC 28
Z9 30
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2009
VL 51
IS 12
BP 1686
EP 1698
DI 10.1016/j.infsof.2009.04.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 510ZR
UT WOS:000271133600005
DA 2024-07-18
ER

PT J
AU Krishna, A
   Vilkomir, SA
   Ghose, AK
AF Krishna, Aneesh
   Vilkomir, Sergiy A.
   Ghose, Aditya K.
TI Consistency preserving co-evolution of formal specifications and
   agent-oriented conceptual models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements Engineering; Z notation; i(center dot) framework; Formal
   specifications
AB Many modelling techniques tend to address "late-phase" requirements while many critical modelling decisions (such as determining the main goals of the system, how the stakeholders depend on each other, and what alternatives exist) are taken during early-phase requirements engineering. The i(center dot) modelling framework is a semiformal agent-oriented conceptual modelling language that is well-suited for answering these questions. This paper addresses key challenge faced in the practical deployment of agent-oriented conceptual modelling frameworks such as i(center dot). Our approach to addressing this problem is based on the observation that the value of conceptual modelling in the i(center dot) framework lies in its use as a notation complementary to existing requirements modelling and specification languages, i.e., the expressive power of i(center dot) complements rather than supplants that of existing notations. The use of i(center dot) in this fashion requires that we define methodologies that support the co-evolution of i(center dot) models with more traditional specifications. This research examines how this might be done with formal specification notations (specifically Z). (C) 2008 Elsevier B.V. All rights reserved.
C1 [Vilkomir, Sergiy A.] Univ Tennessee, Dept Elect Engn & Comp Engn, Software Qual Res Lab, Knoxville, TN 37996 USA.
   [Krishna, Aneesh; Ghose, Aditya K.] Univ Wollongong, Sch Informat Technol & Comp Sci, Decis Syst Lab, Wollongong, NSW 2522, Australia.
C3 University of Tennessee System; University of Tennessee Knoxville;
   University of Wollongong
RP Vilkomir, SA (corresponding author), Univ Tennessee, Dept Elect Engn & Comp Engn, Software Qual Res Lab, Knoxville, TN 37996 USA.
EM aneesh@uow.edu.au; vilkomir@cs.utk.edu; aditya@uow.edu.au
OI Krishna, Aneesh/0000-0001-8637-5732
CR BERT D, 2003, LNCS, V2651
   BHUIYAN M, 2006, CO EVOLUTION AGENT O, P446
   Boehm BW., 1981, Software Engineering Economics
   Bowen J.P., 1999, FACIT SERIES
   Bowen J. P., 1996, FORMAL SPECIFICATION
   BRESCIANI P, 2003, LNCS, V2592, P21
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   CHUNG L, 1995, PROC INT CONF SOFTW, P25, DOI 10.1145/225014.225017
   Chung L., 2000, Non-functional Requirements in Software Engineering
   DARDENNE A, 1993, SCI COMPUTER PROGRAM, V20
   Fuxman A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P174
   JIA X, 1995, APPROACH ANIMATING Z
   JIA X, 1998, ZTC TYPE CHECKER Z N
   JORDAN D, 1990, 5 OXF Z US M SPRING, P93
   Krishna A, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P159
   Krishna A., 2004, P 6 INT C ENT INF SY, P192
   KRISHNA A, 2006, INT J, V2, P305
   Mahony B, 2000, IEEE T SOFTWARE ENG, V26, P150, DOI 10.1109/32.841115
   MYLOPOULOS EYJ, 1994, P 16 INT C SOFTW ENG, P159
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   ORA Canada, Z EVES
   Spivey J.M., 1992, PRENTICE HALL INT SE
   Vilkomir SA, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P147, DOI 10.1109/ASWEC.2004.1290467
   Wagner G, 2003, INFORM SYST, V28, P475, DOI 10.1016/S0306-4379(02)00027-3
   Wang X, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P59
   YU E, 2001, AGENT ORIENTATION MO
   YU E, 1995, THESIS U TORONTO TOR, P124
   Yu E. S. K., 1994, Proceedings of the Fourth Annual Workshop on Information Technologies and Systems. WITS '94, P21
   Yu Eric., 1998, P 4 INT WORKSHOP REQ, P15
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 30
TC 6
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 478
EP 496
DI 10.1016/j.infsof.2008.05.015
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900018
DA 2024-07-18
ER

PT J
AU Collins, RW
   Hevner, AR
   Walton, GH
   Linger, RC
AF Collins, Rosann Webb
   Hevner, Alan R.
   Walton, Gwendolyn H.
   Linger, Richard C.
TI The impacts of function extraction technology on program comprehension:
   A controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE program comprehension; behavior understanding; knowledge workers;
   software development; function extraction
ID SOURCE CODE; KNOWLEDGE; MODEL; PRODUCTIVITY; MAINTENANCE; SYSTEMS;
   SCIENCE
AB Program comprehension is a critical, time-consuming, and highly error-prone task for software developers. Function extraction (FX) is a theory and technology that automates and supports program comprehension by calculating the semantic behaviors of programs at many levels of abstraction and displaying those behaviors in a standard, readable format in terms of the "as-built" specification of the program, In this experimental Study, developers using an FX prototype tool to assist them in determining the behavior of software modules have significantly more effective program comprehension, in both increased accuracy of understanding and reduced time on task. Moreover, developers have a positive reaction toward the use of the FX technology, and use of FX does not reduce their overall comprehension of the program. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Collins, Rosann Webb; Hevner, Alan R.] Univ S Florida, Tampa, FL 33620 USA.
   [Walton, Gwendolyn H.] Florida So Coll, Lakeland, FL USA.
   [Linger, Richard C.] Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
C3 State University System of Florida; University of South Florida;
   Software Engineering Institute; Carnegie Mellon University
RP Collins, RW (corresponding author), Univ S Florida, 4202 E Fowler Ave,CIS1040, Tampa, FL 33620 USA.
EM rcollins@coba.usf.edu; ahevner@coba.usf.edu; gwalton@flsouthern.edu;
   rlinger@sei.cmu.edu
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   [Anonymous], 1986, ESP 86
   [Anonymous], 1980, Winthrop computer systems series
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   BRYNJOLFSSON E, 1988, COMMUN ACM, V41, P49
   CANT SN, 1995, INFORM SOFTWARE TECH, V37, P351, DOI 10.1016/0950-5849(95)91491-H
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   Craik K.J.W., 1943, The Nature of Explanation, DOI DOI 10.2307/2018933
   Davenport TH, 2002, MIT SLOAN MANAGE REV, V44, P23
   Davis GB, 2002, COMMUN ACM, V45, P67, DOI 10.1145/585597.585617
   Drucker PF, 1999, CALIF MANAGE REV, V41, P79, DOI 10.2307/41165987
   Du Bois B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P334, DOI 10.1109/CSMR.2005.25
   Hammer M, 2004, MIT SLOAN MANAGE REV, V45, P14
   HAUSLER P, 1990, IEEE SOFTWARE, V7
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hevner AR, 2005, CMUSEI2005TR015
   Karahasanovic A, 2007, J SYST SOFTWARE, V80, P1541, DOI 10.1016/j.jss.2006.10.041
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   LINGER R, 2007, P 40 ANN HAW INT C S, pA277
   LINGER R, 2007, P AM I AER ASTR AIAA, P2929
   Linger R.C., 1979, Structured Programming; Theory and Practice the Systems Programming Series
   LIVARI J, 2001, 9 EUR C INF SYST BLE, P1025
   Oshana RS, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.730840
   Pennington Nancy, 1987, Empirical studies of programmers, P100
   PLESZKOCH M, 2004, P 37 ANN HAW INT C S
   Rajlich V, 1997, PROG COMPREHEN, P160, DOI 10.1109/WPC.1997.601284
   Ramirez Y.W., 2004, Journal of Intellectual Capital, V5, P602, DOI [10.1108/14691930410567040, DOI 10.1108/14691930410567040]
   Schwarz N, 1998, ANNU REV SOCIOL, V24, P239, DOI 10.1146/annurev.soc.24.1.239
   Shaft TM, 2006, MIS QUART, V30, P29
   SHAFT TM, 1995, INFORM SYST RES, V6, P286, DOI 10.1287/isre.6.3.286
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Singer Janice., 1997, P 1997 C CTR ADV STU, P209
   Soloway E., 1988, The nature of expertise, P129
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Storey MAD, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P12, DOI 10.1109/WCRE.1997.624572
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   Tilley S. R., 1996, CMUSEI96TR019
   Umphress DA, 2006, SCI COMPUT PROGRAM, V60, P121, DOI 10.1016/j.scico.2005.10.001
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   VONMAYRHAUSER A, 1993, PROCEEDINGS OF THE SIXTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING - CASE 93, P230, DOI 10.1109/CASE.1993.634824
   Wang C., 2005, J INFORM TECHNOLOGY, V6, P15
   WANG T, 2005, ASE 05, P347
   [No title captured]
NR 46
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1165
EP 1179
DI 10.1016/j.infsof.2008.04.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 355LA
UT WOS:000259709200009
DA 2024-07-18
ER

PT J
AU Ven, K
   Mannaert, H
AF Ven, Kris
   Mannaert, Herwig
TI Challenges and strategies in the use of Open Source Software by
   Independent Software Vendors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open Source Software; Independent Software Vendor; contributing
AB Open Source Software (OSS) has already been adopted by a large number of organizations. An important - but sometimes neglected group of OSS users are Independent Software Vendors (ISVs). ISVs often develop their applications on top of OSS platform software. Frequently, this requires making several extensions and modifications to these OSS components. We identify a number of challenges that ISVs face in handling these extensions and modifications. Next, we describe several strategies ISVs can follow in maintaining these modifications. Finally, we suggest an opportunity for a closer collaboration between OSS projects and ISVs which could be mutually beneficial. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Ven, Kris; Mannaert, Herwig] Univ Antwerp, Dept Management Informat Syst, B-2000 Antwerp, Belgium.
C3 University of Antwerp
RP Ven, K (corresponding author), Univ Antwerp, Dept Management Informat Syst, Prinsstr 13, B-2000 Antwerp, Belgium.
EM kris.ven@ua.ac.be; herwig.mannaert@ua.ac.be
CR [Anonymous], P 1 INT C OP SOURC S
   [Anonymous], 37 HAW INT C SYST SC
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Berger O, 2006, INT J INF TECHNOL WE, V1, P1, DOI 10.4018/jitwe.2006070101
   Carr NG, 2003, HARVARD BUS REV, V81, P41
   Christensen C.M., 2003, INNOVATORS SOLUTION
   Crowston K., 2006, Knowledge Technology & Policy, V18, P65, DOI 10.1007/s12130-006-1004-8
   DEDRICK J, 2003, P WORKSH STAND MAK C, P236
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fitzgerald B., 2005, PERSPECTIVES FREE OP, P93
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Gacek C, 2004, IEEE SOFTWARE, V21, P34, DOI 10.1109/MS.2004.1259206
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Krishnamurthy S., 2006, Knowledge Technology & Policy, V18, P17, DOI 10.1007/s12130-006-1002-x
   Lundell B, 2006, INT FED INFO PROC, V203, P155
   Lussier S, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1259222
   Mannaert H, 2003, INTERNET RES, V13, P94, DOI 10.1108/10662240310469042
   MANNAERT H, 2006, INT C SOFTW ENG ADV, P35
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   O'Reilly T., 2005, PERSPECTIVES FREE OP, P461
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Stewart KJ, 2006, MIS QUART, V30, P291
   Ven K, 2006, INT FED INFO PROC, V203, P111
   Watson R.T., 2005, MIS Q EXEC, V4, P329
   WEST J, 2006, J IT STANDARDS RES, V4, P1
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 26
TC 36
Z9 40
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 991
EP 1002
DI 10.1016/j.infsof.2007.09.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900010
DA 2024-07-18
ER

PT J
AU Zdun, U
   Avgeriou, P
AF Zdun, Uwe
   Avgeriou, Paris
TI A catalog of architectural primitives for modeling architectural
   patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software architecture; software patterns; pattern primitives; modeling;
   UML
ID DESIGN PATTERNS; LANGUAGE; UML
AB Architectural patterns are a fundamental aspect of the architecting process and subsequently the architectural documentation. Unfortunately, there is only poor support for modeling architectural patterns for two reasons. First, patterns describe recurring design solutions and hence do not directly match the elements in modeling languages. Second, they support an inherent variability in the solution space that is hard to model using a single modeling solution. This paper proposes to address this problem by finding and representing architectural primitives: fundamental, formalized modeling elements in representing patterns. In particular, we examined architectural patterns from the components and connectors architectural view, and we discovered recurring primitive abstractions among the patterns, that also demonstrate a degree of variability for each pattern. We used UML 2 as the language for representing these primitive abstractions as extensions of the standard UML elements. The contribution of this approach is that we provide a generic and extensible concept for modeling architectural patterns by means of architectural primitives. Also, we can demonstrate a first set of primitives that participate in several well-known architectural patterns. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Zdun, Uwe] Vienna Univ Technol, Distributed Syst Grp, A-1040 Vienna, Austria.
   [Avgeriou, Paris] Univ Groningen, Dept Comp Sci, NL-9700 AB Groningen, Netherlands.
C3 Technische Universitat Wien; University of Groningen
RP Zdun, U (corresponding author), Vienna Univ Technol, Distributed Syst Grp, A-1040 Vienna, Austria.
EM zdun@infosys.tuwien.ac.at; paris@cs.rug.nl
RI Zdun, Uwe/AFR-2161-2022
OI Avgeriou, Paris/0000-0002-7101-0754
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], IEEESTD14712000
   [Anonymous], 2000, PATTERNS CONCURRENT
   [Anonymous], WORKSH INT SIGN PROC
   AVGERIOU P, 2004, LNCS, V3297
   Avgeriou P., 2005, P 10 EUR C PATT LANG
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Björkander M, 2003, IEEE SOFTWARE, V20, P57, DOI 10.1109/MS.2003.1207456
   Bosch J, 1998, J OBJECT-ORIENT PROG, V11, P18
   Clements P., 2002, DOCUMENTING SOFTWARE
   EDEN AH, 1999, 2 NORD WORKSH SOFTW
   FOSTER T, 1999, J OBJECT ORIENT PROG, V11
   Fowler M., 1997, ANAL PATTERNS
   Gamma Erich., 1994, DESIGN PATTERNS
   GARCIAMARTIN J, 2000, P EUR 2000 IRS GERM, P375
   Garlan D, 2002, SCI COMPUT PROGRAM, V44, P23, DOI 10.1016/S0167-6423(02)00031-X
   Garlan David., 1997, Proceedings of the 1997 conference of the Centre for Advanced Studies on Collaborative research, page, P7
   GREENFIELD J, 2004, SOFTWARE FACTORIES A
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   HIRSCHFELD R, 2003, P 3 GERM WORKSH ASP, P8
   HOFMEISTER C, 2000, APPL SOFTW ARCH
   Ivers J., 2004, CMUSEI2004TR008
   JOHNSON R, 1998, PATTERN LANGUAGES PR, V3
   Kiczales G., 1997, LNCS, V1241
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MEHTA NR, 2003, P 9 EUR SOFTW ENG C, P347
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   MONROE RT, 1996, P 4 INT C SOFTW REUS
   NEUMANN G, 1999, P COOTS 99 5 C OBJ O
   OMG, 2003, Tech. rep. ptc/03-08-02
   *OP ARCH WAR, 2006, OPENARCHITECTUREWARE
   PERRY DE, 1992, ACM SIGSOFT SOFTW EN, V17
   PREE W, 2000, BUILDING APPL FRAMEW
   PREE W, 1994, EUR C OBJ OR PROGR E, P4
   Robbins JE, 1998, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.1998.671120
   Selic B, 1999, COMMUN ACM, V42, P46, DOI 10.1145/317665.317675
   Selic Bran., 1998, Using UML for Modeling Complex Real-Time Systems
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Soundarajan N, 2004, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2004.1317488
   VOELTER M, 2004, REMOTING PATTERNSPAT
   ZDUN L, 2006, LNCS, V4089
   Zdun U, 2006, COMPUT LANG SYST STR, V32, P56, DOI 10.1016/j.cl.2005.04.001
   ZDUN U, 2004, P 9 EUR C PATT LANG
   ZDUN U, 2004, P 4 INT C WEB ENG IC
   ZDUN U, 2005, FRAG
   ZDUN U, 2003, P EUROPLOP 2003 IRS
   [No title captured]
NR 50
TC 20
Z9 22
U1 2
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 1003
EP 1034
DI 10.1016/j.infsof.2007.09.003
PG 32
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900011
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Lano, K
AF Lano, K.
TI Constraint-driven development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML; MDD; OCL; UML-RSDS; verification
AB To obtain the full benefits of model-driven development (MDD) approaches such as MDA a suitable level of abstraction needs to be chosen which enables the core functionality and properties of a system to be expressed, independent of programming language or implementation platform, so that this specification can be reused for a wide variety of different environments.
   This paper describes how constraints, together with UML class diagrams and state machines, can be used as a precise and platform-independent specification language. We describe the use of constraints in UML-RSDS and tool support for the synthesis of executable systems from constraints. (C) 2007 Elsevier B.V. All rights reserved.
C1 Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
C3 University of London; King's College London
RP Lano, K (corresponding author), Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
EM klano@hotmail.com
OI Lano, Kevin Charles/0000-0002-9706-1410
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   AHRENDT W, 2000, 20004 U KARLSR DEP C
   ANDROUTSOPOULOS.K, 2004, VERIFICATION REACTIV
   [Anonymous], 1981, SCI PROGRAMMING, DOI DOI 10.1007/978-1-4612-5983-1
   [Anonymous], PATTERNS JAVA
   B-Core UK Ltd, 2006, BTOOLKIT
   Bharadwaj R., 1999, Automated Software Engineering, V6, P37, DOI 10.1023/A:1008697817793
   BICARREGUI J, 1997, LNCS
   Fecher H, 2005, LECT NOTES COMPUT SC, V3785, P52
   FERRAIOLO DF, 2001, ACM T INFORM SYSTEMS, V4
   Gallardo M., 2002, J OBJECT TECHNOLOGY, V1
   Jackson Daniel., 2002, Micromodels of Software
   KAN P, 2006, THESIS KINGS COLL LO
   KIM S, 2000, ZB2000 LNCS, V1878
   KNAPP A, MODEL CHECKING CODE
   KNAPP A, 2006, P 5 INT WORKSH CRIT
   Lano K, 1998, J LOGIC COMPUT, V8, P679, DOI 10.1093/logcom/8.5.679
   LANO K, 2004, IADIS WWW INT C OCT
   LANO K, 2007, COMPOSITIONAL SEMANT
   LANO K, 2006, MARTES WORKSH MODELS
   Lano K., 2004, UML B FORMAL VERIFIC
   Lano K., 2005, ADV SYSTEM DESIGN JA
   LANO K, 2006, MODEVA WORKSH MODELS
   LANO K, 2007, FORMAL SPECIFICATION
   LANO K, 2005, ENTCS, V728
   Lano Kevin., 2003, L'OBJET, V9, P53
   MELLOR SJ, 2004, AGILE MDA
   *OMG, 2006, UML OCL 2 0 SPEC
   *OMG, 2005, UML SUP VERS 2 0 OMG
   Richters Mark., 2001, A UML-based Specification Environment
   Simons A J H, 2002, J OBJECT TECHNOLOGY, V1, P49
   Smith D., 1990, IEEE TSE, V16
   Snook C., 2004, UML B SPECIFICATION
   SPIVEY J, 1990, Z NOTATION
   Tiella Roberto, 2006, P 5 INT WORKSH CRIT
   YU L, 2006, LIGHT WEIGHT APPROAC
   [No title captured]
NR 37
TC 11
Z9 11
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2008
VL 50
IS 5
BP 406
EP 423
DI 10.1016/j.infsof.2007.04.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 290WJ
UT WOS:000255153200004
DA 2024-07-18
ER

PT J
AU Martínez, ABB
   Arias, JJP
   Vilas, AF
   Duque, JG
   Nores, ML
   Redondo, RPD
   Fernandez, YB
AF Martinez, Ana Belen Barragans
   Arias, Jose J. Pazos
   Vilas, Ana Fernandez
   Duque, Jorge Garcia
   Nores, Martin Lopez
   Redondo, Rebeca P. Diaz
   Fernandez, Yolanda Blanco
TI On the interplay between inconsistency and incompleteness in
   multi-perspective requirements specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE viewpoints; uncertainty; inconsistency; requirements specification;
   merging
ID VIEWPOINTS; INFORMATION; MODELS
AB A major challenge for dealing with multi-perspective specifications, and more concretely, with merging of several descriptions or views is toleration of incompleteness and inconsistency: views may be inconclusive, and may have conflicts over the concepts being modeled. The desire of being able to tolerate both phenomena introduces the need to evaluate and quantify the significance of a detected inconsistency as well as to measure the degree of conflict and uncertainty of the merged view as the specification process evolves.
   We show in this paper to what extent disagreement and incompleteness are closely interrelated and play a central role to obtain a measure of the level of inconsistency and to define a merging operator whose aim is getting the model which best reflects the combined knowledge of all stakeholders. We will also propose two kinds of interesting and useful orderings among perspectives which are based on differences of behavior and inconsistency, respectively. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Martinez, Ana Belen Barragans; Arias, Jose J. Pazos; Vilas, Ana Fernandez; Duque, Jorge Garcia; Nores, Martin Lopez; Redondo, Rebeca P. Diaz; Fernandez, Yolanda Blanco] Univ Vigo, Telemat Engn Dept, Vigo, Spain.
C3 Universidade de Vigo
RP Martínez, ABB (corresponding author), ETSE Telecomunicac, Dept Enxeneria, Vigo 36310, Spain.
EM belen@det.uvigo.es
RI José, Pazos Arias/F-6788-2016; Vilas, Ana Fernández/L-2055-2014; Nores,
   Martín López/F-9378-2016; Martínez, Belén Barragáns/C-4775-2009; Nores,
   Martín López/AAG-8636-2020; Díaz Redondo, Rebeca P./L-3108-2014; Arias,
   José/ITR-8005-2023; Blanco-Fernandez, Yolanda/F-8111-2016
OI José, Pazos Arias/0000-0002-0424-5481; Vilas, Ana
   Fernández/0000-0003-1047-2143; Martínez, Belén
   Barragáns/0000-0002-5011-989X; Nores, Martín López/0000-0002-4802-607X;
   Díaz Redondo, Rebeca P./0000-0002-2367-2219; Blanco-Fernandez,
   Yolanda/0000-0002-1816-1377
CR Araújo J, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P58
   BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   Barragáns AB, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P58, DOI 10.1109/ASWEC.2005.29
   BARRAGANSMARTIN.B, 2007, IN PRESS INT J SOFTW
   BARRAGANSMARTIN.B, 2004, P 26 INT C SOFT ENG, P72
   Belnap N., 1977, MODERN USES MULTIPLE, P8, DOI [10.1007/978-94-010-1161-7_2, DOI 10.1007/978-94-010-1161-7_2]
   CHACON JL, P 10 INT WORKSH NONM, P100
   Chechik M, 2003, ACM T SOFTW ENG METH, V12, P371, DOI 10.1145/990010.990011
   Cholvy L, 1997, LECT NOTES ARTIF INT, V1244, P86, DOI 10.1007/BFb0035614
   do PradoLeite JulioCesar Sampaio., 1996, JOINT P 2 INT SOFTWA, P285
   Easterbrook S, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P199, DOI 10.1109/RE.2005.23
   Easterbrook S, 1996, SOFTWARE ENG J, V11, P31, DOI 10.1049/sej.1996.0004
   Easterbrook S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P48, DOI 10.1109/ISRE.1995.512545
   Elrad T, 2001, COMMUN ACM, V44, P28
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Gabbay D. M., 1991, Scandinavian Conference on Artificial Intelligence - 91. `Odin's Ravens'. Proceedings of the SCAI '91, P19
   García-Duque J, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P282, DOI 10.1109/ICRE.2002.1048539
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Grundy J, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISRE.1999.777988
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Hoare CAR., 1985, Communicating Sequential Processes
   Hunter A, 2006, DATA KNOWL ENG, V57, P221, DOI 10.1016/j.datak.2005.04.005
   Hunter A, 2004, LECT NOTES COMPUT SC, V3300, P191
   Hunter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P335, DOI 10.1145/292182.292187
   Hunter A, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P68
   Hunter A., 2003, Proceedings of the 2003 International Joint Conference on AI (IJCAI03), P468
   Hunter A, 2006, KNOWL-BASED SYST, V19, P647, DOI 10.1016/j.knosys.2006.05.007
   HUSSAIN A, 2004, P 1 INT S LEV APPL F
   HUTH M, 2001, ELECT NOTES THEORETI, V45
   KEDIAN RL, 2005, LECT NOTES ARTIF INT, V3571, P440
   KLEENE SC, 1952, INTRO MATH, V1
   Konieczny S, 2002, J LOGIC COMPUT, V12, P773, DOI 10.1093/logcom/12.5.773
   Konieczny S., 2003, IJCAI, P106
   KOZLENKOV A, 2004, INT J COMPUT INF SCI, V5, P89
   Laney R, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P122
   MARTINS AnaMaria Tavares., 2004, El Patrimonio Monastico: Integracion y desarrollo en la Ciudad Contemporanea in VII Congreso Internacional de Rehabilitacion del Patrimonio Arquitectonico y Edificacion (Yaiza 2004), P21
   Milner R., 1989, Communication and concurrency
   Nejati S., 2005, P 20 INT C AUT SOFTW, P287
   Nentwich C, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P115, DOI 10.1109/ASE.2001.989797
   Niskier C., 1989, Proceedings of Fifth International Workshop on Software Specification and Design (Cat. No.89CH2717-7), P128, DOI 10.1145/75199.75219
   Nuseibeh B, 2003, PROC INT CONF SOFTW, P676, DOI 10.1109/ICSE.2003.1201254
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Nuseibeh B., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P164, DOI 10.1109/IWSSD.1996.501161
   Pazos Arias J. J., 2001, Formal Aspects of Computing, V13, P50, DOI 10.1007/PL00003939
   QI G, 2004, P 9 INT C PRINC KNOW, P348
   QI G, 2004, P 10 INT WORKSH NONM, P342
   Qi GL, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P552
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Robinson W. N., 1989, Proceedings of Fifth International Workshop on Software Specification and Design (Cat. No.89CH2717-7), P219, DOI 10.1145/75199.75232
   Robinson W. N., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P206, DOI 10.1109/ICRE.1994.292383
   Sabetzadeh M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ASE.2003.1240290
   Sommerville I, 1997, ANN SOFTW ENG, V3, P101, DOI 10.1023/A:1018946223345
   Spanoudakis G., 2001, HDB SOFTWARE ENG KNO, V1, P329
   SPANOUDAKIS G, 2004, SOFTW SYST MODEL, V3, P273
   Systä T, 2000, JOOP, V13, P18
   TSAI JJP, 1992, IEEE T SOFTWARE ENG, V18, P1076, DOI 10.1109/32.184762
   Uchitel S, 2001, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2001.919093
   UCHITEL S, 2004, P 12 ACM SIGSOFT INT, P43, DOI DOI 10.1145/1029894.1029904
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Whittle J, 2004, IEE P-SOFTW, V151, P157, DOI 10.1049/ip-sen:20040921
   Zave P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P379, DOI 10.1145/158431.158438
   Zowghi D, 2003, INFORM SOFTWARE TECH, V45, P993, DOI 10.1016/S0950-5849(03)00100-9
NR 63
TC 12
Z9 12
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2008
VL 50
IS 4
BP 296
EP 321
DI 10.1016/j.infsof.2007.02.001
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 261UL
UT WOS:000253105400004
DA 2024-07-18
ER

PT J
AU Mok, WY
AF Mok, Wai Yin
TI Designing nesting structures of user-defined types in object-relational
   data bases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE the EER model; object-relational databases; Oracle Database 10g nested
   object types; scheme trees
ID CONCEPTUAL-MODEL; NORMAL-FORM; REDUNDANCY; SCHEMA
AB This paper presents a methodology for designing proper nesting structures of user-defined types in object-relational databases. Briefly, we envision that users model a real-world application by using the EER model, which results in ail EER schema. Our algorithm then uses the theory we developed for nested relations to generate scheme trees from the EER schema. We shall prove that the resulting scheme trees have exactly the same information content as the EER schema, and the scheme-tree instances over the resulting scheme trees do not store information redundantly. Finally, the scheme trees are transformed to Oracle Database 10g nested object types for implementation. The algorithm in this paper forms the core of a computerized object-relational database design tool we shall develop in the future. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Alabama, Dept Econ & Informat Syst, Huntsville, AL 35899 USA.
C3 University of Alabama System; University of Alabama Huntsville
RP Mok, WY (corresponding author), Univ Alabama, Dept Econ & Informat Syst, Huntsville, AL 35899 USA.
EM mokw@email.uah.edu
CR [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 1983, The theory of relational databases
   BATINI C, 1992, COMCEPTUAL DATABASE
   Collins SR, 2002, INFORM SOFTWARE TECH, V44, P251, DOI 10.1016/S0950-5849(02)00015-0
   Eisenberg A, 2004, SIGMOD REC, V33, P119, DOI 10.1145/974121.974142
   Fong J, 2005, INFORM SOFTWARE TECH, V47, P437, DOI 10.1016/j.infsof.2004.09.010
   Kovacs G, 1998, INFORM SOFTWARE TECH, V40, P1, DOI 10.1016/S0950-5849(98)00022-6
   Kroenke D., 2006, Database Processing Fundamentals, Design, and Implementation
   Ling TW, 1994, LECT NOTES COMPUT SC, V881, P241
   LING TW, 1985, P 4 INT C ENT REL AP, P24
   MARCOS E, 2004, METHODOLOGICAL APPRO, V18, P152
   MARCOS E, 2001, P 4 INT C UN MOD LAN, V2185, P225
   Mok WY, 2006, IEEE T KNOWL DATA EN, V18, P1082, DOI 10.1109/TKDE.2006.125
   Mok WY, 2002, IEEE T KNOWL DATA EN, V14, P369, DOI 10.1109/69.991722
   Mok WY, 1996, ACM T DATABASE SYST, V21, P77, DOI 10.1145/227604.227612
   MOK WY, 2001, P 34 ANN HAW INT C S
   Rahayu JW, 2001, DATA KNOWL ENG, V38, P265, DOI 10.1016/S0169-023X(01)00026-X
   Rahayu JW, 2000, INFORM SOFTWARE TECH, V42, P571, DOI 10.1016/S0950-5849(00)00103-8
   Rauh O, 1996, INFORM SYST, V21, P187, DOI 10.1016/0306-4379(96)00011-7
   Stoimenov L, 1999, INFORM SOFTWARE TECH, V41, P57, DOI 10.1016/S0950-5849(98)00112-8
   URMAN S, 2004, ORACLE DATABASE 10G
NR 21
TC 1
Z9 2
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2007
VL 49
IS 9-10
BP 1017
EP 1029
DI 10.1016/j.infsof.2006.10.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 199PQ
UT WOS:000248708100005
DA 2024-07-18
ER

PT J
AU Crowston, K
   Li, Q
   Wei, KN
   Eseryel, UY
   Howison, J
AF Crowston, Kevin
   Li, Qing
   Wei, Kangning
   Eseryel, U. Yeliz
   Howison, James
TI Self-organization of teams for free/libre open source software
   development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE free/libre open source software development; task assignment;
   self-organizing teams; distributed teams; qualitative research methods;
   coordination
ID DESIGN; COORDINATION; INTERNET; SYSTEMS; WORK
AB This paper provides empirical evidence about how free/libre open source software development teams self-organize their work, specifically, how tasks are assigned to project team members. Following a case study methodology, we examined developer interaction data from three active and successful FLOSS projects using qualitative research methods, specifically inductive content analysis, to identify the task-assignment mechanisms used by the participants. We found that 'self-assignment' was the most common mechanism across three FLOSS projects. This mechanism is consistent with expectations for distributed and largely volunteer teams. We conclude by discussing whether these emergent practices can be usefully transferred to mainstream practice and indicating directions for future research. (C) 2007 Elsevier B.V. All rights reserved.
C1 Syracuse Univ, Sch Informat Studies, Syracuse, NY 13244 USA.
C3 Syracuse University
RP Crowston, K (corresponding author), Syracuse Univ, Sch Informat Studies, 348 Hinds Hall, Syracuse, NY 13244 USA.
EM crowston@syr.edu; qli03@syr.edu; kwei@syr.edu; uyeserye@syr.edu;
   jhowison@syr.edu
RI Eseryel, Yeliz/AAE-3379-2021; Crowston, Kevin/C-6068-2008
OI Crowston, Kevin/0000-0003-1996-3600
CR AHUJA MK, 1997, SIGCPR C SAN FRANC
   ALHO K, 1998, WORKSH COORD DISTR S
   [Anonymous], 1999, Open sources: voices from the open source revolution
   [Anonymous], QUALITATIVE DATA ANA
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   [Anonymous], OPEN SOURCE SOFTWARE
   Armstrong D.J., 1995, DIVERSITY WORK TEAMS, P187
   Bandow D., 1997, Proceedings of the 1997 ACM SIGCPR Conference, P87, DOI 10.1145/268820.268871
   Belanger F, 1998, INFORM SOC, V14, P137, DOI 10.1080/019722498128935
   Bezroukov Nikolai., 1999, First Monday, V4
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   COLLINS J., 1999, DRUCKER FDN NEWS, V7, P4
   Crowston K, 1997, ORGAN SCI, V8, P157, DOI 10.1287/orsc.8.2.157
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   Crowston K., 2003, ORG BUSINESS KNOWLED
   CROWSTON K, 2007, BUSINESS PROCESS TRA
   Crowston K., 2003, P 24 INT C INF SYST
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Curtis Bill., 1990, ISPW '90: Proceedings of the 5th International Software Process Workshop on Experience with Software Process Models, P52
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   DESOUZA PS, 1993, ASYNCHRONOUS ORG MUL
   Espinosa J.A., 2001, 22 INT C INF SYST NE
   FRANCK E, 2002, 8 U ZUR
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   HANN IH, 2002, P 23 INT C INF SYST, P365
   HECKMAN R, 2006, HAW INT C SYST SYST
   HERBSLEB JD, 2001, P INT C SOFTW ENG IC
   HERBSLEB JD, 1999, P INT C SOFTW ENG IC
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Humphrey WattsS., 2000, Introduction to the team software process
   Jarvenpaa SL, 1999, ORGAN SCI, V10, P791, DOI 10.1287/orsc.10.6.791
   Knorr-Cetina Karin., 1999, Epistemic communities
   Kogut B, 2001, OXFORD REV ECON POL, V17, P248, DOI 10.1093/oxrep/17.2.248
   Kraut R, 1999, ORGAN SCI, V10, P722, DOI 10.1287/orsc.10.6.722
   Lerner J, 2001, EUR ECON REV, V45, P819, DOI 10.1016/S0014-2921(01)00124-6
   Ljungberg J., 2000, EUROPEAN J INFORM SY, V9
   MALONE TW, 1987, COMMUN ACM, V30, P484, DOI 10.1145/214762.214766
   Mark G., 2002, DISTRIBUTED WORK, P259
   Markus ML, 2000, SLOAN MANAGE REV, V42, P13
   MICHLMAYR M, 2004, P 2004 USENIX ANN TE
   MOCKUS A, 2000, P INT C SOFTW ENG IC
   Myers M.D., 1997, MIS Q, V21
   NEJMEH BA, 1994, COMMUN ACM, V37, P23, DOI 10.1145/188280.188288
   O'Leary Michael., 2002, DISTRIBUTED WORK, P27
   OCKER RJ, 2000, P 33 HAW INT C SYST
   Raymond E. S., 1998, First Monday, V3
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Sawyer S, 1998, IBM SYST J, V37, P552, DOI 10.1147/sj.374.0552
   SCACCHI W, 1991, SOFTWARE ENG J, V6, P355, DOI 10.1049/sej.1991.0036
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   SEAMAN CB, 1997, COMMUNICATION ORG SO
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Stewart K.J., 2002, P 23 INT C INFORM SY, P853
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Watson-Manheim M. B., 2002, Information Technology & People, V15, P191, DOI 10.1108/09593840210444746
   WAYNER P, 2000, FREE ALL
   WEBB E, 1979, ADMIN SCI QUART, V24, P650, DOI 10.2307/2392370
   YAMAUCHI Y., 2000, P C COMP SUPP COOP W
   Yin R.K., 1984, CASE STUDY RES
NR 59
TC 111
Z9 129
U1 0
U2 21
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 564
EP 575
DI 10.1016/j.infsof.2007.02.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 169NU
UT WOS:000246599700004
DA 2024-07-18
ER

PT J
AU Akers, RL
   Baxter, ID
   Mehlich, M
   Ellis, BJ
   Luecke, KR
AF Akers, Robert L.
   Baxter, Ira D.
   Mehlich, Michael
   Ellis, Brian J.
   Luecke, Kenn R.
TI Case study: Re-engineering C++ component models via automatic program
   transformation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Annual Meeting of the
   American-Association-of-Directors-of-Psychiatric-Residency-Training
CY MAR   12, 2005
CL Tucson, AZ
SP Amer Assoc Directors Psychiat Residency Training
DE software transformation; software analysis; C plus; migration; component
   architectures; legacy systems; compilers reengineering; abstract syntax
   trees; patterns; rewrite rules
AB Automated program transformation holds promise for a variety of software life cycle endeavors, particularly where the size of legacy systems makes manual code analysis, re-engineering, and evolution difficult and expensive. But constructing highly scalable transformation tools supporting modern languages in full generality is itself a painstaking and expensive process. This cost can be managed by developing a common transformation system infrastructure re-useable by derived tools that each address specific tasks, thus leveraging the infrastructure costs. This paper describes the Design Maintenance System (DMS1), a practical, commercial program analysis and transformation system, and discusses how it was employed to construct a custom modernization tool being applied to a large C++ avionics system. The tool transforms components developed in a 1990s-era component style to a more modern CORBA-like component framework., preserving functionality. (c) 2006 Elsevier B.V. All rights reserved.
C1 Boeing Co, Seattle, WA 98124 USA.
C3 Boeing
EM lakers@semdesigns.com; idbaxter@semdesigns.com; Mmehlich@semdesigns.com;
   brian.j.ellis@boeing.com; kenn.r.luecke@boeing.com
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   ARANGO G, 1986, IEEE SOFTWARE, V3, P27, DOI 10.1109/MS.1986.233411
   BAGGE O, 2003, 3 IEEE INT WORKSH SO
   BALZER R, 1985, IEEE T SOFTWARE ENG, V11, P1257, DOI 10.1109/TSE.1985.231877
   BALZER R, 1976, P 2 INT C SOFTW ENG, P337
   BAXTER I, 1992, COMMUNICATIONS ACM, V35
   BAXTER I, 1990, THESIS INFORM COMPUT
   Baxter ID, 2004, P 26 INT C SOFTW ENG
   BURSON S, 1990, P 14 ANN INT COMP SO
   Cordy J.R., 2004, Electron. Notes Theor. Comput. Sci, V110, P3, DOI [DOI 10.1016/J.ENTCS.2004.11.006, 10.1016/j.entcs.2004.11.006, https://doi.org/10.1016/j.entcs.2004.11.006]
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GIDDING V, 2003, OMGS WORKSH DISTR OB
   JOHNSON WL, 1991, AUTOMATING SOFTWARE
   KANT E, 1991, AUTOMATING SOFTWARE
   Klint P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P176, DOI 10.1145/151257.151260
   KLUSENER S, 2005, SCI COMPUTER PROGRAM, V54
   KOUTSOUKOS G, LCARE LEGACY REENGIN
   LOHMANN D, 2004, P GPCE 04 OCT 24 28
   MARKOSIAN L, 1994, COMMUN ACM, V37, P58, DOI 10.1145/175290.175297
   NEIGHBORS J, 1989, SOFTWARE REUSABILITY
   NEWCOMBE P, 2001, AUTOMATED TRANSFORMA
   *OBJ MAN GROUP, ARCH CHOIC CHANG WOR
   *OBJ MAN GROUP, ARCH DRIV MOD
   OPDYKE WF, UIUCDCSR921759
   *PARLANSE, 1998, PARLANSE REF MAN
   *REAS SYST, 1993, REF LANG TOOLS
   REKERS J, 1992, THESIS U AMSTERDAM
   ROBERTS D, 1996, P ICAT 96 12 INT C A
   Schordan M, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P97, DOI 10.1109/SCAM.2005.23
   SHARP DC, P 1998 SOFTW TECHN C
   TKUDA L, 1999, P C AUT SOFTW ENG
   Tomita Masaru., 1985, EFFICIENT PARSING NA
   VANDENBRAND M, 2003, 3 WORKSH LANG DESCR
   VANDENBRAND M, 2001, COMPUT COMPLEX, P365
   VASSEUR C, SEMANTICS DRIVEN DIS
   Visser E, 2003, LECT NOTES COMPUT SC, V3016, P216
   Wagner TA, 1997, ACM SIGPLAN NOTICES, V32, P31, DOI 10.1145/258916.258920
NR 37
TC 6
Z9 7
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2007
VL 49
IS 3
BP 275
EP 291
DI 10.1016/j.infsof.2006.10.012
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 139AA
UT WOS:000244403200006
DA 2024-07-18
ER

PT J
AU Alghathbar, K
AF Alghathbar, Khaled
TI Validating the enforcement of access control policies and separation of
   duty principle in requirement engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE access control policies; security engineering; use cases; semi-formal
   methods; Separation of Duty
AB Validating the compliance of software requirements with the access control policies during the early development life cycle improves the security of the software. It prevents authorizing unauthorized subject during the specification of requirements and analysis before proceeding to other phases where the cost of fixing defects is augmented. This paper provides a logical-based framework that analyzes the authorization requirements specified in the Unified Modeling Language (UML). It ensures that the access requirements are consistent, complete and conflict-ftee. The framework proposed in this paper is an extension to AuthUML framework. We refine AuthUML and extend it by expanding its analysis to validate the enforcement of the Separation of Duty (SoD) during the requirement engineering. We enhance and extend AuthUML with the necessary phase, predicates and rules. The paper shows the various types of SoD and how each type can be validated. The extension shows the flexibility and scalability of AuthUML to validate new policies. Also, the extension makes AuthUML spans to different phases of the software development process that widen the application of AuthUML. (c) 2006 Elsevier B.V. All rights reserved.
C1 King Saud Univ, Coll Comp & Informat Sci, Riyadh 11543, Saudi Arabia.
C3 King Saud University
RP Alghathbar, K (corresponding author), King Saud Univ, Coll Comp & Informat Sci, POB 51178, Riyadh 11543, Saudi Arabia.
EM ghathbar@ccis.ksu.edu.sa
CR AHN GJ, 2000, P 5 INT C S LOG PROG, V3, P207
   ALGHATHBAR K, 2003, P WORKSH FORM METH S
   ALGHATHBAR K, 2003, P 1 INT C SOFTW ENG
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Boehm BW., 1981, Software Engineering Economics
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Brose G, 2000, LECT NOTES COMPUT SC, V1895, P88
   BROSE G, 2002, P 6 BIENN WORLD C IN
   Clark D. D., 1987, Proceedings of the 1987 IEEE Symposium on Security and Privacy (Cat. No.87CH2416-6), P184
   Devanbu P., 2000, FUTURE SOFTWARE ENG
   Dobson J. E., 1989, Proceedings 1989 IEEE Symposium on Security and Privacy (Cat. No.89CH2703-7), P229, DOI 10.1109/SECPRI.1989.36297
   Fernández-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   FERNANDEZMEDINA E, 2002, P 6 BIENN WORLD C IN
   GABBAY D, 1991, LECT NOTES ARTIF INT, V535, P19
   Gabbay D., 1992, LECT NOTES COMPUTER, P129
   GLIGOR V, 1998, P IEEE S SEC PRIV BE
   Jajodia S, 2001, ACM T DATABASE SYST, V26, P214, DOI 10.1145/383891.383894
   JURJENS J, 2001, LNCS, V2029, P187
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Nash M. J., 1990, Proceedings. 1990 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.90CH2884-5), P201, DOI 10.1109/RISP.1990.63851
   Nuseibeh B., 2001, J SYSTEMS SOFTWARE, V56
   Object Management Group, 2001, OMG UN MOD LANG SPEC
   Sandhu R., 1988, Fourth Aerospace Computer Security Applications Conference (IEEE Cat. No.CH2619-5), P282, DOI 10.1109/ACSAC.1988.113349
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Sendall S, 2000, LECT NOTES COMPUT SC, V1939, P1
   SENDALL S, 2002, THESIS SWISS FEDERAL
   SIMON R, 1997, P 10 COMP SEC FDN WO
   Warmer J., 1999, AW OBJ TECHNOL S
   Woo T. Y. C., 1993, Journal of Computer Security, V2, P107
NR 29
TC 16
Z9 17
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 142
EP 157
DI 10.1016/j.infsof.2006.03.009
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 118EY
UT WOS:000242926300005
DA 2024-07-18
ER

PT J
AU Huang, SJ
   Chiu, NH
AF Huang, Sun-Jen
   Chiu, Nan-Hsing
TI Optimization of analogy weights by genetic algorithm for software effort
   estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE analogy-based; software effort estimation model; genetic algorithm;
   weighted similarity measure
ID VALIDATION
AB A reliable and accurate estimate of software development effort has always been a challenge for both the software industry and academia. Analogy is a widely adopted problem solving technique that has been evaluated and confirmed in software effort or cost estimation domains. Similarity measures between pairs of effort drivers play a central role in analogy-based estimation models. However, hardly any research has addressed the issue of how to decide on suitable weighted similarity measures for software effort drivers. The present paper investigates the effect on estimation accuracy of the adoption of genetic algorithm (GA) to determine the appropriate weighted similarity measures of effort drivers in analogy-based software effort estimation models. Three weighted analogy methods, namely, the unequally weighted, the linearly weighted and the nonlinearly weighted methods are investigated in the present paper. We illustrate our approaches with data obtained from the International Software Benchmarking Standards Group (ISBSG) repository and the IBM DP services database. The experimental results show that applying GA to determine suitable weighted similarity measures of software effort drivers in analogy-based software effort estimation models is a feasible approach to improving the accuracy of software effort estimates. It also demonstrates that the nonlinearly weighted analogy method presents better estimate accuracy over the results obtained using the other methods. (C) 2006 Elsevier B.V. All rights reserved.
C1 Natl Taiwan Univ Sci & Technol, Dept Informat Management, Taipei 106, Taiwan.
C3 National Taiwan University of Science & Technology
RP Huang, SJ (corresponding author), Natl Taiwan Univ Sci & Technol, Dept Informat Management, 43 Sec 4 Keelung Rd, Taipei 106, Taiwan.
EM huangsj@mail.ntust.edu.tw
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], P 8 IEEE S SOFTW MET
   [Anonymous], 1997, APPL CASE BASED REAS
   [Anonymous], IJCAI
   Boehm BW., 1981, Software Engineering Economics
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand LC, 1999, P 21 INT C SOFTW ENG, DOI DOI 10.1145/302405.302647
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   BURMAN P, 1989, BIOMETRIKA, V76, P503, DOI 10.2307/2336116
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   DOVAL D, 1999, P SOFTW TECHN ENG PR, P73
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   KARUNANITHI N, 1992, IEEE SOFTWARE, V9, P53, DOI 10.1109/52.143107
   Kim SH, 2000, EXPERT SYST APPL, V18, P201, DOI 10.1016/S0957-4174(99)00062-7
   Kolodner J.L., 1993, Case-Based Reasoning
   KOLODNER JL, 1992, ARTIF INTELL REV, V6, P3, DOI 10.1007/BF00155578
   LANGLEY P, 1993, IJCAI-93, VOLS 1 AND 2, P889
   MAYER E, 1993, CSC9302 U MISS ROLL
   MENDES E, 2002, P 26 ANN INT COMP SO
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   RICH E, 1995, ARTIFICIAL INTELLIGE
   Schank R. C., 1982, Dynamic memory: A theory of reminding and learning
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shukla KK, 2000, INFORM SOFTWARE TECH, V42, P701, DOI 10.1016/S0950-5849(00)00114-2
   Stamelos L, 2003, INFORM MANAGE-AMSTER, V40, P729, DOI 10.1016/S0378-7206(02)00099-X
NR 33
TC 98
Z9 103
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1034
EP 1045
DI 10.1016/j.infsof.2005.12.020
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400004
DA 2024-07-18
ER

PT J
AU Bleistein, SJ
   Cox, K
   Verner, J
   Phalp, KT
AF Bleistein, Steven J.
   Cox, Karl
   Verner, June
   Phalp, Keith T.
TI B-SCP: A requirements analysis framework for validating strategic
   alignment of organizational IT based on strategy, context, and process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements engineering; strategic alignment; business strategy;
   business modeling; goal modeling; business process modeling; Jackson
   problem frames
ID INFORMATION-TECHNOLOGY; BUSINESS STRATEGY; MANAGEMENT
AB Ensuring that organizational IT is in alignment with and provides support for an organization's business strategy is critical to business success. Despite this, business strategy and strategic alignment issues are all but ignored in the requirements engineering research literature. We present B-SCP, a requirements engineering framework for organizational IT that directly addresses an organization's business strategy and the alignment of IT requirements with that strategy. B-SCP integrates the three themes of strategy, context, and process using a requirements engineering notation for each theme. We demonstrate a means of cross-referencing and integrating the notations with each other, enabling explicit traceability between business processes and business strategy. In addition, we show a means of defining requirements problem scope as a Jackson problem diagram by applying a business modeling framework. Our approach is illustrated via application to an exemplar. The case example demonstrates the feasibility of B-SCP, and we present a comparison with other approaches. (c) 2006 Elsevier B.V. All rights reserved.
C1 Natl ICT Australia, Empir Software Engn Res Program, Sydney, NSW 1430, Australia.
   Univ New S Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
   Bournemouth Univ, Empir Software Engn Res Grp, Bournemouth, Dorset, England.
C3 NICTA; University of New South Wales Sydney; Bournemouth University
RP Bleistein, SJ (corresponding author), Natl ICT Australia, Empir Software Engn Res Program, Sydney, NSW 1430, Australia.
EM sbleistein@mac.com; karl.cox@nicta.com.au; june.verner@nicta.com.au;
   kphalp@bmth.ac.uk
CR [Anonymous], 1994, HARVARD BUS REV
   [Anonymous], 2005, Just enough requirements management: where software development meets marketing
   [Anonymous], 1989, Modern structured analysis
   ANTON AI, 1996, INT C REQ ENG ICRE 9
   Avison D, 2004, J STRATEGIC INF SYST, V13, P223, DOI 10.1016/j.jsis.2004.08.002
   BENASOU M, 1997, 7 11 JAPAN MANAGING
   Bing G., 1996, Due diligence techniques and analysis: Critical questions for business decisions
   Bleistein SJ, 2004, J RES PRACT INF TECH, V36, P259
   BLEISTEIN SJ, IN PRESS J SYSTEMS S
   BLEISTEIN SJ, IN PRESS REQUIREMENT
   BLEISTEIN SJ, 2005, 20 ACM S APPL COMP S
   BLEISTEIN SJ, 2004, 11 AS PAC SOFTW ENG
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Brancheau JC, 1996, MIS QUART, V20, P225, DOI 10.2307/249479
   Britton C., 1993, Software system development: a gentle introduction
   BUBENKO JA, 1994, 4 EUR JAP SEM INF MO
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   CHAMPION REM, 1996, INT C REQ ENG ICRE 9
   Chan YE, 1997, INFORM SYST RES, V8, P125, DOI 10.1287/isre.8.2.125
   CHUNG LE, 1999, NONFUNCTIOHNAL REQUI, V5
   Ciborra C.U., 1997, Scandinavian Journal of Information Systems, V9, P67
   Cox K, 2005, INFORM SOFTWARE TECH, V47, P319, DOI 10.1016/j.infsof.2004.09.002
   COX K, 2006, 21 ACM S APPL COMP T
   Croteau AM, 2001, J STRATEGIC INF SYST, V10, P77, DOI 10.1016/S0963-8687(01)00044-0
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DARIMONT R, 1996, 4 ACM SIGSOFT S FDN
   Davis A.M., 1990, SOFTWARE REQUIREMENT
   Davis AM, 2003, IEEE SOFTWARE, V20, P54, DOI 10.1109/MS.2003.1207455
   DeMarco T., 1979, STRUCTURED ANAL SYST
   Earl M, 2001, MIT SLOAN MANAGE REV, V43, P64
   *EC NEWSP LTD, 2001, ECONOMIST, V359, P77
   Erdogmus H, 2004, IEEE SOFTWARE, V21, P18, DOI 10.1109/MS.2004.1293068
   ERKSSON HE, 2000, BUSINESS MODELING UM
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Favre Liliana., 2003, UML UNIFIED PROCESS
   Feather M. S., 1997, Automated Software Engineering, V4, P419, DOI 10.1023/A:1008680612960
   FINKELSTEIN C, 1992, IFNORM ENG STRATEGIC
   Galliers R. D., 1991, European Journal of Information Systems, V1, P55, DOI 10.1057/ejis.1991.7
   GARZETTI M, 2002, JOINT WORKSH OBJ AG
   GEIJSBEEK JB, 1974, ANCIENT DOUBLE ENTRY
   Giorgini P, 2004, MU S ART SOC SIM ORG, P89
   Gordijn J., 2003, Requirements Engineering, V8, P114, DOI 10.1007/s00766-003-0169-x
   Gordijn J, 2001, IEEE INTELL SYST, V16, P11, DOI 10.1109/5254.941353
   GORDIJN J, 2002, THESIS VRIJE U AMSTE, P292
   HAGLIND M, 2001, 16 INT C EXH EL DIST
   HORNGREN CT, 1987, COST ACCOUNTIGN MANA
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jackson M., 2001, PROBLEM FRAMES ANAL
   JOUIROU N, 2004, 10 AM C INF SYST NEW
   Kaindl H, 2005, REQUIR ENG, V10, P81, DOI 10.1007/s00766-004-0197-1
   Kavakli V, 1999, INFORM SYST, V24, P187, DOI 10.1016/S0306-4379(99)00015-0
   KEFI H, 2005, 38 HAW INT C SYST SC
   KOLBER AB, 2000, ORG BUSINESS PLANS S
   Kolp M, 2002, LECT NOTES ARTIF INT, V2333, P128
   Kovitz BenjaminL., 1999, PRACTICAL SOFTWARE R
   Kueng P., 1997, Business Process Reengineering and Management Journal, V3, P17
   Kunitomo R, 1997, LONG RANGE PLANN, V30, P877, DOI 10.1016/S0024-6301(97)00073-3
   LIU L, 2001, ICSE 2001 STRAW 2001
   LOUCOPOULOS P, 1995, INT J COOP INF SYST, V4, P45, DOI 10.1142/S0218843095000032
   LOUCOPOULOS P, 2003, S3 STRATEGY SERVICE
   Luftman J., 2004, MIS Quarterly Executive, V3, P89
   MAIDEN NAM, 2004, 10 ANN INT WORKSH RE
   MAIDEN NAM, 2004, 16 INT C ADV INF SYS
   MAKINO N, 1997, JAPAN ECHO, V44, P44
   McKeen J., 2003, Making IT Happen: Critical Issues in IT Management
   Melao N, 2000, INFORM SYST J, V10, P105, DOI 10.1046/j.1365-2575.2000.00075.x
   MENDES R, 2001, 7 INT C OBJ OR INF S
   MENDES R, 2001, INT C ENT ENT INF SY
   Mintzberg H., 2009, STRATEGY SAFARI GUID, V2nd
   OLIVER RW, 2001, J BUS STRAT, P7
   Ould M.A., 1995, BUSINESS PROCESSES M
   Porter M.E., 1996, HARVARD BUS REV, V74, P61
   PORTER ME, 1987, HARVARD BUS REV, V65, P43
   Porter Mu., 1985, Competitive Advantage: Creating and Sustaining Superior Performance
   Quinn J.B., 1988, STRATEGY PROCESS
   RAPP WV, 2002, INFORM TECHNOLOGY ST, P163
   Reich B., 2003, DATA BASE ADV INF SY, V34, P28
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Rummler G.A., 1995, IMPROVING PERFORMANC, V2nd
   Sondhi R., 1999, Total Strategy
   Tallon P., 2002, AM C INF SYST ACIS20
   Tallon PP, 2000, J MANAGE INFORM SYST, V16, P145, DOI 10.1080/07421222.2000.11518269
   THOROGOOD AF, 2004, 37 ANN HAW INT C SYS
   van Lamsweerde A., 2001, 5 IEEE INT S REQ ENG
   VASCONCELOS A, 2001, 5 INT ENT DISTR OBJ
   Verner JM, 2005, IEEE SOFTWARE, V22, P86, DOI 10.1109/MS.2005.12
   VERNER JM, 2005, 3 REK SWDC INT C SOF
   Verner J, 2005, AUSTRALAS J INF SYST, V13, P225
   Walsham G., 1993, INTERPRETING INFORM
   Watson R. T., 1991, Information and Management, V20, P213, DOI 10.1016/0378-7206(91)90056-8
   Weill P., 2001, Place to space: moving to ebusiness models
   WHANG S, 1997, 7 11 JAPAN GSU8
   YU E, 20 INT C CONC MOD ER
   YU E, 1993, IEEE INT S REQ ENG
   Yu E., 1997, 3 IEEE INT S REQ ENG
   YU ESK, 1995, INT J COOP INF SYST, V4, P125, DOI 10.1142/S0218843095000056
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 97
TC 80
Z9 89
U1 1
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 846
EP 868
DI 10.1016/j.infsof.2005.12.001
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500008
DA 2024-07-18
ER

PT J
AU Jea, KF
   Chen, SY
AF Jea, Kuen-Fang
   Chen, Shih-Ying
TI A high concurrency XPath-based locking protocol for XML databases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML document databases; concurrency control; locking protocol; XPath
ID CONSISTENCY
AB Providing efficient access to XML documents becomes crucial in XML database systems. More and more concurrency control protocols for XML database systems were proposed in the past few years. Being an important language for addressing data in XML documents, Xpath expressions are the basis of several query languages, such as XQurey and XSLT. In this paper, we propose a lock-based concurrency control protocol, called XLP, for transactions accessing XML data by the XPath model. XLP is based on the XPath model and has the features of rich lock modes, low lock conflict and lock conversion. XLP is also proved to ensure conflict serializability. In sum, there are three major contributions in this paper. The proposed XLP supports most XPath axes, rather than simple path expressions only. Conflict conditions and rules in the XPath model are analyzed and derived. Moreover, a lightweighted lock mode, P-lock, is invented and integrated into XLP for better concurrency. (c) 2005 Elsevier B.V. All rights reserved.
C1 Natl Chung Hsing Univ, Dept Comp Sci, Taichung 40227, Taiwan.
C3 National Chung Hsing University
RP Jea, KF (corresponding author), Natl Chung Hsing Univ, Dept Comp Sci, 250 Kuo Kuang Rd, Taichung 40227, Taiwan.
EM kfjea@cs.nchu.edu.tw; sychen@cs.nchu.edu.tw
CR [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   CHOI EH, 2003, P 14 DAT ENG WORKSH, P302
   CLARK J, 1999, XML PATH LANGUAGE VE
   Dekeyser S, 2004, WORLD WIDE WEB, V7, P29, DOI 10.1023/B:WWWJ.0000015864.75561.98
   Dekeyser S., 2004, P 15 AUSTR DAT C 200, P395
   DEKEYSER S, 2003, P 5 AS PAC WEB C, P83
   ESWARAN KP, 1976, COMMUN ACM, V19, P624, DOI 10.1145/360363.360369
   Goldman R, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P436
   Grabs T., 2002, Proceedings of the Eleventh International Conference on Information and Knowledge Management. CIKM 2002, P142, DOI 10.1145/584792.584819
   Gray J., 1976, Modelling in Data Base Management Systems, P365
   HAUSTEIN M, 2004, P 2 INT XML DAT S DA, P173
   HELMER S, 2003, LOCK BASED PROTOCOLS
   Jea K.-F., 2002, P 2002 INT COMP S, P165
   Jea KF, 2002, NINTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P551, DOI 10.1109/ICPADS.2002.1183455
   KORTH HF, 1983, J ACM, V30, P55, DOI 10.1145/322358.322363
   KORTH HF, 1982, ACM T DATABASE SYST, V7, P632, DOI 10.1145/319758.319772
   LEE SY, 1992, P 2 FAR FAST WORKSH, P158
   Ramakrishnan R., 2000, Database Management Systems
   Reuter A, 1993, T PROCESSING CONCEPT
   SILBERSCHATZ A, 1980, J ACM, V27, P72, DOI 10.1145/322169.322176
   SILBERSCHATZ A, 2001, DATABASE SYSTEM CONC, pCH16
   Widom J, 2002, DATABASE SYSTEMS COM
NR 22
TC 10
Z9 11
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 708
EP 716
DI 10.1016/j.infsof.2005.08.002
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700007
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Molokken-Ostvold, K
AF Jorgensen, M
   Molokken-Ostvold, K
TI How large are software cost overruns? A review of the 1994 CHAOS report
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE software cost estimation; research method; survey review
AB The Standish Group reported in their 1994 CHAOS report that the average cost overrun of software projects was as high as 189%. This figure for cost overrun is referred to frequently by scientific researchers, software process improvement consultants, and government advisors. In this paper, we review the validity of the Standish Group's 1994 cost overrun results. Our review is based on a comparison of the 189% cost overrun figure with the cost overrun figures reported in other cost estimation surveys, and in examination of the Standish Group's Survey design and analysis methods. We find that the figure reported by the Standish Group is Much higher than those reported in similar estimation surveys and that there may be severe problems with the survey design and methods of analysis, e.g. the population sampling method may be strongly biased towards 'failure projects'. We Conclude that the figure of 189% for cost overruns is probably much too high to represent typical software projects in the 1990s and that a continued use of that figure its a reference point for estimation accuracy may lead to poor decision making and hinder progress in estimation practices. (c) 2005 Elsevier Ltd All rights reserved.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM magnej@simula.no
RI Jorgensen, Magne/H-4402-2016
CR BERGERON F, 1992, INFORM MANAGE, V22, P239, DOI 10.1016/0378-7206(92)90026-C
   JENKINS AM, 1984, INFORM MANAGE, V7, P73, DOI 10.1016/0378-7206(84)90012-0
   JOHNSON J, 1995, APPL DEV TRENDS, P41
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Phan Dien., 1998, COMPUTERWORLD, V22, P95
   *STAND GROUP, 2003, CHAOS CHRON VERS 3 0
NR 7
TC 89
Z9 123
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2006
VL 48
IS 4
BP 297
EP 301
DI 10.1016/j.infsof.2005.07.002
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027PP
UT WOS:000236427800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zivkovic, A
   Rozman, I
   Hericko, M
AF Zivkovic, A
   Rozman, I
   Hericko, M
TI Automated software size estimation based on function points using UML
   models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE function points; software size measure; project planning
AB A systematic approach to software size estimation is important for accurate project planning. In this paper, we will propose the unified mapping of UML models into function points. The mapping is formally described to enable the automation of the counting procedure. Three estimation levels are defined that correspond to the different abstraction levels of the software system. The level of abstraction influences an estimate's accuracy. Our research, based on a small data set, proved that accuracy increases with each subsequent abstraction level. Changes to the FPA complexity tables for transactional functions will also be proposed in order to better quantify the characteristics of object-oriented software. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Maribor, Fac Elect Engn & Comp Sci, SI-2000 Maribor, Slovenia.
C3 University of Maribor
RP Univ Maribor, Fac Elect Engn & Comp Sci, Smetanova 17, SI-2000 Maribor, Slovenia.
EM ales.zivkovic@uni-mb.si
CR ALHAJRI MA, 2004, J SYST SOFTWARE, V2, P195
   [Anonymous], 1979, IEEE T SOFTWARE ENG
   [Anonymous], UN MOD LANG SPEC VER
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1999, FUNCT POINT COUNT PR
   Antoniol G, 2003, EMPIR SOFTW ENG, V8, P225, DOI 10.1023/A:1024472727275
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   ANTONIOL G, 1998, ADV INFORM SYSTEMS E, V13, P59
   *COSMIC FFP, 2003, COMM SOFTW MEAS INT, V2
   Diab H, 2002, LECT NOTES COMPUT SC, V2495, P483
   FETCKE T, 1999, P INT WORKSH SOFTW M, P1
   Fetcke T., 1997, P IFPUG 1997 SPRING, P134
   HERICKO M, 1998, THESIS U MARIBOR MAR
   *ISBSG, 2001, PRACT PROJ EST TOOK
   *ISO IEC, 2002, 141434 ISOIEC TR
   *ISO IEC, 1998, 141432 ISOIEC TR
   *ISO IEC, 1998, 141431 ISOIEC TR
   Jacobson I., 1992, OBJECT ORIENTED SOFW
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P29, DOI 10.1109/MS.1997.582972
   KRALJ T, 2005, J SYSTEMS SOFTWARE
   Lokan C. J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P200, DOI 10.1109/METRIC.1999.809741
   Lokan CJ, 2000, INFORM SOFTWARE TECH, V42, P649, DOI 10.1016/S0950-5849(00)00108-7
   Orr G, 2000, J SYST SOFTWARE, V53, P239, DOI 10.1016/S0164-1212(00)00015-7
   PAULSON LD, 2001, IT PROF, V7, P13
   Ram DJ, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P121, DOI 10.1109/APAQ.2000.883785
   SCHOONEVELDT M, 1995, P 2 AUSTR C SOFTW ME
   Uemura T, 2001, J SOFTW MAINT EVOL-R, V13, P223, DOI 10.1002/smr.231
   UEMURA T, 1999, P 6 INT S SOFTW METR, V62, P62
   UKSMA, 1998, MK 2 FUNCT POINT AN
   Whitmire S.A., 1992, SOFTWARE ENG PRODUCT, P229
   Zivkovic A, 2005, INFORMATICA-LITHUAN, V16, P295
   Zivkovic A., 2003, INFORMATICA, V4, P425
   ZIVKOVIC A, 2004, P IASTED INT C SOFTW
NR 34
TC 28
Z9 31
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2005
VL 47
IS 13
BP 881
EP 890
DI 10.1016/j.infsof.2005.02.008
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 974GF
UT WOS:000232578600004
DA 2024-07-18
ER

PT J
AU Tomaszewski, P
   Lundberg, L
AF Tomaszewski, P
   Lundberg, L
TI Software development productivity on a new platform: an industrial case
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE development environments; productivity; software metrics; improvement;
   technology adoption
ID METRICS SUITE; ADOPTION
AB The high non-functional requirements on mobile telecommunication applications call for new solutions. An example of such a solution can be a software platform that provides high performance and availability. The introduction of such a platform may, however, affect the development productivity. In this study, we present experiences from research carried out at Ericsson. The purpose of the research was productivity improvement and assessment when using the new platform. In this study, we quantify and evaluate the current productivity level by comparing it with UNIX development. The comparison is based on two large, commercially, available systems. We reveal a factor of four differences in productivity. Later, we decompose the problem into two issues: code writing speed and average amount of code necessary to deliver a certain functionality. We assess the impact of both these issues. We describe the nature of the problem by identifying factors that affect productivity and estimating their importance. To the issues identified we suggest a number of remedies. The main methods used in the study are interviews and historical data research. (C) 2004 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Blekinge Inst Technol, Sch Engn, POB 520, S-37225 Ronneby, Sweden.
EM piotr.tomaszewski@bth.se; lars.lundberg@bth.se
OI Tomaszewski, Piotr/0000-0001-7877-2121
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Blackburn J. D., 1996, Integrated Manufacturing Systems, V7, P60, DOI 10.1108/09576069610111918
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Boehm B, 1999, COMPUTER, V32, P111, DOI 10.1109/2.789755
   Boehm BW., 1981, Software Engineering Economics
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Edmondson AC, 2003, DECISION SCI, V34, P197, DOI 10.1111/1540-5915.02316
   FISHER W, 1998, P INT S TECHN SOC S, P116
   Gascoyne S, 2000, ELECTRON ENG, V72, P65
   GRAHAM I, 1995, MIGATING OBJECT TECH
   Hantos P, 2000, IEEE SOFTWARE, V17, P48, DOI 10.1109/52.819968
   HARVEY J, 1992, IEEE T ENG MANAGE, V39, P352, DOI 10.1109/17.165417
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   Huggett M, 2001, J MONETARY ECON, V48, P173, DOI 10.1016/S0304-3932(01)00065-4
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   *IEEE, 1993, 10451992 IEEE
   LI X, 2001, 10 INT WORKSH NEW AP, P44
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   Robson C., 2002, Real World Research, V2nd
   Saaty TL., 2001, INT SERIES OPERATION
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   Steven G.J., 1999, MANAGEMENT ACCOUNTIN, V77, P64
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   TOMASZEWSKI P, 2004, IASTED INT C SOFTW E
   Vaneman W. K., 2001, PICMET 01, V1
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   YU WD, 1991, COMPSAC 91 - THE FIFTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, PROCEEDINGS, P558
NR 30
TC 11
Z9 14
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2005
VL 47
IS 4
BP 257
EP 269
DI 10.1016/j.infsof.2004.08.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 899JS
UT WOS:000227141300004
DA 2024-07-18
ER

PT J
AU Fortino, G
   Russo, W
   Zimeo, E
AF Fortino, G
   Russo, W
   Zimeo, E
TI A Statecharts-based software development process for mobile agents
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Statecharts; mobile agents; design patterns; frameworks; java
ID DESIGN
AB Although mobile agents and their supporting infrastructures have been extensively developed, it is still an emerging technology. A wider acceptance of mobile agents would be facilitated with the exploitation of suitable methodologies and tools which fully support their development lifecycle. This paper proposes a Statecharts-based development process for mobile agents, which allows for a seamless transition from the specification of mobile agent behaviour to its implementation and adaptation to target mobile agent systems. In particular, modelling of the mobile agent behaviour is visual and its coding is seamlessly supported by the Mobile Active Object Framework. The coded agent behaviour can be adapted to platform-specific mobile agents by means of the Mobile Agent Adaptation Framework thus enabling re-use of existing mobile agent systems. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Calabria, DEIS, I-87036 Arcavacata Di Rende, CS, Italy.
   Unv Sannio, Dept Engn, RCOST, Benevento, Italy.
C3 University of Calabria; University of Sannio
RP Univ Calabria, DEIS, Via P Bucci,Cubo 41C, I-87036 Arcavacata Di Rende, CS, Italy.
EM g.fortino@unical.it; w.russo@unical.it; zimeo@unisannio.it
RI Fortino, Giancarlo/J-2950-2017; Russo, Wilma/M-1831-2015
OI Fortino, Giancarlo/0000-0002-4039-891X; Russo, Wilma/0000-0003-1452-5695
CR [Anonymous], 1996, PATTERN ORIENTED SOF
   Aridor Y., 1998, Proceedings of the Second International Conference on Autonomous Agents, P108, DOI 10.1145/280765.280784
   ARLOW J, 2001, UML UNIFIED PROCESS
   Bauer B., 2001, International Journal of Software Engineering and Knowledge Engineering, V11, P207, DOI 10.1142/S0218194001000517
   Bellifemine F, 2001, SOFTWARE PRACT EXPER, V31, P103, DOI 10.1002/1097-024X(200102)31:2<103::AID-SPE358>3.0.CO;2-O
   BOLONI L, 1999, CSDTR99027 PURD U
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Busetta P., 1998, JACK INTELLIGENT AGE
   CAMPBELL J, 1998, P NASA URC 98 C HUNT
   DAM KH, 2003, P 5 INT BI C WORKSH
   *FIPA AG MAN, FIPA AG MAN SUPP MOB
   FORTINO G, 2003, P IASTED INT C SOFTW, P635
   FORTINO G, 2002, P IEEE IPDPS 02 WORK, P1
   Funfrocken S, 1997, SIXTH IEEE WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P94, DOI 10.1109/ENABL.1997.630797
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GRAY R, 2004, IN PRESS HDB AGENT T
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 1997, COMPUTER, V30, P31, DOI 10.1109/2.596624
   Karnik NM, 1998, IEEE CONCURR, V6, P52, DOI 10.1109/4434.708256
   Kendall E. A., 1998, Proceedings of the Second International Conference on Autonomous Agents, P92, DOI 10.1145/280765.280781
   KESSLER R, 2004, P 3 INT JOINT C AUT
   Lange D. B., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P1, DOI 10.1007/BFb0054084
   Lange DB, 1999, COMMUN ACM, V42, P88, DOI 10.1145/295685.298136
   Lindsey J.S., 2000, PORPHYRIN HDB, V1, P45
   Luck M., 2003, AGENT TECHNOLOGY ENA
   MERSEGUER J, 2001, LECT NOTES COMPUTER, V2047, P317
   *OMG, 2003, OMG UN MOD LANG  MAR
   PADGHAM L, 2002, 1 INT JOINT C AUT AG
   Tripathi AR, 2002, J SYST SOFTWARE, V62, P123, DOI 10.1016/S0164-1212(01)00129-7
   *VOYAG ORB REC SOF, 2003, DOC SOFTW
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
   Wooldridge M, 2000, AUTON AGENT MULTI-AG, V3, P285, DOI 10.1023/A:1010071910869
   YACOUB S, 1998, P 5 ANN C PATT LANG
   2003, I LOGIX
   2003, GRASSHOPPER 2 IKVPLU
   2003, AGLETS SOFTWARE DEV
NR 36
TC 21
Z9 21
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2004
VL 46
IS 13
BP 907
EP 921
DI 10.1016/j.infsof.2004.04.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 843UJ
UT WOS:000223111800005
DA 2024-07-18
ER

PT J
AU Yin, ZC
   Dunsmore, A
   Miller, J
AF Yin, ZC
   Dunsmore, A
   Miller, J
TI Self-assessment of performance in software inspection processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE inspection; defects; subjective estimation
ID EXPERIENCE
AB Software inspection is accepted as an effective technique in the battle against defects. However, many organizations fail to maximize these benefits because, for example, the inspection team has difficulty setting exit or re-inspection criteria. This should ideally be based upon an estimate of the number of remaining defects in the source document. It is proposed that a subjective estimate of these remaining defects from individual inspectors can be an effective method for estimating the number of remaining defects, and hence it can be utilized as a mechanism to implement the exit or re-inspection decision. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB TG6 2V4, Canada.
   Univ Strathclyde, Dept Comp & Informat Sci, Glasgow G1 1XH, Lanark, Scotland.
C3 University of Alberta; University of Strathclyde
RP Univ Alberta, Dept Elect & Comp Engn, Newton Bldg 320, Edmonton, AB TG6 2V4, Canada.
EM zcyin@ee.ualberta.ca; apd@cis.strath.ac.uk; jm@ee.ualberta.ca
CR [Anonymous], 1982, The estimation of animal abundance and related parameters, DOI DOI 10.1002/BIMJ.19740160115
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   DENNIS AR, 1993, J APPL PSYCHOL, V78, P531, DOI 10.1037/0021-9010.78.4.531
   DOOLAN EP, 1992, SOFTWARE PRACT EXPER, V22, P173, DOI 10.1002/spe.4380220205
   Dunsmore A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P467, DOI 10.1109/ICSE.2000.870437
   Dunsmore A, 2001, PROC INT CONF SOFTW, P135, DOI 10.1109/ICSE.2001.919088
   DUNSMORE A, 2000, EFOCS372000
   DUNSMORE A, 1999, EFOCS3499
   ELEMAM K, 1999, NRCERB1060
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Gilb Tom, 1993, Software inspections
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   LEVINE JM, 1990, ANNU REV PSYCHOL, V41, P585, DOI 10.1146/annurev.ps.41.020190.003101
   MILLER J, 1999, VERIFICATION RELIABI, V9, P167
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   RUSSELL GW, 1991, IEEE SOFTWARE, V8, P25, DOI 10.1109/52.62929
   Shaw M., 1976, GROUP DYNAMICS PSYCH
   Wohlin C, 1998, PROC INT CONF SOFTW, P400, DOI 10.1109/ICSE.1998.671393
NR 19
TC 2
Z9 3
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2004
VL 46
IS 3
BP 185
EP 194
DI 10.1016/S0950-5849(03)00127-7
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 764WQ
UT WOS:000188229300004
DA 2024-07-18
ER

PT J
AU Lee, SK
   Hwang, CS
AF Lee, SK
   Hwang, CS
TI Architecture layers and engineering approach for agent-based system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE agent-based system; layered architecture; system organization; agent
   interaction; design performance
AB It is necessary to support user-centric service provision paradigm in distributed, dynamic and complex computing environment. Software agent technology is considered as one of the technologies suitable to adopt such computing environment. Many researchers have emphasized on agent-based system development, but, many agent-based systems are designed and constructed in ad hoc. In particular, they do not enough consider system organization and performance aspects. More systematic engineering approach of agent-based system is required. We propose the layered architecture and engineering approach for agent-based system design. We devise the layers necessary to design agent-based system, and methods to engineer each layer. Also we show that the devised approach can be used to design agent-based system and analyze system features. The layered architecture and engineering approach of agent-based system proposed in this paper support that engineer designs efficient agent-based system. (C) 2003 Elsevier B.V. All rights reserved.
C1 Korea Univ, Dept Comp Sci, Seoul 136701, South Korea.
C3 Korea University
RP Lee, SK (corresponding author), Korea Univ, Dept Comp Sci, Seoul 136701, South Korea.
EM sukyeongy@hanmail.net
CR ALLSOPP DN, 2002, IEEE INTELLIGENT MAY, P26
   [Anonymous], 2000, INT WORKSH AG OR SOF, DOI DOI 10.1007/3-540-44564-1_
   Bauer B., 2000, LNCS, V1957, P91, DOI DOI 10.1007/3-540-44564-1
   BELLAVISTA P, 2002, PERVASIVE COMPUT JUL, P81
   Cheikhrouhou MM, 1999, GLOBECOM'99: SEAMLESS INTERCONNECTION FOR UNIVERSAL SERVICES, VOL 1-5, P1964, DOI 10.1109/GLOCOM.1999.832511
   Deloach SA, 2001, INT J SOFTW ENG KNOW, V11, P231, DOI 10.1142/S0218194001000542
   Fischer K, 1999, IEEE T SYST MAN CY C, V29, P531, DOI 10.1109/5326.798767
   GOU H, AGENT BASED APPROACH, P292
   HENDLER J, 1999, DARPA            MAR
   Hogg LMJ, 2001, IEEE T SYST MAN CY A, V31, P381, DOI 10.1109/3468.952713
   Huhns MN, 2001, INT J SOFTW ENG KNOW, V11, P259, DOI 10.1142/S0218194001000530
   Jennings NR, 2001, COMMUN ACM, V44, P35, DOI 10.1145/367211.367250
   Kawamura T, 2000, LECT NOTES COMPUT SC, V1882, P192
   Khunboa C, 2001, PROC ANNU SIMUL SYMP, P7, DOI 10.1109/SIMSYM.2001.922109
   Lander SE, 1997, IEEE EXPERT, V12, P18, DOI 10.1109/64.585100
   LEJTER M, 1996, IEEE EXPERT      DEC, P47
   McBreen HM, 2001, IEEE T SYST MAN CY A, V31, P394, DOI 10.1109/3468.952714
   Sarjoughian HS, 2001, P IEEE, V89, P201, DOI 10.1109/5.910855
   Schetter T, 2000, LECT NOTES COMPUT SC, V1882, P151
   SHEHORY O, 2000, LECT NOTES ARTIF INT, V1957, P77
   SINKOVIC V, 2000, 4 INT C KNOWL BAS IN
   SUGAWARA K, 2002, P 1 IEEE INT C COGN
   Vidal JM, 2001, IEEE INTERNET COMPUT, V5, P82, DOI 10.1109/4236.895147
   Woods S.G., 1999, CMUSEI99TR025
   Wooldridge MJ, 1999, IEEE INTERNET COMPUT, V3, P20, DOI 10.1109/4236.769419
   Zambonelli F, 2001, INT J SOFTW ENG KNOW, V11, P303, DOI 10.1142/S0218194001000505
NR 26
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2003
VL 45
IS 13
BP 889
EP 898
DI 10.1016/S0950-5849(03)00057-0
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 725AJ
UT WOS:000185520200001
DA 2024-07-18
ER

PT J
AU Jard, C
AF Jard, C
TI Synthesis of distributed testers from true-concurrency models of
   reactive systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE testing; distributed systems; synthesis; true-concurrency models;
   interoperability
ID TEST-GENERATION
AB Automatic synthesis of test cases for conformance testing has been principally developed with the objective of generating sequential test cases. In the distributed system context, it is worth extending the synthesis techniques to the generation of multiple testers. We base our work on our experience in using model-checking techniques, as successfully implemented in the Test Generation using the Verification tool. Continuing the works of Ulrich and Konig, we propose to use a true-concurrency model based on graph unfolding. The article presents the principles of a complete chain of synthesis, starting from the definition of test purposes and ending with a projection onto a set of testers. (C) 2003 Elsevier B.V. All rights reserved.
C1 CNRS, IRISA, F-35042 Rennes, France.
C3 Universite de Rennes; Centre National de la Recherche Scientifique
   (CNRS)
RP CNRS, IRISA, Campus Beaulieu, F-35042 Rennes, France.
EM claude.jard@irisa.fr
CR BONNET R, 1982, ORDERED SETS, P125
   Cacciari L, 1999, INFORM SOFTWARE TECH, V41, P767, DOI 10.1016/S0950-5849(99)00036-1
   CAILLAUD B, 1997, EUROPEAN J AUTOMATIO, V31, P503
   CASTANET R, 1994, PROTOCOL TEST SYSTEM, V6
   DEVRIES R, 2001, FORMAL APPROACHES TE
   DOLDI L, 1996, IFIP TC6 9 INT WORKS
   ENGELFRIET J, 1991, ACTA INFORM, V28, P575, DOI 10.1007/BF01463946
   Esparza J, 1999, LECT NOTES COMPUT SC, V1664, P2
   Fernandez JC, 1997, SCI COMPUT PROGRAM, V29, P123, DOI 10.1016/S0167-6423(96)00032-9
   FERNANDEZ JC, 1996, LNCS, V1102
   Henniger O, 1997, TESTING OF COMMUNICATING SYSTEMS, VOL 10, P255
   *ISO IEC, 9646 ISOIEC IT OSI
   JARD C, 1995, RAIRO-INF THEOR APPL, V29, P227, DOI 10.1051/ita/1995290302271
   JARD C, 2002, TESTC 2002 BERL MARC
   JARD C, 1998, IFIP, V18, P353
   JERON T, 1999, LNCS, V1633, P108
   JERON T, 1998, INT S SOFTW ENG PAR
   KERBRAT A, 1997, P SDL FOR 97
   KHOMENKO V, 2001, LNCS, V2154, P366
   KIM M, 1999, IFIP, V19, P337
   KIM M, 1996, P 9 INT WORKSH TEST, P141
   LEDRU Y, 2001, P IEEE AUT SOFTW ENG
   LUO G, 1994, COMPUT STAND INTER, V16, P119, DOI 10.1016/0920-5489(94)90003-5
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   TORO M, 1999, P 12 INT WORKSH TEST
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Ulrich A, 1999, INT FED INFO PROC, V21, P93
   ULRICH A, 1997, IFIP, V17
NR 28
TC 8
Z9 8
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2003
VL 45
IS 12
BP 805
EP 814
DI 10.1016/S0950-5849(03)00061-2
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 724QW
UT WOS:000185499100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Khoumsi, A
AF Khoumsi, A
TI Testing distributed real-time systems in the presence of inaccurate
   clock synchronizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE distributed real-time system; conformance testing; architecture of test
   system; coordination of testers; distribution of test sequence; clock
   synchronization
AB This article deals with testing distributed real-time systems. More precisely, we propose: (1) a model for describing the specification of the implementation under test, (2) a distributed architecture of the test system (TS), (3) an approach for coordinating the testers which constitute the TS, and (4) a procedure for deriving automatically the test sequence of each tester from a global test sequence. In comparison with a very recent work, the proposed test method has the following important advantage: the clocks used by the different testers are not assumed perfectly synchronized. Rather, we assume more realistically that each clock is synchronized with a reference clock with a given (nonnull) inaccuracy. This advantage is very relevant if, for example, the testers communicate through the Internet. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Sherbrooke, Dept GEGI, Sherbrooke, PQ J1K 2R1, Canada.
C3 University of Sherbrooke
RP Khoumsi, A (corresponding author), Univ Sherbrooke, Dept GEGI, 2500 Blvd Univ, Sherbrooke, PQ J1K 2R1, Canada.
EM ahmed.khoumsi@usherbrooke.ca
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   BI J, 1999, P PSTV FORTE BEIJ CH
   CACCIARI L, 1999, INFORMATION SOFTWARE
   CLARKE D, 1997, P 3 INT WORKSH OBJ O
   COULOURIS G, 1998, DISTRIBUTED SYSTEMS
   ENNOUAARY A, 1997, P 6 C FRANC ING PROT
   ENNOUAARY A, 1998, P 19 IEEE REAL TIM S
   JARD C, 1999, P PSTV FORTE BEIJ CH
   JARD C, 1998, P PSTV FORTE PAR FRA
   Khoumsi A, 2002, IEEE T SOFTWARE ENG, V28, P1085, DOI 10.1109/TSE.2002.1049406
   Khoumsi A, 2001, IEEE SYMP COMP COMMU, P648, DOI 10.1109/ISCC.2001.935444
   KHOUMSI A, 2000, P 13 INT WORKSH TEST
   KHOUMSI A, 2000, P 7 INT C REAL TIM C
   KHOUMSI A, 2000, P 4 IASTED INT C SOF
   LIU F, 1993, THESIS U MONTREAL
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   LUO G, 1994, COMPUT STAND INTER, V16, P119, DOI 10.1016/0920-5489(94)90003-5
   MANDRIOLI D, 1995, ACM T COMPUT SYST, V13, P365, DOI 10.1145/210223.210226
   SPRINGINTVELD J, 1997, CTIT9717 U TWENT
   TAN QM, 1996, P INT C COMM ICC DAL, P225
   ZHANG J, 1999, P PSTV FORTE BEIJ CH
NR 21
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2003
VL 45
IS 12
BP 853
EP 864
DI 10.1016/S0950-5849(03)00064-8
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 724QW
UT WOS:000185499100006
DA 2024-07-18
ER

PT J
AU Mullins, J
   Lafrance, S
AF Mullins, J
   Lafrance, S
TI Bisimulation-based non-deterministic admissible interference and its
   application to the analysis of cryptographic protocols
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE non-interference; bisimulation; model-checking; cryptographic protocols
ID CALCULUS
AB In this paper. we first define bisimulation-based non-deterministic admissible interference (BNAI), derive its process-theoretic characterisation and present a compositional verification method with respect to the main operators over communicating processes, generalising in this way the similar trace-based results obtained [J. Univ. Comput. Sci. 6 (2000) 1054] into the finer notion of observation-based bisimulation [Logic and Models of Concurrent Systems, 1985]. Like its trace-based version, BNAI admits information flow between secrecy levels only through a downgrader (e.g. a cryptosystem), but is phrased into a generalisation of observational equivalence [Communication and Concurrency, 1989]. We then describe an admissible interference-based method for the analysis of cryptographic protocols. extending. in a non-trivial way, the non-interference-based approach presented by Focardi et al. [Proceedings of DERA/RHUL Workshop on Secure Architectures and Information Flow, 2000]. Confidentiality and authentication for cryptoprotocols are defined in terms of BNAI and their respective bisimulation-based proof methods are derived. Finally, as a significant illustration of the method, we consider simple case studies: the paradigmatic examples of the Wide Mouthed Frog protocol [ACM Trans. Comput. Syst. 8 (1990) 18] and the Woo and Lam one-way authentication protocol [IEEE Comput. 25 (1992) 39]. The original idea of this methodology is to prove that the intruder may interfere with the protocol only through selected channels considered as admissible when leading to harmless interference. (C) 2003 Elsevier B.V. All rights reserved.
C1 Ecole Polytech, Dept Genie Informat, Montreal, PQ H3C 3A7, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Mullins, J (corresponding author), Ecole Polytech, Dept Genie Informat, Montreal, PQ H3C 3A7, Canada.
EM john.mullins@polymtl.ca; stephane.lafrance@polymtl.ca
CR Abadi M, 1999, INFORM COMPUT, V148, P1, DOI 10.1006/inco.1998.2740
   Abadi M, 1997, LECT NOTES COMPUT SC, V1243, P59
   [Anonymous], 2000, J UNIVERS COMPUT SCI
   [Anonymous], 1996, LNCS
   Bodei C, 2001, INFORM COMPUT, V168, P68, DOI 10.1006/inco.2000.3020
   Boreale M., 1999, Proceedings. 14th Symposium on Logic in Computer Science (Cat. No. PR00158), P157, DOI 10.1109/LICS.1999.782608
   BOUDOL G, 1985, NATO ASI SERIES F, V13, P261
   BURROWS M, 1990, ACM T COMPUT SYST, V8, P18, DOI [10.1145/77648.77649, 10.1145/74851.74852]
   CLEAVELAND R, 1993, ACM T PROGR LANG SYS, V15, P36, DOI 10.1145/151646.151648
   DURANTE A, 1999, P 12 IEEE COMP SEC F
   Focardi R., 1994, Journal of Computer Security, V3, P5
   Focardi R, 1999, LECT NOTES COMPUT SC, V1708, P794
   FOCARDI R, 1997, P DIMACS WORKSH DES
   FOCARDI R, 2000, P DERA RHUL WORKSH S, V32
   Goguen J. A., 1984, Proceedings of the 1984 Symposium on Security and Privacy, P75
   KANNELLAKIS P, 1990, INFORMATION COMPUTAT, V86, P333
   LAFRANCE S, 2002, FSCBS2002
   McLean J., 1994, Encycl. Softw. Eng., V2, P1136
   Milner R., 1989, Communication and concurrency
   PINSKY S, 1995, P IEEE S SECUR PRIV, P102, DOI 10.1109/SECPRI.1995.398926
   ROSCOE AW, 1995, 8 COMP SEC FDN WORKS
   Schneider S, 1998, IEEE T SOFTWARE ENG, V24, P741, DOI 10.1109/32.713329
   WOO TYC, 1992, COMPUTER, V25, P39, DOI 10.1109/2.108052
   WOO TYC, 1994, ACM OPERATING SYSTEM, V28
NR 24
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 15
PY 2003
VL 45
IS 11
BP 779
EP 790
DI 10.1016/S0950-5849(03)00072-7
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 720DG
UT WOS:000185245800007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Germanos, M
   Azar, D
   Hanna, EM
AF Germanos, Manuella
   Azar, Danielle
   Hanna, Eileen Marie
TI To change or not to change? Modeling software system interactions using
   Temporal Graphs and Graph Neural Networks: A focus on change propagation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based software engineering; Software change impact analysis;
   Change propagation; Temporal Graphs; Graph Neural Network; Long
   Short-Term Memory
AB Context: The world is quickly adopting new technologies and evolving to rely on software systems for the simplest tasks. This prompts developers to expand their software systems by adding new product features. However, this expansion should be cautiously tackled to prevent the degradation of the quality of the software product. Objective: One challenge when modifying code - whether to patch a bug or add a feature - is knowing which components will be affected by the change and amending possible misbehavior. In this context, the study of change propagation or the impact of introducing a change is needed. By investigating how changing one component may impact the functionality of a dependency (another component), developers can prevent unexpected behavior and maintain the quality of their system. Methods: In this work, we tackle the change propagation problem by modeling a software system as a temporal graph where nodes represent system files and edges co-changeability, i.e., the tendency of two files to change together. The graph representation is temporal so that nodes and edges can change with time, reflecting the addition of files in the system and changes in dependencies. We then employ a Temporal Graph Network and a Long Short-Term Memory model to predict which other files will be impacted by a modification performed on a file. Results: We test our model on software systems of different functionality, size, and nature. We compare our results to other published work, and our model shows a significantly higher ability to predict files impacted by a change. Conclusion: The proposed approach effectively predicts change propagation in software systems and can guide developers and software engineers in planning the change and estimating the cost in terms of time and money.
C1 [Germanos, Manuella; Azar, Danielle; Hanna, Eileen Marie] Lebanese Amer Univ, Dept Comp Sci & Math, Byblos 1401, Lebanon.
C3 Lebanese American University
RP Azar, D (corresponding author), Lebanese Amer Univ, Dept Comp Sci & Math, Byblos 1401, Lebanon.
EM danielle.azar@lau.edu.lb
OI Hanna, Eileen Marie/0000-0002-2093-4586; Azar,
   Danielle/0000-0002-6159-3714
CR Agrawal A, 2020, IET SOFTW, V14, P739, DOI 10.1049/iet-sen.2019.0368
   Bailey M, 2012, P 50 ANN SE REGIONAL, P106, DOI [10.1145/2184512.2184538, DOI 10.1145/2184512.2184538]
   Ben Abdullah Ali, 2021, 7 INT C ENG MIS 2021, P1
   Bergmeir C, 2012, INFORM SCIENCES, V191, P192, DOI 10.1016/j.ins.2011.12.028
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hochreiter S, 1998, INT J UNCERTAIN FUZZ, V6, P107, DOI 10.1142/S0218488598000094
   Jiang CH, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8020181
   Kumar S, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1269, DOI 10.1145/3292500.3330895
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Leigh A, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110947
   Li BX, 2013, ADV ENG SOFTW, V58, P45, DOI 10.1016/j.advengsoft.2013.01.001
   Malhotra Mrinaal, 2018, INT C FUT TRENDS NET, P367
   Malhotra R, 2019, E-INFORMATICA, V13, P227, DOI 10.5277/e-Inf190107
   Malhotra R, 2017, SWARM EVOL COMPUT, V32, P85, DOI 10.1016/j.swevo.2016.10.002
   Malhotra Ruchika, 2022, Int. J. Inf. Retr. Res. (IJIRR), V12, P1
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Michail O, 2016, INTERNET MATH, V12, P239, DOI 10.1080/15427951.2016.1177801
   Mirarab S, 2007, INT C PROGRAM COMPRE, P177
   Mohammad F, 2021, ENERGIES, V14, DOI 10.3390/en14196161
   Moonen L, 2016, IEEE INT WORK C SO, P207, DOI 10.1109/SCAM.2016.9
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Pugh S, 2018, IEEE INT WORK C SO, P129, DOI 10.1109/SCAM.2018.00022
   Rolfsnes T, 2018, EMPIR SOFTW ENG, V23, P987, DOI 10.1007/s10664-017-9560-y
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Rossi E, 2020, Arxiv, DOI [arXiv:2006.10637, 10.48550/arXiv.2006.10637, DOI 10.48550/ARXIV.2006.10637]
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Wang L, 2016, LECT NOTES COMPUT SC, V9633, P197, DOI 10.1007/978-3-662-49665-7_12
   Wang RC, 2014, SCI WORLD J, DOI 10.1155/2014/237243
   WERBOS PJ, 1990, P IEEE, V78, P1550, DOI 10.1109/5.58337
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Ying Annie Tsui Tsui, 2003, Ph.D. thesis
NR 32
TC 1
Z9 1
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107368
DI 10.1016/j.infsof.2023.107368
EA NOV 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG2G9
UT WOS:001124027700001
DA 2024-07-18
ER

PT J
AU Ciriello, RF
   Loss, S
AF Ciriello, Raffaele F.
   Loss, Sebastian
TI The yea-paradox: Cognitive bias in technology acceptance surveys
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technology acceptance; Yea-paradox; Cognitive bias; Cloud computing;
   Exploratory case study
ID INFORMATION-TECHNOLOGY; USER ACCEPTANCE; INTENTION; TESTS; REQUIREMENTS;
   PERSPECTIVE; PREDICT
AB Context: Technology acceptance is widely regarded as one of the most established, mature, and continuously relevant streams of information systems research. Its fundamental assumption is that technology acceptance scores accurately reflect users' intentions, needs, and emotions toward the technology of interest. However, many studies (including this one) present evidence that challenges this assumption, suggesting that the link between reported scores and actual perception is more complex than often assumed. Objective: We aim to find out how cognitive biases influence self-reported technology acceptance scores. Method: We draw on dialogical iterations between an exploratory case study at Cloud Corp, a multinational Software-as-a-Service provider and related literature on technology acceptance and cognitive bias. Findings: Our study reveals a paradoxical relationship between reported acceptance scores and actual perceptions: Despite providing high acceptance scores, users did not actually use the technology. Conversely, users who complained a lot by filing many support tickets were more engaged with the technology. Conclusion: When yea-saying users meet yea-hearing designers, technology acceptance scores may be spuriously inflated, providing an exaggerated picture of users' attitudes toward a technology. We call this the 'yea-paradox' because of its roots in people's tendency to agree half-heartedly ('yea'), even when they privately disagree, to avoid more complex and potentially difficult conversations.
C1 [Ciriello, Raffaele F.] Univ Sydney, 23-25 Codrington St, Sydney 2006, Australia.
   [Loss, Sebastian] IT Univ Copenhagen, Copenhagen, Denmark.
C3 University of Sydney; IT University Copenhagen
RP Ciriello, RF (corresponding author), Univ Sydney, 23-25 Codrington St, Sydney 2006, Australia.
EM raffaele.ciriello@sydney.edu.au
OI Ciriello, Raffaele Fabio/0000-0002-5073-6310
CR Bano M, 2015, INFORM SOFTWARE TECH, V58, P148, DOI 10.1016/j.infsof.2014.06.011
   Belletier C, 2018, COMPUT HUM BEHAV, V86, P61, DOI 10.1016/j.chb.2018.04.029
   Bertrand M, 2001, AM ECON REV, V91, P67, DOI 10.1257/aer.91.2.67
   Boell SK, 2014, COMMUN ASSOC INF SYS, V34, P257
   Brown Penelope., 1987, POLITENESS SOME UNIV
   CARR LG, 1971, AM SOCIOL REV, V36, P287, DOI 10.2307/2094045
   Changchit C, 2018, J COMPUT INFORM SYST, V58, P1, DOI 10.1080/08874417.2016.1180651
   Chin WW, 2008, MIS QUART, V32, P687
   Chou SW, 2013, DECIS SUPPORT SYST, V56, P148, DOI 10.1016/j.dss.2013.05.013
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Reuver M, 2015, INFORM MANAGE-AMSTER, V52, P287, DOI 10.1016/j.im.2014.12.002
   Dixon M., 2013, The effortless experience: conquering the new battleground for customer loyalty
   Friborg O, 2006, PERS INDIV DIFFER, V40, P873, DOI 10.1016/j.paid.2005.08.015
   Gigerenzer G, 1996, PSYCHOL REV, V103, P650, DOI 10.1037/0033-295X.103.4.650
   Gioia DA, 2013, ORGAN RES METHODS, V16, P15, DOI 10.1177/1094428112452151
   Gregor S, 2006, MIS QUART, V30, P611
   Hagaman AK, 2017, FIELD METHOD, V29, P23, DOI 10.1177/1525822X16640447
   Hotomski S, 2019, INFORM SOFTWARE TECH, V110, P17, DOI 10.1016/j.infsof.2019.01.011
   Huang HH, 2012, DECIS SUPPORT SYST, V53, P438, DOI 10.1016/j.dss.2012.03.009
   Jeyaraj A, 2006, J INF TECHNOL-UK, V21, P1, DOI 10.1057/palgrave.jit.2000056
   KAHNEMAN D, 1972, COGNITIVE PSYCHOL, V3, P430, DOI 10.1016/0010-0285(72)90016-3
   Kim A, 2019, MIS QUART, V43, P1025, DOI 10.25300/MISQ/2019/15188
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   KOEHLER JJ, 1993, ORGAN BEHAV HUM DEC, V56, P28, DOI 10.1006/obhd.1993.1044
   Kuru O, 2016, COMPUT HUM BEHAV, V57, P82, DOI 10.1016/j.chb.2015.12.008
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Marsh HW, 1997, AM PSYCHOL, V52, P1187, DOI 10.1037/0003-066X.52.11.1187
   Morewedge CK, 2010, TRENDS COGN SCI, V14, P435, DOI 10.1016/j.tics.2010.07.004
   Namey E, 2016, AM J EVAL, V37, P425, DOI 10.1177/1098214016630406
   Oliveira T, 2019, INT J INFORM MANAGE, V49, P1, DOI 10.1016/j.ijinfomgt.2019.02.009
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Schultze U, 2011, INFORM ORGAN-UK, V21, P1, DOI 10.1016/j.infoandorg.2010.11.001
   Schwarz A, 2014, J INF TECHNOL-UK, V29, P73, DOI 10.1057/jit.2013.31
   Schwind C, 2012, COMPUT HUM BEHAV, V28, P2280, DOI 10.1016/j.chb.2012.06.035
   Sharma R, 2009, MIS QUART, V33, P473
   Shiau WL, 2016, INFORM MANAGE-AMSTER, V53, P355, DOI 10.1016/j.im.2015.10.004
   Simon H. A., 1957, MODELS MAN
   Sommerville Ian, 2011, Software engineering
   Srikanth H, 2016, J SYST SOFTWARE, V119, P122, DOI 10.1016/j.jss.2016.06.017
   Straub DW, 2007, J ASSOC INF SYST, V8, P223, DOI 10.17705/1jais.00124
   Tan X, 2015, J ENTERP INF MANAG, V28, P423, DOI 10.1108/JEIM-04-2014-0039
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Venkatesh V, 2016, J ASSOC INF SYST, V17, P328, DOI 10.17705/1jais.00428
   Verhagen T, 2015, J ASSOC INF SYST, V16, P108, DOI 10.17705/1jais.00388
   WEICK KE, 1989, ACAD MANAGE REV, V14, P516, DOI 10.2307/258556
   Wu PF, 2012, J ASSOC INF SYST, V13, P172
   Yang HL, 2015, COMPUT HUM BEHAV, V52, P219, DOI 10.1016/j.chb.2015.05.057
NR 49
TC 1
Z9 1
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107253
DI 10.1016/j.infsof.2023.107253
EA MAY 2023
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J3PT3
UT WOS:001008771900001
DA 2024-07-18
ER

PT J
AU Alhoshan, W
   Ferrari, A
   Zhao, LP
AF Alhoshan, Waad
   Ferrari, Alessio
   Zhao, Liping
TI Zero-shot learning for requirements classification: An exploratory study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Zero-shot learning; Language models; Contextual word-embeddings;
   Requirements classification; Zero-shot text classification; Unsupervised
   learning; Multi-label classification; Transfer learning; Deep learning;
   Requirements engineering; AI for requirements engineering; AI for
   software engineering
AB Context: Requirements engineering (RE) researchers have been experimenting with machine learning (ML) and deep learning (DL) approaches for a range of RE tasks, such as requirements classification, requirements tracing, ambiguity detection, and modelling. However, most of today's ML/DL approaches are based on supervised learning techniques, meaning that they need to be trained using a large amount of task-specific labelled training data. This constraint poses an enormous challenge to RE researchers, as the lack of labelled data makes it difficult for them to fully exploit the benefit of advanced ML/DL technologies.Objective: This paper addresses this problem by showing how a zero-shot learning (ZSL) approach can be used for requirements classification without using any labelled training data. We focus on the classification task because many RE tasks can be framed as classification problems.Methods: The ZSL approach used in our study employs contextual word-embeddings and transformer-based language models (LMs). We demonstrate this approach through a series of experiments to perform three classification tasks: (1) FR/NFR - classification functional requirements vs non-functional requirements; (2) NFR - identification of NFR classes; (3) Security - classification of security vs non-security requirements.Results: The study shows that the ZSL approach achieves an F1 score of 0.66 for the FR/NFR task. For the NFR task, the approach yields F1 similar to 0.72 - 0.80, considering the most frequent classes. For the Security task, F1 similar to 0.66. All of the aforementioned F1 scores are achieved with zero-training efforts.Conclusion: This study demonstrates the potential of ZSL for requirements classification. An important implication is that it is possible to have very little or no training data to perform classification tasks. The proposed approach thus contributes to the solution of the long-standing problem of data shortage in RE.
C1 [Alhoshan, Waad] Imam Mohammad Ibn Saud Islamic Univ IMSIU, Coll Comp & Informat Sci, Riyadh 11564, Saudi Arabia.
   [Ferrari, Alessio] Consiglio Nazl Ric ISTI CNR, Ist Sci & Tecnol Informaz A Faedo, Via G Moruzzi 1, I-56126 Pisa, Italy.
   [Zhao, Liping] Univ Manchester, Dept Comp Sci, Manchester M13 9PL, England.
C3 Imam Mohammad Ibn Saud Islamic University (IMSIU); Consiglio Nazionale
   delle Ricerche (CNR); Istituto di Scienza e Tecnologie dell'Informazione
   "Alessandro Faedo" (ISTI-CNR); University of Manchester
RP Ferrari, A (corresponding author), Consiglio Nazl Ric ISTI CNR, Ist Sci & Tecnol Informaz A Faedo, Via G Moruzzi 1, I-56126 Pisa, Italy.; Zhao, LP (corresponding author), Univ Manchester, Dept Comp Sci, Manchester M13 9PL, England.
EM alessio.ferrari@isti.cnr.it; liping.zhao@manchester.ac.uk
RI chen, xian/KHW-2227-2024
OI Zhao, Liping/0000-0001-8556-8655
FU  [RP-21-07-03]
FX We wish to thank the reviewers for their valuable comments and
   suggestions, for their support and interest in this paper. We thank the
   Guest Editors of this special issue, Vincenzo Gervasi and Andreas
   Vogelsang, for their great support and interest in our paper. Liping
   Zhao and Waad Alhoshan extend their appreciation to the Deanship of
   Scientific Research at IMSIU for funding and supporting this work
   through Research Partnership Program no. RP-21-07-03.
CR Abualhaija S, 2020, EMPIR SOFTW ENG, V25, P5454, DOI 10.1007/s10664-020-09864-1
   Ajagbe M, 2022, 2022 30TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2022), P309, DOI 10.1109/RE54965.2022.00046
   AlDhafer O, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106877
   Alhoshan W, 2022, LECT NOTES COMPUT SC, V13216, P52, DOI 10.1007/978-3-030-98464-9_5
   [Anonymous], 2018, ISO/IEC/IEEE 29148:2018(E), P1, DOI 10.1109/IEEESTD.2018.8559686
   Brown TB, 2020, Arxiv, DOI [arXiv:2005.14165, DOI 10.48550/ARXIV.2005.14165]
   Beltagy Iz, 2019, arXiv, DOI DOI 10.48550/ARXIV.1903.10676
   Berry DM, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09986-0
   Binkhonain M., 2019, EXPERT SYST APPL X, V1, DOI DOI 10.1016/J.ESWAX.2019.100001
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Broy M, 2015, COMPUTER, V48, P96, DOI 10.1109/MC.2015.139
   Casamayor A, 2010, INFORM SOFTWARE TECH, V52, P436, DOI 10.1016/j.infsof.2009.10.010
   Chalkidis I, 2020, Arxiv, DOI arXiv:2010.02559
   Christey Steve., 2013, COMMON WEAKNESS ENUM
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cleland-Huang Jane, 2007, Zenodo
   Dabrowski J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10065-7
   Dalpiaz F, 2019, INT REQUIR ENG CONF, P142, DOI 10.1109/RE.2019.00025
   Dalpiaz F, 2018, IEEE SOFTWARE, V35, P115, DOI 10.1109/MS.2018.3571242
   Dekhtyar A, 2017, INT REQUIR ENG CONF, P484, DOI 10.1109/RE.2017.26
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Eckhardt J, 2016, PROC INT CONF SOFTW, P832, DOI 10.1145/2884781.2884788
   Ethayarajh K, 2019, Arxiv, DOI [arXiv:1909.00512, DOI 10.18653/V1/D19]
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Ferrari A, 2019, AUTOMAT SOFTW ENG, V26, P559, DOI 10.1007/s10515-019-00261-7
   Ferrari A, 2017, IEEE SOFTWARE, V34, P28, DOI 10.1109/MS.2017.4121207
   Ferrari A, 2017, INT REQUIR ENG CONF, P502, DOI 10.1109/RE.2017.29
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Kassab M, 2014, INNOV SYST SOFTW ENG, V10, P235, DOI 10.1007/s11334-014-0232-4
   Knauss Eric, 2021, Zenodo, DOI 10.5281/ZENODO.4530183
   Knauss E, 2011, LECT NOTES COMPUT SC, V6606, P4, DOI 10.1007/978-3-642-19858-8_2
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Pushp PK, 2017, Arxiv, DOI arXiv:1712.05972
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   Lampert CH, 2009, PROC CVPR IEEE, P951, DOI 10.1109/CVPRW.2009.5206594
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Larochelle H., 2008, AAAI, V1, P3, DOI DOI 10.5555/1620163.1620172
   Lee J, 2020, BIOINFORMATICS, V36, P1234, DOI 10.1093/bioinformatics/btz682
   Levy O, 2017, Arxiv, DOI arXiv:1706.04115
   Li FL, 2014, INT REQUIR ENG CONF, P293, DOI 10.1109/RE.2014.6912271
   Ma Yukun, 2016, P COLING 2016 26 INT, P171
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Minaee S, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3439726
   Munaiah N, 2017, INT REQUIR ENG CONF, P506, DOI 10.1109/RE.2017.79
   Nam J, 2016, AAAI CONF ARTIF INTE, P1948
   Navarro-Almanza R, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P116, DOI 10.1109/CONISOFT.2017.00021
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Radford A., 2019, LANGUAGE MODELS ARE
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Raffel C, 2020, J MACH LEARN RES, V21
   Reimers N, 2019, Arxiv, DOI [arXiv:1908.10084, 10.48550/arXiv.1908.10084]
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Romera-Paredes Bernardino, 2015, ICML
   Ruder Sebastian, 2019, Neural transfer learning for natural language processing
   Sainani A, 2020, INT REQUIR ENG CONF, P147, DOI 10.1109/RE48521.2020.00026
   Sappadla P.V., 2016, Proceeding of European Symposium on Artificial Neural Networks, Computational Intelligence and Machine Learning, P423
   Sarker Iqbal H, 2021, SN Comput Sci, V2, P160, DOI 10.1007/s42979-021-00592-x
   Sidey-Gibbons JAM, 2019, BMC MED RES METHODOL, V19, DOI 10.1186/s12874-019-0681-4
   Tabassum Jeniya, 2020, P 58 ANN M ASS COMP, P4913, DOI [DOI 10.18653/V1/2020.ACLMAIN.443, 10.18653/v1/2020.aclmain.443]
   Varenov V, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P444, DOI [10.1109/REW53955.2021.00081, 10.1109/REW53955.2021.9714713]
   Wang W, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3293318
   Wang Wei, 2020, Advances in Neural Information Processing Systems
   Yang Q, 2020, TRANSFER LEARNING, P234
   Yang Z., 2019, NEURIPS, V32
   Yin WP, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3914
   Zhao L, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3444689
   Zhuang FZ, 2021, P IEEE, V109, P43, DOI 10.1109/JPROC.2020.3004555
NR 74
TC 8
Z9 8
U1 5
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107202
DI 10.1016/j.infsof.2023.107202
EA MAR 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D0KX4
UT WOS:000965713000001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Wei, Y
   Bo, LL
   Sun, XB
   Li, B
   Zhang, T
   Tao, CQ
AF Wei, Ying
   Bo, Lili
   Sun, Xiaobing
   Li, Bin
   Zhang, Tao
   Tao, Chuanqi
TI Automated event extraction of CVE descriptions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability events; Event extraction; Vulnerability analysis
ID JOINT ENTITY; CLASSIFICATION; AGREEMENT
AB Context: The dramatically increasing number of vulnerabilities makes manual vulnerability analysis increasingly more difficult. Automatic extraction of vulnerability information can help improve vulnerability analysis. However, the existing vulnerability information extraction methods do not extract from the perspective of events, and the existing event extraction methods do not consider the unique sentence structure characteristics of vulnerability descriptions, which makes it difficult to extract vulnerability information effectively.Objective: To extract vulnerability information, we treat each vulnerability as an event, and propose an approach, VE-Extractor, to automatically perform vulnerability event extraction from textual descriptions in vulnerability reports for vulnerability analysis, including extraction of vulnerability event trigger (cause) and event arguments (e.g., consequence, operation).Method: First, we propose a new labeling method BIOFR (Begin, Inside, Outside, Front, Rear) to construct an event-perspective vulnerability data benchmark. Then, we design a question template based on event trigger, to automatically extract vulnerability event arguments through the BERT Q&A model.Results: Experiments show the effectiveness of VE-Extractor for automatically extracting events from vulnerability description, with significant performance improvement over state-of-the-art techniques, e.g., F1-score is increased by 45.12% and 21.02% in vulnerability consequence and operation extraction, respectively.Conclusion: The proposed VE-Extractor achieves a higher precision and accuracy than the state-of-the-art methods. Experiments results show that our approach is effective in extracting vulnerability event information and can be used to assist vulnerability analysis, such as vulnerability classification.
C1 [Wei, Ying; Bo, Lili; Sun, Xiaobing; Li, Bin] Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
   [Bo, Lili] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Zhang, Tao] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macao Special Adm Reg China, Zhuhai, Peoples R China.
   [Tao, Chuanqi] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Coll Artificial Intelligence, Nanjing, Peoples R China.
C3 Yangzhou University; Nanjing University; Macau University of Science &
   Technology; Nanjing University of Aeronautics & Astronautics
RP Bo, LL; Li, B (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
EM lilibo@yzu.edu.cn; lb@yzu.edu.cn
RI Wei, Ying/HZK-9397-2023; Zhang, Tao/E-5634-2012
OI Zhang, Tao/0000-0002-6272-4069; Sun, Xiaobing/0000-0001-5165-5080
FU National Natural Science Foundation of China [61972335, 61872312,
   62002309]; Six Talent Peaks Project in Jiangsu Province [RJFW-053]; Open
   Funds of State Key Laboratory for Novel Software Technology of Nanjing
   University [KFKT2022B17]; Yangzhou University Interdisciplinary Research
   Foundation for Animal Husbandry Discipline of Targeted Support
   [yzuxk202015]; Yangzhou city-Yangzhou University Science and Technology
   Cooper-ation Fund Project [YZ2021157, YBK202207]; Innovation (science
   and technology) project of Research Base of Nanjing Univer-sity of
   Aeronautics and Astronautics [NJ2020022]; Yangzhou University Top-level
   Talents Support Program
FX This work is supported by the National Natural Science Founda-tion of
   China (No. 61972335, No. 61872312, No. 62002309) ; the Six Talent Peaks
   Project in Jiangsu Province (No. RJFW-053) , the Jiangsu ?333?Project;
   the Open Funds of State Key Laboratory for Novel Software Technology of
   Nanjing University (No. KFKT2022B17) , the Yangzhou University
   Interdisciplinary Research Foundation for Animal Husbandry Discipline of
   Targeted Support (No. yzuxk202015) , the Yangzhou city-Yangzhou
   University Science and Technology Cooper-ation Fund Project (No.
   YZ2021157, No. YBK202207) , the Innovation (science and technology)
   project of Research Base of Nanjing Univer-sity of Aeronautics and
   Astronautics (No. NJ2020022) , and Yangzhou University Top-level Talents
   Support Program (2019) .
CR [Anonymous], 2014, Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   [Anonymous], 2013, ADV NEURAL INF PROCE
   Aota M, 2020, IEEE SYMP COMP COMMU, P26, DOI 10.1109/iscc50000.2020.9219568
   Aung TWW, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111133
   Bingjun He, 2021, 2021 IEEE 21st International Conference on Communication Technology (ICCT), P508, DOI 10.1109/ICCT52962.2021.9657857
   Chen HP, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P6503
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Costa TS, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P3157, DOI 10.1145/3340531.3412760
   Cui SY, 2020, Arxiv, DOI arXiv:2002.10757
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Du X, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P671
   Feng XC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4002
   Gasmi H, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9193945
   Gawron M, 2018, LECT NOTES COMPUT SC, V10694, P3, DOI 10.1007/978-3-319-76687-4_1
   Greff K, 2017, IEEE T NEUR NET LEAR, V28, P2222, DOI 10.1109/TNNLS.2016.2582924
   Guo H, 2020, WWW'20: COMPANION PROCEEDINGS OF THE WEB CONFERENCE 2020, P81, DOI 10.1145/3366424.3382707
   Guo YY, 2021, LECT NOTES COMPUT SC, V12918, P447, DOI 10.1007/978-3-030-86890-1_25
   Han RJ, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P7543
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Hong Y, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P515
   Huang GY, 2019, IEEE ACCESS, V7, P28291, DOI 10.1109/ACCESS.2019.2900462
   Huang ZH, 2015, Arxiv, DOI arXiv:1508.01991
   Jia Y, 2018, ENGINEERING-PRC, V4, P53, DOI 10.1016/j.eng.2018.01.004
   Joshi A, 2013, IEEE INT C SEMANT CO, P252, DOI 10.1109/ICSC.2013.50
   Joulin A, 2016, Arxiv, DOI [arXiv:1607.01759, DOI 10.48550/ARXIV.1607.01759]
   Kudjo PK, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P248, DOI 10.1109/QRS.2019.00041
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li B, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00325-1
   Li LH, 2020, IEEE ACM T COMPUT BI, V17, P599, DOI 10.1109/TCBB.2018.2868078
   Liu J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P1641
   Liu K, 2020, AI OPEN, V1, P22, DOI 10.1016/j.aiopen.2021.02.004
   Lu YJ, 2021, Arxiv, DOI [arXiv:2106.09232, DOI 10.48550/ARXIV.2106.09232]
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Pingle A, 2019, PROCEEDINGS OF THE 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2019), P879, DOI 10.1145/3341161.3343519
   Radford A., 2018, Improving language understanding by generative pre-training
   Ren X, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1015, DOI 10.1145/3038912.3052708
   Satyapanich T, 2020, AAAI CONF ARTIF INTE, V34, P8749
   Sun JM, 2021, Arxiv, DOI [arXiv:2101.01431, DOI 10.48550/ARXIV.2101.01431]
   Triet Huynh Minh Le, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P371, DOI 10.1109/MSR.2019.00063
   Wang XZ, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P5777
   Wei Y, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2376
   Xiang W, 2019, IEEE ACCESS, V7, P173111, DOI 10.1109/ACCESS.2019.2956831
   Xuan JF, 2017, Arxiv, DOI arXiv:1704.04769
   Yang GQ, 2021, COMM COM INF SC, V1482, P55, DOI 10.1007/978-3-030-87839-9_3
   Yang S, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5284
   Yitagesu S, 2021, IEEE WORK CONF MIN S, P29, DOI 10.1109/MSR52588.2021.00016
   Yuan L, 2021, P INT COMP SOFTW APP, P834, DOI 10.1109/COMPSAC51774.2021.00116
   Zheng SC, 2017, NEUROCOMPUTING, V257, P59, DOI 10.1016/j.neucom.2016.12.075
   Zhong ZX, 2021, Arxiv, DOI [arXiv:2010.12812, DOI 10.48550/ARXIV.2010.12812]
   Zhou P, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P207, DOI 10.18653/v1/p16-2034
NR 50
TC 1
Z9 1
U1 9
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107178
DI 10.1016/j.infsof.2023.107178
EA MAR 2023
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A8QJ6
UT WOS:000957705900001
DA 2024-07-18
ER

PT J
AU Börstler, J
   bin Ali, N
   Petersen, K
AF Boerstler, Juergen
   bin Ali, Nauman
   Petersen, Kai
TI Double-counting in software engineering tertiary studies-An overlooked
   threat to validity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bias; Double -counting; Empirical; Guidelines; Meta -review; Overview of
   reviews; Recommendations; Research methods; Review of reviews; Tertiary
   review; Tertiary study; Umbrella review
ID REVIEWS
AB Context: Double-counting in a literature review occurs when the same data, population, or evidence is erroneously counted multiple times during synthesis. Detecting and mitigating the threat of double-counting is particularly challenging in tertiary studies. Although this topic has received much attention in the health sciences, it seems to have been overlooked in software engineering.Objective: We describe issues with double-counting in tertiary studies, investigate the prevalence of the issue in software engineering, and propose ways to identify and address the issue. Method: We analyze 47 tertiary studies in software engineering to investigate in which ways they address double-counting and whether double-counting might be a threat to validity in them.Results: In 19 of the 47 tertiary studies, double-counting might bias their results. Of those 19 tertiary studies, only 5 consider double-counting a threat to their validity, and 7 suggest strategies to address the issue. Overall, only 9 of the 47 tertiary studies, acknowledge double-counting as a potential general threat to validity for tertiary studies.Conclusions: Double-counting is an overlooked issue in tertiary studies in software engineering, and existing design and evaluation guidelines do not address it sufficiently. Therefore, we propose recommendations that may help to identify and mitigate double-counting in tertiary studies.
C1 [Boerstler, Juergen; bin Ali, Nauman; Petersen, Kai] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
   [Petersen, Kai] Univ Appl Sci Flensburg, Flensburg, Germany.
C3 Blekinge Institute Technology
RP Börstler, J (corresponding author), Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
EM jurgen.borstler@bth.se; nauman.ali@bth.se; kai.petersen@bth.se
RI Börstler, Jürgen/IWE-4001-2023; Ali, Nauman bin/J-4293-2015
OI Börstler, Jürgen/0000-0003-0639-4234; Ali, Nauman
   bin/0000-0001-7266-5632
FU ELLIIT; Swedish Government
FX This work has been supported by ELLIIT, the Strategic Research Area
   within IT and Mobile Communications, funded by the Swedish Government.
CR Alfonso F, 2005, REV ESP CARDIOL, V58, P601, DOI 10.1157/13074852
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   Bougioukas KI, 2021, J CLIN EPIDEMIOL, V132, P34, DOI 10.1016/j.jclinepi.2020.12.004
   Costal D., 2021, P 24 IBEROAMERICAN C, P56
   Costal D., 2021, P 15 ACM IEEE INT S, p30:1
   Costal Dolors, 2021, Zenodo, DOI 10.5281/ZENODO.5094807
   Cruz M, 2020, IEEE ACCESS, V8, P26773, DOI 10.1109/ACCESS.2019.2952191
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Gates M, 2020, SYST REV-LONDON, V9, DOI 10.1186/s13643-020-01509-0
   Higgins J, 2021, Cochrane Handbook for Systematic Reviews of Interventions version 6.3
   Tran HKV, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106620
   Khan MU, 2019, J SYST SOFTWARE, V149, P396, DOI 10.1016/j.jss.2018.12.018
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lunny C, 2021, BMC MED RES METHODOL, V21, DOI 10.1186/s12874-021-01269-y
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nurdiani I, 2016, J SYST SOFTWARE, V119, P162, DOI 10.1016/j.jss.2016.06.043
   Pieper D, 2014, J CLIN EPIDEMIOL, V67, P368, DOI 10.1016/j.jclinepi.2013.11.007
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Senn SJ, 2009, BMC MED RES METHODOL, V9, DOI 10.1186/1471-2288-9-10
   Staffs Keele, 2007, Tech. Rep.
   Usman M., 2021, arXiv
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
NR 26
TC 3
Z9 3
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107174
DI 10.1016/j.infsof.2023.107174
EA MAR 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I8ZR6
UT WOS:001005614800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Leger, P
   Cardozo, N
   Masuhara, H
AF Leger, Paul
   Cardozo, Nicolas
   Masuhara, Hidehiko
TI An expressive and modular layer activation mechanism for
   Context-Oriented Programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context -Oriented Programming; Activation mechanisms; EMA
ID LANGUAGE
AB Context. There is a trend in the software industry towards building systems that dynamically adapt their behavior in response to their surrounding environment, given the proliferation of various technological devices, such as notebooks, smartphones, and wearables, capable of capturing their execution context. Context-oriented Programming (COP) allows developers to use layer abstractions to adapt software behavior to the context. A layer is associated with a context and can be dynamically activated in direct response to gathered information from its surrounding execution environment. However, most existing layer activation mechanisms have been tailored specifically to address a particular concern; implying that developers need to tweak layer definitions in contortive ways or create new specialized activation mechanisms altogether if their specific needs are not supported. Objective. Complementing ideas to expressively declare activation mechanism models with interfaces that define conditionals of activation mechanisms modularly, this paper proposes an Expressive and Modular Activation mechanism, named EMA. Method. To propose EMA, we analyze existing activation mechanisms in COP regarding activation features and scope strategies. After, we propose the design of EMA and validate it with a case study discussion. Results. Using a concrete JavaScript implementation of EMA, named EMAjs, we can implement two Web applications: a smartphone application as an example to illustrate EMAjs in action, and an application of home automation to discuss and compare our proposal. Conclusions. Our proposed mechanism allows developers to instantiate different activation scope strategies and interfaces to decouple the declaration of activation mechanism conditionals from the base code.
C1 [Leger, Paul] Univ Catolica Norte, Escuela Ingeniria, Coquimbo, Chile.
   [Cardozo, Nicolas] Univ Andes, Syst & Comp Engn Dept, Bogota, Colombia.
   [Masuhara, Hidehiko] Tokyo Inst Technol, Tokyo, Japan.
C3 Universidad Catolica del Norte; Universidad de los Andes (Colombia);
   Tokyo Institute of Technology
RP Leger, P (corresponding author), Univ Catolica Norte, Escuela Ingeniria, Coquimbo, Chile.
EM pleger@ucn.cl
RI Leger, Paul/Q-6174-2017
OI Leger, Paul/0000-0003-0969-5139; Cardozo, Nicolas/0000-0002-1094-9952
CR Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   Aldrich J, 2005, LECT NOTES COMPUT SC, V3586, P144
   [Anonymous], 2011, A survey of functional reactive programming
   [Anonymous], 2010, 25 S APPL COMPUTING
   [Anonymous], 2013, P INT C ASP OR SOFTW, DOI [DOI 10.1145/2451436, DOI 10.1145/2451436.2451461, 10.1145/2451436.2451461]
   Aotani Tomoyuki, 2014, P 6 INT WORKSHOP CON
   Apache, 2018, RXJS REACT EXT JAVAS
   Appeltauer M, 2010, LECT NOTES COMPUT SC, V6144, P50, DOI 10.1007/978-3-642-14046-4_4
   Appeltauer Malte, 2009, P 1 ACM INT WORKSHOP, P1, DOI DOI 10.1145/1562112.1562118
   Bainomugisha E., 2012, P INT S NEW IDEAS NE
   Bobrow D. G., 1988, SIGPLAN Notices, V23, P1, DOI 10.1145/885631.885632
   Bodden E, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559933
   Cardoso N., 2012, 17th Conference on Emerging Technologies Factory Automation ETFA, P1
   Cardozo N, 2018, P INT WORKSHOP CONTE
   Cardozo N, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106789
   Cardozo N, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P15, DOI 10.1145/2986012.2986016
   Costanza P., 2005, P DYN LANG S DLS 05, P1
   Duhoux B., 2016, P 8 INT WORKSHOP CON, P7
   Elyasaf A, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106504
   EMAjs Website, 2022, JAVASCRIPT LIB EXPR
   Firefox, 2021, FREE OP SOURC WEB BR
   Gonzalez S., 2007, P DYN LANG S, P77
   Gonzalez S., 2008, COLL EPL
   González S, 2011, LECT NOTES COMPUT SC, V6563, P246, DOI 10.1007/978-3-642-19440-5_15
   González S, 2008, J UNIVERS COMPUT SCI, V14, P3307
   Google Chrome, 2022, FREE OP SOURC WEB BR
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   Gybels Kris., 2003, P 2 INT C ASPECT ORI, P60
   Hirschfeld R., 2013, P 5 INT WORKSHOP CON, P1
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Hirschfeld R, 2008, LECT NOTES COMPUT SC, V5235, P396, DOI 10.1007/978-3-540-88643-3_9
   Kamina T., 2011, P 10 INT C ASP OR SO, P253, DOI DOI 10.1145/1960275.1960305
   Kamina T., 2016, LNCS T MODUL COMPOS, V9800, P123
   Kamina T., 2009, INT WORKSHOP CONTEXT, P1
   Kamina T, 2017, PROCEEDINGS OF THE 9TH INTERNATIONAL WORKSHOP ON CONTEXT-ORIENTED PROGRAMMING, P17, DOI 10.1145/3117802.3117805
   Kamishima T., 2013, CEUR Workshop Proceedings, V1050, P1
   Kats LCL, 2010, ACM SIGPLAN NOTICES, V45, P444, DOI 10.1145/1932682.1869497
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kiczales G., 1992, P IMSA 92 WORKSHOP R
   Kühn T, 2014, LECT NOTES COMPUT SC, V8706, P141, DOI 10.1007/978-3-319-11245-9_8
   Leger P., 2020, INT WORKSHOP CONTEXT, P1
   Leger P, 2015, SCI COMPUT PROGRAM, V102, P108, DOI 10.1016/j.scico.2015.02.001
   Leger P, 2013, SCI COMPUT PROGRAM, V78, P1538, DOI 10.1016/j.scico.2012.11.005
   Lincke J, 2011, SCI COMPUT PROGRAM, V76, P1194, DOI 10.1016/j.scico.2010.11.013
   Lowis M., 2007, Proceedings of the 2007 International Conference on Dynamic Languages: In Conjunction with the 15th International Smalltalk Joint Conference, P143, DOI DOI 10.1145/1352678.1352688
   Maingret B., 2015, P 7 INT WORKSHOP CON, P1
   Mens K., 2017, P INT WORKSHOP LIVE
   Meyerovich LA, 2009, ACM SIGPLAN NOTICES, V44, P1, DOI 10.1145/1639949.1640091
   NodeJS, 2021, JAVASCRIPT RUNT BUIL
   Ponge J., 2013, P 2013 INT C PRINCIP, P153
   Ramson S, 2017, PROCEEDINGS OF THE 9TH INTERNATIONAL WORKSHOP ON CONTEXT-ORIENTED PROGRAMMING, P7, DOI 10.1145/3117802.3117804
   Rein P, 2017, IEEE SOFTWARE, V34, P78, DOI 10.1109/MS.2017.4121224
   Salvaneschi G, 2015, SCI COMPUT PROGRAM, V102, P20, DOI 10.1016/j.scico.2014.11.016
   Satyanarayanan M, 2001, IEEE PERS COMMUN, V8, P10, DOI 10.1109/98.943998
   Sawada K, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P36, DOI 10.1145/2892664.2892670
   Steimann F, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767752
   Steinert B., 2010, P 2 INT WORKSHOP CON
   Tanter É, 2009, ACM SIGPLAN NOTICES, V44, P3, DOI 10.1145/1837513.1640137
   Tanter É, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P27
   Tanter Eric, 2008, 7 INT C ASP OR SOFTW, P168, DOI [10.1145/1353482.1353503, DOI 10.1145/1353482.1353503]
   Toledo R., 2010, P 9 ACM INT C ASPECT, P13
   Ungar David, 2014, P 2014 OOPSLA COMP O, P113
   Vallejos J, 2010, LECT NOTES COMPUT SC, V6144, P66, DOI 10.1007/978-3-642-14046-4_5
   Watanabe Takuo, 2018, 10 INT WORKSH CONT O, P23, DOI [DOI 10.1145/3242921, 10.1145/3242921.3242925, DOI 10.1145/3242921.3242925]
NR 65
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107132
DI 10.1016/j.infsof.2022.107132
EA DEC 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7D9AV
UT WOS:000900775800002
DA 2024-07-18
ER

PT J
AU Ferreira, B
   Marques, S
   Kalinowski, M
   Lopes, H
   Barbosa, SDJ
AF Ferreira, Bruna
   Marques, Silvio
   Kalinowski, Marcos
   Lopes, Helio
   Barbosa, Simone D. J.
TI Lessons learned to improve the UX practices in agile projects involving
   data science and process automation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile; User -centered design; Lean inception; User involvement; User
   participation; User experience; Data science
ID PARTICIPATORY DESIGN; SOFTWARE-DEVELOPMENT; USER INVOLVEMENT
AB Context: User-Centered Design (UCD) and Agile methodologies focus on human issues. Nevertheless, agile methodologies focus on contact with contracting customers and generating value for them. Usually, the communication between end users (they use the software and have low decision power) and the agile team is mediated by customers (they have high decision power but do not use the software). However, they do not know the actual problems that end users (may) face in their routine, and they may not be directly affected by software shortcomings. In this context, UX issues are typically identified only after the implementation, during user testing and validation. Objective: Aiming to improve the understanding and definition of the problem in agile projects, this research investigates the practices and difficulties experienced by agile teams during the development of data science and process automation projects. Also, we analyze the benefits and the teams' perceptions regarding user participation in these projects. Method: We collected data from four agile teams, in the context of an academia and industry collaboration focusing on delivering data science and process automation solutions. Therefore, we applied a carefully designed questionnaire answered by developers, scrum masters, and UX designers. In total, 18 subjects answered the questionnaire. Results: From the results, we identify practices used by the teams to define and understand the problem and to represent the solution. The practices most often used are prototypes and meetings with stakeholders. Another practice that helped the team to understand the problem was using Lean Inception (LI) ideation workshops. Also, our results present some specific issues regarding data science projects. Conclusion: We observed that end-user participation can be critical to understanding and defining the problem. They help to define elements of the domain and barriers in the implementation. We identified a need for approaches that facilitate user-team communication in data science projects to understand the data and its value to the users' routine. We also identified insights about the need of more detailed requirements representations to support the development of data science solutions.
C1 [Ferreira, Bruna; Marques, Silvio; Kalinowski, Marcos; Lopes, Helio; Barbosa, Simone D. J.] Pontif Catholic Univ Rio de Janeiro, Dept Informat, Rua Marques de Sao Vicente 225-410, BR-22451900 Rio De Janeiro, RJ, Brazil.
RP Ferreira, B (corresponding author), Pontif Catholic Univ Rio de Janeiro, Dept Informat, Rua Marques de Sao Vicente 225-410, BR-22451900 Rio De Janeiro, RJ, Brazil.
EM bruna@exacta.inf.puc-rio.br
RI Ferreira, Bruna/HZJ-4183-2023
CR Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   Aguiar F., 2020, PRODUCT BACKLOG BUIL
   Almughram O, 2017, 2017 IEEE/ACIS 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P229, DOI 10.1109/SERA.2017.7965732
   Alyahya S, 2020, INTERACT COMPUT, V32, P548, DOI 10.1093/iwc/iwab010
   Bano M, 2018, IEEE SOFTWARE, V35, P8, DOI 10.1109/MS.2018.4321252
   Bano M, 2015, INFORM SOFTWARE TECH, V58, P148, DOI 10.1016/j.infsof.2014.06.011
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Buchan J., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P334, DOI 10.1145/3084226.3084251
   Caroli P., 2018, Lean Inception: Como alinhar pessoas e construir o produto certo, V1
   Duque E, 2019, PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON HUMAN FACTORS IN COMPUTING SYSTEMS (IHC 2019), DOI 10.1145/3357155.3358471
   Ferreira B., 2021, P 20 BRAZILIAN S SOF
   Fowler M., 2001, Software Development, V9, P28
   International Organization for Standardization, 2019, 92412102019 ISO EN
   Kalinowski M, 2020, LECT NOTES COMPUT SC, V12562, P106, DOI 10.1007/978-3-030-64148-1_7
   Kalinowski M, 2020, EUROMICRO CONF PROC, P132, DOI 10.1109/SEAA51224.2020.00030
   Kautz K, 2010, IFIP ADV INF COMM TE, V318, P303
   Kautz K, 2011, INFORM TECHNOL PEOPL, V24, P217, DOI 10.1108/09593841111158356
   KENSING F, 1993, COMMUN ACM, V36, P78, DOI 10.1145/153571.163278
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Law ELC, 2015, INT J HUM-COMPUT INT, V31, P584, DOI 10.1080/10447318.2015.1065693
   Linaker J., 2015, 5366801 LUND U
   Loi D, 2019, DIS '19 COMPANION: COMPANION PUBLICATION OF THE 2019 ACM DESIGNING INTERACTIVE SYSTEMS CONFERENCE, P381, DOI 10.1145/3301019.3320000
   Maxwell J. A., 2005, Qualitative research design: An interactive approach, V2nd
   Ogunyemi AA, 2019, INT J HUM-COMPUT INT, V35, P1461, DOI 10.1080/10447318.2018.1541544
   Rittenbruch M., 2002, PDC 2002. Proceedings of the Participatory Design Conference, P29
   Schön EM, 2020, IEEE ACCESS, V8, P129763, DOI 10.1109/ACCESS.2020.3009101
   Teixeira B, 2021, ICEIS: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P345, DOI 10.5220/0010459803450352
   Wagner Stefan, 2020, Contemporary Empirical Methods in Software Engineering, P93, DOI [DOI 10.1007/978-3-030-32489-6_4, 10.1007/978-3-030-32489-6-4]
   Wohlin C., 2012, Experimentation in Software Engineering
   Yaman S, 2020, INFORM SOFTWARE TECH, V120, DOI 10.1016/j.infsof.2019.106244
   Zaina LAM, 2021, INT J HUM-COMPUT ST, V147, DOI 10.1016/j.ijhcs.2020.102574
   Zowghi Didar, 2015, P 19 INT C EV ASS SO, V9, P1
NR 32
TC 4
Z9 4
U1 1
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107106
DI 10.1016/j.infsof.2022.107106
EA NOV 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, YH
   Xu, DQ
   Chen, NJ
   Wu, X
AF Chen, Yuhua
   Xu, Dongqi
   Chen, Ningjiang
   Wu, Xu
TI FRL-MFPG: Propagation-aware fault root cause location for microservice
   intelligent operation and maintenance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Microservice; Fault root cause location; Fault propagation; Artificial
   intelligence for IT operations; Container
ID PERFORMANCE DIAGNOSIS; CAUSALITY; SYSTEMS
AB Context: Due to the continuous updates and complex dependencies of microservices, the probability of a fault occurrence and the difficulty of doing a diagnosis have increased, making it hard for operation and maintenance staff to quickly and accurately troubleshoot a fault and locate its root cause.Objective: To fulfill the requirements of artificial intelligence for IT operations, called AIOps, this paper studies microservice fault root cause location technology from two aspects, microservice fault propagation relationships and fault root cause location.Method: First, this paper designs a microservice fault propagation graph construction method MFPG-FC based on fault correlation. The method effectively depicts the propagation relationship and the scope of influence of microservice faults and improves the accuracy of locating a fault's root cause. Second, in terms of fault root cause location, this paper proposes a microservice fault root cause location algorithm based on a microservice fault propagation relationship graph called FRL-MFPG. The FRL-MFPG algorithm is designed to improve the globalization, flexibility and accuracy of the fault location search range and rate. Finally, an AIOps-oriented microservice fault root cause location framework (AIOps-MFRL) is designed.Results: The experimental results show that, compared with the traditional method, the method proposed in this paper is more accurate and can locate the root cause of a fault more accurately. After detecting the fault of microservices, it can achieve the goal of locating the root cause of the fault, which is helpful to improve the efficiency of intelligent operation and maintenance.Conclusion: The method in this paper can effectively locate the root cause of a fault and identify the root cause indicators of the fault after the fault is detected in the microservice. It has better timeliness and accuracy, reduces troubleshooting time and the losses caused by faults, and improves operation and maintenance efficiency.
C1 [Chen, Yuhua; Xu, Dongqi; Chen, Ningjiang; Wu, Xu] Guangxi Univ, Sch Comp & Elect Informat, Nanning 530004, Guangxi, Peoples R China.
   [Chen, Ningjiang] Guangxi Intelligent Digital Serv Res Ctr Engn Tech, Nanning 530004, Guangxi, Peoples R China.
   [Chen, Ningjiang; Wu, Xu] Key Lab Parallel & Distributed Comp, Guangxi Coll & Univ, Nanning 530004, Guangxi, Peoples R China.
C3 Guangxi University
RP Chen, NJ (corresponding author), Guangxi Univ, Sch Comp & Elect Informat, Nanning 530004, Guangxi, Peoples R China.
EM chnj@gxu.edu.cn
RI wang, liangyu/KHD-1769-2024; Li, Kunpeng/KFS-6306-2024; Xu,
   Dongqi/KJM-1482-2024
FU National Key Research and Develop-ment Project of China; Natural Science
   Foundation of China;  [2018YFB1404404];  [62162003];  [61762008]; 
   [62062006]
FX Acknowledgments This work is supported by the National Key Research and
   Develop-ment Project of China (No. 2018YFB1404404) , and the Natural
   Science Foundation of China (No. 62162003, No. 61762008, No. 62062006) .
CR Alibaba Open Source, FAULT DAT
   Brandón A, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110432
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Chen PF, 2014, IEEE INFOCOM SER, P1887, DOI 10.1109/INFOCOM.2014.6848128
   Dirk M, 2014, LINUX J, V2014
   Gan Y, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P19, DOI 10.1145/3297858.3304004
   Guo XF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1387, DOI 10.1145/3368089.3417066
   Liu DW, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P338, DOI 10.1109/ICSE-SEIP52600.2021.00043
   Liu P, 2020, PROC INT SYMP SOFTW, P48, DOI 10.1109/ISSRE5003.2020.00014
   Ma M, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P246, DOI 10.1145/3366423.3380111
   Ma M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P60, DOI [10.1109/1CWS.2019.00022, 10.1109/ICWS.2019.00022]
   Marwede N, 2009, EUR CON SFTWR MTNCE, P47, DOI 10.1109/CSMR.2009.15
   Meng L, 2021, FUTURE GENER COMP SY, V116, P291, DOI 10.1016/j.future.2020.10.040
   Meng Y, 2020, 2020 IEEE/ACM 28TH INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS), DOI 10.1109/iwqos49365.2020.9213058
   Mi HB, 2013, IEEE T PARALL DISTR, V24, P1245, DOI 10.1109/TPDS.2013.21
   Myunghwan Kim, 2013, Performance Evaluation Review, V41, P93
   Qiu HD, 2012, IEEE DATA MINING, P1074, DOI 10.1109/ICDM.2012.73
   Qiu J, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10062166
   Samanta A, 2020, IEEE INTERNET THINGS, V7, P6164, DOI 10.1109/JIOT.2020.2981958
   Samir A, 2019, 2019 7TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD 2019), P205, DOI 10.1109/FiCloud.2019.00036
   Thalheim J, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL MIDDLEWARE CONFERENCE (MIDDLEWARE'17), P14, DOI 10.1145/3135974.3135977
   Vayghan LA, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110924
   Vayghan LA, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P970, DOI 10.1109/CLOUD.2018.00148
   Wang P, 2018, 2018 18TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND GRID COMPUTING (CCGRID), P492, DOI 10.1109/CCGRID.2018.00076
   Wang T, 2020, IEEE T NETW SERV MAN, V17, P2350, DOI 10.1109/TNSM.2020.3022028
   Wu L, 2021, LECT NOTES COMPUT SC, V12632, P85, DOI 10.1007/978-3-030-76352-7_13
   Wu L, 2020, IEEE IFIP NETW OPER, DOI 10.1109/noms47738.2020.9110353
   Wu L, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON CLOUD INTELLIGENCE (CLOUDINTELLIGENCE 2021), P31, DOI 10.1109/CloudIntelligence52565.2021.00015
   Zhang H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P51, DOI 10.1109/ICSA.2019.00014
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
NR 31
TC 4
Z9 4
U1 4
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107083
DI 10.1016/j.infsof.2022.107083
EA OCT 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5W0BW
UT WOS:000877588300003
OA Bronze
DA 2024-07-18
ER

PT J
AU Asikainen, T
   Männistö, T
AF Asikainen, Timo
   Mannisto, Tomi
TI Undulate: A framework for data-driven software engineering enabling soft
   computing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Soft computing; Multilevel modelling; Dimensional database; Continuous
   experimentation; Data-driven software engineering
ID CONTINUOUS EXPERIMENTATION; MODEL
AB Context. Especially web-facing software systems enable the collection of usage data at a massive scale. At the same time, the scale and scope of software processes have grown substantively. Automated tools are needed to increase the speed and quality of controlling software processes. The usage data has great potential as a driver for software processes. However, research still lacks constructs for collecting, refining and utilising usage data in controlling software processes.Objective. The objective of this paper is to introduce a framework for data-driven software engineering. The UNDULATE framework covers generating, collecting and utilising usage data from software processes and business processes supported by the software produced. In addition, we define the concepts and process of extreme continuous experimentation as an exemplar of a software engineering process.Method. We derive requirements for the framework from the research literature, with a focus on papers inspired by practical problems. In addition, we apply a multilevel modelling language to describe the concepts related to extreme continuous experimentation.Results. We introduce the UNDULATE framework and give requirements and provide an overview of the processes of collecting usage data, augmenting it with additional dimensional data, aggregating the data along the dimensions and computing different metrics based on the data and other metrics.Conclusions. The paper represents significant steps inspired by previous research and practical insight towards standardised processes for data-driven software engineering, enabling the application of soft computing and other methods based on artificial intelligence.
C1 [Asikainen, Timo; Mannisto, Tomi] Univ Helsinki, Dept Comp Sci, Helsinki, Finland.
C3 University of Helsinki
RP Asikainen, T (corresponding author), Univ Helsinki, Dept Comp Sci, Helsinki, Finland.
EM timo.o.asikainen@helsinki.fi; tomi.mannisto@helsinki.fi
RI Männistö, Tomi/ABC-7781-2021
OI Männistö, Tomi/0000-0001-7470-5183
FU Academy of Finland [317657]; Academy of Finland (AKA) [317657] Funding
   Source: Academy of Finland (AKA)
FX Acknowledgements The work was supported by the Academy of Finland
   (project 317657) .
CR Ahlgren J, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P1, DOI 10.1145/3463274.3463275
   Ahlgren John, 2020, GI ICSE 2020, P276, DOI [DOI 10.1145/3387940.3392089, 10.1145/3387940, DOI 10.1145/3387940]
   Ahlgren K., 2021, P INT WORKSHOP REALI
   [Anonymous], 2005, Building the Data Warehouse
   Asikainen T, 2009, SOFTW SYST MODEL, V8, P521, DOI 10.1007/s10270-008-0103-2
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Auer F, 2021, LECT NOTES COMPUT SC, V12607, P445, DOI 10.1007/978-3-030-67731-2_33
   Auer F, 2020, EUROMICRO CONF PROC, P186, DOI 10.1109/SEAA51224.2020.00041
   Bernstein D, 2014, IEEE CLOUD COMPUT, V1, P81, DOI 10.1109/MCC.2014.51
   Burns B, 2016, COMMUN ACM, V59, P50, DOI 10.1145/2890784
   Dmitriev P, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1427, DOI 10.1145/3097983.3098024
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Fagerholm Fabian, 2014, P 1 INT WORKSH RAP C, P26, DOI DOI 10.1145/2593812.2593816
   Figalist I, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111135
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Franch X, 2018, LECT NOTES COMPUT SC, V10816, P587, DOI 10.1007/978-3-319-91563-0_36
   Henriksson A, 2022, SOFTW SYST MODEL, V21, P1389, DOI 10.1007/s10270-021-00926-6
   Li WB, 2019, 2019 13TH IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE) / 10TH INTERNATIONAL WORKSHOP ON JOINT CLOUD COMPUTING (JCC) / IEEE INTERNATIONAL WORKSHOP ON CLOUD COMPUTING IN ROBOTIC SYSTEMS (CCRS), P122, DOI 10.1109/SOSE.2019.00026
   Mattos DI, 2018, LECT NOTES COMPUT SC, V11271, P182, DOI 10.1007/978-3-030-03673-7_14
   Mattos DI, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P256, DOI 10.1109/SEAA.2017.15
   Olsson H.H., 2014, Continuous Software Engineering, V9783319112, P1
   Olsson HH, 2019, LECT NOTES COMPUT SC, V11915, P515, DOI 10.1007/978-3-030-35333-9_36
   Olsson HH, 2015, LECT NOTES BUS INF P, V210, P154, DOI 10.1007/978-3-319-19593-3_13
   Patil DJ., 2011, Building data science teams
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schermann G, 2016, MIDDLEWARE '16: PROCEEDINGS OF THE 17TH INTERNATIONAL MIDDLEWARE CONFERENCE, DOI 10.1145/2988336.2988348
   Schermann G, 2018, IEEE SOFTWARE, V35, P26, DOI 10.1109/MS.2018.111094748
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Sommerville I., 2010, SOFTWARE ENG
   Torre D, 2020, Arxiv, DOI arXiv:2007.12046
   Wohlin C., 2012, Experimentation in Software Engineering
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
NR 32
TC 3
Z9 3
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107039
DI 10.1016/j.infsof.2022.107039
EA AUG 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4E9SM
UT WOS:000848158300007
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Song, J
   Kang, J
   Hyun, S
   Jee, E
   Bae, DH
AF Song, Jiyoung
   Kang, Jeehoon
   Hyun, Sangwon
   Jee, Eunkyoung
   Bae, Doo-Hwan
TI Continuous verification of system of systems with collaborative MAPE-K
   pattern and probability model slicing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE System-of-systems; Continuous verification; MAPE-K pattern; Model
   slicing
ID CHECKING
AB The phenomenon of cooperation among independent systems to achieve common goals has been growing. In this regard, the concept of system of systems (SoS), wherein numerous independent systems cooperate with each other, has been proposed. The key characteristic of an SoS is the operational and managerial (O/M) independence of each constituent system (CS). Each CS of a collaborative SoS with high O/M independence provides different levels of internal-knowledge sharing and is entitled to voluntary participation in the SoS (i.e., dynamic reconfiguration). To increase goal-achievement rate, we need to verify SoS considering the knowledge-sharing and dynamic reconfiguration constraints. The dynamic reconfiguration of SoSs can be managed using continuous verification, which involves environment monitoring, modeling systems for operation in changing environments, and verifying the model runtimes. However, O/M independence introduces the following challenges: (1) the low knowledge sharing level causes inaccurate modeling, which leads to inaccurate verification results, and (2) dynamic reconfiguration requires frequent re-verification at runtime, which incurs high verification costs. In this paper, we propose a continuous-verification-of-SoS (CVSoS) approach to solve these two challenges. To address the low knowledge-sharing level, we propose the collaborative MAPE-K pattern. The key to collaborative MAPE-K is the retrieval of knowledge from the other collaborating CSs. To address dynamic reconfiguration, we propose a new slicing algorithm for SoS models. This algorithm promotes synchronization dependence, which is essential for representing interactions between CSs. Furthermore, we demonstrate the accuracy of this algorithm. We evaluated CVSoS across multiple SoS domains, which revealed that the SoS goal-achievement rate increases by up to 64% using the collaborative MAPE-K pattern and that slicing the benchmark and SoS models improved the verification time by an average of 67%.
C1 [Song, Jiyoung; Kang, Jeehoon; Hyun, Sangwon; Jee, Eunkyoung; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol KAIST, 291 Daehak Ro, Daejeon 34141, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Song, J (corresponding author), Korea Adv Inst Sci & Technol KAIST, 291 Daehak Ro, Daejeon 34141, South Korea.
EM jysong@se.kaist.ac.kr
OI Song, Jiyoung/0000-0003-2007-3701; Kang, Jeehoon/0000-0002-2115-0871
FU MSIT (Ministry of Science and ICT) , Korea, under the ITRC (Information
   Technology Research Center) support program [IITP-2022-2020-0-01795,
   2015-0-00250]; Basic Science Research Program through the National
   Research Foundation of Korea (NRF) - Ministry of Education
   [NRF-2019R1I1A1A01062946]
FX Acknowledgments This research was supported by the MSIT (Ministry of
   Science and ICT) , Korea, under the ITRC (Information Technology
   Research Center) support program (IITP-2022-2020-0-01795) , (No.
   2015-0-00250, (SW Star Lab) Software R&D for Model-based Analysis and
   Verification of Higher-order Large Complex System) supervised by the
   IITP (Institute of Information & Communications Technology Planning &
   Evaluation) , and Basic Science Research Program through the National
   Research Foundation of Korea (NRF) funded by the Ministry of Education
   (NRF-2019R1I1A1A01062946) .
CR Abusnaina AAA, 2009, 2009 IEEE 9TH MALAYSIA INTERNATIONAL CONFERENCE ON COMMUNICATIONS (MICC), P754, DOI 10.1109/MICC.2009.5431395
   Alur R, 1999, FORM METHOD SYST DES, V15, P7, DOI 10.1023/A:1008739929481
   Ammar M, 2013, PROCEDIA COMPUT SCI, V19, P273, DOI 10.1016/j.procs.2013.06.039
   [Anonymous], 2012, ARXIV PREPRINT ARXIV
   [Anonymous], 1976, Algorithms and Complexity: New Directions and Recent Results
   Ballarini P, 2015, PERFORM EVALUATION, V90, P53, DOI 10.1016/j.peva.2015.04.003
   Baouya A., 2015, INT C INT SOFTW METH, P425
   Bellinger G., 2004, Data, information, knowledge, and wisdom
   Boyer Benoit, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P160, DOI 10.1007/978-3-642-40196-1_12
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   Cheng SW, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P132, DOI 10.1109/SEAMS.2009.5069082
   Cimitile A, 1996, J SOFTW MAINT-RES PR, V8, P145, DOI 10.1002/(SICI)1096-908X(199605)8:3<145::AID-SMR127>3.0.CO;2-9
   Clarke E. M., 2018, MODEL CHECKING
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Courcoubetis C., 1988, 29th Annual Symposium on Foundations of Computer Science (IEEE Cat. No.88CH2652-6), P338, DOI 10.1109/SFCS.1988.21950
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   DArgenio PR, 2001, LNCS, V2165, P39, DOI DOI 10.1007/3-540-44804-7
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Gambi A, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P10, DOI 10.1109/SEAMS.2009.5069069
   Georgiadis I., 2002, P 1 WORKSHOP SELF HE, P33, DOI DOI 10.1145/582128.582135.
   Ghezzi Carlo, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P3, DOI 10.1109/SEFM.2010.8
   Ghezzi Carlo, 2013, Software Engineering for Self-Adaptive Systems II, P191
   Gold NE, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P547, DOI 10.1145/3106237.3106304
   Goodman Noah D., 2012, ARXIV PREPRINT ARXIV
   Hamad G.B., 2017, 2017 1 INT C EMB DIS, P1
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hur CK, 2014, ACM SIGPLAN NOTICES, V49, P133, DOI [10.1145/2666356.2594303, 10.1145/2594291.2594303]
   Hyun S, 2019, ASIA PAC SOFWR ENG, P212, DOI 10.1109/APSEC48747.2019.00037
   Jin MY, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1698, DOI 10.1145/3167132.3167426
   Kephart J., 2003, IBM White paper, P2
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Klingberg T., 2002, Gnutella protocol specification
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M., 2012, The PRISM benchmark suite
   Kwiatkowska M, 2006, INT CONF QUANT EVAL, P157
   Lawson S, IDG NEWS SERV
   Legay A, 2016, LECT NOTES COMPUT SC, V9952, P77, DOI 10.1007/978-3-319-47166-2_6
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Li L, 2011, C IND ELECT APPL, P789, DOI 10.1109/ICIEA.2011.5975693
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Mignogna A, 2013, ELECTRON P THEOR COM, P67, DOI 10.4204/EPTCS.133.7
   Minka T., 2009, INFERNET 23
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Park S, 2019, 2019 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 13TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS (SESOS-WDES 2019), P2, DOI 10.1109/SESoS/WDES.2019.00009
   PNUELI A, 1993, INFORM COMPUT, V103, P1, DOI 10.1006/inco.1993.1012
   Seo D, 2016, 2016 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS), P12, DOI [10.1109/SESoS.2016.011, 10.1145/2897829.2897833]
   Song J, 2019, 2019 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 13TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS (SESOS-WDES 2019), P18, DOI 10.1109/SESoS/WDES.2019.00011
   Stevens M, 2017, LECT NOTES COMPUT SC, V10401, P570, DOI 10.1007/978-3-319-63688-7_19
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Valmari A., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P429
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Weisstein E. W., 2003, Gershgorin circle theorem
   Yang Wenhua., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P199
   Yuanjian Xing, 2011, 2011 International Conference on Parallel Processing, P783, DOI 10.1109/ICPP.2011.10
   Ziegeldorf JH, 2014, SECUR COMMUN NETW, V7, P2728, DOI 10.1002/sec.795
NR 57
TC 0
Z9 0
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106904
DI 10.1016/j.infsof.2022.106904
EA MAR 2022
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0V1OR
UT WOS:000788115100002
DA 2024-07-18
ER

PT J
AU AlDhafer, O
   Ahmad, I
   Mahmood, S
AF AlDhafer, Osamah
   Ahmad, Irfan
   Mahmood, Sajjad
TI An end-to-end deep learning system for requirements classification using
   recurrent neural networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automated software engineering; Software requirement classification;
   Recurrent neural network; Bidirectional gated recurrent unit network;
   Deep learning
ID NONFUNCTIONAL REQUIREMENTS
AB Context: Existing requirements classification approaches mainly use lexical and syntactical features to classify requirements using both traditional machine learning and deep learning approaches with promising results. However, the existing techniques depend on word and sentence structures and employ preprocessing and feature engineering techniques to classify requirements from textual natural language documents. Moreover, existing studies deal with requirements classification as binary or multiclass classification problems and not as multilabel classification, although a given requirement can belong to multiple classes at the same time.
   Objective: The objective of this study is to classify requirements into functional and different non-functional types with minimal preprocessing and to model the task as a multilabel classification problem.
   Method: In this paper, we use Bidirectional Gated Recurrent Neural Networks (BiGRU) to classify requirements using raw text. We investigated two different approaches: (i) using word sequences as tokens and (ii) using character sequences as tokens.
   Results: Experiments conducted on the publicly available PROMISE and EHR datasets show the effectiveness of the presented techniques. We achieve state-of-the-art results on most of the tasks using word sequences as tokens.
   Conclusion: Requirements can be effectively classified into functional and different non-functional categories using the presented recurrent neural networks-based deep learning system, which involves minimal text prepossessing and no feature engineering.
C1 King Fahd Univ Petr & Minerals, Dept Comp Sci, Dhahran, Saudi Arabia.
   King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; King Fahd University of
   Petroleum & Minerals
RP Ahmad, I (corresponding author), KFUPM, POB 303, Dhahran 31261, Saudi Arabia.
EM irfan.ahmad@kfupm.edu.sa
RI Ahmad, Irfan/D-7254-2015; Mahmood, Sajjad/B-2295-2010
OI Ahmad, Irfan/0000-0001-8311-1731; Mahmood, Sajjad/0000-0001-5786-5118
FU King Fahd University of Petroleum and Minerals (KFUPM);
   Interdisciplinary Research Center for Intelligent Secure Systems, KFUPM,
   (IRC-ISS, KFUPM) [INSS2104]
FX The authors would like to thank King Fahd University of Petroleum and
   Minerals (KFUPM) for supporting this work. This work was funded by
   Interdisciplinary Research Center for Intelligent Secure Systems, KFUPM,
   (IRC-ISS, KFUPM) through grant no: INSS2104.
CR Abad ZSH, 2017, INT REQUIR ENG CONF, P496, DOI 10.1109/RE.2017.36
   Alhindawi NT, 2018, 2018 5TH INTERNATIONAL CONFERENCE ON MATHEMATICS AND COMPUTERS IN SCIENCES AND INDUSTRY (MCSI 2018), P147, DOI 10.1109/MCSI.2018.00042
   Amasaki S, 2018, EUROMICRO CONF PROC, P175, DOI 10.1109/SEAA.2018.00036
   Baker C, 2019, P INT COMP SOFTW APP, P610, DOI 10.1109/COMPSAC.2019.10275
   Binkhonain M., 2019, EXPERT SYSTEMS APPL, V1, DOI DOI 10.1016/J.ESWAX.2019.100001
   Chakrabarty A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1481, DOI 10.18653/v1/P17-1136
   Cho KYHY, 2014, Arxiv, DOI arXiv:1409.1259
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Dalpiaz F, 2019, INT REQUIR ENG CONF, P142, DOI 10.1109/RE.2019.00025
   Dekhtyar A, 2017, INT REQUIR ENG CONF, P484, DOI 10.1109/RE.2017.26
   Fong V., 2018, Software Requirements Classification Using Word Embeddings and Convolutional Neural Networks
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Hiraoka T, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P1620
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hussain I, 2008, LECT NOTES COMPUT SC, V5039, P287
   Kingma D. P., 2014, arXiv
   Kudo T, 2018, Arxiv, DOI [arXiv:1808.06226, 10.48550/arXiv.1808.06226]
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   Li FL, 2014, INT REQUIR ENG CONF, P293, DOI 10.1109/RE.2014.6912271
   Liu B, 2020, INT J MACH LEARN CYB, V11, P1939, DOI 10.1007/s13042-020-01084-9
   Navarro-Almanza R, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P116, DOI 10.1109/CONISOFT.2017.00021
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Rahman MA, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P25, DOI 10.1145/3340482.3342745
   Ramadhani DA, 2015, TELKOMNIKA TELECOMMU, V13, P1456, DOI DOI 10.12928/TELKOMNIKA.V13I4.2300
   Rashwan A, 2013, P INT COMP SOFTW APP, P381, DOI 10.1109/COMPSAC.2013.64
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Sagar VBRV, 2014, J SYST SOFTWARE, V88, P25, DOI 10.1016/j.jss.2013.08.036
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Singh P, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P620, DOI 10.1109/ICACCI.2016.7732115
   Slankas J, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE ANALYSIS IN SOFTWARE ENGINEERING (NATURALISE), P9, DOI 10.1109/NAturaLiSE.2013.6611715
   Tomas M., 2013, arXiv, DOI DOI 10.48550/ARXIV.1310.4546
   Tsoumakas G, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P667, DOI 10.1007/978-0-387-09823-4_34
   Vu NT, 2016, Arxiv, DOI arXiv:1605.07333
   Winkler J, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P39, DOI [10.1109/REW.2016.16, 10.1109/REW.2016.021]
   Younas M, 2019, INT J ADV COMPUT SC, V10, P539
   Zhou P, 2016, Arxiv, DOI [arXiv:1611.06639, 10.48550/arXiv.1611.06639]
NR 37
TC 8
Z9 8
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106877
DI 10.1016/j.infsof.2022.106877
EA MAR 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700004
DA 2024-07-18
ER

PT J
AU Besker, T
   Martini, A
   Bosch, J
AF Besker, Terese
   Martini, Antonio
   Bosch, Jan
TI The use of incentives to promote technical debt management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Software development; Software incentive programs;
   Empirical study
ID WORK
AB Context: When developing software, it is vitally important to keep the level of technical debt down since, based on several studies, it has been well established that technical debt can lower the development productivity, decrease the developers' morale and compromise the overall quality of the software, among others. However, even if researchers and practitioners working in today's software development industry are quite familiar with the concept of technical debt and its related negative consequences, there has been no empirical research focusing specifically on how software managers actively communicate and manage the need to keep the level of technical debt as low as possible. Objective: This study aims to understand how software companies give incentives to manage technical debt. This is carried out by exploring how companies encourage and reward practitioners for actively keeping the level of technical debt down add whether the companies use any forcing or penalising initiatives when managing technical debt. Method: As a first step, this paper reports the results of both an online survey providing quantitative data from 258 participants and interviews with 32 software practitioners. As a second step, this study sets out to specifically provide a detailed assessment of additional and in-depth analysis of technical debt management strategies based on an encouraging mindset and attitude from both managers and technical roles to understand how, when and by whom such strategies are adopted in practice. Results: Our findings show that having a technical debt management strategy (specially based on encouragement) can significantly impact the amount of technical debt related to the software. Conclusion: The result indicates that there is considerable unfulfilled potential to influence how software practitioners can further limit and reduce technical debt by adopting a strategy based explicitly on an encouraging mindset from managers where they also specifically dedicate time and resources for technical debt remediation activities.
C1 [Besker, Terese] RISE Res Inst Sweden AB, Gothenburg, Sweden.
   [Martini, Antonio] Univ Oslo, Programming & Software Engn, Oslo, Norway.
   [Bosch, Jan] Chalmers Univ Technol, Comp Sci & Engn Software Engn, Gothenburg, Sweden.
C3 RISE Research Institutes of Sweden; University of Oslo; Chalmers
   University of Technology
RP Besker, T (corresponding author), RISE Res Inst Sweden AB, Gothenburg, Sweden.
EM Terese.Besker@ri.se; antonima@ifi.uio.no; Jan.Bosch@chalmers.se
OI Besker, Terese/0000-0002-9811-000X
CR [Anonymous], 2005, Designing Surveys: A Guide to Decisions and Procedures
   Ayala RA, 2018, NURS INQ, V25, DOI 10.1111/nin.12264
   Bala S, 2018, LECT NOTES BUS INF P, V319, P432, DOI 10.1007/978-3-319-94214-8_34
   Bateman MJ, 2003, J ORGAN BEHAV MANAGE, V23, P33, DOI 10.1300/J075v23n01_03
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Besker T, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P21, DOI 10.1145/3387906.3388619
   Besker T, 2019, EUROMICRO CONF PROC, P74, DOI 10.1109/SEAA.2019.00020
   Besker T, 2019, J SYST SOFTWARE, V156, P41, DOI 10.1016/j.jss.2019.06.004
   Besker T, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P13, DOI 10.1109/TechDebt.2019.00010
   Besker T, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P105, DOI 10.1145/3194164.3194178
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Besker Terese, 2017, CIbSE, P235
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Chughtai AA, 2013, J MANAGE PSYCHOL, V28, P606, DOI 10.1108/JMP-09-2011-0050
   Cunningham W., 1993, OOPS Messenger, V4, P29
   de Rada VD, 2013, REV INT SOCIOL, V71, P229
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fagerholm F, 2015, INFORM SOFTWARE TECH, V64, P132, DOI 10.1016/j.infsof.2015.01.010
   Franca A. Cesar C., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P154, DOI 10.1049/ic.2011.0019
   Freire S, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1548, DOI 10.1145/3341105.3373912
   Soares FSF, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P93, DOI 10.1109/ICSEA.2009.23
   Ghanbari H, 2017, INT SYMP EMP SOFTWAR, P384, DOI 10.1109/ESEM.2017.53
   Gneezy U, 2011, J ECON PERSPECT, V25, P191, DOI 10.1257/jep.25.4.191
   Heiberger RM, 2014, J STAT SOFTW, V57
   Hulland J., 2020, AMS REV, V10, P27, DOI DOI 10.1007/S13162-020-00168-7
   Indratmo, 2018, VIS INFORM, V2, P155, DOI 10.1016/j.visinf.2018.09.002
   Karahanna E, 2005, J GLOB INF MANAG, V13, P1, DOI 10.4018/jgim.2005040101
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Krueger R.A., 2009, FOCUS GROUPS, V4th
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Milne Patricia, 2007, Journal of Knowledge Management, V11, P28, DOI 10.1108/13673270710832145
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Ramus CA, 2002, J WORLD BUS, V37, P151, DOI 10.1016/S1090-9516(02)00074-3
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Snipes W, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1277, DOI 10.1109/ICSE.2013.6606697
   Streit M, 2014, NAT METHODS, V11, P117, DOI 10.1038/nmeth.2807
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Vaismoradi M, 2013, NURS HEALTH SCI, V15, P398, DOI 10.1111/nhs.12048
   Yi Wang, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P39, DOI 10.1145/1810295.1810302
NR 43
TC 4
Z9 4
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106740
DI 10.1016/j.infsof.2021.106740
EA OCT 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WN5QL
UT WOS:000711821900007
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Irshad, M
   Börstler, J
   Petersen, K
AF Irshad, Mohsin
   Borstler, Jurgen
   Petersen, Kai
TI Supporting refactoring of BDD specifications-An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring; Normalized Compression Distance (NCD); Normalized
   Compression Similarity (NCS); Reuse; Similarity ratio (SR); BDD;
   Behavior-driven development; Specifications; Testing
ID DISTANCE
AB Context: Behavior-driven development (BDD) is a variant of test-driven development where specifications are described in a structured domain-specific natural language. Although refactoring is a crucial activity of BDD, little research is available on the topic. Objective: To support practitioners in refactoring BDD specifications by (1) proposing semi-automated approaches to identify refactoring candidates; (2) defining refactoring techniques for BDD specifications; and (3) evaluating the proposed identification approaches in an industry context. Method: Using Action Research, we have developed an approach for identifying refactoring candidates in BDD specifications based on two measures of similarity and applied the approach in two projects of a large software organization. The accuracy of the measures for identifying refactoring candidates was then evaluated against an approach based on machine learning and a manual approach based on practitioner perception. Results: We proposed two measures of similarity to support the identification of refactoring candidates in a BDD specification base; (1) normalized compression similarity (NCS) and (2) similarity ratio (SR). A semiautomated approach based on NCS and SR was developed and applied to two industrial cases to identify refactoring candidates. Our results show that our approach can identify candidates for refactoring 6o times faster than a manual approach. Our results furthermore showed that our measures accurately identified refactoring candidates compared with a manual identification by software practitioners and outperformed an ML-based text classification approach. We also described four types of refactoring techniques applicable to BDD specifications; merging candidates, restructuring candidates, deleting duplicates, and renaming specification titles. Conclusion: Our results show that NCS and SR can help practitioners in accurately identifying BDD specifications that are suitable candidates for refactoring, which also decreases the time for identifying refactoring candidates.
C1 [Irshad, Mohsin; Borstler, Jurgen; Petersen, Kai] Blekinge Inst Technol, Karlskrona, Sweden.
   [Irshad, Mohsin] Ericsson AB, Karlskrona, Sweden.
C3 Blekinge Institute Technology; Ericsson
RP Irshad, M (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM mohsin.irshad@bth.se
RI Börstler, Jürgen/IWE-4001-2023
OI Börstler, Jürgen/0000-0003-0639-4234
CR Abebe Mesfin., 2014, INT J SOFTWARE ENG I, V8, P299, DOI [10.14257/ijseia.2014.8.6.24, DOI 10.14257/IJSEIA.2014.8.6.24]
   Abid C., 2020, arXiv preprint arXiv, p2007.02194
   [Anonymous], 2020, ACCEPTANCE TESTING B
   [Anonymous], 2015, DIGIT PRESENT PRESER
   [Anonymous], 2018, REFACTORING IMPROVIN
   Antón AI, 2003, IEEE SOFTWARE, V20, P44, DOI 10.1109/MS.2003.1196319
   Bang K, 2017, LECT NOTES COMPUT SC, V10516, P169, DOI 10.1007/978-3-319-68059-0_11
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Binamungu LP, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P175, DOI 10.1109/SANER.2018.8330207
   Borg R., 2011, PROC 4 WORKSHOP REFA, P15
   Bruschi S., 2020, P PAC NW SOFTW QUAL, P1
   Bures M, 2018, INT J SOFTW ENG KNOW, V28, P3, DOI 10.1142/S0218194018500018
   Caballero RE, 2002, LECT NOTES COMPUT SC, V2319, P293
   Choi S.-S., 2010, Systemics, Cybernetics and Informatic, V8, P43
   Corrales J.-C., 2008, THESIS U VERSAILLES
   Cruz D.R., 2018, P 7 MEXICAN C HUMAN, P1, DOI 10.1109/GEM.2018.8516272
   Egbreghts A., 2017, 27 20 STUD C IT 2017
   Erb S., 2010, THESIS BADEN WURTTEM
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   George K Soumya, 2014, IOSR J. Comput. Eng, V16, P1, DOI DOI 10.9790/0661-16153438
   GIRARDI MR, 1994, SEKE '94 - THE 6TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, P478
   Hemmati H, 2010, LECT NOTES COMPUT SC, V6435, P63, DOI 10.1007/978-3-642-16573-3_6
   Irshad M., 2020, DATA PAPER
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Lai ST, 2014, 2014 NINTH INTERNATIONAL CONFERENCE ON BROADBAND AND WIRELESS COMPUTING, COMMUNICATION AND APPLICATIONS (BWCCA), P292, DOI 10.1109/BWCCA.2014.78
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Mealy E., 2006, 2006 Australian Software Engineering Conference
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moe M.M., 2019, INT J TREND SCI RES, V3, P231, DOI DOI 10.31142/IJTSRD23698
   Mugridge R., 2005, FIT DEV SOFTWARE FRA
   Nielsen PA, 2010, J SOFTW MAINT EVOL-R, V22, P33, DOI 10.1002/smr.452
   North D., 2020, WHATS STORY
   North D., 2006, BETTER SOFTW, V8, P8
   Ormandjieva O., 2007, 4 INT WORKSH SOFTW Q, P39
   Petersen K., 2014, P INT WORKSH LONG TE, P55
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Pratama BY, 2015, 2015 INTERNATIONAL CONFERENCE ON DATA AND SOFTWARE ENGINEERING (ICODSE), P170, DOI 10.1109/ICODSE.2015.7436992
   Pulido N.M.A., 2019, THESIS
   Rahman M, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P321, DOI 10.1109/SOSE.2015.55
   Rogstad E, 2013, INFORM SOFTWARE TECH, V55, P1781, DOI 10.1016/j.infsof.2013.04.004
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sathawornwichit C, 2012, 2012 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE (APSCC), P335, DOI 10.1109/APSCC.2012.49
   Santos ECS, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P373, DOI 10.1109/ITNG.2015.66
   Solís C, 2011, EUROMICRO CONF PROC, P383, DOI 10.1109/SEAA.2011.76
   Sorlin S, 2007, STUD COMPUT INTELL, V52, P151
   Staron M., 2020, ACTION RES SOFTWARE
   Suan S., THESIS U MANCHESTER
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Taeho Kwon, 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P1134, DOI 10.1109/ICDM.2011.104
   Telles GP, 2007, COMPUT GRAPH-UK, V31, P327, DOI 10.1016/j.cag.2007.01.024
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   van Dam JK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P624, DOI 10.1109/SANER.2016.92
   Vitanyi Paul MB, 2009, Information theory and statistical learning, P45, DOI 10.1007/978-0-387-84816-7_3
   Weller-Fahy DJ, 2015, IEEE COMMUN SURV TUT, V17, P70, DOI 10.1109/COMST.2014.2336610
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Yang Aidan Z. H., 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P534, DOI 10.1109/MSR.2019.00080
NR 57
TC 2
Z9 2
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106717
DI 10.1016/j.infsof.2021.106717
EA AUG 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zhao, YJ
   Li, L
   Sun, XY
   Liu, P
   Grundy, J
AF Zhao, Yanjie
   Li, Li
   Sun, Xiaoyu
   Liu, Pei
   Grundy, John
TI <i>Icon2Code:</i> Recommending code implementations for Android GUI
   components
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android; App development; Collaborative filtering; Icon implementation;
   API recommendation
ID API RECOMMENDATION
AB Context: Event-driven programming plays a crucial role in implementing GUI-based software systems such as Android apps. However, such event-driven code is inherently challenging to design and implement correctly. Despite a significant amount of research to help developers efficiently implement such software, improved approaches are still needed to assist developers in better handling events and associated callback methods. Objective: This work aims at inventing an intelligent recommendation system for helping app developers efficiently and effectively implement Android GUI components. Methods: To achieve the aforementioned objective, we introduce in this work a novel approach called Icon2Code. Given an icon or UI widget provided by designers as input, Icon2Code first searches from a largescale app database to locate similar icons used in existing popular apps. It then learns from the implementation of these similar apps and leverages a collaborative filtering model to select and recommend the most relevant APIs. Results: Our approach can achieve an 81% success rate when only five recommended APIs are considered, and a 94% success rate if twenty results are considered, based on ten-fold cross-validation with a large-scale dataset containing over 45,000 icons and their code implementations. Conclusion: It is feasible to automatically recommend code implementations for Android GUI components and Icon2Code is useful and effective in helping achieve such an objective.
C1 [Zhao, Yanjie; Li, Li; Sun, Xiaoyu; Liu, Pei; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
C3 Monash University
RP Li, L (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM Li.Li@monash.edu
RI Sun, Xiaoyu/CAG-6501-2022; Zhao, Yanjie/HNJ-6191-2023; Li,
   Li/AAR-3316-2020; Grundy, John/I-6681-2012
OI Zhao, Yanjie/0000-0001-8793-5367; Sun, Xiaoyu/0000-0001-7434-0452;
   Grundy, John/0000-0003-4928-7076; Li, Li/0000-0003-2990-1614
FU Australian Research Council (ARC) [FL190100035, DE200100016,
   DP200100020]; Australian Research Council [DE200100016, DP200100020]
   Funding Source: Australian Research Council
FX The authors would like to thank the anonymous reviewers who have
   provided insightful and constructive comments that have led to
   substantial improvements in this manuscript. This work was partly
   supported by the Australian Research Council (ARC) under a Laureate
   Fellowship project FL190100035, a Discovery Early Career Researcher
   Award (DECRA) project DE200100016, and a Discovery project DP200100020.
CR [Anonymous], 2017, INFORM SOFTWARE TECH
   [Anonymous], 2017, Proceedings of the 9th Asia-Pacific Symposium on Internetware-Internetware'17, DOI DOI 10.23919/EETA.2017.7993206
   Arzt Steven, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P13, DOI 10.1109/MOBILESoft.2017.2
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2017, PROC IEEE ACM INT C, P201, DOI 10.1109/ICSE-C.2017.130
   Beltramelli T, 2018, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'18), DOI 10.1145/3220134.3220135
   Bissyande T.F., 2019, 16 INT C MIN SOFTW R 16 INT C MIN SOFTW R
   Cai H., 2019, 28 ACM SIGSOFT INT S
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Coppola R., 2017, P 3 INT WORKSH US IN P 3 INT WORKSH US IN
   Dalal N, 2005, PROC CVPR IEEE, P886, DOI 10.1109/cvpr.2005.177
   Dominguez Perez Danilo, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P68, DOI 10.1109/MOBILESoft.2017.28
   Dong SK, 2018, L N INST COMP SCI SO, V254, P172, DOI 10.1007/978-3-030-01701-9_10
   Gao J., 2019, IEEE T RELIAB TREL
   Gao SQ, 2021, SCI COMPUT PROGRAM, V202, DOI 10.1016/j.scico.2020.102556
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   He Q., 2020, IEEE T SOFTWARE ENG
   Jiang H, 2019, IEEE T SERV COMPUT, V12, P34, DOI 10.1109/TSC.2016.2592909
   Kaeli D., 2015, HETEROGENEOUS COMPUT, V3rd
   Kong P., 2018, IEEE Transactions on Reliability, P1
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li L., 2019, J SYST SOFTW JSS
   Li L., 2020, EMPIR SOFTW ENG EMSE
   Li L., 2018, ACM SIGSOFT INT S SO
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P584, DOI 10.1109/SANER.2016.51
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li Li, 2017, ARXIV PREPRINT ARXIV
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Lika B, 2014, EXPERT SYST APPL, V41, P2065, DOI 10.1016/j.eswa.2013.09.005
   Liu Pei, P IEEE ACM INT C SOF
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Reiss SP, 2018, AUTOMAT SOFTW ENG, V25, P157, DOI 10.1007/s10515-017-0216-3
   Ristad ES, 1998, IEEE T PATTERN ANAL, V20, P522, DOI 10.1109/34.682181
   Rountev Atanas, 2014, P ANN IEEEACM INT S, P143
   Rublee E, 2011, IEEE I CONF COMP VIS, P2564, DOI 10.1109/ICCV.2011.6126544
   Sarkar Sandip., 2016, 10 ANN P SEMANTIC EV, P702
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   Short Amanda, 2017, SMASHING MAGAZINE
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Nguyen TT, 2015, IEEE INT CONF AUTOM, P795, DOI 10.1109/ASE.2015.109
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Xi SQ, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2421, DOI 10.1145/3319535.3363193
   Xusheng Xiao, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P257, DOI 10.1109/ICSE.2019.00041
   Yang SQ, 2018, AUTOMAT SOFTW ENG, V25, P833, DOI 10.1007/s10515-018-0237-6
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Yuan WZ, 2019, INFORM SOFTWARE TECH, V107, P30, DOI 10.1016/j.infsof.2018.10.010
   Yuan WZ, 2018, PROC IEEE ACM INT C, P364, DOI 10.1145/3183440.3195011
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 54
TC 5
Z9 5
U1 4
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106619
DI 10.1016/j.infsof.2021.106619
EA JUN 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500001
DA 2024-07-18
ER

PT J
AU Ghadhab, L
   Jenhani, I
   Mkaouer, MW
   Ben Messaoud, M
AF Ghadhab, Lobna
   Jenhani, Ilyes
   Mkaouer, Mohamed Wiem
   Ben Messaoud, Montassar
TI Augmenting commit classification by using fine-grained source code
   changes and a pre-trained deep neural language model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Commit classification; Code changes; Deep neural
   networks; Pre-trained neural language model
ID SOFTWARE CHANGES
AB Context: Analyzing software maintenance activities is very helpful in ensuring cost-effective evolution and development activities. The categorization of commits into maintenance tasks supports practitioners in making decisions about resource allocation and managing technical debt. Objective: In this paper, we propose to use a pre-trained language neural model, namely BERT (Bidirectional Encoder Representations from Transformers) for the classification of commits into three categories of mainte-nance tasks ? corrective, perfective and adaptive. The proposed commit classification approach will help the classifier better understand the context of each word in the commit message. Methods: We built a balanced dataset of 1793 labeled commits that we collected from publicly available datasets. We used several popular code change distillers to extract fine-grained code changes that we have incorporated into our dataset as additional features to BERT?s word representation features. In our study, a deep neural network (DNN) classifier has been used as an additional layer to fine-tune the BERT model on the task of commit classification. Several models have been evaluated to come up with a deep analysis of the impact of code changes on the classification performance of each commit category. Results and conclusions: Experimental results have shown that the DNN model trained on BERT?s word representations and Fixminer code changes (DNN@BERT+Fix_cc) provided the best performance and achieved 79.66% accuracy and a macro-average f1 score of 0.8. Comparison with the state-of-the-art model that combines keywords and code changes (RF@KW+CD_cc) has shown that our model achieved approximately 8% improvement in accuracy. Results have also shown that a DNN model using only BERT?s word representation features achieved an improvement of 5% in accuracy compared to the RF@KW+CD_cc model.
C1 [Ghadhab, Lobna; Ben Messaoud, Montassar] ISG Tunis, LARODEC, Le Bardo, Tunisia.
   [Jenhani, Ilyes] Prince Mohammad Bin Fahd Univ, Coll Comp Engn & Sci, Dept Informat Technol, Al Khobar 31952, Saudi Arabia.
   [Mkaouer, Mohamed Wiem] Rochester Inst Technol, Rochester, NY 14623 USA.
C3 Universite de Tunis; Prince Mohammad Bin Fahd University; Rochester
   Institute of Technology
RP Ben Messaoud, M (corresponding author), ISG Tunis, LARODEC, Le Bardo, Tunisia.
EM lobnaghadhab@gmail.com; ijenhani@pmu.edu.sa; mwmvse@rit.edu;
   montassar.benmassaoud@isgs.u-sousse.tn
RI Mkaouer, Mohamed Wiem/N-7476-2017
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ghadhab,
   Lobna/0000-0002-8542-8094; Ben Messaoud, Montassar/0000-0003-4056-5359
CR AlOmar EA, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110821
   AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   Amor J.J., PROMISE 06
   Chakraborty S., 2018, Tree2Tree Neural Translation Model for Learning Source Code Changes
   Decker MJ, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2226
   Devlin J., 2018, BERT PRE TRAINING DE
   Di Zhang, 2018, P 30 INT C SOFTW ENG, P165
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Gharbi S, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1760, DOI 10.1145/3297280.3297452
   Goodfellow I., 2018, Deep Learning
   Hattori LP, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P147
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kingma D. P., 2014, arXiv
   Knyazev E.G., 2008, P 11 JOINT M FDN SOF
   Koyuncu A., 2018, FIXMINER MINING RELE
   Levin S, 2016, PROC IEEE INT CONF S, P463, DOI 10.1109/ICSME.2016.21
   Levin Stanislav, 2017, P 13 INT C PREDICTIV, P97
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Mariano Richard V. R., 2019, 2019 18th IEEE International Conference On Machine Learning And Applications (ICMLA), P515, DOI 10.1109/ICMLA.2019.00096
   Martinez M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P79, DOI 10.1109/ICSE-Companion.2019.00043
   Mauczka A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P490, DOI 10.1109/MSR.2015.71
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Sanh, 2019, P 5 WORKSH EN EFF MA
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Vaswani Ashish, 2017, Advances in Neural Information Processing Systems (NeurIPS), V17, P6000, DOI DOI 10.48550/ARXIV.1706.03762
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Yan M, 2016, J SYST SOFTWARE, V113, P296, DOI 10.1016/j.jss.2015.12.019
   Zafar R, 2019, SOUTH FOOD ALLIAN ST, P1
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
NR 39
TC 16
Z9 16
U1 1
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106566
DI 10.1016/j.infsof.2021.106566
EA MAR 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200009
DA 2024-07-18
ER

PT J
AU Marijan, D
   Gotlieb, A
AF Marijan, Dusica
   Gotlieb, Arnaud
TI Industry-Academia research collaboration in software engineering: The
   Certus model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Industry-academia collaboration; Research
   collaboration; Research knowledge co-creation; Collaboration model;
   Technology transfer; Knowledge transfer; Research exploitation;
   Research-based innovation
ID TECHNOLOGY-TRANSFER
AB Context: Research collaborations between software engineering industry and academia can provide significant benefits to both sides, including improved innovation capacity for industry, and real-world environment for motivating and validating research ideas. However, building scalable and effective research collaborations in software engineering is known to be challenging. While such challenges can be varied and many, in this paper we focus on the challenges of achieving participative knowledge creation supported by active dialog between industry and academia and continuous commitment to joint problem solving. Objective: This paper aims to understand what are the elements of a successful industry-academia collaboration that enable the culture of participative knowledge creation. Method: We conducted participant observation collecting qualitative data spanning 8 years of collaborative research between a software engineering research group on software V&V and the Norwegian IT sector. The collected data was analyzed and synthesized into a practical collaboration model, named the Certus Model. Results: The model is structured in seven phases, describing activities from setting up research projects to the exploitation of research results. As such, the Certus model advances other collaborations models from literature by delineating different phases covering the complete life cycle of participative research knowledge creation. Conclusion: The Certus model describes the elements of a research collaboration process between researchers and practitioners in software engineering, grounded on the principles of research knowledge co-creation and continuous commitment to joint problem solving. The model can be applied and tested in other contexts where it may be adapted to the local context through experimentation.
C1 [Marijan, Dusica; Gotlieb, Arnaud] Simula Res Lab, Oslo, Norway.
RP Marijan, D (corresponding author), Simula Res Lab, Oslo, Norway.
EM dusica@simula.no
FU Research Council of Norway, through the Certus SFI project
FX This work is supported by the Research Council of Norway, through the
   Certus SFI project.
CR [Anonymous], 2011, ICSE 2011 PAN WHAT I
   [Anonymous], 2001, HDB ETHNOGRAPHY
   [Anonymous], 2014, P 2014 INT WORKSH LO, DOI DOI 10.1145/2647648.2647651
   Banal-Estañol A, 2013, ECON DEV Q, V27, P71, DOI 10.1177/0891242412472535
   Barroca L, 2018, INT J SYST ASSUR ENG, V9, P323, DOI 10.1007/s13198-015-0355-5
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   Bern BG, 2018, PROCEEDINGS 2018 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP), P22, DOI 10.1145/3195546.3195552
   Bosch J., 2014, CONTINUOUS SOFTWARE, P3
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   Bril R.J, 2006, P 2006 INT WORKSHOP, P15, DOI DOI 10.1145/1138046.1138052
   Carver JC, 2018, IEEE SOFTWARE, V35, P120, DOI 10.1109/MS.2018.3571250
   Chimalakonda Sridhar, 2015, SIGSOFT SOFTWARE ENG, V40, P28, DOI [10.1145/2735399.2735418, DOI 10.1145/2735399.2735418]
   de Wit-de Vries E, 2019, J TECHNOL TRANSFER, V44, P1236, DOI 10.1007/s10961-018-9660-x
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Emmerich W., 2005, ACM TOSEM, V17, P1
   Garousi V., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering - EASE'17, P224, DOI [DOI 10.1145/3084226.3084279, 10.1145/3084226, DOI 10.1145/3084226]
   Garousi V, 2019, EMPIR SOFTW ENG, V24, P2540, DOI 10.1007/s10664-019-09711-y
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Huang MH, 2017, TECHNOL FORECAST SOC, V123, P210, DOI 10.1016/j.techfore.2016.03.024
   Ivanov V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P890, DOI 10.1145/3106237.3117778
   Kuhrmann M., 2018, INT C EV ASS SOFTW E, V25, P1687
   Lamprecht S. J., 2012, Proceedings of the 2012 4th Software Engineering Colloquium (SE), P11, DOI 10.1109/SE.2012.6242350
   Lin JY, 2017, TECHNOL FORECAST SOC, V123, P216, DOI 10.1016/j.techfore.2016.03.016
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY, DOI DOI 10.1002/EV.1427
   Ludema J.D., 2008, The SAGE Handbook of Action Research, DOI DOI 10.4135/9781848607934
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   Musante K., 2010, Participant Observation: A Guide for Fieldworkers
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Perkmann M, 2013, RES POLICY, V42, P423, DOI 10.1016/j.respol.2012.09.007
   Pertuzé JA, 2010, MIT SLOAN MANAGE REV, V51, P83
   Petersen K., 2014, P INT WORKSH LONG TE, P55
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Rajalo S, 2017, TECHNOVATION, V62-63, P42, DOI 10.1016/j.technovation.2017.04.003
   Riddle W.E, 1984, INT C SOFTW ENG, P189
   Runeson Per, 2014, P 2014 INT WORKSH LO, P25, DOI [10.1145/2647648.2647652, DOI 10.1145/2647648.2647652]
   Sandberg AB, 2011, IEEE SOFTWARE, V28, P74, DOI 10.1109/MS.2011.49
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sjöö K, 2019, IND HIGHER EDUC, V33, P275, DOI 10.1177/0950422219829697
   Tang A., 2017, WORTHINESS SOFTWARE
   Taylor SJ., 1984, INTRO QUALITATIVE RE
   Wirsich A, 2016, J PROD INNOVAT MANAG, V33, P708, DOI 10.1111/jpim.12342
   Wohlin C., 2013, INT JOINT C SOFTW TE
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
NR 47
TC 19
Z9 20
U1 0
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106473
DI 10.1016/j.infsof.2020.106473
EA JAN 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QB6LA
UT WOS:000614249900010
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Gomes, LAF
   Torres, RD
   Côrtes, ML
AF Ferreira Gomes, Luiz Alberto
   Torres, Ricardo da Silva
   Cortes, Mario Lucio
TI On the prediction of long-lived bugs: An analysis and comparative study
   using FLOSS projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Bug Tracking System; Long-lived bugs; Machine
   learning; Text mining
ID OPEN SOURCE SOFTWARE; FIXING TIME; CHALLENGES
AB Context: Software evolution and maintenance activities in today's Free/Libre Open Source Software (FLOSS) rely primarily on information extracted from bug reports registered in bug tracking systems. Many studies point out that most bugs that adversely affect the user's experience across versions of FLOSS projects are longlived bugs. However, proposed approaches that support bug fixing procedures do not consider the real-world lifecycle of a bug, in which bugs are often fixed very fast. This may lead to useless efforts to automate the bug management process.
   Objective: This study aims to confirm whether the number of long-lived bugs is significantly high in popular open-source projects and to characterize the population of long-lived bugs by considering the attributes of bug reports. We also aim to conduct a comparative study evaluating the prediction accuracy of five well-known machine learning algorithms and text mining techniques in the task of predicting long-lived bugs.
   Methods: We collected bug reports from six popular open-source projects repositories (Eclipse, Freedesktop, Gnome, GCC, Mozilla, and WineHQ) and used the following machine learning algorithms to predict long-lived bugs: K-Nearest Neighbor, Naive Bayes, Neural Networks, Random Forest, and Support Vector Machines. Results: Our results show that long-lived bugs are relatively frequent (varying from 7.2% to 40.7%) and have unique characteristics, confirming the need to study solutions to support bug fixing management. We found that the Neural Network classifier yielded the best results in comparison to the other algorithms evaluated. Conclusion: Research efforts regarding long-lived bugs are needed and our results demonstrate that it is possible to predict long-lived bugs with a high accuracy (around 70.7%) despite the use of simple prediction algorithms and text mining methods.
C1 [Ferreira Gomes, Luiz Alberto; Cortes, Mario Lucio] Univ Estadual Campinas, Inst Comp IC, UNICAMP, Campinas, SP, Brazil.
   [Ferreira Gomes, Luiz Alberto] Pontifical Catholic Univ Minas Gerais PUC MG, Inst Exact Sci & Informat ICEI, Belo Horizonte, MG, Brazil.
   [Torres, Ricardo da Silva] Norwegian Univ Sci & Technol NTNU, Dept ICT & Nat Sci, Trondheim, Norway.
C3 Universidade Estadual de Campinas; Norwegian University of Science &
   Technology (NTNU)
RP Gomes, LAF (corresponding author), Univ Estadual Campinas, Inst Comp IC, UNICAMP, Campinas, SP, Brazil.
EM luizgomes@pucpcaldas.br; ricardo.torres@ntnu.no; cortes@ic.unicamp.br
RI Torres, Ricardo da S./C-4526-2012
OI cortes, mario/0000-0002-3891-1593
FU National Council for Scientific and Technological Development - CNPq,
   Brazil [307560/2016-3]; Sao Paulo Research Foundation - FAPESP, Brazil
   [2014/12236-1, 2015/24494-8, 2016/50250-1, 2017/20945-0];
   FAPESP-Microsoft Virtual Institute, Brazil [2013/50155-0, 2014/50715-9];
   Pontifical Catholic University of Minas Gerais (PUC-MG) through the
   Permanent Program For Professor Qualification (PPCD), Brazil;
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES) [001]
FX The authors thank the National Council for Scientific and Technological
   Development - CNPq, Brazil (grant #307560/2016-3), the Sao Paulo
   Research Foundation - FAPESP, Brazil (grants #2014/12236-1,
   #2015/24494-8, #2016/50250-1, and #2017/20945-0), the FAPESP-Microsoft
   Virtual Institute, Brazil (grants #2013/50155-0 and #2014/50715-9), and
   The Pontifical Catholic University of Minas Gerais (PUC-MG) that
   supports the first author through the Permanent Program For Professor
   Qualification (PPCD), Brazil. This study was partially funded by the
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior - Brasil
   (CAPES) - Finance Code 001.
CR Abdelmoez W, 2012, 2012 22ND INTERNATIONAL CONFERENCE ON COMPUTER THEORY AND APPLICATIONS (ICCTA), P167, DOI 10.1109/ICCTA.2012.6523564
   Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Al-Zubaidi W.H. A., 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering, P53, DOI 10.1145/3127005.3127011
   [Anonymous], 2014, MACHINE LEARNING ALG
   Ardimento P., 2017, P 7 INT C WEB INT MI, DOI [10.1145/3102254.3102275, DOI 10.1145/3102254.3102275]
   Ardimento P, 2016, LECT NOTES ARTIF INT, V9956, P167, DOI 10.1007/978-3-319-46307-0_11
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Canfora G., 2011, 2011 18th Working Conference on Reverse Engineering, P191, DOI 10.1109/WCRE.2011.31
   Cavalcanti YC, 2014, J SOFTW-EVOL PROC, V26, P620, DOI 10.1002/smr.1639
   de Jonge Edwin., 2013, INTRO DATA CLEANING
   El Mezouar M, 2018, EMPIR SOFTW ENG, V23, P1704, DOI 10.1007/s10664-017-9559-4
   Feldman R., 2006, TEXT MINING HDB ADV
   Fernández A, 2018, J ARTIF INTELL RES, V61, P863, DOI 10.1613/jair.1.11192
   Gomes LAF, 2019, INFORM SOFTWARE TECH, V115, P58, DOI 10.1016/j.infsof.2019.07.009
   Flach P., 2012, Model ensembles,'' inMachine Learning: The Art and Scienceof Algorithms That Make Sense of Data
   Francis P, 2013, PROC IEEE INT CONF S, P436, DOI 10.1109/ICSM.2013.66
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Habayeb M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P700, DOI 10.1145/3180155.3182522
   Haykin S., 1998, NEURAL NETWORKS COMP
   Japkowicz N., 2011, Evaluating Learning Algorithms A Classification Perspective, V211, P224, DOI DOI 10.1017/CBO9780511921803
   Kuhn M., 2018, APPL PREDICTIVE MODE
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2012, EUR CON SFTWR MTNCE, P379, DOI 10.1109/CSMR.2012.47
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Luo G, 2016, NETW MODEL ANAL HLTH, V5, DOI 10.1007/s13721-016-0125-6
   Marks L., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, P1, DOI [10.1145/2020390.2020401, DOI 10.1145/2020390.2020401]
   Probst P., 2018, ARXIV180209596, VarXiv:180209596
   Rawal BS, 2015, PROCEEDINGS OF THE 2015 IEEE RECENT ADVANCES IN INTELLIGENT COMPUTATIONAL SYSTEMS (RAICS), P116, DOI 10.1109/RAICS.2015.7488399
   Rocha H, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P43, DOI 10.1145/2973839.2973844
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Sepahvand R, 2020, IET SOFTW, V14, P203, DOI 10.1049/iet-sen.2019.0260
   Sommerville I., 2011, Software Engineering (Ninth), DOI DOI 10.1111/J.1365-2362.2005.01463.X
   Srivastava A., 2009, Journal of Administration and Governance
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Williams G, 2011, USE R, P3, DOI 10.1007/978-1-4419-9890-3
   Yang G., 2017, P S APPL COMP SAC 17, P1280, DOI DOI 10.1145/3019612.3019788
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1553, DOI 10.1145/2695664.2695872
   Zhao Y., 2013, DATA MINING APPL R
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 46
TC 2
Z9 3
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106508
DI 10.1016/j.infsof.2020.106508
EA JAN 2021
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900014
DA 2024-07-18
ER

PT J
AU Arcaini, P
   Inverso, O
   Trubiani, C
AF Arcaini, Paolo
   Inverso, Omar
   Trubiani, Catia
TI y Automated model-based performance analysis of software product lines
   under uncertainty
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Software performance engineering; Attributed
   feature models; Queueing networks; Uncertainty
ID PREDICTION; MANAGEMENT
AB Context: A Software Product Line (SPL) can express the variability of a system through the specification of configuration options. Evaluating performance characteristics, such as the system response time and resource utilization, of a software product is challenging, even more so in the presence of uncertain values of the attributes.
   Objective: The goal of this paper is to automate the generation of performance models for software products derived from the feature model by selection heuristics. We aim at obtaining model-based predictive results to quantify the correlation between the features, along with their uncertainties, and the system performance. This way, software engineers can be informed on the performance characteristics before implementing the system.
   Method: We propose a tool-supported framework that, starting from a feature model annotated with performance-related characteristics, derives Queueing Network (QN) performance models for all the products of the SPL. Model-based performance analysis is carried out on the models obtained by selecting the products that show the maximum and minimum performance-based costs.
   Results: We applied our approach to almost seven thousand feature models including more than one hundred and seventy features. The generation of QN models is automatically performed in much less than one second, whereas their model-based performance analysis embeds simulation delays and requires about six minutes on average.
   Conclusion: The experimental results confirm that our approach can be effective on a variety of systems for which software engineers may be provided with early insights on the system performance in reasonably short times. Software engineers are supported in the task of understanding the performance bounds that may encounter when (de)selecting different configuration options, along with their uncertainties.
C1 [Arcaini, Paolo] Natl Inst Informat, Tokyo, Japan.
   [Inverso, Omar; Trubiani, Catia] Gran Sasso Sci Inst, Laquila, Italy.
C3 Research Organization of Information & Systems (ROIS); National
   Institute of Informatics (NII) - Japan; Gran Sasso Science Institute
   (GSSI)
RP Arcaini, P (corresponding author), Natl Inst Informat, Tokyo, Japan.
EM arcaini@nii.ac.jp
RI Trubiani, Catia/AAU-4040-2021; Arcaini, Paolo/J-3616-2017
OI Trubiani, Catia/0000-0002-7675-6942; Arcaini, Paolo/0000-0002-6253-4062
FU ERATO HASUO Metamathematics for Systems Design Project, JST
   [JPMJER1603]; MIUR [PRIN 2017FTXR7S IT-MATTERS, PRIN 2017TWRCNB SEDUCE]
FX P. Arcaini is supported by ERATO HASUO Metamathematics for Systems
   Design Project (No. JPMJER1603), JST. Funding Reference number:
   10.13039/501100009024 ERATO. This work has been partially funded by MIUR
   projects PRIN 2017FTXR7S IT-MATTERS (Methods and Tools for Trustworthy
   Smart Systems) and PRIN 2017TWRCNB SEDUCE (Designing Spatially
   Distributed Cyber-Physical Systems under Uncertainty).
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   [Anonymous], 1975, QUEUEING SYST
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2014, P 10 INT ACM SIGS C
   [Anonymous], 2007, VAMOS
   Apel S, 2013, COMPUT NETW, V57, P2399, DOI 10.1016/j.comnet.2013.02.025
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Arcaini Paolo, 2017, P S APPL COMP MARR M, P1162, DOI [10.1145/3019612.3019768, DOI 10.1145/3019612.3019768]
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Balsamo, 2005, P 5 INT WORKSHOP SOF, P37
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Belder T, 2015, ELECTRON P THEOR COM, P14, DOI 10.4204/EPTCS.182.2
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Bertoli Marco, 2009, Performance Evaluation Review, V36, P10, DOI 10.1145/1530873.1530877
   Bürdek J, 2015, LECT NOTES COMPUT SC, V9033, P84, DOI 10.1007/978-3-662-46675-9_6
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Clements Paul, 1995, 5 INT WORKSH SOFTW Q, P485
   Cortellessa V, 2002, SCI COMPUT PROGRAM, V44, P101, DOI 10.1016/S0167-6423(02)00033-3
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Ghezzi Carlo, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P170, DOI 10.1109/SPLC.2011.33
   Guo JM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1027, DOI 10.1145/3180155.3180163
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Happe J., 2010, Proceedings of the 2010 Seventh International Conference on the Quantitative Evaluation of Systems (QEST 2010), P59, DOI 10.1109/QEST.2010.15
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Kolesnikov S.S., 2013, P INT WORKSH VAR MOD
   Kowal M., 2015, SOFTW ENG MANAG
   Kowal M, 2015, IEEE INT CONF AUTOM, P407, DOI 10.1109/ASE.2015.16
   KURTZ TG, 1970, J APPL PROBAB, V7, P49, DOI 10.2307/3212147
   Lanna A, 2018, INFORM SOFTWARE TECH, V94, P59, DOI 10.1016/j.infsof.2017.10.001
   Lazowska E. D., 1984, COMPUTER SYSTEM ANAL
   Tran LMS, 2014, INT REQUIR ENG CONF, P93, DOI 10.1109/RE.2014.6912251
   Lengauer C., 2011, INT J SOFTW INFORM, V5, P231
   Li J, 2011, ADV INTEL SOFT COMPU, V124, P459
   Lian XL, 2018, J SYST SOFTWARE, V137, P636, DOI 10.1016/j.jss.2017.02.044
   Limbourg P, 2008, RELIAB ENG SYST SAFE, V93, P815, DOI 10.1016/j.ress.2007.03.032
   Lity S, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P39, DOI 10.1145/3001867.3001872
   Meinicke J, 2017, MASTERING SOFTWARE V, DOI DOI 10.1007/978-3-319-61443-4
   Mellado D, 2008, COMPUT STAND INTER, V30, P361, DOI 10.1016/j.csi.2008.03.004
   Nguyen Tuan, 2010, 2010 IEEE International Conference on Web Services (ICWS), P393, DOI 10.1109/ICWS.2010.64
   Olaechea R., 2012, Proceedings of the Fourth International Workshop on Nonfunctional System Properties in Domain Specific Modeling Languages, p2:1, DOI DOI 10.1145/2420942.2420944
   Pääkkö J, 2012, ASIA PAC SOFWR ENG, P40, DOI 10.1109/APSEC.2012.145
   Peng ZL, 2015, 2015 IEEE 12TH INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2015), P632, DOI 10.1109/SCC.2015.91
   Ribeiro M., SOFTWARE FAMILIES SO, P7
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schaefer JV, 2010, ANTIBODY ENGINEERING, VOL 2, SECOND EDITION, P85, DOI 10.1007/978-3-642-01147-4_7
   Schnieders A., 2006, 9 INT C BUSINESS INF, P583
   Schnieders A, 2007, ENTERPRISE INTEROPERABILITY: NEW CHALLENGES AND APPROACHES, P67, DOI 10.1007/978-1-84628-714-5_7
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Smith CU, 2010, PERFORM EVALUATION, V67, P548, DOI 10.1016/j.peva.2010.01.006
   Soltani Samaneh., 2012, Proceedings of the 16th International Software Product Line Conference-Volume, V1, P56, DOI DOI 10.1145/2362536.2362548
   Tawhid R., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P80, DOI 10.1109/SPLC.2011.27
   Tawhid R., 2012, P 3 ACMSPEC INT C PE, P109
   ter Beek MH, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302349
   Thomasian A, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2628913
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Thum T., 2019, MANAGED SOFTWARE EVO, P175
   Tian Y, 2017, IEEE COMPUT INTELL M, V12, P73, DOI 10.1109/MCI.2017.2742868
   Trinidad P, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P359, DOI 10.1109/SPLC.2008.50
   Trubiani C., 2013, P 9 INT ACM SIGS C Q, P69
   Trubiani C, 2015, LECT NOTES COMPUT SC, V9278, P305, DOI 10.1007/978-3-319-23727-5_26
   Varshosaz M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P1, DOI 10.1145/3233027.3233035
   White J, 2009, J SYST SOFTWARE, V82, P1268, DOI 10.1016/j.jss.2009.02.011
   Wohlin C., 2012, Experimentation in Software Engineering
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Xiang Y, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176644
   Yen GG, 2014, IEEE T EVOLUT COMPUT, V18, P131, DOI 10.1109/TEVC.2013.2240687
NR 76
TC 4
Z9 4
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106371
DI 10.1016/j.infsof.2020.106371
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700009
OA hybrid
DA 2024-07-18
ER

PT J
AU Fu, YJ
   Lei, ZD
   Cai, SW
   Lin, JK
   Wang, HR
AF Fu, Yingjie
   Lei, Zhendong
   Cai, Shaowei
   Lin, Jinkun
   Wang, Haoran
TI WCA: A weighting local search for constrained combinatorial test
   optimization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Combinatorial interaction testing; Covering array generation; Local
   search; Weighting mechanism; Search-based software testing
ID COVERING ARRAYS; CONFIGURATION CHECKING; GENERATION
AB Context: Covering array generation (CAG) is the core task of Combinatorial interaction testing (CIT), which is widely used to discover interaction faults in real-world systems. Considering the universality, constrained covering array generation (CCAG) is more in line with the characteristics of applications, and has attracted a lot of researches in the past few years.
   Objective: In CIT, a covering array (CA) with smaller size means lower cost of testing, particularly for the systems where the execution of a test suite is time consuming. As constraints between parameters are ubiquitous in real systems, this work is dedicated to more efficient algorithms for CCAG. Specifically, we aim to develop a heuristic search algorithm for CCAG, which allows generating CAs with smaller size in a limited time when compared with existing algorithms.
   Method: We propose a weighting local search algorithm named WCA, which makes use of weights associated with the tuples and dynamically adjusts them during the search, helping the algorithm to avoid search stagnation. As far as we know, this is the first weighting local search for solving CCAG.
   Results: We apply WCA to a wide range of benchmarks, including real-world ones and synthetic ones. The results show that WCA achieves a significant improvement over three state-of-the-art competitors in 2-way and 3-way CCAG, in terms of both effectiveness and efficiency. The importance of weighting is also reflected by the experimental comparison between WCA and its alternative algorithm without the weighting mechanism.
   Conclusion: WCA is an effective heuristic algorithm for CCAG to obtain smaller CAs efficiently, and the weighting mechanism plays a crucial role.
C1 [Fu, Yingjie; Lei, Zhendong; Cai, Shaowei; Lin, Jinkun; Wang, Haoran] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Fu, Yingjie; Lei, Zhendong; Cai, Shaowei; Wang, Haoran] Univ Chinese Acad Sci, Sch Comp & Control Engn, Beijing, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS
RP Cai, SW (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
EM fuyj@ios.ac.cn; leizd@ios.ac.cn; caisw@ios.ac.cn; jkunlin@gmail.com;
   wanghr@ios.ac.cn
OI Cai, Shaowei/0000-0003-1730-6922
FU Microsoft Research Asia [FY20-Research-Sponsorship-255]; Youth
   Innovation Promotion Association, Chinese Academy of Sciences [2017150];
   Beijing Academy of Artificial Intelligence (BAAI)
FX This work is supported by Beijing Academy of Artificial Intelligence
   (BAAI), and partially funded by Microsoft Research Asia (grant number
   FY20-Research-Sponsorship-255). Shaowei Cai is supported by the Youth
   Innovation Promotion Association, Chinese Academy of Sciences (No.
   2017150).
CR Banbara M, 2010, LECT NOTES COMPUT SC, V6397, P112, DOI 10.1007/978-3-642-16242-8_9
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Cai SW, 2017, J ARTIF INTELL RES, V59, P463, DOI 10.1613/jair.5443
   Cai SW, 2014, AAAI CONF ARTIF INTE, P2623
   Cai SW, 2013, ARTIF INTELL, V204, P75, DOI 10.1016/j.artint.2013.09.001
   Cai SW, 2011, ARTIF INTELL, V175, P1672, DOI 10.1016/j.artint.2011.03.003
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Czerwonka J., 2008, Pairwise testing in the real world: Practical extensions to test-case sce- narios
   Danziger P, 2009, THEOR COMPUT SCI, V410, P5403, DOI 10.1016/j.tcs.2009.07.057
   Galinier P, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1288, DOI 10.1145/3071178.3071324
   Gao C, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P826, DOI 10.1109/CEC.2014.6900355
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1029
   Hoos H.H., 2004, Stochastic local search: Foundations and applications
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Kampel L., 2019, THEOR COMPUT SCI
   Kuhn DR, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P153
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Lei ZD, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1346
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   Ludwig K., 2019, INT C LEARN INT OPT, P53
   Luo C, 2015, IEEE T COMPUT, V64, P1830, DOI 10.1109/TC.2014.2346196
   Maltais E, 2011, THEOR COMPUT SCI, V412, P6517, DOI 10.1016/j.tcs.2011.07.010
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mercan H, 2019, IEEE T SOFTWARE ENG, V45, P1270, DOI 10.1109/TSE.2018.2837759
   Nayeri P, 2013, EUR J COMBIN, V34, P91, DOI 10.1016/j.ejc.2012.07.017
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Richter S, 2007, LECT NOTES ARTIF INT, V4667, P412
   Thornton J, 2005, J AUTOM REASONING, V35, P97, DOI 10.1007/s10817-005-9010-1
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Wang YY, 2016, AAAI CONF ARTIF INTE, P805
   Yamada A, 2016, IEEE INT CONF AUTOM, P614, DOI 10.1145/2970276.2970335
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yokoi K, 2015, PROCEEDINGS OF INTERNATIONAL CONFERENCE ON ARTIFICIAL LIFE AND ROBOTICS (ICAROB2015), P1
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P242, DOI 10.1109/ICST.2013.35
   Zhang ZQ, 2014, J SYST SOFTWARE, V98, P191, DOI 10.1016/j.jss.2014.09.001
NR 47
TC 12
Z9 12
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106288
DI 10.1016/j.infsof.2020.106288
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800009
DA 2024-07-18
ER

PT J
AU Kovalev, IV
   Saramud, MV
   Losev, VV
AF Kovalev, Igor, V
   Saramud, Mikhail, V
   Losev, Vasiliy V.
TI Simulation environment for the choice of the decision making algorithm
   in multi-version real-time system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Multi-version; Fault tolerance; Quality assurance; Reliability; Voting
   algorithms; Simulation modeling
ID SOFTWARE; EXECUTION
AB Context: Nowadays the most effective way to improve the reliability of software is an approach with the introduction of software redundancy - multi-version programming. The reliability of a multi-version system is determined not only by the reliability of the versions that make it up, but to a greater degree by the decision making algorithm.
   Objective: Our objective is evaluation and selection of the most reliable voting algorithms in multi-version environments. In order to get this objective there is a need to check all the algorithms in the execution environment, simulating characteristic of the developed system. Thus, we obtain the characteristics of the quality of the algorithm operation in precisely those conditions in which it will work in the system that is developed.
   Method: The article suggests weighted voting algorithms with a forgetting element, as well as modifications of existing voting algorithms. To be able to check the quality of their work, the simulation environment has been implemented that simulates the operation of the software multi-version execution environment.
   Results: The article substantiates the use of the most reliable decision making algorithms in the decision block of the real-time operating system. A comparative analysis of decision making algorithms for the operation of the decision making block of the multi-version real-time execution environment has been carried out.
   Conclusions: The software implementation of the simulation environment that implements the simulations of versions with given characteristics is considered, not only classical decision making algorithms, but also the author's modifications are investigated. The environment allows to obtain the quality characteristics of all implemented decision making algorithms with given system characteristics. The modeling results are considered, the dependence of the system reliability indicators on its input parameters is shown, a comparative analysis of various decision making algorithms based on the modeling results is made.
C1 [Kovalev, Igor, V; Saramud, Mikhail, V] Siberian Fed Univ, 79 Svobodny Ave, Krasnoyarsk 660041, Russia.
   [Kovalev, Igor, V; Saramud, Mikhail, V; Losev, Vasiliy V.] Reshetnev Siberian State Univ Sci & Technol, Krasnoyarsky Rabochy Av 31, Krasnoyarsk 660037, Russia.
C3 Siberian Federal University; Reshetnev Siberian State University of
   Science & Technology
RP Saramud, MV (corresponding author), Reshetnev Siberian State Univ Sci & Technol, Krasnoyarsky Rabochy Av 31, Krasnoyarsk 660037, Russia.
EM msaramud@sfu-kras.ru
RI Vasiliy, Losev/AAU-7309-2021; Kovalev, Igor/S-9633-2017; Saramud,
   Mikhail/H-1483-2018
OI Kovalev, Igor/0000-0003-2128-6661; Saramud, Mikhail/0000-0003-0344-9842
FU Ministry of Education and Science of the Russian Federation [NQ
   2.2867.2017/4.6]
FX This work was supported by Ministry of Education and Science of the
   Russian Federation within limits of state contract NQ 2.2867.2017/4.6.
CR Avritzer AA, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P22, DOI 10.1109/ISSREW.2014.110
   BRILLIANT SS, 1990, IEEE T SOFTWARE ENG, V16, P238, DOI 10.1109/32.44387
   Chen LP, 2016, IEEE T RELIAB, V65, P1149, DOI 10.1109/TR.2015.2503335
   Chen L, 2014, INT CONF SOFTW SECUR, P1, DOI [10.1109/SERE.2014.13, 10.1109/PESGM.2014.6938856]
   ECKHARDT DE, 1985, IEEE T SOFTWARE ENG, V11, P1511, DOI 10.1109/TSE.1985.231895
   Karimi Abbas, 2014, ScientificWorldJournal, V2014, P672832, DOI 10.1155/2014/672832
   Kovalev IV, 2017, IOP CONF SER-MAT SCI, V173, DOI 10.1088/1757-899X/173/1/012025
   Kovalev I, 2017, 2017 EUROPEAN CONFERENCE ON ELECTRICAL ENGINEERING AND COMPUTER SCIENCE (EECS), P211, DOI 10.1109/EECS.2017.47
   Latif-Shabgahi G., 1999, Proceedings 25th EUROMICRO Conference. Informatics: Theory and Practice for the New Millennium, P113, DOI 10.1109/EURMIC.1999.794769
   Liebl E, 2016, 2016 17TH IEEE LATIN-AMERICAN TEST SYMPOSIUM (LATS), P180, DOI 10.1109/LATW.2016.7483360
   MCALLISTER DF, 1990, IEEE T RELIAB, V39, P524, DOI 10.1109/24.61308
   Saramud MV, 2018, INT J INF TECHNOL SE, V10, P25
   Thomas JV, 2017, 2017 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING, INSTRUMENTATION AND CONTROL TECHNOLOGIES (ICICICT), P1480, DOI 10.1109/ICICICT1.2017.8342788
   Xu J., 1991, Digest of Papers. Fault-Tolerant Computing: Twenty-First International Symposium (Cat. No.91CH2985-0), P496, DOI 10.1109/FTCS.1991.146707
   Xu J, 1997, IEEE T RELIAB, V46, P60, DOI 10.1109/24.589928
NR 15
TC 0
Z9 0
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2020
VL 120
AR 106245
DI 10.1016/j.infsof.2019.106245
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KM6FK
UT WOS:000514233800002
OA Green Published
DA 2024-07-18
ER

PT J
AU Tian, JF
   Guo, YH
AF Tian, Junfeng
   Guo, Yuhui
TI Software trustworthiness evaluation model based on a behaviour
   trajectory matrix
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context Software trustworthiness is a highly important research topic. Trustworthiness evaluation based on factors that affect software behaviour is conducted mainly according to the influence degrees of these factors on the software behaviour to evaluate trustworthiness. As a result, minimization of the interference of human factors is considered.
   Objective: In this study, to ensure the objectivity of evaluating the trustworthiness of software behaviour, a software trustworthiness evaluation model based on a behaviour trajectory matrix, namely, BTBM-TM was proposed.
   Method: Checkpoints were set up in the trajectory of the software behaviour, and binary code was introduced to express the software behaviour trajectory tree. The scenario information of the checkpoints was acquired, and used to construct behaviour trajectory matrices, which were used to represent the behaviour trajectory. The behaviour trajectory matrices were transformed into grayscale images, which were used to train the deep residual network (ResNet) to classify the software behaviour. The trained deep residual network was used to categorize the current software behaviour, and the cosine similarity algorithm was used to calculate the deviation degree of the software behaviour trajectory; to perform a dual evaluation of the trustworthiness of software behaviour.
   Results: The behaviour trajectory information of the Model class of 300 cycles was used to evaluate the trustworthiness of the mine-sweeping game. The trustworthiness evaluation results of the software behaviour of the scheme proposed in this paper (BTBM-TM) were compared with those of the schemes from references [6] and [10]. The accuracies of the schemes from [6] and [10] are lower than that of the BTBM-TM scheme.
   Conclusions: The trajectory of software behaviour is represented by a matrix and converted into a grayscale image, whose processing method is used to evaluate the trustworthiness of software behaviour more objectively and accurately.
C1 [Tian, Junfeng; Guo, Yuhui] Hebei Univ, Sch Cyber Secur & Comp, Baoding 071000, Peoples R China.
   [Tian, Junfeng; Guo, Yuhui] Key Lab High Trusted Informat Syst Hebei Prov, Baoding 071000, Peoples R China.
C3 Hebei University
RP Guo, YH (corresponding author), Hebei Univ, Sch Cyber Secur & Comp, Baoding 071000, Peoples R China.
EM tjf@hbu.edu.cn
RI Tian, Junfeng/AGY-1359-2022
OI Guo, Yuhui/0000-0002-4833-7003
FU National Natural Science Foundation of China [61802106]
FX This work is supported by the National Natural Science Foundation of
   China (No. 61802106).
CR [Anonymous], J COMMUN
   [Anonymous], 120720120580 ARXIV
   [Anonymous], INT J HYBRID INFORM
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   [丁卫涛 Ding Weitao], 2016, [计算机科学, Computer Science], V43, P202
   Girshick R, 2014, PROC CVPR IEEE, P580, DOI 10.1109/CVPR.2014.81
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   [贾晓辉 Jia Xiaohui], 2017, [计算机科学, Computer Science], V44, P169
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Li Shi, 2012, Journal of Software, V7, P532, DOI 10.4304/jsw.7.3.532-543
   Liu D., 2016, J. Opt, V36, P306, DOI DOI 10.3788/AOS201636.0428001
   Lo D, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P557
   Okamura H, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P121, DOI 10.1109/ISSRE.2015.7381806
   [邵明正 Shao Mingzheng], 2015, [计算机工程与应用, Computer Engineering and Application], V51, P265
   Spano S, 2016, J BURN CARE RES, V37, P1, DOI 10.1097/BCR.0000000000000320
   Tao HW, 2019, MATHEMATICS-BASEL, V7, DOI 10.3390/math7030237
   Wang BH, 2019, IEEE ACCESS, V7, P60199, DOI 10.1109/ACCESS.2019.2892518
   Yin Bao-cai, 2015, Journal of Beijing University of Technology, V41, P48, DOI 10.11936/bjutxb2014100026
   Zhang HH, 2017, AGRONOMY-BASEL, V7, DOI 10.3390/agronomy7010012
   Zhou Yuan, 2015, Journal of Software, V26, P3075, DOI 10.13328/j.cnki.jos.004803
NR 20
TC 7
Z9 8
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106233
DI 10.1016/j.infsof.2019.106233
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100002
DA 2024-07-18
ER

PT J
AU Sánchez-Gordón, M
   Colomo-Palacios, R
AF Sanchez-Gordon, Mary
   Colomo-Palacios, Ricardo
TI Taking the emotional pulse of software engineering - A systematic
   literature review of empirical studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review; Social aspects of software development;
   Emotion; Affect; Mood; Behavioral software engineering
ID DEVELOPERS; DOMINANCE; FRAMEWORK; PLEASURE; AROUSAL
AB Context: Over the past 50 years of Software Engineering, numerous studies have acknowledged the importance of human factors. However, software developers' emotions are still an area under investigation and debate that is gaining relevance in the software industry.
   Objective: In this study, a systematic literature review (SLR) was carried out to identify, evaluate, and synthesize research published concerning software developers' emotions as well as the measures used to assess its existence.
   Method: By searching five major bibliographic databases, authors identified 7172 articles related to emotions in Software Engineering. We selected 66 of these papers as primary studies. Then, they were analyzed in order to find empirical evidence of the intersection of emotions and software engineering.
   Results: Studies report a total of 40 discrete emotions but the most frequent were: anger, fear, disgust; sadness, joy, love, and happiness. There are also 2 different dimensional approaches and 10 datasets related to this topic which are publicly available on the Web. The findings also showed that self-reported mood instruments (e.g., SAM, PANAS), physiological measures (e.g., heart rate, perspiration) or behavioral measures (e.g., keyboard use) are the least reported tools, although, there is a recognized intrinsic problem with the accuracy of current state of the art sentiment analysis tools. Moreover, most of the studies used software practitioners and/or datasets from industrial context as subjects.
   Conclusions: The study of emotions has received a growing attention from the research community in the recent years, but the management of emotions has always been challenging in practice. Although it can be said that this field is not mature enough yet, our results provide a holistic view that will benefit researchers by providing the latest trends in this area and identifying the corresponding research gaps.
C1 [Sanchez-Gordon, Mary; Colomo-Palacios, Ricardo] Ostfold Univ Coll, Fac Comp Sci, Halden, Norway.
C3 Ostfold University College
RP Sánchez-Gordón, M (corresponding author), Ostfold Univ Coll, Fac Comp Sci, Halden, Norway.
EM mary.sanchez-gordon@hiof.no; ricardo.colomo-palacios@hiof.no
RI Sánchez-Gordón, Mary/AAI-2106-2019
OI Sánchez-Gordón, Mary/0000-0002-5102-1122; Colomo-Palacios,
   Ricardo/0000-0002-1555-9726
CR [Anonymous], FRONT PSYCHOL
   [Anonymous], 2014, NELS, DOI DOI 10.1007/978-3-662-43896-1_1
   [Anonymous], 2001, EMOTIONS SOCIAL PSYC
   [Anonymous], 2010, SOC INDIC RES, DOI DOI 10.1007/s11205-009-9493-y
   [Anonymous], 2016, INT C AG SOFTW DEV C
   [Anonymous], 2004, INTRO PERSONALITY IN
   [Anonymous], 1995, NATURE EMOTION FUNDA
   [Anonymous], DET FAC IM FAC API A
   [Anonymous], 1972, Emotion in the Human Face: guidelines for Research and an Integration of Findings
   Barros JL, 2018, IEEE LAT AM T, V16, P1213, DOI 10.1109/TLA.2018.8362159
   Batson CD., 1992, Emotion, P294
   BRADLEY MM, 1994, J BEHAV THER EXP PSY, V25, P49, DOI 10.1016/0005-7916(94)90063-9
   Cabanac M, 2002, BEHAV PROCESS, V60, P69, DOI 10.1016/S0376-6357(02)00078-5
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Capretz LF, 2014, IEEE SOFTWARE, V31, P104
   Clavel C, 2016, IEEE T AFFECT COMPUT, V7, P74, DOI 10.1109/TAFFC.2015.2444846
   Colomo-Palacios R, 2012, J GLOB INF TECH MAN, V15, P30, DOI 10.1080/1097198X.2012.10845617
   Colomo-Palacios R, 2011, J UNIVERS COMPUT SCI, V17, P1281
   Colomo-Palacios R, 2008, INT J KNOWL LEARN, V4, P452, DOI 10.1504/IJKL.2008.022063
   Coppin G, 2016, EMOTION MEASUREMENT, P3, DOI 10.1016/B978-0-08-100508-8.00001-1
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Danescu-Niculescu-Mizil C., 2013, Long Papers, V1, P250
   EKMAN P, 1992, COGNITION EMOTION, V6, P169, DOI 10.1080/02699939208411068
   Ekman P., 1971, Nebraska symposium on motivation, V19, P207
   Ekman P, 2016, PERSPECT PSYCHOL SCI, V11, P31, DOI 10.1177/1745691615596992
   Ekman P, 2011, EMOT REV, V3, P364, DOI 10.1177/1754073911410740
   Fleckenstein Kristie S, 1991, Journal of Advanced Composition, P447
   Fountaine A, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P28, DOI 10.1109/SEmotion.2017.12
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Garrido S., 2014, Psychomusicology: Music, Mind, and Brain, V24, P316, DOI DOI 10.1037/PMU0000072
   Gaur SS, 2014, J RETAIL CONSUM SERV, V21, P917, DOI 10.1016/j.jretconser.2014.08.009
   Gordon S.L., 1981, Social Psychology: Sociological Perspectives, P562
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Graziotin D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P123, DOI 10.1109/CHASE.2015.23
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   KLEINGINNA P R JR, 1981, Motivation and Emotion, V5, P345, DOI 10.1007/BF00992553
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   Langlotz Andreas, 2017, PALGRAVE HDB LINGUIS, P287, DOI DOI 10.1057/978-1-137-37508-7_12
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Levenson RW, 2011, EMOT REV, V3, P379, DOI 10.1177/1754073911410743
   Mehrabian A, 1996, CURR PSYCHOL, V14, P261, DOI 10.1007/BF02686918
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Murray HA, 1945, GENET PSYCHOL MONOGR, V32, P153
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Picard R.W., 2000, Affective Computing
   Plutchik R., 1984, APPROACHES EMOTION, P197, DOI DOI 10.1016/B978-0-12-558701-3.50007-7
   Posner J, 2005, DEV PSYCHOPATHOL, V17, P715, DOI 10.1017/S0954579405050340
   RUSSELL JA, 1989, J PERS SOC PSYCHOL, V57, P493, DOI 10.1037/0022-3514.57.3.493
   Scherer K., 2000, Neuropsychology of Emotion, V137, P137
   Scherer KR, 2005, SOC SCI INFORM, V44, P695, DOI 10.1177/0539018405058216
   SHAVER P, 1987, J PERS SOC PSYCHOL, V52, P1061, DOI 10.1037//0022-3514.52.6.1061
   Shaw T., 2004, Proceedings of the 2004 SIGMIS conference on computer personnel research: Careers, culture and ethics in a networked environment (SIGMIS CPR '04), P124, DOI DOI 10.1145/982372.982403
   Shouse E., 2004, MC J, V8, P1
   Sommerville I., 2010, SOFTWARE ENG
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   THOITS PA, 1989, ANNU REV SOCIOL, V15, P317
   Vogt T, 2008, LECT NOTES ARTIF INT, V5078, P188, DOI 10.1007/978-3-540-69369-7_21
   WARR P, 1990, J OCCUP PSYCHOL, V63, P193, DOI 10.1111/j.2044-8325.1990.tb00521.x
   Warriner AB, 2013, BEHAV RES METHODS, V45, P1191, DOI 10.3758/s13428-012-0314-x
   WATSON D, 1988, J PERS SOC PSYCHOL, V54, P1063, DOI 10.1037/0022-3514.54.6.1063
   Wearden AJ, 2000, CLIN PSYCHOL REV, V20, P633, DOI 10.1016/S0272-7358(99)00008-2
   Wohlin C., 2012, Experimentation in Software Engineering
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
   Yadollahi A, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057270
NR 75
TC 30
Z9 32
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 23
EP 43
DI 10.1016/j.infsof.2019.08.002
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IX7GL
UT WOS:000485851700004
DA 2024-07-18
ER

PT J
AU Tripathi, N
   Oivo, M
   Liukkunen, K
   Markkula, J
AF Tripathi, Nirnaya
   Oivo, Markku
   Liukkunen, Kari
   Markkula, Jouni
TI Startup ecosystem effect on minimum viable product development in
   software startups
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software startup; Startup ecosystem; Product idea; Minimum viable
   product; Prototype; Empirical study
ID CHALLENGES; COMPANIES; DESIGN
AB Context Software startups develop innovative products through which they scale their business rapidly, and thus, provide value to the economy, including job generation. However, most startups fail within two years of their launch because of a poor problem-solution fit and negligence of the learning process during minimum viable product (MVP) development. An ideal startup ecosystem can assist in MVP development by providing the necessary entrepreneurial education and technical skills to founding team members for identifying problem-solution fit for their product idea, allowing them to find the right product-market fit. However, existing knowledge on the effect of the startup ecosystem elements on the MVP development is limited.
   Objective: The empirical study presented in this article aims to identify the effect of the six ecosystem elements (entrepreneurs, technology, market, support factors, finance, and human capital) on MVP development.
   Method: We conducted a study with 13 software startups and five supporting organizations (accelerators, incubator, co-working space, and investment firm) in the startup ecosystem of the city of Oulu in Finland. Data were collected through semi-structured interviews, observation, and materials.
   Results: The study results showed that internal sources are most common for identifying requirements for the product idea for MVP development. The findings indicate that supporting factors, such as incubators and accelerators, can influence MVP development by providing young founders with the necessary entrepreneurship skills and education needed to create the right product-market fit.
   Conclusions: We conclude from this study of a regional startup ecosystem that the MVP development process is most affected by founding team members' experiences and skill sets and by advanced technologies. Furthermore, a constructive startup ecosystem around software startups can boost up the creation of an effective MVP to test product ideas and find a product-market fit.
C1 [Tripathi, Nirnaya; Oivo, Markku; Liukkunen, Kari; Markkula, Jouni] Univ Oulu, Res Grp M3S, Oulu 90014, Finland.
C3 University of Oulu
RP Tripathi, N (corresponding author), Univ Oulu, Res Grp M3S, Oulu 90014, Finland.
EM nirnaya.tripathi@oulu.fi
RI Markkula, Jouni/D-1355-2014
OI Tripathi, Nirnaya/0000-0001-8506-1176; Liukkunen,
   Kari/0000-0002-0719-4712
CR Ambler SW, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/52.991334
   Nguyen-Duc A, 2017, LECT NOTES BUS INF P, V283, P20, DOI 10.1007/978-3-319-57633-6_2
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2015, Interaction design: Beyond human-computer interaction
   Ardichvili A, 2003, J BUS VENTURING, V18, P105, DOI 10.1016/S0883-9026(01)00068-4
   Bajwa SS, 2017, EMPIR SOFTW ENG, V22, P2373, DOI 10.1007/s10664-016-9458-0
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Bhargava HK, 2014, INFORM TECHNOL MANAG, V15, P199, DOI 10.1007/s10799-014-0188-y
   Blank S., 2012, The Startup Owner's Manual The Step-by-Step Guide for Building a Great Company
   Bosch J., EARLY STAGE SOFTWARE, P1
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Carmel Erran, 1994, 1994 P 27 HAW INT C
   Cohen B., 2006, BUS STRATEG ENVIRON, V15, P1, DOI [DOI 10.1002/BSE.428, 10.1002/bse.428]
   Cohen S., 2013, Innovations: Technology, Governance, Globalization, V8, P19, DOI [10.1162/inov_a_00184, DOI 10.1162/INOV_A_00184]
   CROWNE M, 2002, IEEE INT ENG MAN C, V1, P338, DOI DOI 10.1109/IEMC.2002.1038454
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   CUKIER D, 2016, 2 INT WORKSH SOFTW S
   Davila A, 2003, J BUS VENTURING, V18, P689, DOI 10.1016/S0883-9026(02)00127-1
   Duc A., 2016, LNBIP, V251, P118, DOI DOI 10.1007/978-3-319-33515-5
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Edison H, 2015, LECT NOTES COMPUT SC, V9459, P577, DOI 10.1007/978-3-319-26844-6_43
   Fabijan A, 2015, LECT NOTES BUS INF P, V210, P139, DOI 10.1007/978-3-319-19593-3_12
   Giardino C., WHY EARLY STAGE SOFT, P27
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Giardino C, 2015, LECT NOTES BUS INF P, V212, P52, DOI 10.1007/978-3-319-18612-2_5
   Gralha C., 2018, P ICSE 18 40 INT C S
   Haines T, 2016, TECHNOL INNOV MANAG, V6, P24
   Hyrynsalmi Sami, 2018, Challenges and Opportunities in the Digital Era. 17th IFIP WG 6.11 Conference on e-Business, e-Services, and e-Society, I3E 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11195), P217, DOI 10.1007/978-3-030-02131-3_20
   Ives AR, 2007, SCIENCE, V317, P58, DOI 10.1126/science.1133258
   Kane T.J., 2010, SSRN Electronic Journal, DOI DOI 10.2139/SSRN.1646934
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Khanna D, 2018, LECT NOTES BUS INF P, V336, P172, DOI 10.1007/978-3-030-04840-2_12
   Klotins Eriks, 2019, Empirical Software Engineering, V24, P68, DOI 10.1007/s10664-018-9620-y
   Klotins E., 2019, IEEE T SOFTW ENG
   Kon F., 2015, CONCEPTUAL FRAMEWORK, P1
   Krishnan V, 2002, MANAGE SCI, V48, P313, DOI 10.1287/mnsc.48.3.313.7728
   Lenarduzzi V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P112, DOI 10.1109/SEAA.2016.56
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Melegati J., 2016, P 22 ICE IEEE INT TE, P448
   Melegati J, 2019, INFORM SOFTWARE TECH, V109, P92, DOI 10.1016/j.infsof.2019.02.001
   Nguyen-Duc A., 2015, Hunter-gatherer cycle: a conceptual model of the evolution of software startups, V24-26, P199
   Olsen Dan., 2015, The lean product playbook: How to innovate with minimum viable products and rapid customer feedback
   Ottum BD, 1997, J PROD INNOVAT MANAG, V14, P258, DOI 10.1016/S0737-6782(97)00013-1
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Peters L., 2004, The Journal of Technology Transfer, V29, P83, DOI [10.1023/B:JOTT.0000011182.82350.df, DOI 10.1023/B:JOTT.0000011182.82350.DF]
   Rafiq U, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P141, DOI 10.1109/SEAA.2017.73
   Ries E, 2011, The Lean Startup
   Rothschild M., 1990, Bionomics: economy as a business ecosystem
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seppanen P., 2017, INT C SOFTW BUS
   Shen X.X., 2000, EUR J INNOV MANAG, V3, P91, DOI [DOI 10.1108/14601060010298435, 10.1108/14601060010298435]
   Singer J., SOFTWARE ENG DATA CO, P9, DOI [10.1007/978-1-84800-044-5_1, DOI 10.1007/978-1-84800-044-5_1]
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Tripathi N, 2019, INFORM SOFTWARE TECH, V105, P56, DOI 10.1016/j.infsof.2018.08.005
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Tripathi N, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P125, DOI 10.1109/SEAA.2017.34
   Tripathi N, 2016, COMM COM INF SC, V609, P150, DOI 10.1007/978-3-319-38980-6_12
   Wang Xiaofeng, 2016, INT C AG SOFTW DEV, P169, DOI 10.1007/978-3-319-33515-5_14
   Wei S, 2012, PROCEEDING OF 2012 INTERNATIONAL SYMPOSIUM ON MANAGEMENT OF TECHNOLOGY (ISMOT'2012), P122, DOI 10.1109/ISMOT.2012.6679441
   Willis AJ, 1997, FUNCT ECOL, V11, P268, DOI 10.1111/j.1365-2435.1997.00081.x
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Wright M, 2007, ENTREP THEORY PRACT, V31, P791, DOI 10.1111/j.1540-6520.2007.00202.x
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 64
TC 33
Z9 38
U1 11
U2 138
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 77
EP 91
DI 10.1016/j.infsof.2019.06.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mendes, FF
   Mendes, E
   Salleh, N
AF Mendes, Fabiana Freitas
   Mendes, Emilia
   Salleh, Norsaremah
TI The relationship between personality and decision-making: A Systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Decision-Making; Personality; Service or product development
ID SOFTWARE-DEVELOPMENT
AB Context: From a point of view, software development is a set of decisions that need to be made while the software is developed. Many alternatives should be considered, such as the technology to employ, or the most important features to implement. However, many factors can influence one's decision-making, such as the decision maker's personality.
   Objective: This paper reports the state of the art with regard to the relationship between decision-makers' personality and decision-making aspects.
   Method: We conducted a Systematic Literature Review to search and analyze published primary studies that discuss the abovementioned relationship in the context of companies that develop any kind of product or service.
   Results: Despite the recognized influence of personality in decision-making activities, we were not able to find any study in Software Engineering field that discusses this relationship. We included 15 studies and most of them are from Management field, excluding one from Information System field. From these studies, we identified 75 reported relationships between 28 different personality aspects and 30 different decision-making aspects.
   Conclusion: The interest in this topic born on 80's and it has grown after 2002. However, despite the number of reported relationships, and the number of personalities and decision-making aspects investigated, more research on this topic is necessary. In particular, it is important to verify how someone's personality influences the decision-making considering the software development context. This can help in improving how a decision is made in software engineering context.
C1 [Mendes, Fabiana Freitas; Mendes, Emilia] Univ Oulu, Fac Informat Technol & Elect Engn, POB 3000, Oulu 90014, Finland.
   [Mendes, Fabiana Freitas] Univ Brasilia, Fac UnB Gama, BR-72444240 Brasilia, DF, Brazil.
   [Salleh, Norsaremah] Int Islamic Univ Malaysia, Dept Comp Sci, POB 10, Kuala Lumpur 50728, Malaysia.
C3 University of Oulu; Universidade de Brasilia; International Islamic
   University Malaysia
RP Mendes, FF (corresponding author), Univ Oulu, Fac Informat Technol & Elect Engn, POB 3000, Oulu 90014, Finland.; Mendes, FF (corresponding author), Univ Brasilia, Fac UnB Gama, BR-72444240 Brasilia, DF, Brazil.
EM fabianamendes@unb.br; emilia.mendes@bth.se; norsaremah@iium.edu.my
RI Mendes, Maria E/B-4207-2015; Mendes, Fabiana/AAH-5593-2019; Salleh,
   Norsaremah/AFU-5066-2022
OI Mendes, Fabiana/0000-0002-1724-2044; Salleh,
   Norsaremah/0000-0001-5625-7014; Mendes, Emilia/0000-0003-0449-5322
FU Tekes FiDiPRO VALUE project; University of Brasilia
FX This PhD research is partially funded by Tekes FiDiPRO VALUE project and
   supported by the University of Brasilia.
CR Abatecola G, 2013, J MANAG GOV, V17, P1073, DOI 10.1007/s10997-011-9189-y
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 2014, SOFTWARE METRICS RIG, DOI DOI 10.1201/B17461
   Averill J., 1997, Handbook of personality psychology, V1997
   Briggs C, 2008, SYSTEMS ENG, V11, P15, DOI 10.1002/sys.20083
   Burge Janet E., 2008, RATIONALE BASED SOFT, P67, DOI DOI 10.1007/978-3-540-77583-6_5
   Burger J.M., 2010, Personality
   Carver C.S., 2012, PERSPECTIVES PERSONA, V7th
   Colomo-Palacios R, 2013, BEHAV INFORM TECHNOL, V32, P1077, DOI 10.1080/0144929X.2011.630414
   Corr PJ, 2009, CAMBRIDGE HANDBOOK OF PERSONALITY PSYCHOLOGY, P1, DOI 10.1017/CBO9780511596544
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cunha JAOG, 2016, PROCEDIA COMPUT SCI, V100, P947, DOI 10.1016/j.procs.2016.09.255
   da Cunha JAOG, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962604
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erjavec  J., 2016, RES IN PROGR PAPERS
   Ewen R., 2014, An introduction to theories of personality, V7th
   Fulop L., 1999, MANAGEMENT CRITICAL
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   Furnham A, 2003, SOC BEHAV PERSONAL, V31, P577, DOI 10.2224/sbp.2003.31.6.577
   Groth-Marnat G., 2009, Handbook of Psychological Assessment, Vfifth
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Hossiep R., 2008, BUSINESS FOCUSED INV
   Hyrsky K., 1999, The Finnish Journal of Business Economics, V3, P238
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   JACKSON D, 1994, TECHNICAL REPORT
   Jia JD, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P86, DOI [10.1109/CHASE.2016.026, 10.1145/2897586.2897589]
   Kauer D, 2007, MANAGE DECIS, V45, P942, DOI 10.1108/00251740710762017
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Lundgren H, 2017, EUR J TRAIN DEV, V41, P198, DOI 10.1108/EJTD-03-2016-0015
   Molleri  J., 2017, UNDERSTANDING UNPUB
   OZER DJ, 1994, ANNU REV PSYCHOL, V45, P357, DOI 10.1146/annurev.ps.45.020194.002041
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Quenk NaomiL., 2009, ESSENTIALS MYERS BRI, V2nd
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Schultz D.P., 2016, Theories of Personality
   Shaw  M., 2015, GOTO 2015 PROGR ENG
   Shaw M, 2009, IEEE SOFTWARE, V26, P64, DOI 10.1109/MS.2009.172
   Silva da Silva T., 2011, Proceedings of the 2011 Agile Conference, P77, DOI 10.1109/AGILE.2011.24
   STEERS RM, 1976, J VOCAT BEHAV, V9, P251, DOI 10.1016/0001-8791(76)90083-X
   Tsiga Z. D., 2016, J MODERN PROJECT MAN, V4, P41
   Ürü FO, 2011, PROCD SOC BEHV, V24, DOI 10.1016/j.sbspro.2011.09.112
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   2011, 2011 INTERNATIONAL S, P285, DOI DOI 10.1109/ESEM.2011.37
   2011, 2011 INTERNATIONAL S, P275, DOI DOI 10.1109/ESEM.2011.36
   1997, J APPL PSYCHOL, V82, P803
NR 47
TC 23
Z9 26
U1 2
U2 23
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 50
EP 71
DI 10.1016/j.infsof.2019.03.010
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HW6ST
UT WOS:000466821600004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Wang, QY
   Xia, X
   Lo, D
   Li, SP
AF Wang, Qingye
   Xia, Xin
   Lo, David
   Li, Shanping
TI Why is my code change abandoned?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code review; Empirical study; Abandoned change
ID INSPECTIONS; PARTICIPATION; IMPACT
AB Context: Software developers contribute numerous changes every day to the code review systems. However, not all submitted changes are merged into a codebase because they might not pass the code review process. Some changes would be abandoned or be asked for resubmission after improvement, which results in more workload for developers and reviewers, and more delays to deliverables.
   Objective: To understand the underlying reasons why changes are abandoned, we conduct an empirical study on the code review of four open source projects (Eclipse, LibreOffice, OpenStack, and Qt).
   Method: First, we manually analyzed 1459 abandoned changes. Second, we leveraged the open card sorting method to label these changes with reasons why they were abandoned, and we identified 12 categories of reasons. Next, we further investigated the frequency distribution of the categories across projects. Finally, we studied the relationship between the categories and time-to-abandonment.
   Results: Our findings include the following: (1) Duplicate changes are the majority of the abandoned changes; (2) the frequency distribution of abandoned changes across the 12 categories is similar for the four open source projects; (3) 98.39% of the changes are abandoned within a year.
   Conclusion: Our study concluded the root causes of abandoned changes, which will help developers submit high-quality code changes.
C1 [Wang, Qingye; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Zhejiang University; Monash University; Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM wqyy@zju.edu.cn; xin.xia@monash.edu; davidlo@smu.edu.sg; shan@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
CR Ackerman A. F., 1984, SOFTWARE INSPECTIONS
   ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Albayrak O., 2010, P 2010 ACM IEEE INT, P50
   [Anonymous], 2009, Research on software analysis for error-free computing center Tech-Memo (ROSAEC MEMO 2009-006)
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Dunsmore A, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1207450
   Ebert F, 2017, PROC IEEE INT CONF S, P549, DOI 10.1109/ICSME.2017.40
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fan Y., 2018, EMPIR SOFTW ENG, V2018, P1
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gonzalez-Barahona Jesus M, 2014, P INTERNATIONALWORKS, P1
   Guo B, 2017, P INT COMP SOFTW APP, P118, DOI 10.1109/COMPSAC.2017.153
   Hordijk W., 2009, 13 INT C EV ASS SOFT
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jiang SY, 2017, INT C PROGRAM COMPRE, P320, DOI 10.1109/ICPC.2017.12
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Johnson PM, 1998, COMMUN ACM, V41, P49, DOI 10.1145/269012.269020
   Kantorowitz E., 2007, SOFTWARE SCI TECHNOL, P104
   Kitagawa N, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P64, DOI [10.1109/CHASE.2016.022, 10.1145/2897586.2897605]
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Ramasubbu N., 2006, AMCIS 2006 P, P459
   Rigby P. C., 2006, DCS305IR U VICT
   Rigby P. C., 2015, ART SCI ANAL SOFTWAR
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Ruangwan S., 2018, EMPIR SOFTW ENG, P1
   Seaman CB, 1997, PROC INT CONF SOFTW, P96, DOI 10.1145/253228.253248
   Shimagaki J., 2017, IEEE ACM INT C SOFTW, P212
   Shull F, 2008, IEEE SOFTWARE, V25, P88, DOI 10.1109/MS.2008.7
   Souza R. R., 2015, J SOFTW ENG RES DEV, V3, P1
   Spencer D., 2009, CARD SORTING DESIGNI
   Tao YD, 2014, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSME.2014.49
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Votta L. G.  Jr., 1993, SIGSOFT Software Engineering Notes, V18, P107, DOI 10.1145/167049.167070
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 53
TC 8
Z9 10
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 108
EP 120
DI 10.1016/j.infsof.2019.02.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100008
OA Green Published
DA 2024-07-18
ER

PT J
AU Homaei, H
   Shahriari, HR
AF Homaei, Hossein
   Shahriari, Hamid Reza
TI Athena: A framework to automatically generate security test oracle via
   extracting policies from source code and intended software behaviour
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software security; Test oracle; Vulnerability analysis
ID AUTOMATED TEST ORACLES; VULNERABILITIES
AB Context Software security testing aims to check the security behaviour of a program. To determine whether the program behaves securely on a particular execution, we need an oracle who knows the expected security behaviour. Security test oracle decides whether test cases violate the intended security policies of the program. Thus, it is necessary for the oracle to model the detailed security policies. Unfortunately, these policies are usually poorly documented. Even worse, in some cases, the source code is the only available document of the program.
   Objective: We propose a method to automatically extract the intended security policies of the program under test from the source code and expected execution traces. We introduce a security test oracle, Athena, which utilises these policies to differentiate between the secure and potentially insecure behaviour of the program.
   Method: We use a hybrid analysis approach to obtain the intended security policies. We investigate the program statements (gates) in which the software communicates with the environment. We analyse the transmitted messages in the gates and the control and data flow of the program to extract some security properties. Moreover, we specify the intended navigation paths of the program. These properties and paths form the expected security policies. Athena utilises these policies to detect potential security breaches.
   Results: Investigating common types of software vulnerabilities illustrates the flexibility of Athena in modelling various kinds of security policies. Moreover, we show the usefulness of the method by applying it to the real web applications and evaluating its capability to detect actual attacks.
   Conclusions: Our proposed approach takes a step towards solving the test oracle automation problem in the domain of security testing.
C1 [Homaei, Hossein; Shahriari, Hamid Reza] Amirkabir Univ Technol, Dept Comp Engn & Informat Technol, Tehran, Iran.
C3 Amirkabir University of Technology
RP Shahriari, HR (corresponding author), Amirkabir Univ Technol, Dept Comp Engn & Informat Technol, Tehran, Iran.
EM homayi@aut.ac.ir; shahriari@aut.ac.ir
OI Homaei, Hossein/0000-0002-7445-5548; Shahriari, Hamid
   Reza/0000-0002-2749-6355
CR Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2003, Computer security: art and science
   [Anonymous], 2005, INPROCEEDINGS 20 IEE
   Avancini A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P15, DOI 10.1109/IWAST.2012.6228984
   Avancini A., 2012, TRUSTWORTHY ETERNAL, V379, P30
   Avancini A, 2013, WORK CONF REVERSE EN, P262, DOI 10.1109/WCRE.2013.6671301
   Baresi L., 2001, TECHNICAL REPORT
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bau J, 2010, P IEEE S SECUR PRIV, P332, DOI 10.1109/SP.2010.27
   Boland T, 2012, COMPUTER, V45, P88, DOI 10.1109/MC.2012.345
   Bozic J, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P207, DOI 10.1109/QRS.2015.38
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Deepa G, 2016, INFORM SOFTWARE TECH, V74, P160, DOI 10.1016/j.infsof.2016.02.005
   Doupé A, 2010, LECT NOTES COMPUT SC, V6201, P111, DOI 10.1007/978-3-642-14215-4_7
   Du WL, 2002, QUAL RELIAB ENG INT, V18, P261, DOI 10.1002/qre.480
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Ganesh V, 2009, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2009.5070546
   Gradecki J.D., 2003, MASTERING ASPECTJ AS
   Halfond WGJ, 2011, SOFTW TEST VERIF REL, V21, P195, DOI 10.1002/stvr.450
   Homaei H, 2017, IEEE SECUR PRIV, V15, P58, DOI 10.1109/MSP.2017.15
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Li N, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P363, DOI 10.1109/ICST.2014.49
   Li X., 2013, PROC 8 ACM SIGSAC S, P481
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Memon A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2003.1240304
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Oliveira RAP, 2014, ADV COMPUT, V95, P113, DOI 10.1016/B978-0-12-800160-8.00003-6
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Ozment A, 2007, QOP'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON QUALITY OF PROTECTION, P6
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Pezzè M, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P1, DOI 10.1109/AST.2015.7
   Pezzè M, 2014, ADV COMPUT, V95, P1, DOI 10.1016/B978-0-12-800160-8.00001-2
   Shahamiri SR, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P140, DOI 10.1109/ICSEA.2009.29
   Söderberg E, 2013, SCI COMPUT PROGRAM, V78, P1809, DOI 10.1016/j.scico.2012.02.002
   Sparks S, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P477, DOI 10.1109/ACSAC.2007.27
   Srivastava V, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P343
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   Tan L, 2008, PROCEEDINGS OF THE 2008 7TH IEEE INTERNATIONAL CONFERENCE ON CYBERNETIC INTELLIGENT SYSTEMS, P379
   Vineeta, 2014, 2014 5TH INTERNATIONAL CONFERENCE CONFLUENCE THE NEXT GENERATION INFORMATION TECHNOLOGY SUMMIT (CONFLUENCE), P753, DOI 10.1109/CONFLUENCE.2014.6949222
   Wang TL, 2010, P IEEE S SECUR PRIV, P495, DOI 10.1109/SP.2010.37
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Zhang DZ, 2012, J SYST SOFTWARE, V85, P102, DOI 10.1016/j.jss.2011.07.028
NR 47
TC 5
Z9 6
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 112
EP 124
DI 10.1016/j.infsof.2018.11.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200009
DA 2024-07-18
ER

PT J
AU Wang, HY
   Hebig, R
AF Wang, Haoyu
   Hebig, Regina
TI Improving the experience for software-measurement system end-users: A
   story of two companies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Measurement systems; End-user experience; Performance
ID MEASUREMENT PROGRAM; TIME; LONG
AB Context Software measurement systems are used in large companies to provide developers with up-to-date feedback and metrics.
   Objective: However, the front-ends of these systems are often not ready to provide a real-time experience for the end-users, who sometimes have to wait minutes before visualizations are provided.
   Method: In this paper, we present the case studies of two large international companies and compare alternative technological setups for measurement system front-ends used and explored within these companies. We use a publicly available data-set for a performance evaluation and to analyze the results.
   Results: For both companies we found significant performance differences between the alternative setups. However, in one of the companies these differences are not there for large data-sets. Furthermore, we found that not all setups enable the visualization of the newest available data.
   Conclusions: Our results indicate that the choice of the visualization component has a larger impact on the performance than the choice of the data storage. However, companies are also willing to invest into setups that ensure that visualized measures are always up-to-date.
C1 [Wang, Haoyu] Ericsson, Shanghai, Peoples R China.
   [Hebig, Regina] Chalmers, Gothenburg, Sweden.
   [Hebig, Regina] Univ Gothenburg, Gothenburg, Sweden.
C3 Ericsson; Chalmers University of Technology; University of Gothenburg
RP Hebig, R (corresponding author), Chalmers, Gothenburg, Sweden.; Hebig, R (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM haoyu.h.wang@ericsson.com; hebig@chalmers.se
RI Hebig, Regina/B-5284-2015
OI Hebig, Regina/0000-0002-1459-2081; Wang, Haoyu/0000-0002-5972-0569
FU Ericsson; Financial Software Company
FX We like to thank Ericsson and the Financial Software Company for
   supporting this research. Especially, we would like to express our
   appreciation towards Wilhelm Meding for encouraging this work.
CR [Anonymous], 2010, P 32 ACM IEEE INT C
   Azvine B., 2006, 8 IEEE INT C ENTERPR, P29, DOI [10.1109/CEC-EEE.2006.73, DOI 10.1109/CEC-EEE.2006.73]
   Badam S.K., 2017, GRAPHICS INTERFACE
   Basili V. R., 1992, Technical Report
   Baysal O, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2013.66
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Diab H, 2005, INFORM SOFTWARE TECH, V47, P151, DOI 10.1016/j.infsof.2004.06.007
   Díaz-Ley M, 2008, IET SOFTW, V2, P417, DOI 10.1049/iet-sen:20080026
   Faita F, 2008, J ULTRAS MED, V27, P1353, DOI 10.7863/jum.2008.27.9.1353
   Godfrey P, 2016, IEEE T KNOWL DATA EN, V28, P2142, DOI 10.1109/TKDE.2016.2557324
   Gonultas R, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P112, DOI 10.1109/SEAA.2015.30
   Houghton R., 2004, MIS Quarterly Executive, V3, P19
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Liu ZC, 2013, COMPUT GRAPH FORUM, V32, P421, DOI 10.1111/cgf.12129
   Morton K., 2012, UWCSE120801
   Nah FFH, 2004, BEHAV INFORM TECHNOL, V23, P153, DOI 10.1080/01449290410001669914
   Rahman S, 2017, PROC VLDB ENDOW, V10, P1262, DOI 10.14778/3137628.3137637
   Staron M., MEASUREMENT AS A SER, P144, DOI [10.1007/978-3-319-24285-9_10, DOI 10.1007/978-3-319-24285-9_10]
   Staron M., ENSURING RELIABILITY, P1, DOI [10.1007/978-3-642-05415-01, DOI 10.1007/978-3-642-05415-0_1]
   Staron M, 2011, E-INFORMATICA, V5, P7, DOI 10.2478/v10233-011-0027-z
   Staron M, 2011, J SOFTW MAINT EVOL-R, V23, P89, DOI 10.1002/smr.470
   Staron M, 2009, LECT NOTES COMPUT SC, V5891, P1, DOI 10.1007/978-3-642-05415-0_1
   Terlecki P, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1695, DOI 10.1145/2723372.2742799
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wallace JR, 2011, COMPUT SUPP COOP W J, V20, P529, DOI 10.1007/s10606-011-9149-8
   Wang H., 2017, P 27 INT WORKSH SOFT, P100
   Wesley R., 2011, P 2011 ACM SIGMOD IN, P1185, DOI [DOI 10.1145/1989323.1989449, 10.1145/1989323.1989449]
   Wesley R, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P563, DOI 10.1145/2588555.2595639
NR 28
TC 0
Z9 0
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 216
EP 225
DI 10.1016/j.infsof.2018.06.006
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000017
DA 2024-07-18
ER

PT J
AU Palomba, F
   Bavota, G
   Di Penta, M
   Fasano, F
   Oliveto, R
   De Lucia, A
AF Palomba, Fabio
   Bavota, Gabriele
   Di Penta, Massimiliano
   Fasano, Fausto
   Oliveto, Rocco
   De Lucia, Andrea
TI A large-scale empirical study on the lifecycle of code smell
   co-occurrences
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code smells co-occurrences; Empirical study; Mining software
   repositories
ID BAD
AB Context: Code smells are suboptimal design or implementation choices made by programmers during the development of a software system that possibly lead to low code maintainability and higher maintenance costs.
   Objective: Previous research mainly studied the characteristics of code smell instances affecting a source code file, while only few studies analyzed the magnitude and effects of smell co-occurrence, i.e., the co-occurrence of different types of smells on the same code component. This paper aims at studying in details this phenomenon.
   Method: We analyzed 13 code smell types detected in 395 releases of 30 software systems to firstly assess the extent to which code smells co-occur, and then we analyze (i) which code smells co-occur together, and (ii) how and why they are introduced and removed by developers.
   Results: 59% of smelly classes are affected by more than one smell, and in particular there are six pairs of smell types (e.g., Message Chains and Spaghetti Code) that frequently co-occur. Furthermore, we observed that method-level code smells may be the root cause for the introduction of class-level smells. Finally, code smell co-occurrences are generally removed together as a consequence of other maintenance activities causing the deletion of the affected code components (with a consequent removal of the code smell instances) as well as the result of a major restructuring or scheduled refactoring actions.
   Conclusions: Based on our findings, we argue that more research aimed at designing co-occurrence-aware code smell detectors and refactoring approaches is needed.
C1 [Palomba, Fabio] Univ Zurich, Binzmuhlestr 14, CH-8050 Zurich, Switzerland.
   [Bavota, Gabriele] Univ Svizzera Italiana, Via Giuseppe Buffi 13, CH-6900 Lugano, Switzerland.
   [Di Penta, Massimiliano] Univ Sannio, Via Traicuto 3, I-82100 Benevento, Italy.
   [Fasano, Fausto; Oliveto, Rocco] Univ Molise, Via Hertz 1, I-86090 Pesche, Italy.
   [De Lucia, Andrea] Univ Salerno, Via Giovanni Paolo II 132, I-84084 Fisciano, Italy.
C3 University of Zurich; Universita della Svizzera Italiana; University of
   Sannio; University of Molise; University of Salerno
RP Palomba, F (corresponding author), Univ Zurich, Binzmuhlestr 14, CH-8050 Zurich, Switzerland.
EM palomba@ifi.uzh.ch
RI De Lucia, Andrea/AAG-6781-2020; Di Penta, Massimiliano/AAF-9656-2021
OI Palomba, Fabio/0000-0001-9337-5116; BAVOTA,
   Gabriele/0000-0002-2216-3148; Fasano, Fausto/0000-0003-3736-6383; De
   Lucia, Andrea/0000-0002-4238-1425
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Avgeriou P., 2016, DAGSTUHL REPORTS
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cunningham W., 1993, OOPS Messenger, V4, P29
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fontana FA, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P1, DOI 10.1109/SAM.2015.8
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garg A., DO BAD SMELLS FOLLOW, P39
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   GRANGER CWJ, 1969, ECONOMETRICA, V37, P424, DOI 10.2307/1912791
   HOLM S, 1979, SCAND J STAT, V6, P65
   Izurieta C., 2016, 4 INT WORKSH QUANT A, P84
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lehman M.M., 1985, SOFTWARE EVOLUTION P
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lozano A, 2015, 2015 IEEE 2ND INTERNATIONAL WORKSHOP ON PATTERNS PROMOTION AND ANTI-PATTERNS PREVENTION (PPAP), P1, DOI 10.1109/PPAP.2015.7076847
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Oliveto R., 2010, P 14 C SOFTW MAINT R
   Palomba F., 2017, LARGE SCALE EMPIRICA
   Palomba F., 2017, EMP SOFTW ENG
   Palomba F., 2017, T SOFTW ENG
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Polli G, 2017, PROCEEDINGS OF 2017 INTERNATIONAL WORKSHOP ON INTEGRATED NONLINEAR MICROWAVE AND MILLIMETRE-WAVE CIRCUITS (INMMIC 2017)
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Shull F., PERSPECTIVES FUTURE, P179
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   YAMASHITA A, 2015, P 2015 IEEE INT C SO, P121, DOI DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 55
TC 59
Z9 64
U1 1
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 1
EP 10
DI 10.1016/j.infsof.2018.02.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900001
DA 2024-07-18
ER

PT J
AU Hassler, EE
   Hale, DP
   Hale, JE
AF Hassler, Edgar E.
   Hale, David P.
   Hale, Joanne E.
TI A comparison of automated training-by-example selection algorithms for
   Evidence Based Software Engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Research infrastructure; Evidence Based Software Engineering; Systematic
   Literature Review; Systematic Mapping Studies; Culling; VSM; LSA;
   Recall; Precision; Document selection
ID LATENT; WORKLOAD
AB Context: Study search and selection is central to conducting Evidence Based Software Engineering (EBSE) research, including Systematic Literature Reviews and Systematic Mapping Studies. Thus, selecting relevant studies and excluding irrelevant studies, is critical. Prior research argues that study selection is subject to researcher bias, and the time required to review and select relevant articles is a target for optimization.
   Objective: This research proposes two training-by-example classifiers that are computationally simple, do not require extensive training or tuning, ensure inclusion/exclusion consistency, and reduce researcher study selection time: one based on Vector Space Models (VSM), and a second based on Latent Semantic Analysis (LSA).
   Method: Algorithm evaluation is accomplished through Monte-Carlo Cross-Validation simulations, in which study subsets are randomly chosen from the corpus for training, with the remainder classified by the algorithm. The classification results are then assessed for recall (a measure of completeness), precision (a measure of exactness) and researcher efficiency savings (reduced proportion of corpus studies requiring manual review as a result of algorithm use). A second smaller simulation is conducted for external validation.
   Results and conclusions: VSM algorithms perform better in recall; LSA algorithms perform better in precision. Recall improves with larger training sets with a higher proportion of truly relevant studies. Precision improves with training sets with a higher portion of irrelevant studies, without a significant impact from the training set size. The algorithms reduce the influence of researcher bias and are found to significantly improve researcher efficiency.
   To improve recall, the findings recommend VSM and a large training set including as many truly relevant studies as possible. If precision and efficiency are most critical, the findings suggest LSA and a training set including a large proportion of truly irrelevant studies.
C1 [Hassler, Edgar E.] Appalachian State Univ, Dept Comp Informat Syst, Boone, NC 28608 USA.
   [Hale, David P.; Hale, Joanne E.] Univ Alabama, Culverhouse Coll Commerce, Dept Informat Syst Stat & Management Sci, Tuscaloosa, AL 35401 USA.
C3 University of North Carolina; Appalachian State University; University
   of Alabama System; University of Alabama Tuscaloosa
RP Hale, DP (corresponding author), Univ Alabama, Culverhouse Coll Commerce, Dept Informat Syst Stat & Management Sci, Tuscaloosa, AL 35401 USA.
EM hassleree@appstate.edu; dhale@ua.edu; jhale@cba.ua.edu
OI /0000-0003-1922-1869
FU United States National Science Foundation [NSF-1305395]
FX We acknowledge partial support from the United States National Science
   Foundation under grant NSF-1305395.
CR Al-Zubidy A, 2017, INFORM SOFTWARE TECH, V91, P72, DOI 10.1016/j.infsof.2017.06.007
   [Anonymous], 2010, P 14 INT C EV ASS SO
   [Anonymous], 2000, P KDD WORKSH TEXT MI, DOI DOI 10.1109/ICCCYB.2008.4721382
   Bano M., 2010, TECHNICAL REPORT SYS
   Berry MW, 1995, SIAM REV, V37, P573, DOI 10.1137/1037127
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bloehdorn S., 2004, Advances in Web Mining and Web Usage Analysis. 6th International Workshop on Knowledge Discovery on The Web, WebKDD 2004. Revised Selected Papers (Lecture Notes in Artificial Intelligence Vol. 3932), P149
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   Chung G. K., 1997, METHODOLOGICAL APPRO
   Cohen AM, 2006, J AM MED INFORM ASSN, V13, P206, DOI 10.1197/jamia.M1929
   Cohen J., 1988, STAT POWER ANAL BEHA, VSecond, P1, DOI DOI 10.1016/B978-0-12-179060-8.50006-2
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Evangelopoulos N, 2012, EUR J INFORM SYST, V21, P70, DOI 10.1057/ejis.2010.61
   Felizardo Katia R., 2012, Journal of Software, V7, P450, DOI 10.4304/jsw.7.2.450-461
   Felizardo K. R., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P174, DOI 10.1109/SBES.2011.9
   Felizardo KR, 2012, INFORM SOFTWARE TECH, V54, P1079, DOI 10.1016/j.infsof.2012.04.003
   Felizardo KR, 2011, INT SYMP EMP SOFTWAR, P77, DOI 10.1109/ESEM.2011.16
   Fernandez-Saez A. M., 2010, 2010 5 INT C SOFTW D
   Fox J., 2016, Applied Regression Analysis, Linear Models, and Related Methods, DOI DOI 10.5860/CHOICE.34-6323
   Garson G. D., 2012, Testing Statistical Assumptions
   Gravetter F., 2014, ESSENTIALS STAT BAHA
   Gruber T., 2008, ENTRY ENCY DATABASE, P1963
   Hale D., 2017, VSM LSA PRIMARY STUD
   Hale D., 2017, PRIMARY STUDY PUBLIC
   Hassler E. E., 2014, ADV EVIDENCE BASED P
   Hassler Edgar., 2014, 18th International Conference on Evaluation Assessment in Software Engineering, P31
   He Z., 2011, EV ASS SOFTW ENG EAS, P56
   Hoechle D, 2007, STATA J, V7, P281, DOI 10.1177/1536867X0700700301
   Hofmann T, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P289
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kakkonen T, 2004, ITRE 2004: 2ND INTERNATIONAL CONFERENCE INFORMATION TECHNOLOGY: RESEARCH AND EDUCATION, PROCEEDINGS, P126, DOI 10.1109/ITRE.2004.1393660
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2011, EAST 2011: EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES, P3
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Malheiros Viviane, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P245
   Matwin S, 2010, J AM MED INFORM ASSN, V17, P446, DOI 10.1136/jamia.2010.004325
   Nakov P., 2003, P REC ADV NAT LANG P
   Nakov P., 2001, EUROCONFERENCE RANLP
   Nigam K, 2000, MACH LEARN, V39, P103, DOI 10.1023/A:1007692713085
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   PICARD RR, 1984, J AM STAT ASSOC, V79, P575, DOI 10.2307/2288403
   Ramesh B, 2015, PROCEDIA COMPUT SCI, V57, P1124, DOI 10.1016/j.procs.2015.07.400
   Richardson JTE, 2011, EDUC RES REV-NETH, V6, P135, DOI 10.1016/j.edurev.2010.12.001
   Romero Felizardo Katia, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P91, DOI 10.1109/RESER.2013.9
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Song MH, 2006, ADV SOFT COMP, V34, P483, DOI 10.1007/3-540-31662-0_37
   TILL RE, 1988, MEM COGNITION, V16, P283, DOI 10.3758/BF03197039
   Tomassetti Federico, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P31, DOI 10.1049/ic.2011.0004
   van Belle G., 2011, Statistical Rules of Thumb
   Wallace BC, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-55
   Warton DI, 2011, ECOLOGY, V92, P3, DOI 10.1890/10-0340.1
   Wild F., 2007, P 9 CAA C LOUGHB
   Wild F, 2007, STUD CLASS DATA ANAL, P383, DOI 10.1007/978-3-540-70981-7_43
   Yueming Sun, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P171, DOI 10.1049/ic.2012.0022
   Zhao Y, 2005, DATA MIN KNOWL DISC, V10, P141, DOI 10.1007/s10618-005-0361-3
   Zhong Q., 2017, INFORM PROCESSING SC
NR 60
TC 6
Z9 7
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 59
EP 73
DI 10.1016/j.infsof.2018.02.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GD8LP
UT WOS:000430764200005
OA Bronze
DA 2024-07-18
ER

PT J
AU Holvitie, J
   Licorish, SA
   Spínola, RO
   Hyrynsalmi, S
   MacDonell, SG
   Mendes, TS
   Buchan, J
   Leppänen, V
AF Holvitie, Johannes
   Licorish, Sherlock A.
   Spinola, Rodrigo O.
   Hyrynsalmi, Sami
   MacDonell, Stephen G.
   Mendes, Thiago S.
   Buchan, Jim
   Leppanen, Ville
TI Technical debt and agile software development practices and processes:
   An industry practitioner survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Technical debt management; Agile software development;
   Practitioner survey
ID CONTEXT
AB Context: Contemporary software development is typically conducted in dynamic, resource-scarce environments that are prone to the accumulation of technical debt. While this general phenomenon is acknowledged, what remains unknown is how technical debt specifically manifests in and affects software processes, and how the software development techniques employed accommodate or mitigate the presence of this debt.
   Objectives: We sought to draw on practitioner insights and experiences in order to classify the effects of agile method use on technical debt management, given the popularity and perceived success of agile methods. We explore the breadth of practitioners' knowledge about technical debt; how technical debt is manifested across the software process; and the perceived effects of common agile software development practices and processes on technical debt. In doing so, we address a research gap in technical debt knowledge and provide novel and actionable managerial recommendations.
   Method: We designed, tested and executed a multi-national survey questionnaire to address our objectives, receiving 184 responses from practitioners in Brazil, Finland, and New Zealand.
   Results: Our findings indicate that: 1) Practitioners are aware of technical debt, although, there was under utilization of the concept, 2) Technical debt commonly resides in legacy systems, however, concrete instances of technical debt are hard to conceptualize which makes it problematic to manage, 3) Queried agile practices and processes help to reduce technical debt; in particular, techniques that verify and maintain the structure and clarity of implemented artifacts (e.g., Coding standards and Refactoring) positively affect technical debt management.
   Conclusions: The fact that technical debt instances tend to have characteristics in common means that a systematic approach to its management is feasible. However, notwithstanding the positive effects of some agile practices on technical debt management, competing stakeholders' interests remain a concern.
C1 [Holvitie, Johannes; Leppanen, Ville] Turku Ctr Comp Sci, Software Dev Lab, Turku, Finland.
   [Holvitie, Johannes; Leppanen, Ville] Univ Turku, Dept Informat Technol, Turku, Finland.
   [Licorish, Sherlock A.; MacDonell, Stephen G.] Univ Otago, Dept Informat Sci, Dunedin, Otago, New Zealand.
   [Spinola, Rodrigo O.] Univ Salvador, Grad Program Syst & Comp, Salvador, BA, Brazil.
   [Spinola, Rodrigo O.] Univ Fed Bahia, Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
   [Hyrynsalmi, Sami] Tampere Univ Technol, Pori Campus, Pori, Finland.
   [Mendes, Thiago S.] Fed Inst Bahia, Informat Technol Dept, Santo Amaro, BA, Brazil.
   [MacDonell, Stephen G.; Buchan, Jim] Auckland Univ Technol, Sch Engn Comp & Math Sci, Auckland, New Zealand.
C3 University of Turku; University of Otago; Universidad de El Salvador;
   Universidade Salvador (UNIFACS); Universidade Federal da Bahia; Tampere
   University; Instituto Federal da Bahia (IFBA); Auckland University of
   Technology
RP Holvitie, J (corresponding author), Univ Turku, Dept Informat Technol, Turku, Finland.
EM jjholv@utu.fi; sherlock.licorish@otago.ac.nz;
   rodrigo.spinola@fpc.ufba.br; sami.hyrynsahni@tut.fi;
   stephen.macdonell@otago.ac.nz; thiagomendes@dcc.ufba.br;
   jim.buchan@aut.ac.nz; ville.leppanen@utu.fi
RI MacDonell, Stephen G./AAI-1579-2019; Hyrynsalmi, Sami/U-6315-2017
OI MacDonell, Stephen G./0000-0002-2231-6941; Hyrynsalmi,
   Sami/0000-0002-5073-3750; Leppanen, Ville/0000-0001-5296-677X; Buchan,
   Jim/0000-0003-2777-931X
FU Nokia Foundation; Ulla Tuominen Foundation; Finnish Foundation for
   Technology Promotion; CNPq [458261/2014-9]
FX Johannes Holvitie is partially supported by grants from Nokia
   Foundation, Ulla Tuominen Foundation, and Finnish Foundation for
   Technology Promotion. Dr. Rodrigo Spinola is partially supported by CNPq
   Universal 2014 grant 458261/2014-9. The authors would like to thank the
   reviewers for their extensive comments which have significantly
   contributed towards improving the quality of this article.
CR Alreck P. L., 1985, SURVEY RES HDB, V2
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   [Anonymous], SIGPLAN OOPS MESS, DOI [10.1145/157710.157715, DOI 10.1145/157710.157715]
   [Anonymous], 2004, XP Ser
   [Anonymous], 2002, TECHNICAL REPORT
   [Anonymous], P 4 INT WORKSH MAN T
   Beck K., 2011, MANIFESTO AGILE SOFT
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Buschmann F, 2011, IEEE SOFTWARE, V28, P29, DOI 10.1109/MS.2011.150
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Holvitie Johannes, 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P35, DOI 10.1109/MTD.2014.8
   Holvitie J., 2016, TECHN DEBT AN 2016 1, P80
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Klinger T, 2011, P 2 WORKSHOP MANAGIN, P35
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kurapati N, 2012, LECT NOTES BUS INF P, V111, P16
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Marsden PV, 2010, HANDBOOK OF SURVEY RESEARCH, 2ND EDITION, P1
   Martini A, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P422, DOI 10.1109/SEAA.2015.78
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   McConnell S., 2007, TECHNICAL DEBT
   Nardi P., 2006, Doing survey research: a guide to quantitative methods
   Power K., 2014, AGIL PROCESS SOFTW E, P312
   Salo O, 2008, IET SOFTW, V2, P58, DOI 10.1049/iet-sen:20070038
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Snipes W., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P54, DOI 10.1109/MTD.2012.6226001
   Spínola RO, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P1, DOI 10.1109/MTD.2013.6608671
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   VersionOnelnc, 2015, TECHNICAL REPORT
   West D., 2010, TECHNICAL REPORT
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
NR 43
TC 36
Z9 38
U1 8
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 141
EP 160
DI 10.1016/j.infsof.2017.11.015
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200010
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Vallon, R
   Estácio, BJD
   Prikladnicki, R
   Grechenig, T
AF Vallon, Raoul
   da Silva Estacio, Bernardo Jose
   Prikladnicki, Rafael
   Grechenig, Thomas
TI Systematic literature review on agile practices in global software
   development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Global software development; Global software engineering; Distributed
   software development; Agile software development; Agile practices;
   Scrum; Extreme programming; XP; Systematic literature review
ID SCRUM
AB Context Developing software in distributed development environments exhibits coordination, control and communication challenges. Agile practices, which demand frequent communication and self-organization between remote sites, are increasingly found in global software development (GSD) to mitigate said challenges.
   Objective: We aim to provide detailed insight into what is reported on the successful application of agile practices in GSD from 1999 to 2016 and also identify the most frequently applied agile practices and reported distribution scenarios. We further strive to uncover research opportunities and gaps in the field of agile GSD.
   Method: We build our systematic literature review on top of a previous review, which investigated studies published between 1999 and 2009, and extend the review by years 2010-2016, for which we conduct both a quantitative and a qualitative analysis.
   Results: Our results show that the majority of the cases studied is global and involves complex distribution scenarios with Scrum or combined Scrum/Extreme Programming being the most used agile methods. Key results include that in contrast to 1999-2009, where four Extreme Programming practices were among the ten most frequently used agile practices, in 2010-2016 Scrum is in the center of agile GSD implementations with eight Scrum-based practices in the top ten agile practices used in GSD.
   Conclusion: Agile GSD is a maturing research field with higher quality contributions and a greater variety of publication types and methods from 2010 to 2016 than before from 1999 to 2009. However, researchers need to report full empirical contextual details of their studied cases in order to improve the generalizability of results and allow the future creation of stronger frameworks to drive the implementation of agile practices in GSD.
C1 [Vallon, Raoul] Stanford Univ, Ctr Design Res, 424 Panama Mall,Bldg 560, Stanford, CA 94305 USA.
   [Vallon, Raoul; Grechenig, Thomas] Vienna Univ Technol, Res Grp Ind Software, Wiedner Hauptstr 76-2, A-1040 Vienna, Austria.
   [da Silva Estacio, Bernardo Jose; Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Comp Sci Sch, Ave Ipiranga 6681, BR-90619900 Porto Alegre, RS, Brazil.
C3 Stanford University; Technische Universitat Wien; Pontificia
   Universidade Catolica Do Rio Grande Do Sul
RP Vallon, R (corresponding author), Vienna Univ Technol, Res Grp Ind Software, Wiedner Hauptstr 76-2, A-1040 Vienna, Austria.
EM raoul.vallon@inso.tuwien.ac.at; bernardo.estacio@acad.pucrs.br;
   rafaelp@pucrs.br; thomas.grechenig@inso.tuwien.ac.at
RI Harrison, Dylan/AFP-8142-2022
OI Da Silva Estacio, Bernardo Jose/0000-0002-1985-9048
FU Austrian Marshall Plan Foundation; PUCRS; ThoughtWorks
FX This research was partially funded by the Austrian Marshall Plan
   Foundation by providing a scholarship to the first author during his
   research visit at the Center for Design Research at Stanford University.
   This research is also partially funded by the agreement between PUCRS
   and ThoughtWorks. The third author also thanks CNPq.
CR Abran A., 2004, IEEE COMPUT SOC 2004
   Alsahli A., 2017, International Journal of Computer Science and Software Engineering, V6, P7
   Alzoubi YI, 2016, INFORM MANAGE-AMSTER, V53, P22, DOI 10.1016/j.im.2015.08.003
   [Anonymous], 2013, AGILE SOFTWARE DEV D
   Batra D, 2009, COMMUN ACM, V52, P143, DOI 10.1145/1562164.1562200
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   Beck K., 2000, EXTREME PROGRAMMING
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Conchuir Eoin O, 2009, Software Process: Improvement and Practice, V14, P201, DOI 10.1002/spip.417
   Dingsoyr T., 2012, A decade of agile methodologies: Towards explaining agile software development
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Monasor M. J., 2009, ADV SOFTW ENG, V2009, P14, DOI DOI 10.1155/2009/710971
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Raza B, 2013, COMM COM INF SC, V417, P126
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sengupta B., 2006, 28th International Conference on Software Engineering Proceedings, P731, DOI 10.1145/1134285.1134402
   Smite D, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P1
   Smite D., 2010, AGILITY TIME SPACE F
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Staffs Keele, 2007, Tech. Rep.
   Sutherland J, 2007, SYST SCI 2007 HICSS
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   VersionOne, 2013, 7 ANN STAT AG SURV
   VersionOne, 2017, 11 ANN STAT AG SURV
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Woodward E., 2010, A Practical Guide to Distributed Scrum (IBM.)
NR 31
TC 61
Z9 70
U1 4
U2 119
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 161
EP 180
DI 10.1016/j.infsof.2017.12.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200011
DA 2024-07-18
ER

PT J
AU Trubiani, C
   Bran, A
   van Hoorn, A
   Avritzer, A
   Knoche, H
AF Trubiani, Catia
   Bran, Alexander
   van Hoorn, Andre
   Avritzer, Alberto
   Knoche, Holger
TI Exploiting load testing and profiling for Performance Antipattern
   Detection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software performance engineering; Software performance antipatterns;
   Empirical data; Load testing and profiling
ID CODE
AB Context: The performance assessment of complex software systems is not a trivial task since it depends on the design, code, and execution environment. All these factors may affect the system quality and generate negative consequences, such as delays and system failures. The identification of bad practices leading to performance flaws is of key relevance to avoid expensive rework in redesign, reimplementation, and redeployment.
   Objective: The goal of this manuscript is to provide a systematic process, based on load testing and profiling data, to identify performance issues with runtime data. These performance issues represent an important source of knowledge as they are used to trigger the software refactoring process. Software characteristics and performance measurements are matched with well-known performance antipatterns to document common performance issues and their solutions.
   Method: We execute load testing based on the characteristics of collected operational profile, thus to produce representative workloads. Performance data from the system under test is collected using a profiler tool to create profiler snapshots and get performance hotspot reports. From such data, performance issues are identified and matched with the specification of antipatterns. Software refactorings are then applied to solve these performance antipatterns.
   Results: The approach has been applied to a real-world industrial case study and to a representative laboratory study. Experimental results demonstrate the effectiveness of our tool-supported approach that is able to automatically detect two performance antipatterns by exploiting the knowledge of domain experts. In addition, the software refactoring process achieves a significant performance gain at the operational stage in both case studies.
   Conclusion: Performance antipatterns can be used to effectively support the identification of performance issues from load testing and profiling data. The detection process triggers an antipattem-based software re factoring that in our two case studies results in a substantial performance improvement.
C1 [Trubiani, Catia] Gran Sasso Sci Inst, Laquila, AQ, Italy.
   [Bran, Alexander; van Hoorn, Andre] Univ Stuttgart, Stuttgart, Germany.
   [Knoche, Holger] Univ Kiel, Kiel, Germany.
C3 Gran Sasso Science Institute (GSSI); University of Stuttgart; University
   of Kiel
RP Trubiani, C (corresponding author), Gran Sasso Sci Inst, Laquila, AQ, Italy.
EM catia.trubiani@gssi.it
RI Trubiani, Catia/AAU-4040-2021
OI Trubiani, Catia/0000-0002-7675-6942
FU German Federal Ministry of Education and Research [01IS15004/diagnoseIT,
   01IS17010/ContinuITy]
FX We would like to thank the Guest Editors and all the three anonymous
   reviewers who provided constructive comments that helped us to
   considerably improve our paper. This work originated from the
   GI-Dagstuhl Seminar 16394 on Software Performance Engineering in the
   DevOps World, which took place in September 2016. This work has been
   partially supported by the German Federal Ministry of Education and
   Research (grant no. 01IS15004/diagnoseIT and 01IS17010/ContinuITy).
CR Aderaldo Carlos M., 2017, 2017 IEEE/ACM 1st International Workshop on Establishing the Community-Wide Infrastructure for Architecture-Based Software Engineering (ECASE). Proceedings, P8, DOI 10.1109/ECASE.2017.4
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Ambler SW, 2006, ADD-WES SIGNAT SER, P1
   [Anonymous], 2012, Non-functional requirements in software engineering
   Arcelli D., 2013, ELECT COMMUN EASST, V59, P1
   Avritzer A, 1996, SOFTWARE PRACT EXPER, V26, P613, DOI 10.1002/(SICI)1097-024X(199606)26:6<613::AID-SPE23>3.0.CO;2-5
   Avritzer A., 2005, PROC 5 INT WORKSHOP, P43
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   CALZAROSSA MC, 2015, ACM COMPUT SURV, V48, pNI581
   Cortellessa V., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P310, DOI 10.1109/WICSA-ECSA.212.51
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   De Sanctis M, 2017, INFORM SOFTWARE TECH, V83, P35, DOI 10.1016/j.infsof.2016.11.008
   Dig D., 2009, Proceedings of the 24th ACM SIGPLAN Conference Companion on Object Oriented Programming Systems Languages and Applications, P793
   Dig D, 2011, IEEE SOFTWARE, V28, P17, DOI 10.1109/MS.2011.1
   Dig D, 2009, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2009.5070539
   Dudney B., 2003, J2EE_AntiPatterns
   Flora Parminder, 2014, P 11 WORK C MIN SOFT, P232, DOI [DOI 10.1145/2597073.2597092EVENT-PLACE, 10.1145/2597073.2597092event-place:Hyderabad,India, DOI 10.1145/2597073.2597092EVENT-PLACE:HYDERABAD,INDIA]
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Franklin L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1287, DOI 10.1109/ICSE.2013.6606699
   GERLA M, 1980, IEEE T COMMUN, V28, P553, DOI 10.1109/TCOM.1980.1094691
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hallal HH, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P258
   Hamou-Lhadj A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P112, DOI 10.1109/CSMR.2005.46
   Heger Christoph, 2014, Computer Performance Engineering. 11th European Workshop, EPEW 2014. Proceedings: LNCS 8721, P104, DOI 10.1007/978-3-319-10885-8_8
   Heger C., 2017, P 8 ACMSPEC INT C PE, P429
   Heger C, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P185, DOI 10.1109/EDCC.2016.16
   Horky Vojtech, 2015, P 6 ACM SPEC INT C P, P289, DOI DOI 10.1145/2668930.2688051
   Hovemeyer D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P9, DOI 10.1145/1251535.1251537
   Hyttermann M., 2012, DEVOPS DEV
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Liu KN, 2015, LECT NOTES COMPUT SC, V9033, P316, DOI 10.1007/978-3-662-46675-9_21
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Mantyla M.V., 2006, P 2006 ACMIEEE INT S, P297
   Marzullo FP, 2008, STUD COMPUT INTELL, V131, P1
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mirandola R, 2012, IEEE INT C ENG COMP, P147, DOI 10.1109/ICECCS.2012.3
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Newman S., 2015, BUILDING MICROSERVIC
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Okur S, 2014, LECT NOTES COMPUT SC, V8586, P515
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Overbey J., 2005, Proceedings of the second international workshop on Software engineering for high performance computing system applications, P37, DOI DOI 10.1145/1145319.1145331
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Petry D. B., 2002, Proceedings of the 7th World Congress on Genetics Applied to Livestock Production, Montpellier, France, August, 2002. Session 19, P1
   Pinto G, 2017, IEEE INT CONF AUTOM, P765, DOI 10.1109/ASE.2017.8115687
   Pinto G, 2016, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSME.2016.34
   Radoi C, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P6212
   Radoi C, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729975
   Rieger M., 2007, P SOFTW EVOLUT, V2, P1
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Sambasivan R. R, 2011, P 8 USENIX C NETW SY, P43
   Smith C. U., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P127, DOI 10.1145/350391.350420
   Smith Connie U., 2003, 29 INT C COMP MEAS G, P717
   Smith Connie U., 2002, International Computer Measurement Group Conference
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   Tate B., 2003, BITTER EJB
   Tate BruceA., 2002, BITTER JAVA
   Trubiani C., 2017, PADPROF OPEN SOURCE
   Trubiani C, 2014, J SYST SOFTWARE, V95, P141, DOI 10.1016/j.jss.2014.03.081
   van Hoorn Andre, 2012, 3 JOINT WOSP SIPEW I, P247, DOI DOI 10.1145/2188286.2188326
   Vogele Christian, 2018, Softw Syst Model, V17, P443, DOI 10.1007/s10270-016-0566-5
   Waller Jan, 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [10.1145/2735399, 10.1145/2735399.2735416]
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Wert Alexander., 2014, Proceedings of the 10th International ACM Sigsoft Conference on Quality of Software Architectures, P3
   Weyuker EJ, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P152, DOI 10.1109/METRIC.2002.1011334
   Witten IH, 2011, MOR KAUF D, P1
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
NR 83
TC 31
Z9 33
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 329
EP 345
DI 10.1016/j.infsof.2017.11.016
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800025
DA 2024-07-18
ER

PT J
AU Mohamad, M
   Liebel, G
   Knauss, E
AF Mohamad, Mazen
   Liebel, Grischa
   Knauss, Eric
TI LoCo CoCo: Automatically constructing coordination and communication
   networks from model-based systems engineering data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systems engineering; Communication; Coordination; Requirements
   clarification; Empirical software engineering
AB Context: Communication and coordination are essential ingredients to successful requirements and software engineering. However, especially in large organisations, it is difficult to establish and maintain communication channels.
   Objective: In order to facilitate communication, we investigate automatic construction of social network models from existing requirements and systems engineering models.
   Method: We conducted a design science research study in three iterative cycles at a large automotive company, and evaluated the outcome based on 15 interviews with practitioners and a survey with 12 participants.
   Results: The resulting approach, denoted LoCo CoCo, automatically creates and visualises social networks based on selected systems engineering components of real-life, productive systems engineering models. Our results indicate that automatic construction and visualisation of social network models could be feasible and useful to overcome existing communication challenges.
   Conclusion: Despite a lack of quality in existing social data at the case company, practitioners found LoCo CoCo potentially helpful to overcome existing communication challenges. Additionally, the visualisation could trigger practitioners to keep their social data up to date. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Mohamad, Mazen; Liebel, Grischa; Knauss, Eric] Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
   [Liebel, Grischa; Knauss, Eric] Gothenburg Univ, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
C3 Chalmers University of Technology; University of Gothenburg
RP Liebel, G (corresponding author), Chalmers Univ Technol, Dept Comp Sci & Engn, Campus Lindholmen,Room 474 Jupiter, SE-41756 Gothenburg, Sweden.
EM mazenmhd@gmail.com; grischa@chalmers.se; eric.knauss@cse.gu.se
RI Harrison, Dylan/AFP-8142-2022; Liebel, Grischa/AAH-2721-2019
OI Liebel, Grischa/0000-0002-3884-815X; Mohamad, Mazen/0000-0002-3446-1265;
   Knauss, Eric/0000-0002-6631-872X
FU Swedish Institute scholarship
FX We would like to thank our industry contacts, as well as all
   practitioners participating in the evaluation of LoCo CoCo. This study
   has been conducted as a master thesis at Chalmers University of
   Technology. In this context, the first author has received financial
   support from a Swedish Institute scholarship.
CR [Anonymous], SWEXPL REF MAN
   [Anonymous], 2012, EXPERIMENTATION SOFT
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2013, Information Visualization: Perception for Design
   [Anonymous], 2004, AIS
   [Anonymous], THE SURVEY HDB
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   Cooper A., 2014, FACE ESSENTIALS INTE
   Cross R, 2002, CALIF MANAGE REV, V44, P25, DOI 10.2307/41166121
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian D, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P57, DOI 10.1007/978-3-642-10294-3_3
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Guzzi A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P527, DOI 10.1109/ICSM.2012.6405317
   Guzzi A, 2012, PROC INT CONF SOFTW, P1367, DOI 10.1109/ICSE.2012.6227246
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Liebel G, 2018, REQUIR ENG, V23, P145, DOI 10.1007/s00766-016-0261-7
   Lim SL, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1022, DOI 10.1145/1985793.1985983
   Lin CY, 2012, P IEEE, V100, P2759, DOI 10.1109/JPROC.2012.2203090
   McLeod L, 2011, EMPIR SOFTW ENG, V16, P430, DOI 10.1007/s10664-010-9153-5
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Otte E, 2002, J INF SCI, V28, P441, DOI 10.1177/016555150202800601
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Soo Ling Lim, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P239, DOI 10.1145/1810295.1810340
   Srivastava J., 2008, IEEE International Conference on Intelligence and Security Informatics (ISI'08), P33
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
NR 34
TC 1
Z9 1
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 179
EP 193
DI 10.1016/j.infsof.2017.08.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200012
DA 2024-07-18
ER

PT J
AU Franco-Bedoya, O
   Ameller, D
   Costal, D
   Franch, X
AF Franco-Bedoya, Oscar
   Ameller, David
   Costal, Dolors
   Franch, Xavier
TI Open source software ecosystems: A Systematic mapping
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystem; Open source software; Systematic mapping; Literature
   review; OSS; SECO; OSSECO
ID QUALITY; ARCHITECTURES; HEALTH
AB Context: Open source software (OSS) and software ecosystems (SECOs) are two consolidated research areas in software engineering. OSS influences the way organizations develop, acquire, use and commercialize software. SECOs have emerged as a paradigm to understand dynamics and heterogeneity in collaborative software development. For this reason, SECOs appear as a valid instrument to analyze OSS systems. However, there are few studies that blend both topics together.
   Objective: The purpose of this study is to evaluate the current state of the art in OSS ecosystems (OS-SECOs) research, specifically: (a) what the most relevant definitions related to OSSECOs are; (b) what the particularities of this type of SECO are; and (c) how the knowledge about OSSECO is represented.
   Method: We conducted a systematic mapping following recommended practices. We applied automatic and manual searches on different sources and used a rigorous method to elicit the keywords from the research questions and selection criteria to retrieve the final papers. As a result, 82 papers were selected and evaluated. Threats to validity were identified and mitigated whenever possible.
   Results: The analysis allowed us to answer the research questions. Most notably, we did the following: (a) identified 64 terms related to the OSSECO and arranged them into a taxonomy; (b) built a genealogical tree to understand the genesis of the OSSECO term from related definitions; (c) analyzed the available definitions of SECO in the context of OSS; and (d) classified the existing modelling and analysis techniques of OSSECOs.
   Conclusion: As a summary of the systematic mapping, we conclude that existing research on several topics related to OSSECOs is still scarce (e.g., modelling and analysis techniques, quality models, standard definitions, etc.). This situation calls for further investigation efforts on how organizations and OSS communities actually understand OSSECOs. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Franco-Bedoya, Oscar; Ameller, David; Costal, Dolors; Franch, Xavier] Univ Politecn Cataluna, Software & Serv Engn Grp, Barcelona, Spain.
   [Franco-Bedoya, Oscar] Univ Caldas, Manizales, Colombia.
C3 Universitat Politecnica de Catalunya; Universidad de Caldas
RP Franco-Bedoya, O (corresponding author), Univ Politecn Cataluna, Software & Serv Engn Grp, Barcelona, Spain.; Franco-Bedoya, O (corresponding author), Univ Caldas, Manizales, Colombia.
EM ohernan@essi.upc.edu; dameller@essi.upc.edu; dolors@essi.upc.edu;
   franch@essi.upc.edu
RI Franch, Xavier/A-8588-2008; Costal, Dolors/F-7862-2016
OI Costal, Dolors/0000-0002-7340-0414
FU RISCOSS project - EC 7th Framework Programme FF7 [318249]; Ministry of
   Economy and Competitiveness of the Spanish government [TIN2013-44641-P];
   Universidad Nacional de Colombia [CCE02-2013]
FX This work was developed between the years 2013 and 2016 and was
   supported by the RISCOSS project, which funded by the EC 7th Framework
   Programme FF7/2007-2013 under agreement number 318249. We would also
   like to thank the contribution of the EOSSAC project, which funded by
   the Ministry of Economy and Competitiveness of the Spanish government
   (TIN2013-44641-P). Oscar Franco-Bedoya has a grant from Universidad
   Nacional de Colombia grant no. CCE02-2013.
CR Aarnoutse F., 2014, P ECSAW 2014, P8
   Aarnoutse F., 2014, P ECSAW 2014, V8, P1
   Abbasi A., 2011, 2011 44 HAWAII INT C, P1
   Adewumi A, 2013, IERI PROC, V4, P88, DOI 10.1016/j.ieri.2013.11.014
   Ågerfalk PJ, 2008, MIS QUART, V32, P385
   ALSPAUGH TA, 2009, 1 INT WORKSH SOFTW E, P4
   Alves AM, 2011, COMM COM INF SC, V155, P145
   Ameller D, 2015, INFORM SOFTWARE TECH, V62, P42, DOI 10.1016/j.infsof.2015.02.006
   [Anonymous], NETWORK ANAL PLATFOR
   [Anonymous], 2010, J COMPUTER MEDIA TEL
   [Anonymous], 2011, IWSECO@ ICSOB
   [Anonymous], 2010, P RIAO PAR FRANC
   [Anonymous], 2011, P VISSOFT 2011 6 INT
   [Anonymous], 2011, P WORKSH SOFTW EC
   [Anonymous], THESIS
   [Anonymous], 2011, P 3 INT WORKSHOP SOF
   [Anonymous], 2007, Emerging Free and Open Source Software Practices, P238
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Aversano L, 2011, LECT NOTES BUS INF P, V73, P119
   Axelsson J, 2016, J SYST SOFTWARE, V114, P69, DOI 10.1016/j.jss.2015.12.020
   Barbosa O., 2013, SYSTEMATIC MAPPING S, VI, P59
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Bettenburg Nicolas., 2013, Empirical Software Engineering, P1
   Bosch J., 2012, 34 ICSE
   Bosch J, 2014, LECT NOTES BUS INF P, V182, P179
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Briscoe G., 2009, THESIS
   Buford J., 2011, IEEE 5 INT C INT MUL, P1
   Cardoso J. L., 2015, P 7 MEDES, P193
   Cataldo Marcelo., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P65
   Chen WS, 2004, INFORM SYST J, V14, P197, DOI 10.1111/j.1365-2575.2004.00173.x
   Cheong F., 2009, SOC AN COA NETW PAC, P1
   Christensen HB, 2014, INFORM SOFTWARE TECH, V56, P1476, DOI 10.1016/j.infsof.2014.05.002
   Costal D., 2015, P 8 WORKSH ISTAR, P19
   Dai Naci, 2011, P 16 ETFA, P1
   Darking M., 2006, P 14 ECIS AISEL
   Davies Mark, 2015, CORPUS CONT AM ENGLI
   den Hartigh E., 2013, JANSEN, P221
   den Hartigh E, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P221
   Dhungana I., 2010, 4 EUR C SOFTW ARCHIT, P96
   Draxler S, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P57
   Draxler S, 2011, COMPUT SUPP COOP W J, V20, P403, DOI 10.1007/s10606-011-9148-9
   Driver M., 2013, TECHNICAL REPORT
   Eckhardt E., 2014, P ECSAW, P7
   Eclipse Foundation, 2015, ECL COMM
   Economides N., 2006, EC OPEN SOURCE SOFTW, P207, DOI DOI 10.1016/B978-044452769-1/50010-X
   Eklund U, 2014, J SYST SOFTWARE, V92, P128, DOI 10.1016/j.jss.2014.01.009
   Fagerholm F, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2013), P5, DOI 10.1109/ICGSEW.2013.8
   Feinerer Ingo., 2015, Introduction to the tm Package Text Mining in R. 2013‐12‐01
   Figay N., 2009, Proceedings of the 2009 Fifth International Conference on Signal-Image Technology & Internet-Based Systems (SITIS 2009), P435, DOI 10.1109/SITIS.2009.74
   Fotrousi F, 2014, LECT NOTES BUS INF P, V182, P194
   Foulonneau M., 2013, P 5 MEDES, P340
   Franco-Bedoya Oscar, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P209
   Gamalielsson J, 2011, IFIP ADV INF COMM TE, V365, P348
   Gamalielsson J, 2010, IFIP ADV INF COMM TE, V319, P85
   Gentleman R., 2015, R PROJECT STAT COMPU
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Goeminne M., 2010, IWPSE-EVOL '10, P42, DOI DOI 10.1145/1862372.1862384
   Goeminne M, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P247
   Goeminne M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P473, DOI 10.1109/CSMR-WCRE.2014.6747221
   Goeminne M, 2013, IEEE WORK CONF MIN S, P225, DOI 10.1109/MSR.2013.6624032
   Golbeck J., 2013, Analyzing the Social Web, DOI [10.1016/C2012-0-00171-8, DOI 10.1016/C2012-0-00171-8]
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gurbani VK, 2010, COMMUN ACM, V53, P155, DOI 10.1145/1646353.1646392
   Handoyo E., 2013, P 5 INT C MANAGEMENT, P17
   Handoyo E, 2013, LECT NOTES BUS INF P, V150, P212
   Hanssen GK, 2012, 4 INT WORKSH SOFTW E, P6
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Hoving R, 2013, I C DIGIT ECOSYST TE, P13, DOI 10.1109/DEST.2013.6611322
   Iansiti M, 2004, HARVARD BUS REV, V82, P68
   Iansiti Marco, 2004, The keystone advantage: What the new dynamics of business ecosystems mean for strategy, innovation, and sustainability
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   Jansen S., 2015, P ECSAW ECSAW 15, P44
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P159
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P187
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P13
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Joshua J., 2013, INT J ADV COMPUT SCI, V4
   Kabbedijk J, 2011, LECT NOTES BUS INF P, V80, P44
   Kamei Y, 2008, INT FED INFO PROC, V275, P81
   Kapitsaki GM, 2015, J SYST SOFTWARE, V102, P72, DOI 10.1016/j.jss.2014.12.050
   Kenett RS, 2014, P INT COMP SOFTW APP, P171, DOI 10.1109/COMPSAC.2014.25
   Kilamo T, 2012, J SYST SOFTWARE, V85, P1467, DOI 10.1016/j.jss.2011.06.071
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Li W., 2010, P ICEIT, V2
   Li Y, 2013, DECIS SUPPORT SYST, V56, P56, DOI 10.1016/j.dss.2013.05.006
   Liguo Yu, 2012, INFOCOMP Journal of Computer Science, V11, P22
   Liguo Yu, 2008, IT Professional, V10, P56, DOI 10.1109/MITP.2008.94
   López L, 2015, DATA KNOWL ENG, V99, P17, DOI 10.1016/j.datak.2015.06.007
   Lucassen G, 2013, LECT NOTES BUS INF P, V150, P183
   Lungu M, 2010, SCI COMPUT PROGRAM, V75, P264, DOI 10.1016/j.scico.2009.09.004
   Lungu M, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P103, DOI 10.1109/MSR.2009.5069487
   Lungu M, 2008, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSM.2008.4658096
   Manikas K, 2016, LECT NOTES BUS INF P, V240, P63, DOI 10.1007/978-3-319-40515-5_5
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Manikas Konstantinos, 2013, P 5 INT WORKSH SOFTW, P33
   Mattmann CA, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P687, DOI 10.1109/IRI.2012.6303076
   Mens T., SEREBRENIK STUDYING, V1, P297
   Mens T., 2014, STUDYING EVOLVING SO, P297, DOI [10.1007/978-3-642-45398-4_10, DOI 10.1007/978-3-642-45398-4_10]
   Mens T, 2011, EUR CON SFTWR MTNCE, P351, DOI 10.1109/CSMR.2011.50
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P1
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mizushima K., 2011, P TECHN MAN EN SMART, P1
   Montesi M, 2008, J SYST SOFTWARE, V81, P1694, DOI 10.1016/j.jss.2007.11.723
   MOORE JF, 1993, HARVARD BUS REV, V71, P75
   Morgan L, 2013, EUR J INFORM SYST, V22, P569, DOI 10.1057/ejis.2012.44
   Nachira F., NETWORK DIGITAL BUSI, P1
   Nachira F., 2002, TECHNICAL REPORT
   Narang T., 2015, P 3 ICETESMA, P153
   Newman MEJ, 2001, PHYS REV E, V64, DOI [10.1103/PhysRevE.64.016132, 10.1103/PhysRevE.64.016131]
   Olsson U., 2009, P 13 ICIN, P1
   Orucevic-Alagic A, 2014, EUROMICRO CONF PROC, P25, DOI 10.1109/SEAA.2014.50
   Page L., 1999, 199966 STANDF INF
   Patrick M, 2014, IEEE ICST WORKSHOP, P186, DOI 10.1109/ICSTW.2014.18
   Pérez J, 2012, EUR CON SFTWR MTNCE, P527, DOI 10.1109/CSMR.2012.69
   Petersen K., 2008, P 12 EASE, P68
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rayson P., 2004, 7 INT C STAT AN TEXT
   Riehle D, 2007, COMPUTER, V40, P25, DOI 10.1109/MC.2007.147
   Ruiz F., 2012, NOVATICA, V85, P54
   Sadi M.H., 2015, ENTERPRISE BUSINESS, P360, DOI DOI 10.1007/978-3-319-19237-6_23
   Salinas J., 2009, The European Journal for the Informatics Professional, VX, P43
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Samuelson P, 2006, COMMUN ACM, V49, P21, DOI 10.1145/1164394.1164412
   Santos C. M. L., 2011, 3RDINTWORKSHOPSOFTWE, V746, P40
   Scacchi W., 2007, PAPER PRESENTED EURO, P459, DOI [DOI 10.1145/1287624.1287689, 10.1145/1287624.1287689.]
   Scacchi W, 2012, J SYST SOFTWARE, V85, P1479, DOI 10.1016/j.jss.2012.03.033
   SCIMago, 2007, J COUNTRY RANK SCIM
   Scott M, 2006, STUD CORPUS LINGUIST, V22, P1
   Scott M., 1997, SYSTEM, V25, P233, DOI DOI 10.1016/S0346-251X(97)00011-0
   Shao JH, 2012, T GIS, V16, P581, DOI 10.1111/j.1467-9671.2012.01305.x
   Smith M., 2014, NODEXL NETWORK OVERV
   Sowe S., 2013, P ITU K, P1
   Spauwen R., 2013, P 5 IWSECO, P62
   Squire M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3416, DOI 10.1109/HICSS.2012.197
   Stevens G, 2010, PROCEEDINGS OF COOP 2010, P287, DOI 10.1007/978-1-84996-211-7_16
   Syed S., 2013, P 5 INT WORKSHOP SOF, V987, P19
   Syeed M. M. M., 2014, P OP OP 14, P2
   Taljard E., 2002, LEXIKOS, V12
   Tansley AG, 1935, ECOLOGY, V16, P284, DOI 10.2307/1930070
   Teixeira J, 2014, SIGMIS-CPR'14: PROCEEDINGS OF THE 2014 CONFERENCE ON COMPUTERS AND PEOPLE RESEARCH, P121, DOI 10.1145/2599990.2600009
   Teixeira J, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0028-2
   Tourani P., 2014, P 24 CASCON
   Uden Lorna, 2007, 2007 Inaugural IEEE International Conference on Digital Ecosystems and Technologies, P223, DOI 10.1109/DEST.2007.371974
   Van Lingen Sonny., 2013, 5th International Workshop on Software Ecosystems IWSECO 2013, P38
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Ververs Eric, 2011, P INT C MANAGEMENT E, P89
   Viljainen M, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P121
   Weber Steve, 2004, The Success of Open Source, DOI DOI 10.4159/9780674044999
   Weiss M., 2011, P 15 SPLC, P39
   Wohlin C., 2012, Experimentation in Software Engineering
   Wynn D., 2008, EMPIR SOFTW ENG
   Wynn D., 2008, P ECIS AISEL
   Yamakami T., 2011, Proceedings of the 2011 13th International Conference on Advanced Communication Technology (ICACT). Smart Service Innovation through Mobile Interactivity, P1190
   Yu Eric., 2011, Proceedings of the 3rd International Workshop on Software Ecosystems (IWSECO 2011), P65
   Yu LG, 2007, THIRD INTERNATIONAL IEEE WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P75, DOI 10.1109/SE.2007.8
   Yu LG, 2013, IT PROF, V15, P46, DOI 10.1109/MITP.2012.102
NR 162
TC 55
Z9 60
U1 1
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 160
EP 185
DI 10.1016/j.infsof.2017.07.007
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FG3DV
UT WOS:000410017900010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nadal, S
   Herrero, V
   Romero, O
   Abelló, A
   Franch, X
   Vansummeren, S
   Valerio, D
AF Nadal, Sergi
   Herrero, Victor
   Romero, Oscar
   Abello, Alberto
   Franch, Xavier
   Vansummeren, Stijn
   Valerio, Danilo
TI A software reference architecture for semantic-aware Big Data systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Big Data; Software reference architecture; Semantic-aware; Data
   management; Data analysis
ID MODEL; TECHNOLOGIES; MANAGEMENT; QUALITY
AB Context: Big Data systems are a class of software systems that ingest, store, process and serve massive amounts of heterogeneous data, from multiple sources. Despite their undisputed impact in current society, their engineering is still in its infancy and companies find it difficult to adopt them due to their inherent complexity. Existing attempts to provide architectural guidelines for their engineering fail to take into account important Big Data characteristics, such as the management, evolution and quality of the data.
   Objective: In this paper, we follow software engineering principles to refine the lambda-architecture, a reference model for Big Data systems, and use it as seed to create Bolster, a software reference architecture (SRA) for semantic-aware Big Data systems.
   Method: By including a new layer into the lambda-architecture, the Semantic Layer, Bolster is capable of handling the most representative Big Data characteristics (i.e., Volume, Velocity, Variety, Variability and Veracity).
   Results: We present the successful implementation of Bolster in three industrial projects, involving five organizations. The validation results show high level of agreement among practitioners from all organizations with respect to standard quality factors.
   Conclusion: As an SRA, Bolster allows organizations to design concrete architectures tailored to their specific needs. A distinguishing feature is that it provides semantic-awareness in Big Data Systems. These are Big Data system implementations that have components to simplify data definition and exploitation. In particular, they leverage metadata (i.e., data describing data) to enable (partial) automation of data exploitation and to aid the user in their decision making processes. This simplification supports the differentiation of responsibilities into cohesive roles enhancing data governance. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Nadal, Sergi; Herrero, Victor; Romero, Oscar; Abello, Alberto; Franch, Xavier] Univ Politecn Cataluna, BarcelonaTech, Barcelona, Spain.
   [Vansummeren, Stijn] Univ Libre Bruxelles, Brussels, Belgium.
   [Valerio, Danilo] Siemens AG Osterreich, Corp Res & Technol, Salzburg, Austria.
C3 Universitat Politecnica de Catalunya; Universite Libre de Bruxelles;
   Siemens AG
RP Nadal, S (corresponding author), UPC, Dept ESSI, Campus Nord Omega 125,C Jordi Girona Salgado 1-3, Barcelona 08034, Spain.
EM snadal@essi.upc.edu; vherrero@essi.upc.edu; oromero@essi.upc.edu;
   aabello@essi.upc.edu; franch@essi.upc.edu; stijn.vansummeren@ulb.ac.be;
   danilo.valerio@siemens.com
RI Franch, Xavier/A-8588-2008; Abello, Alberto/H-5357-2016; Romero,
   Oscar/D-5504-2012; Nadal, Sergi/AAB-7223-2021
OI Romero, Oscar/0000-0001-6350-8328; Nadal, Sergi/0000-0002-8565-952X
FU H SUPERSEDE project - EU Information and Communication Technologies
   Programme [644018]; GENESIS project - Spanish Ministerio de Ciencia e
   Innovacion [TIN2016-79269-R]
FX We thank Gerhard Engelbrecht for his assistance in setting up the
   validation process, and Silverio Martinez for his comments and insights
   that helped to improve this paper. This work was partly supported by the
   H2020 SUPERSEDE project, funded by the EU Information and Communication
   Technologies Programme under grant agreement no. 644018, and the GENESIS
   project, funded by the Spanish Ministerio de Ciencia e Innovacion under
   project TIN2016-79269-R.
CR Agrawal D., 2011, EDBT 2011
   Alsubaiee S, 2014, PROC VLDB ENDOW, V7, P1905, DOI 10.14778/2733085.2733096
   Angelov S, 2012, INFORM SOFTWARE TECH, V54, P417, DOI 10.1016/j.infsof.2011.11.009
   [Anonymous], 2009, Database Systems: The Complete Book
   [Anonymous], 2011, IEC250102011 ISO
   Aufaure M., 2013, ER 2013
   Babcock B., 2002, PODS 2002
   Batini C, 2015, J DATABASE MANAGE, V26, P60, DOI 10.4018/JDM.2015010103
   Behkamal B, 2009, INFORM SOFTWARE TECH, V51, P599, DOI 10.1016/j.infsof.2008.08.001
   Bilalli B, 2016, IOTBD: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET OF THINGS AND BIG DATA, P331, DOI 10.5220/0005876203310338
   Brewer E.A., 2000, PODC 2000
   Chen CLP, 2014, INFORM SCIENCES, V275, P314, DOI 10.1016/j.ins.2014.01.015
   Danh LP, 2012, J WEB SEMANT, V16, P42, DOI 10.1016/j.websem.2012.06.003
   Esteban D., 2016, EC WORKSH EUR COMM
   Fernandez R, 2015, CIDR 2015
   Fox G., 2015, NIST SPECIAL PUBLICA, V3, P1500
   Galster M., 2011, JOINT ACM SIGSOFT C, P153, DOI DOI 10.1145/2000259.2000285
   Gani A, 2016, KNOWL INF SYST, V46, P241, DOI 10.1007/s10115-015-0830-y
   García S, 2016, J SYST SOFTWARE, V117, P488, DOI 10.1016/j.jss.2016.03.046
   Geerdink B., 2015, International Journal of Big Data Intelligence, P236
   Giacometti A., 2008, DOLAP 2008
   Gorton I, 2015, IEEE SOFTWARE, V32, P78, DOI 10.1109/MS.2014.51
   Grady N.W., 2014, NIST BIG DAT PUBL WO
   Gray J, 2005, SIGMOD RECORD, V34, P34, DOI 10.1145/1107499.1107503
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Guo KH, 2015, J SYST SOFTWARE, V102, P207, DOI 10.1016/j.jss.2014.09.016
   Harry M., 2005, 6 SIGMA BREAKTHROUGH
   Herrero V, 2016, LECT NOTES COMPUT SC, V9974, P50, DOI 10.1007/978-3-319-46397-1_4
   Interlandi M, 2015, PROC VLDB ENDOW, V9, P216
   Jagadish HV, 2014, COMMUN ACM, V57, P86, DOI 10.1145/2611567
   Jovanovic P., 2015, EDBT 2015
   Kephart J., 2007, ARCHITECTURAL BLUEPR
   Khatri V, 2010, COMMUN ACM, V53, P148, DOI 10.1145/1629175.1629210
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kontio J, 1996, PROC INT CONF SOFTW, P201, DOI 10.1109/ICSE.1996.493416
   Kross J., 2015, EPEW 2015
   Liu F., 2012, NIST CLOUD COMPUTING
   lonescu B., 2014, SOFA 2014
   Madhavji N.H., 2015, BIGDSE 2015
   Martinez-Fernandez S., 2015, WASA 2015
   Martínez-Prieto MA, 2015, FUTURE GENER COMP SY, V47, P62, DOI 10.1016/j.future.2014.10.016
   Martins C., 2015, WORLD CIST 2015
   Marz N., 2015, Big Data: Principles and Best Practices of Scalable Realtime Data Systems
   Meijer E, 2011, COMMUN ACM, V54, P49, DOI 10.1145/1924421.1924436
   Moreau L, 2011, FUTURE GENER COMP SY, V27, P743, DOI 10.1016/j.future.2010.07.005
   Munir RF, 2016, LECT NOTES COMPUT SC, V9893, P42, DOI 10.1007/978-3-319-45547-1_4
   Nadal S., 2017, DOLAP 2017
   Nadal S., 2016, DETAILS BOLSTER STAT
   Ordonez C, 2010, IEEE T KNOWL DATA EN, V22, P1752, DOI 10.1109/TKDE.2010.44
   Özsu MT, 2011, PRINCIPLES OF DISTRIBUTED DATABASE SYSTEMS, THIRD EDITION, P1, DOI 10.1007/978-1-4419-8834-8_1
   Pääkkönen P, 2015, BIG DATA RES, V2, P166, DOI 10.1016/j.bdr.2015.01.001
   Panov P., 2008, ICDM 2008
   Qanbari S., 2014, IEEE BIG DATA 2014
   Russom P., 2011, BIG DATA ANAL, P6
   Sharda R., 2013, BUSINESS ANAL RES TE
   Song J, 2015, J SYST SOFTWARE, V102, P167, DOI 10.1016/j.jss.2014.09.024
   Stonebraker M., 2014, WHY DATA LAKE IS REA
   Stonebraker M., 2012, WHAT DOES BIG DATA M
   Terrizzano I.G., 2015, CIDR 2015
   Tsai Chun-Wei, 2015, Journal of Big Data, P1, DOI [DOI 10.1186/S40537-015-0030-3, 10.1186/s40537-015-0030-3]
   Twardowski B., 2014, IEEE WIC ACM 2014
   Vanhove T., 2015, ICDCS 2015
   Varga J., 2014, DAWAK 2014
   Villari M., 2014, SMARTCOMP 2014
   Wang Y., 2015, HICSS 2015
   Weyrich M, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.20
   Xie Z., 2015, ACM IEEE CE 2015
   Yang F., 2015, RADSTACK OPEN SOURCE
   Zeng K, 2013, PROC VLDB ENDOW, V6, P265, DOI 10.14778/2535570.2488333
   Zhang R., 2015, P BPOE, P25
   Zhuang YT, 2016, FRONT COMPUT SCI-CHI, V10, P353, DOI 10.1007/s11704-015-5045-6
NR 71
TC 41
Z9 43
U1 1
U2 52
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2017
VL 90
BP 75
EP 92
DI 10.1016/j.infsof.2017.06.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ9JK
UT WOS:000405046400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU van Hees, R
   Hage, J
AF van Hees, Rinse
   Hage, Jurriaan
TI Stable and predictable Voronoi treemaps for software quality monitoring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software visualization; Voronoi diagrams; Hilbert curves; Software
   quality monitoring; Stable Voronoi treemaps
AB Context: Voronoi treemaps can be used to effectively visualize software quality attributes of a given software system. Algorithms for computing Voronoi treemaps are non-deterministic making them unsuited for monitoring the development of such attributes over time.
   Objective: We adapt an existing sweep line algorithm to efficiently compute Voronoi treemaps and we introduce a novel algorithm that adds stability and predictability.
   Method: We introduce stable and predictable Voronoi treemaps based on additively weighted power Voronoi diagrams. We employ scaled Hilbert curves to place Voronoi sites in the plane, retaining the order in which sites are placed along the curve for easy comparison with revisions of the same software system.
   Results: Our algorithm achieves a predictable first good approximation of the final location of the sites. We show that our algorithm not only provides more stability, but also that because of better placement it needs fewer iterations to compute its result. As part of our implementation we introduce a visualization to show the difference between two versions of a software system. We also present a small case study in which we use a web based application that implements our work to investigate the usefulness of stability and predictability of visualizations.
   Conclusion: It is possible to achieve stable and predictable visualizations of software system attributes, while, as a pleasant side effect, decreasing the number of iterations necessary to arrive at the visualization. (C) 2016 Elsevier B.V. All rights reserved.
C1 [van Hees, Rinse; Hage, Jurriaan] Univ Utrecht, Dept Informat & Comp Sci, Princetonpl 5, NL-3584 CC Utrecht, Netherlands.
C3 Utrecht University
RP van Hees, R; Hage, J (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, Princetonpl 5, NL-3584 CC Utrecht, Netherlands.
EM rvanhees@pubpres.net; J.Hage@uu.nl
CR [Anonymous], 2002, Hacker's Delight
   [Anonymous], 2005, Proceedings of the 2005 ACM symposium on Software visualization, DOI DOI 10.1145/1056018.1056041
   [Anonymous], 2013, 2013 1 IEEE WORKING
   Apache Software Foundation, AP JACKR
   Benomar O., 2013, P WORK C SOFTW VIS, P1
   Berg M., 2008, COMPUTATIONAL GEOMET, V3rd, DOI DOI 10.1007/978-3-540-77974-2
   Bruls M., 2000, SQUARIFIED TREEMAPS
   Cornelissen B, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P213
   Deza, 2006, DICT DISTANCES
   FORTUNE S, 1987, ALGORITHMICA, V2, P153, DOI 10.1007/BF01840357
   Gestwicki P., 2005, P 2005 ACM S SOFTWAR, P95
   Gîrba T, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P2, DOI 10.1109/CSMR.2005.15
   Hahn S., 2014, P 5 INT C INF VIS TH
   HOLTEN D, 2006, P IEEE S INF VIS IEE
   Kula RG, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P127, DOI 10.1109/VISSOFT.2014.29
   Langelier G, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P13, DOI 10.1109/VLHCC.2008.4639052
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Noack A., 2005, SoftVis '05: Proceedings of the 2005 ACM symposium on Software visualization, P155, DOI [10.1145/1056018.1056040, DOI 10.1145/1056018.1056040]
   Nocaj A, 2012, COMPUT GRAPH FORUM, V31, P855, DOI 10.1111/j.1467-8659.2012.03078.x
   Pinzger Martin., 2005, SOFTVIS 05, P67
   Raemaekers S., 2013, MAVEN DEPENDENCY DAT, DOI [10.4121/uuid:68a0e837-4fda-407a-949e-a159546e67b6, DOI 10.4121/UUID:68A0E837-4FDA-407A-949E-A159546E67B6.]
   SHNEIDERMAN B, 1992, ACM T GRAPHIC, V11, P92, DOI 10.1145/102377.115768
   Shneiderman B, 2001, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION 2001, PROCEEDINGS, P73, DOI 10.1109/INFVIS.2001.963283
   SonarQube, SON ONL DEM INST AP
   Steinbrfickner F., 2012, CONSISTENT SOFTWARE
   Steinbrückner F, 2013, INFORM VISUAL, V12, P200, DOI 10.1177/1473871612438785
   Storey M.-A., 2001, P 9 INT WORKSH PROGR
   Telea A., 2002, P 10 INT WORKSH PROG
   van Hees R., 2014, STABLE VORONOI TREEM
   van Hees R, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P6, DOI 10.1109/VISSOFT.2015.7332410
   Van Wijk J. J., 1999, Proceedings 1999 IEEE Symposium on Information Visualization (InfoVis'99), P73, DOI 10.1109/INFVIS.1999.801860
   Voinea L, 2007, COMPUT GRAPH-UK, V31, P410, DOI 10.1016/j.cag.2007.01.031
   Wang Q., 2003, P 2003 ACM S SOFTW V
   Wattenberg M., 1999, CHI 99 HUM FACT COMP, P188, DOI DOI 10.1145/632716.632834
NR 34
TC 7
Z9 7
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 242
EP 258
DI 10.1016/j.infsof.2016.10.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300016
OA Green Published
DA 2024-07-18
ER

PT J
AU Gong, DW
   Zhang, GJ
   Yao, XJ
   Meng, FL
AF Gong, Dunwei
   Zhang, Gongjie
   Yao, Xiangjuan
   Meng, Fanlin
TI Mutant reduction based on dominance relation for weak mutation testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Weak mutation testing; Mutant; Reduction; Dominance
   relation
ID DATA-FLOW
AB Context: As a fault-based testing technique, mutation testing is effective at evaluating the quality of existing test suites. However, a large number of mutants result in the high computational cost in mutation testing. As a result, mutant reduction is of great importance to improve the efficiency of mutation testing.
   Objective: We aim to reduce mutants for weak mutation testing based on the dominance relation between mutant branches.
   Method: In our method, a new program is formed by inserting mutant branches into the original program. By analyzing the dominance relation between mutant branches in the new program, the non dominated one is obtained, and the mutant corresponding to the non-dominated mutant branch is the mutant after reduction.
   Results: The proposed method is applied to test ten benchmark programs and six classes from open source projects. The experimental results show that our method reduces over 80% mutants on average, which greatly improves the efficiency of mutation testing.
   Conclusion: We conclude that dominance relation between mutant branches is very important and useful in reducing mutants for mutation testing. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Gong, Dunwei] China Univ Min & Technol, Sch Informat & Elect Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Gong, Dunwei] LanZhou Univ Technol, Sch Elect Engn & Informat Engn, Lanzhou 730050, Gansu, Peoples R China.
   [Zhang, Gongjie] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
   [Yao, Xiangjuan] China Univ Min & Technol, Sch Sci, Xuzhou 221116, Jiangsu, Peoples R China.
   [Zhang, Gongjie] Jiangsu Normal Univ, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
   [Meng, Fanlin] Univ Loughborough, Dept Aeronaut & Automot Engn, Loughborough LE11 3TU, Leics, England.
C3 China University of Mining & Technology; Lanzhou University of
   Technology; China University of Mining & Technology; China University of
   Mining & Technology; Jiangsu Normal University; Loughborough University
RP Zhang, GJ (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.; Zhang, GJ (corresponding author), Jiangsu Normal Univ, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
EM dwgong@vip.163.com; zhanggongjie@126.com
OI Meng, Fanlin/0000-0002-4866-0011
FU National Natural Science Foundation of China [61375067, 61203304];
   Natural Science Foundation of Jiangsu Province [BK2012566]
FX This work is jointly supported by National Natural Science Foundation of
   China (No. 61375067 and 61203304), Natural Science Foundation of Jiangsu
   Province (No. BK2012566). We would like to thank Dr. Edward C. Mignot
   (the formerly Professor of Shandong University) for polishing this
   paper.
CR Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2015, 2015 IEEE 8 INT C SO
   [Anonymous], 1980, THESIS
   [Anonymous], 1980, Order No. 8025191
   BERTOLINO A, 1994, IEEE T SOFTWARE ENG, V20, P885, DOI 10.1109/32.368137
   Bondy J. A., 1976, GRAPH THEORY APPL, V290
   Chen Jin-Fu, 2009, Journal of Software, V20, P1425, DOI 10.3724/SP.J.1001.2009.03526
   Demillo R. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P109, DOI 10.1145/151257.151258
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Ghiduk AS, 2010, INFORM-J COMPUT INFO, V34, P377
   Gong D, 2010, IET SOFTW, V4, P361, DOI 10.1049/iet-sen.2009.0092
   Gong D., 2013, ABSTRACT 2 CHINESE S, P14
   Horgan J.R., 1993, TECHNICAL REPORT
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Hussain S., 2008, THESIS
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R., 2013, P DAGSTUHL SEMINAR
   Kaminski G., 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P57, DOI [10.1145/1982595.1982608, DOI 10.1145/1982595.1982608]
   Kintis M, 2014, IEEE ICST WORKSHOP, P196, DOI 10.1109/ICSTW.2014.21
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kurtz B, 2014, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2014.20
   Lammermann F, 2008, APPL SOFT COMPUT, V8, P1018, DOI 10.1016/j.asoc.2006.06.010
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Lau MF, 2005, ACM T SOFTW ENG METH, V14, P247, DOI 10.1145/1072997.1072998
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   Mathur A. P., 1993, TECHNICAL REPORT
   McMinn P, 2005, THESIS
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A., 1991, Proceedings of the symposium on Testing, analysis, and verification, P200
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Segura S., 2007, INFORM SOFTW TECHNOL, V53, P245
   Shan Jin-Hui, 2008, Chinese Journal of Computers, V31, P1025, DOI 10.3724/SP.J.1016.2008.01025
   Smith BH, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P193, DOI 10.1109/TAIC.PART.2007.12
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang L., 2010, P IEEE INT C SOFTW M, P12
NR 54
TC 30
Z9 35
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 82
EP 96
DI 10.1016/j.infsof.2016.05.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Weinreich, R
   Groher, I
AF Weinreich, Rainer
   Groher, Iris
TI Software architecture knowledge management approaches and their support
   for knowledge management activities: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software architecture; Software architecture knowledge management;
   Software architecture knowledge management activities; Software
   architecture knowledge management approaches; Systematic literature
   review
ID DOCUMENTATION; DECISIONS; FUTURE
AB Context: Numerous approaches for Software Architecture Knowledge Management (SAKM) have been developed by the research community over the last decade. Still, these approaches have not yet found widespread use in practice.
   Objective: This work identifies existing approaches to SAKM and analyzes them in terms of their support for central architecture knowledge management activities, i.e., capturing, using, maintaining, sharing, and reuse of architectural knowledge, along with presenting the evidence provided for this support.
   Method: A systematic literature review has been conducted for identifying and analyzing SAKM approaches, covering work published between January 2004 and August 2015. We identified 56 different approaches to SAKM based on 115 studies. We analyzed each approach in terms of its focus and support for important architecture knowledge management activities and in terms of the provided level of evidence for each supported activity.
   Results: Most of the developed approaches focus on using already-captured knowledge. Using is also the best-validated activity. The problem of efficient capturing is still not sufficiently addressed, and only a few approaches specifically address reuse, sharing, and, especially, maintaining.
   Conclusions: Without adequate support for other core architecture knowledge management activities besides using, the adoption of SAKM in practice will remain an elusive target. The problem of efficient capturing is still unsolved, as is the problem of maintaining captured knowledge over the long term. We also need more case studies and replication studies providing evidence for the usefulness of developed support for SAKM activities, as well as better reporting on these case studies. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Weinreich, Rainer; Groher, Iris] Johannes Kepler Univ Linz, Linz, Austria.
C3 Johannes Kepler University Linz
RP Weinreich, R (corresponding author), Johannes Kepler Univ Linz, Linz, Austria.
EM rainer.weinreich@jku.at; iris.groher@jku.at
OI Weinreich, Rainer/0009-0005-6475-7699; Groher, Iris/0000-0003-0905-6791
CR Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   [Anonymous], 3 INT WORKSH SHAR RE
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Clements P., 2003, SEI S SOFTW
   Dalkir K., 2011, KNOWLEDGE MANAGEMENT
   DAVENPORT TH, 1994, HARVARD BUS REV, V72, P119
   Ding W, 2014, IEEE INT C ENG COMP, P136, DOI 10.1109/ICECCS.2014.26
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Dingsoyr T, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P1, DOI 10.1007/978-3-642-02374-3_1
   Farenhorst R, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P21, DOI 10.1007/978-3-642-02374-3_2
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Groher I, 2015, P ANN HICSS, P5393, DOI 10.1109/HICSS.2015.634
   Hansen MT, 1999, HARVARD BUS REV, V77, P106
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Liang P, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P91, DOI 10.1007/978-3-642-02374-3_6
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Shahin M, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P293, DOI 10.1109/WICSA.2009.5290823
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   von Krogh G, 1998, CALIF MANAGE REV, V40, P133, DOI 10.2307/41165947
   Webster J, 2002, MIS QUART, V26, pXIII
   Weinreich R, 2015, FUTURE GENER COMP SY, V47, P145, DOI 10.1016/j.future.2014.12.002
   Weinreich R, 2014, LECT NOTES COMPUT SC, V8627, P1, DOI 10.1007/978-3-319-09970-5_1
   Weyns Danny, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P249, DOI 10.1007/978-3-642-39031-9_22
NR 33
TC 24
Z9 26
U1 1
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 265
EP 286
DI 10.1016/j.infsof.2016.09.007
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EA2GM
UT WOS:000386410800016
DA 2024-07-18
ER

PT J
AU Bass, JM
AF Bass, Julian M.
TI Artefacts and agile method tailoring in large-scale offshore software
   development programmes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Software development artefacts; Scrum;
   Large-scale; Enterprise; Offshore; Outsourced; Grounded theory; Process
   tailoring
ID BOUNDARY OBJECTS; GOVERNANCE FRAMEWORK; ARCHITECTURE; DESIGN
AB Context: Large-scale offshore software development programmes are complex, with challenging deadlines and a high risk of failure. Agile methods are being adopted, despite the challenges of coordinating multiple development teams. Agile processes are tailored to support team coordination. Artefacts are tangible products of the software development process, intended to ensure consistency in the approach of teams on the same development programme.
   Objective: This study aims to increase understanding of how development processes are tailored to meet the needs of large-scale offshore software development programmes, by focusing on artefact inventories used in the development process.
   Method: A grounded theory approach using 46 practitioner interviews, supplemented with documentary sources and observations, in nine international companies was adopted. The grounded theory concepts of open coding, memoing, constant comparison and saturation were used in data analysis.
   Results: The study has identified 25 artefacts, organised into five categories: feature, sprint, release, product and corporate governance. It was discovered that conventional agile artefacts are enriched with artefacts associated with plan-based methods in order to provide governance. The empirical evidence collected in the study has been used to identify a primary owner of each artefact and map each artefact to specific activities within each of the agile roles.
   Conclusion: The development programmes in this study create agile and plan-based artefacts to improve compliance with enterprise quality standards and technology strategies, whilst also mitigating risk of failure. Management of these additional artefacts is currently improvised because agile development processes lack corresponding ceremonies. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Bass, Julian M.] Univ Salford, Manchester, Lancs, England.
C3 University of Salford
RP Bass, JM (corresponding author), Univ Salford, Manchester, Lancs, England.
EM j.bass@salford.ac.uk
RI Bass, Julian Michael/B-2636-2010
OI Bass, Julian Michael/0000-0002-0570-7086
FU UK Deputy High Commission, Bangalore; Science and Innovation Network;
   Robert Gordon University, Aberdeen, UK
FX I am grateful to the companies and interviewees who participated in this
   research. Thanks also go to the students of the Executive MBA at the
   Indian Institute of Management, Bangalore; who facilitated access to
   several participating companies. The International Institute for IT,
   Bangalore provided hospitality during several research visits. The
   research benefited in part from travel funding from the UK Deputy High
   Commission, Bangalore; Science and Innovation Network; and Robert Gordon
   University, Aberdeen, UK. Accommodation and sustenance was provided by
   Company H during the data collection visit to Delhi, India.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Ambler SW, 2008, LECT NOTES COMPUT SC, V5082, P1
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], AGILEL GOOD HYPE UGL
   [Anonymous], QUALITATIVE DATA ANA
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   Balijepally V, 2009, MIS QUART, V33, P91
   Barrett M, 2010, HUM RELAT, V63, P1199, DOI 10.1177/0018726709355657
   Bass J. M., 2012, Proceedings of the 2012 AGILE India Conference, P1, DOI 10.1109/AgileIndia.2012.15
   Bass JM, 2015, EMPIR SOFTW ENG, V20, P1525, DOI 10.1007/s10664-014-9322-z
   Bass JM, 2014, INT CONF GLOBAL SOFT, P6, DOI 10.1109/ICGSE.2014.24
   Beck K., 2011, MANIFESTO AGILE SOFT
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Carlile PR, 2002, ORGAN SCI, V13, P442, DOI 10.1287/orsc.13.4.442.2953
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Cusumano MA, 2007, COMMUN ACM, V50, P15, DOI 10.1145/1290958.1290979
   de Cesare S, 2010, COMMUN ACM, V53, P126, DOI 10.1145/1743546.1743580
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T, 2014, LECT NOTES BUS INF P, V199, P1
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eckstein J, 2014, LECT NOTES BUS INF P, V199, P21
   Femmer H, 2014, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2014.9
   Fernández DM, 2012, INFORM SOFTWARE TECH, V54, P162, DOI 10.1016/j.infsof.2011.09.001
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Freudenberg S, 2010, IEEE SOFTWARE, V27, P8, DOI 10.1109/MS.2010.129
   Gal U, 2008, EUR J INFORM SYST, V17, P290, DOI 10.1057/ejis.2008.13
   Gasson S., 2004, HDB INFORM SYSTEMS R, P79
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Heikkilä VT, 2013, LECT NOTES BUS INF P, V149, P195
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Iorio J, 2014, INT J PROJ MANAG, V32, P7, DOI 10.1016/j.ijproman.2013.04.001
   Kalus G., 2013, Proceedings of the 2013 International Conference on Software and System Process, P171
   Kuhrmann M, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P11, DOI 10.1109/ICGSE.2013.11
   Larman C., 2008, Scaling Lean and Agile Development: Thinking and Organizational Tools for Large-Scale Scrum
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Lui KM, 2008, IEEE T SOFTWARE ENG, V34, P197, DOI 10.1109/TSE.2007.70755
   Martin A. M., 2009, THESIS VICTORIA U WE
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Robson C., 2002, Real World Research, V2nd
   Sahay S., 2003, GLOBAL IT OUTSOURCIN
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   Shull F, 2009, IEEE SOFTWARE, V26, P6, DOI 10.1109/MS.2009.145
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Vlietland J, 2016, J SYST SOFTWARE, V113, P418, DOI 10.1016/j.jss.2015.11.010
   Vlietland J, 2015, INFORM SOFTWARE TECH, V57, P52, DOI 10.1016/j.infsof.2014.08.008
   Wilkerson JW, 2012, IEEE T SOFTWARE ENG, V38, P547, DOI 10.1109/TSE.2011.46
   Xing ZC, 2005, IEEE T SOFTWARE ENG, V31, P850, DOI 10.1109/TSE.2005.106
   Yin R.K., 2014, Applications of case study research, V2nd
NR 57
TC 71
Z9 84
U1 2
U2 58
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 1
EP 16
DI 10.1016/j.infsof.2016.03.001
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DN1QI
UT WOS:000376840100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Di Martino, S
   Ferrucci, F
   Gravino, C
   Sarro, F
AF Di Martino, Sergio
   Ferrucci, Filomena
   Gravino, Carmine
   Sarro, Federica
TI Web Effort Estimation: Function Point Analysis vs. COSMIC
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web Effort Estimation; Functional Size Measures; COSMIC; IFPUG Function
   Point Analysis
ID COST ESTIMATION; EFFORT PREDICTION; EFFORT MODELS; REGRESSION; DESIGN;
   ACCURACY; SYSTEMS; CROSS
AB Context: software development effort estimation is a crucial management task that critically depends on the adopted size measure. Several Functional Size Measurement (FSM) methods have been proposed. COSMIC is considered a 2nd generation FSM method, to differentiate it from Function Point Analysis (FPA) and its variants, considered as 1st generation ones. In the context of Web applications, few investigations have been performed to compare the effectiveness of the two generations. Software companies could benefit from this analysis to evaluate if it is worth to migrate from a 1st generation method to a 2nd one.
   Objective: the main goal of the paper is to empirically investigate if COSMIC is more effective than FPA for Web effort estimation. Since software companies using FPA cannot build an estimation model based on COSMIC as long as they do not have enough COSMIC data, the second goal of the paper is to investigate if conversion equations can be exploited to support the migration from FPA to COSMIC.
   Method: two empirical studies have been carried out by employing an industrial data set. The first one compared the effort prediction accuracy obtained with Function Points (FPs) and COSMIC, using two estimation techniques (Simple Linear Regression and Case-Based Reasoning). The second study assessed the effectiveness of a two-step strategy that first exploits a conversion equation to transform historical FPs data into COSMIC, and then builds a new prediction model based on those estimated COSMIC sizes.
   Results: the first study revealed that, on our data set, COSMIC was significantly more accurate than FPs in estimating the development effort. The second study revealed that the effectiveness of the analyzed two-step process critically depends on the employed conversion equation.
   Conclusion: for Web effort estimation COSMIC can be significantly more effective than FPA. Nevertheless, additional research must be conducted to identify suitable conversion equations so that the two-step strategy can be effectively employed for a smooth migration from FPA to COSMIC. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Di Martino, Sergio] Univ Napoli Federico II, Dipartimento Ingn Elettr & Tecnol Informaz, Naples, Italy.
   [Ferrucci, Filomena; Gravino, Carmine] Univ Salerno, Dept Comp Sci, Fisciano, SA, Italy.
   [Sarro, Federica] UCL, Dept Comp Sci, CREST, London WC1E 6BT, England.
C3 University of Naples Federico II; University of Salerno; University of
   London; University College London
RP Ferrucci, F (corresponding author), Univ Salerno, Dept Comp Sci, Fisciano, SA, Italy.
EM sergio.dimartino@unina.it; fferrucci@unisa.it; gravino@unisa.it;
   f.sarro@ucl.ac.uk
RI Di Martino, Sergio/F-2602-2012; Ferrucci, Filomena/AAG-6799-2020
OI Di Martino, Sergio/0000-0002-1019-9004; Ferrucci,
   Filomena/0000-0002-0975-8972; Sarro, Federica/0000-0002-9146-442X
FU EPSRC [EP/J017515/1] Funding Source: UKRI
CR Abrahao S., 2003, P INT C EL COMM WEB, P16
   Abrahao S, 2007, LECT NOTES COMPUT SC, V4735, P467
   Abraho S., 2003, International Journal of Web Engineering and Technology, V1, P5, DOI 10.1504/IJWET.2003.003265
   ABRAN A, 1994, J SYST SOFTWARE, V25, P171, DOI 10.1016/0164-1212(94)90004-3
   Abran A., 2005, P INT WORKSH SOFTW M, P227240
   Abran A., 2015, COSMIC FUNCTIONAL SI
   Abran A., CONVERTIBILITY MEASU, P269
   Abualkishik AZ, 2012, INFORM SOFTWARE TECH, V54, P1250, DOI 10.1016/j.infsof.2012.06.006
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], [No title captured]
   [Anonymous], P SOFTW MEAS EUR FOR
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2007, P 6 INT WORLD WID WE
   [Anonymous], 2014, SOFTWARE PROJECT EFF
   [Anonymous], 1992, MATH STAT
   Azhar Damir, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P173, DOI 10.1109/ESEM.2013.25
   Baresi L, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276936
   Breush T., 1992, Econometrica, V47, P1287
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1998, PROC INT CONF SOFTW, P390, DOI 10.1109/ICSE.1998.671392
   Buglione L., 2010, IWSM/Mensura/Metrikon, P205
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Conover WJ., 1998, PRACTICAL NONPARAMEL
   Conte D., 1986, SOFTWARE ENG METRICS
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A, 2011, EMPIR SOFTW ENG, V16, P211, DOI 10.1007/s10664-010-9138-4
   Costagliola G, 2006, J WEB ENG, V5, P93
   Cuadrado-Gallego JJ, 2010, INFORM SOFTWARE TECH, V52, P347, DOI 10.1016/j.infsof.2009.12.001
   De Marco Lucia, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P349, DOI 10.1109/SEAA.2013.41
   De Marco L., 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P21, DOI 10.1109/WETSoM.2012.6226988
   DESHARNAIS JM, 2007, P 17 INT WORKSH SOFT, P130
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P186, DOI 10.1007/978-3-642-21843-9_16
   Di Martino Sergio, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P324
   Di Martino S., 2009, INT J COMPUT APPL, V31
   Ferrucci F, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P441, DOI 10.1109/SEAA.2008.60
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Ferrucci F, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P306, DOI 10.1109/SEAA.2009.47
   FETCKE T, 1999, 199920 U QUEB MONTR
   Flo V., 1999, TECHNICAL REPORT
   FRATERNALI P, 2006, P C CTR ADV STUD COL, P233, DOI DOI 10.1145/1188966
   Gencel C, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P170, DOI 10.1109/IWSM-MENSURA.2012.33
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   Ince D., NE FENTONSOFTWARE ME, V337
   ISO, 2007, 1414312007 ISO ISOIE
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kaner C., 2004, P INT SOFTW METR S
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P29, DOI 10.1109/MS.1997.582972
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Lavazza L, 2014, EMPIR SOFTW ENG, V19, P1075, DOI 10.1007/s10664-013-9246-z
   Lavazza L, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P160, DOI 10.1109/IWSM-MENSURA.2012.32
   Lavazza L, 2011, INFORM SOFTWARE TECH, V53, P874, DOI 10.1016/j.infsof.2011.02.005
   MANTEL N, 1967, CANCER RES, V27, P209
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E., 2002, IEE Proceedings-Software, V149, P86, DOI 10.1049/ip-sen:20020337
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E., 2014, 18 INT C EVALUATION, P1, DOI [10.1145/2601248.2601284, DOI 10.1145/2601248.2601284]
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Minku L, 2015, INT SYMP EMP SOFTWAR, P172, DOI 10.1109/ESEM.2015.7321199
   Moreno M., 2006, P ICWE WORKSH MOD DR, P4
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Rollo T., 2000, P AUSTR C SOFTW MEAS
   ROYSTON JP, 1982, J R STAT SOC C-APPL, V31, P115
   Ruhe M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P30, DOI 10.1109/METRIC.2003.1232453
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sommerville I., 2010, SOFTWARE ENG
   Vogelezang F., 2003, P INT WORKSH SOFTW M, P23
   Zuse Horst., 1998, A framework of software measurement
NR 79
TC 26
Z9 27
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 90
EP 109
DI 10.1016/j.infsof.2015.12.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Febrero, F
   Calero, C
   Moraga, MA
AF Febrero, Felipe
   Calero, Coral
   Angeles Moraga, M.
TI Software reliability modeling based on ISO/IEC SQuaRE
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Software reliability modeling; International standard;
   SQuaRE
AB Context: The increasing dependence of our society on software driven systems has led Software Reliability to become a key factor as well as making it a highly active research area with hundreds of works being published every year. It would, however, appear that this activity is much more reduced as regards how to apply representative international standards on Product Quality to industrial environments, with just a few works on Standard Based software reliability modeling (SB-SRM). This is surprising given the relevance of such International Standards in industry.
   Objective: To identify and analyze the existing works on the modeling of Software Reliability based on International Standards as the starting point for a reliability assessment proposal based on ISO/IEC-25000 "Software Product Quality Requirements and Evaluation" (SQuaRE) series.
   Method: The work methodology is based on the guidelines provided in Evidence Based Software Engineering for Systematic Literature Reviews (SLR).
   Results: A total of 1820 works were obtained as a result of the SLR search, more than 800 primary studies were selected after data filtering. After scrutiny, over thirty of those were thoroughly analyze, the results obtained show a very limited application of SB-SRM particularly to industrial environment.
   Conclusion: Our analysis point to the complexity of the proposed models together with the difficulties involved in applying them to the management of engineering activities as a root cause to be considered for such limited application. The various stakeholder needs are also a point of paramount importance that should be better covered if the industrial applicability of the proposed models is to be increased. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Febrero, Felipe; Calero, Coral; Angeles Moraga, M.] Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, E-13071 Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Calero, C (corresponding author), Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, Paseo Univ, E-13071 Ciudad Real, Spain.
EM ffebrero@computer.org; Coral.Calero@uclm.es; MariaAngeles.Moraga@uclm.es
RI Calero, Coral/D-4319-2011; Moraga/G-2615-2015
OI Calero, Coral/0000-0003-0728-4176; Febrero Hidalgo,
   Felipe/0000-0002-1882-4353; Moraga/0000-0001-9165-7144
FU GEODAS-BC project (Fondo Europeo de Desarrollo Regional FEDER)
   [TIN2012-37493-C03-01]; VILMA project (Consejeria de Educacion, Ciencia
   y Cultura de la Junta de Comunidades de Castilla La Mancha, y Fondo
   Europeo de Desarrollo Regional FEDER) [PEII-2014-048-P]; GEODAS-BC
   project (Ministerio de Economia y Competitividad)
FX This work has been funded by the GEODAS-BC project (Ministerio de
   Economia y Competitividad and Fondo Europeo de Desarrollo Regional
   FEDER, TIN2012-37493-C03-01) and by the VILMA project (Consejeria de
   Educacion, Ciencia y Cultura de la Junta de Comunidades de Castilla La
   Mancha, y Fondo Europeo de Desarrollo Regional FEDER, PEII-2014-048-P).
CR [Anonymous], 9821 IEEE
   [Anonymous], BUG TAXONOMY STAT AP
   [Anonymous], EGG2663 ID NAT ENG L
   [Anonymous], 1990, 61012 IEEE
   [Anonymous], P ANN 2010
   [Anonymous], P STEP 99
   [Anonymous], 1633 IEEESTD
   [Anonymous], P AFRICON 2007
   [Anonymous], P INT C WORKSH ENG C
   [Anonymous], P WORKSH ADV FUNCT S
   [Anonymous], P 6 ISAHP BERN SWITZ
   [Anonymous], 2005, 25000 ISOIEC
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Calero C, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P46, DOI 10.1109/GREENS.2013.6606421
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Febrero F, 2014, INFORM SOFTWARE TECH, V56, P839, DOI 10.1016/j.infsof.2014.03.006
   Friginal J, 2011, 2011 IEEE 17TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING (PRDC), P28, DOI 10.1109/PRDC.2011.13
   ISO/IEC, 2010, Technical report
   Jung HJ, 2005, LECT NOTES COMPUT SC, V3482, P739
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Li XL, 2010, INT CONF COMPUT AUTO, P113, DOI 10.1109/ICCAE.2010.5452054
   LITTLEWOOD B, 1980, IEEE T SOFTWARE ENG, V6, P489, DOI 10.1109/TSE.1980.230790
   LITTLEWOOD B, 2000, FUTURE SOFTWARE ENG, P177
   Loh CH, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT AND ENGINEERING, PROCEEDINGS, P239, DOI 10.1109/ICIME.2009.78
   Lyu M., 1996, Handbook of Software Reliability Engineering
   Lyu M.R., 1996, Handbook of Software Reliability Engineering, P71
   Mayr A., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P281, DOI 10.1109/ISSRE.2012.4
   MUSA JD, 1990, IEEE SOFTWARE, V7, P36, DOI 10.1109/52.60588
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Qi Yu-dong, 2010, 2010 International Conference on Computer Application and System Modeling (ICCASM 2010), P386, DOI 10.1109/ICCASM.2010.5622740
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Saaty TL, 1989, FUNDAMENTALS DECISIO, P59, DOI [DOI 10.1007/978-3-642-50244-64, 10.1007/978-3-642-50244-64, 10.1007/978-3-642-50244-6_4, DOI 10.1007/978-3-642-50244-6_4]
   Wendler R, 2012, INFORM SOFTWARE TECH, V54, P1317, DOI 10.1016/j.infsof.2012.07.007
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
NR 38
TC 29
Z9 31
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 18
EP 29
DI 10.1016/j.infsof.2015.09.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600002
DA 2024-07-18
ER

PT J
AU Ramon, OS
   Cuadrado, JS
   Molina, JG
   Vanderdonckt, J
AF Sanchez Ramon, Oscar
   Sanchez Cuadrado, Jesus
   Garcia Molina, Jesus
   Vanderdonckt, Jean
TI A layout inference algorithm for Graphical User Interfaces
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Graphical User Interfaces; Layout inference; Wireframes; Model-driven
   engineering; Reverse engineering; Fluid layout
AB Context: Graphical User Interface (GUI) toolkits currently provide layout managers which lay out widgets in views according to certain constraints that characterise each type of layout manager. In some scenarios such as GUI migration and the automated generation of GUIs from wireframes, the layout of views is implicitly expressed through the use of coordinates. In these cases, it is desirable to represent the layout explicitly in terms of layout managers.
   Objective: To represent a coordinate-based GUI in terms of a set of layout managers, in order to provide different alternative solutions for a given view and select the best alternative.
   Method: The layout inference process consists of two phases. Firstly, the coordinate-based positioning system is changed to a relative positioning system based on directed graphs and Allen relations. Secondly, an exploratory algorithm based on pattern matching and graph rewriting is applied in order to obtain different layout solutions. The algorithm has been evaluated through a case study related to the automatic generation of fluid web interfaces from wireframes, involving 20 IT professionals.
   Results: The case study showed that the layout obtained is faithful to the original views in 97% of cases, and maintains its proportions when resized in 84% of views. The majority of the participants were satisfied with the results and found the approach useful.
   Conclusions: The layout manager representation obtained from the coordinate-based GUIs can be used to generate fluid layouts. The algorithm has two main features that overcome the limitations of the existing approaches: independence of specific layout managers and ability to generate several alternative solutions. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Sanchez Ramon, Oscar; Garcia Molina, Jesus] Fac Informat, Murcia 30100, Spain.
   [Sanchez Cuadrado, Jesus] Autonomous Univ Madrid, Super Polytech Sch, E-28049 Madrid, Spain.
   [Vanderdonckt, Jean] Catholic Univ Louvain, Louvain Sch Management, B-1348 Louvain La Neuve, Belgium.
C3 University of Murcia; Autonomous University of Madrid; Universite
   Catholique Louvain
RP Molina, JG (corresponding author), Fac Informat, Campus Espinardo, Murcia 30100, Spain.
EM osanchez@um.es; jesus.sanchez.cuadrado@uam.es; jmolina@um.es;
   jean.vanderdonckt@uclouvain.be
RI Vanderdonckt, Jean/Q-5854-2018; GARCIA-MOLINA, JESUS J/X-7078-2019;
   Sanchez Cuadrado, Jesus/L-2365-2013
OI Vanderdonckt, Jean/0000-0003-3275-3333; Sanchez Cuadrado,
   Jesus/0000-0001-9755-5616; Sanchez Ramon, Oscar/0000-0001-8681-2664
FU Fundacion Seneca (Agency of Research and Technology of the Region of
   Murcia, Spain) [15389/PI/10]
FX This work has been supported by the grant 15389/PI/10 of the Fundacion
   Seneca (Agency of Research and Technology of the Region of Murcia,
   Spain). We are also grateful to the anonymous reviewers for their
   insightful comments which have helped to improve the final version of
   this work.
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   BANDELLONI R, 2005, P 7 INT C HUM COMP I, P83
   Cai D., 2003, TECHNICAL REPORT
   Chen Y., WWW, P225
   Dixon M, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P969
   Gerdes J, 2009, J SOFTW MAINT EVOL-R, V21, P171, DOI 10.1002/smr.400
   James M., 1967, PROC BERKELEY S MATH, V1, P281, DOI DOI 10.1007/S11665-016-2173-6
   Lutteroth C, 2008, CONSTRAINTS, V13, P307, DOI 10.1007/s10601-008-9043-2
   Lutteroth Christof, 2008, P 9 C AUSTR US INT W, V76, P65, DOI [10.5555/1378337.1378350, DOI 10.5555/1378337.1378350]
   Martin J., 1991, Rapid Application Development
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Puerta A., 2002, IUI 02. 2002 International Conference on Intelligent User Interfaces, P214
   Rivero J. M., 2010, ICWE 10
   Sanchez Ramon O., 2010, P IEEE ACM INT C AUT, P147, DOI [10.1145/1858996.1859023, DOI 10.1145/1858996.1859023]
   Ramón OS, 2014, AUTOMAT SOFTW ENG, V21, P147, DOI 10.1007/s10515-013-0130-2
   Sinha N., 2013, P 2013 9 JOINT M FDN, P312, DOI DOI 10.1145/2491411.2491427
   Vanderdonckt J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P241, DOI 10.1109/WCRE.2001.957828
NR 17
TC 12
Z9 13
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 155
EP 175
DI 10.1016/j.infsof.2015.10.005
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600012
DA 2024-07-18
ER

PT J
AU Li, ZH
   Zhou, XF
   Gu, AH
   Li, QF
AF Li, Zonghua
   Zhou, Xiaofeng
   Gu, Aihua
   Li, Qinfeng
TI A complete approach for CIM modelling and model formalising
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE CIM; Model formalisation; Petri nets; Model transformations; Model
   consistency verification
ID BUSINESS PROCESS MODELS; REQUIREMENTS; TRANSFORMATION; SECURITY;
   SYSTEMS; PIM; VERIFICATION; FRAMEWORK
AB Context: Computation Independent Model (CIM) as a business model describes the requirements and environment of a business system and instructs the designing and development; it is a key to influencing software success. Although many studies currently focus on model driven development (MOD); those researches, to a large extent, study the PIM-level and PSM-level model, and few have dealt with CIM-level modelling for case in which the requirements are unclear or incomplete.
   Objective: This paper proposes a CIM-level modelling approach, which applies a stepwise refinement approach to modelling the CIM-level model starting from a high-level goal model to a lower-level business process model. A key advantage of our approach is the combination of the requirement model with the business model, which helps software engineers to define business models exactly for cases in which the requirements are unclear or incomplete.
   Method: This paper, based on the model driven approach, proposes a set of models at the CIM-level and model transformations to connect these models. Accordingly, the formalisation approach of this paper involves formalising the goal model using the category theory and the scenario model and business process model using Petri nets
   Results: We have defined a set of metamodels and transformation rules making it possible to obtain automatically a scenario model from the goal model and a business process model from the scenario model. At the same time, we have defined a mapping rule to formalise these models. Our proposed CIM modelling approach and formalisation approach are implemented with an MDA tool, and it has been empirically validated by a travel agency case study.
   Conclusion: This study shows how a CIM modelling approach helps to build a complete and consistent model at the CIM level for cases in which the requirements are unclear or incomplete in advance. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Li, Zonghua; Zhou, Xiaofeng; Gu, Aihua; Li, Qinfeng] Hohai Univ, Coll Comp & Informat Engn, Nanjing 211100, Jiangsu, Peoples R China.
   [Li, Zonghua] Huaiyin Normal Univ, Sch Comp Sci & Technol, Huaian 223300, Jiangsu, Peoples R China.
C3 Hohai University; Huaiyin Normal University
RP Li, ZH (corresponding author), Hohai Univ, Coll Comp & Informat Engn, Nanjing 211100, Jiangsu, Peoples R China.
EM leeleaf@163.com; zhouxf@hhu.edu.cn; guaihua1978@eyou.com; lqf@jit.edu.cn
RI Zhou, Xiangfeng/KDO-8724-2024
FU China National Key Technology RD Programme [2013BAB05B00, 2013BAB06B04];
   National Natural Science Foundation of China [41471425]
FX This research is supported by the China National Key Technology R&D
   Programme under Grants 2013BAB05B00 and 2013BAB06B04; and the National
   Natural Science Foundation of China under Grants 41471425. We would like
   to thank the reviewers and editor of this paper for their valuable
   comments.
CR Aburub F, 2007, INFORM SOFTWARE TECH, V49, P1162, DOI 10.1016/j.infsof.2006.12.002
   Alix T, 2012, COMPUT IND, V63, P370, DOI 10.1016/j.compind.2012.02.011
   Amyot Daniel, 2012, Advances in Conceptual Modeling. Proceedings ER 2012 Workshops: CMS, ECDM-NoCoDA, MoDIC, MORE-BI, RIGiM, SeCoGIS, WISM, P201, DOI 10.1007/978-3-642-33999-8_25
   Amyot D, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P108, DOI 10.1109/QSIC.2003.1319092
   Amyot D, 2003, COMPUT NETW, V42, P285, DOI 10.1016/S1389-1286(03)00244-5
   Amyot D., 2012, URN METAMODEL VERSIO
   [Anonymous], 2011, META OBJECT FACILITY
   [Anonymous], 2003, BUSINESS PROCESS EXE
   [Anonymous], 2008, ECLIPSE MODELING FRA
   Awodey S., 2006, CATEGORY THEORY
   Balaban M., SOFTW SYST MODEL
   Beydoun G, 2009, INFORM SOFTWARE TECH, V51, P832, DOI 10.1016/j.infsof.2008.05.003
   Brahim Bousetta, 2013, Journal of Information Engineering and Applications, V3, P1
   Brambilla M., SCI COMPUT IN PRESS
   Calegari D, 2013, ELECTRON NOTES THEOR, V292, P5, DOI 10.1016/j.entcs.2013.02.002
   De Castro V, 2011, INFORM SOFTWARE TECH, V53, P87, DOI 10.1016/j.infsof.2010.09.002
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Fabra J, 2012, J SYST SOFTWARE, V85, P607, DOI 10.1016/j.jss.2011.09.022
   Garrido JL, 2007, SCI COMPUT PROGRAM, V66, P25, DOI 10.1016/j.scico.2006.10.008
   Gordijn J, 2006, IEEE SOFTWARE, V23, P26, DOI 10.1109/MS.2006.71
   Harmon P., 2004, Business Process Trends, V2, P1
   Henderson-Sellers B, 2011, J SYST SOFTWARE, V84, P301, DOI 10.1016/j.jss.2010.10.025
   Jian Deng, 2012, Information Computing and Applications. Proceedings of the Third International Conference, ICICA 2012, P468, DOI 10.1007/978-3-642-34062-8_61
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jureta IJ, 2008, REQUIR ENG, V13, P87, DOI 10.1007/s00766-007-0056-y
   Kirikova M., 2009, LNCS, V5968, P169
   Kostin AE, 2003, IEEE T AUTOMAT CONTR, V48, P1019, DOI 10.1109/TAC.2003.812788
   Koubarakis M, 2002, INFORM SYST, V27, P299, DOI 10.1016/S0306-4379(01)00055-2
   Li Zhang, 2008, 2008 IEEE International Workshop on Semantic Computing and Systems (WSCS 2008), P61, DOI 10.1109/WSCS.2008.24
   Meland P.H., INT J SEC SOFTW ENG, V5, P1
   Meland PH, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P823, DOI 10.1109/ARES.2009.110
   Mendoza LE, 2012, INFORM SOFTWARE TECH, V54, P149, DOI 10.1016/j.infsof.2011.08.004
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mouratidis H, 2005, INFORM SYST, V30, P609, DOI 10.1016/j.is.2004.06.002
   Mussbacher G, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P383, DOI 10.1109/RE.2009.56
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2008, BUS PROC DEF MET 1 0
   OMG, 2003, MDA GUID VERS 1 0
   Osis J., 2007, IEEE INT C SOFTW SCI IEEE INT C SOFTW SCI, P22
   Osis J, 2010, COMM COM INF SC, V69, P180
   Pahl C, 2007, INFORM SOFTWARE TECH, V49, P838, DOI 10.1016/j.infsof.2006.09.007
   Pires PF, 2011, REQUIR ENG, V16, P133, DOI 10.1007/s00766-011-0116-1
   Rocha RD, 2013, INFORM SOFTWARE TECH, V55, P1355, DOI 10.1016/j.infsof.2013.02.007
   Rodríguez A, 2007, LECT NOTES COMPUT SC, V4714, P408
   Rodríguez A, 2011, DECIS SUPPORT SYST, V51, P446, DOI 10.1016/j.dss.2011.01.018
   Touzi J, 2009, INT J PROD ECON, V121, P5, DOI 10.1016/j.ijpe.2008.09.019
   Uzunov AV, 2012, J UNIVERS COMPUT SCI, V18, P2920
   van der Aalst WMP, 2000, INFORM SYST, V25, P43, DOI 10.1016/S0306-4379(00)00008-9
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Verdouw CN, 2010, COMPUT ELECTRON AGR, V73, P174, DOI 10.1016/j.compag.2010.05.005
   W3C, 2002, WEB SERV CHOR INT WS
   Wong PYH, 2011, SCI COMPUT PROGRAM, V76, P633, DOI 10.1016/j.scico.2009.09.010
   Xiu J.P., 2010, J CHINA U POSTS TELE, V17, P10, DOI DOI 10.1016/S1005-8885(09)60590-2
   Ye Y, 2011, EXPERT SYST APPL, V38, P10847, DOI 10.1016/j.eswa.2011.02.097
   Yeung WL, 2011, EXPERT SYST APPL, V38, P13555, DOI 10.1016/j.eswa.2011.04.067
   Yoo T, 2010, EXPERT SYST APPL, V37, P3768, DOI 10.1016/j.eswa.2009.11.046
   Zdravkovic J, 2010, IEEE INT ENTERP DIST, P121, DOI 10.1109/EDOC.2010.21
   Zhang W, 2005, LECT NOTES COMPUT SC, V3713, P248, DOI 10.1007/11557432_18
NR 59
TC 12
Z9 15
U1 0
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 39
EP 55
DI 10.1016/j.infsof.2015.04.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CK3IP
UT WOS:000356110100003
DA 2024-07-18
ER

PT J
AU Ameller, D
   Burgués, X
   Collell, O
   Costal, D
   Franch, X
   Papazoglou, MP
AF Ameller, David
   Burgues, Xavier
   Collell, Oriol
   Costal, Dolors
   Franch, Xavier
   Papazoglou, Mike P.
TI Development of service-oriented architectures using model-driven
   development: A mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service-oriented architecture; Model-driven development; SOA; MDD; State
   of the art; Mapping study
AB Context: Model-Driven Development (MDD) and Service-Oriented Architecture (SOA) are two challenging research areas in software engineering. MDD is about improving software development whilst SOA is a service-based conceptual development style, therefore investigating the available proposals in the literature to use MDD when developing SOA may be insightful. However, no studies have been found with this purpose.
   Objective: This work aims at assessing the state of the art in MDD for SOA systems. It mainly focuses on: what are the characteristics of MDD approaches that support SOA; what types of SOA are supported; how do they handle non-functional requirements.
   Method: We conducted a mapping study following a rigorous protocol. We identified the representative set of venues that should be included in the study. We applied a search string over the set of selected venues. As result, 129 papers were selected and analysed (both frequency analysis and correlation analysis) with respect to the defined classification criteria derived from the research questions. Threats to validity were identified and mitigated whenever possible.
   Results: The analysis allows us to answer the research questions. We highlight: (1) predominance of papers from Europe and written by researchers only; (2) predominance of top-down transformation in software development activities; (3) inexistence of consolidated methods; (4) significant percentage of works without tool support; (5) SOA systems and service compositions more targeted than single services and SOA enterprise systems; (6) limited use of metamodels; (7) very limited use of NFRs; and (8) limited application in real cases.
   Conclusion: This mapping study does not just provide the state of the art in the topic, but also identifies several issues that deserve investigation in the future, for instance the need of methods for activities other than software development (e.g., migration) or the need of conducting more real case studies. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Ameller, David; Burgues, Xavier; Collell, Oriol; Costal, Dolors; Franch, Xavier] Univ Politecn Cataluna, Barcelona, Spain.
   [Papazoglou, Mike P.] Tilburg Univ, NL-5000 LE Tilburg, Netherlands.
C3 Universitat Politecnica de Catalunya; Tilburg University
RP Ameller, D (corresponding author), Univ Politecn Cataluna, Barcelona, Spain.
EM dameller@essi.upc.edu; diafebus@essi.upc.edu; ocollell@essi.upc.edu;
   dolors@essi.upc.edu; franch@essi.upc.edu; m.p.papazoglou@uvt.nl
RI Franch, Xavier/A-8588-2008; Burgues, Xavier/G-2152-2016; Costal,
   Dolors/F-7862-2016
OI Franch, Xavier/0000-0001-9733-8830; Burgues, Xavier/0000-0001-6974-9886;
   Costal, Dolors/0000-0002-7340-0414; Papazoglou,
   Michael/0000-0002-2482-2282
FU Spanish MICINN project [TIN2013-44641-P]
FX We thank Jordi Cabot, Antonio Vallecillo, and the anonymous reviewers of
   the IST journal for their valuable comments and suggestions. This work
   has been partially supported by the Spanish MICINN project
   TIN2013-44641-P.
CR Ameller David, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P200, DOI 10.1007/978-3-642-39031-9_18
   Ameller D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P189, DOI 10.1109/RE.2010.32
   [Anonymous], 2010, SYSTEM SOFTWARE ENG
   [Anonymous], 2003, MDA GUIDE VERSION 1
   [Anonymous], 2012, WEB SERVICES SOA PRI
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Erl T, 2005, SERVICE ORIENTED ARC
   Keller A, 2002, NOMS 2002: IEEE/IFIP NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, P513, DOI 10.1109/NOMS.2002.1015605
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Matthew MacKenzie C., 2006, Technical Report
   Mehmood A, 2013, INFORM SOFTWARE TECH, V55, P395, DOI 10.1016/j.infsof.2012.09.003
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Menzel Michael, 2010, 2010 IEEE International Conference on Web Services (ICWS), P243, DOI 10.1109/ICWS.2010.25
   Menzel M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P41, DOI 10.1109/ARES.2009.90
   Muller H., 2009, P 2009 C CTR ADV STU, P339
   OMG Service, 2012, OR ARCH MOD LANG SOA
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Ruiz F., 2012, NOVATICA, V215, P54
NR 22
TC 41
Z9 46
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 42
EP 66
DI 10.1016/j.infsof.2015.02.006
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wagner, S
   Goeb, A
   Heinemann, L
   Kläs, M
   Lampasona, C
   Lochmann, K
   Mayr, A
   Plosch, R
   Seidl, A
   Streit, J
   Trendowicz, A
AF Wagner, Stefan
   Goeb, Andreas
   Heinemann, Lars
   Klas, Michael
   Lampasona, Constanza
   Lochmann, Klaus
   Mayr, Alois
   Plosch, Reinhold
   Seidl, Andreas
   Streit, Jonathan
   Trendowicz, Adam
TI Operationalised product quality models and assessment: The Quamoco
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality model; Product quality; Quality assessment
ID SOFTWARE QUALITY; TOOL SUPPORT; SQUALE
AB Context: Software quality models provide either abstract quality characteristics or concrete quality measurements; there is no seamless integration of these two aspects. Quality assessment approaches are, hence, also very specific or remain abstract. Reasons for this include the complexity of quality and the various quality profiles in different domains which make it difficult to build operationalised quality models. Objective: In the project Quamoco, we developed a comprehensive approach aimed at closing this gap.
   Method: The project combined constructive research, which involved a broad range of quality experts from academia and industry in workshops, sprint work and reviews, with empirical studies. All deliverables within the project were peer-reviewed by two project members from a different area. Most deliverables were developed in two or three iterations and underwent an evaluation.
   Results: We contribute a comprehensive quality modelling and assessment approach: (1) A meta quality model defines the structure of operationalised quality models. It includes the concept of a product factor, which bridges the gap between concrete measurements and abstract quality aspects, and allows modularisation to create modules for specific domains. (2) A largely technology-independent base quality model reduces the effort and complexity of building quality models for specific domains. For Java and CO systems, we refined it with about 300 concrete product factors and 500 measures. (3) A concrete and comprehensive quality assessment approach makes use of the concepts in the meta-model. (4) An empirical evaluation of the above results using real-world software systems showed: (a) The assessment results using the base model largely match the expectations of experts for the corresponding systems. (b) The approach and models are well understood by practitioners and considered to be both consistent and well suited for getting an overall view on the quality of a software product. The validity of the base quality model could not be shown conclusively, however. (5) The extensive, open-source tool support is in a mature state. (6) The model for embedded software systems is a proof-of-concept for domain-specific quality models.
   Conclusion: We provide a broad basis for the development and application of quality models in industrial practice as well as a basis for further extension, validation and comparison with other approaches in research. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Wagner, Stefan] Univ Stuttgart, Inst Software Technol, D-70174 Stuttgart, Germany.
   [Goeb, Andreas; Heinemann, Lars] CQSE GmbH, Garching, Germany.
   [Klas, Michael; Lampasona, Constanza; Trendowicz, Adam] Fraunhofer Inst Expt Software Engn IESE, Kaiserslautern, Germany.
   [Lochmann, Klaus] Tech Univ Munich, Inst Informat, Garching, Germany.
   [Mayr, Alois; Plosch, Reinhold] Johannes Kepler Univ Linz, Dept Business Informat, A-4040 Linz, Austria.
   [Seidl, Andreas] BMW AG, Munich, Germany.
   [Streit, Jonathan] Itestra GmbH, Munich, Germany.
C3 University of Stuttgart; Fraunhofer Gesellschaft; Technical University
   of Munich; Johannes Kepler University Linz; BMW AG
RP Wagner, S (corresponding author), Univ Stuttgart, Inst Software Technol, D-70174 Stuttgart, Germany.
EM stefan.wagner@informatik.uni-stuttgart.de
RI Kl\\{"a}s, Michael/B-6773-2012; Wagner, Stefan/A-5200-2018; Trendowicz,
   Adam/AAB-7935-2020
OI Wagner, Stefan/0000-0002-5256-8429; Streit, Jonathan/0009-0006-8129-3184
FU German Federal Ministry of Education and Research (BMBF) [01IS08023]
FX We are grateful to all members of the Quamoco project team as well as to
   all the participants of our interviews and surveys. This work has been
   supported by the German Federal Ministry of Education and Research
   (BMBF) under Grant No. 01IS08023.
CR Al-Kilidar H., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Alshayeb Mohammad, IEEE T SOFTW ENG, V29
   Alves T. L., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P20, DOI 10.1109/IWSM-MENSURA.2011.15
   [Anonymous], 2001, 50218 CENELEC
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2006, 623042006 IEC
   [Anonymous], 2010, 615082010 IEC
   [Anonymous], 2001, 912612001 ISOIEC TR
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Bajracharya S, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P1, DOI 10.1109/SUITE.2009.5070010
   Bakota T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P243, DOI 10.1109/ICSM.2011.6080791
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Barron FH, 1996, MANAGE SCI, V42, P1515, DOI 10.1287/mnsc.42.11.1515
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Benlarbi S, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.2000.885858
   Bergel A, 2009, EUR CON SFTWR MTNCE, P285, DOI 10.1109/CSMR.2009.13
   Bessey Al, 2010, COMMUN ACM, V53, P66
   Boehm B.W., 1978, Characteristics of Software Quality
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Chan VKY, 2006, INT CONF QUAL SOFTW, P15
   Dandashi F., 2002, Proceedings of the 2002 ACM Symposium on Applied Computing, P997
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Deissenboeck F., 2007, 2007 IEEE International Conference on Software Maintenance, P184, DOI 10.1109/ICSM.2007.4362631
   Deissenboeck F, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.129
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Deissenboeck F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1007, DOI 10.1145/1985793.1985977
   Deissenboeck F, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P9, DOI 10.1109/WOSQ.2009.5071551
   Dodgson J., 2000, MULTICRITERIA ANAL M
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   EDWARDS W, 1994, ORGAN BEHAV HUM DEC, V60, P306, DOI 10.1006/obhd.1994.1087
   Franch X, 2003, IEEE SOFTWARE, V20, P34, DOI 10.1109/MS.2003.1159027
   Gleirscher M, 2014, SOFTWARE QUAL J, V22, P499, DOI 10.1007/s11219-013-9217-z
   Grady R.B., 1987, SOFTWARE METRICS EST, V1
   Gruber Harald, 2010, P IWSM METRIKON MENS
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Hovemeyer D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P9, DOI 10.1145/1251535.1251537
   ISO/IEC, 2011, 250402011 ISOIEC, V2011, P25040
   Jones Capers, 2011, The Economics of Software Quality
   *JSF, 2005, JOINT STRIK FIGHT AI
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kitchenham B, 1997, SOFTWARE QUAL J, V6, P211, DOI 10.1023/A:1018516103435
   Kläs M, 2011, EUROMICRO CONF PROC, P341, DOI 10.1109/SEAA.2011.62
   Kläs M, 2010, EMPIR SOFTW ENG, V15, P423, DOI 10.1007/s10664-009-9112-1
   Kläs M, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P243, DOI 10.1109/SEAA.2009.88
   Klas M, 2011, P SQMB 11
   Klas Michael, 2010, P IWSM METRIKON MENS
   Laval Jannik, 2008, 2 WORKSH FAMIX MOOS
   Leveson NG, 2004, J SPACECRAFT ROCKETS, V41, P564, DOI 10.2514/1.11950
   Lochmann K, 2010, IEEE INT C ENG COMP, P245, DOI [10.1109/ICECCS.2010.33, 10.1109/ICECCS.2010.24]
   Lochmann Klaus, 2011, P 2 INT WORKSH EM TR, P5, DOI DOI 10.1145/1985374.1985378
   Lucki M., 2010, PROC INT C TRANSPARE, P1
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   Marinescu R, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/WCRE.2004.31
   Mayr A., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P281, DOI 10.1109/ISSRE.2012.4
   Mayr Alois, 2014, CPMP P 36 INT C SOFT
   McCall J., 1977, Factors in software quality, V1
   *MISRA, 2008, MISRA C 2008 GUID US
   *MISRA, 2004, MISRA C 2004 GUID US
   Mordal K, 2013, J SOFTW-EVOL PROC, V25, P1117, DOI 10.1002/smr.1558
   Mordal-Manet K, 2009, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2009.5306381
   Plöch R, 2008, INNOV SYST SOFTW ENG, V4, P3, DOI 10.1007/s11334-007-0039-7
   Plösch R, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P198, DOI 10.1109/QUATIC.2010.42
   Plosch Reinhold, 2009, TAG 2 WORKSH SOFTW Q
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Schackmann Holger, 2009, P METRIKON 2009
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Trendowicz A, 2014, ADV COMPUT, V93, P153, DOI 10.1016/B978-0-12-800162-2.00004-X
   Trendowicz Adam, 2010, P IWSM METRIKON MENS
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   VanZeist RHJ, 1996, SOFTWARE QUAL J, V5, P273, DOI 10.1007/BF00209185
   Vincke P., 1992, MULTICRITERIA DECISI
   Wagner Stefan, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P464, DOI 10.1109/ESEM.2009.5316003
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
   Wagner S, 2010, INFORM SOFTWARE TECH, V52, P1230, DOI 10.1016/j.infsof.2010.03.016
   Wagner Stefan, 2012, TUM1129
   Wagner Stefan, QUESTIONNAIRES RAW D
   Wagner Stefan, 2012, TUM11281
   Wicks Michael, 2005, HWMACSTR0036
NR 79
TC 68
Z9 70
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 101
EP 123
DI 10.1016/j.infsof.2015.02.009
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU He, P
   Li, B
   Liu, X
   Chen, J
   Ma, YT
AF He, Peng
   Li, Bing
   Liu, Xiao
   Chen, Jun
   Ma, Yutao
TI An empirical study on software defect prediction with a simplified
   metric set
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Defect prediction; Software metrics; Metric set simplification; Software
   quality
ID QUANTITATIVE-ANALYSIS; COMPLEXITY; CODE; CLASSIFICATION; MODELS
AB Context: Software defect prediction plays a crucial role in estimating the most defect-prone components of software, and a large number of studies have pursued improving prediction accuracy within a project or across projects. However, the rules for making an appropriate decision between within- and cross-project defect prediction when available historical data are insufficient remain unclear.
   Objective: The objective of this work is to validate the feasibility of the predictor built with a simplified metric set for software defect prediction in different scenarios, and to investigate practical guidelines for the choice of training data, classifier and metric subset of a given project.
   Method: First, based on six typical classifiers, three types of predictors using the size of software metric set were constructed in three scenarios. Then, we validated the acceptable performance of the predictor based on Top-k metrics in terms of statistical methods. Finally, we attempted to minimize the Top-k metric subset by removing redundant metrics, and we tested the stability of such a minimum metric subset with one-way ANOVA tests.
   Results: The study has been conducted on 34 releases of 10 open-source projects available at the PROMISE repository. The findings indicate that the predictors built with either Top-k metrics or the minimum metric subset can provide an acceptable result compared with benchmark predictors. The guideline for choosing a suitable simplified metric set in different scenarios is presented in Table 12.
   Conclusion: The experimental results indicate that (1) the choice of training data for defect prediction should depend on the specific requirement of accuracy; (2) the predictor built with a simplified metric set works well and is very useful in case limited resources are supplied; (3) simple classifiers (e.g., Naive Bayes) also tend to perform well when using a simplified metric set for defect prediction; and (4) in several cases, the minimum metric subset can be identified to facilitate the procedure of general defect prediction with acceptable loss of prediction precision in practice. (C) 2014 Elsevier B.V. All rights reserved.
C1 [He, Peng; Liu, Xiao] Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
   [He, Peng; Liu, Xiao; Chen, Jun; Ma, Yutao] Wuhan Univ, Sch Comp, Wuhan 430072, Peoples R China.
   [Li, Bing] Wuhan Univ, Int Sch Software, Wuhan 430079, Peoples R China.
   [Li, Bing; Ma, Yutao] Wuhan Univ, Res Ctr Complex Network, Wuhan 430072, Peoples R China.
   [Chen, Jun] Wuhan Univ, Natl Engn Res Ctr Multimedia Software, Wuhan 430072, Peoples R China.
C3 Wuhan University; Wuhan University; Wuhan University; Wuhan University;
   Wuhan University
RP Ma, YT (corresponding author), Wuhan Univ, Sch Comp, Wuhan 430072, Peoples R China.
EM penghe@whu.edu.cn; bingli@whu.edu.cn; lxiao@whu.edu.cn;
   chenj@whu.edu.cn; ytma@whu.edu.cn
RI Chen, Jun/AAD-8167-2022; li, bing/GWQ-9617-2022; Li, bo/IWL-9318-2023;
   Ma, Yutao/AAR-5140-2020; Li, Ye/JBS-2949-2023
OI Ma, Yutao/0000-0003-4239-2009; 
FU National Basic Research Program of China [2014CB340401]; National
   Natural Science Foundation of China [61273216, 61272111, 61202048,
   61202032]; Science and Technology Innovation Program of Hubei Province
   [2013AAA020]; Youth Chenguang Project of Science and Technology of Wuhan
   City [2014070404010232]; open foundation of Hubei Provincial Key
   Laboratory of Intelligent Information Processing and Real-time
   Industrial System [znss20138017]
FX This work is supported by the National Basic Research Program of China
   (No. 2014CB340401), the National Natural Science Foundation of China
   (Nos. 61273216, 61272111, 61202048 and 61202032), the Science and
   Technology Innovation Program of Hubei Province (No. 2013AAA020), the
   Youth Chenguang Project of Science and Technology of Wuhan City (No.
   2014070404010232), and the open foundation of Hubei Provincial Key
   Laboratory of Intelligent Information Processing and Real-time
   Industrial System (No. znss20138017).
CR Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 2009, PROC ACM INT C PREDI
   [Anonymous], P 25 INT C SOFTW ENG
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Berenson M.L., 1983, INTERMEDIATE STAT ME
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cong Jin, 2010, Proceedings of the 2010 Second International Conference on Multimedia and Information Technology (MMIT 2010), P24, DOI 10.1109/MMIT.2010.10
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He P, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/869356
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Jureczko M., 2011, Software Engineering: An International Journal, V1, P86
   Kohavi R, 1995, LECT NOTES ARTIF INT, V912, P174
   Kuncheva LI, 2007, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND APPLICATIONS, P390
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu H, 2005, IEEE T KNOWL DATA EN, V17, P491, DOI 10.1109/TKDE.2005.66
   Lu HH, 2012, IEEE INT CONF AUTOM, P314, DOI 10.1145/2351676.2351734
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Ma YT, 2010, J COMPUT SCI TECH-CH, V25, P1184, DOI 10.1007/s11390-010-9398-x
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nielsen J., 2012, MANY TEST USERS USAB
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Peng HC, 2005, IEEE T PATTERN ANAL, V27, P1226, DOI 10.1109/TPAMI.2005.159
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rish Irina, 2001, IJCAI 2001 WORKSHOP, V3, P41
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tosun A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P318
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
   Wang HJ, 2013, INT J ARTIF INTELL T, V22, DOI 10.1142/S0218213013600105
   Wang T., 2011, Journal of Information Computational Science, V8, P4241
   Windridge D, 2010, LECT NOTES COMPUT SC, V5997, P43, DOI 10.1007/978-3-642-12127-2_5
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Yu LG, 2012, QUAL TECHNOL QUANT M, V9, P421, DOI 10.1080/16843703.2012.11673302
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zimmerman T., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P347, DOI 10.1109/ICST.2011.39
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 66
TC 186
Z9 204
U1 1
U2 45
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 170
EP 190
DI 10.1016/j.infsof.2014.11.006
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hasheminejad, SMH
   Jalili, S
AF Hasheminejad, S. M. H.
   Jalili, S.
TI CCIC: Clustering analysis classes to identify software components
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Component identification; Software architect's preferences; Hierarchical
   evolutionary algorithm
ID IDENTIFICATION; OPTIMIZATION; DESIGN
AB Context: Component identification during software design phase denotes a process of partitioning the functionalities of a system into distinct components. Several component identification methods have been proposed that cannot be customized to software architect's preferences.
   Objectives: In this paper, we propose a clustering-based method by the name of CCIC (Clustering analysis Classes to Identify software Components) to identify logical components from analysis classes according to software architect's preferences.
   Method: CCIC uses a customized HEA (Hierarchical Evolutionary Algorithm) to automatically classify analysis classes into appropriate logical components and avoid the problem of searching for the proper number of components. Furthermore, it allows software architects to determine the constraints in their deployment and implementation framework.
   Results: A series of experiments were conducted for four real-world case studies according to various proposed weighting schemes.
   Conclusion: According to experimental results, it is concluded that CCIC can identify more cohesive and independent components with respect to software architect's preferences in comparison with the existing component identification methods such as FCA-based and CRUD-based methods. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Hasheminejad, S. M. H.; Jalili, S.] Tarbiat Modares Univ, Dept Comp Engn, Tehran, Iran.
C3 Tarbiat Modares University
RP Jalili, S (corresponding author), Tarbiat Modares Univ, Dept Comp Engn, Tehran, Iran.
EM SMH.Hasheminejad@Modares.ac.ir; Sjalili@Modares.ac.ir
RI Hasheminejad, Seyed Mohammad Hossein/AAK-5957-2020; Jalili,
   Saeed/ABD-4271-2021; Hasheminejad, Seyed Mahmoud/GRX-1504-2022
OI Hasheminejad, Seyed Mohammad Hossein/0000-0002-7357-7906; Jalili,
   Saeed/0000-0002-4333-3097; Hasheminejad, Seyed
   Mahmoud/0000-0002-8464-0253
FU ITRC, Iran Telecommunication Research Center
FX This research was supported by ITRC, Iran Telecommunication Research
   Center.
CR Albani A, 2008, LECT NOTES COMPUT SC, V5282, P262, DOI 10.1007/978-3-540-87891-9_17
   [Anonymous], 1996, GENETIC ALGORITHMS D, DOI DOI 10.1007/978-3-662-03315-9_4
   [Anonymous], COMP INT SOFTW ENG 2
   [Anonymous], 1975, Adatation in Natural and Artificial Systems
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   Birkmeier D, 2009, LECT NOTES COMPUT SC, V5582, P1, DOI 10.1007/978-3-642-02414-6_1
   Cai ZG, 2011, J ZHEJIANG U-SCI C, V12, P707, DOI 10.1631/jzus.C1000337
   Calinski T., 1974, Communications in Statistics-Simulation and Computation, V3, P1, DOI [10.1080/03610927408827101, DOI 10.1080/03610927408827101]
   Choi M., 2009, P ACM S APPL COMP, P530, DOI DOI 10.1145/1529282.1529392
   Cui JF, 2011, INFORM SOFTWARE TECH, V53, P601, DOI 10.1016/j.infsof.2011.01.006
   DAVIES DL, 1979, IEEE T PATTERN ANAL, V1, P224, DOI 10.1109/TPAMI.1979.4766909
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Dominik Q., 2012, INFORM SYSTEMS E BUS, P1
   Ganesan R, 2001, TOOLS, V39, P46, DOI 10.1109/TOOLS.2001.941658
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   Hamza HS, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P813, DOI 10.1109/ITNG.2009.276
   Harman M., 2009, TR0903 KINGS COLL LO
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hasheminejad SMH, 2013, J OBJECT TECHNOL, V12, DOI 10.5381/jot.2013.12.2.a3
   Hasheminejad SMH, 2012, J SYST SOFTWARE, V85, P408, DOI 10.1016/j.jss.2011.08.031
   Jain H, 2001, FIFTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P183, DOI 10.1109/EDOC.2001.950437
   Khan MA, 2012, ADV ENG SOFTW, V54, P1, DOI 10.1016/j.advengsoft.2012.08.002
   Kim J, 2008, J SYST SOFTWARE, V81, P37, DOI 10.1016/j.jss.2007.04.011
   Kim SD, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P538
   Kumar S, 2012, COMM COM INF SC, V270, P57
   Lee JK, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P79
   Maqbool O, 2006, J SYST SOFTWARE, V79, P1632, DOI 10.1016/j.jss.2006.03.013
   Masoud H, 2013, APPL INTELL, V38, P289, DOI 10.1007/s10489-012-0373-9
   Mills-Tettey Ayorkor., 2007, The dynamic hungarian algorithm for the assignment problem with changing costs
   Naseem R, 2011, EUR CON SFTWR MTNCE, P45, DOI 10.1109/CSMR.2011.9
   Parsa S, 2007, J RES PRACT INF TECH, V39, P47
   PENG LF, 2008, P 3 INT C INT SYST K, P296
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Salcedo-Sanz S, 2009, COMPUT SCI REV, V3, P175, DOI 10.1016/j.cosrev.2009.07.001
   Sang Duck Lee, 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P54, DOI 10.1109/APSEC.1999.809584
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Shahmohammadi GR, 2010, J OBJECT TECHNOL, V9, P77, DOI 10.5381/jot.2010.9.6.a4
   Tang KS, 1998, IEEE T IND ELECTRON, V45, P481, DOI 10.1109/41.679006
   Venkatesan V.P., 2009, J CONVERGENCE INFORM, V4, P138
   Xu Rui, 2010, IEEE Rev Biomed Eng, V3, P120, DOI 10.1109/RBME.2010.2083647
   Zapfel G, 2010, METAHEURISTIC SEARCH CONCEPTS, P1, DOI 10.1007/978-3-642-11343-7
NR 41
TC 14
Z9 14
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 329
EP 351
DI 10.1016/j.infsof.2014.05.013
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500019
DA 2024-07-18
ER

PT J
AU González, CA
   Cabot, J
AF Gonzalez, Carlos A.
   Cabot, Jordi
TI Formal verification of static software models in MDE: A systematic
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE MDE; Formal verification; OCL; Systematic literature review
ID UML CLASS DIAGRAMS; FINITE SATISFIABILITY; OCL; CONSTRAINTS;
   INDEPENDENCE; ENVIRONMENT
AB Context: Model-driven Engineering (MDE) promotes the utilization of models as primary artifacts in all software engineering activities. Therefore, mechanisms to ensure model correctness become crucial, specially when applying MDE to the development of software, where software is the result of a chain of (semi)automatic model transformations that refine initial abstract models to lower level ones from which the final code is eventually generated. Clearly, in this context, an error in the model/s is propagated to the code endangering the soundness of the resulting software. Formal verification of software models is a promising approach that advocates the employment of formal methods to achieve model correctness, and it has received a considerable amount of attention in the last few years.
   Objective: The objective of this paper is to analyze the state of the art in the field of formal verification of models, restricting the analysis to those approaches applied over static software models complemented or not with constraints expressed in textual languages, typically the Object Constraint Language (OCL).
   Method: We have conducted a Systematic Literature Review (SLR) of the published works in this field, describing their main characteristics.
   Results: The study is based on a set of 48 resources that have been grouped in 18 different approaches according to their affinity. For each of them we have analyzed, among other issues, the formalism used, the support given to OCL, the correctness properties addressed or the feedback yielded by the verification process.
   Conclusions: One of the most important conclusions obtained is that current model verification approaches are strongly influenced by the support given to OCL. Another important finding is that in general, current verification tools present important flaws like the lack of integration into the model designer tool chain or the lack of efficiency when verifying large, real-life models. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Gonzalez, Carlos A.; Cabot, Jordi] Ecole Mines Nantes, INRIA, LINA, AtlanMod Res Grp, F-44307 Nantes 3, France.
C3 Inria; IMT - Institut Mines-Telecom; IMT Atlantique
RP González, CA (corresponding author), Ecole Mines Nantes, INRIA, LINA, AtlanMod Res Grp, 4 Rue Alfred Kastler, F-44307 Nantes 3, France.
EM carlos.gonzalez@mines-nantes.fr; jordi.cabot@mines-nantes.fr
RI Cabot, Jordi/P-7723-2015
OI Cabot, Jordi/0000-0003-2418-2489
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Ali T., 2007, 2007 IEEE INT MULT C, P1
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 1999, MODEL CHECKING
   [Anonymous], 2006, ECL SUMM EUR ECL MOD
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Artale A, 2007, LECT NOTES COMPUT SC, V4801, P277
   Artale A., 2010, 23 INT WORKSH DESCR, V573
   Artale A., 2007, 20 INT WORKSH DESCR, V250
   Artale A, 2010, LECT NOTES COMPUT SC, V6412, P317, DOI 10.1007/978-3-642-16373-9_23
   Balaban M., 2008, 21 INT WORKSH DESCR, V353
   Beckert B., 2006, LECT NOTES COMPUTER, V4334
   Beckert Bernhard, 2002, DIKU TECHNICAL REPOR, P113
   Beeri C., 1990, Data & Knowledge Engineering, V5, P353, DOI 10.1016/0169-023X(90)90020-E
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Berardi D., 2002, WORKSH APPL DESCR LO, V63
   Berardi D., 2003, 2003 INT WORSH DESCR, V81
   Brucker A.D., ELECT COMMUNICATION, P5
   Brucker AD, 2008, LECT NOTES COMPUT SC, V4961, P97, DOI 10.1007/978-3-540-78743-3_8
   BRUCKER AD, 2006, 525 ETH
   Buttner Fabian, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P244, DOI 10.1007/978-3-642-31491-9_19
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Cadoli M., 2004, 2004 INT WORKSH DESC, V104
   Cadoli M, 2007, LECT NOTES COMPUT SC, V4733, P36
   Calì A, 2002, LECT NOTES ARTIF INT, V2366, P503
   Calvanese D, 1996, MOR KAUF R, P292
   Clavel M., ELECT COMMUNICATION, P24
   DUKE R, 1995, COMP STAND INTER, V17, P511, DOI 10.1016/0920-5489(95)00024-O
   Farré C, 2005, DATA KNOWL ENG, V53, P163, DOI 10.1016/j.datak.2004.08.002
   Farre C., 2008, DBTest, P9
   Formica A, 2003, INFORM SYST, V28, P213, DOI 10.1016/S0306-4379(02)00010-8
   Formica A., 1993, Information and Knowledge Management. Expanding the Definition of `Database'. First International Conference, CIKM '92 Select Papers, P69
   Formica A, 2002, IEEE T KNOWL DATA EN, V14, P123, DOI 10.1109/69.979977
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gogolla M, 2010, LECT NOTES COMPUT SC, V6143, P38, DOI 10.1007/978-3-642-13977-2_5
   Gogolla M, 2009, LECT NOTES COMPUT SC, V5668, P90
   Gonzalez Perez Carlos Alberto., 2012, Formal Methods in Software Engineering: Rigorous and Agile Approaches, DOI [10 . 1109 / FormSERA.2012.6229788, DOI 10.1109/FORMSERA.2012.6229788]
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jones C, 2006, COMPUTER, V39, P93, DOI 10.1109/MC.2006.145
   Kamenoff R.M., 2002, WORKSH CONS PROBL UM
   Kim S., 2000, ZB 00, P2
   Kitchenham B., 2007, Joint Report
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   Kuhlmann Mirco, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P32, DOI 10.1007/978-3-642-31491-9_5
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   LENZERINI M, 1990, INFORM SYST, V15, P453, DOI 10.1016/0306-4379(90)90048-T
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Maraee A, 2007, LECT NOTES COMPUT SC, V4530, P17
   Mohagheghi P, 2009, INFORM SOFTWARE TECH, V51, P1646, DOI 10.1016/j.infsof.2009.04.004
   Nipkow T., 2002, ISABELLE HOL PROOF A, DOI DOI 10.1007/3-540-45949-9
   Owre S, 1999, PVS LANGUAGE REFEREN
   Queralt A., 2012, 25 INT WORKSH DESCR, V846
   Queralt A, 2008, LECT NOTES COMPUT SC, V5074, P281
   Queralt A, 2006, LECT NOTES COMPUT SC, V4215, P497
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Queralt A, 2010, LECT NOTES COMPUT SC, V6412, P438, DOI 10.1007/978-3-642-16373-9_32
   Rahim L.A., 2008, INT S INF TECHN ITSI, V1, P1
   ROE D, 2003, MAPPING UML MODELS I
   Rull G, 2008, LECT NOTES COMPUT SC, V5181, P660, DOI 10.1007/978-3-540-85654-2_56
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Smith G., 1999, ADV FORMAL METHODS
   Soeken M, 2011, LECT NOTES COMPUT SC, V6706, P152, DOI 10.1007/978-3-642-21768-5_12
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   Szlenk M, 2006, DEPCOS-RELCOMEX 2006, P51
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Wahler M, 2010, SOFTW SYST MODEL, V9, P225, DOI 10.1007/s10270-009-0123-6
NR 71
TC 38
Z9 40
U1 0
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 821
EP 838
DI 10.1016/j.infsof.2014.03.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AI9OL
UT WOS:000337261800001
DA 2024-07-18
ER

PT J
AU Al-Ani, B
   Marczak, S
   Redmiles, D
   Prikladnicki, R
AF Al-Ani, Ban
   Marczak, Sabrina
   Redmiles, David
   Prikladnicki, Rafael
TI Facilitating contagion trust through tools in Global Systems Engineering
   teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global collaboration; Contagion trust; Swift trust
ID SOFTWARE-DEVELOPMENT; VIRTUAL TEAMS; COMMUNICATION; COLLABORATION;
   TECHNOLOGY; TIME
AB Context: In Global Systems Engineering teams, researchers have found that trust can be transitive to some degree or imported (swift trust) under certain conditions. We argue that trust can be contagion and seeded by tools (spread from one individual to another through tools).
   Objective: We sought to investigate the potential for using tools to support the development of trust in such teams and facilitate contagion trust. Specifically, we sought to investigate whether any existing tools support the development of trust in such teams and which information helps such development, whether the visualization of past collaborations would help developing trust, and what tools or features practitioners would wish for, if they had a magic wand.
   Method: We interviewed 71 employees from five multinational organizations. We focused on gaining an understanding of the tools that are currently used to engender trust and the information needed to facilitate contagion, in which conditions visualizations of past collaborations are helpful, and what software tool features could help develop trust. Our analysis was guided by grounded theory.
   Results: We found evidence that supports the theory of contagion trust and tools can be used to initiate the development of trust. These tools include software tools, office technologies, or organizational structures. Practitioners' needs were functional (e.g. audio channel with remote colleagues) and/or non-functional (e.g. can be adopted in sites with poor infrastructure).
   Conclusion: Our study illustrates that tools can be used to facilitate contagion trust and provides three main contributions. First, our exploration of how existing tools are used provides a guide to effective practices in such teams. Second, the descriptions of features that can facilitate contagion trust provide useful design implications for future tools. Third, the identification of the kind of information that facilitates contagion trust provides an understanding of practitioners' underlying needs that can be used to develop collaboration tools. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Al-Ani, Ban; Redmiles, David] Univ Calif Irvine, Dept Informat, Donald Bren Sch Informat & Comp Sci, Irvine, CA 92697 USA.
   [Marczak, Sabrina; Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande Sul PUCRS, Fac Informat, BR-90619900 Porto Alegre, RS, Brazil.
C3 University of California System; University of California Irvine;
   Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Al-Ani, B (corresponding author), 400 Covina Blvd, San Dimas, CA 91773 USA.
EM balani@ics.uci.edu; sabrina.marczak@pucrs.br; redmiles@ics.uci.edu;
   rafael.prikladnicki@pucrs.br
FU National Science Foundation [0943262, 0808783, 1111446]; Dell Computers
   of Brazil Ltd. [Law 8.248/91]; CNPq [309000/2012-2]; Direct For Computer
   & Info Scie & Enginr; Div Of Information & Intelligent Systems [0808783,
   0943262, 1111446] Funding Source: National Science Foundation
FX This work was supported by National Science Foundation 0943262, 0808783,
   and 1111446. We also thank the PDTI Program, financed by Dell Computers
   of Brazil Ltd. (Law 8.248/91), and CNPq (309000/2012-2). Special thanks
   to the participants for their collaboration and time.
CR Al-Ani Ban, 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P104, DOI 10.1109/ICGSE.2012.39
   Al-Ani B., 2013, FUT COLL SOFTW DEV W
   Al-Ani Ban., 2013, P ACM C COMPUTER SUP, P563, DOI [DOI 10.1145/2441776.2441840, 10.1145/2441776.2441840]
   [Anonymous], 2001, Team Perf. Manage. Int. J, DOI DOI 10.1108/13527590110395621
   Aranda G. N., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P135, DOI 10.1109/ICGSE.2010.24
   Barsade SG, 2002, ADMIN SCI QUART, V47, P644, DOI 10.2307/3094912
   Belkin L.Y., IACM 2006 M
   Bos N., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P135, DOI 10.1145/503376.503401
   Calefato F., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P12, DOI 10.1109/CHASE.2012.6223009
   Calefato F., 2011, Proc. 4th Int'l Workshop on Social Software Eng, P39
   Carmel E., 2011, IM WORKING WHILE THE, P186
   Cherulnik PD, 2001, J APPL SOC PSYCHOL, V31, P2149, DOI 10.1111/j.1559-1816.2001.tb00167.x
   Cheshin A, 2011, ORGAN BEHAV HUM DEC, V116, P2, DOI 10.1016/j.obhdp.2011.06.002
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Ferrin DL, 2007, GROUP ORGAN MANAGE, V32, P465, DOI 10.1177/1059601106293960
   Golbeck J., 2006, ACM Transactions on Internet Technology, V6, P497, DOI 10.1145/1183463.1183470
   Golbeck J., 2006, TRMS1284
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Huang JW, 2006, 2006 ICEC: EIGHTH INTERNATIONAL CONFERENCE ON ELECTRONIC COMMERCE, PROCEEDINGS, P259
   Jarvenpaa S. L., 1998, Journal of Management Information Systems, V14, P29
   Jarvenpaa SL, 2004, INFORM SYST RES, V15, P250, DOI 10.1287/isre.1040.0028
   Jun Zheng, 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P141, DOI 10.1145/503376.503402
   Koehne B., 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, P1257, DOI DOI 10.1145/2145204.2145393
   Kozlowski SWJ, 2006, PSYCHOL SCI, P77, DOI 10.1111/j.1529-1006.2006.00030.x
   Lapidot Y, 2007, LEADERSHIP QUART, V18, P16, DOI 10.1016/j.leaqua.2006.11.004
   Lindqvist E., 2006, Proceedings of the International Workshop on Global Software Development for the Practitioner, GSD '06, P80
   McNab AL, 2012, ELECTRON MARK, V22, P21, DOI 10.1007/s12525-011-0081-z
   Meyerson D., 1996, Trust in organizations: Frontiers of theory and research, P166, DOI DOI 10.4135/9781452243610.N9
   Aranda GN, 2011, LECT NOTES COMPUT SC, V6969, P224, DOI 10.1007/978-3-642-23801-7_18
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Prikladnicki R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P973, DOI 10.1109/ICSE.2013.6606647
   Prikladnicki R, 2012, IEEE SOFTWARE, V29, P10, DOI 10.1109/MS.2012.68
   Rosen B, 2006, HUM RESOUR MANAGE-US, V45, P229, DOI 10.1002/hrm.20106
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Trainer EH, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P40
   Trainer EH, 2012, PROCEEDINGS OF THE INTERNATIONAL WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES, P34, DOI 10.1145/2254556.2254566
   Treinen JJ, 2006, IBM SYST J, V45, P773, DOI 10.1147/sj.454.0773
   Walther JB, 2007, COMPUT HUM BEHAV, V23, P2538, DOI 10.1016/j.chb.2006.05.002
   Wilson JM, 2006, ORGAN BEHAV HUM DEC, V99, P16, DOI 10.1016/j.obhdp.2005.08.001
NR 40
TC 6
Z9 9
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2014
VL 56
IS 3
BP 309
EP 320
DI 10.1016/j.infsof.2013.11.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AA8NU
UT WOS:000331353000003
DA 2024-07-18
ER

PT J
AU Sun, CA
   Zhai, YM
   Shang, Y
   Zhang, ZY
AF Sun, Chang-ai
   Zhai, Yi Meng
   Shang, Yan
   Zhang, Zhenyu
TI BPELDebugger: An effective BPEL-specific fault localization framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service compositions; BPEL; Fault localization; Fault localization
   guidelines; Integration and interaction faults
AB Context: Business Process Execution Language (BPEL) is a widely recognized executable service composition language, which is significantly different from typical programming languages in both syntax and semantics, and especially shorter in program scale. How to effectively locate faults in BPEL programs is an open and challenging problem.
   Objective: In this paper, we propose a fault localization framework for BPEL programs.
   Method: Based on BPEL program characteristics, we propose two fault localization guidelines to locate the integration and interaction faults in BPEL programs. Our framework formulates the BPEL fault localization problem using the popular fault localization problem settings, and synthesizes BPEL-specific fault localization techniques by reuse of existing fault localization formulas. We use two realistic BPEL programs and three existing fault localization formulas to evaluate the feasibility and effectiveness of the proposed fault localization framework and guidelines.
   Result: Experiment results show that faults can be located with the fewest code examining efforts. That is, the fault-relevant basic block is assigned the highest suspiciousness score by our fault localization method. The experiment results also show that with the use of the proposed fault localization guidelines, the code examining efforts to locate faults are extraordinarily reduced.
   Conclusion: We conclude that the proposed framework is feasible in synthesizing effective fault localization techniques, and our fault localization guidelines are very effective to enhance existing fault localization techniques in locating faults in BPEL programs. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Sun, Chang-ai; Zhai, Yi Meng; Shang, Yan] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing 100083, Peoples R China.
   [Sun, Chang-ai; Zhang, Zhenyu] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
C3 University of Science & Technology Beijing; Chinese Academy of Sciences;
   Institute of Software, CAS
RP Sun, CA (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing 100083, Peoples R China.
EM casun@ustb.edu.cn; 570282867@qq.com; shangyan@live.com;
   zhangzy@ios.ac.cn
RI zhang, zhenyu/HOA-8440-2023
FU National Natural Science Foundation of China [60903003, 61003027];
   Beijing Natural Science Foundation of China [4112037]; Fundamental
   Research Funds for the Central Universities [FRF-SD-12-015A]; State Key
   Laboratory of Computer Science of Chinese Academy of Sciences
   [SYSKF1105]; Beijing Municipal Training Program for Excellent Talents
   [2012D009006000002]; Ministry of Science and Technology of China
   [2012ZX01039-004]
FX Authors thank Tieheng Xue and Ke Wang for their implementations of BPEL
   programs which are used for the empirical study. This research is
   supported by the National Natural Science Foundation of China (Grant
   Nos. 60903003, 61003027), the Beijing Natural Science Foundation of
   China (Grant No. 4112037), the Fundamental Research Funds for the
   Central Universities (Grant No. FRF-SD-12-015A), the Open Funds of the
   State Key Laboratory of Computer Science of Chinese Academy of Sciences
   (Grant No. SYSKF1105), the Beijing Municipal Training Program for
   Excellent Talents (Grant No. 2012D009006000002), and the National
   Science and Technology Major Project of the Ministry of Science and
   Technology of China (Grant No. 2012ZX01039-004). Thanks to the anonymous
   reviewers who provided useful suggestions on earlier versions of this
   paper.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2007, WEB SERV BUS PROC EX
   [Anonymous], 2008, ISSTA
   Bae E, 2003, FOURTH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, PROCEEDINGS, P309
   Baresi L., 2003, Software Engineering Notes, V28, P68, DOI 10.1145/949952.940082
   Boubeta-Puig J., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P398, DOI 10.1109/ICSTW.2011.52
   Canfora Gerardo, 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P78, DOI 10.1007/978-3-540-95888-8_4
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   DeMillo R.A., 1978, IEEE COMPUT, V1, P31
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Estero-Botaro Antonia, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P142, DOI 10.1109/ICSTW.2010.36
   Estero-Botaro A., 2008, PROC 21TH INT C SOFT, P1
   Flanagan C, 2000, ACM SIGPLAN NOTICES, V35, P219, DOI 10.1145/358438.349328
   Hammer C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P231, DOI 10.1145/1368088.1368120
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Nainar P.A., 2007, ISSTA, P5, DOI DOI 10.1145/1273463.1273467
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Park J, 2008, INT WKSHP FUT TR DIS, P37, DOI 10.1109/FTDCS.2008.24
   Park S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P645
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Song M, 2012, PROC INT CONF SOFTW, P694, DOI 10.1109/ICSE.2012.6227148
   Sun C., 2011, OPEN ISSUES SOA BASE
   Sun C., 2012, P 12 INT C QUAL SOFT, P171
   Sun CA, 2012, INT CONF QUAL SOFTW, P17, DOI 10.1109/QSIC.2012.48
   Sun CA, 2011, IEEE T SERV COMPUT, V4, P167, DOI 10.1109/TSC.2010.50
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhang Z., 2012, IEEE COMPUT, V45, P42
   Zhang ZY, 2011, J SYST SOFTWARE, V84, P885, DOI 10.1016/j.jss.2010.12.048
   Zhang ZY, 2010, J SYST SOFTWARE, V83, P174, DOI 10.1016/j.jss.2009.09.041
   Zhao L, 2011, PROCEEDINGS OF 2011 INTERNATIONAL CONFERENCE ON ADVANCED INTELLIGENCE AND AWARENESS INTERNET, IET AIAI2011, P203, DOI 10.1049/cp.2011.1457
NR 38
TC 8
Z9 10
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2140
EP 2153
DI 10.1016/j.infsof.2013.07.009
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100005
DA 2024-07-18
ER

PT J
AU Banerjee, I
   Nguyen, B
   Garousi, V
   Memon, A
AF Banerjee, Ishan
   Nguyen, Bao
   Garousi, Vahid
   Memon, Atif
TI Graphical user interface (GUI) testing: Systematic mapping and
   repository
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic mapping; GUI application; Testing; Paper repository;
   Bibliometrics
ID GENERATION; TOOL; EXECUTION; FRAMEWORK; FEEDBACK
AB Context: GUI testing is system testing of a software that has a graphical-user interface (GUI) front-end. Because system testing entails that the entire software system, including the user interface, be tested as a whole, during GUI testing, test cases-modeled as sequences of user input events-are developed and executed on the software by exercising the GUI's widgets (e.g., text boxes and clickable buttons). More than 230 articles have appeared in the area of GUI testing since 1991.
   Objective: In this paper, we study this existing body of knowledge using a systematic mapping (SM).
   Method: The SM is conducted using the guidelines proposed by Petersen et al. We pose three sets of research questions. We define selection and exclusion criteria. From the initial pool of 230 articles, published in years 1991-2011, our final pool consisted of 136 articles. We systematically develop a classification scheme and map the selected articles to this scheme.
   Results: We present two types of results. First, we report the demographics and bibliometrics trends in this domain, including: top-cited articles, active researchers, top venues, and active countries in this research area. Moreover, we derive the trends, for instance, in terms of types of articles, sources of information to derive test cases, types of evaluations used in articles, etc. Our second major result is a publicly-accessible repository that contains all our mapping data. We plan to update this repository on a regular basis, making it a "live" resource for all researchers.
   Conclusion: Our SM provides an overview of existing GUI testing approaches and helps spot areas in the field that require more attention from the research community. For example, much work is needed to connect academic model-based techniques with commercially available tools. To this end, studies are needed to compare the state-of-the-art in GUI testing in academic techniques and industrial tools. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Banerjee, Ishan; Nguyen, Bao; Memon, Atif] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   [Garousi, Vahid] Univ Calgary, Calgary, AB, Canada.
   [Garousi, Vahid] Middle E Tech Univ, Inst Informat, TR-06531 Ankara, Turkey.
C3 University System of Maryland; University of Maryland College Park;
   University of Calgary; Middle East Technical University
RP Garousi, V (corresponding author), Univ Calgary, Calgary, AB, Canada.
EM ishan@cs.umd.edu; baonn@cs.umd.edu; vgarousi@ucalgary.ca;
   atif@cs.umd.edu
OI Garousi, Vahid/0000-0001-6590-7576
FU Discovery Grant from the Natural Sciences and Engineering Research
   Council of Canada [341511-07]; Visiting Scientist Fellowship Program of
   the Scientific and Technological Research Council of Turkey (TUBITAK)
   [2221]; US National Science Foundation (NSF) under NSF Grants
   [CCF-0447864, CNS-0855055, CNS-1205501]; Direct For Computer & Info Scie
   & Enginr; Division Of Computer and Network Systems [1205501] Funding
   Source: National Science Foundation
FX The initial data collection stage of this work was started in a graduate
   course offered by Vahid Garousi in year 2010, in which the following
   students made some initial contributions: Roshanak Farhoodi, Shahnewaz
   A. Jolly, Rina Rao, Aida Shirvani, and Christian Wiederseiner. Their
   efforts are hereby acknowledged. Vahid Garousi was supported by the
   Discovery Grant 341511-07 from the Natural Sciences and Engineering
   Research Council of Canada and by the Visiting Scientist Fellowship
   Program (#2221) of the Scientific and Technological Research Council of
   Turkey (TUBITAK). The US authors were was partially supported by the US
   National Science Foundation (NSF) under NSF Grants CCF-0447864,
   CNS-0855055, and CNS-1205501.
CR Abdallah N., 2009, INT S SOFTW REL ENG
   Afzal W., 2008, 20 INT C SOFTW ENG K
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alles M, 2006, AGILE 2006, Proceedings, P276, DOI 10.1109/AGILE.2006.43
   Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   Amalfitano Domenico, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P274, DOI 10.1109/ICSTW.2010.34
   [Anonymous], 2000, P C FUT SOFTW ENG IC, DOI DOI 10.1145/336512.336532
   [Anonymous], 2011, 1 INT WORKSHOP END T
   Arlt S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P222, DOI 10.1109/ICSTW.2011.70
   Baresi Luciano., 2001, Test Oracles
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Belli F, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2001.989456
   Bertolini Cristiano, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P235, DOI 10.1109/ICST.2010.41
   Bertolini Cristiano, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P252, DOI 10.1109/ICSTW.2010.37
   Bertolini C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P115, DOI 10.1109/SEFM.2009.28
   Bertolini C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P21, DOI 10.1109/ICST.2009.27
   Binder R.V., 1997, P TOOLS 23 TECHN OBJ, P374
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Cai KY, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P19
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chen J, 2002, SOFTWARE QUAL J, V10, P205, DOI 10.1023/A:1021634422504
   Chen WK, 2005, 19TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 1, PROCEEDINGS, P967
   Chinnapongse V, 2009, LECT NOTES COMPUT SC, V5860, P203, DOI 10.1007/978-3-642-10265-3_19
   Conroy KM, 2007, PROC IEEE INT CONF S, P134
   Cunha Marco, 2010, 2010 2nd International Conference on Software Technology and Engineering (ICSTE 2010), P202, DOI 10.1109/ICSTE.2010.5608882
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Dabóczi TL, 2003, IEEE IMTC P, P441
   DEREZINSKA A., 2007, Journal of Computer Science Applications, V4, P13
   Derezinska A., 2006, MULT COMP SCI INF TE, P549
   Dwyer MB, 1997, LECT NOTES COMPUT SC, V1301, P244, DOI 10.1145/267896.267914
   El Ariss Omar, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1038, DOI 10.1109/ITNG.2010.216
   Feng L, 2007, IEEE AUTOTESTCON, P22
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Ganov S., 2008, P INT WORKSH AUT SOF
   Ganov S, 2009, LECT NOTES COMPUT SC, V5885, P69, DOI 10.1007/978-3-642-10373-5_4
   Gove R., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P202, DOI 10.1109/ICSTW.2011.73
   Grechanik M, 2009, PROC IEEE INT CONF S, P9, DOI 10.1109/ICSM.2009.5306345
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Harman S.A.M. Mark, 2009, TR0903 KINGS COLL LO
   Herbold S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P232, DOI 10.1109/ICSTW.2011.66
   Holmes A, 2006, AGILE 2006, Proceedings, P270, DOI 10.1109/AGILE.2006.19
   Hou Y, 2009, 2009 INTERNATIONAL CONFERENCE ON SCALABLE COMPUTING AND COMMUNICATIONS & EIGHTH INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTING, P341, DOI 10.1109/EmbeddedCom-ScalCom.2009.67
   HU C., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1490
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Jääskeläinen A, 2008, INT CONF QUAL SOFTW, P276, DOI 10.1109/QSIC.2008.26
   Jääskeläinen A, 2009, PROC INT CONF SOFTW, P112, DOI 10.1109/ICSE-COMPANION.2009.5070969
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kervinen A, 2006, LECT NOTES COMPUT SC, V3997, P16
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kwon OH, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P508, DOI 10.1109/ICIS.2008.54
   Lei Zhao, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P326, DOI 10.1109/QSIC.2010.11
   Li P, 2007, EMPIR SOFTW ENG, V12, P331, DOI 10.1007/s10664-006-9031-3
   Lo R, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P166, DOI 10.1109/METRIC.1996.492453
   Lowell C., 2003, EXTREME PROGRAMMING, V2675, P1011
   Magel K., 2007, C SOFTW ENG APPL, P91
   McConnell S, 1996, IEEE SOFTWARE, V13, P143
   McMahon C, 2009, AGILE 2009 CONFERENCE, P363, DOI 10.1109/AGILE.2009.9
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Memon A. M., 2000, Proceedings of the Fifth International Conference on Artificial Intelligence Planning and Scheduling, P226
   Memon A. M., 2001, Software Engineering Notes, V26, P256, DOI 10.1145/503271.503244
   Memon A. M., 2000, Software Engineering Notes, V25, P30, DOI 10.1145/357474.355050
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Memon AM, 2010, ADV COMPUT, V80, P121, DOI 10.1016/S0065-2458(10)80003-8
   Memon AM, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416564
   Navarro M., 2010, ADV SOFTWARE ENG, V2010, P1
   Nguyen D.H., 2010, WORKSH AUT SOFTW TES, P24
   Okada H, 1999, IEICE T INF SYST, VE82D, P1030
   Paiva A.C.R., 2005, WORKSH STAT MACH
   Paiva ACR, 2005, LECT NOTES COMPUT SC, V3785, P450
   Paiva ACR, 2008, LECT NOTES COMPUT SC, V4916, P218
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Patton R.M., 2003, INT IND TRAIN SIM ED
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Portillo-Rodriguez J., 2012, TOOLS USED GLOBAL SO
   Robinson B, 2009, IEEE ICST WORKSHOP, P267, DOI 10.1109/ICSTW.2009.22
   Safoutin MJ, 2000, IEEE T EDUC, V43, P188, DOI 10.1109/13.848072
   Shehady RK, 1997, DIG PAP INT SYMP FAU, P80, DOI 10.1109/FTCS.1997.614080
   Shewchuk Y, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P489
   Strecker Jaymie, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P12, DOI 10.1109/ICST.2008.26
   Takahashi J., 2001, Software Engineering Notes, V26, P83, DOI 10.1145/505482.505494
   Theodore F.M., 2010, AGILE INTERACTION DE, V9
   Tsujino Y., 2000, Systems and Computers in Japan, V31, P38, DOI 10.1002/1520-684X(200012)31:14<38::AID-SCJ5>3.0.CO;2-R
   White L, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/ISSRE.2000.885865
   White LJ, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P350, DOI 10.1109/ICSM.1996.565038
   Xie Q, 2005, PROC IEEE INT CONF S, P473
   Xie Q, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416567
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Ye M, 2006, WCICA 2006: SIXTH WORLD CONGRESS ON INTELLIGENT CONTROL AND AUTOMATION, VOLS 1-12, CONFERENCE PROCEEDINGS, P5773
   Yip S., 1991, C SYST SCI
   Yip S. W. L., 1991, Proceedings. Advanced Computer Technology, Reliable Systems and Applications. 5th Annual European Computer Conference CompEuro '91 (Cat. No.91CH3001-5), P557, DOI 10.1109/CMPEUR.1991.257448
   YUAN X., 2010, IEEE Transactions on Software Engineering
   Yuan X, 2007, PROC INT CONF SOFTW, P396
   Yuan X, 2010, INFORM SOFTWARE TECH, V52, P559, DOI 10.1016/j.infsof.2009.11.009
   Yuan X, 2010, IEEE T SOFTWARE ENG, V36, P81, DOI 10.1109/TSE.2009.68
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   ZhanWei Hui, 2010, 2010 IEEE International Conference on Intelligent Computing and Intelligent Systems (ICIS 2010), P559, DOI 10.1109/ICICISYS.2010.5658394
NR 102
TC 84
Z9 89
U1 1
U2 41
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1679
EP 1694
DI 10.1016/j.infsof.2013.03.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000001
DA 2024-07-18
ER

PT J
AU Rogstad, E
   Briand, L
   Torkar, R
AF Rogstad, Erik
   Briand, Lionel
   Torkar, Richard
TI Test case selection for black-box regression testing of database
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test case selection; Regression testing; Database applications;
   Similarity measures
AB Context: This paper presents an approach for selecting regression test cases in the context of large-scale database applications. We focus on a black-box (specification-based) approach, relying on classification tree models to model the input domain of the system under test (SUT), in order to obtain a more practical and scalable solution. We perform an experiment in an industrial setting where the SUT is a large database application in Norway's tax department.
   Objective: We investigate the use of similarity-based test case selection for supporting black box regression testing of database applications. We have developed a practical approach and tool (DART) for functional black-box regression testing of database applications. In order to make the regression test approach scalable for large database applications, we needed a test case selection strategy that reduces the test execution costs and analysis effort. We used classification tree models to partition the input domain of the SUT in order to then select test cases. Rather than selecting test cases at random from each partition, we incorporated a similarity-based test case selection, hypothesizing that it would yield a higher fault detection rate.
   Method: An experiment was conducted to determine which similarity-based selection algorithm was the most suitable in selecting test cases in large regression test suites, and whether similarity-based selection was a worthwhile and practical alternative to simpler solutions.
   Results: The results show that combining similarity measurement with partition-based test case selection, by using similarity-based test case selection within each partition, can provide improved fault detection rates over simpler solutions when specific conditions are met regarding the partitions.
   Conclusions: Under the conditions present in the experiment the improvements were marginal. However, a detailed analysis concludes that the similarity-based selection strategy should be applied when a large number of test cases are contained in each partition and there is significant variability within partitions. If these conditions are not present, incorporating similarity measures is not worthwhile, since the gain is negligible over a random selection within each partition. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Rogstad, Erik] Simula Res Lab, N-1325 Lysaker, Norway.
   [Rogstad, Erik] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
   [Briand, Lionel] Univ Luxembourg, SnT Ctr, L-2721 Luxembourg, Luxembourg.
   [Torkar, Richard] Chalmers Univ Technol, S-41296 Gothenburg, Sweden.
   [Torkar, Richard] Univ Gothenburg, S-41296 Gothenburg, Sweden.
   [Torkar, Richard] Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
C3 University of Oslo; University of Luxembourg; Chalmers University of
   Technology; University of Gothenburg; Blekinge Institute Technology
RP Rogstad, E (corresponding author), Simula Res Lab, Oslo, Norway.
EM erikrog@simula.no
CR [Anonymous], 1988, TAXICAB GEOMETRY ADV
   [Anonymous], 2000, P 8 EUR INT C SOFTW
   Aoe J.I., 1994, COMPUTER ALGORITHMS
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bennett CH, 1998, IEEE T INFORM THEORY, V44, P1407, DOI 10.1109/18.681318
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Cilibrasi R, 2004, COMPUT MUSIC J, V28, P49, DOI 10.1162/0148926042728449
   Cilibrasi R., 2006, STAT INFERENCE DATA
   De Maesschalck R, 2000, CHEMOMETR INTELL LAB, V50, P1, DOI 10.1016/S0169-7439(99)00047-7
   Deza E., 2009, Encyclopedia of Distances
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Hemmati H., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P327, DOI 10.1109/ICST.2011.12
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Liparas D, 2012, AUTOMAT SOFTW ENG, V19, P141, DOI 10.1007/s10515-011-0091-2
   Musa JohnD., 2004, Software Reliability Engineering: More Reliable Software Faster and Cheaper, V2nd
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Rogstad E., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P362, DOI 10.1109/ICSM.2011.6080803
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 20
TC 24
Z9 26
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1781
EP 1795
DI 10.1016/j.infsof.2013.04.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU da Silva, FQB
   França, ACC
   Suassuna, M
   Mariz, LMRD
   Rossiley, I
   de Miranda, RCG
   Gouveia, TB
   Monteiro, CVF
   Lucena, E
   Cardozo, ESF
   Espindola, E
AF da Silva, Fabio Q. B.
   Franca, A. Cesar C.
   Suassuna, Marcos
   de Sousa Mariz, Leila M. R.
   Rossiley, Isabella
   de Miranda, Regina C. G.
   Gouveia, Tatiana B.
   Monteiro, Cleviton V. F.
   Lucena, Evisson
   Cardozo, Elisa S. F.
   Espindola, Edval
TI Team building criteria in software projects: A mix-method replicated
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE People management; Software teams; Team effectiveness; Team building
   criteria; Software engineering
ID PERFORMANCE; WORK; REQUIREMENTS; MANAGEMENT; COHESION
AB Context: The internal composition of a work team is an important antecedent of team performance and the criteria used to select team members play an important role in determining team composition. However, there are only a handful of empirical studies about the use of team building criteria in the software industry.
   Objective: The goal of this article is to identify criteria used in industrial practice to select members of a software project team, and to look for relationships between the use of these criteria and project success. In addition, we expect to contribute with findings about the use of replication in empirical studies involving human factors in software engineering.
   Method: Our research was based on an iterative mix-method, replication strategy. In the first iteration, we used qualitative research to identify team-building criteria interviewing software project managers from industry. Then, we performed a cross-sectional survey to assess the correlations of the use of these criteria and project success. In the second iteration, we used the results of a systematic mapping study to complement the set of team building criteria. Finally, we performed a replication of the survey research with variations to verify and improve the results.
   Results: Our results showed that the consistent use team building criteria correlated significantly with project success, and the criteria related to human factors, such as personality and behavior, presented the strongest correlations. The results of the replication did not reproduce the results of the original survey with respect to the correlations between criteria and success goals. Nevertheless, the variations in the design and the difference in the sample of projects allowed us to conclude that the two results were compatible, increasing our confidence on the existence of the correlations.
   Conclusion: Our findings indicated that carefully selecting team member for software teams is likely to positively influence the projects in which these teams participate. Besides, it seems that the type of development method used can moderate (increase or decrease) this influence. In addition, our study showed that the choice of sampling technique is not straightforward given the many interacting factors affecting this type of investigation. (C) 2012 Elsevier B.V. All rights reserved.
C1 [da Silva, Fabio Q. B.; Franca, A. Cesar C.; Suassuna, Marcos; de Sousa Mariz, Leila M. R.; Rossiley, Isabella; de Miranda, Regina C. G.; Gouveia, Tatiana B.; Monteiro, Cleviton V. F.; Lucena, Evisson; Cardozo, Elisa S. F.; Espindola, Edval] Univ Fed Pernambuco, Ctr Informat, BR-50540740 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP da Silva, FQB (corresponding author), Univ Fed Pernambuco, Ctr Informat, BR-50540740 Recife, PE, Brazil.
EM fabio@cin.ufpe.br
RI da Silva, Fabio Queda Bueno/A-6524-2012
OI da Silva, Fabio Queda Bueno/0000-0002-3734-040X
FU Brazilian National Research Council (CNPq) [314523/2009-0]; CAPES
   [6441/10-6]; CNPq [141156/2010-4]; Samsung Institute for Development of
   Informatics (Samsung/SIDI)
FX Fabio Q.B. da Silva holds a research grant from the Brazilian National
   Research Council (CNPq), process #314523/2009-0. This article was
   written while Prof. Fabio Silva was in a sabbatical leave at the
   University of Toronto, receiving a CAPES research grant process
   #6441/10-6. A. Cesar C. Franca and Cleviton V.F. Monteiro have doctoral
   scholarships from CNPq, process #141156/2010-4, and CAPES, respectively.
   We would like to thank Prof. Steve Easterbrook, Elizabeth Patitsas, and
   Alicia Grubb for discussions, comments, and criticisms that lead to
   important improvements in the content and structure of this article. We
   also would like to thank all participants in all phases of this
   research. Finally, we are grateful for the partial support of the
   Samsung Institute for Development of Informatics (Samsung/SIDI) for this
   research.
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Acuña ST, 2006, IEEE SOFTWARE, V23, P94, DOI 10.1109/MS.2006.47
   Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   American Psychiatric Association, 2000, Text revision (DSM-IV-TR), DOI DOI 10.1176/DSM10.1176/APPI.BOOKS.9780890420249.DSM-IV-TR
   Anderson N., 2001, Personnel psychology, V1
   Anderson N., 2001, HDB IND WORK ORG PSY, VII
   [Anonymous], 2011, Research methods for the behavioral sciences
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI [10.1007/978-1-84800-044-5_14, DOI 10.1007/978-1-84800-044-5_14]
   [Anonymous], 1980, Winthrop computer systems series
   AYCAN Z, 2001, HDB IND WORK ORG PSY, V1
   BAKER FT, 1972, IBM SYST J, V11, P56, DOI 10.1147/sj.111.0056
   Bartol K., 1998, MANAGEMENT PACIFIC R
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Beelmann A, 2006, EUR PSYCHOL, V11, P244, DOI 10.1027/1016-9040.11.3.244
   Belbin M.R, 1981, MANAGEMENT TEAMS WHY
   Boehm BW., 1981, Software Engineering Economics
   Bradley J.H., 1997, J MANAG DEV, V16, P337, DOI DOI 10.1108/02621719710174525
   Brightman H.J, 1998, GROUP PROBLEM SOLVIN
   Brooks Fred, 1975, The Mythical Man-Month
   CAMPION MA, 1993, PERS PSYCHOL, V46, P823, DOI 10.1111/j.1744-6570.1993.tb01571.x
   Carron AV, 2000, SMALL GR RES, V31, P89, DOI 10.1177/104649640003100105
   Carver J.C, 2010, RESER2010
   Cohen S. G, 1993, ADV INTERDISCIPLINAR, V1
   Cohen SG, 1997, J MANAGE, V23, P239, DOI 10.1177/014920639702300303
   Constantine L, 2001, METHODOLOGICAL AGILI
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cummings L.L, 1987, RES ORGAN BEHAV, V9, P121
   CURTIS B, 2001, CMUSEI2001MM001
   da Silva Fabio Q. B., 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P126, DOI 10.1109/SBES.2009.16
   da Silva F.Q.B, 2011, P 2 INT WORKSH REPL
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   da Silva FQB, 2011, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2011.14
   de Miranda R.C.G, 2011, THESIS FEDERAL U PER
   de Vasconcelos A.P.L.F, 2012, THESIS FEDERAL U PER
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   DRESCHER S, 1985, SMALL GROUP BEHAV, V16, P3, DOI 10.1177/104649648501600101
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Franca A.C.C, 2011, P 15 ANN C EV AS SOF
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Gorsuch R.L., 1983, FACTOR ANAL
   Gross N, 1952, AM J SOCIOL, V57, P546, DOI 10.1086/221041
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   Guion R.M., 1998, ASSESSMENT MEASUREME, DOI DOI 10.1016/j.jrp.2006.08.001
   Guzzo RA, 1996, ANNU REV PSYCHOL, V47, P307, DOI 10.1146/annurev.psych.47.1.307
   Guzzo RichardA., 1995, TEAM EFFECTIVENESS D
   Hackmam J.R, 1980, WORK REDESIGN
   Hackman J. R., 1987, HDB ORG BEHAV, P315, DOI DOI 10.1016/0090-2616(78)90031-1
   Hackman J.R., 1990, GROUPS WORK
   Haggerty N., 2000, Proceedings of the 2000 ACM SIGCPR Conference, P192, DOI 10.1145/333334.333398
   Hallows J., 1998, Information systems project management
   Ivancevich J., 2002, ORG BEHAV MANAGEMENT, V6th
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Katzenbach J., 2001, DISCIPLINE TEAMS MIN
   Kilmoski R.J., 1999, SUPPORTING WORK TEAM, P63
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Lettice F, 2007, TEAM PERFORM MANAG, V13, P148, DOI 10.1108/13527590710831855
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   MAZNEVSKI ML, 1994, HUM RELAT, V47, P531, DOI 10.1177/001872679404700504
   Mcconnell S., 1998, SOFTWARE IEEE, V15, P126
   McDonald S, 2007, COMMUN ACM, V50, P67
   McGrath J.E., 1984, GROUPS INTERACTION P
   Merriam S. B., 2015, Qualitative research: A guide to design and implementation
   Miller J, 2004, IEEE T SOFTWARE ENG, V30, P811, DOI 10.1109/TSE.2004.69
   Moe NB, 2008, LECT NOTES BUS INF P, V9, P11
   Myers I.B., 1962, The Myers-Briggs Type Indicator: Manual
   Peslak A. R., 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P273, DOI 10.1145/1125170.1125233
   Rajendran M, 2005, J MANAG DEV, V24, P738, DOI 10.1108/02621710510613753
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Ryckman R.M., 2004, THEORIES PERSONALITY, V8th
   Salgado JF., 2001, HDB IND WORD ORG PSY, P165, DOI DOI 10.4135/9781848608320.N10
   Seaman CB., 2008, GUIDE ADV EMPIRICAL, P35
   STEVENS MJ, 1994, J MANAGE, V20, P503, DOI 10.1016/0149-2063(94)90025-6
   WHITE KB, 1984, INFORM MANAGE, V7, P331, DOI 10.1016/0378-7206(84)90028-4
   Yeatts D.E., 1998, High-performing self-managed work teams: A comparison of theory to practice
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 79
TC 28
Z9 34
U1 1
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1316
EP 1340
DI 10.1016/j.infsof.2012.11.006
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 161UD
UT WOS:000320217900013
DA 2024-07-18
ER

PT J
AU Giuffrida, R
   Dittrich, Y
AF Giuffrida, Rosalba
   Dittrich, Yvonne
TI Empirical studies on the use of social software in global software
   development - A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic mapping study; Global software development; Distributed
   teams; Social media; Social software; Computer-supported cooperative
   work
AB Background: In Global Software Development (GSD), informal communication and knowledge sharing play an important role. Social Software (So So) has the potential to support and foster this key responsibility. Research on the use of So So in GSD is still at an early stage: although a number of empirical studies on the usage of So So are available in related fields, there exists no comprehensive overview of what has been investigated to date across them.
   Objective: The aim of this review is to map empirical studies on the usage of So So in Software Engineering projects and in distributed teams, and to highlight the findings of research works which could prove to be beneficial for GSD researchers and practitioners.
   Method: A Systematic Mapping Study is conducted using a broad search string that allows identifying a variety of studies which can be beneficial for GSD. Papers have been retrieved through a combination of automatic search and snowballing, hence a wide quantitative map of the research area is provided. Additionally, text extracts from the studies are qualitatively synthesised to investigate benefits and challenges of the use of So So.
   Results: So So is reported as being chiefly used as a support for collaborative work, fostering awareness, knowledge management and coordination among team members. Contrary to the evident high importance of the social aspects offered by So So, socialisation is not the most important usage reported.
   Conclusions: This review reports how So So is used in GSD and how it is capable of supporting GSD teams. Four emerging themes in global software engineering were identified: the appropriation and development of usage structures; understanding how an ecology of communication channels and tools are used by teams; the role played by SoSo either as a subtext or as an explicit goal; and finally, the surprising low percentage of observational studies. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Giuffrida, Rosalba; Dittrich, Yvonne] IT Univ Copenhagen, Copenhagen, Denmark.
C3 IT University Copenhagen
RP Giuffrida, R (corresponding author), IT Univ Copenhagen, Copenhagen, Denmark.
EM rogi@itu.dk; ydi@itu.dk
OI Dittrich, Yvonne/0000-0003-4757-3394
CR Ahmadi Navid, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P1, DOI 10.1109/ASEW.2008.4686304
   [Anonymous], 2010, P 43 HAWAII INT C SY
   Black S., 2010, Proceedings of the 1st Workshop on Web 2.0 for Software Engineering, P1
   BLY SA, 1993, COMMUN ACM, V36, P28, DOI 10.1145/151233.151235
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   Dittrich Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P103, DOI 10.1109/ICGSE.2011.21
   Farkas M.G., 2007, Social software in libraries: Building collaboration, communication, and community online
   Giuffrida R., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P108, DOI 10.1109/ICGSE-W.2011.22
   Greenhalgh T, 2005, BRIT MED J, V331, P1064, DOI 10.1136/bmj.38636.593461.68
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Isaacs E., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P179, DOI 10.1145/503376.503409
   Kaplan AM, 2010, BUS HORIZONS, V53, P59, DOI 10.1016/j.bushor.2009.09.003
   Kitchenham Barbara, 2007, 2007001 EBSE, V2
   Koch M, 2008, 21 BLED C ECOLLABORA
   Lykourentzou I, 2012, ENTERP INF SYST-UK, V6, P1, DOI 10.1080/17517575.2011.580008
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   Steinmacher I, 2010, LECT NOTES COMPUT SC, V6257, P185, DOI 10.1007/978-3-642-15714-1_15
NR 20
TC 39
Z9 44
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1143
EP 1164
DI 10.1016/j.infsof.2013.01.004
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900002
DA 2024-07-18
ER

PT J
AU Ciccozzi, F
   Cicchetti, A
   Sjödin, M
AF Ciccozzi, Federico
   Cicchetti, Antonio
   Sjodin, Mikael
TI Round-trip support for extra-functional property management in
   model-driven engineering of embedded systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Joint Conference of 14th EUROMICRO Digital Systems Design Conference
   (DSD) / 37th EUROMICRO Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 30-SEP 02, 2011
CL Univ Oulu, Oulu, FINLAND
SP EUROMICRO, IEEE Comp Soc
HO Univ Oulu
DE Model-driven engineering; Code generation; Back-propagation; Model
   transformations; Traceability; Extra-functional properties
ID VERIFICATION
AB Context: In order for model-driven engineering to succeed, automated code generation from models through model transformations has to guarantee that extra-functional properties specified at design level are preserved at code level.
   Objective: The goal of this research work is to provide a full round-trip engineering approach in order to evaluate quality attributes of the embedded system by code execution monitoring as well as code static analysis and then provide back-propagation of the resulting values to modelling level. In this way, properties that can only be roughly estimated statically are evaluated against observed values and this consequently allows to refine the design models for ensuring preservation of analysed extra-functional properties at code level.
   Method: Following the model-driven engineering vision, (meta-) models and transformations are used as main artefacts for the realisation of the round-trip support which is finally validated against an industrial case study.
   Result: This article presents an approach to support the whole round-trip process starting from the generation of source code for a target platform, passing through the monitoring of selected system quality attributes at code level, and finishing with the back-propagation of observed values to modelling level. The technique is validated against an industrial case study in the telecommunications applicative domain.
   Conclusion: Preservation of extra-functional properties through appropriate description, computation and evaluation makes it possible to reduce final product verification and validation effort and costs by generating correct-by-construction code. The proposed round-trip support aids a model-driven component-based development process in ensuring a desired level of extra-functional properties preservation from the source modelling artefacts to the generated code. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Ciccozzi, Federico; Cicchetti, Antonio; Sjodin, Mikael] Malardalen Univ, MRTC, Sch Innovat Design & Engn IDT, Vasteras, Sweden.
C3 Malardalen University
RP Ciccozzi, F (corresponding author), Malardalen Univ, MRTC, Sch Innovat Design & Engn IDT, Vasteras, Sweden.
EM federico.ciccozzi@mdh.se; antonio.cicchetti@mdh.se; mikael.sjodin@mdh.se
RI Cicchetti, Antonio/D-2375-2015
OI Cicchetti, Antonio/0000-0003-0416-1787
CR Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   [Anonymous], 2011, XPAND
   [Anonymous], 2009, ARTEMIS JU 216682
   Arora D, 2005, DES AUT TEST EUROPE, P178, DOI 10.1109/DATE.2005.266
   Balasubramanian K, 2006, COMPUTER, V39, P33, DOI 10.1109/MC.2006.54
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Bordin M, 2008, ECRTS 2008: PROCEEDINGS OF THE 20TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P135, DOI 10.1109/ECRTS.2008.12
   Boyko S., 2009, THE ART OF MODEL TRA
   Brosch F, 2010, LECT NOTES COMPUT SC, V6093, P36, DOI 10.1007/978-3-642-13821-8_5
   Cancila D, 2010, IEEE T IND INFORM, V6, P181, DOI 10.1109/TII.2010.2043741
   Childs A, 2006, COMPUTER, V39, P42, DOI 10.1109/MC.2006.51
   Chodrow S. E., 1995, MONITORING DEBUGGING, P103
   Ciccozzi F, 2011, EUROMICRO CONF PROC, P200, DOI 10.1109/SEAA.2011.39
   Crnkovic I, 2005, PROC INT CONF SOFTW, P712, DOI 10.1145/1062455.1062631
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Croxford M., 2006, P 10 AUSTR WORKSH SA, P43
   Czarnecki K., 2003, PROCEEDINGS OF OOPSL
   Die Linux, 2006, LINUX 2 6 9 MANUAL
   ESA, 2007, ASSERT PROJECT
   Gallina B, 2011, EUROMICRO CONF PROC, P493, DOI 10.1109/SEAA.2011.80
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Grammel Birgit., 2010, ECMFA TW 10 P 6 ECMF, P7
   Guerra E, 2007, LECT NOTES COMPUT SC, V4607, P269
   Handel R., 1998, ATM Networks: Concepts, Protocols, Applications, V3rd
   Hegedus Abel, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P145, DOI 10.1109/SEFM.2010.28
   IBM, 2010, RATIONAL SOFTWARE AR
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Ko JM, 2008, J SYST SOFTWARE, V81, P2079, DOI 10.1016/j.jss.2008.04.044
   Mahadevan G., 1995, PROCEEDINGS OF VHDL, P27
   Muller H., 2000, Proceedings of the Future of Software Engineering, P47, DOI [10.1145/336512.336526, DOI 10.1145/336512.336526]
   Nahman J. M., 2002, ENGINEERING ONLINE
   Navabi Z., 1992, PROCEEDINGS OF VHDL, P185
   Olsen GK, 2007, LECT NOTES COMPUT SC, V4530, P144
   OMG, 2010, ACTION LANGUAGE FOR
   OMG, 2008, QUERY VIEW TRANSFORM
   OMG, 2011, UML PROFILE FOR MART
   OMG, 2008, UML PROFILE FOR MODE
   SINTEF-ITC, 2006, COMPONENT AND MODEL
   Soley R, 2000, **NON-TRADITIONAL**
   Watterson C, 2007, IET SOFTW, V1, P172, DOI 10.1049/iet-sen:20060076
   Zeng L., 2003, Proceedings of the 12th International Conference on World Wide Web, P411, DOI [DOI 10.1145/775152.775211, 10.1145/775152.775211]
NR 41
TC 19
Z9 20
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 1085
EP 1100
DI 10.1016/j.infsof.2012.07.014
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 139LS
UT WOS:000318584800011
DA 2024-07-18
ER

PT J
AU Han, AR
   Bae, DH
AF Han, Ah-Rim
   Bae, Doo-Hwan
TI Dynamic profiling-based approach to identifying cost-effective
   refactorings
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cost-effective refactoring; Refactoring identification; Dynamic
   profiling; Dynamic method call; Maintainability improvement; Refactoring
   cost
ID COUPLING MEASUREMENT; METRICS
AB Context: Object-oriented software undergoes continuous changes-changes often made without consideration of the software's overall structure and design rationale. Hence, over time, the design quality of the software degrades causing software aging or software decay. Refactoring offers a means of restructuring software design to improve maintainability. In practice, efforts to invest in refactoring are restricted; therefore, the problem calls for a method for identifying cost-effective refactorings that efficiently improve maintainability. Cost-effectiveness of applied refactorings can be explained as maintainability improvement over invested refactoring effort (cost). For the system, the more cost-effective refactorings are applied, the greater maintainability would be improved. There have been several studies of supporting the arguments that changes are more prone to occur in the pieces of codes more frequently utilized by users; hence, applying refactorings in these parts would fast improve maintainability of software. For this reason, dynamic information is needed for identifying the entities involved in given scenarios/functions of a system, and within these entities, refactoring candidates need to be extracted.
   Objective: This paper provides an automated approach to identifying cost-effective refactorings using dynamic information in object-oriented software.
   Method: To perform cost-effective refactoring, refactoring candidates are extracted in a way that reduces dependencies; these are referred to as the dynamic information. The dynamic profiling technique is used to obtain the dependencies of entities based on dynamic method calls. Based on those dynamic dependencies, refactoring-candidate extraction rules are defined, and a maintainability evaluation function is established. Then, refactoring candidates are extracted and assessed using the defined rules and the evaluation function, respectively. The best refactoring (i.e., that which most improves maintainability) is selected from among refactoring candidates, then refactoring candidate extraction and assessment are re-performed to select the next refactoring, and the refactoring identification process is iterated until no more refactoring candidates for improving maintainability are found.
   Results: We evaluate our proposed approach in three open-source projects. The first results show that dynamic information is helpful in identifying cost-effective refactorings that fast improve maintainability; and, considering dynamic information in addition to static information provides even more opportunities to identify cost-effective refactorings. The second results show that dynamic information is helpful in extracting refactoring candidates in the classes where real changes had occurred; in addition, the results also offer the promising support for the contention that using dynamic information helps to extracting refactoring candidates from highly-ranked frequently changed classes.
   Conclusion: Our proposed approach helps to identify cost-effective refactorings and supports an automated refactoring identification process. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Han, Ah-Rim; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Han, AR (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
EM arhan@se.kaist.ac.kr; bae@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
FU Defense Acquisition Program Administration; Agency for Defense
   Development
FX This work was partially supported by Defense Acquisition Program
   Administration and Agency for Defense Development under the contract.
CR [Anonymous], 2012, INTELLIJ IDEA
   Arevalo G., 2003, P LMO 2003 LANGAGES, P47
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Bachmann F., 2007, TECHNICAL REPORT
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Biermann E., 2007, ELECTRONIC COMMUNICA, V3
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Burke M. G., 1999, Proceedings of the ACM 1999 Java Grande Conference, P129, DOI 10.1145/304065.304113
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Dmitriev M, 2004, INT SYM PERFORM ANAL, P141, DOI 10.1109/ISPASS.2004.1291366
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Ducasse S, 2000, PROCEEDINGS OF THE S, P1
   Fagin R, 2003, SIAM PROC S, P28
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garousi V, 2006, LECT NOTES COMPUT SC, V4199, P365
   Ghezzi C., 2002, FUNDAMENTALS OF SOFT
   Han A.-R., 2011, ARTOOL
   Han AR, 2010, J SYST SOFTWARE, V83, P222, DOI 10.1016/j.jss.2009.09.038
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P414, DOI 10.1109/ICSTW.2011.38
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hwu W. W., 1989, 16th Annual International Symposium on Computer Architecture (Cat. No.89CH2705-2), P242
   Jeon SU, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P337, DOI 10.1109/APSEC.2002.1183003
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kerievsky J., 2005, REFACTORING TO PATTE
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Liu H., 2012, T SOFTWARE ENG, P1
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   MENS T, 2007, SOFTWARE SYSTEMS MOD
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   OMG, 2010, UML 2 4 SUPERSTRUCTU
   Opdyke William F., 1992, THESIS
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Robbes R., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P161, DOI 10.1109/MSR.2010.5463278
   Roberts D., 1997, URBANA, V51, P61801
   Seng O., PROCEEDINGS OF THE 2, P1045
   Seng O., 2006, PROCEEDINGS OF THE 8, P1916
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Srivastava A, 2004, ACM SIGPLAN NOTICES, V39, P528, DOI 10.1145/989393.989446
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   Zhao Lei., 2006, Industrial Electronics and Applications -IEEE, P1
   Zibran MF, 2011, CONF PROC INT SYMP C, P266, DOI 10.1109/ICPC.2011.45
NR 52
TC 9
Z9 9
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 966
EP 985
DI 10.1016/j.infsof.2012.12.002
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 139LS
UT WOS:000318584800004
DA 2024-07-18
ER

PT J
AU Hu, H
   Jiang, CH
   Cai, KY
   Wong, WE
   Mathur, AP
AF Hu, Hai
   Jiang, Chang-Hai
   Cai, Kai-Yuan
   Wong, W. Eric
   Mathur, Aditya P.
TI Enhancing software reliability estimates using modified adaptive testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Software reliability; Software testing
ID MODELS
AB Context: Most software reliability models are based on a binary notion of correctness, i.e. "successful" or "failed." However, in several instances, it is important to account of failure severity to obtain more descriptive and accurate estimates of the reliability of the software.
   Objective: In this paper, we develop a set of extended metrics based on the Nelson's software reliability model to account for information gained from a user's point of view regarding the severity of the observed failures. Model formulation based on multi-granularity failure severity is provided, and the proposed metrics are proved to be backward compatible.
   Method: In order to estimate the software reliability through testing, an extended adaptive testing strategy, namely Modified Adaptive Testing (MAT) is proposed. The use of test history information allows the resulting test process to be adaptive in the selection of tests under limited test budget. Simulations and experiments on real-life programs are conducted to evaluate the effectiveness of MAT.
   Results: Data show that the reliability estimates obtained using MAT (a) are closer to the "true" reliability than those obtained using random testing and (b) lead to lower variance than the techniques used for comparison, which means MAT can be applied to help testers and reliability engineers better understand the reliability of their programs.
   Conclusion: It is concluded that the proposed approach can enhance the software reliability estimation testing by guiding the test case selection process by providing more descriptive and accurate results. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Hu, Hai; Jiang, Chang-Hai; Cai, Kai-Yuan] Beijing Univ Aeronaut & Astronaut, Dept Automat Control, Beijing 100191, Peoples R China.
   [Cai, Kai-Yuan] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
   [Wong, W. Eric] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Mathur, Aditya P.] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Beihang University; Chinese Academy of Sciences; Institute of Software,
   CAS; University of Texas System; University of Texas Dallas; Purdue
   University System; Purdue University
RP Hu, H (corresponding author), Beijing Univ Aeronaut & Astronaut, Dept Automat Control, Beijing 100191, Peoples R China.
EM huhai.orion@gmail.com; changhai.jiang@gmail.com; kycai@buaa.edu.cn;
   ewong@utdallas.edu; apm@s.purdue.edu
FU NSF [CCF-0851848]; National Natural Science Foundation of China
   [60973006]; Beijing Natural Science Foundation [4112033]
FX Part of this work was developed while Hai Hu was a visiting student at
   the University of Texas at Dallas under the supervision of Professor W.
   Eric Wong. This work was partially supported by the funding from NSF
   (CCF-0851848).; Cai is supported by the National Natural Science
   Foundation of China (Grant No. 60973006) and the Beijing Natural Science
   Foundation (Grant No. 4112033).
CR [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1990, Software testing techniques {
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Binder R.V., 2000, AW OBJ TECHNOL S
   Boland PJ, 2003, IEEE T RELIAB, V52, P168, DOI 10.1109/TR.2003.813166
   Cai KY, 2008, J SYST SOFTWARE, V81, P1406, DOI 10.1016/j.jss.2007.11.721
   Cai KY, 2004, INFORM SOFTWARE TECH, V46, P989, DOI 10.1016/j.infsof.2004.07.006
   Cai KY, 2005, EUR J OPER RES, V162, P552, DOI 10.1016/j.ejor.2002.11.002
   Cai KY, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P77
   Cai KY, 2002, INFORM SOFTWARE TECH, V44, P841, DOI 10.1016/S0950-5849(02)00108-8
   Cai KY, 2001, J SYST SOFTWARE, V58, P47, DOI 10.1016/S0164-1212(01)00027-9
   Cai KY, 2000, INFORM SCIENCES, V126, P137, DOI 10.1016/S0020-0255(00)00018-9
   CHEN MH, 1995, IEEE T RELIAB, V44, P97, DOI 10.1109/24.376528
   Chen MH, 2001, IEEE T RELIAB, V50, P165, DOI 10.1109/24.963124
   Dai YS, 2005, IEEE T RELIAB, V54, P100, DOI 10.1109/TR.2004.841709
   FENTON N, 1996, P SAF CRIT SYST S, P71
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Gokhale SS, 2006, IEEE T RELIAB, V55, P281, DOI 10.1109/TR.2006.874911
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Hernandez-Lerma O., 1989, Adaptive Markov Control Processes
   Herrmann D. S., 1998, Annual Reliability and Maintainability Symposium 1998 Proceedings. International Symposium on Product Quality and Integrity (Cat. No.98CH36161), P138, DOI 10.1109/RAMS.1998.653698
   Hu H, 2005, QSIC 2005: Fifth International Conference on Quality Software, Proceedings, P135
   Huang CY, 2003, IEEE T SOFTWARE ENG, V29, P261, DOI 10.1109/TSE.2003.1183936
   Hwang S, 2009, IEEE T SYST MAN CY A, V39, P200, DOI 10.1109/TSMCA.2008.2007982
   Jeske DR, 2005, IEEE T RELIAB, V54, P107, DOI 10.1109/TR.2004.842531
   Kanoun K, 1997, IEEE SOFTWARE, V14, P77, DOI 10.1109/52.582977
   Kapadia A.S., 2005, STAT SERIES TXB MONO
   KARUNANITHI N, 1992, IEEE T SOFTWARE ENG, V18, P563, DOI 10.1109/32.148475
   Levitin G, 2003, RELIAB ENG SYST SAFE, V82, P93, DOI 10.1016/S0951-8320(03)00136-4
   Lisnianski A., 2003, MULTISTATE SYSTEM RE
   LITTLEWOOD B, 2000, P SAF CRIT SYST S
   Malaiya Y. K., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P186, DOI 10.1109/ISSRE.1994.341373
   MUSA J.D., 1998, SOFTWARE RELIABILITY
   NELSON E, 1978, MICROELECTRON RELIAB, V17, P67, DOI 10.1016/0026-2714(78)91139-3
   Paul RA, 2000, P INT COMP SOFTW APP, V24, P439, DOI 10.1109/CMPSAC.2000.884761
   Pham H., 1993, GRAAM10737 EG ID NAT
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   Smidts C, 1998, IEEE T RELIAB, V47, P268, DOI 10.1109/24.740500
   Teng XL, 2006, IEEE T RELIAB, V55, P458, DOI 10.1109/TR.2006.879611
   WEISS SN, 1988, IEEE T SOFTWARE ENG, V14, P1512, DOI 10.1109/32.6196
   Whittaker J. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P93, DOI 10.1145/151299.151326
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wong WE, 2005, J SYST SOFTWARE, V76, P15, DOI 10.1016/j.jss.2004.06.026
   Xie M., 1991, SOFTWARE RELIABILITY
   Yacoub S, 2004, IEEE T RELIAB, V53, P465, DOI 10.1109/TR.2004.838034
   Yamada S., 1992, INT J SYST SCI, V23, P135
   Zhang XM, 2003, IEEE T SYST MAN CY A, V33, P114, DOI 10.1109/TSMCA.2003.812597
NR 49
TC 17
Z9 20
U1 1
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 288
EP 300
DI 10.1016/j.infsof.2012.08.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500008
DA 2024-07-18
ER

PT J
AU Van Gorp, P
   Dijkman, R
AF Van Gorp, Pieter
   Dijkman, Remco
TI A visual token-based formalization of BPMN 2.0 based on in-place
   transformations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE BPMN; BPM; MDA; Formal semantics; Graph transformation
ID ATTRIBUTED GRAPH TRANSFORMATION; PROCESS MODELS; SEMANTICS; TOOL;
   CONFLUENCE
AB Context: The Business Process Model and Notation (BPMN) standard informally defines a precise execution semantics. It defines how process instances should be updated in a model during execution. Existing formalizations of the standard are incomplete and rely on mappings to other languages.
   Objective: This paper provides a BPMN 2.0 semantics formalization that is more complete and intuitive than existing formalizations.
   Method: The formalization consists of in-place graph transformation rules that are documented visually using BPMN syntax. In-place transformations update models directly and do not require mappings to other languages. We have used a mature tool and test-suite to develop a reference implementation of all rules.
   Results: Our formalization is a promising complement to the standard, in particular because all rules have been extensively verified and because conceptual validation is facilitated (the informal semantics also describes in-place updates).
   Conclusion: Since our formalization has already revealed problems with the standard and since the BPMN is still evolving, the maintainers of the standard can benefit from our results. Moreover, tool vendors can use our formalization and reference implementation for verifying conformance to the standard. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Van Gorp, Pieter; Dijkman, Remco] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Van Gorp, P (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM p.m.e.v.gorp@tue.nl; r.m.dijkman@tue.nl
RI Dijkman, Remco/P-4281-2019; Dijkman, Remco M/B-2721-2014; Van Gorp,
   Pieter/L-9144-2013
OI Dijkman, Remco/0000-0003-4083-0036; Van Gorp, Pieter/0000-0001-5197-3986
CR Aalst W.M.P., 2009, ENCY DATABASE SYSTEM, P3557, DOI [10.1023/a:102288, DOI 10.1007/978-0-387-39940-9826]
   Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Bardohl R, 2003, LECT NOTES COMPUT SC, V3062, P413
   Biermann Enrico, 2010, International Journal on Software Tools for Technology Transfer, V12, P245, DOI 10.1007/s10009-010-0154-x
   Blomer Jakob, 2011, GRGEN USER MANUAL
   Buchwald Sebastian, 2008, 4 INT WORKSH GRAPH B
   Burmester S., 2004, International Journal on Software Tools for Technology Transfer, V6, P203, DOI 10.1007/s10009-004-0155-8
   Ceiss R, 2006, LECT NOTES COMPUT SC, V4178, P383
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   Dijkman R, 2010, LECT NOTES BUS INF, V67, P16
   Dijkman Remco, 2011, BPMN SEMANTICS COMPA
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dumas M, 2007, LECT NOTES COMPUT SC, V4803, P41
   Ehrig H., 1973, 14th Annual Symposium on Switching Automata Theory, P167, DOI 10.1109/SWAT.1973.11
   Ehrig H., 1997, HDB GRAPH GRAMMARS C, P247, DOI [10.1142/, DOI 10.1142/97898123847200004., DOI 10.1142/97898123847200004]
   Ehrig H, 2006, FUND INFORM, V74, P31
   Fischer T., 2000, LECT NOTES COMPUTER, P157
   Geiss Rubino, 2007, 20077 U KARLSR IPD G
   Geiss Rubino, 2008, THESIS U KARLSRUHE
   Gostelow Kim, 1972, ACM SIGPLAN, V7, P15
   Habel A., 2001, Foundations of Software Science and Computation Structures. 4th International Conference, FOSSACS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2030), P230
   Habel A., 1996, Fundamenta Informaticae, V26, P287
   Habel A, 2009, MATH STRUCT COMP SCI, V19, P245, DOI 10.1017/S0960129508007202
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Heckel R, 2006, ELECTRON NOTES THEOR, V148, P187, DOI 10.1016/j.entcs.2005.12.018
   Herrmannsdoerfer M, 2011, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.74.1
   Hoffmann Berthold, 2008, GRAPH COMPUTATION MO
   Jakumeit Edgar, 2010, International Journal on Software Tools for Technology Transfer, V12, P263, DOI 10.1007/s10009-010-0148-8
   Jakumeit Edgar, 2008, THESIS
   Jakumeit Edgar, 2011, APPL GRAPH TRANSFORM
   Kreowski HJ, 1997, INT J SOFTW ENG KNOW, V7, P479, DOI 10.1142/S0218194097000278
   Lambers L, 2008, LECT NOTES COMPUT SC, V5214, P162, DOI 10.1007/978-3-540-87405-8_12
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Minas M., 1995, Proceedings. 11th IEEE International Symposium on Visual Languages (Cat. No.95TB8105), P203, DOI 10.1109/VL.1995.520810
   MINAS M, 2006, P 3 INT WORKSH GRAPH, V1
   Muliawan Olaf, 2007, TEMPLATE BASED MODEL
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Object Management Group, 2010, BUS PROC MOD NOT BPM
   Object Management Group, 2011, MET OBJ FAC MOF
   Plump D, 2009, LECT NOTES COMPUT SC, V5725, P99, DOI 10.1007/978-3-642-03564-7_6
   Prandi D, 2008, LECT NOTES COMPUT SC, V5052, P249, DOI 10.1007/978-3-540-68265-3_16
   Prandi D, 2007, LECT NOTES COMPUT SC, V4749, P245
   Raedts I., 2007, MSVVEIS, P126
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rensink A, 2006, LECT NOTES COMPUT SC, V4178, P1
   Rensink Arend., 2010, International Journal on Software Tools for Technology Transfer, V12, P171, DOI DOI 10.1007/S10009-010-0157-7
   Roscoe A.W., 1998, THEORY PRACTICE CONC
   Rose LM, 2010, LECT NOTES COMPUT SC, V6394, P61
   Rose Louis M., 2010, TTC 10
   Schurr A., 1996, Graph Grammars and Their Application to Computer Science. 5th International Workshop. Selected Papers, P122, DOI 10.1007/3-540-61228-9_83
   Soltenborn C, 2011, J VISUAL LANG COMPUT, V22, P233, DOI 10.1016/j.jvlc.2010.12.005
   Soltenborn C, 2009, LECT NOTES COMPUT SC, V5795, P378, DOI 10.1007/978-3-642-04425-0_30
   Takemura T, 2008, 2008 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE, VOLS 1-3, PROCEEDINGS, P284, DOI 10.1109/APSCC.2008.208
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Van Gorp P, 2010, LECT NOTES COMPUT SC, V6395, P258
   Van Gorp Pieter, TRANSF TOOL CONT 200
   Van Gorp Pieter, 2011, ONL VIRT MACH REL TH
   Wong PYH, 2011, SCI COMPUT PROGRAM, V76, P633, DOI 10.1016/j.scico.2009.09.010
   Wong PYH, 2008, LECT NOTES COMPUT SC, V5256, P355, DOI 10.1007/978-3-540-88194-0_22
NR 63
TC 27
Z9 30
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 365
EP 394
DI 10.1016/j.infsof.2012.08.014
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500013
DA 2024-07-18
ER

PT J
AU Troya, J
   Vallecillo, A
   Durán, F
   Zschaler, S
AF Troya, Javier
   Vallecillo, Antonio
   Duran, Francisco
   Zschaler, Steffen
TI Model-driven performance analysis of rule-based domain specific visual
   models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-driven engineering; Domain specific visual languages; Performance
   analysis; Simulation
ID GRAPH TRANSFORMATION; TIME; SIMULATION; ANIMATION
AB Context: Domain-Specific Visual Languages (DSVLs) play a crucial role in Model-Driven Engineering (MDE). Most DSVLs already allow the specification of the structure and behavior of systems. However, there is also an increasing need to model, simulate and reason about their non-functional properties. In particular, QoS usage and management constraints (performance, reliability, etc.) are essential characteristics of any non-trivial system.
   Objective: Very few DSVLs currently offer support for modeling these kinds of properties. And those which do, tend to require skilled knowledge of specialized notations, which clashes with the intuitive nature of DSVLs. In this paper we present an alternative approach to specify QoS properties in a high-level and platform-independent manner.
   Method: We propose the use of special objects (observers) that can be added to the graphical specification of a system for describing and monitoring some of its non-functional properties.
   Results: Observers allow extending the global state of the system with the variables that the designer wants to analyze, being able to capture the performance properties of interest. A performance evaluation tool has also been developed as a proof of concept for the proposal.
   Conclusion: The results show how non-functional properties can be specified in DSVLs using observers, and how the performance of systems specified in this way can be evaluated in a flexible and effective way. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Troya, Javier; Vallecillo, Antonio; Duran, Francisco] Univ Malaga, Dept Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
   [Zschaler, Steffen] Kings Coll London, Dept Informat, London, England.
C3 Universidad de Malaga; University of London; King's College London
RP Troya, J (corresponding author), Univ Malaga, Dept Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
EM javiertc@lcc.uma.es; av@lcc.uma.es; duran@lcc.uma.es;
   steffen.zschaler@kcl.ac.uk
RI Zschaler, Steffen/AAC-4911-2020; Troya, Javier/B-6951-2017; Vallecillo,
   Antonio/B-1884-2014; Duran, Francisco/A-5373-2011; Durán,
   Francisco/JXL-7273-2024
OI Zschaler, Steffen/0000-0001-9062-6637; Troya,
   Javier/0000-0002-1314-9694; Vallecillo, Antonio/0000-0002-8139-9986;
   Duran, Francisco/0000-0001-5864-8094
FU Spanish Research Projects [TIN2008-031087, TIN2011-23795]
FX The authors would also like to thank the anonymous referees for their
   insightful comments and very constructive suggestions. This work has
   been supported by Spanish Research Projects TIN2008-031087 and
   TIN2011-23795.
CR [Anonymous], 2005, UML PROF MOD QUAL SE
   [Anonymous], 1999, 107465 ISOIEC FCD
   [Anonymous], P 2 OOPSLA WORKSHOP
   [Anonymous], 2007, LNCS
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 2005, UML PROF SCHED PERF
   Atenea, 2012, MOD APPR OBS SPEC PL
   Atenea, 2011, E MOT
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Boronat A, 2010, LECT NOTES COMPUT SC, V6013, P29, DOI 10.1007/978-3-642-12029-9_3
   Burmester S, 2005, PROC INT CONF SOFTW, P670
   Clarke S., 2005, ASPECT ORIENTED ANAL
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4422, P57
   de Lara J, 2004, J VISUAL LANG COMPUT, V15, P309, DOI 10.1016/j.jvlc.2004.01.005
   de Lara J, 2008, LECT NOTES COMPUT SC, V4961, P77, DOI 10.1007/978-3-540-78743-3_6
   de Lara J, 2010, LECT NOTES COMPUT SC, V6372, P266
   de Lara J, 2010, FORM ASP COMPUT, V22, P297, DOI 10.1007/s00165-009-0114-y
   Del Fabro MD, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P963, DOI 10.1145/1244002.1244215
   Drummond J., 2002, P 7 INT COMM CONTR R
   Efroni S, 2005, COMPUTER, V38, P38, DOI 10.1109/MC.2005.31
   Ehrig H., 2006, MONOGRAPHS TCS
   Ermel C, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P125, DOI 10.1109/VLHCC.2005.18
   Ermel C, 2008, ELECTRON NOTES THEOR, V213, P55, DOI 10.1016/j.entcs.2008.04.074
   Fritzsche M, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P244, DOI 10.1109/ECBS.2009.33
   Fritzsche M, 2009, LECT NOTES COMPUT SC, V5452, P134, DOI 10.1007/978-3-642-00434-6_9
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Gyapay S, 2002, LECT NOTES COMPUT SC, V2505, P120
   Hauswirth M., 2005, P OOPSLA 05 SAN DIEG
   Heckel R, 2006, FUND INFORM, V74, P63
   Heckel R, 2010, LECT NOTES COMPUT SC, V5765, P87, DOI 10.1007/978-3-642-17322-6_5
   Hill JH, 2011, KNOWLEDGE DISCOVERY PRACTICES AND EMERGING APPLICATIONS OF DATA MINING: TRENDS AND NEW DOMAINS, P174, DOI 10.4018/978-1-60960-067-9.ch009
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Khan Ajab, 2011, Proceedings of the International Conference on Data Communication Networking and International Conference on Optical Communication System. DCNET 2011. OPTICS 2011, P32
   Mania D., 2002, P P INF TECHN TEL IT
   Meseguer J, 2008, LECT NOTES COMPUT SC, V5065, P354, DOI 10.1007/978-3-540-68679-8_22
   Object Management Group (OMG), 2008, UML PROF MARTE MOD A
   Olveczky P. C., 2007, Higher-Order and Symbolic Computation, V20, P161, DOI 10.1007/s10990-007-9001-5
   Romero JR, 2007, J OBJECT TECHNOL, V6, P187, DOI 10.5381/jot.2007.6.9.a10
   Rivera J.E., 2009, P VL HCC 09 CORV OR
   Rivera J.E., 2010, LNCS, V6381
   Rivera J.E., 2008, International Conference on Software Language Engineering, P54, DOI DOI 10.1007/978-3-642-00434-6
   Rivera JE, 2009, SIMUL-T SOC MOD SIM, V85, P778, DOI 10.1177/0037549709341635
   Rockwell Automation, 2011, AR SIM SOFTW
   Slaby JM, 2006, 12TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P350, DOI 10.1109/RTCSA.2006.17
   ter Beek MH, 2008, LECT NOTES COMPUT SC, V4916, P133
   Torrini P, 2010, LECT NOTES COMPUT SC, V6013, P154
   Troya J., 2010, P S THEOR MOD SIM DE
   Troya J., 2009, P NFPINDSML 09 CEUR, V553
   Zschaler S, 2010, SOFTW SYST MODEL, V9, P161, DOI 10.1007/s10270-009-0115-6
NR 49
TC 16
Z9 16
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 88
EP 110
DI 10.1016/j.infsof.2012.07.009
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 036GA
UT WOS:000311013200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Elberzhager, F
   Rosbach, A
   Münch, J
   Eschbach, R
AF Elberzhager, Frank
   Rosbach, Alla
   Munch, Jurgen
   Eschbach, Robert
TI Reducing test effort: A systematic mapping study on existing approaches
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Efficiency improvement; Mapping study; Quality assurance; Software
   testing; Test effort reduction
ID REGRESSION TEST SELECTION; TEST DATA GENERATION; SOFTWARE-RELIABILITY;
   RESOURCE-ALLOCATION; LITERATURE-REVIEWS; COST; METRICS; FRAMEWORK;
   SUITE; TOOL
AB Context: Quality assurance effort, especially testing effort, is often a major cost factor during software development, which sometimes consumes more than 50% of the overall development effort. Consequently, one major goal is often to reduce testing effort.
   Objective: The main goal of the systematic mapping study is the identification of existing approaches that are able to reduce testing effort. Therefore, an overview should be presented both for researchers and practitioners in order to identify, on the one hand, future research directions and, on the other hand, potential for improvements in practical environments.
   Method: Two researchers performed a systematic mapping study, focusing on four databases with an initial result set of 4020 articles.
   Results: In total, we selected and categorized 144 articles. Five different areas were identified that exploit different ways to reduce testing effort: approaches that predict defect-prone parts or defect content, automation, test input reduction approaches, quality assurance techniques applied before testing, and test strategy approaches.
   Conclusion: The results reflect an increased interest in this topic in recent years. A lot of different approaches have been developed, refined, and evaluated in different environments. The highest attention was found with respect to automation and prediction approaches. In addition, some input reduction approaches were found. However, in terms of combining early quality assurance activities with testing to reduce test effort, only a small number of approaches were found. Due to the continuous challenge of reducing test effort, future research in this area is expected. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Elberzhager, Frank; Rosbach, Alla] Fraunhofer Inst Expt Software Engn IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
   [Eschbach, Robert] ITK Engn AG, D-76863 Herxheim, Germany.
C3 Fraunhofer Gesellschaft
RP Elberzhager, F (corresponding author), Fraunhofer Inst Expt Software Engn IESE, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM frank.elberzhager@iese.fraunhofer.de; alla.rosbach@iese.fraunhofer.de;
   juergen.muench@cs.helsinki.fi; robert.eschbach@itk-engineering.de
RI Münch, Jürgen/ABC-2316-2020
OI Münch, Jürgen/0000-0003-0327-8094; Eschbach, Robert/0000-0002-2789-1873
FU Stiftung Rheinland-Pfalz fur Innovation project "Qualitats-KIT" [925]
FX Parts of this work have been funded by the Stiftung Rheinland-Pfalz fur
   Innovation project "Qualitats-KIT" (Grant No. 925). We would like to
   thank Sonnhild Namingha for proofreading.
CR Afzal W., 2 INT S SEARCH BAS S, P79
   Ali S., 2010, IEEE Trans. Softw. Eng, V36, P1
   [Anonymous], 1990, 610121990 IEEE
   [Anonymous], 2007, Software for Dependable Systems: Sufficient Evidence?
   [Anonymous], HLTH SOC EC RES EC I
   [Anonymous], 2008, P ISSTA WORKSHOP DEF
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Barbosa DL, 2007, INT J SOFTW ENG KNOW, V17, P339, DOI 10.1142/S0218194007003276
   Baudry B, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.30
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Beer A, 1998, P INT COMP SOFTW APP, P470, DOI 10.1109/CMPSAC.1998.716698
   Belli F, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P193, DOI 10.1109/SSIRI.2009.40
   Bertolino A, 1997, J SYST SOFTWARE, V38, P47, DOI 10.1016/S0164-1212(97)00061-7
   Bing Jiang, 2010, 2010 2nd International Workshop on Education Technology and Computer Science (ETCS), P303, DOI 10.1109/ETCS.2010.365
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Biswal BN, 2008, ICIT 2008: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY, P244, DOI 10.1109/ICIT.2008.43
   Bluemke I, 2001, EUROMICRO CONF PROC, P130, DOI 10.1109/EURMIC.2001.952447
   Bokil P, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P359, DOI 10.1109/SSIRI.2009.53
   Boklund A, 2005, SERP '05: PROCEEDINGS OF THE 2005 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P302
   Brenner D, 2007, INFORM SYST FRONT, V9, P151, DOI 10.1007/s10796-007-9029-4
   Briones LB, 2006, LECT NOTES COMPUT SC, V4218, P399
   Calvagna A, 2009, IEEE ICST WORKSHOP, P10, DOI 10.1109/ICSTW.2009.7
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Catelani M, 2008, IEEE IMTC P, P1499, DOI 10.1109/IMTC.2008.4547280
   CHAAR JK, 1993, IEEE T SOFTWARE ENG, V19, P1055, DOI 10.1109/32.256853
   Changhyun Baek, 2005, WSEAS Transactions on Information Science and Applications, V2, P1214
   Chin-Yu Huang, 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P62, DOI 10.1109/ISSRE.1999.809311
   Cichos H., 2010, Proceedings 2010 Workshop on Model-Driven Engineering, Verification, and Validation (MoDeVVa 2010), P37, DOI 10.1109/MoDeVVa.2010.19
   Cui YX, 2009, 2009 THIRD INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION, VOL 3, PROCEEDINGS, P303, DOI 10.1109/IITA.2009.416
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Díaz E, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P241
   Ding WW, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 4, PROCEEDINGS, P180, DOI 10.1109/WCSE.2009.311
   Donghuo Chen, 2010, 2010 2nd International Conference on Software Technology and Engineering (ICSTE 2010), P125, DOI 10.1109/ICSTE.2010.5608898
   Elberzhager F., 2011, Proceedings of the 2011 International Conference on on Software and Systems Process (ICSSP '11), P3, DOI DOI 10.1145/1987875.1987880
   Elberzhager F., 2010, 21 INT S SOFTW REL E, P263
   Fraser G, 2007, ELECTRON NOTES THEOR, V190, P33, DOI 10.1016/j.entcs.2007.08.004
   Fraser G, 2007, LECT NOTES COMPUT SC, V4422, P291
   Fuqing Wang, 2009, 2009 Fourth International Conference on Innovative Computing, Information and Control (ICICIC 2009), P389, DOI 10.1109/ICICIC.2009.79
   Gallagher MJ, 1997, IEEE T SOFTWARE ENG, V23, P473, DOI 10.1109/32.624304
   Gallagher MJ, 1995, IEEE FIRST ICA3PP - IEEE FIRST INTERNATIONAL CONFERENCE ON ALGORITHMS AND ARCHITECTURES FOR PARALLEL PROCESSING, VOLS 1 AND 2, P575, DOI 10.1109/ICAPP.1995.472243
   Gegick M, 2007, 2 INT C INT MON PROT
   Gerlich R., 2006, DASIA DATA SYSTEMS A
   Giang L.T., 34 ANN IEEE COMP SOF, P51
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Graves TL, 1998, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.1998.671115
   Gupta Atul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P51
   GUPTA R, 1992, IFIP TRANS A, V12, P237
   Gupta R., 1993, Software Testing, Verification and Reliability, V3, P29, DOI 10.1002/stvr.4370030104
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Harman M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P185
   Haugset B, 2008, AGILE 2008, PROCEEDINGS, P27, DOI 10.1109/Agile.2008.82
   Hewett Rattikorn, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P703
   Hirayama M, 2004, IEICE T INF SYST, VE87D, P2733
   Hla KHS, 2008, 8TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY WORKSHOPS: CIT WORKSHOPS 2008, PROCEEDINGS, P527, DOI 10.1109/CIT.2008.Workshops.104
   Htoon CY, 2005, APSITT 2005: 6th Asia-Pacific Symposium on Information and Telecommunication Technologies, Proceedings, P160
   Huang CY, 2005, IEEE T RELIAB, V54, P592, DOI 10.1109/TR.2005.858099
   Huang CY, 2005, J SYST SOFTWARE, V77, P139, DOI 10.1016/j.jss.2004.10.014
   Huang CY, 2003, IEEE FIFTH INTERNATIOANL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P231
   Huang CY, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/ISSRE.2002.1173228
   Huang LG, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.127
   Hyo Young Kim, 2006, Journal of KISS: Software and Applications, V33, P605
   Illes-Seifert T, 2010, INFORM SOFTWARE TECH, V52, P539, DOI 10.1016/j.infsof.2009.11.010
   Im Kyungsoo., 2008, Proceedings of the 46th Annual Southeast Regional Conference on XX, ACM-SE 46, page, P180
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jagannath V, 2009, LECT NOTES COMPUT SC, V5503, P171
   Jha PC, 2009, COMPUT IND ENG, V57, P1122, DOI 10.1016/j.cie.2009.05.001
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kapur P. K., 2009, WSEAS Transactions on Systems, V8, P521
   Kaur Arashdeep, 2010, 2010 5th International Conference on Industrial and Information Systems (ICIIS 2010), P261, DOI 10.1109/ICIINFS.2010.5578698
   Kawakami L, 2007, LECT NOTES COMPUT SC, V4581, P199
   Khamis AM, 2007, COMPUT INFORM, V26, P383
   Khoshgoftaar T. M., 2002, Empirical Software Engineering, V7, P297, DOI 10.1023/A:1020511004267
   Kim Hyo Young, 2007, Journal of KISS: Software and Applications, V34, P212
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koru AG, 2003, J SYST SOFTWARE, V67, P153, DOI 10.1016/S0164-1212(02)00126-7
   Kpodjedo S, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P23, DOI 10.1109/SSBSE.2009.24
   Kuhn R, 2009, COMPUTER, V42, P94, DOI 10.1109/MC.2009.253
   Kuo SY, 2001, IEEE T RELIAB, V50, P310, DOI 10.1109/24.974129
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   Lazic L., 2006, WSEAS Transactions on Computers, V5, P2813
   Lea R.-J., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P345, DOI 10.1109/CMPSAC.1991.170201
   Li JJ, 2006, INFORM SOFTWARE TECH, V48, P1187, DOI 10.1016/j.infsof.2006.06.007
   Li N, 2009, IEEE INT CONF AUTOM, P515, DOI 10.1109/ASE.2009.67
   Li ZJ, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P106, DOI 10.1109/IWAST.2009.5069048
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Lili Pan, 2005, Proceedings. 11th Pacific Rim International Symposium on Dependable Computing
   Lin CT, 2008, J SYST SOFTWARE, V81, P1025, DOI 10.1016/j.jss.2007.10.002
   Lincke R., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P82, DOI 10.1109/QSIC.2010.9
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Luo Yunfeng, 2010, 2010 International Conference on Computer Design and Applications (ICCDA 2010), P191, DOI 10.1109/ICCDA.2010.5541206
   Marre M, 1996, PROC INT CONF SOFTW, P486, DOI 10.1109/ICSE.1996.493443
   Marrero Perez Abel, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P150, DOI 10.1109/ECBS.2010.23
   Martins E, 2005, LECT NOTES COMPUT SC, V3463, P453
   Martins E, 2003, LECT NOTES COMPUT SC, V2847, P282
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Miao HK, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P93, DOI 10.1109/PRDC.2009.23
   Michura J, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P404, DOI 10.1109/ITCC.2005.193
   Mohapatra D, 2009, 2009 WASE INTERNATIONAL CONFERENCE ON INFORMATION ENGINEERING, ICIE 2009, VOL I, P643, DOI 10.1109/ICIE.2009.22
   Moritz E, 2009, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE-COMPANION.2009.5070970
   Nachiyappan S., INT C COMM COMP INT
   Nagappan N, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/ISSRE.2007.18
   Neto PS, 2005, LECT NOTES COMPUT SC, V3520, P504
   Ngo MN, 2008, INFORM SOFTWARE TECH, V50, P641, DOI 10.1016/j.infsof.2007.06.006
   Nita M, 2009, PROC INT CONF SOFTW, P307, DOI 10.1109/ICSE-COMPANION.2009.5071008
   Nunes PRF, 2009, LECT NOTES COMPUT SC, V5826, P229, DOI 10.1007/978-3-642-05031-2_17
   Ohlsson N., 1997, Empirical Software Engineering, V2, P166, DOI 10.1023/A:1009757419320
   Olague HM, 2008, J SOFTW MAINT EVOL-R, V20, P171, DOI 10.1002/smr.366
   Oster N, 2005, LECT NOTES COMPUT SC, V3712, P212
   Oster N, 2006, LECT NOTES COMPUT SC, V4166, P426
   Ostrand T. J., 2004, "Second International Workshop on Dynamic Analysis (WODA 2004)" W10S Workshop - 26th International Conference on Software Engineering, P1, DOI 10.1049/ic:20040292
   Pan NG, 2010, I C WIREL COMM NETW, DOI 10.1109/WICOM.2010.5601284
   Pandey A. K., 2010, 2010 2nd International Conference on Reliability, Safety and Hazard - Risk-Based Technologies and Physics-of-Failure Methods (ICRESH 2010), P136, DOI 10.1109/ICRESH.2010.5779531
   PAUL RA, 1994, PROC INT C TOOLS ART, P534, DOI 10.1109/TAI.1994.346386
   Penaloza M, 2001, COMPUTERS AND THEIR APPLICATIONS, P358
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Pinte F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P927
   Pocatilu Paul, 2009, Open Source Science Journal, V1, P163
   Usaola MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2010.79
   Prabhu J., 2010, Proceedings Second International Conference on Computer Research and Development (ICCRD 2010), P373, DOI 10.1109/ICCRD.2010.77
   Qing Gu, 2010, 2010 International Symposium on Parallel and Distributed Processing with Applications (ISPA 2010), P419, DOI 10.1109/ISPA.2010.62
   Romli Rohaida, 2010, Proceedings of 2010 International Symposium on Information Technology (ITSim 2010), P1186, DOI 10.1109/ITSIM.2010.5561488
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Salima T. M. S., 2008, 2007 International Conference on Computational Intelligence and Multimedia Applications, P103, DOI 10.1109/ICCIMA.2007.294
   Sant Jessica., 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Saraph P, 2003, IEEE SYS MAN CYBERN, P768
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   Seung Hak Kuk, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P694, DOI 10.1109/CSSE.2008.1026
   Shatnawi Omar, 2008, WSEAS Transactions on Computers, V7, P1375
   Shatnawi O, 2008, REC ADV COMPUT ENG, P993
   SHERRIFF M, 2005, 1 INT WORKSH ADV MOD
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Sisodia RS, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P134, DOI 10.1109/ICSEA.2009.28
   Smith A.M., 2009, P 2009 ACM S APPL CO, p[461, 467], DOI DOI 10.1145/1529282.1529382
   SPILLNER A, 1995, SOFTWARE QUAL J, V4, P275, DOI 10.1007/BF00402648
   Talby D, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P154, DOI 10.1109/IWAST.2009.5069055
   Teng XL, 2002, IEEE T RELIAB, V51, P311, DOI 10.1109/TR.2002.801853
   Travison Dan, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P377, DOI 10.1109/ICST.2008.69
   Tsai WT, 2007, HASE 2007: 10TH IEEE HIGH ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P105, DOI 10.1109/HASE.2007.64
   Tsai WT, 2003, IEEE IPCCC, P335
   Vieira M., 2006, AST, P9, DOI DOI 10.1145/1138929.1138932
   Vokolos FI, 1997, RELIABILITY, QUALITY AND SAFETY OF SOFTWARE-INTENSIVE SYSTEMS, P3
   Wagner Stefan, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P248, DOI 10.1109/ICST.2008.63
   Wassermann G., 2008, P 2008 INT S SOFTW T, P249, DOI DOI 10.1145/1390630.1390661
   Wei Jin, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P137, DOI 10.1109/ICST.2010.64
   Whitmill K., 1996, STAR '96: Fifth International Conference, Software Testing, Analysis and Review. Conference Proceedings and Papers, and Daily Conference Notebook, P123
   Winkler D, 2010, LECT NOTES COMPUT SC, V6156, P17, DOI 10.1007/978-3-642-13792-1_4
   Wojcicki Margaret A., 2007, Fifth International Workshop on Software Quality (WoSQ'07: ICSE Workshops 2007), DOI 10.1109/WOSQ.2007.4
   Wong WE, 2005, IEEE INT C ENG COMP, P539
   Woo G, 2007, LECT NOTES COMPUT SC, V4498, P100
   Xie Q, 2008, PROC IEEE INT CONF S, P468, DOI 10.1109/ICSM.2008.4658108
   Xie T., 2006, AOSD '06, P190
   Xu W, 2010, P IEEE ICC, P1, DOI DOI 10.2118/132218-MS
   Yin YF, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY AND COMPUTER SCIENCE, VOL 1, PROCEEDINGS, P69, DOI 10.1109/ITCS.2009.23
   Yu YT, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P83, DOI 10.1109/QSIC.2003.1319089
   Zakaria Z, 2009, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC.2009.72
   Zhao J., 2006, P 2 WORKSHOP TESTING, P21
   Zhao RL, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P3, DOI 10.1109/TAICPART.2009.33
NR 159
TC 34
Z9 37
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2012
VL 54
IS 10
BP 1092
EP 1106
DI 10.1016/j.infsof.2012.04.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983QK
UT WOS:000307133600004
DA 2024-07-18
ER

PT J
AU Lehtinen, TOA
   Mäntylä, MV
   Vanhanen, J
AF Lehtinen, Timo O. A.
   Mantyla, Mika V.
   Vanhanen, Jari
TI Development and evaluation of a lightweight root cause analysis method
   (ARCA method) - Field studies at four software companies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Root cause analysis; Problem prevention; Software process improvement;
   Industrial field study; Design science research; Cause-effect diagram
ID PROCESS IMPROVEMENT; SCIENCE; DESIGN
AB Context: The key for effective problem prevention is detecting the causes of a problem that has occurred. Root cause analysis (RCA) is a structured investigation of the problem to identify which underlying causes need to be fixed. The RCA method consists of three steps: target problem detection, root cause detection, and corrective action innovation. Its results can help with process improvement.
   Objective: This paper presents a lightweight RCA method, named the ARCA method, and its empirical evaluation. In the ARCA method, the target problem detection is based on a focus group meeting. This is in contrast to prior RCA methods, where the target problem detection is based on problem sampling, requiring heavy startup investments.
   Method: The ARCA method was created with the framework of design science. We evaluated it through field studies at four medium-sized software companies using interviews and query forms to collect feedback from the case attendees. A total of five key representatives of the companies were interviewed, and 30 case participants answered the query forms. The output of the ARCA method was also evaluated by the case attendees, i.e., a total 757 target problem causes and 124 related corrective actions.
   Results: The case attendees considered the ARCA method useful and easy to use, which indicates that it is beneficial for process improvement and problem prevention. In each case, 24-77 target problem root causes were processed and 13-40 corrective actions were developed. The effort of applying the method was 89 man-hours, on average.
   Conclusion: The ARCA method required an acceptable level of effort and resulted in numerous high-quality corrective actions. In contrast to the current company practices, the method is an efficient method to detect new process improvement opportunities and develop new process improvement ideas. Additionally, it is easy to use. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Lehtinen, Timo O. A.; Mantyla, Mika V.; Vanhanen, Jari] Aalto Univ, Sch Sci, Dept Comp Sci & Engn, FI-00076 Aalto, Finland.
C3 Aalto University
RP Lehtinen, TOA (corresponding author), Aalto Univ, Sch Sci, Dept Comp Sci & Engn, POB 19210, FI-00076 Aalto, Finland.
EM timo.o.lehtinen@aalto.fi; mika.mantyla@aalto.fi; jari.vanhanen@aalto.fi
RI Mäntylä, Mika V/E-7644-2012; Vanhanen, Jari/G-6041-2012
OI Vanhanen, Jari/0000-0002-0278-3665; Mantyla, Mika/0000-0002-2841-5879
CR Al-Mamory SO, 2009, COMPUT COMMUN, V32, P419, DOI 10.1016/j.comcom.2008.11.012
   Ammerman M., 1998, ROOT CAUSE ANAL HDB
   Andersen Bjorn, 2006, Root cause analysis: simplified tools and techniques
   [Anonymous], 2008, P 2008 WORKSHOP DEFE, DOI DOI 10.1145/1390817.1390829
   BHANDARI I, 1993, IEEE T SOFTWARE ENG, V19, P1157, DOI 10.1109/32.249661
   Bjornson FO, 2009, INFORM SOFTWARE TECH, V51, P150, DOI 10.1016/j.infsof.2008.02.003
   Burnstein Ilene., 2003, Practical Software Testing: A Process-Oriented Approach
   Burr A., 1996, STAT METHODS SOFTWAR
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   CARD DN, 1993, QUALITY TIME, V10, P98
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Foddy W., 1994, CONSTRUCTING QUESTIO, DOI DOI 10.1016/S0031-9406(10)61110-8
   Glass RL, 2002, IEEE SOFTWARE, V19, P111
   Grady RB, 1996, HEWLETT-PACKARD J, V47, P15
   Gupta A, 2009, EMPIR SOFTW ENG, V14, P227, DOI 10.1007/s10664-008-9081-9
   GURSIMRAN SW, 2009, INFORM SOFTWARE TECH, V51, P1087
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Jalote P., 2005, Proceedings of the Information Science and Communications Technology (ICICT 2005), P701
   Jin Z, 2007, J DAIRY SCI, V90, P79
   Kalinowski M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P199, DOI 10.1109/SEAA.2008.47
   Kavadias S, 2009, MANAGE SCI, V55, P1899, DOI 10.1287/mnsc.1090.1079
   Latino R J., 2006, Root cause analysis: improving performance for bottom-line results
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   LIVINGSTONE AD, 2001, CONTRACT RES REPORT, V325, P1
   Mantyla M., SOFTWARE QUALI UNPUB
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   MAYS RG, 1990, IEEE J SEL AREA COMM, V8, P164, DOI 10.1109/49.46867
   Rooney J.J., 2004, QUAL PROG, V37, P45
   Rooney JJ, 2003, QUAL PROG, V36, P104
   RUNESON P, 2008, EMPIR SOFTW ENG, P131
   SIEKKINEN M, 2008, COMPUTER NETWORKS, P1846
   STALHANE T, 2004, EUROSPI 2004 TRONDH, P150
   Stevenson J., 2021, PAVEMENT MANUAL
   Traeger A, 2008, PERF E R SI, V36, P277, DOI 10.1145/1384529.1375489
   Whiston S.C., 1993, J CAREER DEV, V19, P175
NR 36
TC 27
Z9 29
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1045
EP 1061
DI 10.1016/j.infsof.2011.05.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200002
DA 2024-07-18
ER

PT J
AU Iivari, J
   Iivari, N
AF Iivari, Juhani
   Iivari, Netta
TI The relationship between organizational culture and the deployment of
   agile methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systems development; Agile methods; Organizational culture; Competing
   Values Model
ID SYSTEMS-DEVELOPMENT METHODOLOGIES; SOFTWARE-DEVELOPMENT;
   INFORMATION-SYSTEMS; ENTERPRISE AGILITY; USABILITY WORK; SPIRAL MODEL;
   COMMUNITIES; FRAMEWORK; STATE; VIEW
AB Context: Systems development normally takes place in a specific organizational context, including organizational culture. Previous research has identified organizational culture as a factor that potentially affects the deployment systems development methods.
   Objective: The purpose is to analyze the relationship between organizational culture and the post-adoption deployment of agile methods.
   Method: This study is a theory development exercise. Based on the Competing Values Model of organizational culture, the paper proposes a number of hypotheses about the relationship between organizational culture and the deployment: of agile methods.
   Results: Inspired by the agile methods thirteen new hypotheses are introduced and discussed. They have interesting implications, when contrasted with ad hoc development and with traditional systems development methods.
   Conclusion: Because of the conceptual richness of organizational culture and the ambiguity of the concept of agility the relationship between organizational culture and the deployment of agile systems development forms a rich and interesting research topic. Recognizing that the Competing Values Model represents just one view of organizational culture, the paper introduces a number of alternative conceptions and identifies several interesting paths for future research into the relationship between organizational culture and agile methods deployment. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Iivari, Juhani; Iivari, Netta] Univ Oulu, Dept Informat Proc Sci, Oulu 90014, Finland.
C3 University of Oulu
RP Iivari, J (corresponding author), Univ Oulu, Dept Informat Proc Sci, POB 3000, Oulu 90014, Finland.
EM juhani.iivari@oulu.fi; netta.iivari@oulu.fi
OI Iivari, Juhani/0000-0002-5981-2463
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abrahamsson P, 2009, EUR J INFORM SYST, V18, P281, DOI 10.1057/ejis.2009.27
   ALLAIRE Y, 1984, ORGAN STUD, V5, P193, DOI 10.1177/017084068400500301
   ALVESSON M, 1990, ACTA SOCIOL, V33, P31, DOI 10.1177/000169939003300103
   [Anonymous], 1984, Managing organizational transitions, DOI DOI 10.1016/S0065-2113(08)60255-2
   [Anonymous], 2005, Communications of the ACM
   [Anonymous], 1952, CULTURE CRITICAL REV
   [Anonymous], 1994, The Management of Innovation
   [Anonymous], P 42 HAW INT C SYST
   Avison D.E., 1995, INFORM TECHNOLOGY PE, V8, P43, DOI DOI 10.1108/09593849510098262
   Aydin MN, 2005, J DATABASE MANAGE, V16, P24, DOI 10.4018/jdm.2005100102
   Bansler JP, 2004, INFORMATION SYSTEMS RESEARCH: RELEVANT THEORY AND INFORMED PRACTICE, P631
   Basili V. R., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P345
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Brown J., 1989, Educational Researcher, V18, P32, DOI [DOI 10.3102/0013189X018001032, 10.3102/0013189X018001032, DOI 10.2307/1176008]
   Brown JS, 1991, ORGAN SCI, V2, P40, DOI 10.1287/orsc.2.1.40
   CAMERON KS, 1986, MANAGE SCI, V32, P539, DOI 10.1287/mnsc.32.5.539
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Chan FKY, 2009, DECIS SUPPORT SYST, V46, P803, DOI 10.1016/j.dss.2008.11.009
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Cusumano M.A., 1995, Microsoft secrets how the world's most powerful software company creates technology, shapes markets, and manages people
   Czarniawska-Joerges Barbara., 1992, EXPLORING COMPLEX OR
   Denison DR., 1991, Research in Organizational Change and Development, V5, P1
   Dubin R., 1978, THEORY BUILDING
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Erickson J, 2005, J DATABASE MANAGE, V16, P88, DOI 10.4018/jdm.2005100105
   Faludi Andreas., 1973, PLAN THEOR
   Fishbein Martin., 1975, Attitude, Intention and Behavior: An Introduction to Theory and Research
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   GAGLIARDI P, 1986, ORGAN STUD, V7, P117, DOI 10.1177/017084068600700203
   Gallivan M., 2005, Information and Organization, V15, P295, DOI 10.1016/j.infoandorg.2005.02.005
   Geertz Clifford, 1973, The Interpretation of Culture: Selected Essays, pch1
   Green G.C., 2004, Journal of High Technology Management Research, V15, P123, DOI DOI 10.1016/J.HITECH.2003.10.001
   GREGORY KL, 1983, ADMIN SCI QUART, V28, P359, DOI 10.2307/2392247
   HARMSEN F, 1994, IFIP TRANS A, V55, P169
   Hofstede, 2001, Culture's Consequences: International Differences in Work-Related Values
   HOFSTEDE G, 1990, ADMIN SCI QUART, V35, P286, DOI 10.2307/2393392
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   HUISMAN HM, 2000, THESIS POTCHEFSTROOM
   Huisman M, 2006, INFORM MANAGE-AMSTER, V43, P29, DOI 10.1016/j.im.2005.01.005
   IIVARI J, 1990, INFORM SOFTWARE TECH, V32, P450, DOI 10.1016/0950-5849(90)90160-S
   Iivari J, 2004, INFORM SYST J, V14, P313, DOI 10.1111/j.1365-2575.2004.00177.x
   Iivari J, 2000, J MANAGE INFORM SYST, V17, P179, DOI 10.1080/07421222.2000.11045656
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   Iivari J, 2007, MIS QUART, V31, P35
   Iivari J, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P203, DOI 10.1007/978-3-642-12575-1_10
   Iivari N, 2006, INTERACT COMPUT, V18, P635, DOI 10.1016/j.intcom.2005.10.002
   Iivari N, 2010, J ORGAN END USER COM, V22, P40, DOI 10.4018/joeuc.2010070103
   Kappos A, 2008, MIS QUART, V32, P601
   Kautz K, 2008, LECT NOTES BUS INF P, V9, P137
   Keesing R. M., 1998, CULTURAL ANTHR
   Kunda G., 1992, CONTROL COMMITMENT H
   Lave J., 1991, SITUATED LEARNING LE, DOI DOI 10.1017/CBO9780511815355
   LEE X, 2010, MIS Q, V34, P87
   Leidner DE, 2006, MIS QUART, V30, P357
   Lett J., 1987, The human enterprise: A critical introduction to anthropological theory
   LYYTINEN K, 1986, EC STAT, V8
   Merisalo-Rantanen H, 2005, J DATABASE MANAGE, V16, P41, DOI 10.4018/jdm.2005100103
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Ortner SherryB., 1999, FATE CULTURE, P1
   Overby E, 2006, EUR J INFORM SYST, V15, P120, DOI 10.1057/palgrave.ejis.3000600
   Parsons D, 2007, INT FED INFO PROC, V235, P235
   QUINN RE, 1983, MANAGE SCI, V29, P363, DOI 10.1287/mnsc.29.3.363
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Robey D., 1994, ACCOUNTING MANAGEMEN, V4, P23
   ROBINSON H, 2005, P AG DEV C ADC 05
   Sarker S, 2009, INFORM SYST RES, V20, P440, DOI 10.1287/isre.1090.0241
   Schein E.H., 2010, ORG CULTURE LEADERSH, V2
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   Sherehiy B, 2007, INT J IND ERGONOM, V37, P445, DOI 10.1016/j.ergon.2007.01.007
   Siakas Kerstin V., 2007, Software Process: Improvement and Practice, V12, P597, DOI 10.1002/spip.344
   SMIRCICH L, 1983, ADMIN SCI QUART, V28, P339, DOI 10.2307/2392246
   Suscheck Charles A., 2008, Software Process: Improvement and Practice, V13, P52, DOI 10.1002/spip.385
   TOLFO C, SOFTWARE PR IN PRESS
   Tolfo C, 2008, J SYST SOFTWARE, V81, P1955, DOI 10.1016/j.jss.2008.01.014
   Turk D, 2005, J DATABASE MANAGE, V16, P62, DOI 10.4018/jdm.2005100104
   van Oosterhout M, 2006, EUR J INFORM SYST, V15, P132, DOI 10.1057/palgrave.ejis.3000601
   VANMAANEN J, 1984, RES ORGAN BEHAV, V6, P287
   Vijayasarathy L., 2008, Journal of Information Technology Management, V19, P1, DOI DOI 10.3998/3336451.0011.104
   Wang X, 2007, ADV INTEL SYS RES, DOI 10.2991/iske.2007.208
NR 87
TC 114
Z9 141
U1 3
U2 88
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 509
EP 520
DI 10.1016/j.infsof.2010.10.008
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 742DI
UT WOS:000288919900008
DA 2024-07-18
ER

PT J
AU Lane, S
   Richardson, I
AF Lane, Stephen
   Richardson, Ita
TI Process models for service-based applications: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE SOA; Service-based application; Software process; Systematic literature
   review
ID SOFTWARE-DEVELOPMENT
AB Context: Service-Oriented Computing (SOC) is a promising computing paradigm which facilitates the development of adaptive and loosely coupled service-based applications (SBAs). Many of the technical challenges pertaining to the development of SBAs have been addressed, however, there are still outstanding questions relating to the processes required to develop them.
   Objective: The objective of this study is to systematically identify process models for developing service-based applications (SBAs) and review the processes within them. This will provide a useful starting point for any further research in the area. A secondary objective of the study is to identify process models which facilitate the adaptation of SBAs.
   Method: In order to achieve this objective a systematic literature review (SLR) of the existing software engineering literature is conducted.
   Results: During this research 722 studies were identified using a predefined search strategy, this number was narrowed down to 57 studies based on a set of strict inclusion and exclusion criteria. The results are reported both quantitatively in the form of a mapping study, as well as qualitatively in the form of a narrative summary of the key processes identified.
   Conclusion: There are many process models reported for the development of SBAs varying in detail and maturity, this review has identified and categorised the processes within those process models. The review has also identified and evaluated process models which facilitate the adaptation of SBAs. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Lane, Stephen; Richardson, Ita] Univ Limerick, Irish Software Engn Res Ctr, Limerick, Ireland.
C3 University of Limerick
RP Lane, S (corresponding author), Univ Limerick, Irish Software Engn Res Ctr, Limerick, Ireland.
EM stephen.lane@lero.ie; ita.richardson@lero.ie
OI Richardson, Ita/0000-0002-5493-2837
FU European Community [FP7/2007-2013, 215483]; Lero - the Irish Software
   Engineering Research Centre, Science Foundation Ireland [03/CE2/1303.1]
FX The research leading to these results has received funding from the
   European Community's Seventh Framework Programme FP7/2007-2013 under
   grant agreement 215483 (S-Cube) and has been supported, in part, by Lero
   - the Irish Software Engineering Research Centre, Science Foundation
   Ireland Grant No. 03/CE2/1303.1.
CR [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2008, PROC 12 INT C EVAL A
   Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   BENBERNOU S, 2008, STATE ART REPORT GAP
   BUDGEN D, 2008, P PPIG 2008 LANC U, P195
   Canal C., 2006, LOBJET, V12, P9
   Cao X., 2008, Journal of Shanghai University, V12, P515
   *CP TEAM, 2006, CMUSEI2006TR008 CP T
   Derniame Jean-Claude., 1999, SOFTWARE PROCESS PRI
   Durvasula S., 2007, INTRO SERVICE LIFE 3
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Foster H, 2008, LECT NOTES COMPUT SC, V5364, P558, DOI 10.1007/978-3-540-89652-4_46
   Giunchiglia F, 2002, LECT NOTES COMPUT SC, V2585, P162
   GU Q, 2009, SERVICE ORIENTED COM, P1
   Herzum P., 2000, Business Components Factory: A Comprehensive Overview of Component-Based Development for the Enterprise
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   *INT ORG STAND, 2007, 1550452006 ISOIEC
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kozaczynski W, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/MS.1998.714621
   LANE S, 2010, LEROTR201008 U LIM I
   *NASA, NASA LARC FORM METH
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   ROYCE W, 1970, P IEEE WESCON, V26, P9
   *S CUB, 2010, S CUB KNOWL MOD
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
NR 26
TC 16
Z9 18
U1 1
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 424
EP 439
DI 10.1016/j.infsof.2010.12.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 742DI
UT WOS:000288919900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Petersen, K
AF Petersen, Kai
TI Measuring and predicting software productivity: A systematic map and
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software productivity; Software development; Efficiency; Performance;
   Measurement; Prediction
ID PROCESS SIMULATION; MODEL; POINTS
AB Context: Software productivity measurement is essential in order to control and improve the performance of software development. For example, by identifying role models (e.g. projects, individuals, tasks) when comparing productivity data. The prediction is of relevance to determine whether corrective actions are needed, and to discover which alternative improvement action would yield the best results.
   Objective: In this study we identify studies for software productivity prediction and measurement. Based on the identified studies we first create a classification scheme and map the studies into the scheme (systematic map). Thereafter, a detailed analysis and synthesis of the studies is conducted.
   Method: As a research method for systematically identifying and aggregating the evidence of productivity measurement and prediction approaches systematic mapping and systematic review have been used.
   Results: In total 38 studies have been identified, resulting in a classification scheme for empirical research on software productivity. The mapping allowed to identify the rigor of the evidence with respect to the different productivity approaches. In the detailed analysis the results were tabulated and synthesized to provide recommendations to practitioners.
   Conclusion: Risks with simple ratio-based measurement approaches were shown. In response to the problems data envelopment analysis seems to be a strong approach to capture multivariate productivity measures, and allows to identify reference projects to which inefficient projects should be compared. Regarding simulation no general prediction model can be identified. Simulation and statistical process control are promising methods for software productivity prediction. Overall, further evidence is needed to make stronger claims and recommendations. In particular, the discussion of validity threats should become standard, and models need to be compared with each other. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Petersen, Kai] Blekinge Inst Technol, Sch Comp, SE-37225 Blekinge, Sweden.
   [Petersen, Kai] Ericsson AB, SE-37123 Stockholm, Sweden.
C3 Blekinge Institute Technology; Ericsson
RP Petersen, K (corresponding author), Blekinge Inst Technol, Sch Comp, Box 520, SE-37225 Blekinge, Sweden.
EM kai.petersen@bth.se
OI Petersen, Kai/0000-0002-1532-8223
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1986, Meta-analysis: Quantitative methods for research synthesis
   [Anonymous], INT SERIES SOFTWARE
   Arnold M, 1998, PROC INT CONF SOFTW, P490, DOI 10.1109/ICSE.1998.671613
   Asmild M., 2006, Software Process Improvement and Practice, V11, P561, DOI 10.1002/spip.298
   Baldassarre MT, 2005, PROC IEEE INT CONF S, P273
   BANKER RD, 1991, MANAGE SCI, V37, P1, DOI 10.1287/mnsc.37.1.1
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Biffl S., 2005, Value-Based Software Engineering
   Boehm BW., 1981, Software Engineering Economics
   Bok HS, 2000, J INFORM TECHNOL, V15, P79, DOI 10.1080/026839600344429
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   CHATMAN VV, 1995, J SYST SOFTWARE, V31, P71, DOI 10.1016/0164-1212(94)00088-5
   Cohen J., 2013, APPL MULTIPLE REGRES
   DALE CJ, 1992, INFORM SOFTWARE TECH, V34, P731, DOI 10.1016/0950-5849(92)90168-O
   Dixon-Woods Mary, 2005, J Health Serv Res Policy, V10, P45, DOI 10.1258/1355819052801804
   Donzelli P., 2001, Software Process Improvement and Practice, V6, P97, DOI 10.1002/spip.138
   Donzelli P, 1999, VTT SYMP, V195, P525
   Dyba T., 2007, Proc. of the First Int. Symp. on Empirical Software Engineering and Measurement, P225
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Finnie G. R., 1994, South African Computer Journal, P18
   Foulds LR, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P724, DOI 10.1109/ICIS.2007.174
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   Hanakawa N, 1998, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.1998.671388
   HUMPHREY WS, 1991, IEEE T SOFTWARE ENG, V17, P196, DOI 10.1109/32.67600
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   JEFFERY DR, 1987, J SYST SOFTWARE, V7, P115, DOI 10.1016/0164-1212(87)90016-1
   KADARY V, 1992, P C COMP SYST SOFTW, P666
   Kaplan R.S., 1996, The balanced scorecard: translating strategy into action
   Khosrovian K, 2008, LECT NOTES COMPUT SC, V5007, P294, DOI 10.1007/978-3-540-79588-9_26
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   KITCHENHAM B, 1991, J SYST SOFTWARE, V83, P293
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   Kitchenham B, 2007, IEEE SOFTWARE, V24, P73, DOI 10.1109/MS.2007.49
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Koch A.S., 2005, Agile Software Development : Evaluating The Methods For Your Organization
   Larman Craig., 2003, AGILE ITERATIVE DEV
   LI R, 2006, P 30 INT C COMP SOFT, V2, P135
   Lin CY, 1997, J SYST SOFTWARE, V38, P263, DOI 10.1016/S0164-1212(96)00156-2
   LIPING D, 2005, P INT SOFTW PROC WOR
   List B, 2005, Sixteenth International Workshop on Database and Expert Systems Applications, Proceedings, P941, DOI 10.1109/DEXA.2005.109
   LOUGH SL, 2001, THESIS VIRGINIA POLY
   Mahmood MA, 1996, DECISION SCI, V27, P57, DOI 10.1111/j.1540-5915.1996.tb00843.x
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   Morasca S, 2001, P INT COMP SOFTW APP, P317, DOI 10.1109/CMPSAC.2001.960633
   Münch J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P18, DOI 10.1109/ISESE.2003.1237961
   NUMRICH LRW, 2005, P 2 INT WORKSH SOFTW, P13
   PETERSEN K, 2010, SUPPLEMENTARY MAT SY
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Pfahl D., 2002, Software Process Improvement and Practice, V7, P189, DOI 10.1002/spip.164
   PFLEEGER SL, 1991, INFORM SOFTWARE TECH, V33, P224, DOI 10.1016/0950-5849(91)90137-Z
   PUTMAN LH, 1993, SOFTWARE METRICS PRA
   Raffo D., 1993, Proceedings CASCON '93, P290
   Raffo D., 2000, Software Process Improvement and Practice, V5, P159, DOI 10.1002/1099-1670(200006/09)5:2/3<159::AID-SPIP121>3.0.CO;2-R
   RAFFO D, 2002, P 14 INT C SOFTW ENG, P803
   Raffo DM, 1999, J SYST SOFTWARE, V46, P163, DOI 10.1016/S0164-1212(99)00009-6
   Robson C., 2002, Real World Research, V2nd
   ROMEU JL, 1985, COMPUT IND ENG, V9, P165, DOI 10.1016/0360-8352(85)90015-4
   RUAN L, 2007, P INT C SOFTW PROC I, P221
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SCACCHI W, 1991, INT J SOFTW ENG KNOW, V1, P293, DOI 10.1142/S0218194091000214
   Searcoid M. O., 2006, Metric spaces
   Somekh Bridget., 2006, Action Research: A Methodology for Change and Development
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Stensrud E, 2003, IEEE T SOFTWARE ENG, V29, P398, DOI 10.1109/TSE.2003.1199070
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yang ZJ, 2004, IEEE T ENG MANAGE, V51, P279, DOI 10.1109/TEM.2004.830843
   Yin R.K., 2003, CASE STUDY RES DESIG
   Yu W. D., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P558, DOI 10.1109/CMPSAC.1991.170239
NR 73
TC 88
Z9 96
U1 1
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2011
VL 53
IS 4
SI SI
BP 317
EP 343
DI 10.1016/j.infsof.2010.12.001
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739QK
UT WOS:000288732700004
DA 2024-07-18
ER

PT J
AU Grunske, L
AF Grunske, Lars
TI An effective sequential statistical test for probabilistic monitoring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Probabilistic monitoring; Probabilistic runtime verification; Sequential
   probability ration test; ProMo approach; MaC approach
ID RUNTIME; CHECKING
AB Context: A monitor checks if a system behaves according to a specified property at runtime. This is required for quality assurance purposes. Currently several approaches exist to monitor standard and real-time properties. However, a current challenge is to provide a comprehensive approach for monitoring probabilistic properties, as they are used to formulate quality of service requirements like performance, reliability, safety, and availability. The main problem of these probabilistic properties is that there is no binary acceptance condition.
   Objective: To overcome this problem, this article presents an improved and generic statistical decision procedure based on acceptance sampling and sequential hypothesis testing.
   Method: The developed decision procedure is validated using several experiments that determine the operating characteristic, runtime overhead as well as the expected sample sizes.
   Results and conclusion: The experimental validation provides evidence that the developed testing procedure reduces the runtime overhead and improves the accuracy of classification. Thus, the statistical decision procedure is superior to the existing statistical tests currently used in probabilistic monitoring. (C) 2010 Elsevier B.V. All rights reserved.
C1 Swinburne Univ Technol, Fac ICT, Hawthorn, Vic 3122, Australia.
C3 Swinburne University of Technology
RP Grunske, L (corresponding author), Swinburne Univ Technol, Fac ICT, Hawthorn, Vic 3122, Australia.
EM lgrunske@swin.edu.au
RI Grunske, Lars/AAH-4550-2019
OI Grunske, Lars/0000-0002-8747-3745
CR [Anonymous], 2007, ANAL, DOI DOI 10.1016/J.JPHA.2021.03.003
   Avgustinov P., 2006, COMP 21 ANN ACM SIGP, P685
   Aziz A, 1996, LNCS, P269, DOI [DOI 10.1007/3-540-61474-5_75, 10.1007/3-540-61474-5_75, DOI 10.1007/3-540-61474-5]
   BAIER C, 2006, LNCS, V1664, P146
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Bauer A, 2006, LECT NOTES COMPUT SC, V4337, P260
   Chan K, 2005, LECT NOTES COMPUT SC, V3712, P38
   Chen F, 2005, LECT NOTES COMPUT SC, V3440, P546
   Chen F, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P569
   Dwyer Matthew B., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P228, DOI 10.1109/ASE.2008.33
   GOLDSMITH S, 2005, P 20 ANN ACM SIGPLAN, P385
   GRUNSKE L, 2008, 30 INT C SOFTW ENG I, P31
   GRUNSKE L, 2009, P 7 JOINT M EUR SOFT, P183, DOI DOI 10.1145/1595696.1595724
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Keller A, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTEENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA XVI), P189
   Kim M, 2004, FORM METHOD SYST DES, V24, P129, DOI 10.1023/B:FORM.0000017719.43755.7c
   KRISTOFFERSEN KJ, 2003, ELECT NOTES THEORETI, V89
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Raimondi F., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P170, DOI DOI 10.1145/1453101.1453125
   Rosu G., 2005, Automated Software Engineering, V12, P151, DOI 10.1007/s10515-005-6205-y
   Sammapun U, 2007, LECT NOTES COMPUT SC, V4839, P164
   Skene J, 2004, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.2004.1317440
   Skene J., 2007, 6 INT WORKSHOP SOFTW, P3
   WALD A, 1948, ANN MATH STAT, V19, P326, DOI 10.1214/aoms/1177730197
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   Younes HLS, 2006, LECT NOTES COMPUT SC, V3855, P142
   Zhang PC, 2010, J SYST SOFTWARE, V83, P371, DOI 10.1016/j.jss.2009.09.013
   Zhang PC, 2008, ASIA PAC SOFWR ENG, P335, DOI 10.1109/APSEC.2008.10
NR 32
TC 11
Z9 15
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2011
VL 53
IS 3
BP 190
EP 199
DI 10.1016/j.infsof.2010.10.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 734PT
UT WOS:000288348500002
DA 2024-07-18
ER

PT J
AU Hauge, O
   Ayala, C
   Conradi, R
AF Hauge, Oyvind
   Ayala, Claudia
   Conradi, Reidar
TI Adoption of open source software in software-intensive organizations - A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Open source software; Organizations; Software development; Systematic
   literature review
ID FREE/OPEN SOURCE SOFTWARE; OPEN SOURCE TOOLS; INFORMATION-SYSTEMS;
   EMPIRICAL-RESEARCH; EXPERIMENTAL-MODELS; SELF-ORGANIZATION; BUSINESS
   MODELS; COMMUNITY; EXPERIENCES; INNOVATION
AB Context: Open source software (OSS) is changing the way organizations develop, acquire, use, and commercialize software.
   Objective: This paper seeks to identify how organizations adopt OSS, classify the literature according to these ways of adopting OSS, and with a focus on software development evaluate the research on adoption of OSS in organizations.
   Method: Based on the systematic literature review method we reviewed publications from 24 journals and seven conference and workshop proceedings, published between 1998 and 2008. From a population of 24,289 papers, we identified 112 papers that provide empirical evidence on how organizations actually adopt OSS.
   Results: We show that adopting OSS involves more than simply using OSS products. We moreover provide a classification framework consisting of six distinctly different ways in which organizations adopt OSS. This framework is used to illustrate some of the opportunities and challenges organizations meet when approaching OSS, to show that OSS can be adopted successfully in different ways, and to organize and review existing research. We find that existing research on OSS adoption does not sufficiently describe the context of the organizations studied, and it fails to benefit fully from related research fields. While existing research covers a large number of topics, it contains very few closely related studies. To aid this situation, we offer directions for future research.
   Conclusion: The implications of our findings are twofold. On the one hand, practitioners should embrace the many opportunities OSS offers, but consciously evaluate the consequences of adopting it in their own context. They may use our framework and the success stories provided by the literature in their own evaluations. On the other hand, researchers should align their work, and perform more empirical research on topics that are important to organizations. Our framework may be used to position this research and to describe the context of the organization they are studying. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Hauge, Oyvind; Ayala, Claudia; Conradi, Reidar] NTNU, IDI, NO-7491 Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU)
RP Hauge, O (corresponding author), Norwegian Univ Sci & Technol, Trondheim, Norway.
EM oyvind.hauge@idi.ntnu.no; cayala@lsi.upc.edu; reidar.conradi@idi.ntnu.no
FU ERCIM
FX Claudia Ayala's work was carried out during the tenure of an ERCIM
   "Alain Bensoussan" Fellowship Programme. We acknowledge Thomas Osterile
   and Torgerir Dingsoyr for their comments during the execution and
   writing phase of this work, and Sari Cunningham for her assistance with
   language and proofreading.
CR Aaen I., 2001, Scandinavian Journal of Information Systems, V13, P123
   Aaltonen T, 2007, INT FED INFO PROC, V234, P203
   ADAMS P, 2005, P 5 WORKSH OP SOURC, P1, DOI DOI 10.1145/1082983.1083259
   ADAMS P, 2002, P 1 INT C OP SOURC S, P61
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ågerfalk PJ, 2008, MIS QUART, V32, P385
   AGERFALK PJ, 2002, P 1 INT C OP SOURC S, P82
   Ajila SA, 2007, J SYST SOFTWARE, V80, P1517, DOI 10.1016/j.jss.2007.01.011
   Akkanen J, 2007, INT FED INFO PROC, V234, P217, DOI 10.1007/978-0-387-72486-7_18
   [Anonymous], P 1 INT WORKSH EM TR
   [Anonymous], P 28 INT C SOFTW ENG
   [Anonymous], P 1 INT C OP SOURC S
   [Anonymous], P 1 INT C OP SOURC S
   [Anonymous], P 1 INT C OP SOURC S
   [Anonymous], P 2 EUR S SYST AN DE
   ARDAGNA CA, 2002, P 1 INT C OP SOURC S, P172
   Attilio F, 2006, INT FED INFO PROC, V203, P337
   Augustin L, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P559, DOI 10.1109/ICSE.2002.1008000
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   AYRE J, 2005, P 1 INT C OP SOURC S, P135
   Banzi M, 2008, INT FED INFO PROC, V275, P307
   BARRIA P, 2005, PROGRAMA SEGUIMIENTO, P1, DOI DOI 10.1145/1083258.1083261
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bellifemine F, 2008, INFORM SOFTWARE TECH, V50, P10, DOI 10.1016/j.infsof.2007.10.008
   Berdou E, 2006, INT FED INFO PROC, V203, P201
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   BLECK WG, 2004, P 4 WORKSH OP SOURC, P9
   Bleek W.-G., 2005, P 1 INT C OP SOURC S, P37
   Boccacci P, 2007, INT FED INFO PROC, V234, P241
   BOLDYREFF C, 2004, P 4 WORKSH OP SOURC, P14
   BOLDYREFF C, 2009, IFIP ADV INFORM COMM, V299, DOI DOI 10.1007/978-3-642-02032-2
   Bonaccorsi A, 2003, RES POLICY, V32, P1243, DOI 10.1016/S0048-7333(03)00051-9
   Bonaccorsi A., 2004, "Collaboration, Conflict and Control: The 4th Workshop on Open Source Software Engineering" W8S Workshop - 26th International Conference on Software Engineering, P18, DOI 10.1049/ic:20040259
   Bonaccorsi A., 2006, Knowledge Technology & Policy, V18, P40, DOI 10.1007/s12130-006-1003-9
   BONACCORSI A, 2005, P 1 INT C OP SOURC S, P241
   BONACCORSI A, 2007, P 1 INT WORKSH EM TR, P1, DOI DOI 10.1109/FL0SS.2007.3
   Bonaccorsi A, 2006, INT FED INFO PROC, V203, P333
   Bonaccorsi A, 2006, MANAGE SCI, V52, P1085, DOI 10.1287/mnsc.1060.0547
   Bortis G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P649, DOI 10.1145/1368088.1368179
   Brereton P, 2000, COMPUTER, V33, P54, DOI 10.1109/2.881695
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brink D, 2006, INT FED INFO PROC, V203, P287
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   Campbell-Kelly M, 2009, INF ECON POLICY, V21, P229, DOI 10.1016/j.infoecopol.2009.03.006
   CAPILUPPI A, 2003, TAKING STOCK BAZAAR, P731
   Charters S, 2009, IEEE AUS SOFT ENGR, P73, DOI 10.1109/ASWEC.2009.25
   Chen L, 2008, NEW POLIT ECON, V13, P89, DOI 10.1080/13563460701859835
   Crowston K., 1 MONDAY, V10
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   Cruz D., 2006, Software Process Improvement and Practice, V11, P107, DOI 10.1002/spip.257
   Currion P, 2007, COMMUN ACM, V50, P61, DOI 10.1145/1226736.1226768
   Dahlander L, 2005, RES POLICY, V34, P481, DOI 10.1016/j.respol.2005.02.003
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2008, IND INNOV, V15, P115, DOI 10.1080/13662710801970076
   Dahlander L, 2008, LONG RANGE PLANN, V41, P629, DOI 10.1016/j.lrp.2008.09.003
   Dalle J.-M., 2004, "Collaboration, Conflict and Control: The 4th Workshop on Open Source Software Engineering" W8S Workshop - 26th International Conference on Software Engineering, P34, DOI 10.1049/ic:20040262
   DAMIANI E, 2006, IFIP ADV INFORM COMM, V203, DOI DOI 10.1007/0-387-34226-5
   Davies E, 2005, PROCEEDINGS OF THE 13TH WORLD CONGRESS ON IN VITRO FERTILIZATION, ASSISTED REPRODUCTION & GENETICS, P119
   de Laat PB, 2005, RES POLICY, V34, P1511, DOI 10.1016/j.respol.2005.07.003
   Deprez JC, 2008, LECT NOTES COMPUT SC, V5089, P189, DOI 10.1007/978-3-540-69566-0_17
   Di Giacomo M, 2005, IEEE SOFTWARE, V22, P10, DOI 10.1109/MS.2005.71
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Dinkelacker J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P177, DOI 10.1109/ICSE.2002.1007966
   DINKELACKER J, 2001, MAKING SENSE BAZAAR, P1
   Dobusch L, 2008, INT FED INFO PROC, V275, P223
   Dodero G, 2006, INT FED INFO PROC, V203, P247
   Donnellan B, 2005, IEEE SOFTWARE, V22, P92, DOI 10.1109/MS.2005.155
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   DYBA T, 2007, 1 INT S EMP SOFTW EN, P225, DOI DOI 10.1109/ESEM.2007.59
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Ebert C, 2009, IEEE SOFTWARE, V26, P50, DOI 10.1109/MS.2009.38
   FELLER J, 2007, IFIP ADV INFORM COMM, V234, DOI DOI 10.1007/978-0-387-72486-7
   Feller J., 2005, PERSPECTIVES FREE OP
   FELLER J, 2005, OPEN SOURCE APPL SPA
   FELLER J, 2003, TAKING STOCK BAZAAR
   Feller J., 2002, Understanding Open Source Software development
   FELLER J, 2004, COLL CONFL CONTR P 4
   Feller J, 2008, J DATABASE MANAGE, V19, P95, DOI 10.4018/jdm.2008040105
   Feller J, 2006, INT FED INFO PROC, V208, P261
   Fitzgerald B, 2004, IEEE SOFTWARE, V21, P50, DOI 10.1109/MS.2004.1259216
   Fitzgerald Brian, 2009, International Journal of Open Source Software & Processes, V1, P1, DOI 10.4018/jossp.2009010101
   Fitzgerald B., 2005, PERSPECTIVES FREE OP, P93
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Fosfuri A, 2008, ORGAN SCI, V19, P292, DOI 10.1287/orsc.1070.0321
   Fuggetta A, 2003, J SYST SOFTWARE, V66, P77, DOI 10.1016/S0164-1212(02)00065-1
   FUGGETTA A, 1993, COMPUTER, V26, P25, DOI 10.1109/2.247645
   Gacek C, 2004, IEEE SOFTWARE, V21, P34, DOI 10.1109/MS.2004.1259206
   GALATESCU A, 2003, TAKING STOCK BAZAAR, P57
   Gary K, 2006, COMPUTER, V39, P46, DOI 10.1109/MC.2006.130
   GERMAN DM, 2002, M CHALL SURV SUCC 2, P1
   Ghosh R.A., 2006, Study on the: Economic impact of open source software on innovation and the competitiveness of the Information and Communication Technologies (ICT) sector in the EU
   GIACALONE P, 2005, P 1 INT C OP SOURC S, P259
   GLANCE DC, 1 MONDAY, V9
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glynn E, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P217, DOI 10.1109/ISESE.2005.1541831
   Grand S, 2004, LONG RANGE PLANN, V37, P591, DOI 10.1016/j.lrp.2004.09.006
   Gschwind M, 2007, COMPUTER, V40, P37, DOI 10.1109/MC.2007.192
   GURBANI VK, 2007, IFIP ADV INFORM COMM, V234, P1, DOI DOI 10.1145/1083258.1083264
   Harris JS, 2004, IEEE SOFTWARE, V21, P42, DOI 10.1109/MS.2004.1259211
   Hauge O, 2008, INT FED INFO PROC, V275, P211
   Hauge O, 2007, INT FED INFO PROC, V234, P259
   Hecker F, 1999, IEEE SOFTWARE, V16, P45, DOI 10.1109/52.744568
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   HOFFMAN T, 2005, P 1 INT C OP SOURC S, P334
   Hummel O, 2008, IEEE SOFTWARE, V25, P45, DOI 10.1109/MS.2008.110
   Iivari N, 2008, INT FED INFO PROC, V275, P359
   Jaaksi A, 2007, INT FED INFO PROC, V234, P85, DOI 10.1007/978-0-387-72486-7_7
   Jacobson J, 2005, COMPUTER, V38, P79, DOI 10.1109/MC.2005.126
   Järvensivu J, 2008, INT FED INFO PROC, V275, P15
   Jensen C., 2004, "Collaboration, Conflict and Control: The 4th Workshop on Open Source Software Engineering" W8S Workshop - 26th International Conference on Software Engineering, P48, DOI 10.1049/ic:20040264
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   JURISTO N, 2007, 1 INT S EMP SOFTW EN
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lesiecki N, 2006, IEEE SOFTWARE, V23, P24, DOI 10.1109/MS.2006.1
   LI J, 2006, P 28 INT C SOFTW ENG, P897, DOI DOI 10.1145/1134285.1134446
   Li JY, 2006, LECT NOTES COMPUT SC, V4039, P16
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Lindman J, 2008, INT FED INFO PROC, V275, P381, DOI 10.1007/978-0-387-09684-1_36
   Lorenzi D, 2008, INT FED INFO PROC, V275, P325
   Lundell B, 2006, INT FED INFO PROC, V203, P155
   Lussier S, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1259222
   LUTHIGER B, 1 MONDAY, V12
   MANNAERT H, 2002, FREE SOFTWARE FREE S, P35, DOI DOI 10.1145/1083258.1083266
   Martin K, 2007, IEEE SOFTWARE, V24, P46, DOI 10.1109/MS.2007.5
   Martinez-Romo J, 2008, INT FED INFO PROC, V275, P171
   MATUSOW J, 2005, P 1 INT C OP SOURC S, P263
   MCILROY D, 1969, MASS PRODUCED SOFTWA, P138
   Melian C, 2008, INT FED INFO PROC, V275, P93, DOI 10.1007/978-0-387-09684-1_8
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Montesi M, 2008, J SYST SOFTWARE, V81, P1694, DOI 10.1016/j.jss.2007.11.723
   MORGAN L., 2007, ECIS 2007 P, P973
   Morgan L, 2007, INT FED INFO PROC, V234, P307
   NIKULA U, 2005, P 1 INT C OP SOURC S, P192
   *OP SOURC IN, 2009, OP SOURC LIC
   OSTERWEIL LJ, 2006, P 28 INT C SOFTW ENG
   Ozel B, 2007, INT FED INFO PROC, V234, P319
   PADUA DAG, 2007, 1 INT S EMP SOFTW EN, P215, DOI DOI 10.1109/ESEM.2007.19
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   PERSSON A, 2005, P 1 INT C OP SOURC S, P88
   Ploski J, 2007, IEEE SOFTWARE, V24, P38, DOI 10.1109/MS.2007.17
   PUSCHMANN C, 1 MONDAY, V12
   RAVESTEYN P, 2008, IFIP ADV INFORM COMM, V275, P367, DOI DOI 10.1007/978-0-387-09684-1_34
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Raymond ES, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1259228
   Rigby P., 2005, PROC INT C OPEN SOUR, P338
   Robbins J., 2005, PERSPECTIVES FREE OP, P245
   Robles G, 2007, INT FED INFO PROC, V234, P121
   ROSSI B, 2005, P 1 INT C OP SOURC S, P250
   Rossi B, 2007, INT FED INFO PROC, V234, P325
   Rossi B, 2006, INT FED INFO PROC, V203, P165
   ROSSI C, 2005, OPEN SOURC APPL SPAC, P47, DOI DOI 10.1145/1083258.1083269
   RUSSO B, 2008, IFIP ADV INFORM COMM, V275, DOI DOI 10.1007/978-0-387-09684-1
   RUSSO B, 2003, TAKING STOCK BAZAAR, P117
   Santos C, 2008, IEEE SOFTWARE, V25, P96, DOI 10.1109/MS.2008.167
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Scacchi W, 2004, IEEE SOFTWARE, V21, P59, DOI 10.1109/MS.2004.1259221
   SCOTTO M, 2005, P 1 INT C OP SOURC S
   Serrano N, 2004, IEEE SOFTWARE, V21, P56, DOI 10.1109/MS.2004.1259219
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sohn SY, 2008, J SYST SOFTWARE, V81, P1014, DOI 10.1016/j.jss.2007.08.034
   Sowe SK, 2008, J SYST SOFTWARE, V81, P431, DOI 10.1016/j.jss.2007.03.086
   Spinellis D., 2006, GSD 06, P73
   Stallman R., 2002, Free software, free society: Selected essays of Richard M. Stallman
   Stam W, 2009, RES POLICY, V38, P1288, DOI 10.1016/j.respol.2009.06.004
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Staring K, 2006, INT FED INFO PROC, V203, P135
   Stol KJ, 2009, INT FED INFO PROC, V299, P156
   Toth K, 2006, IEEE SOFTWARE, V23, P44, DOI 10.1109/MS.2006.158
   TRACZ W, 2002, P 24 INT C SOFTW ENG
   Umarji M, 2008, INT FED INFO PROC, V275, P257
   van der Hinden F, 2009, IEEE SOFTWARE, V26, P77, DOI 10.1109/MS.2009.88
   Ven K, 2008, INFORM SOFTWARE TECH, V50, P991, DOI 10.1016/j.infsof.2007.09.001
   Ven K, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.73
   Ven K, 2008, J DATABASE MANAGE, V19, P58, DOI 10.4018/jdm.2008040103
   Ven K, 2006, INT FED INFO PROC, V203, P111
   Ven K, 2006, INT FED INFO PROC, V203, P123
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Vessey I, 2002, J MANAGE INFORM SYST, V19, P129, DOI 10.1080/07421222.2002.11045721
   Vitharana P, 2003, COMMUN ACM, V46, P97, DOI 10.1145/948383.948387
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   von Krogh G, 2006, MANAGE SCI, V52, P975, DOI 10.1287/mnsc.1060.0560
   von Krogh Georg, 2005, P 38 ANN HAWAII INT, p198b, DOI DOI 10.1109/HICSS.2005.378
   Waldo J, 2000, COMPUTER, V33, P107, DOI 10.1109/2.846324
   Wall DAE, 2001, COMPUTER, V34, P158, DOI 10.1109/2.970592
   WARSTA J, 2003, TAKING STOCK BAZAAR, P73
   WASSERMAN AL, 2007, P 1 INT WORKSH EM TR, P1, DOI DOI 10.1109/FL0SS.2007.6
   Watson R.T., 2005, MIS Q EXEC, V4, P329
   Watson RT, 2008, COMMUN ACM, V51, P41, DOI 10.1145/1330311.1330321
   Wesselius J, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.79
   West J, 2003, RES POLICY, V32, P1259, DOI 10.1016/S0048-7333(03)00052-0
   West J, 2008, IND INNOV, V15, P145, DOI 10.1080/13662710801970142
   Westenholz A, 2006, INT FED INFO PROC, V203, P183
   WHATCONSTITUTES.NO, 2009, IFIP ADV INFORM COMM, V299, P310, DOI DOI 10.1007/978-3-642-02032-2_27
   Wicks MN, 2007, J SYST SOFTWARE, V80, P1569, DOI 10.1016/j.jss.2007.03.089
   Yang Y, 2005, IEEE SOFTWARE, V22, P54, DOI 10.1109/MS.2005.112
   Yang ZH, 2007, IEEE SOFTWARE, V24, P87, DOI 10.1109/MS.2007.58
   Yoo TS, 2005, COMMUN ACM, V48, P55, DOI 10.1145/1042091.1042120
   Yu LG, 2008, INFORM SOFTWARE TECH, V50, P361, DOI 10.1016/j.infsof.2007.02.018
   Yu L, 2007, EMPIR SOFTW ENG, V12, P123, DOI 10.1007/s10664-006-9000-x
   Zelkowitz MV, 2009, J SYST SOFTWARE, V82, P373, DOI 10.1016/j.jss.2008.06.040
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zhao LY, 2003, J SYST SOFTWARE, V66, P65, DOI 10.1016/S0164-1212(02)00064-X
   Ziemer S, 2008, SITIS 2008: 4TH INTERNATIONAL CONFERENCE ON SIGNAL IMAGE TECHNOLOGY AND INTERNET BASED SYSTEMS, PROCEEDINGS, P539, DOI 10.1109/SITIS.2008.99
NR 216
TC 117
Z9 127
U1 1
U2 58
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2010
VL 52
IS 11
SI SI
BP 1133
EP 1154
DI 10.1016/j.infsof.2010.05.008
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663RL
UT WOS:000282905700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Niazi, M
   Babar, MA
   Verner, JM
AF Niazi, Mahmood
   Babar, Muhammad Ali
   Verner, June M.
TI Software Process Improvement barriers: A cross-cultural comparison
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Process Improvement barriers; Empirical study; Cross-cultural;
   CMMI
ID PROJECT SUCCESS; DE-MOTIVATORS; PRACTITIONERS; IMPLEMENTATION
AB Context: Software Process Improvement initiatives have been around for many years with the growing globalisation of software development is making them increasingly important.
   Objective: The objective of this exploratory research is to gain an in-depth understanding of barriers that can undermine SPI, in the context of Global Software Development, from the perspective of software development practitioners; this will enable SPI managers to better manage SPI initiatives. We intend to discover if the barriers to SPI initiatives in a developed country are different to those in a developing country.
   Method: In an empirical study, Vietnamese software practitioners' experiences of SPI barriers are compared with barriers identified by Australian practitioners. Face-to-face questionnaire-based survey sessions with 23 Vietnamese SPI practitioners were conducted. Our survey included barriers to SPI improvement initiatives identified in previous research. We asked the participants to rank each SPI barrier on a three-point scale (high, medium, low) to determine the importance of each barrier. We then compare our results, with results (identified in previous work), from 34 Australian software development practitioners.
   Results: We identify (1) lack of project management, (2) lack of resources, (3) lack of sponsorship, (4) inexperienced staff/lack of knowledge, and (5) lack of SPI awareness as 'high' value SPI barriers in Vietnam. The results also reveal similarities and differences between the experiences of Australian and Vietnamese practitioners regarding the importance of the SPI barriers identified. While the Australian practitioners were also concerned with (1) lack of SPI awareness, they were even more concerned with (2) organisational politics, and (3) lack of support.
   Conclusions: Practitioners identify SPI barriers based on previous SPI implementation experience. Their role(s) in their different organisations have helped them to understand the importance of that barrier. Vietnamese software practitioners cited more SPI barriers than their counterparts in Australia. The Vietnamese SPI barriers relate to project management, resources, and sponsorship while the Australian barriers are concerned with organisational politics and lack of support. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Niazi, Mahmood] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Niazi, Mahmood] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
   [Babar, Muhammad Ali] IT Univ Copenhagen, Copenhagen, Denmark.
   [Verner, June M.] Univ New S Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
C3 Keele University; King Fahd University of Petroleum & Minerals; IT
   University Copenhagen; University of New South Wales Sydney
RP Niazi, M (corresponding author), Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM mkniazi@cs.keele.ac.uk; malibaba@itu.dk; june.verner@gmail.com
RI Niazi, Mahmood/C-8873-2015
OI Niazi, Mahmood/0000-0001-7318-7644
CR [Anonymous], 1998, Software process improvement
   [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   ATHREYE SS, 2005, INDIAN SOFTWARE IND, P1
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   BRODMAN JG, 1994, P 16 INT C SOFTW ENG
   Bush AA, 2008, INFORM SOFTWARE TECH, V50, P499, DOI 10.1016/j.infsof.2007.08.006
   CAPRIHAN G, 2006, INT C GLOB SOFTW ENG, P83
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Coolican H., 1999, RES METHODS STAT PSY, V2nd
   FLORENCE A, 2001, CROSSTALK        AUG, P29
   GOLDENSON DR, 1995, CMUSEI95TR009
   Huang SJ, 2008, INFORM MANAGE-AMSTER, V45, P175, DOI 10.1016/j.im.2008.02.001
   JOHN SR, 1999, IEEE SOFTWARE    MAY, P18
   Jorek Norbert, 2009, SHIFTING GEOGRAPHY O
   Kakabadse A, 2005, THUNDERBIRD INT BUS, V47, P183, DOI 10.1002/tie.20048
   KAUTZ K, 2000, P 33 HAW C SYST SCI, V7, P1
   KITCHENHAM B, 2001, PFLEEGER PRINCIPLE 1
   KOBITZSCH W, 2001, IEEE SOFTWARE    MAR, P78
   KRASNER H, 1939, SOFTWARE PROCESS IMP, P519
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   LOUIS R, 2008, INT J PROJ MANAG, V26, P213
   Moitra D., 1998, Software Process Improvement and Practice, V4, P199, DOI 10.1002/(SICI)1099-1670(199812)4:4<199::AID-SPIP107>3.0.CO;2-D
   Moitra D, 2001, IEEE SOFTWARE, V18, P77, DOI 10.1109/52.903171
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Niazi M, 2005, J SYST SOFTWARE, V78, P204, DOI 10.1016/j.jss.2004.09.001
   Niazi M, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P389
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   NIAZI M, 2005, 14 INT C INF SYST DE
   Niazi M., 2007, INT C EV ASS SOFTW E, P79
   Niazi M, 2007, LECT NOTES COMPUT SC, V4589, P118
   Pereira J, 2008, J SYST SOFTWARE, V81, P897, DOI 10.1016/j.jss.2007.07.032
   Pitterman B, 2000, IEEE SOFTWARE, V17, P89, DOI 10.1109/52.854074
   Procaccino JD, 2006, J SYST SOFTWARE, V79, P1541, DOI 10.1016/j.jss.2006.01.010
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Rottman JW, 2008, INFORM SYST FRONT, V10, P259, DOI 10.1007/s10796-007-9061-4
   SEI, 2008, CMUSEI2006TR008
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   TAYLOR A, 2000, BCS COMPUTER B
   TERDIMAN R, 2002, GOING OFFSHORE GLOBA
   Trewin D., 2002, Small business in Australia (ABS catalogue no. 1321.0)
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Zwikael O, 2007, J OPER MANAG, V25, P755, DOI 10.1016/j.jom.2006.12.001
NR 47
TC 63
Z9 73
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2010
VL 52
IS 11
SI SI
BP 1204
EP 1216
DI 10.1016/j.infsof.2010.06.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663RL
UT WOS:000282905700005
DA 2024-07-18
ER

PT J
AU Ortiz, G
   De Prado, AG
AF Ortiz, Guadalupe
   Garcia De Prado, Alfonso
TI Improving device-aware Web services and their mobile clients through an
   aspect-oriented, model-driven approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aspect-oriented software development; Mobile devices; Web service;
   Model-driven development
AB Context: Mobile devices have become an essential element in our daily lives, even for connecting to the Internet. Consequently, Web services have become extremely important when offering services through the Internet. However, current Web services are very inflexible as regards their invocation from different types of device, especially if we consider the need for them to be adaptable when being invoked from mobile devices.
   Objective: In this paper, we provide an approach for the creation of flexible Web services which can be invoked transparently from different device types and which return subsequent responses, as well as providing the client's adaptation as a result of the particular device characteristics and end-user preferences in a completely decoupled way.
   Method: Aspect-Oriented Programming and model-driven development have been used to reduce both the impact of service and client code adaptation for multiple devices as well as to facilitate the developer's task.
   Results: A model-driven methodology can be followed from system models to code, providing the Web service developer with the option of marking which services should be adapted to mobile devices in the UML models, and obtaining the decoupled adaptation code automatically from the models.
   Conclusion: We can conclude that the approach presented in this paper provides us with the possibility of following the development of mobile-aware Web services in an integrated platform, benefiting from the use of aspect-oriented techniques not only for maintaining device-related code completely decoupled from the main functionality one, but also allowing a modularized non-intrusive adaptation of mobile clients to the specific device characteristics as well as to final user preferences. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Ortiz, Guadalupe] Univ Extremadura, Ctr Univ Merida, Quercus Software Engn Grp, Merida 06800, Spain.
   [Garcia De Prado, Alfonso] Res Div ADT, Zaragoza, Spain.
C3 Universidad de Extremadura
RP Ortiz, G (corresponding author), Univ Cadiz, Sch Engn, C Chile 1, Cadiz 11002, Spain.
EM gobellot@unex.es; Alfonso.garciadeprado@gmail.com
RI Ortiz, Guadalupe/K-8601-2014; Garcia-de-Prado, Alfonso/H-4890-2015; de
   Prado Fontela, Alfonso García/R-5523-2019
OI Ortiz, Guadalupe/0000-0002-5121-6341; Garcia-de-Prado,
   Alfonso/0000-0002-6523-9974; de Prado Fontela, Alfonso
   García/0000-0002-6523-9974
FU MEC [TIN2008-02985]
FX This work has been developed thanks to the support of MEC under contract
   TIN2008-02985 and MEC research Grant Jose Castillejo.
CR Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   ALVES B, 2004, J OBJECT TECHNOLOGY, V4
   Beisiegel Michael., 2005, Service Component Architecture - Building Systems using a Service Oriented Architecture. A Joint Whitepaper by BEA, IBM, Interface21, IONA, SAP, Siebel
   BENHMIDA M, 2006, JDIM J, V4
   BLECHSSCHMIDT T, 2005, INT WORKSH MOB COMM
   CHEN I, 2006, P INT C SERV COMP SC
   COSTA PD, 2004, P 1 INT WORKSH UB CO
   DEY AK, 1999, P 1 INT WORKSH MAN I
   DORN C, 2007, DISTRIBUTED PARALLEL, V21
   ELRAD T, 2001, COMMUNICATIONS ACM, V44
   ERL T, 2008, SOA DESIGN PATTERNS, P333
   HELD A, 2002, P 1 INT C PERV COMP
   *IBM, MOD MOD TRANSF AUTH
   *IBM, TRANSF MOD TEXT US J
   INDULSKA J, 2003, P 4 INT C MOB DAT MA
   *JAV, JAV ME JSR 75
   *JSR, JSR000172
   Keidl M., 2004, P 13 INT WORLD WID W
   Kiczales G., 1997, LNCS, V1241
   MENKHAUS G, 2001, P TECHN OBJ OR LANG
   NEDOS A, 2006, P INT C SERV OR COMP
   NIEDERHAUSEN M, 2007, WEB SOFTWARE EVOLUTI
   ORTIZ G, 2007, THESIS U EXTREMADURA
   ORTIZ G, 2007, INT J BUSINESS PROCE, V2
   ORTIZ G, 2009, INT C MOB UB COMP UB
   ORTIZ G, 2009, IEEE INT SERVICES C
   ORTIZ G, 2009, INT C INT WEB APPL S
   Pashtan A, 2003, IEEE INTERNET COMPUT, V7, P79, DOI 10.1109/MIC.2003.1232522
   PEDERSEN PE, 2003, P HAW INT C SYST SCI
   SCHOMOHL R, 2007, INT C PAR DISTR PROC
   SONG YJ, 2007, INT C CONV INF TECHN
   Tomaz RF, 2006, INT J COOP INF SYST, V15, P415, DOI 10.1142/S0218843006001414
   ZHANG D, 2007, COMMUNICATIONS ACM, V50
   ZHANG W, 2003, INT WORKSH PRINC SOF
   ASPECTJ PROGRAMMING
   MODEL TEXT PROJECT
   ASPECTJ LOAD TIME WE
NR 37
TC 12
Z9 16
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2010
VL 52
IS 10
BP 1080
EP 1093
DI 10.1016/j.infsof.2010.05.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 638LF
UT WOS:000280895700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zdun, U
AF Zdun, Uwe
TI A DSL toolkit for deferring architectural decisions in DSL-based
   software design
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Architecture; Software Design; Domain-specific language (DSL);
   Architectural Decisions
AB A number of mature toolkits and language workbenches for DSL-based design have been proposed, making DSL-based design attractive for many projects. These toolkits preselect many architectural decision options. However, in many cases it would be beneficial for DSL-based design to decide for the DSL's architecture later on in a DSL project, once the requirements and the domain have been sufficiently understood. We propose a language and a number of DSLs for DSL-based design and development that combine important benefits of different DSL toolkits in a unique way. Our approach specifically targets at deferring architectural decisions in DSL-based design. As a consequence, the architect can choose, even late in a DSL project, for options such as whether to provide the DSL as one or more external or embedded DSLs and whether to use an explicit language model or not. (C) 2010 Elsevier B.V. All rights reserved.
C1 Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Zdun, U (corresponding author), Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
EM zdun@infosys.tuwien.ac.at
RI Zdun, Uwe/AFR-2161-2022
FU European Union [215175]
FX This work was partly supported by the European Union FP7 project COMPAS,
   Grant No. 215175. http://www.compas-ict.eu/.
CR ALANEN M, 606 TUCS
   [Anonymous], 149771996 ISOIEC
   [Anonymous], 2007, The Definitive ANTLR Reference: Building Domain-Specific Languages
   [Anonymous], 2006, P 1 WORKSH DOM SPEC
   [Anonymous], 2003, The art of UNIX programming
   [Anonymous], 1974, Proceedings of the 1974 ACM SIGFIDET (now SIGMOD) workshop on Data description, access and control, ACM, DOI DOI 10.1145/800296.811515
   [Anonymous], 2004, Software Factories
   [Anonymous], 1994, LaTeX: A Document Preparation System: User's Guide and Reference Manual
   BENTLEY J, 1986, COMMUN ACM, V29, P711, DOI 10.1145/6424.315691
   CORNELIUSSEN L, 2008, FOWLERS DSL EXAMPLE
   Dmitriev Sergey., 2004, LANGUAGE ORIENTED PR
   *ECL, 2010, TEXT MOD FRAM
   EFFTINGE S, 2008, XTEXT DOCUMENTATION
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   FOWLER M, 2008, DOMAIN SPECIFIC LANG
   FREEZE J, 2006, CREATING DSLS RUBY R
   GHOSH D, 2008, EXTERNAL DSLS MADE E
   Graham Paul., 1993, On LISP: Advanced Techniques for Common LISP
   HERNDON RM, 1988, IEEE T SOFTWARE ENG, V14, P803, DOI 10.1109/32.6159
   Hudak P., 1996, ACM COMPUT SURV, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   *ISO IEC, 907512003 ISOIEC
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Jouault F., 2006, 5 INT C GEN PROGR CO, P249, DOI DOI 10.1145/1173706.1173744
   Kelly S., 2008, Domain-Specific Modeling
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   LEVY JY, 1997, SAFE TCL SECURITY MO
   LUOMA J, 2004, P 4 OOPSLA WORKSH DO
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M, 2005, COMPUT LANG SYST STR, V31, P1, DOI 10.1016/j.cl.2004.02.001
   *MICR, 2008, MICR MOD PLATF COD N
   OUSTERHOUT JK, 1994, TCL TK
   PEMBERTON S, 2002, XHTML 10 EXTENSIBLE
   ROBERTS D, 1997, PATTERNS EVOLVING FR, V3
   ROBERTS D, 1996, WUCS9707
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Tratt L, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1391956.1391958
   Tratt L, 2008, LECT NOTES COMPUT SC, V5235, P425, DOI 10.1007/978-3-540-88643-3_11
   WELTON D, 2010, HECL MOBILE SCRIPTIN
   Wile D, 2004, SCI COMPUT PROGRAM, V51, P265, DOI 10.1016/j.scico.2003.12.006
   ZDUN U, 2010, FRAG
NR 44
TC 13
Z9 13
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2010
VL 52
IS 7
BP 733
EP 748
DI 10.1016/j.infsof.2010.03.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 605JA
UT WOS:000278342600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ding, JH
   Clarke, PJ
   Argote-Garcia, G
   He, XD
AF Ding, Junhua
   Clarke, Peter J.
   Argote-Garcia, Gonzalo
   He, Xudong
TI A methodology for evaluating test coverage criteria of high level Petri
   nets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Predicate/transition nets; Software testing; Test adequacy criteria;
   Model checker SPIN
ID CONCURRENT PROGRAMS; SPECIFICATIONS; ADEQUACY; SYSTEMS; MODEL
AB High level Petri nets have been extensively used for modeling concurrent systems: however, their strong expressive power reduces their ability to be easily analyzed. Currently there are few effective formal analysis techniques to support the validation of high level Petri nets. The executable nature of high level Petri nets means that during validation they can be analyzed using test criteria defined on the net model. Recently, theoretical test adequacy coverage criteria for concurrent systems using high level Petri nets have been proposed. However, determining the applicability of these test adequacy criteria has not yet been undertaken. In this paper, we present an approach for evaluating the proposed test adequacy criteria for high level Petri nets through experimentation. In our experiments we use the simulation functionality of the model checker SPIN to analyze various test coverage criteria on high level Petri nets. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Ding, Junhua] E Carolina Univ, Dept Comp Sci, Greenville, NC 27858 USA.
   [Clarke, Peter J.; Argote-Garcia, Gonzalo; He, Xudong] Florida Int Univ, Sch Comp & Informat Sci, Miami, FL 33173 USA.
C3 University of North Carolina; East Carolina University; State University
   System of Florida; Florida International University
RP Ding, JH (corresponding author), E Carolina Univ, Dept Comp Sci, Greenville, NC 27858 USA.
EM dingj@ecu.edu; clarkep@cis.fiu.edu; gargo001@cis.fiu.edu; hex@cs.fiu.edu
RI Clarke, Peter/AAF-8511-2021
OI Clarke, Peter/0000-0003-0892-1907
FU National Science Foundation of the USA [HRD-0317692, HRD-0833093]
FX We thank the anonymous reviewers for their constructive comments that
   help improve the quality of this paper. This research was supported in
   part by the National Science Foundation of the USA under grants
   HRD-0317692 and HRD-0833093.
CR Ammann P, 2002, NISTIR6777
   [Anonymous], 1989, ACM COMPUT SURV, V21, P593, DOI DOI 10.1145/76894.76897
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   BLACK PE, 2000, P 15 IEEE INT C AUT
   BRIAND LC, 2004, ICSE 04
   Demartini C, 1999, SOFTWARE PRACT EXPER, V29, P577, DOI 10.1002/(SICI)1097-024X(199906)29:7<577::AID-SPE246>3.0.CO;2-V
   DING J, 2004, THESIS FLORIDA INT U
   Dwyer MB, 2004, ACM T SOFTW ENG METH, V13, P359, DOI 10.1145/1040291.1040292
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   FRANKL PG, 1991, TAV 4
   GANNOD GC, 2001, P 16 IEEE INT C AUT
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   GRAHLMANN B, 1998, P 4 INT SPIN WORKSH
   HE X, 1996, P 17 INT C APPL THEO
   He XD, 2004, J SYST SOFTWARE, V71, P11, DOI 10.1016/S0164-1212(02)00087-0
   He XD, 2005, ELECTRICAL ENGINEERING HANDBOOK, P459, DOI 10.1016/B978-012170960-0/50035-9
   Hierons RM, 2002, ACM T SOFTW ENG METH, V11, P427, DOI 10.1145/606612.606615
   INVERARDI P, 1995, IEEE T SOFTWARE ENG, V21, P373, DOI 10.1109/32.385973
   Koppol PV, 2002, IEEE T SOFTWARE ENG, V28, P607, DOI 10.1109/TSE.2002.1010062
   Rayadurgam S., 2001, P 8 ANN IEEE INT C W
   Richardson D. J., 1989, SIGSOFT Software Engineering Notes, V14, P86, DOI 10.1145/75309.75319
   RICHARDSON DJ, 1996, P 2 INT SOFTW ARCH W
   Rutherford MJ, 2008, IEEE T SOFTWARE ENG, V34, P452, DOI 10.1109/TSE.2008.33
   Spin, 2008, ON THE FLY LTL MOD C
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   Varpaaniemi Kimmo, 1995, PROD REFERENCE MANUA
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zhu H, 2002, INFORM SOFTWARE TECH, V44, P473, DOI 10.1016/S0950-5849(02)00048-4
   ZURAWSKI R, 1994, IEEE T IND ELECTRON, V41, P567, DOI 10.1109/41.334574
NR 30
TC 1
Z9 3
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1520
EP 1533
DI 10.1016/j.infsof.2009.06.014
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300004
DA 2024-07-18
ER

PT J
AU Pozo, S
   Ceballos, R
   Gasca, RM
AF Pozo, S.
   Ceballos, R.
   Gasca, R. M.
TI Model-Based Development of firewall rule sets: Diagnosing model
   inconsistencies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE MBE; Firewalls; Consistency; Validation; Model
ID SECURITY; TAXONOMY
AB The design and management of firewall rule sets is a very difficult and error-prone task because of the difficulty of translating access control requirements into complex low-level firewall languages. Although high-level languages have been proposed to model firewall access control lists, none has been widely adopted by the industry. We think that the main reason is that their complexity is close to that of many existing low-level languages. In addition, none of the high-level languages that automatically generate firewall rule sets verifies the model prior to the code-generation phase. Error correction in the early stages of the development process is cheaper compared to the cost associated with correcting errors in the production phase. In addition, errors generated in the production phase usually have a huge impact on the reliability and robustness of the generated code and final system.
   In this paper, we propose the application of the ideas of Model-Based Development to firewall access control list modelling and automatic rule set generation. First, an analysis of the most widely used firewall languages in the industry is conducted. Next, a Platform-Independent Model for firewall ACLs is proposed. This model is the result of exhaustive analysis and of a discussion of different alternatives for models in a bottom-up methodology. Then, it is proposed that a verification stage be added in the early stages of the Model-Based Development methodology, and a polynomial time complexity process and algorithms are proposed to detect and diagnose inconsistencies in the Platform-Independent Model. Finally, a theoretical complexity analysis and empirical tests with real models were conducted, in order to prove the feasibility of our proposal in real environments. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Pozo, S.; Ceballos, R.; Gasca, R. M.] Univ Seville, Dept Comp Languages & Syst, ETS Ingn Informat, E-41012 Seville, Spain.
C3 University of Sevilla
RP Pozo, S (corresponding author), Univ Seville, Dept Comp Languages & Syst, ETS Ingn Informat, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
EM sergiopozo@us.es; ceball@us.es; gasca@us.es
RI ; Ceballos, Rafael/L-3444-2014; M. Gasca, Rafael/F-5857-2015
OI Pozo Hidalgo, Sergio/0000-0001-7616-7825; Ceballos,
   Rafael/0000-0001-7144-8011; M. Gasca, Rafael/0000-0003-2348-7424
FU Spanish Ministry of Science and Education [DPI2006-15476-C02-01]; FEDER
FX This work has been partially funded by Spanish Ministry of Science and
   Education project under grant DPI2006-15476-C02-01, and by FEDER (under
   ERDF Program). Many thanks to the anonymous reviewers for their useful
   comments, and to Juan Rodriguez Feria, for his input on firewall
   languages and the IPTables parser.
CR ALSHAER E, 2004, IEEE ETRANSACTIONS N, V1
   [Anonymous], INT J COMPUTATIONAL
   [Anonymous], IASTED INT C COMM NE
   ARDAGNA CA, 2004, XML BASED ACCESS CON, P35
   Bartal Y, 2004, ACM T COMPUT SYST, V22, P381, DOI 10.1145/1035582.1035583
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Bollig B, 1996, IEEE T COMPUT, V45, P993, DOI 10.1109/12.537122
   Cheswick W. R., 2003, FIREWALLS INTERNET S
   CONDELL M, 2004, 1346 BBN
   DAMIANOU N., 2001, WORKSHOP POLICIES DI, P29
   DOUGLAS P, 1996, IEEE COMPUT, V9, P80
   ELATAWY A, 2006, 06005 CTI DEPAUL U T
   GARCIAALFARO J, 2007, VERLAG INT J INFORM, P1615
   Golnabi K, 2006, IEEE IFIP NETW OPER, P305, DOI 10.1109/NOMS.2006.1687561
   Guttman JD, 1997, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1997.601327
   GUTTMAN JD, 2005, INT J INF SECUR, V4, P29
   Hamed H, 2006, IEEE COMMUN MAG, V44, P134, DOI 10.1109/MCOM.2006.1607877
   HAZELHURST S, 2000, WORKSH DEP IP APPL P, P576
   HOOPER E, 2006, IEEE INT S DEP AUT S, P235
   *ILOG S A, 2001, SIMPL RUL MARK LANG
   JURJENS J, 2002, SPRINGER VERLAG LNCS, V2460, P1
   LODDERSTEDT T, 2002, SPRINGER VERLAG LNCS, V2460, P426
   MAYER A, 2005, SPRINGER VERLAG INT, V5, P125
   MOORE B, 2001, 3060 IETF RFC
   *OASIS, OASIS EXT ACC CONTR
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Pozo S, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P723
   Senn D, 2005, LECT NOTES COMPUT SC, V3502, P226
   Taylor DE, 2005, ACM COMPUT SURV, V37, P238, DOI 10.1145/1108956.1108958
   URIBE TE, 2004, ACM WORKSH FORM METH, P66
   Wool A, 2004, COMPUTER, V37, P62, DOI 10.1109/MC.2004.2
   Yuan LH, 2006, P IEEE S SECUR PRIV, P199
   ZHANG B, 2007, ACM S ACC CONTR MOD, P185
   Zwicky E.D., 2000, BUILDING INTERNET FI, V2nd
NR 34
TC 9
Z9 9
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2009
VL 51
IS 5
SI SI
BP 894
EP 915
DI 10.1016/j.infsof.2008.05.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425OY
UT WOS:000264648200007
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhu, ZJ
   Zulkernine, M
AF Zhu, Zhi Jian
   Zulkernine, Mohammad
TI A model-based aspect-oriented framework for building intrusion-aware
   software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aspect-oriented software development; Intrusion detection; Software
   security; UML
AB Security is a critical issue for software systems, especially for those systems which are connected to networks and the Internet, since most or them suffer from various malicious attacks. Intrusion detection is an approach to protect software against such attacks. However, security vulnerabilities that are exploited by intruders cut across multiple modules in software systems and are difficult to address and monitor. These kinds of concerns. called cross-cutting concerns, can be handled by aspect-oriented software development (AOSD) for better modularization. A number of works have utilized AOSD to address security issues of software systems, but none of them has employed AOSD for intrusion detection. In this paper, we propose a model-based aspect-oriented framework for building intrusion-aware software systems. We model attack scenarios and intrusion detection aspects using an aspect-oriented Unified Modeling Language (UML) profile. Based on the UML model, the intrusion detection aspects are implemented and woven into the target system. The resulting target system has the ability to detect the intrusions automatically. We present an experimental evaluation by applying this framework for some of the most common attacks included in the Web Application Security Consortium (WASC) web security threat classification. The experimental results demonstrate that the framework is effective in specifying and implementing intrusion detection and can be applied for a wide range of attacks. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Zhu, Zhi Jian; Zulkernine, Mohammad] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Zulkernine, M (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM zzj791@mns.com; mzulker@cs.queensu.ca
FU Bell Canada through Bell University Laboratories (BUL); Natural Sciences
   Engineering Research Council (NSERC) of Canada; Mathematics of
   Information Technology and Complex Systems (MITACS) of Canada
FX This research work is partially funded by Bell Canada through Bell
   University Laboratories (BUL), the Natural Sciences Engineering Research
   Council (NSERC) of Canada, and the Mathematics of Information Technology
   and Complex Systems (MITACS) of Canada.
CR Aldawud Omar., 2001, P OOPSLA 2001 WORKSH
   ANITHA A, 2006, P 2006 INT C NETW SE, P16
   BOSTROM G, 2004, P WORKSH AOSD TECHN
   BUSCHMANN F, 1996, SYSTEM PATTERNS, V1, P125
   Charfi A, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P59
   DEWIN B, 2005, ASPECT ORIENTED SOFT
   DEWIN B, 2003, P 1 ACM WORKSH BUS D
   Fernández-Medina E, 2007, INFORM SYST, V32, P826, DOI 10.1016/j.is.2006.07.003
   Fox J, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P543, DOI 10.1109/ECBS.2005.48
   Gao Shu., 2004, P INT C SOFTWARE ENG, P360
   Georg G, 2002, IEEE INT C ENG COMP, P117, DOI 10.1109/ICECCS.2002.1181504
   Georg G., 2002, P WORKSHOP CRITICAL, P107
   HASLE H, 2004, THESIS ROYAL I TECHN
   Huang M., 2004, P WORKSH AOSD TECHN
   Hussein M, 2007, J SYST SOFTWARE, V80, P700, DOI 10.1016/j.jss.2006.08.017
   Hussein M, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P279, DOI 10.1109/ECBS.2006.70
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   King C.M., 2001, SECURITY ARCHITECTUR
   KUNTZE N, 2005, P C INF SEC S AFR S
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   McGraw G., 2006, Software security: building security in
   *NOV, NSUML
   *OBJ MAN GROUP, 2008, XML MET INT V2 1 SPE
   Pawlack R., 2002, P AO MOD UML WORKSH
   RITS M, 2005, P 2005 WORKSH SOFTW
   Shah V, 2003, DARPA INFORMATION SURVIVABILITY CONFERENCE AND EXPOSITION, VOL II, PROCEEDINGS, P143
   Slowikowski P., 2003, P WORKSH AN ASP OR S
   Stein D., 2002, AOSD '02: Proceedings of the 1st international conference on Aspect-oriented software development, P106
   *TIG ORG, ARG
   Trillo C.P., 2005, P 5 LAT AM C PATT LA, P89
   Uddin MG, 2007, P INT COMP SOFTW APP, P249
   Viega J., 2001, Cutter IT Journal, V14, P31
   Web Application Security Consortium (WASC), THREAT CLASS
   XU D, 2005, P INT C INF TECHN CO, V1, P668
   ZAKARIA A, 2002, P UML WORKSH ASP OR
   ZHANG G, 2005, P 6 WORKSH ASP OR MO
   ZHU ZJ, 2007, P 31 ANN INT COMP SO, P637
NR 39
TC 10
Z9 14
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2009
VL 51
IS 5
SI SI
BP 865
EP 875
DI 10.1016/j.infsof.2008.05.007
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425OY
UT WOS:000264648200005
DA 2024-07-18
ER

PT J
AU Kang, HG
   Han, T
AF Kang, Hyun-Goo
   Han, Taisook
TI A bottom-up pointer analysis using the update history
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Flow; and context-sensitive pointer analysis; Modular analysis; Strong
   update; Type system
ID INTERPROCEDURAL SHAPE-ANALYSIS
AB Pointer analysis is an important part for the source code analysis of C programs. In this paper, we propose a bottom-up and flow- and context-sensitive pointer analysis algorithm, where bottom-up refers to the ability to perform the analysis from callee modules to caller modules. Our approach is based on a new modular pointer analysis domain named the update history that can abstract memory states of a procedure independently of the information on aliases between memory locations and keep the information on the order of side effects performed. Such a memory representation not only enables the analysis to be formalized as a bottom-up analysis, but also helps the analysis to effectively identify killed side effects and relevant alias contexts. The experiments performed on a pilot implementation of the method shows that our approach is effective for improving the precision of a client analysis. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Kang, Hyun-Goo; Han, Taisook] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Kang, HG (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, 373-1 Kusong Dong, Taejon 305701, South Korea.
EM hgkang@ropas.kaist.ac.kr
RI Han, Taisook/C-2014-2011
FU MKE (Ministry of Knowledge Economy), Korea; ITRC (Information Technology
   Research Center) [IITA-2008-C1090-0801-0020]
FX This research was supported by the MKE (Ministry of Knowledge Economy),
   Korea, under the ITRC (Information Technology Research Center) support
   program supervised by the institute of information technology
   advancement (IITA-2008-C1090-0801-0020).
CR [Anonymous], 1992, Programming Language Design and Implementation (PLDI), DOI DOI 10.1145/143103.143137
   [Anonymous], 2009, P 30 ACM SIGPLAN C P
   CHASE DR, 1990, P SIGPLAN 90 C PROGR, P296
   CHATTERJEE R, 1999, P 26 ACM SIGPLAN SIG, P133
   Cheng BC, 2000, ACM SIGPLAN NOTICES, V35, P57, DOI 10.1145/358438.349311
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   Cousot P, 2002, LECT NOTES COMPUT SC, V2304, P159
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Deutsch Alain., 1994, PLDI 94, P230
   Distefano D, 2006, LECT NOTES COMPUT SC, V3920, P287
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   FAHNDRICH M, 2000, P ACM SIGPLAN C PROG, P253
   FOSTER JS, 2000, P STAT AN S JUN, P175
   Gotsman A, 2006, LECT NOTES COMPUT SC, V4134, P240
   Harrold MJ, 1996, IEEE T SOFTWARE ENG, V22, P442, DOI [10.1109/32.538603, 10.1145/226295.309037]
   Heintze Nevin., 2001, PLDI 01, P254
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   HIND M, 1999, ACM T PROGR LANG SYS, P848
   Kang HG, 2005, LECT NOTES COMPUT SC, V3780, P264
   KANG HG, BOTTOM UP POINTER AN
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Nielson F., 1999, Principles of Program Analysis
   Pearce DJ, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1290520.1290524
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Rinetzky N, 2005, LECT NOTES COMPUT SC, V3672, P284
   RINETZKY N, 2005, POPL, P296
   ROUNTEV A, 1999, ACM SIGPLAN SIGSOFT, P235
   ROUNTEV A, 2002, P INT C COMP CONSTR, P20
   RUF E, 2000, P C PROGR LANG DES I, P208
   SAGIV M, 2002, ACM T PROGR LANG SYS, P217
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   WHALEY J, 1999, OOPSLA, P187
   Wilson Robert Paul, 1997, Ph.D. Dissertation
   WRIGHT AK, 1994, INFORM COMPUT, V115, P38, DOI 10.1006/inco.1994.1093
   YONG SH, 2004, P INT STAT AN S AUG, P133
   YONG SH, 1999, P ACM C PROGR LANG D, P91
   Zhu JW, 2005, DES AUT CON, P831, DOI 10.1109/DAC.2005.193930
NR 37
TC 2
Z9 3
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 691
EP 707
DI 10.1016/j.infsof.2008.11.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600002
DA 2024-07-18
ER

PT J
AU Woo, G
   Chae, HS
   Cui, JF
   Ji, JH
AF Woo, Gyun
   Chae, Heung Seok
   Cui, Jian Feng
   Ji, Jeong-Hoon
TI Revising cohesion measures by considering the impact of write
   interactions between class members
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Metrics/measurement; Object-oriented design;
   Cohesion
ID OBJECT-ORIENTED METRICS; SOFTWARE; VALIDATION; QUALITY
AB Cohesion refers to the degree of the relatedness of the members in a class and several cohesion measures have been proposed to quantify the cohesiveness of classes in an object-oriented program. However, the existing cohesion measures do not differentiate write interactions from read interactions between class members, thus, do not properly reflect the cohesiveness of the class. This paper presents the revised versions of the existing five cohesion measures by considering the impact of write interactions between class members. In addition, we prove that the revised measures can be reduced into the original ones. To demonstrate the importance of write interactions, we have developed tools for automatic computation of the original and the revised cohesion measures and performed a case study where we found that write interactions are so commonly used in classes that they have much influence on cohesion measurement and the revised measures have stronger relations with change-proneness of classes than the original ones. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Woo, Gyun; Chae, Heung Seok; Cui, Jian Feng; Ji, Jeong-Hoon] Pusan Natl Univ, Dept Comp Sci & Engn, Pusan 609735, South Korea.
C3 Pusan National University
RP Chae, HS (corresponding author), Pusan Natl Univ, Dept Comp Sci & Engn, 30 Jangjeon Dong, Pusan 609735, South Korea.
EM woogyun@pusan.ac.kr; hschae@pusan.ac.kr; cuijf@pusan.ac.kr;
   jhji@pusan.ac.kr
RI Woo, Gyun/KEJ-3643-2024; cui, jian/IAN-2010-2023
OI Woo, Gyun/0009-0006-0469-3723; 
FU MKE (Ministry of Knowledge Economy), Korea
   [IITA-2008-(C1090-0801-0032)]; Brain Korea 21 Project
FX This research was supported by the MKE (Ministry of Knowledge Economy),
   Korea, under the ITRC (information Technology Research Center) support
   program supervised by the IITA (institute of Information Technology
   Advancement: grant number IITA-2008-(C1090-0801-0032)) and the Brain
   Korea 21 Project in 2008.
CR Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BIEMAN JM, 1995, ACM SIGSOFT S SOFTW, P259
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Bruntink M, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P136
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chae HS, 2004, IEEE T SOFTWARE ENG, V30, P826, DOI 10.1109/TSE.2004.88
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Devanbu P. T., 1992, International Conference on Software Engineering, P307, DOI 10.1145/143062.143148
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   FOLWER M, 1999, RECTORING IMPROVING
   HITZ M, 1995, S APPL CORP COMP
   KABAILI H, 2000, 4 INT ECOOP WORKSH Q, P29
   KABAILI H, 2001, CSMR 01
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   SELLERS H, 1996, SOFTWARE METRICS
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   WOO G, 2005, P 3 WORLD C SOFTW QU, V2, P11
NR 24
TC 5
Z9 5
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 405
EP 417
DI 10.1016/j.infsof.2008.05.014
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900013
DA 2024-07-18
ER

PT J
AU Glass, RL
   Vessey, I
   Ramesh, V
AF Glass, Robert L.
   Vessey, Iris
   Ramesh, V.
TI RESRES: The story behind the paper "Research in software engineering: An
   analysis of the literature"
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Computing research; Literature search; Research taxonomy
AB This article is a background report describing a comprehensive study of research in the three computing disciplines Computer Science, Software Engineering, and Information Systems. Findings relate to research topics, approaches, methods, reference disciplines, and levels of analysis. The article informally describes the process used and the research products produced. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Glass, Robert L.] Griffith Univ, Comp Trends, Brisbane, Qld 4064, Australia.
   [Vessey, Iris] Univ Queensland, St Lucia, Qld, Australia.
   [Ramesh, V.] Indiana Univ, Kelley Sch Business, Bloomington, IN USA.
C3 Griffith University; University of Queensland; Indiana University
   System; IU Kelley School of Business; Indiana University Bloomington
RP Glass, RL (corresponding author), Griffith Univ, Comp Trends, 18 View St, Brisbane, Qld 4064, Australia.
EM rlglass@acm.org; i.vessey@business.uq.edu.au; venkat@indiana.edu
CR Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   GLASS RL, 2004, COMMUNICATIONS A JUN
   RAMESH V, 2004, J SYSTEMS SOFTWARE, V70
   VESSEY I, 2005, INFORM SOFTWARE TECH, V47
   VESSEY I, 2002, J MANAGEMENT INF FAL
NR 5
TC 4
Z9 5
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 68
EP 70
DI 10.1016/j.infsof.2008.09.015
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500008
DA 2024-07-18
ER

PT J
AU Huang, L
   Holcombe, M
AF Huang, Liang
   Holcombe, Mike
TI Empirical investigation towards the effectiveness of Test First
   programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile methods; Empirical software engineering; Software testing; Testing
   strategies; Software engineering process; Programming paradigms
AB The Test First (TF) programming, which is based on an iterative process of "setting up test cases, implementing the functionality, and having all test cases passed", has been put forward for decades, however knowledge of the evidence of the Test First programming's success is limited. This paper describes a controlled experiment that investigated the distinctions between the effectiveness of Test First and that of Test Last (TL) (the traditional approach). The experimental results showed that Test First teams spent a larger percentage of time on testing. The achievable minimum external quality of delivered software applications increased with the percentage of time spent on testing regardless of the testing strategy (TF or TL) applied, although there does not exist a linear correlation between them. With four years' data, it is also found that a strong linear correlation between the amount of effort spent on testing and coding in Test First teams, while this phenomenon was not observed in Test Last teams. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Huang, Liang; Holcombe, Mike] Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, S Yorkshire, England.
C3 University of Sheffield
RP Huang, L (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, S Yorkshire, England.
EM l.huang@dcs.shef.ac.uk; m.holcombe@dcs.shef.ac.uk
FU EPSRC [EP/D031516/1] Funding Source: UKRI
CR Ambler Scott., 2003, AGILE DATABASE TECHN
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm BW., 1981, Software Engineering Economics
   Cederqvist P., 1993, Version Management with CVS
   CHAPLIN D, 2001, TEST 1 PROGRAMMING
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Crispin I, 2006, IEEE SOFTWARE, V23, P70, DOI 10.1109/MS.2006.157
   DELGADO RF, 1992, SAM ADV MANAGE J, V57, P24
   Deming W.E., 1982, QUALITY PRODUCTIVITY
   Dustin E., 1999, AUTOMATED SOFTWARE T
   EDWARDS SH, 2003, P INT C ED INF SYST
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   GELPERIN D, 1987, P 4 INT C SOFTW TEST
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   HOLCOMBE M, 1999, COMPUTER SCI ED, V9, P230
   HOLCOMBE M, 2001, P 2 INT C EXTR PROGR, P14
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   HUANG L, 2007, P TEST AC IND C IEEE, P82
   Huang LL, 2006, PHYS LETT A, V350, P197, DOI 10.1016/j.physleta.2005.09.084
   Janzen D, 2005, P C OBJ OR PROGR SYS, P222, DOI [10.1145/1094855.1094945, DOI 10.1145/1094855.1094945]
   KARN J, 2006, THESIS U SHEFFIELD
   Kaufmann R., 2003, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, P298
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KOLMOGOROV AN, 1933, ITALIANO ATTUARI, V4, P33
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   MACIAS F, 2003, P 4 INT C EXTR PROGR, P394
   MACIAS F, 2004, THESIS U SHEFFIELD U
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   MAXIMILIEN EM, 2003, P INT C SOFTW ENG PO
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McConnell S., 1996, Rapid Development: Taming Wild Software Schedules
   Muller M., 2002, IEEE P SOFTWARE, V149, P537
   *OBJ TECHN INT, 2003, ECL PLATF TECHN OV
   Pancur M, 2003, IEEE REGION 8 EUROCON 2003, VOL B, PROCEEDINGS, P83
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Runeson P, 2003, P 7 INT C EMP ASS EV
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smirnov N.V., 1944, Uspekhi Matematicheskikh Nauk, P179
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
   SYEDABDULLAH S, 2005, THESIS U SHEFFIELD U
   TATE R, 1982, ENCY ED RES, P553
   THOMSON C, 2007, P 3 S E EUR FORM MET, P141
   THOMSON C, 2007, THESIS U SHEFFIELD U
   WILLIAMS L, 2004, P 14 INT S SOFTW REL, P34
   WOHLIN C, 1995, SOFTWARE QUAL J, V4, P189, DOI 10.1007/BF01351923
NR 54
TC 34
Z9 36
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 182
EP 194
DI 10.1016/j.infsof.2008.03.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500017
DA 2024-07-18
ER

PT J
AU Huang, SM
   Chu, YT
   Li, SH
   Yen, DC
AF Huang, Shi-Ming
   Chu, Yuang-Te
   Li, Shing-Han
   Yen, David C.
TI Enhancing conflict detecting mechanism for Web Services composition: A
   business process flow model transformation approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE conflict detecting mechanism (CDM); enterprise application integration
   (EAI); Web services composition
ID WORKFLOW SYSTEMS; INTEGRATION; VERIFICATION
AB Businesses today are keenly aware of the competitive role of information technology. However, there is still a need for application systems to be implemented for support of daily business operations. However, these systems may be developed or acquired at different times from different vendors, and thus may be incompatible with each other. Because of this, a number of standards and technologies have been addressed to draw an integral vision in the field of enterprise application integration (EAI).
   Emerging Web Services has now promised enterprises that they can deploy new digital services faster than ever before by integrating the exisiting application systems. By integrating in this fashion, operational processes of heterogeneous systems are seamlessly controlled and integrated through a meta-processes. This integration could preserve the autonomy of original systems, as well as enhance the flexibility and agility of the business. The researchers who constructed this study have attempted to explore in detail the design of these meta-processes. Also the researchers have proposed a conflict detecting mechanism (CDM) in order to aid process designers. A prototype with a case study has been developed to evaluate the feasibility of the CDM, and the results show that it is useful in guiding process designers to correct and improve their designed meta-processes. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Huang, Shi-Ming] Natl Chung Cheng Univ, Ctr E Mfg & E Commerce, Dept Accounting & Informat Technol, Chiayi, Taiwan.
   [Chu, Yuang-Te] Natl Chung Cheng Univ, Dept Informat Management, Chiayi, Taiwan.
   [Li, Shing-Han] Tatung Univ, Dept Informat Management, Taipei, Taiwan.
   [Yen, David C.] Miami Univ, Dept Decis Sci & Management Informat Syst, Oxford, OH 45056 USA.
C3 National Chung Cheng University; National Chung Cheng University; Tatung
   University; University System of Ohio; Miami University
RP Yen, DC (corresponding author), Natl Chung Cheng Univ, Ctr E Mfg & E Commerce, Dept Accounting & Informat Technol, Chiayi, Taiwan.
EM smhuang@mis.ccu.edu.tw; shli@uu.edu.tw; Yendc@muohio.edu
RI Li, Shing Han/JMQ-0006-2023
OI Yen, David C./0000-0001-7093-0877
CR Adrion W. R., 1982, ACM COMPUTING SURVEY, V14
   Andrews Tony., 2005, Business process execution language for web services (BPEL4WS)
   [Anonymous], 2000, ENTERPRISE APPL INTE
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   [Anonymous], 1998, LNCS
   Ardissono L., 2005, 16th International Workshop on Principles of Diagnosis D X 05, P125
   ARKIN A, 2002, BUSINESS PR IN PRESS
   Arkin Assaf., 2002, Web Service Choreography Interface (WSCI) 1.0
   Basu A, 2002, INFORM SYST RES, V13, P1, DOI 10.1287/isre.13.1.1.94
   Basu A., 2001, Proc. 34th Hawaii Int'l Conf System Sciences, P3735
   Benatallah B, 2005, DISTRIB PARALLEL DAT, V17, P5, DOI 10.1023/B:DAPD.0000045366.15607.67
   *BIND SYST, 2002, CHOR WEB SERV BINDST
   Bosilj-Vuksic V., 2001, Informatica, V25, P123
   CASATI F, 2000, P AIWORC 2000 BUFF N
   CASATI F, 2002, INFORM SYSTEMS FRONT, V4
   Chalmeta R, 2001, J SYST SOFTWARE, V57, P175, DOI 10.1016/S0164-1212(01)00008-5
   CHANDRASEKARAN S, 2003, ELECTRON MARK, V13, P8
   CHARLESWORTH L, 2003, EAIJOURNAL, P11
   Chiang CC, 2003, INFORM SOFTWARE TECH, V45, P149, DOI 10.1016/S0950-5849(02)00194-5
   Christensen E., 2001, WEB SERVICES DESCRIP
   CLARK J, 2001, EBXML BUSINESS PROCE
   *COLL INC, 2003, BPEL DEV GUID
   Davis AM, 2000, J SYST SOFTWARE, V53, P205, DOI 10.1016/S0164-1212(00)00011-X
   Dumas Marlon., 2001, ≪ UML≫ 2001-The Unified Modeling Language. Modeling Languages, Concepts, P76, DOI 10.1007/3-540-45441-17
   Erasala N, 2003, COMPUT STAND INTER, V25, P69, DOI 10.1016/S0920-5489(02)00106-X
   Fremantle P, 2002, COMMUN ACM, V45, P77, DOI 10.1145/570907.570935
   HAMADI R, 2003, DAT TECHN 2003 14 AU, V17, P191
   HARRINGTON JH, 1998, BUSINESS PROCESS IMP
   Hasselbring W, 2000, COMMUN ACM, V43, P33
   Huang SM, 2002, J COMPUT INFORM SYST, V42, P94
   JIN LJ, 2001, HPL2001285 HP
   JUAN YC, 2004, INT J PROD RES, V42, P9
   Kim HD, 2002, SIGMOD RECORD, V31, P37, DOI 10.1145/507338.507346
   Kreger H, 2003, COMMUN ACM, V46, P29, DOI 10.1145/777313.777334
   KUMAR A, 2002, J MANAGE INFORM SYST, V18, P157
   Kwan I, 1999, INFORM SYST, V24, P355, DOI 10.1016/S0306-4379(99)00022-8
   LAWSHE CH, 1975, PERS PSYCHOL, V28, P563, DOI 10.1111/j.1744-6570.1975.tb01393.x
   Lear A. C., 1999, IT Professional, V1, P12, DOI 10.1109/6294.793665
   Lee J, 2003, COMMUN ACM, V46, P54, DOI 10.1145/606272.606273
   Lewis B. R., 1995, Journal of Management Information Systems, V12, P199
   Leymann F, 2002, IBM SYST J, V41, P198, DOI 10.1147/sj.412.0198
   LUBKE D, 2006, XML4BPM, P265
   Marjanovic O., 1999, Knowledge and Information Systems, V1, P157
   MAYER RJ, 1998, FRAMEWORK SUITE METH
   Medjahed B, 2003, VLDB J, V12, P333, DOI 10.1007/s00778-003-0101-5
   MENDLING J, 2005, 7 WORKSH SOFTW REENG
   Mentzas G, 2001, INT J INFORM MANAGE, V21, P123, DOI 10.1016/S0268-4012(01)00005-6
   Miller R. J., 1993, 19th International Conference on Very Large Data Bases Proceedings, P120
   NARAYANAN S, 2002, P 8 INT WORLD WID WE
   NORIN R, 2002, WORKFLOW PR IN PRESS
   PAUL J, 2001, INFORM SYST, P65
   Peltz C., 2003, WEB SERVICES ORCHEST
   PENNY AK, 1996, INTRO SYSTEMS ANAL D
   REZGUI A, 2002, WORKSH INF DAT MAN
   Sadiq W, 2000, INFORM SYST, V25, P117, DOI 10.1016/S0306-4379(00)00012-0
   Salimifard K, 2001, EUR J OPER RES, V134, P664, DOI 10.1016/S0377-2217(00)00292-7
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   SCHEER AW, 1998, BUSINESS PROCCSS ENG
   Shankar R P, 2002, P 11 INT WORLD WID W, P786
   Sheth AP, 1999, IEEE CONCURR, V7, P18, DOI 10.1109/4434.788776
   Smith H., 2002, EMERGENCE BUSINESS P
   SODERSTROM E, 2002, LNCS, P600
   Stal M, 2002, COMMUN ACM, V45, P71, DOI 10.1145/570907.570934
   Sun W, 2000, J ORG COMP ELECT COM, V10, P171, DOI 10.1207/S15327744JOCE1003_02
   Sycara Katia., 2003, WEB SEMANTICS SCI SE, V1, P27
   Themistocleous M., 2001, P 34 ANN HAW INT C S, P3775
   THIAGARAJAN RK, 2002, 4 IEEE INT WORKSH AD, P222
   van der Aalst W, 2000, INFORM MANAGE, V37, P67, DOI 10.1016/S0378-7206(99)00038-5
   van der Aalst W, 2003, IEEE INTELL SYST, V18, P72
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van der Aalst WMP, 2003, INFORM SYST RES, V14, P23, DOI 10.1287/isre.14.1.23.14768
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   VANDEHEUVEL W, 2000, AUSTR J INFORM SYSTE, V18, P126
   WHITE SA, 2002, BUSINESS PR IN PRESS
   XU W, 2006, 4 IEEE INT C WEB SER
   Younas M, 2004, INT C COMP SUPP COOP, P419
   YUANCHEN Y, 2004, P 2004 IEEE INT C NE, P9
   Zhuge H, 2000, PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, VOL I, P183, DOI 10.1109/WISE.2000.882391
   [No title captured]
NR 79
TC 18
Z9 19
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1069
EP 1087
DI 10.1016/j.infsof.2007.10.014
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 355LA
UT WOS:000259709200002
DA 2024-07-18
ER

PT J
AU Hsueh, NL
   Shen, WH
   Yang, ZW
   Yang, DL
AF Hsueh, Nien-Lin
   Shen, Wen-Hsiang
   Yang, Zhi-Wei
   Yang, Don-Lin
TI Applying UML and software simulation for process definition,
   verification, and validation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE CMMI; UML; process modeling; process simulation; software engineering
   education
AB Process definition, verification, and validation are recognized as critical elements in software process improvement, whereas CMMI is a process improvement approach that provides organizations with the essential elements of effective processes. Organizations must define their own processes to meet the requirements of CMMI. A friendly, unambiguous process modeling language and tool are thus very important for organizations to define, verify, and validate the processes. Nevertheless, hardly has any research yet been done on how to embed CMMI process area goals into process definition stage to satisfy organization process improvement. In this research, we propose a UML-based approach to define, verify, and validate an organization's process. Our approach can also be applied to a process learning environment for students and project members. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Hsueh, Nien-Lin; Shen, Wen-Hsiang; Yang, Zhi-Wei; Yang, Don-Lin] Feng Chia Univ, Dept Comp Sci & Informat Engn, Taichung 40724, Taiwan.
C3 Feng Chia University
RP Shen, WH (corresponding author), Feng Chia Univ, Dept Comp Sci & Informat Engn, 100 Wenhwa Rd, Taichung 40724, Taiwan.
EM nlhsueh@fcu.edu.tw; shen@ocit.edu.tw; sundy.yang@auo.com;
   dlyang@fcu.edu.tw
RI Yang, Don-Lin/F-2151-2017; Shen, Wen-Hsiang/C-8617-2012
OI Yang, Don-Lin/0000-0002-8004-637X; Shen, Wen-Hsiang/0000-0001-8416-910X
CR [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   [Anonymous], 1991, SIMULATION MODELING
   Beato ME, 2005, ELECTRON NOTES THEOR, V127, P3, DOI 10.1016/j.entcs.2004.10.024
   Bouabana-Tebibel T, 2007, INFORM SOFTWARE TECH, V49, P999, DOI 10.1016/j.infsof.2006.10.007
   Christie AM, 1999, J SYST SOFTWARE, V46, P107, DOI 10.1016/S0164-1212(99)00004-7
   Cook JE, 1999, ACM T SOFTW ENG METH, V8, P147, DOI 10.1145/304399.304401
   France R, 1998, COMPUT STAND INTER, V19, P325, DOI 10.1016/S0920-5489(98)00020-8
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   HSUEH NL, 2006, J SOFTWARE ENG STUDI, V1, P34
   JAGER D, 1999, USING UML SOFTWARE P
   Kosturiak J, 1999, COMPUT IND, V38, P159, DOI 10.1016/S0166-3615(98)00116-X
   Liu DS, 2002, COMPUT IND, V49, P267, DOI 10.1016/S0166-3615(02)00099-4
   MANGAN P, 2002, AUSTR COMPUTER SCI C, V18, P103
   MASSINK M, 2004, J LOGIC ALGEBR PROGR, V69, P1
   McFeeley B., 1996, IDEAL USERS GUIDE SO
   Miller MJ, 2002, PROCEEDINGS OF THE 2002 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P1473, DOI 10.1109/WSC.2002.1166422
   Navarro E. O., 2005, Software Process Improvement and Practice, V10, P311, DOI 10.1002/spip.232
   *OBH MAN GROUP, 2003, UML 2 0 OCL SPEC
   *OBH MAN GROUP, 2003, OMG UN MOD LANG SUP
   Object Management Group, 2002, SOFTW PROC ENG MET S
   Paige RF, 2000, INFORM SOFTWARE TECH, V42, P665, DOI 10.1016/S0950-5849(00)00109-9
   Paulk Mark., 1993, Encyclopedia of Software Engineering
   Petty DM, 1996, J MATER PROCESS TECH, V60, P421, DOI 10.1016/0924-0136(96)02365-5
   Reiner G, 2005, INT J PROD ECON, V96, P381, DOI 10.1016/j.ijpe.2004.07.004
   Salimifard K, 2001, EUR J OPER RES, V134, P664, DOI 10.1016/S0377-2217(00)00292-7
   Störrle H, 2005, ELECTRON NOTES THEOR, V127, P35, DOI 10.1016/j.entcs.2004.08.046
   Zamli K.Z., 2001, Malaysian Journal of Computer Science, V14, P26
NR 27
TC 21
Z9 25
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 897
EP 911
DI 10.1016/j.infsof.2007.10.015
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900005
DA 2024-07-18
ER

PT J
AU Siponen, M
   Heikka, J
AF Siponen, Mikko
   Heikka, Juhani
TI Do secure information system design methods provide adequate modeling
   support?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information systems security methods; Information Systems Security;
   Development of Secure Systems; Security Modeling
AB Information system development (ISD) methods lack security features. To address this problem, various secure information system (SIS) design methods have been proposed. An important feature of these methods is modeling support, which manifests itself through modeling notations. This paper explores the extent to which the alternative SIS design methods offer modeling support. The results suggest that extant SIS design methods provide only limited modeling support. No single SIS design method offers comprehensive modeling support. This result has implications for practice and research. Practitioners may need to combine different SIS design methods for the development of secure information systems (IS). In turn, scholars and SIS design method developers should ensure that future SIS design methods offer comprehensive modeling support. Finally, empirical studies should be conducted to explore the usability of the current conceptual models of secure systems design methods in practice. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Siponen, Mikko; Heikka, Juhani] Univ Oulu, Dept Informat Proc Sci, FIN-90014 Oulu, Finland.
C3 University of Oulu
RP Siponen, M (corresponding author), Univ Oulu, Dept Informat Proc Sci, POB 3000, FIN-90014 Oulu, Finland.
EM mikko.siponen@oulu.fi; juhani.heikka@oulu.fi
RI Levy, Yair/A-4759-2009; Heikka, Juhani/JVN-0735-2024
OI Levy, Yair/0000-0002-8994-6497; 
CR [Anonymous], 1995, INFORM SYSTEMS DEV D, DOI DOI 10.1017/CBO9780511895425
   [Anonymous], INFORM SYSTEMS J
   [Anonymous], 2002, SECURITY PATTERNS WE
   [Anonymous], P 4 C PATT LANG PROG
   [Anonymous], 1997, Managing information system security
   ARMSTRONG H, 2000, P 16 ANN WORK C INF
   Backhouse J, 1996, EUR J INFORM SYST, V5, P2, DOI 10.1057/ejis.1996.7
   BASKERVILLE R, 1993, COMPUT SURV, V25, P375, DOI 10.1145/162124.162127
   Baskerville R., 1992, J MANAGEMENT SYSTEMS, V4, P1
   Baskerville R.L., 1988, DESIGNING INFORM SYS
   BLAKLEY B, 2004, MEMBERS OPEN SECURIT
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   BOOYSEN HAS, 1995, P 11 IFIP TC11 INT C
   Burrell G, 1979, SOCIOLOGICAL PARADIG
   Checkland P., 1985, SYSTEMS THINKING SYS
   DOBSON J, 1990, P 6 IFIP INT C COMP
   ELLISON R, 1999, P 11 CAN INF TECHN S
   ELLMER E, 1995, P 11 ANN COMP SOC AP
   Fernández-Medina E, 2007, INFORM SYST, V32, P826, DOI 10.1016/j.is.2006.07.003
   Fowler Martin., 1999, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   Halkidis ST, 2006, COMPUT SECUR, V25, P379, DOI 10.1016/j.cose.2006.03.002
   Herrmann G, 1999, INT J ELECTRON COMM, V3, P89, DOI 10.1080/10864415.1999.11518343
   Herrmann G, 1998, P ANN HICSS, P766, DOI 10.1109/HICSS.1998.649280
   HIRSCHHEIM R, 1989, COMMUN ACM, V32, P1199, DOI 10.1145/67933.67937
   Hirschheim R., 1996, ACCOUNTING MANAGEMEN, V6, P1
   HITCHINGS J, 1995, P IFIP TC11 11 INT C
   HITCHINGS J, 1996, P 12 IFIP TC11 INT C
   Huisman M, 2002, INFORMATION SYSTEMS DEVELOPMENT: ADVANCES IN METHODOLOGIES, COMPONENTS AND MANAGEMENT, P87
   HUTCHINSON W, 2000, P 1 AUSTR INF SEC MA
   Iivari J, 1996, INFORM SYST, V21, P551, DOI 10.1016/S0306-4379(96)00028-2
   Iivari J., 1991, European Journal of Information Systems, V1, P249, DOI 10.1057/ejis.1991.47
   Iivari J, 1998, INFORM SYST RES, V9, P164, DOI 10.1287/isre.9.2.164
   IIVARI J, 1994, IFIP T A, V55
   IIVARI J, 1989, INFORM SYSTEMS CONCE
   Iivari J., 2001, Journal of Management Information Systems, V17, P179
   JAAKSI A, 1997, TAMPERE U TECHNOLOGY, V201
   JAMES HL, 1996, P INF SYST C NZ
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   KARYDA M, 2001, P IFIP TC11 16 INT C
   KIS M, 2002, P 9 C PATT LANG PROG
   LIPSON H, 1999, P NEW SEC PAR WORKSH
   LYYTINEN K, 1991, CRITICAL ISSUES INFO
   McDermott J., 1999, P 15 ANN COMP SEC AP
   MCDERMOTT J, 2001, P 17 ANN COMP SEC AP
   MOURATIDIS H, 2004, P 15 C ADV INF SYST
   Mouratidis H., 2002, P AG OR METH WORKSH
   MOURATIDIS H, 1992, P 8 EUR C PATT LANG
   Pernul G, 1998, DATA KNOWL ENG, V26, P291, DOI 10.1016/S0169-023X(97)00045-1
   PERNUL G, 1994, P 10 ANN COMP SEC AP
   PERNUL G, 1992, P 8 ANN COMP SEC APP
   POTTAS D, 1995, P IFIP TC11 11 INT C
   PRIEBE T, 2000, OLAP SECURITY DESIGN, P33
   Röhm AW, 2000, DECIS SUPPORT SYST, V29, P343, DOI 10.1016/S0167-9236(00)00082-8
   ROHM AW, 1998, P 14 ANN COMP SEC AP
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   SIPONEN M, ADV INFORM SECURITY, P99
   SIPONEN M, 2005, P HAW INT C SYST SCI
   Siponen M. T., 2006, IT Professional, V8, P40, DOI 10.1109/MITP.2006.73
   Siponen M. T., 2005, Information and Organization, V15, P339, DOI 10.1016/j.infoandorg.2004.11.001
   Siponen M, 2006, J ASSOC INF SYST, V7, P725
   Siponen MT, 2005, EUR J INFORM SYST, V14, P303, DOI 10.1057/palgrave.ejis.3000537
   Sommerville I., 2004, Software Engineering
   Straub DW, 1998, MIS QUART, V22, P441, DOI 10.2307/249551
   STRENS R, 1993, P 1992 1993 ACM SIGC
   THOMAS RK, 1994, P 7 IEEE COMP SEC FD
   Villarroel R, 2006, J RES PRACT INF TECH, V38, P31
   Villarroel R, 2005, COMPUT SECUR, V24, P308, DOI 10.1016/j.cose.2004.09.011
   Villarroel R, 2006, FIRST INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P678, DOI 10.1109/ARES.2006.109
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   WAND Y, 1989, INFORM SYSTEM CONCEP
   Webster J, 2002, MIS QUART, V26, pXIII
   WEISS M, 2003, P 10 C PATT LANG PRO
NR 74
TC 4
Z9 4
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 1035
EP 1053
DI 10.1016/j.infsof.2007.10.011
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900012
DA 2024-07-18
ER

PT J
AU Her, JS
   Kim, JH
   Oh, SH
   Rhew, SY
   Kim, SD
AF Her, Jin Sun
   Kim, Ji Hyeok
   Oh, Sang Hun
   Rhew, Sung Yul
   Kim, Soo Dong
TI A framework for evaluating reusability of core asset in product line
   engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE reusability; product line engineering; quality model; metric; core asset
ID VARIABILITY
AB Product line engineering (PLE) is a new effective approach to software reuse, where applications are generated by instantiating a core asset which is a large-grained reuse unit. Hence, a core asset is a key element of PLE, and therefore the reusability of the core asset largely determines the success of PLE projects. However, current quality models to evaluate reusability do not adequately address the unique characteristics of core assets in PLE. This paper proposes a comprehensive framework for evaluating the reusability of core assets. We first identify the key characteristics of core assets, and derive a set of quality attributes that characterizes the reusability of core assets. Then, we define metrics for each quality attribute and finally present practical guidelines for applying the evaluation framework in PLE projects. Using the proposed framework, the reusability of core assets can be more effectively and precisely evaluated. (c) 2006 Elsevier B.V. All rights reserved.
C1 Soongsil Univ, Dept Comp Sci, Seoul 156743, South Korea.
C3 Soongsil University
RP Kim, SD (corresponding author), Soongsil Univ, Dept Comp Sci, 1-1 Sangdo Dong, Seoul 156743, South Korea.
EM jsher@otlab.ssu.ac.kr; jhkim@otlab.ssu.ac.kr; shoh@otlab.ssu.ac.kr;
   syrhew@ssu.ac.kr; sdkim@ssu.ac.kr
CR [Anonymous], 1998, 10611998 IEEE
   [Anonymous], SOFTWARE ENG FORMAL
   Atkinson Colin., 2002, COMPONENT BASED PROD
   BASILI V, 1988, IEEE T SOFTW ENG, V14
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BAYER J, 1999, P S SOFTW REUS 99 MA
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Clements P., 2002, Software product lines
   HEINEMAN T, 2001, COMPONENT BASED SOFT
   *ISO IEC, 2001, 91261 ISOIEC TR
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   KIM S, 2005, P 3 ICITA 2005 JUL, V1, P70
   KIM S, 2003, P 21 IASTED INT C
   Kim SD, 2005, INFORM SOFTWARE TECH, V47, P663, DOI 10.1016/j.infsof.2004.11.007
   KIM SD, 2005, P 2005 INT C COMP SC, P57
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Matinlassi M., 2002, QUALITY DRIVEN ARCHI
   Park SY, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P491
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Schmid K., 2001, 04700E IESE
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Washizaki H, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P211, DOI 10.1109/METRIC.2003.1232469
   Wijnstra JG, 2003, J SYST SOFTWARE, V66, P199, DOI 10.1016/S0164-1212(02)00077-8
   Zubrow D., 2003, CMUSEI2003TN031
NR 25
TC 20
Z9 24
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2007
VL 49
IS 7
BP 740
EP 760
DI 10.1016/j.infsof.2006.08.008
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 179MV
UT WOS:000247294900003
DA 2024-07-18
ER

PT J
AU Paradkar, A
AF Paradkar, Amit
TI A quest for appropriate software fault models: Case studies on fault
   detection effectiveness of model-based test generation techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Workshop on Advances in Model-Based Software Testing
CY MAY 15-16, 2005
CL St.Louis, MO
SP ICSE
DE model-based test generation; fault detection effectiveness
AB Model-based test generation (MBTG) is becoming an area of active research. These techniques differ in terms of (1) modeling notations used, and (2) the adequacy criteria used for test generation. This paper (1) reviews different classes of MBTG techniques at a conceptual level, and (2) reports results of three case studies comparing various techniques in terms of their fault detection effectiveness. Our results indicate that MBTG technique which employs mutation and explicitly generates state verification sequences has better fault detection effectiveness than those based on boundary values, and predicate coverage criteria for transitions. Instead of a default adequacy criteria, certain techniques allow the user to specify test objectives in addition to the model. Our experience indicates that the task of defining appropriate test objectives is not intuitive. Furthermore, notations provided to describe such test objectives may have inadequate expressive power. We posit the need for a suitable fault modeling notation which also treats domain invariants as first class entities. (c) 2006 Elsevier B.V. All rights reserved.
C1 IBM Corp, TJ Watson Res Ctr, Ctr Software Engn, Hawthorne, NY 10532 USA.
C3 International Business Machines (IBM)
RP Paradkar, A (corresponding author), IBM Corp, TJ Watson Res Ctr, Ctr Software Engn, 19 Skyline Dr, Hawthorne, NY 10532 USA.
EM paradkar@us.ibm.com
CR BALCER MJ, 1989, ACM SIGSOFT, V14, P210, DOI 10.1145/75309.75332
   Bernard E, 2004, SOFTWARE PRACT EXPER, V34, P915, DOI 10.1002/spe.597
   BRIAND L, 2004, T SOFTWARE ENG, V30, P1
   BROY M, 2005, SPRINGER LNCS, V636
   CLARKE D, 2001, ESEC FSE 9 P 8 EUR S, P301
   KIM S, 1999, INT C SOFTW SYST ENG
   LEGEARD B, 2001, P C AUT SOFTW ENG, P290
   Legeard Bruno., 2002, P INT B C, P309
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Paradkar A, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ISSRE.2004.28
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Tai KC, 1996, IEEE T SOFTWARE ENG, V22, P552, DOI 10.1109/32.536956
   [No title captured]
NR 14
TC 3
Z9 4
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2006
VL 48
IS 10
BP 949
EP 959
DI 10.1016/j.infsof.2006.03.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 092ZM
UT WOS:000241136700002
DA 2024-07-18
ER

PT J
AU Chun, SJ
   Lee, JH
   Lee, SL
AF Chun, Seok-Ju
   Lee, Ju-Hong
   Lee, Seok-Lyong
TI Online aggregation with tight error bounds in dynamic environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information system; database; OLAP; online aggregation; decision
   support; approximate query answering
AB OLAP is a category of database technology that allows analysts to gain insight into the aggregation of data by enabling them to gain access to a variety of different views of the information contained in a database. It is very important to provide analysts with guaranteed error bounds for approximate results to aggregation queries in enterprise applications such as decision support systems. We propose a general method of providing tight error bounds for approximate results to OLAP range-sum queries. We perform an extensive experiment on diverse data sets and examine the effectiveness of the proposed method for various data cube dimensions and query sizes. (c) 2006 Elsevier B.V. All rights reserved.
C1 Inha Univ, Sch Comp Sci & Engn, Inchon 402751, South Korea.
   Seoul Natl Univ Educ, Dept Comp Educ, Seoul, South Korea.
   Hankuk Univ Foreign Studies, Sch Ind & Informat Engn, Seoul, South Korea.
C3 Inha University; Hankuk University Foreign Studies
RP Lee, JH (corresponding author), Inha Univ, Sch Comp Sci & Engn, 253 Yonghyun Dong, Inchon 402751, South Korea.
EM chunsj@snue.ac.kr; juhong@inha.ac.kr; sllee@hufs.ac.kr
CR Acharya S, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P275, DOI 10.1145/304181.304207
   BECKMANN N, 1990, SIGMOD REC, V19, P322, DOI 10.1145/93605.98741
   CHUN SJ, 2001, P INT C VER LARG DAT, P521
   Geffner S, 1999, PROC INT CONF DATA, P328, DOI 10.1109/ICDE.1999.754948
   Guttman A., 1984, SIGMOD Record, V14, P47, DOI 10.1145/971697.602266
   HO CT, 1997, P 1997 ACM SIGMOD IN, P73
   LAZARIDIS L, 2001, P ACM SIGMOD C, P401
   Poosala V., 1999, Proceedings. Eleventh International Conference on Scientific and Statistical Database Management, P24, DOI 10.1109/SSDM.1999.787618
   RIEDEWALD M, 2007, P ICDT C, P159
   SAMET H, 1984, COMPUT SURV, V16, P187, DOI 10.1145/356924.356930
   Shanmugasundaram J., 1999, KNOWLEDGE DISCOVERY, P223, DOI DOI 10.1145/312129.312231
   Vitter JS, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P193, DOI 10.1145/304181.304199
   Weber R., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P194
NR 13
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 869
EP 875
DI 10.1016/j.infsof.2005.12.005
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500009
DA 2024-07-18
ER

PT J
AU Layman, L
   Williams, L
   Damian, D
   Bures, H
AF Layman, Lucas
   Williams, Laurie
   Damian, Daniela
   Bures, Hynek
TI Essential communication practices for Extreme Programming in a global
   software development team
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE global software development; Extreme Programming; case study
AB We conducted an industrial case study of a distributed team in the USA and the Czech Republic that used Extreme Programming. Our goal was to understand how this globally-distributed team created a successful project in a new problem domain using a methodology that is dependent on informal, face-to-face communication. We collected quantitative and qualitative data and used grounded theory to identify four key factors for communication in globally-distributed XP teams working within a new problem domain. Our study suggests that, if these critical enabling factors are addressed, methodologies dependent on informal communication can be used on global software development projects. (c) 2006 Elsevier B.V. All rights reserved.
C1 N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   Univ Victoria, Dept Comp Sci, Victoria, BC V8W 3P6, Canada.
   Radiante Corp, Wake Forest, NC 27587 USA.
C3 North Carolina State University; University of Victoria
RP Layman, L (corresponding author), 1627 MacAlpine Circle, Raleigh, NC 27695 USA.
EM lmlayma2@mcsu.edu; williams@csc.ncsu.edu; danielad@cs.uvic.ca;
   hynek@radiante-corp.com
OI Layman, Lucas/0000-0002-2534-8762
CR ABRAHAMSSON P, 2003, 29 IEEE EUROMICRO C
   [Anonymous], CAN C EL COMP ENG NI
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], 2003, CASE STUDY RES DESIG
   Arora A., 2004, GLOBALIZATION SOFTWA
   *BANG BENCHM SPEC, 2001, BENCHM SOFTW ENG PRA
   BASILI V, 1994, IEEE SOFTWARE, V11, P58, DOI 10.1109/52.300090
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Beck K., 2000, EXTREME PROGRAMMING
   Beck K., 2001, Planning extreme programming
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Coplien JamesO., 2005, Organizational Patterns of Agile Software Development, V1st
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian D, 2003, SOFTWARE PROCESS IMP, V8, P179, DOI DOI 10.1002/SPIP.182
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   Earl MJ, 1996, SLOAN MANAGE REV, V37, P26
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   El-Shinnawy M., 1998, IEEE Transactions on Professional Communications, V41, P242, DOI 10.1109/47.735366
   FOWLER M, 2004, USING AGILE PROCESS, V2005
   FRENCH A, 1998, INT C SOFTW MAINT BE
   Glaser B.G., 1967, DEV GROUNDED THEORY
   GRINTER RE, 1998, C COMP SUPP COOP WOR
   Heeks R, 2001, IEEE SOFTWARE, V18, P54, DOI 10.1109/52.914744
   Herbsleb J. D., 1998, IEEE COMPUTER SOC SO, P18
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   HERBSLEB JD, 2001, INT C SOFTW ENG TOR
   Jeffries R., 2001, EXTREME PROGRAMMING
   JICK TD, 1979, ADM SCI Q, V24, P611
   Jones C, 1996, COMPUTER, V29, P92, DOI 10.1109/2.507640
   Kan S. H., 2003, METRICS MODELS SOFTW
   Kitchenham BarbaraA., 1996, Software metrics: measurement for software process improvement
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   LAYMAN L, 2004, 2 IEEE AG DEV C SALT
   LAYMAN L, 2005, TR200513 N CAR STAT
   LAYMAN L, 2004, P WORKSH QUANT TECHN
   Maurer F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.989006
   Maznevski ML, 2000, ORGAN SCI, V11, P473, DOI 10.1287/orsc.11.5.473.15200
   MOCKUS A, 2001, 7 INT SOFTW METR S M
   *NASSCOM, 2001, IT SOFTW SERV IND IN
   Paasivaara M., 2003, Software Process Improvement and Practice, V8, P183, DOI 10.1002/spip.187
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Putnam L., 1992, MEASURES EXCELLENCE
   Sahay S., 2003, Scandinavian Journal of Information Systems, V15, P3
   SCHWABER K, 2001, AGILE SOFTWARE DEV
   Tiwana A, 2004, IEEE SOFTWARE, V21, P51, DOI 10.1109/MS.2004.1331302
   WILLIAMS L, 2004, EMP ASS SOFTW ENG EA
   WILLIAMS L, 2004, 8 INT C EMP ASS SOFT
   Williams RN, 2004, MOL ECOL NOTES, V4, P17, DOI 10.1046/j.1471-8286.2003.00559.x
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 55
TC 139
Z9 160
U1 2
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 781
EP 794
DI 10.1016/j.infsof.2006.01.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chou, SC
   Lo, WK
   Lai, CW
AF Chou, Shih-Chien
   Lo, Wei-Kuang
   Lai, Chia-Wei
TI Information flow control in multithread applications based on access
   control lists
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information security; access control; information flow control; prevent
   information leakage; multithread
ID OBJECT-ORIENTED SYSTEMS; CONTROL MODEL; FLEXIBILITY; SECURITY; PRIVACY
AB Information flow control models prevent information leakage during the execution of an application. We developed a model OORBAC to control information flows in object-oriented systems. Soon after the development of OORBAC, we identified that the model cannot solve the problems induced by multithreaded applications. We thus adapted the concepts of OORBAC to develop a new information flow control model. It offers the features of OORBAC and solves the problems induced by multithread object-oriented applications. The new model is named MtACL (information flow control model for multithreaded object-oriented applications based on access control lists). The multithreaded problems solved by MtACL include the shared memory problem, the non-interference problem, and the combination leakage problem. This paper presents MtACL and proves that the model solves the multithreaded problems. (c) 2005 Elsevier B.V. All rights reserved.
C1 Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien 974, Taiwan.
C3 National Dong Hwa University
RP Chou, SC (corresponding author), Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien 974, Taiwan.
EM scchou@mail.ndhu.edu.tw
CR [Anonymous], 1999, P 26 ACM SIGPLAN SIG
   Bertino E., 1998, ACM T INFORM SYST SE, V1, P26
   Chou SC, 2004, J SYST SOFTWARE, V73, P425, DOI 10.1016/j.jss.2003.08.235
   Chou SC, 2004, INFORM SOFTWARE TECH, V46, P729, DOI 10.1016/j.infsof.2003.12.006
   Chou SC, 2004, J SYST SOFTWARE, V71, P143, DOI 10.1016/S0164-1212(02)00158-9
   CHOU SC, 2004, J OBJECT TECHNOLOGY, V3, P91
   Coad P., 1991, OBJECT ORIENTED ANAL, V2nd
   Ferrari E, 1997, P IEEE S SECUR PRIV, P130, DOI 10.1109/SECPRI.1997.601328
   Izaki K, 2001, PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, P363, DOI 10.1109/ICPADS.2001.934841
   Maamir A, 2003, INT J SOFTW ENG KNOW, V13, P313, DOI 10.1142/S0218194003001317
   MCILROY MD, 1992, SOFTWARE PRACT EXPER, V22, P673, DOI 10.1002/spe.4380220805
   Myers A.C., 1997, P ACM S OPERATING SY, P129
   Myers AC, 2000, ACM T SOFTW ENG METH, V9, P410, DOI 10.1145/363516.363526
   Myers AC, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P186, DOI 10.1109/SECPRI.1998.674834
   Rumbaugh James, 1999, The unified modeling language reference manual
   Sabelfeld A, 2003, IEEE J SEL AREA COMM, V21, P5, DOI 10.1109/JSAC.2002.806121
   Samarati P, 1997, IEEE T KNOWL DATA EN, V9, P524, DOI 10.1109/69.617048
   Silberschatz Abraham., 2002, OPERATING SYSTEM CON, VSixth
   Smith EA, 1998, FEMS MICROBIOL ECOL, V25, P355, DOI 10.1016/S0168-6496(98)00004-X
   Tachikawa T., 1997, Transactions of the Information Processing Society of Japan, V38, P2362
   Yasuda M, 1998, TWELFTH INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN-12), PROCEEDINGS, P168, DOI 10.1109/ICOIN.1998.648373
   Yasuda M, 1997, 1997 INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P244, DOI 10.1109/ICPADS.1997.652557
NR 22
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 717
EP 725
DI 10.1016/j.infsof.2005.08.008
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700008
DA 2024-07-18
ER

PT J
AU Chen, CB
   Lin, CT
   Wang, CH
   Chang, CW
AF Chen, CB
   Lin, CT
   Wang, CH
   Chang, CW
TI Model for measuring quality of software in DVRS using the gap concept
   and fuzzy schemes with GA
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE digital video recorder system; software quality measurement;
   lambda-fuzzy measure; fuzzy integral; Choquet integral; genetic
   algorithm
ID GENETIC ALGORITHMS; EXPECTATIONS
AB A model of software quality is proposed to measure the quality of the software in a digital video recorder system (DVRS) during its development stage. The characteristics and metrics of this model are adopted from ISO/IEC 9126 and 14598. The model incorporates a)lambda-fuzzy measure. a genetic algorithm and a hierarchical Choquet integral. It is based on the gap concept between perceive performance by the developers and satisfaction by the end-users. acquirers and evaluators of third parties in software development stage. A checklist about of the software quality is used to reduce the gap between the quality of the DVRS software quality as assessed by the developers and that as assessed by the end-users, acquirers and the evaluators of third parties. (c) 2005 Elsevier B.V. All rights reserved.
C1 Natl Dong Hwa Univ, Dept Int Business, Hualien 974, Taiwan.
   Yuanpei Univ Sci & Technol, Grad Inst Business Management, Hsinchu, Taiwan.
   Natl Sun Yat Sen Univ, Dept Business Management, Kaohsiung 80424, Taiwan.
   Yuanpei Univ Sci & Technol, Dept Informat Management, Hsinchu, Taiwan.
C3 National Dong Hwa University; National Sun Yat Sen University
RP Natl Dong Hwa Univ, Dept Int Business, Hualien 974, Taiwan.
EM bchen@mail.ndhu.edu.tw; ctlin@mail.yust.edu.tw;
   p924010017@student.nsysu.edu.tw; w1211@ms41.hinet.net
OI Lin, Chin-Tsai/0000-0003-2994-450X
CR [Anonymous], 1977, FUZZY AUTOMATA DECIS
   [Anonymous], 1996, GENETIC ALGORITHMS D, DOI DOI 10.1007/978-3-662-03315-9_4
   [Anonymous], 1992, Fuzzy measure theory
   [Anonymous], 1994, 9001 ISO
   Chen CB, 1997, IEEE T SYST MAN CY B, V27, P26, DOI 10.1109/3477.552183
   Chen CB, 1997, FUZZY SET SYST, V88, P51, DOI 10.1016/S0165-0114(96)00048-6
   DEMILLO RA, 1981, SOFTWARE PROJECT FOR
   Dubois D, 1980, Fuzzy sets and systems
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Grabisch M, 1996, EUR J OPER RES, V89, P445, DOI 10.1016/0377-2217(95)00176-X
   JIANG RH, 2000, THESIS NATL DEFENSE
   Jorgensen M, 1999, ADV ENG SOFTW, V30, P907, DOI 10.1016/S0965-9978(99)00015-0
   Jung HW, 1999, EUR J OPER RES, V112, P613, DOI 10.1016/S0377-2217(98)00169-6
   Klir GJ, 1987, FUZZY SETS UNCERTAIN
   Lebesgue Henri., 1966, Measure and the Integral
   LEE KM, 1995, FUZZY SET SYST, V75, P301, DOI 10.1016/0165-0114(94)00387-M
   MCCALL JA, 1994, ENCY SOFTWARE ENG, V2, P959
   MELTON A, 1995, SOFTWARE MEASUREMEN
   MUROFUSHI T, 1989, FUZZY SET SYST, V29, P201, DOI 10.1016/0165-0114(89)90194-2
   ONISAWA T, 1986, FUZZY SET SYST, V20, P259, DOI 10.1016/S0165-0114(86)90040-0
   PARASURAMAN A, 1994, J MARKETING, V58, P111, DOI 10.1177/002224299405800109
   Pedrycz W, 2001, NEUROCOMPUTING, V36, P149, DOI 10.1016/S0925-2312(00)00340-4
   PERNG C, 2000, J MANAGEMENT SYSTEMS, V7, P173
   RALESCU D, 1980, J MATH ANAL APPL, V75, P562, DOI 10.1016/0022-247X(80)90101-8
   SAATY TL, 1977, J MATH PSYCHOL, V15, P234, DOI 10.1016/0022-2496(77)90033-5
   TEAS RK, 1993, J MARKETING, V57, P18, DOI 10.2307/1252216
   Walker AJ, 1998, INFORM SOFTWARE TECH, V40, P865, DOI 10.1016/S0950-5849(98)00104-9
   WANG CH, 2003, THESIS NATL DONG HWA
   Wang W, 1998, J INTELL FUZZY SYST, V6, P171
   Wang ZY, 2000, FUZZY SET SYST, V112, P155, DOI 10.1016/S0165-0114(98)00304-2
   ZUSE H, 1994, ENCY SOFTWARE ENG, V1, P131
   1996, 90003 ISO
   1999, 145981 ISOIEC
   1991, 9126 ISO IEC
NR 34
TC 7
Z9 10
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2006
VL 48
IS 3
BP 187
EP 203
DI 10.1016/j.infsof.2005.04.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027SZ
UT WOS:000236437200005
DA 2024-07-18
ER

PT J
AU Bisbal, J
   Grimson, J
   Bell, D
AF Bisbal, J
   Grimson, J
   Bell, D
TI A formal framework for database sampling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE data cleaning; database sampling; integrity constraints; legacy systems;
   denotational semantics; undecidability
AB Database sampling is commonly used in applications like data mining and approximate query evaluation in order to achieve a compromise between the accuracy of the results and the computational cost of the process. The authors have recently proposed the use of database sampling in the context of populating a prototype database, that is, a database used to support the development of data-intensive applications. Existing methods for constructing prototype databases commonly populate the resulting database with synthetic data values. A more realistic approach is to sample a database so that the resulting sample satisfies a predefined set of integrity constraints. The resulting database, with domain-relevant data values and semantics, is expected to better support the software development process. This paper presents a formal study of database sampling. A Denotational Semantics description of database sampling is first discussed. Then the paper characterises the types of integrity constraints that must be considered during sampling. Lastly, the sampling strategy presented here is applied to improve the data quality of a (legacy) database. In this context, database sampling is used to incrementally identify the set of tuples which are the cause of inconsistencies in the database, and therefore should be the ones to be addressed by the data cleaning process. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Pompeu Fabra, Dept Technol, Barcelona 08003, Spain.
   Univ Dublin Trinity Coll, Dept Comp Sci, Dublin 2, Ireland.
   Queens Univ Belfast, Sch Comp Sci, Belfast, Antrim, North Ireland.
C3 Pompeu Fabra University; Trinity College Dublin; Queens University
   Belfast
RP Bisbal, J (corresponding author), Univ Pompeu Fabra, Dept Technol, Passeig Circumval Lacio 8, Barcelona 08003, Spain.
EM jesus.bisbal@upf.edu
OI Bisbal, Jesus/0000-0002-6748-5327
CR Abiteboul S, 1995, FDN DATABASES
   ALLISON L, 1986, INTRO DENOTATIONAL S
   AVISON D, 2003, INFORMATION SYSTEMS
   Bates C, 1996, DISTRIB PARALLEL DAT, V4, P5, DOI 10.1007/BF00122146
   Bisbal J, 2002, J SOFTW MAINT EVOL-R, V14, P447, DOI 10.1002/smr.263
   Bisbal J, 2001, INFORM SOFTWARE TECH, V43, P607, DOI 10.1016/S0950-5849(01)00165-3
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   BISBAL J, 1998, LECT NOTES COMPUTER, V1460, P196
   BISBAL J, 2000, P JOINT M 4 WORLD MU, P11
   BRUNO N, 2002, P INT C MAN DAT SIGM
   Date C.J., 1999, INTRO DATABASE SYSTE
   Ghezzi C., 1991, Fundamentals of Software Engineering
   Godfrey P, 1998, SPRING INT SER ENG C, P265
   GRAY J, 1994, P INT C MAN DAT SIGM
   HINDLEY RJ, 1986, INTRO COMBINATORS OM
   Kivinen J., 1994, Proceedings of the Thirteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1994, P77, DOI 10.1145/182591.182601
   Lewis H., 1998, Elements of the Theory of Computation
   LOHRRICHTER P, 1994, 9424 LEID U DEP COMP
   LUO G, 2002, P INT C MAN DAT SIGM
   MANNILA H, 1985, P 4 ACM SIGACT SIGMO, P245
   Neufeld A., 1993, P VLDB ENDOWMENT VLD, V2, P173
   NOBLE H, 1983, INFORM SYST, V8, P79, DOI 10.1016/0306-4379(83)90032-7
   Olken F., 1993, Random Sampling from Databases
   Stoy Joseph E., 1977, DENOTATIONAL SEMANTI
   TUCHERMAN L, 1990, INFORM SYST, V15, P187, DOI 10.1016/0306-4379(90)90034-M
   WANG RY, 1995, IEEE T KNOWL DATA EN, V7, P623, DOI 10.1109/69.404034
   WIDOM J, 1992, SIGMOD REC, V21, P4
   ZAMPERONI A, 1993, LECT NOTES COMPUTER, V823, P85
NR 28
TC 2
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2005
VL 47
IS 12
BP 819
EP 828
DI 10.1016/j.infsof.2005.02.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 958YB
UT WOS:000231483000005
DA 2024-07-18
ER

PT J
AU Kimour, MT
   Meslati, D
AF Kimour, MT
   Meslati, D
TI Deriving objects from use cases in real-time embedded systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE real-time embedded system; UML; use case; activity diagram; object model
AB In recent years, a number of use case-driven processes have emerged for the development of real-time embedded systems. In these processes, once requirements have been defined by use cases, the next step is usually to identify from that use cases, the central objects in the system and describing how they interact with one another. However, identifying objects/classes from the requirements is both a critical and hard task. This is mainly due to the lack of pragmatic technique that steers such a task. In this article, we present a systematic approach to identify objects from the use case model for the real-time embedded systems. After hierarchically decomposing the system into its parts, we first transform the use case structured-text style into an activity diagram, which may be reused in the next development activities. Second, we use the derived activity diagram for identifying objects. With the behavioural model, an object model can be viewed as a first cut at a design model, and is thus an essential input when the system is shaped in design and design implementation. (c) 2004 Elsevier B.V. All rights reserved.
C1 Univ Annaba, Dept Comp Sci, Annaba, Algeria.
C3 Universite Badji Mokhtar - Annaba
RP Univ Annaba, Dept Comp Sci, BP 12, Annaba, Algeria.
EM kimour@yahoo.com; djamel_meslati@yahoo.com
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   Awad Maher., 1996, Object-Oriented Technology for Real-Time Systems, A Practical Approach using OMT and Fusion
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   CHUNG TM, 1995, SIGPLAN NOTICES, V30, P41, DOI 10.1145/216633.216654
   Cockburn A., 2001, Writing effective use cases
   DOUGLASS BP, 2000, DEV REAL TIME APPL U
   FERNANDES JM, 2001, P 7 INT C OBJ OR INF, P319
   GLINZ M, 2001, P 13 INT C ADV INF S, P76
   HOUBERDON JL, 2003, P WORKSH MOD DRIV AR
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   KICZALES G, 1997, LNCS, V1241, P140
   KIMOUR MT, 2000, P 8 INT C REAL TIM S
   KIMOUR MT, 2003, P 2 ACS IEEE INT C C
   LIANG Y, 2003, INT J INFORMATION SO, V2, P163
   Liu D, 2003, CCECE 2003: CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING, VOLS 1-3, PROCEEDINGS, P831
   Manaf P., 2000, REV ETOL, V2, P3
   OSSHER H, 2001, COMMUN ACM, V10, P43
   Rosenberg D., 1999, AW OBJ TECHNOL S
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Selic B., 1998, Languages, Compilers, and Tools for Embedded Systems. ACM SIGPLAN Workshop LCTES'98. Proceedings, P250, DOI 10.1007/BFb0057795
   Selic B., 1994, REAL TIME OBJECT ORI
   Sommerville I, 2001, Software Engineering
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   WAHANO RS, 2002, P 1 INT C COGN INF C
   2004, ARTISAN SOFTWARE TOO
NR 25
TC 5
Z9 5
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2005
VL 47
IS 8
BP 533
EP 541
DI 10.1016/j.infsof.2004.10.003
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 921KR
UT WOS:000228763700003
DA 2024-07-18
ER

PT J
AU Cox, K
   Phalp, KT
   Bleistein, SJ
   Verner, JM
AF Cox, K
   Phalp, KT
   Bleistein, SJ
   Verner, JM
TI Deriving requirements from process models via the problem frames
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 9th International Workshop on Requirements Engineering
CY JUN 16-17, 2003
CL Velden, AUSTRIA
DE problem frames; process modelling; requirements engineering; e-business
   systems
AB Jackson's problem frames is an approach to describing a recurring software problem. It is presumed that some knowledge of the application domain and context has been gathered so that an appropriate problem frame can be determined. However, the identification of aspects of the problem, and its appropriate 'framing' is recognised as a difficult task. One way to describe a software problem context is through process modelling. Once contextual information has been elicited, and explicitly described, an understanding of what problems need to be solved should emerge. However, this use of process models to inform requirements is often rather ad hoc; the traceability from business process to software requirement is not always as straightforward as it ought to be. Hence, this paper proposes an approach for deriving and contextualising software requirements through use of the problem frames approach from business process models. We apply the approach on a live industrial e-business project in which we assess the relevance and usefulness of problem frames as a means of describing the requirements context. We found that the software problem did not always match easily with Jackson's five existing frames. Where no frame was identified, however, we found that Jackson's problem diagrams did couch the requirements in their right context, and thus application of the problem frames approach was useful. This implies a need for further work in adapting a problem frames approach to the context of e-business systems. (c) 2004 Elsevier B.V. All rights reserved.
C1 Univ New S Wales, Sch Engn & Comp Sci, Kensington, NSW 2033, Australia.
   Natl ICT Australia, Sydney, NSW, Australia.
   Bournemouth Univ, Empir Software Engn Res Grp, Poole BH12 5BB, Dorset, England.
C3 University of New South Wales Sydney; NICTA; Bournemouth University
RP Natl ICT Australia Ltd, Empir Software Engn Program, Level 1,Bay 15,Locomot Workshop,Australian Techno, Eveleigh, NSW 1430, Australia.
EM karl.cox@nicta.com.au; kphalp@bmth.ac.uk; steven.bleistein@nicta.com.au;
   june.verner@nicta.com.au
CR Abeysinghe G, 1997, INFORM SOFTWARE TECH, V39, P107, DOI 10.1016/S0950-5849(96)01126-3
   [Anonymous], BUSINESS MODELS GUID
   Bjorner D, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P263, DOI 10.1109/ICFEM.1997.630433
   BLEISTEIN S, 2004, LNCS            1108
   BLEISTEIN S, 2004, 10 INT WORKSH REQ EN
   BLEISTEIN S, 2004, 11 INT AS PAC SOFTW
   Bleistein S. J., 2004, "1st International Workshop on Advances and Applications of Problem Frames (IWAAPF 2004)" W4S Workshop - 26th International Software Engineering, P7, DOI 10.1049/ic:20040218
   Bleistein SJ, 2004, J RES PRACT INF TECH, V36, P259
   Bray I.K., 2002, INTRO REQUIREMENTS E
   BRAY IK, 2003, P 9 INT WORKSH REQ E, P121
   Britton C., 1993, Software system development: a gentle introduction
   Coad P., 1995, OBJECT MODELS STRATE
   COX K, 2002, THESIS BOURNEMOUTH U
   COX K, 2003, P 9 INT WORKSH REQ E, P113
   COX K, 2004, P 1 INT WORKSH APPL
   Davis A. M., 2002, Requirements Engineering, V7, P107, DOI 10.1007/s007660200007
   Denscombe M., 1998, GOOD RES GUIDE
   FOWLER M, 1996, ANAL PATTERNS
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARLAN D, PROBLEM TYPES PROBLE
   Hall JG, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ICRE.2002.1048516
   HENDERSON P, 1994, 3 INT C SOFTW PROC I, P181
   Jackson M., 2001, Problem Frames
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kamsties E., 1998, Requirements Engineering, V3, P84, DOI 10.1007/BF02919967
   Kovitz BenjaminL., 1999, PRACTICAL SOFTWARE R
   LIN L, 11 INT C REQ ENG RE0, P371
   Maiden NAM, 1998, INT J HUM-COMPUT ST, V49, P281, DOI 10.1006/ijhc.1998.0206
   Nelson M, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P306
   Ould MA., 1995, BUSINESS PROCESSES
   Phalp K., 2000, Empirical Software Engineering, V5, P215, DOI 10.1023/A:1026538531893
   Phalp KT, 1998, INFORM SOFTWARE TECH, V40, P731, DOI 10.1016/S0950-5849(98)00058-5
   PHALP KT, 2001, LNCS, P329
   RAPANOTTI L, 2004, IN PRESS 12 INT C RE
   REUBENSTEIN HB, 1991, IEEE T SOFTWARE ENG, V17, P226, DOI 10.1109/32.75413
   ROBERTSON S, 2003, REQUIREMENTS PATTERN
   SIKKEL K, 2000, 6 INT WORKSH REQ ENG
   Sutcliffe A, 1998, IEEE T SOFTWARE ENG, V24, P174, DOI 10.1109/32.667878
   TOMAYKO J, 2001, AD PROBL FRAM EXTR P
   WARBOYS B, 1999, BUSINESS INFORMATION
   WEILL P, 2002, MIS Q EXECUTIVE, V1
   Weill P., 2001, Place to space: moving to ebusiness models
NR 44
TC 23
Z9 23
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 31
PY 2005
VL 47
IS 5
BP 319
EP 337
DI 10.1016/j.infsof.2004.09.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 911VW
UT WOS:000228035400003
DA 2024-07-18
ER

PT J
AU Veryha, Y
AF Veryha, Y
TI Implementation of fuzzy classification in relational databases using
   conventional SQL querying
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information system; fuzzy classification; SQL query; relational
   database; data mining
AB In this paper, a framework for implementing fuzzy classifications in information systems using conventional SQL querying is presented. The fuzzy classification and use of conventional SQL queries provide easy-to-use functionality for data extraction similar to the conventional non-fuzzy classification and SQL querying. The developed framework can be used as data mining tool in large information systems and easily integrated with conventional relational databases. The benefits of using the presented approach include more flexible data analysis and improvement of information presentation at the report generation phase. To confirm the theory, a prototype was developed based on the stored procedures and database extensions of Microsoft SQL Server 2000. (c) 2004 Elsevier B.V. All rights reserved.
C1 ABB Corp Res, Integrated Solut, D-68526 Ladenburg, Germany.
C3 ABB
RP ABB Corp Res, Integrated Solut, Wallstadter Str 59, D-68526 Ladenburg, Germany.
EM yauheni.veryha@de.abb.com
CR Abdennadher S., 1998, Datalogiske Skrifter, P1
   [Anonymous], FUZZY DATENANALYSE D
   BELLMA M, 2000, STUDIES FUZZINESS SO, V39, P175
   Blanco I, 2000, STUD FUZZ SOFT COMP, V53, P183
   BORGODNA G, 2000, STUDIES FUZZINESS SO, V53, P209
   Bosc P, 2000, STUD FUZZ SOFT COMP, V39, P171
   Chen G., 1998, Fuzzy Logic in Data Modeling, Semantics, Constraints and Database Design
   Dubois D, 2000, STUD FUZZ SOFT COMP, V39, P105
   Han J., 2012, Data Mining, P393, DOI [DOI 10.1016/B978-0-12-381479-1.00009-5, 10.1016/B978-0-12-381479-1.00009-5]
   Kacprzyk J, 2000, STUD FUZZ SOFT COMP, V39, P211
   Kacprzyk J, 2000, STUD FUZZ SOFT COMP, V53, P67
   ZADROZNY S, 1998, P FLEX QUER ANSW SYS, P382
   Zedeh L. A., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P89, DOI 10.1109/69.43406
   Zimmermann H., 1992, Fuzzy set theory and its applications, V2nd
   ZIMMERMANN HJ, 1980, FUZZY SET SYST, V4, P37, DOI 10.1016/0165-0114(80)90062-7
NR 15
TC 2
Z9 2
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 31
PY 2005
VL 47
IS 5
BP 357
EP 364
DI 10.1016/j.infsof.2004.09.007
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 911VW
UT WOS:000228035400005
DA 2024-07-18
ER

PT J
AU Vessey, I
   Ramesh, V
   Glass, RL
AF Vessey, I
   Ramesh, V
   Glass, RL
TI A unified classification system for research in the computing
   disciplines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE classification system; computing; research method; research approach;
   reference discipline; unit of analysis
ID INFORMATION-SYSTEMS; DIVERSITY; SCIENCE; SCHEME
AB The field of computing is made up of several disciplines of which Computer Science, Software Engineering, and Information Systems are arguably three of the primary ones. Despite the fact that each discipline has a specific focus, there is also considerable overlap. Knowledge sharing, however, is becoming increasingly difficult as the body of knowledge in each discipline increases and specialization results. For effective knowledge sharing, it is therefore important to have a unified classification system by means of which the bodies of knowledge that constitute the field may be compared and contrasted. This paper presents a multi-faceted system based on five research-focused characteristics: topic, approach, method, unit of analysis, and reference discipline. The classification system was designed based on the requirements for effective classification systems, and was then used to investigate these five characteristics of research in the computing field. (C) 2004 Elsevier B.V. All rights reserved.
C1 Kelley Sch Business, Dept Accounting & Informat Syst, Bloomington, IN 47405 USA.
   Comp Trends, Bloomington, IN USA.
C3 Indiana University System; IU Kelley School of Business; Indiana
   University Bloomington
RP Vessey, I (corresponding author), Kelley Sch Business, Dept Accounting & Informat Syst, Bloomington, IN 47405 USA.
EM ivessey@indiana.edu
CR *ACM CCS, ACM COMP CLASS SYST
   ADRION WR, 1993, ACM SIGSOFT SOFT NOV
   Alavi M., 1992, Journal of Management Information Systems, V8, P45
   Bailey K.D., 1994, TYPOLOGIES TAXONOMIE, DOI DOI 10.4135/9781412986397
   BARKI H, 1993, MIS QUART, V17, P209, DOI 10.2307/249802
   BARKI H, 1988, MIS QUART, V12, P299, DOI 10.2307/248855
   Baskerville RL, 2002, MIS QUART, V26, P1, DOI 10.2307/4132338
   Benbasat I, 1996, INFORM SYST RES, V7, P389, DOI 10.1287/isre.7.4.389
   CULNAN MJ, 1986, MIS QUART, V10, P289, DOI 10.2307/249263
   FARHOOMAND AF, 2000, COMMUNICATION AIS, V1
   Ginzberg M. J., 1982, DATA BASE        FAL, P19
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   GLASS RL, 1992, J SYST SOFTWARE, V19, P277, DOI 10.1016/0164-1212(92)90056-P
   GLASS RL, 1995, J SYSTEMS SOFTWA JAN
   GROVER V, 1993, INFORM MANAGE, V24, P305, DOI 10.1016/0378-7206(93)90028-R
   Hamilton S., 1982, Information and Management, V5, P339, DOI 10.1016/0378-7206(82)90033-7
   Harris RichardL., 2000, CRIT PERSPECT, P1
   *IST, GUID AUTH
   Jenkins A.M., 1985, RES METHODS INFORM S, P103
   Kwon T., 1987, Unifying the Fragmented Models of Information Systems Implementation: Critical Issues in Information Systems Research
   Lai VS, 1997, INFORM MANAGE, V32, P187, DOI 10.1016/S0378-7206(97)00022-0
   MORRISON J, 1995, COMMUN ACM, V38, P80, DOI 10.1145/213859.214802
   Orlikowski WJ, 1991, INFORM SYST RES, V2, P1, DOI 10.1287/isre.2.1.1
   Ramesh V, 2004, J SYST SOFTWARE, V70, P165, DOI [10.1016/S0164-1212(03)00015-3, 10.1016/S0164-1212(03)00014-1]
   Robey D, 1996, INFORM SYST RES, V7, P400, DOI 10.1287/isre.7.4.400
   Swanson EB, 1993, INFORM SYST RES, V4, P299, DOI 10.1287/isre.4.4.299
   Vessey I, 2002, J MANAGE INFORM SYST, V19, P129, DOI 10.1080/07421222.2002.11045721
   Westin S., 1994, Information Resources Management Journal, V7, P24
   WHEATON GR, 1973, 7261268TR1 AM I RES
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   2001, IEEE TSE IEEE T SOFT
NR 32
TC 35
Z9 39
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2005
VL 47
IS 4
BP 245
EP 255
DI 10.1016/j.infsof.2004.08.006
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 899JS
UT WOS:000227141300003
DA 2024-07-18
ER

PT J
AU Svahnberg, M
AF Svahnberg, M
TI An industrial study on building consensus around software architectures
   and quality attributes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE architecture candidates; architecture tradeoff analysis method;
   framework for architecture structure
AB When creating an architecture for a software system it is important to consider many aspects and different sides of these aspects at an early stage, lest they are misunderstood and cause problems at later stages during development. In this paper, we report from an industry study to understand and select between different architecture candidates. The company uses a method that focuses discussions of architecture candidates to where there are disagreements between the participating domain experts. The results indicate that the used method pinpoints for the company where further investigations are necessary and that the decision concerning which architecture to use is taken with more confidence as a result of the focused discussions. (C) 2004 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Svahnberg, M (corresponding author), Blekinge Inst Technol, Sch Engn, POB 520, S-37225 Ronneby, Sweden.
EM mikael.svahnberg@bth.se
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Bass Len, 2012, SEI S SOFTW
   Bengtsson P, 2002, THESIS BLEKINGE I TE
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   *ISO, 2000, 9126 ISO
   JOHANSSON E, 2001, P HICSS 34 MAUI HAW
   Lindvall M, 2003, EMPIR SOFTW ENG, V8, P83, DOI 10.1023/A:1021772917036
   Morisio M., 2002, P 14 INT C SOFTW ENG, P811
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Saaty TL., 2001, INT SERIES OPERATION
   SVAHNBERG M, UNPUB INVESTIGATION
   SVAHNBERG M, 2002, LNCS, V2559
   Svahnberg M., 2002, Proceedings of the 14th international conference on Software engineering and knowledge engineering, P819
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 16
TC 11
Z9 11
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2004
VL 46
IS 12
BP 805
EP 818
DI 10.1016/j.infsof.2004.02.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840GZ
UT WOS:000222846600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Quah, TS
   Thwin, MMT
AF Quah, TS
   Thwin, MMT
TI Prediction of software development faults in PL/SQL files using neural
   network models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Structured Query Language metrics; software prediction; neural network;
   software metrics
ID FRAMEWORK
AB Database application constitutes one of the largest and most important software domains in the world. Some classes or modules in such applications are responsible for database operations. Structured Query Language (SQL) is used to communicate with database middleware in these classes or modules. It can be issued interactively or embedded in a host language. This paper aims to predict the software development faults in PL/SQL files using SQL metrics. Based on actual project defect data, the SQL metrics are empirically validated by analyzing their relationship with the probability of fault detection across PL/SQL files. SQL metrics were extracted from Oracle PL/SQL code of a warehouse management database application system. The faults were collected from the journal files that contain the documentation of all changes in source files. The result demonstrates that these measures may be useful in predicting the fault concerning with database accesses. In our study, General Regression Neural Network and Ward Neural Network are used to evaluate the capability of this set of SQL metrics in predicting the number of faults in database applications. (C) 2003 Elsevier B.V. All rights reserved.
C1 Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Nanyang Technol Univ, Sch Elect & Elect Engn, Nanyang Ave, Singapore 639798, Singapore.
EM itsquah@ntu.edu.sg
CR BOUKADOUM AM, 2001, INT C ART INT
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   ELEMAM K, 2001, P 7 INT SOFTW METR S, P185
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Etzkorn L, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P71, DOI 10.1109/TOOLS.2000.868960
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fioravanti F, 2001, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSM.2001.972771
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   FRENUND JE, 1993, ELEMENTARY BUSINESS
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Khoshgoftaar TM, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P57, DOI 10.1109/ASSET.2000.888032
   Quah JT, 2002, P 1 INT C INF TECHN
   RAMARKRISHNAN G, 2003, DATABASE MANAGEMENT
   REIBING R, 2001, P 5 INT ECOOP WORKSH, P71
   SPECHT DF, 1991, IEEE T NEURAL NETWOR, V2, P568, DOI 10.1109/72.97934
   Thwin MMT, 2002, ICONIP'02: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON NEURAL INFORMATION PROCESSING, P2312
   *WARD SYST GROUP I, NEUROSHELL 2 HELP
NR 21
TC 17
Z9 19
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2004
VL 46
IS 8
BP 519
EP 523
DI 10.1016/j.infsof.2003.08.006
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 814JJ
UT WOS:000220970700002
DA 2024-07-18
ER

PT J
AU Paradkar, A
AF Paradkar, A
TI Towards model-based generation of self-priming and self-checking
   conformance tests for interactive systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FL
SP ACM
DE model-based test generation; software test oracles; software fault
   models
AB This paper describes a model-based approach to generate conformance tests for interactive applications. Our method addresses generation of: (1) small yet effective set of test frames for testing individual operations, (2) a Set up sequence that brings the system under test in an appropriate state for a test frame (self-priming), (3) a Verification sequence for expected output and state changes (self-checking), and, (4) negative test cases in the presence of exceptions. Our method exploits a novel mutation scheme applied to operations modeled as relationships among parameters and state variables; a set of novel abstraction techniques which result in a compact finite state automaton; and search techniques to automatically generate the set up and verification sequences. We illustrate our method with a simple ATM application. (C) 2003 Elsevier B.V. All rights reserved.
C1 IBM Corp, TJ Watson Res Ctr, Ctr Software Engn, Hawthorne, NY 10532 USA.
C3 International Business Machines (IBM)
RP Paradkar, A (corresponding author), IBM Corp, TJ Watson Res Ctr, Ctr Software Engn, Hawthorne, NY 10532 USA.
EM paradkar@us.ibm.com
CR [Anonymous], THESIS FLORIDA I TEC
   BESSE C, 1999, P 14 IEEE INT C AUT, P73
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Farchi E, 2002, IBM SYST J, V41, P89, DOI 10.1147/sj.411.0089
   Fröhlich P, 2000, LECT NOTES COMPUT SC, V1850, P472
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   Hierons R. M., 1997, Software Testing, Verification and Reliability, V7, P19, DOI 10.1002/(SICI)1099-1689(199703)7:1<19::AID-STVR124>3.0.CO;2-N
   Howe AE, 1997, KNOWLEDGE-BASED SOFTWARE ENGINEERING, P77, DOI 10.1023/A:1008607721339
   Larsen P., 1993, LNCS, V670, P268
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Memon A. M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P257, DOI 10.1109/ICSE.1999.841016
   Paradkar A, 1996, IEEE T RELIAB, V45, P515, DOI 10.1109/24.556575
   Paradkar A, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P304, DOI 10.1109/ISSRE.2000.885881
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
NR 14
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 315
EP 322
DI 10.1016/j.infsof.2003.09.005
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 778FU
UT WOS:000189229500007
DA 2024-07-18
ER

PT J
AU Probert, RL
   Chen, YP
   Ghazizadeh, B
   Sims, DP
   Cappa, M
AF Probert, RL
   Chen, YP
   Ghazizadeh, B
   Sims, DP
   Cappa, M
TI Formal verification and validation for e-commerce: theory and best
   practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
AB In this paper, we describe a formal, model-driven, CORBA-based approach to developing and testing e-commerce systems. We indicate advantages and limitations of formal verification techniques using the Specification and Description Language (SDL), and relate the CORBA-based distributed object architecture to standard test methods and TTCN, the international standard test language. Finally, we enumerate industrial challenges and best practices at one of the electronic commerce software test organizations in IBM, and suggest a strategy for adapting formal test methods to the evolving industrial e-commerce test process. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Ottawa, IBM, Ctr Adv Studies, Ottawa, ON K1N 6N5, Canada.
   Univ Ottawa, SITE, Ottawa, ON K1N 6N5, Canada.
   IBM Corp, Toronto Software Lab, Elect Commerce Dev, Markham, ON L6G 1C7, Canada.
C3 University of Ottawa; University of Ottawa; International Business
   Machines (IBM)
RP Univ Ottawa, IBM, Ctr Adv Studies, 800 King Edward, Ottawa, ON K1N 6N5, Canada.
EM bob@site.uottawa.ca
CR *ISO, 1992, OSI C TEST METH FR 3
   Kan SH, 2001, IBM SYST J, V40, P220, DOI 10.1147/sj.401.0220
   LAI R, 1996, P IWTCS 96 DARMST GE, P3
   Mansurov NN, 2001, COMPUT NETW, V35, P667, DOI 10.1016/S1389-1286(00)00200-0
   Mansurov NN, 2001, IEEE COMMUN MAG, V39, P94, DOI 10.1109/35.956120
   Mednonogov A, 2000, INT FED INFO PROC, V48, P193
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   PAULSON LD, 2001, ADAPTING METHODOLOGI, V3, P13
   PROBERT RL, 2000, P QUAL WEEK EUR 2000, P388
   2001, IBM CUSTOMER PRESENT
NR 10
TC 6
Z9 6
U1 1
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 15
PY 2003
VL 45
IS 11
BP 763
EP 777
DI 10.1016/S0950-5849(03)00071-5
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 720DG
UT WOS:000185245800006
DA 2024-07-18
ER

PT J
AU Wang, D
   Galster, M
   Morales-Trujillo, M
AF Wang, Di
   Galster, Matthias
   Morales-Trujillo, Miguel
TI A systematic mapping study of bug reproduction and localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug reproduction; Bug localization; Bug fixing; Mapping study
ID SOFTWARE FAULT LOCALIZATION; SPECTRUM
AB Context: Identifying the root cause of a software bug and fixing it is challenging. One reason for this is that many bugs are not reproducible during bug fixing.Objective: We aim to provide an overview of existing works on bug reproduction and localization. We ask four research questions: RQ1: What types of problems have been studied in the area of bug reproduction and localization? RQ2: How are problems studied in previous research? RQ3: What are the main findings and outcomes of previous studies? RQ4: What are the gaps and challenges identified in previous studies?Method: We conducted a systematic mapping study analyzing research literature published between 2011 and 2021. The search for primary studies involved four major computer science digital libraries and resulted in 134 studies for analysis.Results: Regarding RQ1 we found that many studies focus on information retrieval-based approaches to support bug reproduction and localization. Regarding RQ2 we found that bug reports and source code are the typical data sources of bug reproduction and localization. Also, most studies include experiments with historical data but do not investigate ongoing projects. Regarding RQ3 we found that many studies adapt or combine existing approaches for bug reproduction and localization to improve their accuracy or applicability (e.g., combine requirements-related information and bug reports to increase information-retrieval-based techniques). Regarding RQ4 we found that existing solutions for bug reproduction and localization have rarely been integrated into the workflow of developers.Conclusion: Although bug reproduction and localization have been studied in quite some detail, new challenges and gaps emerge due to the evolution of software technologies and practices and the practical needs of software developers. For example, bug reproduction approaches for traditional web applications do not work well with modern "Single Page Web Applications"(SPA) and related technologies, e.g., Angular or React.
C1 [Wang, Di; Galster, Matthias; Morales-Trujillo, Miguel] Univ Canterbury, Christchurch, New Zealand.
C3 University of Canterbury
RP Wang, D (corresponding author), Univ Canterbury, Christchurch, New Zealand.
EM di.wang@pg.canterbury.ac.nz; matthias.galster@canterbury.ac.nz;
   miguel.morales@canterbury.ac.nz
CR Abreu R, 2011, J SYST SOFTWARE, V84, P573, DOI 10.1016/j.jss.2010.11.915
   Agarwal P., 2014, Fault-localization techniques for software systems: A literature review, P39, DOI [10.1145/2659118.2659125, DOI 10.1145/2659118.2659125]
   Almhana R, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106474
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), DOI DOI 10.1145/2025113.2025136
   [Anonymous], 2010, Eval. Usability Program, DOI DOI 10.1145/1937117.1937125
   Arcega L, 2019, SOFTW SYST MODEL, V18, P3551, DOI 10.1007/s10270-019-00727-y
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Asadollah S.A., 2016, P 1 INT WORKSH SPEC, DOI [10.1145/2975954.2975958, DOI 10.1145/2975954.2975958]
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bangcharoensap P., 2012, 2012 Fourth International Workshop on Empirical Software Engineering in Practice (IWESEP 2012), P10, DOI 10.1109/IWESEP.2012.14
   Budgen D., 2008, Using Mapping Studies in Software Engineering, V8, P195
   Campos EC, 2017, INT SYMP EMP SOFTWAR, P404, DOI 10.1109/ESEM.2017.55
   Campos J, 2013, IEEE INT CONF AUTOM, P257, DOI 10.1109/ASE.2013.6693085
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chen C, 2016, PROCEEDINGS OF 2016 5TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND NETWORK TECHNOLOGY (ICCSNT), P136, DOI 10.1109/ICCSNT.2016.8070135
   Chen R., 2016, 2016 IEEE INT C SOFT, DOI [10.1109/qrsc.2016.85, DOI 10.1109/QRSC.2016.85]
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cui ZQ, 2020, IEEE ACCESS, V8, P172296, DOI 10.1109/ACCESS.2020.3025460
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Daniel P, 2013, IEEE CONF OPEN SYST, P162, DOI 10.1109/ICOS.2013.6735067
   Davies S., 2011, 2011 18 WORK C REV E, DOI [10.1109/wcre.2011.32, DOI 10.1109/WCRE.2011.32]
   Debroy V., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P506, DOI 10.1109/COMPSACW.2011.92
   DeMott JD, 2013, COMPUT SECUR, V32, P130, DOI 10.1016/j.cose.2012.09.015
   Dhaliwal T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P333, DOI 10.1109/ICSM.2011.6080800
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Diebold P., 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601254
   DiGiuseppe N., 2011, P 20 INT S SOFTW TES, P210, DOI DOI 10.1145/2001420.2001446
   Dilshener T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P286, DOI [10.1109/MSR.2016.037, 10.1145/2901739.2901775]
   Dimitrov M., 2011, 2011 IEEE INT PAR DI, DOI [10.1109/ipdps.2011.38, DOI 10.1109/IPDPS.2011.38]
   Dutta A, 2020, IEEE T RELIAB, V69, P1267, DOI 10.1109/TR.2019.2956120
   Florez JM, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P166, DOI 10.1109/SANER50967.2021.00024
   Gao RZ, 2019, IEEE T SOFTWARE ENG, V45, P301, DOI 10.1109/TSE.2017.2776912
   Garnier Marcelo, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0040-2
   Garnier M, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P123, DOI 10.1145/2973839.2973853
   Ghandehari LS, 2020, IEEE T SOFTWARE ENG, V46, P616, DOI 10.1109/TSE.2018.2865935
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gonzalez-Sanchez A., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1398, DOI DOI 10.1145/1982185.1982489
   Gopinath R, 2014, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2014.40
   Gouveia C., 2013, 1st Working Conference on Software Visualization, VISSOFT, P1, DOI DOI 10.1109/VISSOFT.2013.6650539
   Grunert I., 2011, P 13 ANN C GEN EV CO, DOI [10.1145/2001576.2001768, DOI 10.1145/2001576.2001768]
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Gupta N, 2022, J KING SAUD UNIV-COM, V34, P2897, DOI 10.1016/j.jksuci.2020.01.009
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   Heorhiadi V, 2016, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS.2016.11
   Herbold S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P232, DOI 10.1109/ICSTW.2011.66
   Hofer B., 2012, SIGSOFT Softw. Eng. Not., V37, P1, DOI [10.1145/2382756.2382784, DOI 10.1145/2382756.2382784]
   Hong S, 2015, IEEE INT CONF AUTOM, P464, DOI 10.1109/ASE.2015.14
   Huang LZ, 2015, J SYST ENG ELECTRON, V26, P1325, DOI 10.1109/JSEE.2015.00145
   Huang YQ, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P138, DOI 10.1109/ISSREW.2013.6688893
   Huo X, 2021, IEEE T SOFTWARE ENG, V47, P1368, DOI 10.1109/TSE.2019.2920771
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jonsson L, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P425, DOI 10.1109/QRS.2016.54
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   Just R, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P287, DOI 10.1145/3213846.3213870
   Kampmann A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1228, DOI 10.1145/3368089.3409687
   Kasikci B, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P344, DOI 10.1145/2815400.2815412
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim J, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN 2014), P346, DOI 10.1109/ICOIN.2014.6799702
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Lal S., 2012, P 5 IND SOFTW ENG C, DOI [10.1145/2134254.2134274, DOI 10.1145/2134254.2134274]
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Leitao PS Jr, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106295
   Li H., 2014, P INT WORKSH INN SOF, P40, DOI [10.1145/2666581.2666593, DOI 10.1145/2666581.2666593]
   Li Z, 2020, P INT COMP SOFTW APP, P991, DOI 10.1109/COMPSAC48688.2020.0-142
   Li Z, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110661
   Liang HL, 2019, IEEE ACCESS, V7, P116309, DOI 10.1109/ACCESS.2019.2936948
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Barros-Justo JL, 2016, Arxiv, DOI arXiv:1609.06553
   Mahajan SG, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON EMERGING INFORMATION TECHNOLOGY AND ENGINEERING SOLUTIONS (EITES 2015), P1, DOI 10.1109/EITES.2015.11
   Mao C., 2011, 2011 IEEE 8 INT C E, DOI [10.1109/icebe.2011.43, DOI 10.1109/ICEBE.2011.43]
   Mao CY, 2011, IEEE INT CONF TRUST, P1550, DOI 10.1109/TrustCom.2011.215
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Miryeganeh N, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110961
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Musco V, 2016, IEEE INT WORK C SO, P97, DOI 10.1109/SCAM.2016.24
   N.S. Foundation, 2012, The software-artifact infrastructure repository
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Ogawa H, 2013, ASIA PAC SOFWR ENG, P134, DOI 10.1109/APSEC.2013.128
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Papadakis M, 2013, IEEE INT WORK C SO, P94, DOI 10.1109/SCAM.2013.6648189
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Ralph P., 2021, ACM SIGSOFT Software Engineering Notes, V46, P19, DOI DOI 10.1145/3437479.3437483
   Rath M, 2018, IEEE WORK CONF MIN S, P442, DOI 10.1145/3196398.3196415
   Ray P.P., 2011, IEEE TECHN STUD S, DOI [10.1109/techsym.2011.5783857, DOI 10.1109/TECHSYM.2011.5783857]
   Ribeiro HL, 2018, IEEE INT CONF SOFTW, P404, DOI 10.1109/ICST.2018.00048
   Roehm T, 2013, CONF PROC INT SYMP C, P73, DOI 10.1109/ICPC.2013.6613835
   Roychowdhury S., 2012, 2012 6 IEEE INT C IN, DOI [10.1109/is.2012.6335163, DOI 10.1109/IS.2012.6335163]
   Runeson P, 2012, Case Study Research in Software Engineering: Guidelines and Examples, V1
   Saha RK, 2014, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSME.2014.38
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sahoo SK, 2013, ACM SIGPLAN NOTICES, V48, P139, DOI 10.1145/2499368.2451131
   Samimi H, 2012, PROC INT CONF SOFTW, P277, DOI 10.1109/ICSE.2012.6227186
   Sasaki T., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P251, DOI 10.1109/IWSM-MENSURA.2011.53
   Shin Yoo, 2017, ACM Transactions on Software Engineering and Methodology, V26, DOI 10.1145/3078840
   Shull F., 2008, Guide to Advanced Empirical Software Engineering, DOI DOI 10.1007/978-1-84800-044-5
   Siegmund B, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P269, DOI 10.1109/ISSREW.2014.36
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Swe KEE, 2019, INT C INTELL COMP CO, P241, DOI [10.1109/iccp48234.2019.8959535, 10.1109/ICCP48234.2019.8959535]
   Szatmári A, 2020, VST '20: PROCEEDINGS OF THE 2020 IEEE 3RD INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS, AND EVOLUTION OF SOFTWARE TESTS, P16, DOI [10.1109/vst50071.2020.9051638, 10.1109/VST50071.2020.9051638]
   Takahashi A, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110986
   Tang C. M., 2016, 2016 IEEE International Conference on Software Quality, Reliability and Security (QRS). Proceedings, P412, DOI 10.1109/QRS.2016.53
   Tantithamthavorn C, 2013, 2013 14TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD 2013), P543, DOI 10.1109/SNPD.2013.92
   Tatsi K., 2017, P 27 ANN INT C COMP, P56
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Thung F, 2013, WORK CONF REVERSE EN, P92, DOI 10.1109/WCRE.2013.6671284
   Vancsics B, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P308, DOI [10.1109/SANER48275.2020.9054803, 10.1109/saner48275.2020.9054803]
   Wang N, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON COMPLEX FAULTS AND FAILURES IN LARGE SOFTWARE SYSTEMS (COUFLESS), P1, DOI 10.1109/COUFLESS.2015.8
   Wang S., 2011, 2011 18 WORK C REV E, DOI [10.1109/wcre.2011.72, DOI 10.1109/WCRE.2011.72]
   Wang SH, 2013, IEEE WORK CONF MIN S, P247, DOI 10.1109/MSR.2013.6624036
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   White M, 2015, INT C PROGRAM COMPRE, P48, DOI 10.1109/ICPC.2015.14
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xiaoyuan Xie, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P1, DOI 10.1109/QSIC.2011.20
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yang B, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P168, DOI 10.1109/QRS51102.2020.00033
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   You YS, 2013, P INT COMP SOFTW APP, P180, DOI 10.1109/COMPSAC.2013.32
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Yousefi A, 2013, IEEE ICST WORKSHOP, P86, DOI 10.1109/ICSTW.2013.17
   Yu RW, 2011, IEEE INT CONF TRUST, P695, DOI 10.1109/TrustCom.2011.89
   Yu TT, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P694, DOI 10.1145/3106237.3106266
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan W, 2020, ASIA PAC SOFWR ENG, P61, DOI 10.1109/APSEC51365.2020.00014
   Zakari A, 2019, IET SOFTW, V13, P60, DOI 10.1049/iet-sen.2018.5137
   Zayour I, 2018, 2018 INTERNATIONAL CONFERENCE ON COMPUTER AND APPLICATIONS (ICCA), P383, DOI 10.1109/COMAPP.2018.8460381
   Zhang JL, 2020, INT C PROGRAM COMPRE, P219, DOI 10.1145/3387904.3389281
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhang XF, 2017, ASIA PAC SOFWR ENG, P328, DOI 10.1109/APSEC.2017.39
   Zhang ZY, 2012, COMPUTER, V45, P64, DOI 10.1109/MC.2012.185
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/saner.2019.8668002, 10.1109/SANER.2019.8668002]
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 167
TC 0
Z9 0
U1 5
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107338
DI 10.1016/j.infsof.2023.107338
EA OCT 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X9KF0
UT WOS:001101550100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mich, L
   Sakhnini, V
   Berry, D
AF Mich, Luisa
   Sakhnini, Victoria
   Berry, Daniel
TI To group or not to group? Group sizes for requirements elicitation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Group work; Individual work; Requirements elicitation; Requirements idea
   generation; Requirements engineering; Software engineering
ID STATE
AB Context: Requirement elicitation can be done by individuals or by groups. Computer-based system development life-cycle models suggest having people working together for many steps. Also, recommendations about analysis and design methods indicate that some processes could take advantage of group work. In requirements engi-neering, groups are suggested for requirements elicitation.Objectives: From the software and the requirements engineering viewpoints, and in turn for companies, a relevant overall research question is "What is a suitable size for a requirements elicitation group?" Our goal was to answer this question, first by looking for available guidelines in textbooks and secondly by investigating requirements elicitation in companies.Method: To address the research question, we conducted two studies. The first was a review of most widely adopted software and requirements engineering textbooks. The second was a study aimed at identifying factors affecting group size for requirements elicitation, based on an online questionnaire submitted to professional analysts.Results: The review of the textbooks showed that very few give advice on the number of analysts to involve in requirements elicitation sessions. When they do, guidelines are quite general and not supported by empirical data. According to data gathered from the questionnaire, most companies use and suggest using small groups. Data also allowed identifying four categories of factors useful to make decisions about requirements elicitation group sizes: people, relation, project, and output.Conclusion: Both the textbook review and the data from the questionnaire say that it is better to aim for small groups than to have individual analysts working separately. The ideal number of analysts for a requirements elicitation session appears to be 2, but large groups are necessary in some cases. Factors in all the four categories have to be considered in deciding the size of groups.
C1 [Mich, Luisa] Univ Trento, Dept Ind Engn, I-38123 Trento, Italy.
   [Sakhnini, Victoria; Berry, Daniel] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Trento; University of Waterloo
RP Mich, L (corresponding author), Univ Trento, Dept Ind Engn, I-38123 Trento, Italy.
EM luisa.mich@unitn.it
RI Mich, Luisa/J-2111-2012
OI Mich, Luisa/0000-0002-0018-6883
FU Canadian NSERC Grant [NSERCRGPIN227055-15]; Department of Industrial
   Engineering, University of Trento
FX Thanks to the reviewers of a previous version of the paper submitted for
   a special issue. Thanks to Pietro Marzani for helping to prepare the
   figures and to run the multiple cross tabulations. Daniel Berry's and
   Luisa Mich's work was supported in part by Canadian NSERC Grant
   NSERCRGPIN227055-15. Luisa Mich's work was also supported by the
   Department of Industrial Engineering, University of Trento.
CR Agile Alliance, 2001, US
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 1990, ARE YOUR LIGHTS FIGU
   Aurum A, 1998, P 3 AUSTR C REQ ENG, P29
   Berry DM, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P447, DOI 10.1109/RE.2005.74
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Bray I.K., 2002, INTRO REQUIREMENTS E
   Brooks Frederick P., 1995, The mythical man-month
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Costa A, 2020, IEEE ACCESS, V8, P145687, DOI 10.1109/ACCESS.2020.3015017
   Davidson EJ, 1999, J SYST SOFTWARE, V45, P215, DOI 10.1016/S0164-1212(98)10080-8
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   DeFranco JF, 2018, TEAM PERFORM MANAG, V24, P203, DOI 10.1108/TPM-08-2017-0040
   DeMarco T., 2013, Peopleware: productive projects and teams
   Forsyth D. R., 2018, Groupdynamics, V7th, DOI DOI 10.1057/PALGRAVE.JORS.2602169
   Gause D.C., 1989, EXPLORING REQUIREMEN
   GLASS R, 1995, SOFTWARE CREATIVITY
   Glass R.L., 2006, SOFTWARE CREATIVITY
   Goguen J., 1994, REQUIREMENTS ENG SOC, P165
   Higgins J.M., 1994, 101 Creative Problem Solving Techniques: The Handbook of New Ideas for Business
   Hillier F., 2014, Introduction to operations research, V10
   Kassab M, 2014, INNOV SYST SOFTW ENG, V10, P235, DOI 10.1007/s11334-014-0232-4
   Koksalan M., 2011, Multiple Criteria Decision Making: From Early History to the 21st Century, DOI DOI 10.1142/8042
   Kollanus S., 2009, Open Softw Eng J, V3, P15, DOI [10.2174/1874107X00903010015, DOI 10.2174/1874107X00903010015]
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Laitenberger O., 2004, EMPIR SOFTW ENG, V7, P345
   Mahaux M, 2014, IEEE INT WORKS EMPIR, P48, DOI 10.1109/EmpiRE.2014.6890116
   Marinelli V., 2008, THESIS PENN STATE U
   Mich L., 1993, Fuzzy Logic in Artificial Intelligence. 8th Austrian Artificial Intelligence Conference, FLAI '93 Proceedings, P91
   Mich L., 2021, RAW DATA 92 RESPONSE
   Mich L, 2010, P WORKSH CREAT REQ E
   Mich L., 2023, GROUP NOT GROUP GROU, DOI [10.5281/zenodo.7617526, DOI 10.5281/ZENODO.7617526]
   Mich L., 2015, REQUIREMENTS ENG MAG, V2015
   Miles M.B., 2002, QUALITATIVE RES COMP
   Mills H.D., 1988, P SEI C SOFTW ENG ED, P9
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Osborn A.F., 1953, APPL IMAGINATION
   Osborn A.F., 1948, Your creative power
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   QSM-Quantitative Software Management, 2005, TEAM SIZ CAN BE KEY
   Quan-Haase A., 2017, SAGE HDB SOCIAL MEDI, P1, DOI DOI 10.4135/9781473983847.N1
   Robertson S, 2001, INT J HUM-COMPUT ST, V55, P405, DOI 10.1006/ijhc.2001.0481
   Rodríguez D, 2012, J SYST SOFTWARE, V85, P562, DOI 10.1016/j.jss.2011.09.009
   Saha SK, 2012, 2012 INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION (ICIEV), P34, DOI 10.1109/ICIEV.2012.6317443
   Sakhnini V, 2013, P WORKSH CREAT REQ E, P23
   Sakhnini V, 2017, EMPIR SOFTW ENG, V22, P2001, DOI 10.1007/s10664-016-9475-z
   San Cristobal Mateo J.R., 2016, MANAGEMENT SCI OPERA
   Schermerhorn RA, 1948, SOC FORCES, V27, P167, DOI 10.2307/2572316
   Scrum Guides, 2020, 2020 SCRUM GUID
   Sudhakar GP, 2012, SERB J MANAG, V7, P65, DOI 10.5937/sjm1201065S
   Thierauf R.J., 1970, DECISION MAKING OPER
   Tran VT, 2017, J CLIN EPIDEMIOL, V82, P71, DOI 10.1016/j.jclinepi.2016.10.001
   Von Bertalanffy L, 1968, General system theory: Foundations, development, applications
   Watzlawick P., 1967, Pragmatics of Human Communication: A Study of Interactional Patterns, Pathologies and Paradoxes
   Weller SC, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0198606
   Wood J., 1999, JOINT APPL DEV
   Yalom I. D., 2020, THEORY PRACTICE GROU
NR 58
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107229
DI 10.1016/j.infsof.2023.107229
EA APR 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G7BW4
UT WOS:000990679000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Jia, HT
   Yang, WH
   Shen, CC
   Pan, MX
   Zhou, Y
AF Jia, Haitao
   Yang, Wenhua
   Shen, Chaochao
   Pan, Minxue
   Zhou, Yu
TI Git command recommendations using crowd-sourced knowledge
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Git command; Recommendations; Stack overflow
ID WORD
AB Context: Git is a fast, scalable, distributed version control system with a rich command set that provides high-level operations and full access to the internals. It has been widely used by millions of developers worldwide. However, due to the flexibility of the usage of Git commands and the scarcity of Git documentation, many developers have experienced difficulties when using Git commands. Objective: This paper aims to propose an automatic approach to recommending Git commands for developers given a query described by natural language.Method: Our approach makes recommendations by mining the crowd-sourced knowledge related to Git on Stack Overflow. It first constructs a keyword-command mapping database from Git-related posts, then analyzes the similarity between the query given by the developer and the keywords in the database to retrieve the candidate commands, and proposes an algorithm to rank the candidate commands.Results: Our approach's recommendation results significantly outperform the baseline approaches in several metrics (e.g., Top-K accuracy). Meanwhile, the experimental results have shown that the favorable efficiency of our approach can promise its use by developers in real-world scenarios.Conclusion: The Git command recommendation approach proposed in this paper is effective and can be helpful for developers to use Git commands for more efficient development.
C1 [Jia, Haitao; Yang, Wenhua; Shen, Chaochao; Zhou, Yu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Yang, Wenhua; Pan, Minxue; Zhou, Yu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University
RP Yang, WH (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
EM sz2116123@nuaa.edu.cn; ywh@nuaa.edu.cn; ccshen@nuaa.edu.cn;
   mxp@nju.edu.cn; zhouyu@nuaa.edu.cn
RI Pan, Minxue/AIC-5169-2022
FU National Natural Science Foundation of China [61972197, 61972193]
FX Acknowledgments This work was supported in part by the National Natural
   Science Foundation of China (Nos. 61972197, 61972193) .
CR Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bennett S., 2012, 10 THINGS I HATE GIT
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Buse Raymond P. L., 2010, P 25 IEEE ACM INT C, P33, DOI DOI 10.1145/1858996.1859005
   Chacon S., 2014, Pro Git
   Chowdhary K.R., 2020, FUNDAMENTALS ARTIFIC, P603
   De Rosso SP, 2016, ACM SIGPLAN NOTICES, V51, P292, DOI 10.1145/3022671.2984018
   De Rosso SantiagoPerez., 2013, Onward! '13, P37, DOI DOI 10.1145/2509578.2509584
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Nguyen HL, 2018, COMPUT SUPP COOP W J, V27, P741, DOI 10.1007/s10606-018-9323-3
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Lee WK, 2021, IET SOFTW, V15, P308, DOI 10.1049/sfw2.12023
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu S., 2020, IEEE Transactions on Software Engineering
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Navigli R, 2019, NAT LANG ENG, V25, P693, DOI 10.1017/S1351324919000305
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   NLTK Project, 2022, NATURAL LANGUAGE TOO
   Python Software Foundation, 2022, MIN DOM IMPL
   Quora, 2016, WHY IS GIT DOC SO PO
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sridhara G, 2008, INT C PROGRAM COMPRE, P123, DOI 10.1109/ICPC.2008.18
   Stack Exchange Inc, 2022, STACK EXCH DUMP
   Stack Overflow, 2014, STACK EXCH DUMP
   Stack Overflow, 2012, RES DEL MOD CONFL CA
   Stack Overflow, 2013, DO I INST IM HOM
   Stack Overflow, 2009, STACK EXCH DUMP
   Sulistyo Nugroho Y., 2019, ARXIV
   Sun SL, 2017, INFORM FUSION, V36, P10, DOI 10.1016/j.inffus.2016.10.004
   Tang YM, 2022, PROC IEEE ACM INT C, P21, DOI [10.1109/ICSE-Companion55297.2022.9793736, 10.1145/3510454.3516838]
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Xu CY, 2018, J SYST SOFTWARE, V142, P195, DOI 10.1016/j.jss.2018.04.060
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Yang WH, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3494518
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang JX, 2021, IEEE T SOFTWARE ENG, V47, P1299, DOI 10.1109/TSE.2019.2919304
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 51
TC 0
Z9 0
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107199
DI 10.1016/j.infsof.2023.107199
EA MAR 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A5BR4
UT WOS:000955279700001
DA 2024-07-18
ER

PT J
AU Ahmad, K
   Abdelrazek, M
   Arora, C
   Bano, M
   Grundy, J
AF Ahmad, Khlood
   Abdelrazek, Mohamed
   Arora, Chetan
   Bano, Muneera
   Grundy, John
TI Requirements engineering for artificial intelligence systems: A
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Software engineering; Artificial intelligence;
   Machine learning; Systematic mapping study
ID CAUSAL DIAGRAMS; MACHINE
AB Context: In traditional software systems, Requirements Engineering (RE) activities are well-established and researched. However, building Artificial Intelligence (AI) based software with limited or no insight into the system's inner workings poses significant new challenges to RE. Existing literature has focused on using AI to manage RE activities, with limited research on RE for AI (RE4AI). Objective: This paper investigates current approaches for specifying requirements for AI systems, identifies available frameworks, methodologies, tools, and techniques used to model requirements, and finds existing challenges and limitations. Method: We performed a systematic mapping study to find papers on current RE4AI approaches. We identified 43 primary studies and analyzed the existing methodologies, models, tools, and techniques used to specify and model requirements in real-world scenarios. Results: We found several challenges and limitations of existing RE4AI practices. The findings highlighted that current RE applications were not adequately adaptable for building AI systems and emphasized the need to provide new techniques and tools to support RE4AI. Conclusion: Our results showed that most of the empirical studies on RE4AI focused on autonomous, self-driving vehicles and managing data requirements, and areas such as ethics, trust, and explainability need further research.
C1 [Ahmad, Khlood; Abdelrazek, Mohamed] Deakin Univ, Geelong, Vic, Australia.
   [Arora, Chetan; Grundy, John] Monash Univ, Clayton, Vic, Australia.
   [Bano, Muneera] CSIROs Data61, Clayton, Vic, Australia.
C3 Deakin University; Monash University; Commonwealth Scientific &
   Industrial Research Organisation (CSIRO)
RP Ahmad, K (corresponding author), Deakin Univ, Geelong, Vic, Australia.
EM ahmadkhl@deakin.edu.au; mohamed.abdelrazek@deakin.edu.au;
   chetan.arora@monash.edu; muneera.bano@csiro.au; john.grundy@monash.edu
RI Grundy, John/AAF-1716-2019; Bano, Muneera/AAP-7064-2021
OI Grundy, John/0000-0003-4928-7076; Bano, Muneera/0000-0002-1447-9521;
   Abdelrazek, Mohamed/0000-0003-3812-9785; Arora,
   Chetan/0000-0003-1466-7386; AHMAD, KHLOOD/0000-0002-7148-380X
FU ARC Laureate Fellowship [FL190100035]
FX Acknowledgments Grundy is supported by ARC Laureate Fellowship
   FL190100035.
CR Abualhaija S, 2020, EMPIR SOFTW ENG, V25, P5454, DOI 10.1007/s10664-020-09864-1
   Agarwal M., 2014, INT C RECENT ADV INN, P1
   AGRAWAL A, 2020, 2020 IEEE HOT CHIPS, P1, DOI DOI 10.1109/MODRE51215.2020.00007
   Ahmad K, 2021, INT REQUIR ENG CONF, P1, DOI 10.1109/RE51729.2021.00008
   Altarturi HH, 2017, 2017 IEEE CONFERENCE ON BIG DATA AND ANALYTICS (ICBDA), P111, DOI 10.1109/ICBDAA.2017.8284116
   Amaral G, 2020, LECT NOTES COMPUT SC, V12400, P342, DOI 10.1007/978-3-030-62522-1_25
   Ambreen T, 2018, REQUIR ENG, V23, P63, DOI 10.1007/s00766-016-0258-2
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Amershi S, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300233
   Amershi S, 2014, AI MAG, V35, P105, DOI 10.1609/aimag.v35i4.2513
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   Amyot D., 2011, iStar, V766, P160
   [Anonymous], SIRIUS ECLIPSE MODEL
   [Anonymous], 2017, Requirements engineering
   Apple Developer, 2020, HUM INT GUID
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Aydemir FB, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P15, DOI [10.1145/3194770.3194778, 10.23919/FAIRWARE.2018.8452915]
   Bach J, 2017, 2017 IEEE INTERNATIONAL SYMPOSIUM ON SYSTEMS ENGINEERING (ISSE 2017), P283
   Bano M, 2014, IEEE INT WORKS EMPIR, P9, DOI 10.1109/EmpiRE.2014.6890110
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Becker J.S., 2020, SOFTW ENG WORKSH
   Belani H, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P252, DOI 10.1109/REW.2019.00051
   Berry DM, 2022, LECT NOTES COMPUT SC, V13216, P19, DOI 10.1007/978-3-030-98464-9_2
   Blumreiter M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P543, DOI 10.1109/MODELS-C.2019.00084
   Bonfê M, 2012, P IEEE RAS-EMBS INT, P56, DOI 10.1109/BioRob.2012.6290700
   Bosch J., 2021, Artificial Intelligence Paradigms for Smart Cyber-Physical Systems, P1, DOI 10.4018/978-1-7998-5101-1.ch001
   Bosch J., 2018, SIBW, P177
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brugali Davide, 2019, 2019 IEEE International Conference on Real-time Computing and Robotics (RCAR). Proceedings, P743, DOI 10.1109/RCAR47638.2019.9044033
   Bruno Barbara, 2013, 2013 IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN), P768, DOI 10.1109/ROMAN.2013.6628406
   Burnett M, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P2586, DOI 10.1145/2858036.2858274
   Camilli M, 2021, LECT NOTES COMPUT SC, V12685, P123, DOI 10.1007/978-3-030-73128-1_9
   Challa H, 2020, 2020 IEEE SEVENTH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2020), P61, DOI 10.1109/AIRE51212.2020.00016
   Chazette L, 2019, INT REQUIR ENG CONF, P470, DOI 10.1109/RE.2019.00064
   Chen QZ, 2022, IUI'22: 27TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P549, DOI 10.1145/3490099.3511141
   Cirqueira Douglas, 2020, Machine Learning and Knowledge Extraction. 4th IFIP TC 5, TC 12, WG 8.4, WG 8.9, WG 12.9. International Cross-Domain Conference, CD-MAKE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12279), P321, DOI 10.1007/978-3-030-57321-8_18
   Clauer D., 2021, Procedia CIRP, V96, P242
   Cleland-Huang Jane, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414950
   Crnkovic GD, 2012, ETHICS INF TECHNOL, V14, P61, DOI 10.1007/s10676-011-9278-2
   Cysneiros Luiz Marcio, 2020, Enterprise, Business-Process and Information Systems Modeling. 21st International Conference, BPMDS 2020, 25th International Conference, EMMSAD 2020. Held at CAiSE 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 387), P335, DOI 10.1007/978-3-030-49418-6_23
   Cysneiros LM, 2018, INT REQUIR ENG CONF, P382, DOI 10.1109/RE.2018.00-21
   Hager GD, 2017, Arxiv, DOI arXiv:1707.04352
   de Graaf M. D., 2017, AAAI FALL S, P19
   DiMatteo J., 2020, REFSQ WORKSHOPS
   Dimitrakopoulos G, 2019, SIMUL MODEL PRACT TH, V91, P28, DOI 10.1016/j.simpat.2018.11.005
   Duran MB, 2019, INFORM SOFTWARE TECH, V110, P156, DOI 10.1016/j.infsof.2019.03.004
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ertel W., 2018, Introduction to artificial intelligence
   Ezzini S, 2021, PROC INT CONF SOFTW, P1485, DOI 10.1109/ICSE43902.2021.00133
   Fagbola Temitayo M., 2019, 2019 International Conference on Intelligent Informatics and Biomedical Sciences (ICIIBMS), P200, DOI 10.1109/ICIIBMS46890.2019.8991505
   Felzmann H, 2019, BIG DATA SOC, V6, DOI 10.1177/2053951719860542
   Fenn S, 2016, MACH VISION APPL, V27, P77, DOI 10.1007/s00138-015-0726-6
   Fowler M., 2010, Domain-specific languages
   Gable GG, 1994, EUR J INFORM SYST, V3, P112, DOI 10.1057/ejis.1994.12
   Glasow P.A., 2005, FUNDAMENTALS SURVEY
   Glymour M Maria, 2008, Modern epidemiology, P183
   Gonçalves E, 2019, REQUIR ENG, V24, P55, DOI 10.1007/s00766-018-0302-5
   Google Research, 2019, PEOPL AI GUID
   Greenland S, 1999, EPIDEMIOLOGY, V10, P37, DOI 10.1097/00001648-199901000-00008
   Gruber Kristina, 2017, 2017 7th IEEE International Conference on System Engineering and Technology (ICSET). Proceedings, P27, DOI 10.1109/ICSEngT.2017.8123415
   Grundy John, 2018, Stud Health Technol Inform, V246, P75
   Grundy JC, 2021, ENASE: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P9, DOI 10.5220/0010531800090020
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Guizzardi Renata, 2020, Advances in Artificial Intelligence. 33rd Canadian Conference on Artificial Intelligence, Canadian AI 2020. Proceedings. Lecture Notes in Artificial Intelligence. Subseries of Lecture Notes in Computer Science (LNAI 12109), P251, DOI 10.1007/978-3-030-47358-7_24
   H.-L.E.G. on Artificial Intelligence, 2019, H LEG ART INT ETH GU
   Habibullah KM, 2021, INT REQUIR ENG CONF, P13, DOI 10.1109/RE51729.2021.00009
   Hall M, 2019, P IJCAI WORKSHOP EXP
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heyn Hans-Martin, 2021, 2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN), P89, DOI 10.1109/WAIN52551.2021.00020
   Holmquist Lars Erik, 2017, Interactions, V24, P28, DOI [10.1145/, DOI 10.1145/3085571]
   Hong M.K., 2021, P 2021 CHI C HUMAN F, P1, DOI [DOI 10.1145/3411764.3445735, 10.1145/3411764.3445735]
   Horkoff J, 2019, INT REQUIR ENG CONF, P386, DOI 10.1109/RE.2019.00050
   Houdek F., 2017, REFSQ WORKSHOPS
   Hu BC, 2020, 2020 IEEE SEVENTH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2020), P48, DOI 10.1109/AIRE51212.2020.00014
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Ishikawa F, 2020, INT REQUIR ENG CONF, P346, DOI 10.1109/RE48521.2020.00046
   Islam Muhammad Nazrul, 2021, Computational Intelligence in Information Systems. Proceedings of the Computational Intelligence in Information Systems Conference (CIIS 2020). Advances in Intelligent Systems and Computing (AISC 1321), P33, DOI 10.1007/978-3-030-68133-3_4
   Jac Ky Ang, 2011, 2011 IEEE Symposium on Computers & Informatics (ISCI), P640, DOI 10.1109/ISCI.2011.5958991
   Jakob J, 2017, 2017 IEEE 14TH INTERNATIONAL SCIENTIFIC CONFERENCE ON INFORMATICS, P128, DOI 10.1109/INFORMATICS.2017.8327234
   Jiang F, 2017, STROKE VASC NEUROL, V2, P230, DOI 10.1136/svn-2017-000101
   Johnson C.Y., 2022, RACIAL BIAS MED ALGO
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Kaindl H, 2020, 2020 IEEE SEVENTH INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR REQUIREMENTS ENGINEERING (AIRE 2020), P33, DOI 10.1109/AIRE51212.2020.00012
   Khatamino P., 2021, REFSQ WORKSHOPS
   Khomh F, 2018, IEEE SOFTWARE, V35, P81, DOI 10.1109/MS.2018.3571224
   Kitchenham B., 2007, 2007001 EBSE
   Köhl MA, 2019, INT REQUIR ENG CONF, P363, DOI 10.1109/RE.2019.00046
   Koelsch G., 2016, Requirements writing for system engineering
   Kostova B., 2020, REFSQ WORKSHOPS
   Krause J, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5686, DOI 10.1145/2858036.2858529
   Kuwajima H, 2020, MACH LEARN, V109, P1103, DOI 10.1007/s10994-020-05872-w
   Kuwajima H, 2019, IEEE INT SYMP SOFTW, P13, DOI 10.1109/ISSREW.2019.00035
   Lapouchnian A., 2005, GOAL ORIENTED REQUIR, V32
   Lee H, 2020, ACM T COMPUT-HUM INT, V27, DOI 10.1145/3364223
   Lee Nayeon, 2019, P 2019 WORKSH WID NL, P177
   Li D, 2017, Artificial intelligence with uncertainty
   Lockerbie J., 2020, REFSQ WORKSH
   Lwakatare LE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106368
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Maguire M, 2001, INT J HUM-COMPUT ST, V55, P587, DOI 10.1006/ijhc.2001.0503
   Martínez-Fernandez S, 2021, Arxiv, DOI arXiv:2105.01984
   McIntosh J, 2021, 2021 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2021), P31, DOI 10.1109/CHASE52884.2021.00012
   Mekni M., 2020, P 3 INT C APPL INT S, P1, DOI [https://doi.org/10.1145/3378184.3378199, DOI 10.1145/3378184.3378199]
   Meyer C. B., 2001, Field Methods, V13, P329, DOI [DOI 10.1177/1525822X0101300402, 10.1177/1525822X0101300402]
   Microsoft, 2022, HAX TOOLK PROJ
   Miller T., 2017, P IJCAI 2017 WORKSHO, V36, DOI DOI 10.1016/J.FOODCHEM.2017.11.091
   Miller T, 2019, ARTIF INTELL, V267, P1, DOI 10.1016/j.artint.2018.07.007
   Miller T, 2012, J SYST SOFTWARE, V85, P2160, DOI 10.1016/j.jss.2012.04.049
   Nguyen ML, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P188, DOI 10.1109/REW53955.2021.00034
   Nakamichi K, 2020, INT REQUIR ENG CONF, P260, DOI 10.1109/RE48521.2020.00036
   Nalchigar S, 2021, REQUIR ENG, V26, P237, DOI 10.1007/s00766-020-00343-z
   Nalchigar S, 2018, DATA KNOWL ENG, V117, P359, DOI 10.1016/j.datak.2018.04.006
   Neace K, 2018, REQUIR ENG, V23, P509, DOI 10.1007/s00766-017-0278-6
   Ntakolia C, 2022, UNIVERSAL ACCESS INF, V21, P249, DOI 10.1007/s10209-020-00764-1
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Odong LA, 2022, LECT NOTES BUS INF P, V446, P409, DOI 10.1007/978-3-031-05760-1_24
   Olmos-Sánchez K, 2020, 2020 8TH EDITION OF THE INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2020), P1, DOI 10.1109/CONISOFT50191.2020.00012
   Pearl J, 1995, BIOMETRIKA, V82, P669, DOI 10.2307/2337329
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rahimi M, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P241, DOI 10.1109/REW.2019.00049
   Ries B, 2021, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD), P41, DOI 10.5220/0010216600410052
   Rivero Luis, 2021, Human Interface and the Management of Information Information Presentation and Visualization. Thematic Area, HIMI 2021. Held as Part of the 23rd HCI International Conference, HCII 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12765), P227, DOI 10.1007/978-3-030-78321-1_18
   Samin H, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1328, DOI 10.1145/3412841.3442007
   Sandkuhl K, 2019, CONF BUS INFORM, P157, DOI 10.1109/CBI.2019.00025
   Schmidt A, 2020, PROCEEDINGS OF THE WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES AVI 2020, DOI 10.1145/3399715.3400873
   Schoonderwoerd TAJ, 2021, INT J HUM-COMPUT ST, V154, DOI 10.1016/j.ijhcs.2021.102684
   Schroeder J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P189, DOI 10.1109/ICSE.2015.147
   Schwammberger M, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P195, DOI 10.1109/REW53955.2021.00035
   Sculley D, 2015, ADV NEUR IN, V28
   Shin C, 2019, ENERGIES, V12, DOI 10.3390/en12091696
   Shneiderman B, 2021, ISSUES SCI TECHNOL, V37, P56
   Stone P., 2016, Artificial intelligence and life in 2030. one hundred year study on artificial intelligence: report of the 2015-2016 study panel
   Tellis W., 1997, The Qualitative Report, V3, P1, DOI [10.46743/2160-3715/1997.2024, DOI 10.46743/2160-3715/1997.2024]
   Theosaksomo David, 2019, 2019 IEEE 13th International Conference on Telecommunication Systems, Services, and Applications (TSSA), P154, DOI 10.1109/TSSA48701.2019.8985467
   Thinyane M., 2020, 2020 IEEE 1 INT WORK, P11
   Tuncali CE, 2020, IEEE T INTELL VEHICL, V5, P265, DOI 10.1109/TIV.2019.2955903
   Urquhart C., 2013, Grounded Theory for Qualitative Research: A PracticalGuide
   Van Vliet H., 2008, Software Engineering: Principles and Practice, V13
   Vassev E, 2014, NASA MONOGR SYST SOF, P1, DOI 10.1007/978-3-319-09816-6
   Vassev E., 2013, P 16 IEEE INT S OBJE, P1
   Villamizar H, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P29, DOI 10.1109/SEAA53835.2021.00013
   Vogelsang A, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P245, DOI 10.1109/REW.2019.00050
   Vorvoreanu M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300283
   Vujovic V, 2014, IEEE INT CONF INTELL, P233, DOI 10.1109/INES.2014.6909375
   Wang DD, 2019, I C OPT COMMUN NETW, DOI [10.1109/icocn.2019.8934212, 10.1145/3290605.3300831]
   Wang F, 2011, IEEE COMMUN SURV TUT, V13, P673, DOI 10.1109/SURV.2011.060710.00066
   Wang Y, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P159, DOI 10.1109/ASEW52652.2021.00041
   Weihrauch D, 2018, PROC CIRP, V67, P386, DOI 10.1016/j.procir.2017.12.230
   Wheatcraft Louis S., 2018, INCOSE International Symposium, V28, P716, DOI 10.1002/j.2334-5837.2018.00511.x
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
   Yu F, 2020, PROC CVPR IEEE, P2633, DOI 10.1109/CVPR42600.2020.00271
   Zamani K, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P116, DOI 10.1109/REW53955.2021.00023
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 156
TC 15
Z9 15
U1 13
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107176
DI 10.1016/j.infsof.2023.107176
EA MAR 2023
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9Y4DP
UT WOS:000950409600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU AlOmar, EA
   Ivanov, A
   Kurbatova, Z
   Golubev, Y
   Mkaouer, MW
   Ouni, A
   Bryksin, T
   Nguyen, L
   Kini, A
   Thakur, A
AF AlOmar, Eman Abdullah
   Ivanov, Anton
   Kurbatova, Zarina
   Golubev, Yaroslav
   Mkaouer, Mohamed Wiem
   Ouni, Ali
   Bryksin, Timofey
   Nguyen, Le
   Kini, Amit
   Thakur, Aditya
TI Just-in-time code duplicates extraction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring; Machine learning; Software quality
ID METHOD REFACTORING OPPORTUNITIES; IDENTIFICATION; CLONES
AB Context: Refactoring is a critical task in software maintenance, and is usually performed to enforce better design and coding practices, while coping with design defects. The ExtractMethod refactoring is widely used for merging duplicate code fragments into a single new method. Several studies attempted to recommend Extract Method refactoring opportunities using different techniques, including program slicing, program dependency graph analysis, change history analysis, structural similarity, and feature extraction. However, irrespective of the method, most of the existing approaches interfere with the developer's workflow: they require the developer to stop coding and analyze the suggested opportunities, and also consider all refactoring suggestions in the entire project without focusing on the development context.Objective: To increase the adoption of the ExtractMethod refactoring, in this paper, we aim to investigate the effectiveness of machine learning and deep learning algorithms for its recommendation while maintaining the workflow of the developer. Method: The proposed approach relies on mining prior applied Extract Method refactorings and extracting their features to train a deep learning classifier that detects them in the user's code. We implemented our approach as a plugin for IntelliJ IDEA called AnTiCOPYPASTER. To develop our approach, we trained and evaluated various popular models on a dataset of 18,942 code fragments from 13 Open Source Apache projects.Results: The results show that the best model is the Convolutional Neural Network (CNN), which recommends appropriate Extract Method refactorings with an F-measure of 0.82. We also conducted a qualitative study with 72 developers to evaluate the usefulness of the developed plugin.Conclusion: The results show that developers tend to appreciate the idea of the approach and are satisfied with various aspects of the plugin's operation.
C1 [AlOmar, Eman Abdullah] Stevens Inst Technol, Hoboken, NJ 07030 USA.
   [Ivanov, Anton] HSE Univ, Moscow, Russia.
   [Kurbatova, Zarina; Golubev, Yaroslav] JetBrains Res, Belgrade, Serbia.
   [Mkaouer, Mohamed Wiem; Nguyen, Le; Kini, Amit; Thakur, Aditya] Rochester Inst Technol, Rochester, NY USA.
   [Ouni, Ali] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
   [Bryksin, Timofey] JetBrains Res, Limassol, Cyprus.
C3 Stevens Institute of Technology; HSE University (National Research
   University Higher School of Economics); Rochester Institute of
   Technology; University of Quebec; University of Quebec Montreal; Ecole
   de Technologie Superieure - Canada
RP AlOmar, EA (corresponding author), Stevens Inst Technol, Hoboken, NJ 07030 USA.
EM ealomar@stevens.edu; apivanov_1@edu.hse.ru;
   zarina.kurbatova@jetbrains.com; yaroslav.golubev@jetbrains.com;
   mwmvse@rit.edu; ali.ouni@etsmtl.ca; timofey.bryksin@jetbrains.com;
   ln8378@rit.edu; ak3328@rit.edu; at4415@rit.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017; AlOmar, Eman Abdullah/ABW-2622-2022;
   Ouni, Ali/Y-8280-2019; Bryksin, Timofey/AAG-6343-2020
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; AlOmar, Eman
   Abdullah/0000-0003-1800-9268; Ouni, Ali/0000-0003-4708-0362; Bryksin,
   Timofey/0000-0001-9022-3563; Kini, Amit Dilip/0009-0001-3565-3920
CR Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   AlOmar E.A., 2022, P 19 INT C MINING SO
   AlOmar EA, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00314-w
   AlOmar EA, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114176
   AlOmar EA, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110821
   AlOmar Eman Abdullah., 2022, Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering, P1
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Aniche M., 2020, IEEE Transactions on Software Engineering
   [Anonymous], 2022, REPLICATIONPACKAGE
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Caulo M, 2020, EUROMICRO CONF PROC, P429, DOI 10.1109/SEAA51224.2020.00075
   Charalampidou S, 2017, IEEE T SOFTWARE ENG, V43, P954, DOI 10.1109/TSE.2016.2645572
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dalgaard P., 2002, Introductory Statistics with R, P111
   Di Penta M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P556, DOI 10.1145/3368089.3409695
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Example, 2022, EXAMPLE
   Fanta R, 1999, J SOFTW MAINT-RES PR, V11, P223, DOI 10.1002/(SICI)1096-908X(199907/08)11:4<223::AID-SMR194>3.0.CO;2-D
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Golubev Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1303, DOI 10.1145/3468264.3473924
   Gu JX, 2018, PATTERN RECOGN, V77, P354, DOI 10.1016/j.patcog.2017.10.013
   Haas R, 2016, LECT NOTES BUS INF P, V238, P144, DOI 10.1007/978-3-319-27033-3_10
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hotta K., 2010, JOINT ERCIM WORK SHO, P73
   Hu B, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P225, DOI 10.1109/SANER50967.2021.00029
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kanemitsu T., 2011, PROC 4 WORKSHOP REFA, P8
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Levin Stanislav, 2017, P 13 INT C PREDICTIV, P97
   Liu FT, 2008, IEEE DATA MINING, P413, DOI 10.1109/ICDM.2008.17
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Maruyama K., 2001, Software Engineering Notes, V26, P31, DOI 10.1145/379377.375233
   Mens K, 2021, EASEAI '21: PROCEEDINGS OF THE 3RD INTERNATIONAL WORKSHOP ON EDUCATION THROUGH ADVANCED SOFTWARE ENGINEERING AND ARTIFICIAL INTELLIGENCE, P1, DOI 10.1145/3472673.3473958
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Alcocer JPS, 2020, SCI COMPUT PROGRAM, V195, DOI 10.1016/j.scico.2020.102475
   Shahidi M, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111221
   Sharma T., 2012, PROC 5 WORKSHOP REFA, P50
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Silva D, 2015, Arxiv, DOI arXiv:1506.06086
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thongtanunam P, 2019, EMPIR SOFTW ENG, V24, P937, DOI 10.1007/s10664-018-9645-2
   Tiwari O., 2022, 15 INNOVATIONS SOFTW, P1
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, EUR CON SFTWR MTNCE, P119, DOI 10.1109/CSMR.2009.23
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   van der Leij D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1337, DOI 10.1145/3468264.3473927
   Xu SH, 2017, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE.2017.35
   Yang LM, 2009, ASIA PAC SOFWR ENG, P43, DOI 10.1109/APSEC.2009.20
   Yoshida N, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P67, DOI 10.1109/IWoR.2019.00020
   Yue RR, 2018, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2018.00021
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zhang CQ, 2021, ADV FUNCT MATER, V31, DOI 10.1002/adfm.202100099
NR 69
TC 2
Z9 5
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107169
DI 10.1016/j.infsof.2023.107169
EA FEB 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9M9HU
UT WOS:000942532800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Stradowski, S
   Madeyski, L
AF Stradowski, Szymon
   Madeyski, Lech
TI Exploring the challenges in software testing of the 5G system at Nokia:
   A survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality assurance; System level testing; Software engineering
   challenges; Test effort reduction; Efficiency improvement; 5G technology
ID PRIORITIZATION
AB Context: The ever-growing size and complexity of industrial software products pose significant quality assurance challenges to engineering researchers and practitioners, despite the constant effort to increase knowledge and improve the processes. 5G technology developed by Nokia is one example of such a grand and highly complex system with improvement potential.Objective: The following paper provides an overview of the current quality assurance processes used by Nokia to develop the 5G technology and provides insight into the most prominent challenges by an evaluation of perceived importance, urgency, and difficulty to understand the future opportunities.Method: Nokia mode of operation, briefly introduced in this paper, has been subjected to extensive analysis by a selected group of experienced test-oriented professionals to define the most critical areas of concern. Secondly, the identified problems were evaluated by Nokia gNB system-level test professionals in a dedicated survey. Results: The questionnaire was completed by 312 out of 2935 (10.63%) possible respondents. The challenges are seen as the most important and urgent: customer scenario testing, performance testing, and competence ramp-up. Challenges seen as the most difficult to solve are low occurrence failures, hidden feature dependencies, and hardware configuration-specific problems. Conclusions: Our research identified several improvement areas in the quality assurance processes used to develop the 5G technology by determining the most important and urgent problems that at the same time have a low perceived difficulty. Such initiatives are attractive from a business perspective. On the other hand, challenges seen as the most impactful yet difficult may be of interest to the academic research community.
C1 [Stradowski, Szymon] Nokia, Szybowcowa 2, PL-54206 Wroclaw, Dolnoslaskie, Poland.
   [Stradowski, Szymon; Madeyski, Lech] Wroclaw Univ Sci & Technol, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Dolnoslaskie, Poland.
C3 Nokia Corporation; Wroclaw University of Science & Technology
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Dolnoslaskie, Poland.
EM lech.madeyski@pwr.edu.pl
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357; Stradowski,
   Szymon/0000-0002-3532-3876
FU Polish Ministry of Education and Science ?;  [DWD/5/0178/2021]
FX Acknowledgements This research was financed by the Polish Ministry of
   Education and Science ?Implementation Doctorate? program (ID:
   DWD/5/0178/2021) .
CR Basili V., 1994, The Goal Question Metric Approach, P528
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   CHAOS REPORT, 2015, TECHN REP
   Ciolkowski M, 2003, LECT NOTES COMPUT SC, V2765, P104
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Garousi V, 2017, IEEE SOFTWARE, V34, P38, DOI 10.1109/MS.2017.3641116
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Garousi V, 2010, J SYST SOFTWARE, V83, P2251, DOI 10.1016/j.jss.2010.07.012
   Hevner AR, 1997, INFORM SOFTWARE TECH, V39, P867, DOI 10.1016/S0950-5849(97)00050-5
   International Organization for Standardization, 2013, SOFTW SYST ENG SOFTW
   International Software Testing Qualifications Board, 2018, FDN LEV SYLL, P30
   Johns R., 2010, LIKERT ITEMS SCALES
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kasunic M., 2005, Tech. Rep..
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Masuda S, 2020, IEEE ICST WORKSHOP, P241, DOI 10.1109/ICSTW50294.2020.00049
   Molleri JS, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962619
   Nokia Corporation, 2021, NOK ANN REP 2020
   Piri E, 2016, 2016 EUROPEAN CONFERENCE ON NETWORKS AND COMMUNICATIONS (EUCNC), P313
   Pyzdek T., 2003, BLACK BELTS MANAGERS, DOI DOI 10.1036/0071415963
   Qi YH, 2017, IEEE T ELECTROMAGN C, V59, P1661, DOI 10.1109/TEMC.2017.2707471
   Shafi M, 2017, IEEE J SEL AREA COMM, V35, P1201, DOI 10.1109/JSAC.2017.2692307
   Sizer T, 2022, J LIGHTWAVE TECHNOL, V40, P346, DOI 10.1109/JLT.2021.3110436
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   The 3rd Generation Partnership Project, 2021, REL15 3GPP
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Virmani M, 2015, FIFTH INTERNATIONAL CONFERENCE ON THE INNOVATIVE COMPUTING TECHNOLOGY (INTECH 2015), P78, DOI 10.1109/INTECH.2015.7173368
   Wang YQ, 2020, ICSOFT: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P27, DOI 10.5220/0009766800270038
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang P, 2019, CHINA COMMUN, V16, P69
   Zhong H, 2019, IEEE INT CONF SOFTW, P430, DOI 10.1109/ICST.2019.00052
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 41
TC 7
Z9 7
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107067
DI 10.1016/j.infsof.2022.107067
EA SEP 2022
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5M1OI
UT WOS:000870873400003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Tecimer, KA
   Tüzün, E
   Moran, C
   Erdogmus, H
AF Tecimer, K. Ayberk
   Tuzun, Eray
   Moran, Cansu
   Erdogmus, Hakan
TI Cleaning ground truth data in software task assignment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Task assignment; Code reviewer recommendation; Bug assignment; Ground
   truth; Labeling bias elimination; Systematic labeling bias; Data
   cleaning
ID BUG; RECOMMENDATION; ACCURATE
AB Context: In the context of collaborative software development, there are many application areas of task assignment such as assigning a developer to fix a bug, or assigning a code reviewer to a pull request. Most task assignment techniques in the literature build and evaluate their models based on datasets collected from real projects. The techniques invariably presume that these datasets reliably represent the "ground truth". In a project dataset used to build an automated task assignment system, the recommended assignee for the task is usually assumed to be the best assignee for that task. However, in practice, the task assignee may not be the best possible task assignee, or even a sufficiently qualified one.
   Objective: We aim to clean up the ground truth by removing the samples that are potentially problematic or suspect with the assumption that removing such samples would reduce any systematic labeling bias in the dataset and lead to performance improvements.
   Method: We devised a debiasing method to detect potentially problematic samples in task assignment datasets. We then evaluated the method's impact on the performance of seven task assignment techniques by comparing the Mean Reciprocal Rank (MRR) scores before and after debiasing. We used two different task assignment applications for this purpose: Code Reviewer Recommendation (CRR) and Bug Assignment (BA).
   Results: In the CRR application, we achieved an average MRR improvement of 18.17% for the three learning-based techniques tested on two datasets. No significant improvements were observed for the two optimization-based techniques tested on the same datasets. In the BA application, we achieved a similar average MRR improvement of 18.40% for the two learning-based techniques tested on four different datasets.
   Conclusion: Debiasing the ground truth data by removing suspect samples can help improve the performance of learning-based techniques in software task assignment applications.
C1 [Tecimer, K. Ayberk] Tech Univ Munich, Dept Informat, Munich, Germany.
   [Tuzun, Eray; Moran, Cansu] Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
   [Erdogmus, Hakan] Carnegie Mellon Univ, Dept Elect & Comp Engn, Pittsburgh, PA 15213 USA.
C3 Technical University of Munich; Ihsan Dogramaci Bilkent University;
   Carnegie Mellon University
RP Tecimer, KA (corresponding author), Tech Univ Munich, Dept Informat, Munich, Germany.; Tüzün, E (corresponding author), Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
EM ayberk.tecimer@tum.de; eraytuzun@cs.bilkent.edu.tr;
   cansu.moran@ug.bilkent.edu.tr; hakane@andrew.cmu.edu
RI Tuzun, Eray/AAD-7282-2021; Erdogmus, Hakan/HTQ-8803-2023
OI Tuzun, Eray/0000-0002-5550-7816; Erdogmus, Hakan/0000-0002-7987-5621;
   Tecimer, K. Ayberk/0000-0001-6160-3145
CR Ahluwalia A, 2019, IEEE WORK CONF MIN S, P63, DOI 10.1109/MSR.2019.00019
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Cabrera GF, 2014, INT C PATT RECOG, P4417, DOI 10.1109/ICPR.2014.756
   Çetin HA, 2021, SCI COMPUT PROGRAM, V208, DOI 10.1016/j.scico.2021.102652
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Dogan E, 2019, INT SYMP EMP SOFTWAR, P7
   Dueñas S, 2018, PROC IEEE ACM INT C, P1, DOI 10.1145/3183440.3183475
   Fejzer M, 2018, J INTELL INF SYST, V50, P597, DOI 10.1007/s10844-017-0484-1
   Fernandez A., 2018, LEARNING IMBALANCED
   Google, 2020, CODE REV DEVELOPER G
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Kovalenko V, 2020, IEEE T SOFTWARE ENG, V46, P710, DOI 10.1109/TSE.2018.2868367
   Lee JB, 2013, ASIA PAC SOFWR ENG, P1, DOI 10.1109/APSEC.2013.103
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Lipcák J, 2018, EUROMICRO CONF PROC, P378, DOI 10.1109/SEAA.2018.00068
   Mani S, 2019, PROCEEDINGS OF THE 6TH ACM IKDD CODS AND 24TH COMAD, P171, DOI 10.1145/3297001.3297023
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Qamar KA, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P138, DOI 10.1109/SEAA53835.2021.00026
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   Rath M, 2019, DATA BRIEF, V25, DOI 10.1016/j.dib.2019.104005
   Rebai S, 2020, AUTOMAT SOFTW ENG, V27, P301, DOI 10.1007/s10515-020-00275-6
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Smith ED, 2010, SYSTEMS ENG, V13, P130, DOI 10.1002/sys.20138
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   Sogaard A., 2014, P COLING 2014 25 INT
   Song H, 2022, Arxiv, DOI arXiv:2007.08199
   STACY W, 1995, COMMUN ACM, V38, P57, DOI 10.1145/203241.203256
   Strand A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P1, DOI 10.1145/3377813.3381365
   Sülün E, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106455
   Sülün E, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P66, DOI 10.1145/3345629.3345637
   Tecimer KA, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P181, DOI 10.1145/3463274.3463336
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thongtanunam Patanamon, 2014, P 7 INT WORKSHOP COO, P119
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Tuzun Eray, 2021, IEEE SOFTWARE
   Voorhees Ellen M., 2000, P 2 INT C LANGUAGE R
   Weiss C., 2007, 4 INTERNATIONALWORKS, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xia ZL, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P24, DOI 10.1109/SOFTWAREMINING.2017.8100850
   Yang DH, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P96, DOI 10.1109/SANER50967.2021.00018
   Zaidi SFA, 2020, IEEE ACCESS, V8, P213729, DOI 10.1109/ACCESS.2020.3040065
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
NR 59
TC 4
Z9 4
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2022
VL 149
AR 106956
DI 10.1016/j.infsof.2022.106956
EA JUN 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3I8QT
UT WOS:000832974600001
DA 2024-07-18
ER

PT J
AU Binkley, D
   Moonen, L
   Isaacman, S
AF Binkley, David
   Moonen, Leon
   Isaacman, Sibren
TI Featherweight assisted vulnerability discovery
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model interpretability; Vulnerability prediction; Identifier splitting;
   Source code vocabulary; Software security
ID STATIC ANALYSIS; SECURITY
AB Predicting vulnerable source code helps to focus the attention of a developer, or a program analysis technique, on those parts of the code that need to be examined with more scrutiny. Recent work proposed the use of function names as semantic cues that can be learned by a deep neural network (DNN) to aid in the hunt for vulnerability of functions. Combining identifier splitting, which we use to split each function name into its constituent words, with a novel frequency-based algorithm, we explore the extent to which the words that make up a function's name can be used to predict potentially vulnerable functions. In contrast to the lightweight prediction provided by a DNN considering only function names, avoiding the need for a DNN provides featherweight prediction. The underlying idea is that function names that contain certain "dangerous"words are more likely to accompany vulnerable functions. Of course, this assumes that the frequency-based algorithm can be properly tuned to focus on truly dangerous words. Because it is more transparent than a DNN, which behaves as a "black box"and thus provides no insight into the rationalization underlying its decisions, the frequency-based algorithm enables us to investigate the inner workings of the DNN. If successful, this investigation into what the DNN does and does not learn will help us train more effective future models. We empirically evaluate our approach on a heterogeneous dataset containing over 73 000 functions labeled vulnerable, and over 950000 functions labeled benign. Our analysis shows that words alone account for a significant portion of the DNN's classification ability. We also find that words are of greatest value in the datasets with a more homogeneous vocabulary. Thus, when working within the scope of a given project, where the vocabulary is unavoidably homogeneous, our approach provides a cheaper, potentially complementary, technique to aid in the hunt for source-code vulnerabilities. Finally, this approach has the advantage that it is viable with orders of magnitude less training data.
C1 [Binkley, David; Isaacman, Sibren] Loyola Univ Maryland, 4501 N Charles St, Baltimore, MD 21210 USA.
   [Moonen, Leon] Simula Res Lab, Oslo, Norway.
C3 Loyola University Maryland
RP Binkley, D (corresponding author), Loyola Univ Maryland, 4501 N Charles St, Baltimore, MD 21210 USA.
EM binkley@cs.loyola.edu
RI Moonen, Leon/M-8790-2015
OI Moonen, Leon/0000-0002-1761-6771; Isaacman, Sibren/0000-0001-5135-2856;
   Binkley, Dave/0000-0003-0059-4024
FU Research Council of Norway [288787]
FX Dr. Moonen's work is supported by the Research Council of Norway through
   the secureIT project (RCN contract #288787).
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Anderson P, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1207453
   Anderson P, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P3, DOI 10.1109/SCAM.2008.11
   [Anonymous], COMMON VULNERABILITY
   [Anonymous], COMM VULN EXP CVE
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Baca D, 2013, SOFTWARE PRACT EXPER, V43, P259, DOI 10.1002/spe.2109
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fan G., 2019, Sci. Program.
   Freimut B, 2005, IEEE T SOFTWARE ENG, V31, P1074, DOI 10.1109/TSE.2005.136
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Gupta A., 2018, KDD DEEP LEARNING DA, P9
   Handa A, 2019, WIRES DATA MIN KNOWL, V9, DOI 10.1002/widm.1306
   Harer J.A., 2018, Automated software vulnerability detection with machine learning
   Hill E, 2014, EMPIR SOFTW ENG, V19, P1754, DOI 10.1007/s10664-013-9261-0
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Jian Jiang, 2019, Artificial Intelligence and Security. 5th International Conference, ICAIS 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11635), P308, DOI 10.1007/978-3-030-24268-8_29
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Kaya A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2164
   Kulenovic M, 2014, 2014 37TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1381, DOI 10.1109/MIPRO.2014.6859783
   Li RH, 2019, IEEE ACCESS, V7, P80079, DOI 10.1109/ACCESS.2019.2923227
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li Z, 2019, IEEE ACCESS, V7, P103184, DOI 10.1109/ACCESS.2019.2930578
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   MITRE, COMM WEAKN EN CWE
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Pang Y., 2017, Proceedings of the 2017 International Conference on Deep Learning Technologies - ICDLT '17, P6, DOI DOI 10.1145/3094243.3094245
   Pistoia M, 2007, IBM SYST J, V46, P265, DOI 10.1147/sj.462.0265
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sultana KZ, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2303
   SYNOPSYS, OP HUB OP SOURC NETW
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wasserstein RL, 2019, AM STAT, V73, P1, DOI 10.1080/00031305.2019.1583913
   Wohlin C, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P118, DOI 10.1109/METRIC.2002.1011331
   Xu AD, 2018, INT CONF SYST INFORM, P1225, DOI 10.1109/ICSAI.2018.8599360
NR 41
TC 0
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106844
DI 10.1016/j.infsof.2022.106844
EA FEB 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700010
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Huq, F
   Hasan, M
   Haque, MMA
   Mahbub, S
   Iqbal, A
   Ahmed, T
AF Huq, Faria
   Hasan, Masum
   Haque, Md Mahim Anjum
   Mahbub, Sazan
   Iqbal, Anindya
   Ahmed, Toufique
TI Review4Repair: Code review aided automatic program repairing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Automatic program repair; Deep learning; Code review
AB Context: Learning-based automatic program repair techniques are showing promise to provide quality fix suggestions for detected bugs in the source code of the software. These tools mostly exploit historical data of buggy and fixed code changes and are heavily dependent on bug localizers while applying to a new piece of code. With the increasing popularity of code review, dependency on bug localizers can be reduced. Besides, the code review-based bug localization is more trustworthy since reviewers' expertise and experience are reflected in these suggestions. Objective: The natural language instructions scripted on the review comments are enormous sources of information about the bug's nature and expected solutions. However, none of the learning-based tools has utilized the review comments to fix programming bugs to the best of our knowledge. In this study, we investigate the performance improvement of repair techniques using code review comments. Method: We train a sequence-to-sequence model on 55,060 code reviews and associated code changes. We also introduce new tokenization and preprocessing approaches that help to achieve significant improvement over state-of-the-art learning-based repair techniques. Results: We boost the top-1 accuracy by 20.33% and top-10 accuracy by 34.82%. We could provide a suggestion for stylistics and non-code errors unaddressed by prior techniques. Conclusion: We believe that the automatic fix suggestions along with code review generated by our approach would help developers address the review comment quickly and correctly and thus save their time and effort.
C1 [Huq, Faria; Hasan, Masum; Haque, Md Mahim Anjum; Mahbub, Sazan; Iqbal, Anindya] Bangladesh Univ Engn & Technol, Dhaka, Bangladesh.
   [Ahmed, Toufique] Univ Calif Davis, Davis, CA 95616 USA.
C3 Bangladesh University of Engineering & Technology (BUET); University of
   California System; University of California Davis
RP Iqbal, A (corresponding author), Bangladesh Univ Engn & Technol, Dhaka, Bangladesh.
EM 1505052.fh@ugrad.cse.buet.ac.bd; masum@ra.cse.buet.ac.bd; mahim@vt.edu;
   1505020.sm@ugrad.cse.buet.ac.bd; anindya@cse.buet.ac.bd;
   tfahmed@ucdavis.edu
OI Mahbub, Sazan/0000-0002-8667-3649; Ahmed, Toufique/0000-0002-4427-1350;
   Haque, Md Mahim Anjum/0000-0003-1753-3404
FU Samsung Research Bangladesh
FX The research was partially supported by a grant ``Code Review
   Measurement'' granted by Samsung Research Bangladesh. The cloud
   computational resource was supported by Intelligent Machines.
CR A.O.S. Project, 2020, ANDR GERR COD REV
   Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   [Anonymous], 2020, ACUMOS GERRITACUMOS
   [Anonymous], 2020, GERRIT CODE REV
   [Anonymous], 2020, COUCHBASE GERRITCOUC
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], 2020, FDIO GERRIT FDIO COD
   [Anonymous], 2020, GERRIT CODE REV REST
   [Anonymous], 2020, ASTERIX GERRITASTERI
   Arcuri Andrea, 2009, THESIS U BIRMINGHAM
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bois B.D., 2004, A Discussion of Refactoring in Research and Practice
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Britton T., 2020, REVERSIBLE DEBUGGING
   Carbonrom Gerrit, 2020, CARBONROM CODE REV
   Chakraborty S., 2018, ARXIV181000314
   Chen Z., 2020, OPEN SCI REPO
   Chen Z., 2019, TSE
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Cho Kyunghyun, 2014, SYNTAX SEMANTICS STR, P5, DOI [10.3115/v1/w14-4012, 10.3115 /v1/D14-1179, DOI 10.3115/V1/D14-1179]
   Cloudera, 2020, GERRITCLOUDERA CODE
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Devlin J., 2018, BERT PRE TRAINING DE
   Dinella E, 2020, ICLR
   Dos Santos C., 2014, Coling, P69
   Eclipse, 2020, GERRITECLIPSE CODE R
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gehrmann S, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P4098
   Gerrit D., 2020, GERRITUNICORN CODE R
   Gerrithub Gerrit, 2020, GERR COD REV
   GoogleSource G.R., 2020, GERRITGOOGLESOURCE C
   Gu JT, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1631
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Iotivity, 2020, GERR COD REV
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kennedy N, 2020, GOOGLE MONDRIAN WEB
   Kern C, 2010, LECT NOTES COMPUT SC, V6371, P67, DOI 10.1007/978-3-642-15898-8_5
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Klein G, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017): SYSTEM DEMONSTRATIONS, P67, DOI 10.18653/v1/P17-4012
   Konighofer Robert, 2013, Hardware and Software: Verification and Testing. 8th International Haifa Verification Conference, HVC 2012 Revised Selected Papers. LNCS 7857, P56, DOI 10.1007/978-3-642-39611-3_11
   Konighofer R., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P91
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   LeCun Y., 1995, The handbook of brain theory and neural networks, V3361, DOI [10.5555/303568.303704, DOI 10.5555/303568.303704]
   Li Y, 2020, ICSE
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Loper E, 2002, ETMTNLP 02 P ACL 02, P63, DOI [10.3115/1225403.1225421, DOI 10.3115/1225403.1225421, DOI 10.3115/1118108.1118117]
   Lutellier T., 2019, ARXIV PREPRINT ARXIV
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   Monperrus M., 2018, ARXIV181005806
   Murphy-Hill E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P332, DOI 10.1109/ICSE.2013.6606579
   Neubig Graham, 2018, CoRR
   Omnirom, 2020, GERR COD REV
   Opencord Gerrit, 2020, OPENCORD CODE REV
   Ovirt, 2020, STAT OP GERR COD REV
   Pantiuchina J., 2020, MICHELETUFANONEURALC
   Parr T, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P137, DOI 10.1145/2997364.2997383
   Paulus R., 2017, CoRR
   Polarsys Gerrit, 2020, POLARSYS CODE REV
   Pu YW, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P39, DOI 10.1145/2984043.2989222
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Raskin Jef, 2005, Queue, V3, P64, DOI DOI 10.1145/1053331.1053354
   Rush A.M., 2013, PROC C EMPIRICAL MET, P210
   Samimi H, 2012, PROC INT CONF SOFTW, P277, DOI 10.1109/ICSE.2012.6227186
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Singh R, 2013, ACM SIGPLAN NOTICES, V48, P15, DOI 10.1145/2499370.2462195
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tai KS, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1556
   Tsotsis A., 2020, TECHCRUNCH
   Tu ZP, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P76
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
NR 91
TC 4
Z9 5
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106765
DI 10.1016/j.infsof.2021.106765
EA DEC 2021
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Patel, K
   Hierons, RM
   Clark, D
AF Patel, Krishna
   Hierons, Robert M.
   Clark, David
TI An information theoretic notion of software testability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testability; Information theory; Failed error propagation
ID SQUEEZINESS
AB Context: In software testing, Failed Error Propagation (FEP) is the situation in which a faulty program state occurs during the execution of the system under test (SUT) but this does not lead to incorrect output. It is known that FEP can adversely affect software testing and this has resulted in associated information theoretic measures. Objective: To devise measures that can be used to assess the testability of the SUT. By testability, we mean how likely it is that a faulty program state, that occurs during testing, will lead to incorrect output. Previous work has considered a single program point rather than an entire program. Method: New, more fine-grained, measures were devised. Experiments were used to evaluate these and the previously defined measures (Squeeziness and Normalised Squeeziness). The experiments assessed how well these measures correlated with an estimate of the probability of FEP occurring during testing. Mutants were used to estimate this probability. Results: A strong rank correlation was found between several of the measures and the probability of FEP. Importantly, this included the Normalised Squeeziness of the whole SUT, which is simpler to compute, or estimate, than most of the other measures considered. Additional experiments found that the measures were relatively insensitive to the choice of mutants and also test suite. Conclusion: There is scope to use information theoretic measures to estimate how prone an SUT is to FEP. As a result, there is potential to use such measures to prioritise testing or estimate how much testing an SUT might require.
C1 [Patel, Krishna; Hierons, Robert M.] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
   [Clark, David] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of Sheffield; University of London; University College London
RP Hierons, RM (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
EM krishna.patel@sheffield.ac.uk; r.hierons@sheffield.ac.uk;
   david.clark@ucl.ac.uk
OI Hierons, Robert/0000-0002-4771-1446; Clark, David/0000-0002-7004-934X
FU EPSRC, United Kingdom [EP/P006116/2, EP/P005888/1]; EPSRC [EP/P006116/2,
   EP/P005888/1] Funding Source: UKRI
FX This document is a result of the EPSRC, United Kingdom funded research
   projects EP/P006116/2, EP/P005888/1 InfoTestSS: Information theory and
   Test Suite Selection.
CR AIDanial, 2020, CLOC
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   Apiwattanapong T, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P137, DOI 10.1109/TAIC-PART.2006.18
   Assi R.A., 2018, ARXIV180809233
   Assi R.A., 2019, SOFTW TEST VERIF REL, V29
   Clark D, 2019, INFORM PROCESS LETT, V149, P6, DOI 10.1016/j.ipl.2019.04.001
   Clark D, 2012, INFORM PROCESS LETT, V112, P335, DOI 10.1016/j.ipl.2012.01.004
   Cottrell A., 2016, GNU REGRESSION EC TI
   Cover T. M., 1991, ELEMENTS INFORM THEO
   Delgado-Pérez P, 2018, IEEE T RELIAB, V67, P1406, DOI 10.1109/TR.2018.2864678
   Fekete B.M., 2018, WATER BALANCE TRANSP
   GNU Project, 2020, GDB GNU PROJ DEB
   Jahangirova G, 2019, ORACLE ASSESSMENT IM
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Kettner A, 2015, WBMSED MODEL
   Li N, 2017, IEEE T SOFTWARE ENG, V43, P372, DOI 10.1109/TSE.2016.2597136
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Masri Wes., 2009, Proceedings of the 2Nd International Workshop on Defects in Large Software Systems: Held in Conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2009), DEFECTS '09, P1
   Ostrand T, 2005, TCAS
   T.G. Community, 2019, NAEV
   T.G. Community, 2019, ALL ALG IMPL C
   T.R. Community, 2019, R PROJECT STAT COMPU
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
NR 26
TC 1
Z9 1
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106759
DI 10.1016/j.infsof.2021.106759
EA NOV 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XA3SJ
UT WOS:000720570800003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Islam, K
   Ahmed, T
   Shahriyar, R
   Iqbal, A
   Uddin, G
AF Islam, Khairul
   Ahmed, Toufique
   Shahriyar, Rifat
   Iqbal, Anindya
   Uddin, Gias
TI Early prediction for merged vs abandoned code changes in modern code
   reviews
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code review; Patch; Early prediction; Merged; Abandoned
ID PULL REQUESTS
AB Context: The modern code review process is an integral part of the current software development practice. Considerable effort is given here to inspect code changes, find defects, suggest an improvement, and address the suggestions of the reviewers. In a code review process, several iterations usually take place where an author submits code changes and a reviewer gives feedback until is happy to accept the change. In around 12% cases, the changes are abandoned, eventually wasting all the efforts. Objective: In this research, our objective is to design a tool that can predict whether a code change would be merged or abandoned at an early stage to reduce the waste of efforts of all stakeholders (e.g., program author, reviewer, project management, etc.) involved. The real-world demand for such a tool was formally identified by a study by Fan et al. (2018). Method: We have mined 146,612 code changes from the code reviews of three large and popular open-source software and trained and tested a suite of supervised machine learning classifiers, both shallow and deep learning-based. We consider a total of 25 features in each code change during the training and testing of the models. The features are divided into five dimensions: reviewer, author, project, text, and code. Results: The best performing model named PredCR (Predicting Code Review), a LightGBM-based classifier achieves around 85% AUC score on average and relatively improves the state-of-the-art (Fan et al., 2018) by 14%-23%. In our extensive empirical study involving PredCR on the 146,612 code changes from the three software projects, we find that (1) The new features like reviewer dimensions that are introduced in PredCR are the most informative. (2) Compared to the baseline, PredCR is more effective towards reducing bias against new developers. (3) PredCR uses historical data in the code review repository and as such the performance of PredCR improves as a software system evolves with new and more data. Conclusion: PredCR can help save time and effort by helping developers/code reviewers to prioritize the code changes that they are asked to review. Project management can use PredCR to determine how code changes can be assigned to the code reviewers (e.g., select code changes that are more likely to be merged for review before the changes that might be abandoned).
C1 [Islam, Khairul; Shahriyar, Rifat; Iqbal, Anindya] Bangladesh Univ Engn & Technol, Dhaka, Bangladesh.
   [Ahmed, Toufique] Univ Calif Davis, Davis, CA 95616 USA.
   [Uddin, Gias] Univ Calgary, Calgary, AB, Canada.
C3 Bangladesh University of Engineering & Technology (BUET); University of
   California System; University of California Davis; University of Calgary
RP Uddin, G (corresponding author), Univ Calgary, Calgary, AB, Canada.
EM gias.uddin@ucalgary.ca
RI Shahriyar, Rifat/HJA-5303-2022
OI Uddin, Gias/0000-0003-1376-095X; Ahmed, Toufique/0000-0002-4427-1350;
   Islam, Md. Khairul/0000-0003-2894-8584
CR [Anonymous], 2009, Research on software analysis for error-free computing center Tech-Memo (ROSAEC MEMO 2009-006)
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baltadzhieva A., 2015, P INT C RECENT ADV N, P32
   Bangash AA, 2020, EMPIR SOFTW ENG, V25, P5047, DOI 10.1007/s10664-020-09878-9
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P998, DOI 10.1145/2950290.2983936
   Fan Y., 2018, EMPIR SOFTW ENG, V2018, P1
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Gerede ÇE, 2018, TURK J ELECTR ENG CO, V26, P1343, DOI 10.3906/elk-1707-173
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Goderie J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P414, DOI 10.1109/MSR.2015.52
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hellendoorn VJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P157, DOI 10.1109/MSR.2015.22
   Huang Y, 2019, INT C BLOCKCHAIN TRU, P461
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Ke GL, 2017, ADV NEUR IN, V30
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   KOVALENKO V, 2018, P 11 INT WORKSH COOP, P29
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Probst P, 2019, J MACH LEARN RES, V20
   Rakha MS, 2018, IEEE T SOFTWARE ENG, V44, P1245, DOI 10.1109/TSE.2017.2755005
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Shepperd M, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P349
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shin Y, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P61, DOI 10.1109/MSR.2009.5069481
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Tukey J.W., 1977, Exploratory Data Analysis, V2
   Wang QY, 2019, INFORM SOFTWARE TECH, V110, P108, DOI 10.1016/j.infsof.2019.02.007
   Wang S, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P46, DOI 10.1145/3345629.3345635
   Wessely M, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376249
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Zhao GL, 2019, EMPIR SOFTW ENG, V24, P2140, DOI 10.1007/s10664-019-09696-8
NR 46
TC 7
Z9 7
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106756
DI 10.1016/j.infsof.2021.106756
EA OCT 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WW6SN
UT WOS:000718043900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tian, FC
   Liang, P
   Babar, MA
AF Tian, Fangchao
   Liang, Peng
   Babar, Muhammad Ali
TI Relationships between software architecture and source code in practice:
   An exploratory survey and interview
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Source code; Relationship industrial survey
ID CHECKING; FRAMEWORK
AB Context: Software Architecture (SA) and Source Code (SC) are two intertwined artefacts that represent the interdependent design decisions made at different levels of abstractions - High-Level (HL) and Low-Level (LL). An understanding of the relationships between SA and SC is expected to bridge the gap between SA and SC for supporting maintenance and evolution of software systems. Objective: We aimed at exploring practitioners' understanding about the relationships between SA and SC. Method: We used a mixed-method that combines an online survey with 87 respondents and an interview with 8 participants to collect the views of practitioners from 37 countries about the relationships between SA and SC. Results: Our results reveal that: practitioners mainly discuss five features of relationships between SA and SC; a few practitioners have adopted dedicated approaches and tools in the literature for identifying and analyzing the relationships between SA and SC despite recognizing the importance of such information for improving a system's quality attributes, especially maintainability and reliability. It is felt that cost and effort are the major impediments that prevent practitioners from identifying, analyzing, and using the relationships between SA and SC. Conclusions: The results have empirically identified five features of relationships between SA and SC reported in the literature from the perspective of practitioners and a systematic framework to manage the five features of relationships should be developed with dedicated approaches and tools considering the cost and benefit of maintaining the relationships.
C1 [Tian, Fangchao; Liang, Peng] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
   [Tian, Fangchao; Babar, Muhammad Ali] Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
C3 Wuhan University; University of Adelaide
RP Liang, P (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
EM tianfangchao@whu.edu.cn; liangp@whu.edu.cn; ali.babar@adelaide.edu.au
OI Liang, Peng/0000-0002-2056-5346
FU National Key R&D Program of China [2018YFB1402800]; China Scholarship
   Council
FX This work is partially sponsored by the National Key R&D Program of
   China with Grant No. 2018YFB1402800. The authors gratefully acknowledge
   the financial support from the China Scholarship Council.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Ali N., 2012, P 8 INT ACM SIGSOFT, P23
   Ali N, 2018, EMPIR SOFTW ENG, V23, P224, DOI 10.1007/s10664-017-9515-3
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2018, TOGAF STAND V 9 2
   [Anonymous], 2010, Just Enough Software Architecture: a Risk-Driven Approach
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Brown Simon., 2017, Software Architecture for Developers - Volume 2, Visualise, document and explore your software architecture
   Brunet J, 2015, IEEE SOFTWARE, V32, P30, DOI 10.1109/MS.2014.106
   Buchgeher G, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P46, DOI 10.1109/WICSA.2011.16
   Buckley J, 2015, INFORM SOFTWARE TECH, V61, P107, DOI 10.1016/j.infsof.2015.01.011
   Buckley J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1291, DOI 10.1109/ICSE.2013.6606700
   Chakraborty P, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240298
   de Silva Lakshitha, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P240, DOI 10.1007/978-3-642-39031-9_21
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Díaz-Pace JA, 2012, INFORM SOFTWARE TECH, V54, P448, DOI 10.1016/j.infsof.2011.12.005
   Eden AH, 2003, PROC INT CONF SOFTW, P149, DOI 10.1109/ICSE.2003.1201196
   Falessi D, 2010, IEEE SOFTWARE, V27, P23, DOI 10.1109/MS.2010.49
   Fink A., 2003, The survey handbook, V1
   Fontana FA, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P1, DOI 10.1109/SAM.2015.8
   Fowler Jr F.J, 2013, Survey Research Methods
   Ganesan D, 2008, INT CONF QUAL SOFTW, P347, DOI 10.1109/QSIC.2008.45
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gui SL, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P346, DOI 10.1109/ICACTE.2008.68
   HEROLD S, 2016, P 10 EUR C SOFTW ARC
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Javed M.A., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, page, P1
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   Keim J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P250, DOI 10.1109/ICSA-C.2019.00052
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kruchten P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.59
   Le Gear A., 2005, P10
   Lenhard J, 2019, SOFTWARE QUAL J, V27, P241, DOI 10.1007/s11219-018-9404-z
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Martini A, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2015.31
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N., 2003, STRAW, V3, P61
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Muccini H, 2004, LECT NOTES COMPUT SC, V2984, P295
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Murta LGP, 2008, AUTOMAT SOFTW ENG, V15, P75, DOI 10.1007/s10515-007-0020-6
   Nguyen TN, 2005, THIRD ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGMENT AND APPLICATIONS, PROCEEDINGS, P86, DOI 10.1109/SERA.2005.54
   Passos L, 2010, IEEE SOFTWARE, V27, P82, DOI 10.1109/MS.2009.117
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pigazzini I, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P59, DOI 10.1145/3344948.3344951
   Reja U., 2003, DEV PPLIED STAT, V33, P160
   Rosik J., 2009, P 21 WORK C PSYCH PR, P109
   Santos JCS, 2019, J SYST SOFTWARE, V149, P263, DOI 10.1016/j.jss.2018.10.030
   Satltos JCS, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P303, DOI 10.1109/WICSA.2016.47
   Shahbazian A, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P95, DOI 10.1109/ICSA.2018.00019
   Shaw M, 2006, IEEE SOFTWARE, V23, P31, DOI 10.1109/MS.2006.58
   Stevanetic S., 2014, P 8 ACM EUR C SOFTW, P19
   Tian F., COMPLEMENTARY MAT PA, V2021, DOI [10.5281/zenodo.3889140, DOI 10.5281/ZENODO.3889140]
   Turhan N.K., 2016, P 10 EUR C SOFTW ARC, P2
   Vidal S, 2019, SCI COMPUT PROGRAM, V182, P64, DOI 10.1016/j.scico.2019.07.003
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlrab R, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P151, DOI 10.1109/ICSA.2019.00024
   Woods E., 2010, P 4 EUR C SOFTW ARCH, P55
   Zahid M, 2017, INT CONF EMERG TECHN
   Zheng YJ, 2012, PROC INT CONF SOFTW, P1461, DOI 10.1109/ICSE.2012.6227064
NR 66
TC 7
Z9 7
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106705
DI 10.1016/j.infsof.2021.106705
EA AUG 2021
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Giannakopoulou, D
   Pressburger, T
   Mavridou, A
   Schumann, J
AF Giannakopoulou, Dimitra
   Pressburger, Thomas
   Mavridou, Anastasia
   Schumann, Johann
TI Automated formalization of structured natural language requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements; Structured natural language; Temporal logic; Verification;
   Testing; Analysis
ID SPECIFICATION
AB The use of structured natural languages to capture requirements provides a reasonable trade-off between ambiguous natural language and unintuitive formal notations. There are two major challenges in making structured natural language amenable to formal analysis: (1) formalizing requirements as formulas that can be processed by analysis tools and (2) ensuring that the formulas conform to the semantics of the structured natural language. fretish is a structured natural language that incorporates features from existing research and from NASA applications. Even though fretish is quite expressive, its underlying semantics is determined by the types of four fields: scope, condition, timing, and response. Each combination of field types defines a template with Real-Time Graphical Interval Logic (RTGIL) semantics. We have developed a framework that constructs temporal logic formulas for each template compositionally, from its fields. The compositional nature of our algorithms facilitates maintenance and extensibility. Our goal is to be inclusive not only in terms of language expressivity, but also in terms of requirements analysis tools that we can interface with. For this reason we generate metric-temporal logic formulas with (1) exclusively future-time operators, over both finite and infinite traces, and (2) exclusively past-time operators. To establish trust in the produced formalizations for each template, our framework: (1) extensively tests the generated formulas against the template semantics and (2) proves equivalence between its past-time and future-time formulas. Our approach is available through the open-source tool fret and has been used to capture and analyze requirements for a Lockheed Martin Cyber-Physical System challenge.
C1 [Giannakopoulou, Dimitra; Pressburger, Thomas] NASA Ames Res Ctr, Moffett Field, CA 94035 USA.
   [Mavridou, Anastasia; Schumann, Johann] NASA Ames Res Ctr, KBR, Moffett Field, CA USA.
C3 National Aeronautics & Space Administration (NASA); NASA Ames Research
   Center; National Aeronautics & Space Administration (NASA); NASA Ames
   Research Center
RP Giannakopoulou, D (corresponding author), NASA Ames Res Ctr, Moffett Field, CA 94035 USA.
EM dimitra.giannakopoulou@nasa.gov; tom.pressburger@nasa.gov;
   anastasia.mavridou@nasa.gov; johann.m.schumann@nasa.gov
FU NASA ARMD System-Wide Safety Project, USA
FX We gratefully acknowledge the NASA ARMD System-Wide Safety Project, USA
   for funding this work.
CR [Anonymous], 2021, IBM REQUIREMENTS QUA
   [Anonymous], 2021, QRA QVSCRIBE
   [Anonymous], HANFOR DOCUMENTATION
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Badger J, 2014, INT REQUIR ENG CONF, P325, DOI 10.1109/RE.2014.6912279
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P1, DOI 10.1007/978-3-319-75632-5_1
   Bauer A, 2011, LECT NOTES COMPUT SC, V6617, P13, DOI 10.1007/978-3-642-20398-5_3
   Bensalem S., 2000, LFM 2000: Fifth NASA Langley Formal Methods Workshop (NASA/CP-2000-210100), P187
   Bloem R, 2007, LECT NOTES COMPUT SC, V4590, P263
   Bourbouh H., 2020, 10 EUR C EMB REAL TI
   Bourbouh H., 2021, TM20205011049 NAT AE
   Bouskela D, 2018, ANN IEEE SYST CONF, P412
   Brat G., 2021, NASA FORMAL METHODS
   Buzhinsky I, 2019, IEEE INTL CONF IND I, P400, DOI [10.1109/INDIN41052.2019.8972130, 10.1109/indin41052.2019.8972130]
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   Champion A, 2016, LECT NOTES COMPUT SC, V9780, P510, DOI 10.1007/978-3-319-41540-6_29
   Champion A, 2016, LECT NOTES COMPUT SC, V9763, P347, DOI 10.1007/978-3-319-41591-8_24
   Cobleigh R. L., 2006, P 14 ACM SIGSOFT INT, P208, DOI [10.1145/1181775.1181801, DOI 10.1145/1181775.1181801]
   Crapo A, 2017, INT REQUIR ENG CONF, P283, DOI 10.1109/RE.2017.54
   Dutle A., 2020, 2 WORKSH FORM METH A
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Elenius D., 2019, HIGH CONF SOFTW SYST
   Elliott C., 2016, SAFE SECURE SYSTEMS
   Elliott C., 2015, SAF SEC SYST SOFTW S
   Fifarek AW, 2017, LECT NOTES COMPUT SC, V10227, P420, DOI 10.1007/978-3-319-57288-8_30
   Gacek A, 2018, LECT NOTES COMPUT SC, V10982, P20, DOI 10.1007/978-3-319-96142-2_3
   Gacek A, 2015, LECT NOTES COMPUT SC, V9058, P173, DOI 10.1007/978-3-319-17524-9_13
   Ghosh S, 2016, LECT NOTES COMPUT SC, V9690, P41, DOI 10.1007/978-3-319-40648-0_4
   Giannakopoulou Dimitra, 2020, Requirements Engineering: Foundation for Software Quality. 26th International Working Conference, REFSQ 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12045), P19, DOI 10.1007/978-3-030-44429-7_2
   Giannakopoulou D., 2020, JOINT P REFSQ 2020 W, P2584
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   INCOSE, 2019, GUID WRIT REQ
   Jeannet B., 2016, 8 EUR C EMB REAL TIM
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kupferman O., 2003, International Journal on Software Tools for Technology Transfer, V4, P224, DOI 10.1007/s100090100062
   Langenfeld V, 2019, INT REQUIR ENG CONF, P234, DOI 10.1109/RE.2019.00033
   Lucio Levi, 2018, 2018 1st International Workshop on Easy Approach to Requirements Syntax (EARS). Proceedings, P11, DOI 10.1109/EARS.2018.00009
   Lúcio L, 2017, LECT NOTES COMPUT SC, V10227, P427, DOI 10.1007/978-3-319-57288-8_31
   Mavin A, 2012, IEEE SOFTWARE, V29, P17, DOI 10.1109/MS.2012.36
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mavridou A., 2019, TM2019220374 NAT AER
   Mavridou A., 2020, CEUR WORKSHOP P, P2584
   Mavridou A, 2020, INT REQUIR ENG CONF, P300, DOI 10.1109/RE48521.2020.00040
   Mondragón OA, 2004, INT J SOFTW ENG KNOW, V14, P21, DOI 10.1142/S0218194004001567
   Moser L. E., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P446
   Munoz C.A., 2003, RAPID PROTOTYPING PV
   Nejati S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1015, DOI 10.1145/3338906.3340444
   Pohl K., 2015, REQUIREMENTS ENG FUN, V2nd Editio
   Post A, 2012, LECT NOTES COMPUT SC, V7152, P225, DOI 10.1007/978-3-642-27705-4_18
   Reinbacher T, 2014, TACAS, V8413, P357
   Remenska D, 2014, LECT NOTES COMPUT SC, V8461, P17, DOI 10.1007/978-3-662-43613-4_2
   Salamah S, 2005, LECT NOTES COMPUT SC, V3639, P200
   Salamah Salamah, 2011, Advances in Software Engineering, DOI 10.1155/2011/869182
   Salamah S, 2012, J SYST SOFTWARE, V85, P1915, DOI 10.1016/j.jss.2012.02.041
   Siu K., 2017, 2017 IEEE AIAA 36 DI, P1, DOI DOI 10.1109/DASC.2017.8102059
   Smith RL, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P11, DOI 10.1109/ICSE.2002.1007952
   Teige T., 2016, MBMV, P6
   Nguyen T, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P123, DOI 10.1109/REW.2019.00027
   Tommila T., 2014, CONTROLLED NATURAL L
   Walter B, 2017, INT REQUIR ENG CONF, P263, DOI 10.1109/RE.2017.38
NR 60
TC 21
Z9 21
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2021
VL 137
AR 106590
DI 10.1016/j.infsof.2021.106590
EA JUN 2021
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SQ8FQ
UT WOS:000660586400003
OA Bronze
DA 2024-07-18
ER

PT J
AU Kamei, F
   Wiese, I
   Lima, C
   Polato, I
   Nepomuceno, V
   Ferreira, W
   Ribeiro, M
   Pena, C
   Cartaxo, B
   Pinto, G
   Soares, S
AF Kamei, Fernando
   Wiese, Igor
   Lima, Crescencio
   Polato, Ivanilton
   Nepomuceno, Vilmar
   Ferreira, Waldemar
   Ribeiro, Marcio
   Pena, Carolline
   Cartaxo, Bruno
   Pinto, Gustavo
   Soares, Sergio
TI Grey Literature in Software Engineering: A critical review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Grey Literature; Tertiary study; Secondary Study; Software Engineering;
   Multivocal Literature Review; Grey Literature Review; Systematic
   Literature Review; Mapping Study
ID SYSTEMATIC LITERATURE-REVIEWS; MULTI-VOCAL LITERATURE; PRODUCT LINES;
   TECHNICAL DEBT; PROCESS IMPROVEMENT; QUALITY ATTRIBUTES; CONTINUOUS
   INTEGRATION; MODELING LANGUAGES; DECISION-SUPPORT; CODE GENERATION
AB Context: Grey Literature (GL) recently has grown in Software Engineering (SE) research since the increased use of online communication channels by software engineers. However, there is still a limited understanding of how SE research is taking advantage of GL. Objective: This research aimed to understand how SE researchers use GL in their secondary studies. Methods: We conducted a tertiary study of studies published between 2011 and 2018 in high-quality software engineering conferences and journals. We then applied qualitative and quantitative analysis to investigate 446 potential studies. Results: From the 446 selected studies, 126 studies cited GL but only 95 of those used GL to answer a specific research question representing almost 21% of all the 446 secondary studies. Interestingly, we identified that few studies employed specific search mechanisms and used additional criteria for assessing GL. Moreover, by the time we conducted this research, 49% of the GL URLs are not working anymore. Based on our findings, we discuss some challenges in using GL and potential mitigation plans. Conclusion: In this paper, we summarized the last 10 years of software engineering research that uses GL, showing that GL has been essential for bringing practical new perspectives that are scarce in traditional literature. By drawing the current landscape of use, we also raise some awareness of related challenges (and strategies to deal with them).
C1 [Kamei, Fernando; Pena, Carolline; Soares, Sergio] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Kamei, Fernando] Fed Inst Alagoas, Maceio, Alagoas, Brazil.
   [Wiese, Igor; Polato, Ivanilton] Univ Tecnol Fed Parana, Campo Mourao, Parana, Brazil.
   [Lima, Crescencio] Fed Inst Bahia, Vitoria Da Conquista, BA, Brazil.
   [Nepomuceno, Vilmar] Fed Inst Pernambuco, Recife, PE, Brazil.
   [Ferreira, Waldemar] Univ Catolica Pernambuco, Recife, PE, Brazil.
   [Ribeiro, Marcio] Univ Fed Alagoas, Maceio, Alagoas, Brazil.
   [Cartaxo, Bruno] Fed Inst Pernambuco, Paulista, PE, Brazil.
   [Pinto, Gustavo] Fed Univ Para, Belem, Para, Brazil.
C3 Universidade Federal de Pernambuco; Instituto Federal de Alagoas (IFAL);
   Universidade Tecnologica Federal do Parana; Instituto Federal da Bahia
   (IFBA); Instituto Federal de Pernambuco (IFPE); Universidade Catolica de
   Pernambuco; Universidade Federal de Alagoas; Instituto Federal de
   Pernambuco (IFPE); Universidade Federal do Para
RP Kamei, F (corresponding author), Fed Inst Alagoas, Maceio, Alagoas, Brazil.
EM fernando.kenji@ifal.edu.br
RI Soares, Sergio/K-3712-2012; Mwansa, Gardner/HGV-3045-2022; Ribeiro,
   Marcio/C-8356-2017
OI Soares, Sergio/0000-0002-4428-2535; Mwansa, Gardner/0000-0003-3827-9783;
   Polato, Ivanilton/0000-0003-1762-7742; Nepomuceno,
   Vilmar/0000-0003-1981-0997; Lima, Crescencio/0000-0002-0286-2056; Kamei,
   Fernando Kenji/0000-0002-5572-2049; Ribeiro, Marcio/0000-0002-4293-4261
FU INES 2.0; CNPq [465614/2014-0, 309697/2019-0, 309032/2019-9]; FACEPE
   [APQ-0399-1.03/17, APQ/0388-1.03/14]; CAPES [88887.136410/2017-00];
   FAPESPA
FX We thank the anonymous reviewers whose comments and suggestions helped
   improve this manuscript. This work is partially supported by INES 2.0
   (www.ines.org.br), CNPq grant 465614/2014-0, FACEPE grants
   APQ-0399-1.03/17 and APQ/0388-1.03/14, CAPES grant 88887.136410/2017-00.
   Sergio Soares is partially supported by CNPq grant 309697/2019-0.
   Gustavo Pinto is partially suuported by CNPq grant 309032/2019-9 and
   FAPESPA.
CR Abad ZSH, 2016, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2016.61
   Abdelmaboud A, 2015, J SYST SOFTWARE, V101, P159, DOI 10.1016/j.jss.2014.12.015
   Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Acuna Silvia T., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P42, DOI 10.1049/ic.2012.0005
   Adams J, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0337-y
   Adams RJ, 2017, INT J MANAG REV, V19, P432, DOI 10.1111/ijmr.12102
   Afzal W, 2016, J SYST SOFTWARE, V111, P1, DOI 10.1016/j.jss.2015.08.048
   Ahmad A, 2016, J SYST SOFTWARE, V122, P16, DOI 10.1016/j.jss.2016.08.039
   Al-Baik O, 2015, EMPIR SOFTW ENG, V20, P1861, DOI 10.1007/s10664-014-9340-x
   Aleti A., 2014, LECT NOTES INFORM LN, VP227, P77
   Alkhanak EN, 2016, J SYST SOFTWARE, V113, P1, DOI 10.1016/j.jss.2015.11.023
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Ambreen T, 2018, REQUIR ENG, V23, P63, DOI 10.1007/s00766-016-0258-2
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   Anjum Maria, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P57, DOI 10.1049/ic.2012.0008
   [Anonymous], 2011, 15 INTERNA TIONAL C
   [Anonymous], 2013, P 17 INT C EVALUATIO
   Anu V, 2018, INFORM SOFTWARE TECH, V103, P112, DOI 10.1016/j.infsof.2018.06.011
   Arias TBC, 2011, EMPIR SOFTW ENG, V16, P544, DOI 10.1007/s10664-011-9158-8
   Arvanitou EM, 2017, J SYST SOFTWARE, V127, P52, DOI 10.1016/j.jss.2017.01.026
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Axelsson J, 2016, J SYST SOFTWARE, V114, P69, DOI 10.1016/j.jss.2015.12.020
   Ayora C, 2015, INFORM SOFTWARE TECH, V57, P248, DOI 10.1016/j.infsof.2014.05.009
   Bano M, 2015, INFORM SOFTWARE TECH, V58, P148, DOI 10.1016/j.infsof.2014.06.011
   Barreiros E, 2011, INT SYMP EMP SOFTWAR, P107, DOI 10.1109/ESEM.2011.19
   Bazi HR, 2017, J SYST SOFTWARE, V128, P87, DOI 10.1016/j.jss.2017.02.049
   Becker C, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P85, DOI 10.1145/3194164.3194171
   Beelmann A, 2006, EUR PSYCHOL, V11, P244, DOI 10.1027/1016-9040.11.3.244
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Bonato S., 2018, FUNDAMENTAL PRINCIPL
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Carrizo D, 2017, INFORM SOFTWARE TECH, V92, P194, DOI 10.1016/j.infsof.2017.08.003
   Carroll C, 2015, INT SYMP EMP SOFTWAR, P235
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Chen Y, 2018, INFORM SOFTWARE TECH, V94, P82, DOI 10.1016/j.infsof.2017.10.003
   Chuang SW, 2014, J SYST SOFTWARE, V93, P84, DOI 10.1016/j.jss.2014.03.006
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   Costa B, 2016, J SYST SOFTWARE, V112, P156, DOI 10.1016/j.jss.2015.09.039
   Costa M, 2017, INT J DIGIT LIBRARIE, V18, P191, DOI 10.1007/s00799-016-0171-9
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Estácio BJD, 2015, INFORM SOFTWARE TECH, V63, P1, DOI 10.1016/j.infsof.2015.02.011
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   de Souza EF, 2015, INFORM SOFTWARE TECH, V57, P378, DOI 10.1016/j.infsof.2014.05.016
   del Aguila IM, 2016, REQUIR ENG, V21, P461, DOI 10.1007/s00766-015-0225-3
   Diebold P., 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601254
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Domínguez E, 2012, INFORM SOFTWARE TECH, V54, P1045, DOI 10.1016/j.infsof.2012.04.008
   Edison H, 2018, INFORM SOFTWARE TECH, V95, P1, DOI 10.1016/j.infsof.2017.12.007
   El-Attar M, 2012, REQUIR ENG, V17, P187, DOI 10.1007/s00766-011-0135-y
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Escalona MJ, 2011, J SYST SOFTWARE, V84, P1379, DOI 10.1016/j.jss.2011.03.051
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P151, DOI 10.1109/ESEM.2017.22
   Febrero F, 2016, INFORM SOFTWARE TECH, V70, P18, DOI 10.1016/j.infsof.2015.09.006
   Fernandez Adrian, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P52, DOI 10.1049/ic.2012.0007
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Fernandez D. M., 2014, P 8 ACM IEEE INT S E, DOI 10.1145/2652524.2652555
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Fernández-Sánchez C, 2017, J SYST SOFTWARE, V124, P22, DOI 10.1016/j.jss.2016.10.018
   Ferreira TN, 2017, INFORM SOFTWARE TECH, V90, P55, DOI 10.1016/j.infsof.2017.05.003
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   Franzago M, 2018, IEEE T SOFTWARE ENG, V44, P1146, DOI 10.1109/TSE.2017.2755039
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Garcés L, 2017, INFORM SOFTWARE TECH, V82, P121, DOI 10.1016/j.infsof.2016.10.005
   García-Borgoñón L, 2014, INFORM SOFTWARE TECH, V56, P103, DOI 10.1016/j.infsof.2013.10.001
   Garousi V., 2020, Contemporary Empirical Methods in Software Engineering, P385, DOI [10.1007/978-3-030-32489-6_14, DOI 10.1007/978-3-030-32489-6_14]
   Garousi V., 2017, ARXIV170702553
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2018, INFORM SOFTWARE TECH, V104, P14, DOI 10.1016/j.infsof.2018.06.016
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Ghapanchi AH, 2011, J SYST SOFTWARE, V84, P238, DOI 10.1016/j.jss.2010.09.022
   Giraldo FD, 2018, SOFTWARE QUAL J, V26, P685, DOI 10.1007/s11219-016-9350-6
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gonçalves E, 2018, J SYST SOFTWARE, V137, P1, DOI 10.1016/j.jss.2017.11.023
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Gonzalez J.E, 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement. ESEM'14, DOI DOI 10.1145/2652524.2652569
   Gul S, 2021, COLLECT CURATION, V40, P100, DOI 10.1108/CC-10-2019-0036
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Haghighatkhah A, 2017, J SYST SOFTWARE, V128, P25, DOI 10.1016/j.jss.2017.03.005
   Haselberger D, 2016, INFORM SOFTWARE TECH, V70, P1, DOI 10.1016/j.infsof.2015.09.003
   Heaton D, 2015, INFORM SOFTWARE TECH, V67, P207, DOI 10.1016/j.infsof.2015.07.011
   Heck P, 2018, SOFTWARE QUAL J, V26, P127, DOI 10.1007/s11219-016-9336-4
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Hosseinzadeh S, 2018, INFORM SOFTWARE TECH, V104, P72, DOI 10.1016/j.infsof.2018.07.007
   Hujainah F, 2018, INFORM SOFTWARE TECH, V102, P85, DOI 10.1016/j.infsof.2018.05.008
   Hydara I, 2015, INFORM SOFTWARE TECH, V58, P170, DOI 10.1016/j.infsof.2014.07.010
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Irshad M., 2016, ACM INT C P SERIES, DOI 10.1145/2915970.2915989
   Irshad M, 2018, INFORM SOFTWARE TECH, V93, P223, DOI 10.1016/j.infsof.2017.09.009
   Jabangwe R, 2018, J SYST SOFTWARE, V145, P98, DOI 10.1016/j.jss.2018.08.028
   Jabbari R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1957
   Javed M. A., 2014, ACM INT C P SERIES, DOI [10.1145/2601248.2601278, DOI 10.1145/2601248.2601278]
   Jayatilleke S, 2018, INFORM SOFTWARE TECH, V93, P163, DOI 10.1016/j.infsof.2017.09.004
   Jia CJ, 2016, J SYST SOFTWARE, V116, P206, DOI 10.1016/j.jss.2015.01.058
   Juan Li, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P12, DOI 10.1049/ic.2012.0002
   Kabbedijk J, 2015, J SYST SOFTWARE, V100, P139, DOI 10.1016/j.jss.2014.10.034
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Kamei F., 2020, P 34 BRAZ SOFTW ENG, DOI 10.1145/3422392.3422442
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kaur L, 2017, J SYST SOFTWARE, V125, P152, DOI 10.1016/j.jss.2016.11.028
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kirbas S, 2017, SCI COMPUT PROGRAM, V135, P4, DOI 10.1016/j.scico.2016.10.003
   Kitchenham Barbara, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P126, DOI 10.1049/ic.2012.0016
   Kitchenham Barbara, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P46, DOI 10.1049/ic.2011.0006
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kratzke N, 2017, J SYST SOFTWARE, V126, P1, DOI 10.1016/j.jss.2017.01.001
   Kuhrmann M., 2013, ACM INT C P SERIES, P165, DOI [10.1145/2460999.2461023, DOI 10.1145/2460999.2461023]
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Lane S, 2011, INFORM SOFTWARE TECH, V53, P424, DOI 10.1016/j.infsof.2010.12.005
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Leitner M, 2014, INFORM SOFTWARE TECH, V56, P273, DOI 10.1016/j.infsof.2013.12.004
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Lewis G, 2015, J SYST SOFTWARE, V107, P158, DOI 10.1016/j.jss.2015.06.005
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Li ZY, 2013, INFORM SOFTWARE TECH, V55, P777, DOI 10.1016/j.infsof.2012.11.005
   Li Z, 2016, J SYST SOFTWARE, V114, P1, DOI 10.1016/j.jss.2015.10.042
   Li Z, 2013, J SYST SOFTWARE, V86, P2371, DOI 10.1016/j.jss.2013.04.021
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Mesquida AL, 2012, INFORM SOFTWARE TECH, V54, P239, DOI 10.1016/j.infsof.2011.11.002
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Lopez-Herrejon RE, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1912
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Mahmood S., 2015, ACM INT C P SER 27 2, V27-29- Apri, DOI [10.1145/2745802.2745831, DOI 10.1145/2745802.2745831]
   Major L., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P21, DOI 10.1049/ic.2011.0003
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Sierra JM, 2018, INFORM SOFTWARE TECH, V94, P111, DOI 10.1016/j.infsof.2017.10.004
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Maro S, 2018, J SYST SOFTWARE, V141, P85, DOI 10.1016/j.jss.2018.03.060
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martins LEG, 2016, INFORM SOFTWARE TECH, V75, P71, DOI 10.1016/j.infsof.2016.04.002
   Matalonga S, 2017, J SYST SOFTWARE, V131, P1, DOI 10.1016/j.jss.2017.05.048
   Mayvan BB, 2017, J SYST SOFTWARE, V125, P93, DOI 10.1016/j.jss.2016.11.030
   Mehmood A, 2013, INFORM SOFTWARE TECH, V55, P395, DOI 10.1016/j.infsof.2012.09.003
   Meldrum S, 2017, P 21 INT C EVALUATIO, P180
   Mendez D., 2020, CONT EMPIRICAL METHO, P477
   Mohabbati B, 2013, INFORM SOFTWARE TECH, V55, P1845, DOI 10.1016/j.infsof.2013.05.006
   Montalvillo L, 2016, J SYST SOFTWARE, V122, P110, DOI 10.1016/j.jss.2016.08.053
   Morschheuser B, 2018, INFORM SOFTWARE TECH, V95, P219, DOI 10.1016/j.infsof.2017.10.015
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nadal S, 2017, INFORM SOFTWARE TECH, V90, P75, DOI 10.1016/j.infsof.2017.06.001
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Neto GTG, 2019, INT SYMP EMP SOFTWAR, P1
   Nguyen PH, 2017, INFORM SOFTWARE TECH, V83, P116, DOI 10.1016/j.infsof.2016.11.004
   Niazi M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1872
   Ochoa L, 2018, IEEE WORK CONF MIN S, P170, DOI 10.1145/3196398.3196416
   Olorisade B. K, 2016, P 20 INT C EV ASS SO, P1, DOI [10.1145/2915970.2915982, DOI 10.1145/2915970.2915982]
   Oriol M, 2014, INFORM SOFTWARE TECH, V56, P1167, DOI 10.1016/j.infsof.2014.03.012
   Özakinci R, 2018, J SYST SOFTWARE, V144, P216, DOI 10.1016/j.jss.2018.06.025
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Paez Arsenio, 2017, J Evid Based Med, DOI [10.1111/jebm.12266, 10.1111/jebm.12265]
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Patel K, 2018, SOFTWARE QUAL J, V26, P1373, DOI 10.1007/s11219-017-9392-4
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Araujo MAP, 2012, INT SYMP EMP SOFTWAR, P281, DOI 10.1145/2372251.2372303
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Pinto G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P147, DOI 10.1109/ICSE-SEET.2019.00024
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rainer A., 2018, TECHNICAL REPORT SOF
   Rainer A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2197
   Rainer A, 2019, INFORM SOFTWARE TECH, V106, P231, DOI 10.1016/j.infsof.2018.10.007
   Rainer A, 2017, INFORM SOFTWARE TECH, V87, P62, DOI 10.1016/j.infsof.2017.01.011
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Raulamo-Jurvanen P., 2017, P 21 INT C EV ASS SO, P21, DOI DOI 10.1145/3084226.3084252
   Reyes RP, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1195, DOI 10.1145/3180155.3180161
   Riaz Mehwish, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P263, DOI 10.1049/ic.2012.0034
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Rinkevics K, 2013, INFORM SOFTWARE TECH, V55, P267, DOI 10.1016/j.infsof.2012.08.004
   Rizvi B, 2015, J SOFTW-EVOL PROC, V27, P723, DOI 10.1002/smr.1718
   Rocha RD, 2013, INFORM SOFTWARE TECH, V55, P1355, DOI 10.1016/j.infsof.2013.02.007
   Roda C, 2018, J SYST SOFTWARE, V146, P310, DOI 10.1016/j.jss.2018.09.074
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Ros R, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P35, DOI 10.1145/3194760.3194766
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Salah D., 2014, P 18 INT C EV ASS SO, P1, DOI 10.1145/2601248.2601276
   Salam M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1939
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Santiago I, 2012, INFORM SOFTWARE TECH, V54, P1340, DOI 10.1016/j.infsof.2012.07.008
   Santos A. R., 2015, P 19 INT C EVALUATIO, V27-29-Apri, DOI [10.1145/2745802.2745806, DOI 10.1145/2745802.2745806]
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Santos JAM, 2018, J SYST SOFTWARE, V144, P450, DOI 10.1016/j.jss.2018.07.035
   Schopfel, 2010, GREY LIT LIB INFORM, DOI [10.1515/9783598441493, DOI 10.1515/9783598441493]
   Schöpfel J, 2021, COLLECT CURATION, V40, P77, DOI 10.1108/CC-12-2019-0044
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Sepúlveda S, 2016, INFORM SOFTWARE TECH, V69, P16, DOI 10.1016/j.infsof.2015.08.007
   Durelli VHS, 2013, J SYST SOFTWARE, V86, P934, DOI 10.1016/j.jss.2012.10.012
   Shahin M, 2014, J SYST SOFTWARE, V94, P161, DOI 10.1016/j.jss.2014.03.071
   Shahrivar S, 2018, INFORM SOFTWARE TECH, V103, P202, DOI 10.1016/j.infsof.2018.06.018
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Silva Ana, 2017, P 21 INT C EVALUATIO, P364, DOI [10.1145/3084226.3084262, DOI 10.1145/3084226.3084262]
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Sobernig S., 2016, EXTRACTING REUSABLE, V113, DOI [10.1016/j.jss.2015.11.037, DOI 10.1016/J.JSS.2015.11.037]
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Soualhia M, 2017, J SYST SOFTWARE, V134, P170, DOI 10.1016/j.jss.2017.09.001
   Neto PAS, 2016, INFORM SOFTWARE TECH, V69, P84, DOI 10.1016/j.infsof.2015.09.004
   Spinola RO, 2012, INFORM SOFTWARE TECH, V54, P759, DOI 10.1016/j.infsof.2012.01.009
   Ståhl D, 2017, EMPIR SOFTW ENG, V22, P967, DOI 10.1007/s10664-016-9457-1
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Staron M, 2016, J SYST SOFTWARE, V113, P76, DOI 10.1016/j.jss.2015.10.051
   Stevanetic S., 2015, ACM INT C P SERIES, V27-29-Apri, DOI [10.1145/2745802.2745822, DOI 10.1145/2745802.2745822]
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Sulayman Muhammad, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P134, DOI 10.1049/ic.2011.0017
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Tahir T, 2016, INFORM SOFTWARE TECH, V73, P101, DOI 10.1016/j.infsof.2016.01.014
   Tarhan A., 2017, P 21 INT C EVALUATIO, VF1286, P2, DOI 10.1145/3084226.3084261
   Tarhan A, 2016, INFORM SOFTWARE TECH, V75, P122, DOI 10.1016/j.infsof.2016.01.010
   Tausan N, 2017, INFORM SOFTWARE TECH, V91, P82, DOI 10.1016/j.infsof.2017.06.008
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Torre D., 2014, 18 INT C EV ASS SOFT, DOI 10.1145/2601248.2601292
   Torre D, 2018, J SYST SOFTWARE, V144, P121, DOI 10.1016/j.jss.2018.06.029
   Tosi D, 2015, INFORM SOFTWARE TECH, V61, P16, DOI 10.1016/j.infsof.2015.01.007
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Tuma K, 2018, J SYST SOFTWARE, V144, P275, DOI 10.1016/j.jss.2018.06.073
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Tüzün E, 2015, INFORM SOFTWARE TECH, V60, P77, DOI 10.1016/j.infsof.2014.12.007
   Tüzün E, 2015, INFORM SOFTWARE TECH, V59, P136, DOI 10.1016/j.infsof.2014.09.008
   ul Hassan I, 2018, INFORM SOFTWARE TECH, V94, P208, DOI 10.1016/j.infsof.2017.10.010
   Ulziit B, 2015, J SOFTW-EVOL PROC, V27, P763, DOI 10.1002/smr.1720
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Uzun B, 2018, INFORM SOFTWARE TECH, V102, P30, DOI 10.1016/j.infsof.2018.05.004
   Vale T, 2017, INFORM SOFTWARE TECH, V84, P1, DOI 10.1016/j.infsof.2016.12.004
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   Vallon R, 2018, INFORM SOFTWARE TECH, V96, P161, DOI 10.1016/j.infsof.2017.12.004
   Vasconcellos FJS, 2017, J SYST SOFTWARE, V123, P45, DOI 10.1016/j.jss.2016.09.030
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Vierhauser M, 2016, INFORM SOFTWARE TECH, V80, P89, DOI 10.1016/j.infsof.2016.08.005
   Vilela J, 2017, J SYST SOFTWARE, V125, P68, DOI 10.1016/j.jss.2016.11.031
   Wang BC, 2018, J SYST SOFTWARE, V146, P59, DOI 10.1016/j.jss.2018.09.001
   Washizaki H, 2018, EMPIR SOFTW ENG, V23, P2323, DOI 10.1007/s10664-017-9592-3
   Weinreich R, 2016, INFORM SOFTWARE TECH, V80, P265, DOI 10.1016/j.infsof.2016.09.007
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wendler R, 2012, INFORM SOFTWARE TECH, V54, P1317, DOI 10.1016/j.infsof.2012.07.007
   White G, 2017, J SYST SOFTWARE, V132, P186, DOI 10.1016/j.jss.2017.05.125
   Williams A., 2018, P 22 INT C EV ASS SO, P46, DOI [10.1145/3210459.3210464, DOI 10.1145/3210459.3210464]
   Williams A., 2017, P 21 INT C EVALUATIO, P280, DOI 10.1145/3084226.3084268
   Williams A., 2018, ACM INT C P SE F1377, VF1377, DOI [10.1145/3210459, DOI 10.1145/3210459]
   Williams A, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P211, DOI 10.1145/3319008.3319013
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wu H, 2016, PROC IEEE INT CONF S, P32, DOI 10.1109/ICSME.2016.87
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Yasin A, 2020, IEEE ACCESS, V8, P36226, DOI 10.1109/ACCESS.2020.2971712
   Younas M, 2018, INFORM SOFTWARE TECH, V103, P142, DOI 10.1016/j.infsof.2018.06.014
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Yusop NSM, 2017, IEEE T SOFTWARE ENG, V43, P848, DOI 10.1109/TSE.2016.2638427
   Zahedi Mansooreh, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P41, DOI 10.1145/3383219.3383224
   Zarour M, 2015, J SYST SOFTWARE, V101, P180, DOI 10.1016/j.jss.2014.11.041
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
   Zhang H., 2020, P 42 INT C SOFTW ENG
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 285
TC 16
Z9 16
U1 2
U2 102
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106609
DI 10.1016/j.infsof.2021.106609
EA JUN 2021
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nakagawa, EY
   Antonino, PO
   Schnicke, F
   Kuhn, T
   Liggesmeyer, P
AF Nakagawa, Elisa Yumi
   Antonino, Pablo Oliveira
   Schnicke, Frank
   Kuhn, Thomas
   Liggesmeyer, Peter
TI Continuous Systems and Software Engineering for Industry 4.0: A
   disruptive view
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Industry 4; 0; Continuous Systems and Software Engineering; Continuous
   Software Engineering
ID DIGITAL TWIN
AB Context: Industry 4.0 has substantially changed the manufacturing processes, leading to smart factories with full digitalization, intelligence, and dynamic production. The need for rigorous and continuous development of highly networked software-intensive Industry 4.0 systems entails great challenges. Hence, Industry 4.0 requires new ways to develop, operate, and evolve these systems accordingly.
   Objective: We introduce the view of Continuous Systems and Software Engineering for Industry 4.0 (CSSE I4.0).
   Method: Based on our research and industrial projects, we propose this novel view and its core elements, including continuous twinning, which is also introduced first in this paper. We also discuss the existing industrial engagement and research that could leverage this view for practical application.
   Results: There are still several open issues, so we highlight the most urgent perspectives for future work. Conclusions: A disruptive view on how to engineer Industry 4.0 systems must be established to pave the way for the realization of the fourth industrial revolution.
C1 [Nakagawa, Elisa Yumi] Univ Sao Paulo, Sao Carlos, Brazil.
   [Antonino, Pablo Oliveira; Schnicke, Frank; Kuhn, Thomas; Liggesmeyer, Peter] Fraunhofer IESE, Kaiserslautern, Germany.
C3 Universidade de Sao Paulo
RP Nakagawa, EY (corresponding author), Univ Sao Paulo, Sao Carlos, Brazil.
EM elisa@icmc.usp.br; pablo.antonino@iese.fraunhofer.de;
   Frank.Schnicke@iese.fraunhofer.de; thomas.kuhn@iese.fraunhofer.de;
   peter.liggesmeyer@iese.fraunhofer.de
RI Antonino, Pablo Oliveira/C-9099-2017
OI Schnicke, Frank/0000-0002-4351-4488
FU FAPESP, Brazil [2017/06195-9, 2019/19730-5]; CNPq [312634/20188]
FX This work was funded by FAPESP, Brazil (2017/06195-9 and 2019/19730-5)
   and CNPq (312634/20188) . We would like to thank Sonnhild Namingha for
   her excellent proofreading.
CR Antonino PO, 2018, LECT NOTES COMPUT SC, V11048, P115, DOI 10.1007/978-3-030-00761-4_8
   Bevilacqua M, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12031088
   Enders M. R., 2019, Twenty-Fifth Americas Conference on Information Systems, Cancun
   Ferreira WD, 2020, COMPUT IND ENG, V149, DOI 10.1016/j.cie.2020.106868
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Kritzinger W, 2018, IFAC PAPERSONLINE, V51, P1016, DOI 10.1016/j.ifacol.2018.08.474
   Kuhn T, 2018, PROC IEEE ACM INT C, P121, DOI 10.1145/3183440.3195065
   Nakagawa EY, 2011, LECT NOTES COMPUT SC, V6903, P207, DOI 10.1007/978-3-642-23798-0_22
   Park KT, 2020, INT J ADV MANUF TECH, V106, P1787, DOI 10.1007/s00170-019-04653-7
   Tao F, 2019, IEEE T IND INFORM, V15, P2405, DOI 10.1109/TII.2018.2873186
   Zhong RY, 2017, ENGINEERING-PRC, V3, P616, DOI 10.1016/J.ENG.2017.05.015
NR 11
TC 17
Z9 17
U1 2
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106562
DI 10.1016/j.infsof.2021.106562
EA MAR 2021
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200006
DA 2024-07-18
ER

PT J
AU dos Santos, EB
   Andrade, RMC
   Santos, ID
AF dos Santos, Erick Barros
   Andrade, Rossana M. C.
   Santos, Ismayle de Sousa
TI Runtime testing of context-aware variability in adaptive systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Adaptive systems; Dynamic variability; Runtime testing
AB Context: A Dynamically Adaptive System (DAS) supports runtime adaptations to handle changes in the operational environment. These adaptations can change the system's structure or behavior and even the logic of its adaptation mechanism. However, these adaptations may insert defects, leading the system to fail at runtime.
   Objective: Aiming to identify these failures, testing can be executed to verify the system at runtime. Studies in the literature mostly focus on testing to verify the adaptations at design-time or functionalities at runtime, rather than exercising the adaptation mechanism at runtime. So, we propose RETAkE (RuntimE Testing of dynamically Adaptive systEms). Method: RETAkE is an approach to perform the runtime testing based on the system's context variability and feature modeling. RETAkE tests the adaptation mechanism, enabling the verification of its adaptation rules with the system's variability model. The runtime testing is supported by the verification of behavioral properties. For the evaluation, we used the mutation testing technique with two DAS. We also conducted an evaluation to measure the overhead introduced when RETAkE is integrated to the DAS.
   Results: RETAkE identified the mutants in the two mobile DAS, but the results vary due to the probabilistic nature of the approach to generate test sequences. Regarding the overhead, test sequences of size 30 had a low impact. However, bigger test sequences increase the overhead.
   Conclusion: The integration of RETAkE to the DAS adaptation mechanism can support the discovery of adaptation failures that occur at runtime. Furthermore, the results of the evaluation suggest its feasibility to perform runtime testing.
C1 [dos Santos, Erick Barros; Andrade, Rossana M. C.; Santos, Ismayle de Sousa] Fed Univ Ceara UFC, Grp Comp Networks Software Engn & Syst GREat, BR-60355636 Fortaleza, Ceara, Brazil.
C3 Universidade Federal do Ceara
RP dos Santos, EB (corresponding author), Fed Univ Ceara UFC, Grp Comp Networks Software Engn & Syst GREat, BR-60355636 Fortaleza, Ceara, Brazil.
EM erickbarros@great.ufc.br; rossana@great.ufc.br;
   ismaylesantos@great.ufc.br
RI Andrade, Rossana M C/K-1790-2015
FU CNPQ [315543 / 2018-3, 133464 / 2018-0]
FX The authors would like to thank CNPQ for the Productivity Scholarship of
   Rossana Maria de Castro Andrade DT-2 (No 315543 / 2018-3) and for the
   Master Researcher scholarship (No 133464 / 2018-0) of Erick Barros dos
   Santos.
CR Abowd GD, 1999, LECT NOTES COMPUT SC, V1707, P304
   Almeida Diego R., 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-019-0093-7
   Andrade R.M, 2013, AN EST 19 S BRAS SIS, P53
   [Anonymous], 2010, PRINCIPLES APPL DIST
   Aragao BR, 2018, P INT COMP SOFTW APP, P738, DOI 10.1109/COMPSAC.2018.10329
   Bencomo N., 2008, P 12 INT C SOFTWARE, V2, P23
   Brenner D, 2007, INFORM SYST FRONT, V9, P151, DOI 10.1007/s10796-007-9029-4
   Capilla R, 2016, 2016 IEEE 1ST INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P6, DOI 10.1109/FAS-W.2016.16
   Capilla R, 2014, COMPUTER, V47, P85, DOI 10.1109/MC.2014.33
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   de Sousa Santos Ismayle, 2017, TestDAS-Testing Method for Dynamically Adaptive Systems
   de Sousa Santos Ismayle, 2018, BRAZILIAN C SOFTWARE, P6
   dos Santos EB, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P377, DOI 10.1145/3350768.3351798
   dos Santos Erick Barros, 2019, 15 BRAZILIAN S INFOR, P4
   EBERHARDINGER B, 2017, P 12 INT WORKSH AUT, P34, DOI DOI 10.1109/AST.2017.1
   Fredericks Erik M., 2015, 2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P157, DOI 10.1109/SEAMS.2015.15
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   González A, 2009, IEEE ICST WORKSHOP, P19, DOI 10.1109/ICSTW.2009.9
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hansel Joachim, 2017, 2017 IEEE/ACM 2nd International Workshop on Variability and Complexity in Software Design (VACE). Proceedings, P9, DOI 10.1109/VACE.2017.5
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hielscher J, 2008, LECT NOTES COMPUT SC, V5377, P122, DOI 10.1007/978-3-540-89897-9_11
   Islam N., 2018, P 28 ANN INT C COMP, P48
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kang Kyo C, 1990, Technical Report
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kiselev I., 2002, ASPECT ORIENTED PROG
   Lahami M, 2016, SCI COMPUT PROGRAM, V122, P1, DOI 10.1016/j.scico.2016.02.002
   Leal L, 2019, P INT COMP SOFTW APP, P495, DOI 10.1109/COMPSAC.2019.00076
   Macías-Escrivá FD, 2013, EXPERT SYST APPL, V40, P7267, DOI 10.1016/j.eswa.2013.07.033
   Marinho FG, 2013, SCI COMPUT PROGRAM, V78, P2381, DOI 10.1016/j.scico.2012.04.009
   Matalonga S, 2017, J SYST SOFTWARE, V131, P1, DOI 10.1016/j.jss.2017.05.048
   Mauro J, 2018, SCI COMPUT PROGRAM, V163, P139, DOI 10.1016/j.scico.2018.05.002
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Metzger A., 2011, P 8 WORKSH ASS SELF, P18
   Mizouni R, 2014, EXPERT SYST APPL, V41, P7549, DOI 10.1016/j.eswa.2014.05.049
   Mousa A, 2019, FUTURE GENER COMP SY, V99, P376, DOI 10.1016/j.future.2019.04.032
   Myers Glenford J., 2011, The Art of Software Testing
   Oriol M, 2015, EXPERT SYST APPL, V42, P6507, DOI 10.1016/j.eswa.2015.03.027
   Puschel G., 2014, J ADV SOFTWARE, V7, P686
   Puschel Georg, 2014, International Journal on Advances in Software, P88
   Qin Y, 2016, J SYST SOFTWARE, V120, P70, DOI 10.1016/j.jss.2016.07.002
   Rocha L. S., 2012, 2012 Proceedings of 5th International Workshop on Exception Handling (WEH 2012), P27, DOI 10.1109/WEH.2012.6226595
   Saller K, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P106
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   SANTOS IS, 2016, SBES 16, P113, DOI DOI 10.1145/2973839.2973852
   Santos ID, 2017, IEEE SOFTWARE, V34, P72
   Santos ID, 2017, INFORM SOFTWARE TECH, V88, P1, DOI 10.1016/j.infsof.2017.03.008
   Siqueira BR, 2015, PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS), P111, DOI 10.1145/3275245.3275257
   Siqueira BR, 2020, IEEE ICST WORKSHOP, P284, DOI 10.1109/ICSTW50294.2020.00054
   SIQUEIRA BR, 2016, SAST, DOI DOI 10.1145/2993288.2993294
   Tamura Gabriel, 2013, Software Engineering for Self-Adaptive Systems II, P108
   Tramontana P, 2019, SOFTWARE QUAL J, V27, P149, DOI 10.1007/s11219-018-9418-6
   Wang HS, 2009, PROCEEDINGS OF THE FIRST INTERNATIONAL WORKSHOP ON EDUCATION TECHNOLOGY AND COMPUTER SCIENCE, VOL II, P610, DOI 10.1109/ETCS.2009.397
   Wang H, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2620000
   Wong, 2001, MUTATION TESTING NEW, V24, DOI [10.1007/978-1-4757-5939-6, DOI 10.1007/978-1-4757-5939-6]
   Xu C, 2012, J SYST SOFTWARE, V85, P2812, DOI 10.1016/j.jss.2012.04.078
NR 58
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106482
DI 10.1016/j.infsof.2020.106482
EA JAN 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000006
DA 2024-07-18
ER

PT J
AU Zhang, M
   Keung, JW
   Xiao, Y
   Kabir, MA
AF Zhang, Miao
   Keung, Jacky Wai
   Xiao, Yan
   Kabir, Md Alamgir
TI Evaluating the effects of similar-class combination on class integration
   test order generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Class integration test order; Integration testing; Similar classes;
   Stubbing complexity
ID OPTIMIZATION; ALGORITHM
AB Context: In integration testing, the order in which classes are integrated and tested is significant for the construction of test stubs. With the existing approaches, it is usually difficult to generate the sub-optimal test orders for real applications, which have large numbers of classes.
   Objective: There exist moderately large numbers of classes in software systems, which is one of the main factors that complicate the generation of class integration test order (CITO). The main objectives of this study are reducing the problem space for CITO generation, and minimizing the stubbing cost of the generated test orders.
   Method: The approach proposed in this study is based on the hypothesis that similar-class combination can remove class dependencies and yield a smaller problem space. Identical class dependence and symmetric classes are the two main properties that are used to identify similar classes. In addition, a new cycle-breaking algorithm is introduced to minimize the stubbing cost of the generated test orders, which fully considers the two factors (number of test stubs and the corresponding stubbing complexity) that affect the overall stubbing cost. Empirical experiments are conducted on nine open-source Java programs to evaluate the performance of the proposed approach.
   Results: With similar-class combination, the proposed approach reduced the numbers of classes and class dependencies by over 10% and 6%, respectively, for six programs. Moreover, for four programs, the proposed approach reduced the number of cycles among class dependencies by more than 20%. The cycle-breaking algorithm achieved reduction of more than 13% in the stubbing cost, thus outperforming other competing techniques.
   Conclusions: The proposed method relies on the two aforementioned important properties to identify similar classes, and these properties are known to significantly improve the performance of CITO generation. The results obtained in this study confirmed the capability of the proposed approach in terms of minimizing the number of classes and class dependencies in programs. It outperformed other competing methods in minimizing the stubbing costs of the generated test orders.
C1 [Zhang, Miao; Keung, Jacky Wai; Kabir, Md Alamgir] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
   [Xiao, Yan] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
C3 City University of Hong Kong; National University of Singapore
RP Xiao, Y (corresponding author), Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
EM miazhang9-c@my.cityu.edu.hk; jacky.Keung@cityu.edu.hk;
   dcsxan@nus.edu.sg; makabir4-c@my.cityu.edu.hk
RI Kabir, Md Alamgir/GRO-6484-2022; Alamgir, Kabir M/ABA-2963-2020
OI Alamgir, Kabir M/0000-0002-7136-6339; ZHANG, Miao/0000-0001-9659-9393;
   XIAO, Yan/0000-0002-2563-083X; Keung, Jacky/0000-0002-3803-9600
FU General Research Fund of the Research Grants Council of Hong Kong
   [11208017]; City University of Hong Kong [7005028, 7005217]; Intel
   [9220097, 9678149, 9440227, 9440180, 9220103, 9229029]; National
   Research Foundation, Singapore; National University of Singapore through
   its National Satellite of Excellence in Trustworthy Software Systems
   (NSOE-TSS) office under the Trustworthy Software Systems - Core
   Technologies Grant (TSSCTG) [NSOETSS2019-05]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (No. 11208017) and the research
   funds of City University of Hong Kong (7005028 and 7005217), and the
   Research Support Fund by Intel (9220097), and funding supports from
   other industry partners (9678149, 9440227, 9440180, 9220103 and
   9229029). This project is also supported by the National Research
   Foundation, Singapore and National University of Singapore through its
   National Satellite of Excellence in Trustworthy Software Systems
   (NSOE-TSS) office under the Trustworthy Software Systems - Core
   Technologies Grant (TSSCTG) award no. NSOETSS2019-05.
CR Abdurazik A, 2009, COMPUT J, V52, P557, DOI 10.1093/comjnl/bxm054
   [Anonymous], 1927, Manuel d'economie politique
   [Anonymous], 2011, REINFORCEMENT LEARNI
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1998, P EUR C GEN PROGR EU
   Borner L, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P80, DOI 10.1109/VALID.2009.30
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC, 2003, SPRING INT SER ENG C, V731, P204
   BURKARD RE, 1984, EUR J OPER RES, V17, P169, DOI 10.1016/0377-2217(84)90231-5
   BURKE E, 2009, NOTTCSTRSUB090624141
   Burke E.K., 2011, IEEE T EVOLUT COMPUT, V16, P406
   Cabral RD, 2010, LECT NOTES COMPUT SC, V6435, P16, DOI 10.1007/978-3-642-16573-3_3
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Czibula G, 2018, APPL SOFT COMPUT, V65, P517, DOI 10.1016/j.asoc.2018.01.042
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Devore J.L., 1999, PROBABILITY STAT ENG, V5th
   Doerner K, 2004, ANN OPER RES, V131, P79, DOI 10.1023/B:ANOR.0000039513.99038.c6
   Dorigo M., 2006, TRIRIDIA2006010 U LI, V194
   Grechanik Mark, 2019, SEKE, P209
   Assunçao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Guizzo G, 2017, LECT NOTES COMPUT SC, V10452, P168, DOI 10.1007/978-3-319-66299-2_15
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Harman M, 2012, INT SYMP EMP SOFTWAR, P1, DOI 10.1145/2372251.2372253
   Hashim NL, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P11
   Hastie T., 2009, ELEMENTS STAT LEARNI
   Hewett R, 2009, IEEE INT CONF AUTOM, P211, DOI 10.1109/ASE.2009.84
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Kung DC, 1996, J SYST SOFTWARE, V32, P21, DOI 10.1016/0164-1212(95)00047-X
   Le Hanh V., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P381
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   LIN LJ, 1992, MACH LEARN, V8, P293, DOI 10.1007/BF00992699
   LLOYD EL, 1988, J COMPUT SYST SCI, V37, P292, DOI 10.1016/0022-0000(88)90009-8
   Malloy BA, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P353, DOI 10.1109/ISSRE.2003.1251057
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   ORENSTEIN T, 1995, J ELECTRON TEST, V7, P71, DOI 10.1007/BF00993315
   PRIYA BG, 2009, P INT C METH MOD COM, P1
   Tahvili S., 2019, MULTICRITERIA OPTIMI
   Tai KC, 1997, P INT COMP SOFTW APP, P602, DOI 10.1109/CMPSAC.1997.625079
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Vergilio Silvia Regina, 2012, International Journal on Software Tools for Technology Transfer, V14, P461, DOI 10.1007/s10009-012-0226-1
NR 42
TC 4
Z9 5
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106438
DI 10.1016/j.infsof.2020.106438
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200013
DA 2024-07-18
ER

PT J
AU Chacón-Luna, AE
   Gutiérrez, AM
   Galindo, JA
   Benavides, D
AF Eva Chacon-Luna, Ana
   Manuel Gutierrez, Antonio
   Galindo, Jose A.
   Benavides, David
TI Empirical software product line engineering: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product lines; Empirical strategies; Case study; Experiment;
   Systematic literature review
ID PROGRAM COMPREHENSION; VARIABILITY; MODEL; CONFIGURATION; ARCHITECTURES;
   ENTERPRISE; EVOLUTION
AB Context: The adoption of Software Product Line Engineering (SPLE) is usually only based on its theoretical benefits instead of empirical evidences. In fact, there is no work that synthesizes the empirical studies on SPLE. This makes it difficult for researchers to base their contributions on previous works validated with an empirical strategy.
   Objective: The objective of this work is to discover and summarize the studies that have used empirical evidences in SPLE limited to those ones with the intervention of humans. This will allow evaluating the quality and to know the scope of these studies over time. Doing so, research opportunities can arise
   Methods: A systematic literature review was conducted. The scope of the work focuses on those studies in which there is human intervention and were published between 2000 and 2018. We considered peer-reviewed papers from journals and top software engineering conferences.
   Results: Out of a total of 1880 studies in the initial set, a total of 62 primary studies were selected after applying a series of inclusion and exclusion criteria. We found that, approximately 56% of the studies used the empirical case study strategy while the rest used experimental strategies. Around 86% of the case studies were performed in an industrial environment showing the penetration of SPLE in industry.
   Conclusion: The interest of empirical studies has been growing since 2008. Around 95.16% of the studies address aspects related to domain engineering while application engineering received less attention. Most of the experiments and case study evaluated showed an acceptable level of quality. The first study found dates from 2005 and since then, the interest in the empirical SPLE has increased.
C1 [Eva Chacon-Luna, Ana] Univ Estatal Milagro, Km 1 1-2 Via Km 26, Milagro, Ecuador.
   [Manuel Gutierrez, Antonio] ISIS Papyrus, Papyrus Pl 1, A-2345 Brunn, Austria.
   [Galindo, Jose A.; Benavides, David] Univ Seville, Dept Lenguajes & Sistemas Informat, Avda Reina Mercedes S-N, Seville 41012, Spain.
C3 Universidad Estatal de Milagro; University of Sevilla
RP Chacón-Luna, AE (corresponding author), Univ Estatal Milagro, Km 1 1-2 Via Km 26, Milagro, Ecuador.
EM achaconl1@unemi.edu.ec; antonio.gutierrez@isis-papyrus.com;
   jagalindo@us.es; benavides@us.es
RI CHACON LUNA, ANA EVA/AHE-9154-2022
OI Chacon-Luna, Ana E./0000-0001-6966-5033; Gutierrez Fernandez, Antonio
   Manuel/0000-0002-2669-5942
FU EU FEDER program; MINECO project OPHELIA [RTI2018-101204-B-C22]; Juan de
   la Cierva postdoctoral program; Universidad Estatal de Milagro; Junta de
   Andalucia METAMORFOSIS project; TASOVA network [MCIU-AEI
   TIN2017-90644-REDT]
FX This work has been partially funded by the EU FEDER program, the MINECO
   project OPHELIA (RTI2018-101204-B-C22); the Juan de la Cierva
   postdoctoral program; the TASOVA network (MCIU-AEI TIN2017-90644-REDT),
   and; the Universidad Estatal de Milagro, and the Junta de Andalucia
   METAMORFOSIS project. Also, we would like to thank Ebrahim Bagheri who
   reviewed the protocol and provided interesting insights for avoiding
   threats to validity. Also anonymous readers/reviewers that helped to
   improve the paper.
CR Accioly P, 2014, J UNIVERS COMPUT SCI, V20, P615
   Ahmed F, 2008, INFORM SOFTWARE TECH, V50, P1098, DOI 10.1016/j.infsof.2007.10.013
   Ahmed F, 2007, J SYST SOFTWARE, V80, P836, DOI 10.1016/j.jss.2006.09.010
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2016, P 20 INT SYST SOFTW
   [Anonymous], 2016, INT S EMP SOFTW ENG
   [Anonymous], 2012, INT SOFTW PROD LIN C
   Asadi M, 2016, EMPIR SOFTW ENG, V21, P1706, DOI 10.1007/s10664-014-9353-5
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Basili VR, 2007, COMMUN ACM, V50, P33, DOI 10.1145/1297797.1297819
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bastos JF, 2017, J SYST SOFTWARE, V131, P112, DOI 10.1016/j.jss.2017.05.052
   Bonifácio R, 2017, SOFTW SYST MODEL, V16, P97, DOI 10.1007/s10270-015-0471-3
   Bosch J, 2011, SOFTWARE PRACT EXPER, V41, P871, DOI 10.1002/spe.1063
   Cetina C, 2013, SCI COMPUT PROGRAM, V78, P2399, DOI 10.1016/j.scico.2012.06.007
   Chavarriaga J., 2019, P 23 INT SYST SOFTW, DOI DOI 10.1145/3336294.3342366
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Costa GCB, 2015, J BIOMED INFORM, V56, P239, DOI 10.1016/j.jbi.2015.05.014
   Cruz M, 2020, IEEE ACCESS, V8, P26773, DOI 10.1109/ACCESS.2019.2952191
   da Silva IF, 2015, INFORM SOFTWARE TECH, V57, P527, DOI 10.1016/j.infsof.2014.06.004
   da Silva IF, 2014, J SYST SOFTWARE, V88, P189, DOI 10.1016/j.jss.2013.10.040
   de Oliveira RP, 2014, J UNIVERS COMPUT SCI, V20, P666
   de Souza LO, 2015, INFORM SOFTWARE TECH, V58, P319, DOI 10.1016/j.infsof.2014.07.004
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Deelstra S, 2009, INFORM SOFTWARE TECH, V51, P195, DOI 10.1016/j.infsof.2008.04.002
   Denger C., 2006, INT S EMP SOFTW ENG
   Dermeval D, 2015, EXPERT SYST APPL, V42, P4950, DOI 10.1016/j.eswa.2015.02.020
   Dey S, 2017, INFORM SOFTWARE TECH, V87, P160, DOI 10.1016/j.infsof.2017.03.004
   Díaz J, 2015, REQUIR ENG, V20, P323, DOI 10.1007/s00766-014-0203-1
   Díaz J, 2014, INFORM SOFTWARE TECH, V56, P727, DOI 10.1016/j.infsof.2014.01.014
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Eklund U, 2013, SCI COMPUT PROGRAM, V78, P2347, DOI 10.1016/j.scico.2012.06.008
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Engström E, 2013, INFORM SOFTWARE TECH, V55, P581, DOI 10.1016/j.infsof.2012.04.009
   Eriksson M, 2009, J SYST SOFTWARE, V82, P435, DOI 10.1016/j.jss.2008.07.046
   Feigenspan J, 2012, IET SOFTW, V6, P488, DOI 10.1049/iet-sen.2011.0172
   Feigenspan Janet, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P66, DOI 10.1049/ic.2011.0008
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Figueiredo E., 2008, INT C SOFTW ENG ACM
   Galster M, 2015, INFORM SOFTWARE TECH, V60, P16, DOI 10.1016/j.infsof.2014.12.003
   Ganesan D, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P13, DOI 10.1109/SPLINE.2006.1691573
   Gonzalez-Huerta J, 2015, INFORM SOFTWARE TECH, V57, P405, DOI 10.1016/j.infsof.2014.05.018
   Guana V, 2013, INFORM SOFTWARE TECH, V55, P541, DOI 10.1016/j.infsof.2012.09.007
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Hanssen GK, 2011, SOFTWARE PRACT EXPER, V41, P883, DOI 10.1002/spe.1064
   Keele S., 2007, Guidelines for performing systematic literature reviews in software engineering Technical report, Ver, V2
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kim J, 2008, J SYST SOFTWARE, V81, P37, DOI 10.1016/j.jss.2007.04.011
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B.A., 2015, Evidence-based Software Engineering and Systematic Reviews, V4, P426
   Koziolek H, 2016, EMPIR SOFTW ENG, V21, P411, DOI 10.1007/s10664-014-9358-0
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Liu YZ, 2017, J SYST SOFTWARE, V133, P126, DOI 10.1016/j.jss.2017.08.024
   Marimuthu C, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P143, DOI 10.1145/3106195.3106212
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Martinez J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P132, DOI 10.1145/3233027.3233038
   Martínez J, 2016, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS IMPROVEMENT (CIMPS 2016): APPLICATIONS IN SOFTWARE ENGINEERING
   Michalik B, 2011, INT SYMP EMP SOFTWAR, P187, DOI 10.1109/ESEM.2011.27
   Myllarniemi V., 2013, INT SOFTW PROD LIN C, P32, DOI DOI 10.1145/2491627.2491631
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Patzke T., 2012, INT SOFTW PROD LIN C
   Pereira JA, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P87, DOI 10.1145/3233027.3233039
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Rabiser R, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P14, DOI 10.1145/3233027.3233028
   Reinhartz-Berger I, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P42, DOI 10.1145/2648511.2648516
   Reinhartz-Berger I, 2017, INFORM SOFTWARE TECH, V87, P81, DOI 10.1016/j.infsof.2017.01.012
   Reinhartz-Berger I, 2014, EMPIR SOFTW ENG, V19, P678, DOI 10.1007/s10664-012-9234-8
   Robson C., 2002, REAL WORLD RES RESOU
   Rubin J., 2013, INT SOFTW PROD LIN C, P286
   Runeson P., 2012, GUIDELINES EXAMPLES
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saeed M, 2016, INFORM SOFTWARE TECH, V71, P1, DOI 10.1016/j.infsof.2015.10.012
   Saier MH, 2007, WATER AIR SOIL POLL, V181, P1, DOI 10.1007/s11270-007-9372-6
   Santos AR, 2016, 20 INT SYST SOFTW PR, P154, DOI [10.1145/2934466.2934486, DOI 10.1145/2934466.2934486]
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   Souza IS, 2013, J SYST SOFTWARE, V86, P1172, DOI 10.1016/j.jss.2012.11.044
   Stein J, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P132, DOI 10.1145/2648511.2648525
   Tacconelli E., 2010, Lancet Infect. Dis, V10, P226, DOI [DOI 10.1016/S1473-3099(10)70065-7, 10.1016/S1473-3099(10)70065-7]
   Thum T., 2016, INT SOFTW PROD LIN C
   Thurimella AK, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P99, DOI 10.1109/SPLC.2008.14
   Thurimella AK, 2013, J SYST SOFTWARE, V86, P1831, DOI 10.1016/j.jss.2013.01.038
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Usman M, 2017, J SYST SOFTWARE, V123, P1, DOI 10.1016/j.jss.2016.09.049
   van der Linden F. J., 2007, BEST IND PRACTICE PR
   Wang Y, 2013, USER MODEL USER-ADAP, V23, P41, DOI 10.1007/s11257-011-9114-8
   Wille D, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P39, DOI 10.1145/3106195.3106202
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Wohlin C., 2012, Experimentation in Software Engineering
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zhang GH, 2014, SOFTWARE QUAL J, V22, P365, DOI 10.1007/s11219-013-9197-z
NR 93
TC 13
Z9 13
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106389
DI 10.1016/j.infsof.2020.106389
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100011
OA Green Published
DA 2024-07-18
ER

PT J
AU Tian, JF
   Xing, WJ
   Li, Z
AF Tian, Junfeng
   Xing, Wenjing
   Li, Zhen
TI BVDetector: A program slice-based binary code vulnerability intelligent
   detection system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Binary program; Vulnerability detection; Deep learning; Program slice;
   Library/API function call
AB Context: Software vulnerability detection is essential to ensure cybersecurity. Currently, most software is published in binary form, thus researchers can only detect vulnerabilities in these software by analysing binary programs. Although existing research approaches have made a substantial contribution to binary vulnerability detection, there are still many deficiencies, such as high false positive rate, detection with coarse granularly, and dependence on expert experience.
   Objective: The goal of this study is to perform fine-grained intelligent detection on the vulnerabilities in binary programs. This leads us to propose a fine-grained representation of binary programs and introduce deep learning techniques to intelligently detect the vulnerabilities.
   Method: We use program slices of library/API function calls to represent binary programs. Additionally, we design and construct a Binary Gated Recurrent Unit (BGRU) network model to intelligently learn vulnerability patterns and automatically detect vulnerabilities in binary programs.
   Results: This approach yields the design and implementation of a program slice-based binary code vulnerability intelligent detection system called BVDetector. We show that BVDetector can effectively detect vulnerabilities related to library/API function calls in binary programs, which reduces the false positive rate and false negative rate of vulnerability detection.
   Conclusion: This paper proposes a program slice-based binary code vulnerability intelligent detection system called BVDetector. The experimental results show that BVDetector can effectively reduce the false negative rate and false positive rate of binary vulnerability detection.
C1 [Tian, Junfeng; Xing, Wenjing; Li, Zhen] Hebei Univ, Sch Cyber Secur & Comp, Baoding, Hebei, Peoples R China.
   [Tian, Junfeng; Xing, Wenjing; Li, Zhen] Hebei Univ, Prov Key Lab High Reliabil Informat Syst, Baoding, Hebei, Peoples R China.
C3 Hebei University; Hebei University
RP Li, Z (corresponding author), Hebei Univ, Sch Cyber Secur & Comp, Baoding, Hebei, Peoples R China.; Li, Z (corresponding author), Hebei Univ, Prov Key Lab High Reliabil Informat Syst, Baoding, Hebei, Peoples R China.
EM lizhen@hbu.edu.cn
RI Tian, Junfeng/AGY-1359-2022; Li, Zhen/AAW-9754-2020
FU National Natural Science Foundation of China [61379116, 61802106];
   Natural Science Foundation of Hebei Province [F2016201244]; Youth
   Foundation of Hebei Educational Committee [QN2016149]
FX This work was supported by the National Natural Science Foundation of
   China [grant numbers 61379116, 61802106]; the Natural Science Foundation
   of Hebei Province [grant number F2016201244]; and the Youth Foundation
   of Hebei Educational Committee [grant number QN2016149].
CR [Anonymous], 2016, P NETW DISTR SYST SE
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2017, COMMON WEAKNESS ENUM
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2018, Word2vec
   [Anonymous], [No title captured]
   Avgerinos T, 2014, COMMUN ACM, V57, P74, DOI 10.1145/2560217.2560219
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   [韩心慧 Han Xinhui], 2017, [清华大学学报. 自然科学版, Journal of Tsinghua University. Science and Technology], V57, P1022
   [侯一民 Hou Yimin], 2017, [计算机应用研究, Application Research of Computers], V34, P2241
   Kim HY, 2015, PLANT MOL BIOL REP, V33, P1634, DOI 10.1007/s11105-015-0860-3
   Li S, 2018, PROC CVPR IEEE, P5457, DOI 10.1109/CVPR.2018.00572
   [李舟军 Li Zhoujun], 2015, [计算机学报, Chinese Journal of Computers], V38, P717
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Montemagni Simonetta, 1998, P COLINGACL WORKSHOP, P87
   Pendleton M, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3005714
   Pewny J., 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Pewny J, 2017, IT-INF TECHNOL, V59, P83, DOI 10.1515/itit-2016-0040
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Shao Si-Hao, 2018, Journal of Software, V29, P1179, DOI 10.13328/j.cnki.jos.005504
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   [王夏菁 Wang Xiajing], 2017, [信息网络安全, Netinfo Security], P1
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Xu ZZ, 2017, PROC INT CONF SOFTW, P462, DOI 10.1109/ICSE.2017.49
   Yamaguchi F, 2015, P IEEE S SECUR PRIV, P797, DOI 10.1109/SP.2015.54
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
NR 37
TC 28
Z9 29
U1 4
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106289
DI 10.1016/j.infsof.2020.106289
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200006
DA 2024-07-18
ER

PT J
AU Assunçao, WKG
   Vergilio, SR
   Lopez-Herrejon, RE
AF Assuncao, Wesley K. G.
   Vergilio, Silvia R.
   Lopez-Herrejon, Roberto E.
TI Automatic extraction of product line architecture and feature models
   from UML class diagram variants
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model merging; Feature model; SPL architecture; Search-based techniques
ID SOFTWARE; LANGUAGES
AB Context Software Product Lines (SPLs) are families of related products developed for specific domains. SPLs commonly emerge from existing variants when their individual maintenance and/or evolution become complex. Even though there exists a vast research literature on SPL extraction, the majority of the approaches have only focused on source code, are partially automated, or do not reflect domain constraints. Such limitations can make more difficult the extraction, management, documentation and generation of some important SPL artifacts such as the product line architecture, a fact that can impact negatively the evolution and maintenance of SPLs.
   Objective: To tackle these limitations, this work presents ModelVars2SPL (Model Variants to SPL Core Assets), an automated approach to aid the development of SPLs from existing system variants.
   Method: The input for ModelVars2SPL is a set of Unified Modeling Language (UML) class diagrams and the list of features they implement. The approach extracts two main assets: (i) Feature Model (FM), which represents the combinations of features, and (ii) a Product Line Architecture (PLA), which represents a global structure of the variants. ModelVars2SPL is composed of four automated steps. We conducted a thorough evaluation of ModelVars2SPL to analyze the artefacts it generates and its performance.
   Results: The results show that the FMs well-represent the features organization, providing useful information to define and manage commonalities and variabilities. The PLAs show a global structure of current variants, facilitating the understanding of existing implementations of all variants.
   Conclusions: An advantage of ModelVars2SPL is to exploit the use of UML design models, that is, it is independent of the programming language, and supports the re-engineering process in the design level, allowing practitioners to have a broader view of the SPL.
C1 [Assuncao, Wesley K. G.] Technol Fed Univ Parana UTFPR, COINF, BR-902490 Toledo, Brazil.
   [Vergilio, Silvia R.] Fed Univ Parana UFPR, DINF, CP 19081, BR-81531980 Curitiba, Parana, Brazil.
   [Lopez-Herrejon, Roberto E.] Univ Quebec, LOGTI, ETS, Montreal, PQ H3C 1K3, Canada.
C3 Universidade Tecnologica Federal do Parana; Universidade Federal do
   Parana; University of Quebec; University of Quebec Montreal; Ecole de
   Technologie Superieure - Canada
RP Assunçao, WKG (corresponding author), Technol Fed Univ Parana UTFPR, COINF, BR-902490 Toledo, Brazil.
EM wesleyk@inf.ufpr.br; silvia@inf.ufpr.br; roberto.lopez@etsmtl.ca
RI Assuncao, Wesley Klewerton Guez/AAA-8331-2020
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091
FU Brazilian Agency CAPES [7126/2014-00]; Brazilian Agency CNPq
   [453678/2014-9, 305358/2012-0, 408356/2018-9]; Natural Sciences and
   Engineering Research Council of Canada [RGPIN-2017-05421]
FX This work was supported by the Brazilian Agencies CAPES: 7126/2014-00
   and CNPq: 453678/2014-9, 305358/2012-0 and 408356/2018-9. Natural
   Sciences and Engineering Research Council of Canada RGPIN-2017-05421.
CR [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2013, JOINT M EUR SOFTW EN, DOI DOI 10.1145/2491411.2491446
   [Anonymous], THESIS
   [Anonymous], [No title captured]
   [Anonymous], 2008, PEARSON ED
   Assunçao WKG, 2017, LECT NOTES COMPUT SC, V10221, P95, DOI 10.1007/978-3-319-56856-0_7
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P1763, DOI 10.1007/s10664-016-9462-4
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Canfora G, 2011, COMMUN ACM, V54, P142, DOI 10.1145/1924421.1924451
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fischer S, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P665, DOI 10.1109/ICSE.2015.218
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kulkarni N, 2017, SOFTWARE PRACT EXPER, V47, P971, DOI 10.1002/spe.2439
   Kumanan K., 2012, Proceedings of the 11th International Colloquium on Paratuberculosis, Sydney, Australia, 5-10 February 2012, P115
   Lago P, 2015, IEEE SOFTWARE, V32, P98, DOI 10.1109/MS.2014.28
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Martinez J, 2014, LECT NOTES COMPUT SC, V8569, P117
   Mefteh M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1602, DOI 10.1145/2695664.2695907
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reinhartz-Berger I, 2020, REQUIR ENG, V25, P47, DOI 10.1007/s00766-018-0307-0
   Rubin J, 2012, LECT NOTES COMPUT SC, V7212, P285, DOI 10.1007/978-3-642-28872-2_20
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Wille D, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P63, DOI 10.1145/3001867.3001875
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 43
TC 21
Z9 24
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2020
VL 117
AR 106198
DI 10.1016/j.infsof.2019.106198
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JN4MX
UT WOS:000496874400004
DA 2024-07-18
ER

PT J
AU Bures, M
   Ahmed, BS
AF Bures, Miroslav
   Ahmed, Bestoun S.
TI Employment of multiple algorithms for optimal path-based test selection
   strategy
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-based testing; Path-based test scenarios; Test set optimization;
   Directed graph; Edge coverage; Edge-pair coverage
ID GENERATION
AB Context Executing various sequences of system functions in a system under test represents one of the primary techniques in software testing. The natural method for creating effective, consistent and efficient test sequences is to model the system under test and employ an algorithm to generate tests that satisfy a defined test coverage criterion. Several criteria for preferred test set properties can be defined. In addition, to optimize the test set from an economic viewpoint, the priorities of the various parts of the system model under test must be defined.
   Objective: Using this prioritization, the test cases exercise the high-priority parts of the system under test by more path combinations than those with low priority (this prioritization can be combined with the test coverage criterion that determines how many path combinations of the individual parts of the system are tested). Evidence from the literature and our observations confirm that finding a universal algorithm that produces a test set with preferred properties for all test coverage criteria is a challenging task. Moreover, for different individual problem instances, different algorithms provide results with the best value of a preferred property. In this paper, we present a portfolio-based strategy to perform the best test selection.
   Method: The proposed strategy first employs a set of current algorithms to generate test sets; then, a preferred property of each test set is assessed in terms of the selected criterion, and finally, the test set with the best value of a preferred property is chosen.
   Results: The experimental results confirm the validity and usefulness of this strategy. For individual instances of 50 system under test models, different algorithms provided results having the best preferred property value; these results varied by the required test coverage level, the size of the priority parts of the model, and the selected test set preferred property criteria.
   Conclusion: In addition to the used algorithms, the proposed strategy can be used to assess the optimality of different path-based testing algorithms and choose a suitable algorithm for the testing.
C1 [Bures, Miroslav; Ahmed, Bestoun S.] Czech Tech Univ, Fac Elect Engn, Dept Comp Sci, Software Testing Intelligent Lab STILL, Karlovo Nam 13, Prague 12135 2, Czech Republic.
   [Ahmed, Bestoun S.] Karlstad Univ, Dept Math & Comp Sci, Karlstad, Sweden.
C3 Czech Technical University Prague; Karlstad University
RP Ahmed, BS (corresponding author), Czech Tech Univ, Fac Elect Engn, Dept Comp Sci, Software Testing Intelligent Lab STILL, Karlovo Nam 13, Prague 12135 2, Czech Republic.; Ahmed, BS (corresponding author), Karlstad Univ, Dept Math & Comp Sci, Karlstad, Sweden.
EM miroslav.bures@fel.cvut.cz; bestoun@kau.se
RI Bures, Miroslav/AAQ-3424-2020; Ahmed, Bestoun S./B-4429-2010
OI Bures, Miroslav/0000-0002-2994-7826; Ahmed, Bestoun
   S./0000-0001-9051-7609
FU project TACR [TH02010296]
FX This research is conducted as a part of the project TACR TH02010296
   Quality Assurance System for the Internet of Things Technology. The
   author would like to thank Dr. Karel Frajtak for helping in the
   experimental data and benchmarks.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Ammann P., 2017, GRAPH COVERAGE WEB A
   Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2003, SOFTWARE TESTING TEC
   [Anonymous], 2009, International Journal of software Engineering and its Applications
   [Anonymous], UNIVERS J COMPUT SCI
   Arora V., 2017, COMPUT LANG SYST STR
   Belli F, 2007, LECT NOTES COMPUT SC, V4746, P95
   Birt JR, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P106, DOI 10.1109/ASWEC.2004.1290463
   Bures M, 2017, LECT NOTES ELECTR EN, V424, P585, DOI 10.1007/978-981-10-4154-9_67
   Bures M, 2015, ADV INTELL SYST, V353, P789, DOI 10.1007/978-3-319-16486-1_78
   Chaim ML, 2013, INFORM PROCESS LETT, V113, P293, DOI 10.1016/j.ipl.2013.02.007
   Denaro G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P947, DOI 10.1109/ICSE.2015.104
   Denaro G, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P71, DOI 10.1109/ICST.2014.18
   Derderian K, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1081
   Dwarakanath A, 2014, LECT NOTES COMPUT SC, V8763, P63, DOI 10.1007/978-3-662-44857-1_5
   Ghiduk AS, 2014, INFORM PROCESS LETT, V114, P304, DOI 10.1016/j.ipl.2014.01.009
   Gökçe N, 2006, LECT NOTES COMPUT SC, V4263, P1060
   Gomes CP, 2001, ARTIF INTELL, V126, P43, DOI 10.1016/S0004-3702(00)00081-3
   Hoseini B, 2014, 2014 7TH INTERNATIONAL SYMPOSIUM ON TELECOMMUNICATIONS (IST), P106
   Kalaji Abdul Salam, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P232, DOI 10.1109/ICSTW.2010.25
   Koomen T., 2013, TMap Next, for Result-driven Testing
   Lam SSB, 2012, PROCEDIA ENGINEER, V30, P191, DOI 10.1016/j.proeng.2012.01.851
   Leyton-Brown K., 2003, IJCAI, V3, P1542
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Lin JC, 2000, PROCEEDINGS OF THE NINTH ASIAN TEST SYMPOSIUM (ATS 2000), P241, DOI 10.1109/ATS.2000.893632
   Nan Li, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P280, DOI 10.1109/ICST.2012.108
   Panthi V, 2015, SMART INNOV SYST TEC, V32, P627, DOI 10.1007/978-81-322-2208-8_57
   Pinkster I., 2006, SUCCESSFUL TEST MANA
   Sayyari F, 2015, SECOND INTERNATIONAL CONGRESS ON TECHNOLOGY, COMMUNICATION AND KNOWLEDGE (ICTCK 2015), P435, DOI 10.1109/ICTCK.2015.7582709
   Shirole M., 2013, SIGSOFT SOFTW ENG NO, V38, P1, DOI DOI 10.1145/2492248.2492274
   Srivastava P.R., 2010, INT J STW ENG APPL, V2, P14
   Srivastava P.R., 2009, P IEEE REG 10 ANN IN, DOI [10.1109/TENCON.2009.5396088, DOI 10.1109/TENCON.2009.5396088]
   Srivatsava PR, 2013, SWARM EVOL COMPUT, V8, P44, DOI 10.1016/j.swevo.2012.08.003
   Su T, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3020266
   van der Aalst L., 2013, TMAP NEXT BUSINESS D
   Yan J, 2008, INFORM PROCESS LETT, V107, P87, DOI 10.1016/j.ipl.2008.01.007
   Yano Thaise, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P236, DOI 10.1109/ICSTW.2010.52
   Zamli KZ, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0195675
   Zamli KZ, 2017, INFORM SCIENCES, V399, P121, DOI 10.1016/j.ins.2017.03.007
   Zamli KZ, 2016, APPL SOFT COMPUT, V44, P57, DOI 10.1016/j.asoc.2016.03.021
NR 42
TC 7
Z9 7
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 21
EP 36
DI 10.1016/j.infsof.2019.06.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cavrak, I
   Bosnic, I
   Ciccozzi, F
   Mirandola, R
AF Cavrak, Igor
   Bosnic, Ivana
   Ciccozzi, Federico
   Mirandola, Raffaela
TI Resilience of distributed student teams to stress factors: A
   longitudinal case-study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Resilience; Stress factors; Global software engineering education;
   Collaboration patterns
ID SOFTWARE; DISTANCE; CONTEXT
AB Context: Teaching global software engineering is continuously evolving and improving to prepare future software engineers adequately. Geographically distributed work in project-oriented software development courses is both demanding and rewarding for student teams, who are susceptible to various risks stemming from different internal and external factors, being the sources of stress and impacting team performance.
   Objective: In this paper, we analyze the resilience of teams of students working in a geographically fully distributed setting. Resilience is analyzed in relation to two representative stress factors: non-contributing team members and changes to customer project requirements. We also reason on team collaboration patterns and analyze potential dependencies among these collaboration patterns, team resilience and stress factors.
   Method: We conduct a longitudinal case-study over five years on our Distributed Software Development (DSD) course. Based on empirical data, we study team resilience to two stress factors by observing their impact on process and product quality aspects of team performance. The same performance aspects are studied for identified collaboration patterns, and bidirectional influence between patterns and resilience is investigated.
   Results: Teams with up to two non-contributing members experience graceful degradation of performance indicators. A large number of non-contributing students almost guarantees the occurrence of educationally undesirable collaboration patterns. Exposed to requirements change stress, less resilient teams tend to focus on delivering the functional product rather than retaining a proper development process.
   Conclusions: Practical recommendations to be applied in contexts similar to our case have been provided at the end of the study. They include suggestions to mitigate the sources of stress, for example, by careful planning the team organization and balancing the number of regular and exchange students, or by discussing the issue of changing requirements with the external customers before the start of the project.
C1 [Cavrak, Igor; Bosnic, Ivana] Univ Zagreb, Fac Elect Engn & Comp, Zagreb, Croatia.
   [Ciccozzi, Federico] Malardalen Univ, Sch Innovat, Vasteras, Sweden.
   [Mirandola, Raffaela] Politecn Milan, Milan, Italy.
C3 University of Zagreb; Malardalen University; Polytechnic University of
   Milan
RP Cavrak, I (corresponding author), Univ Zagreb, Fac Elect Engn & Comp, Zagreb, Croatia.
EM igor.cavrak@fer.hr
RI Bosnic, Ivana/AAA-3087-2021
OI ciccozzi, federico/0000-0002-0401-1036; MIRANDOLA,
   RAFFAELA/0000-0003-3154-2438
FU Knowledge foundation through the project MOMENTUM; Knowledge foundation
   through the project HERO
FX The authors would like to thank all former and current colleagues from
   Malardalen University, Sweden, Politecnico di Milano, Italy, and
   University of Zagreb, Croatia, for the joint effort in working on DSD
   course. This work is partially supported by the Knowledge foundation
   through the projects MOMENTUM and HERO.
CR Alliger GM, 2015, ORGAN DYN, V44, P176, DOI 10.1016/j.orgdyn.2015.05.003
   Amaral A, 2015, PROCEDIA COMPUT SCI, V64, P1182, DOI 10.1016/j.procs.2015.08.549
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2004, Agile and Iterative Development
   Avritzer A, 2015, INT CONF GLOBAL SOFT, P23, DOI 10.1109/ICGSE.2015.29
   Avritzer A, 2014, INT CONF GLOBAL SOFT, P100, DOI 10.1109/ICGSE.2014.19
   Bosnic I., 2019, ACM T COMPUT EDUC, V19
   Bosnic I, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON COLLABORATIVE TEACHING OF GLOBALLY DISTRIBUTED SOFTWARE DEVELOPMENT (CTGDSD), P6, DOI 10.1109/CTGDSD.2013.6635238
   Bosnic I, 2010, CONF SOFTW ENG EDUC, P73, DOI 10.1109/CSEET.2010.27
   Bruegge B, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P30, DOI 10.1109/APSEC.2000.896680
   Carmeli A, 2013, SAFETY SCI, V51, P148, DOI 10.1016/j.ssci.2012.06.002
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Cavrak I., 2003, P ICSE INT WORKSH GL, V04
   Cavrak I, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P112, DOI 10.1145/3196369.3196370
   Cavrak I, 2012, PROC INT CONF SOFTW, P1235, DOI 10.1109/ICSE.2012.6227019
   Clear T, 2016, PROCEEDINGS OF THE 2015 ITICSE CONFERENCE ON WORKING GROUP REPORTS (ITICSE-WGP'15), P1, DOI 10.1145/2858796.2858797
   Coutu D. L., 2002, HARV BUS REV
   Damian D, 2005, REET 2005, P685
   Damian D, 2007, INT REQUIR ENG CONF, P59, DOI 10.1109/RE.2007.51
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Diegmann P., 2017, INT C INF SYST, V12
   Gotel O., 2006, FIE 06, P9, DOI DOI 10.1109/FIE.2006.322632
   Hanisch J, 2007, EUR J INFORM SYST, V16, P793, DOI 10.1057/palgrave.ejis.3000723
   Hinds P., 2006, P 2006 20 ANN C COMP, P343
   Hinds PJ, 2005, ORGAN SCI, V16, P290, DOI 10.1287/orsc.1050.0122
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Horne J.F., 1998, Employment Relations Today, V24, P29, DOI DOI 10.1002/ERT.3910240405
   Johnston L., 2001, P 6 AUSTR WORKSH REQ
   Knutas A., 2013, Proceedings of the 13th Koli Calling International Conference on Computing Education Research, P169
   Komi-Sirvio S, 2005, KNOWL PROCESS MANAG, V12, P108, DOI 10.1002/kpm.225
   Lee G, 2013, IEEE T SOFTWARE ENG, V39, P1753, DOI 10.1109/TSE.2013.40
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lings B, 2006, INT FED INFO PROC, V206, P119
   MacCormack A, 2003, J PROD INNOVAT MANAG, V20, P217, DOI 10.1111/1540-5885.2003004
   MacKellar B, 2012, CONF SOFTW ENG EDUC, P134, DOI 10.1109/CSEET.2012.21
   Mallak L.A., 1998, IND MANAG, V40, P8
   Meneghel I, 2016, J HAPPINESS STUD, V17, P239, DOI 10.1007/s10902-014-9592-6
   Mistry S., 2015, Academy of Management Proceedings, V2015, P17642, DOI DOI 10.5465/AMBPP.2015.17642ABSTRACT
   Nguyen T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ICGSE.2008.39
   Noll J, 2016, COMM COM INF SC, V609, P227, DOI 10.1007/978-3-319-38980-6_17
   Nordio M, 2014, CONF SOFTW ENG EDUC, P109, DOI 10.1109/CSEET.2014.6816788
   Paasivaara M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P285, DOI 10.1109/ICSE.2015.157
   Paasivaara M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1128, DOI 10.1109/ICSE.2013.6606664
   Pears Arnold, 2010, IEEE EDUCON
   Peters AK, 2015, INT CONF GLOBAL SOFT, P61, DOI 10.1109/ICGSE.2015.20
   Sharma S., 2016, VISION, V20, P37, DOI [DOI 10.1177/0972262916628952, 10.1177/0972262916628952]
   Stahl GK, 2010, SCAND J MANAG, V26, P439, DOI 10.1016/j.scaman.2010.09.009
   Surian D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P269, DOI 10.1109/WCRE.2010.38
   Sutcliffe K.M., 2003, Positive Organizational Scholarship, P94
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Wohlin C., 2012, Experimentation in Software Engineering
   Xiao L, 2018, IEEE SOFTWARE, V35, P64, DOI 10.1109/MS.2017.4541052
NR 53
TC 9
Z9 9
U1 2
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 258
EP 274
DI 10.1016/j.infsof.2019.05.011
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200016
DA 2024-07-18
ER

PT J
AU Gezici, B
   Tarhan, A
   Chouseinoglou, O
AF Gezici, Bahar
   Tarhan, Ayca
   Chouseinoglou, Oumout
TI Internal and external quality in the evolution of mobile software: An
   exploratory study in open-source market
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Internal quality; External quality; Quality in use;
   Software evolution; C & K metric set; Lehman laws; ISO/IEC 25010; DeLone
   and McLean model; Open source; OSS; Mobile software
ID INFORMATION-SYSTEMS SUCCESS; EMPIRICAL VALIDATION; METRICS; MODEL; LAWS
AB Context: Mobile applications evolve rapidly and grow constantly to meet user requirements. Satisfying these requirements may lead to poor design choices that can degrade internal quality and performance, and consequently external quality and quality in use. Therefore, monitoring the characteristics of mobile applications through their evolution is important to facilitate maintenance and development.
   Objective: This study aims to explore internal quality, external quality and the relation between these two by carrying out an embedded, multiple case study that includes two cases in different functional domains. In each case study, the evolution of three open-source mobile applications having similar features in the same domain and platform is investigated with the analysis of a number of code-based and community-based metrics, to understand whether they are significantly related to quality characteristics.
   Method: A total of 105 releases of the six mobile applications are analyzed to understand internal quality, where code-based characteristics are employed in the light of Lehman's Increasing Complexity, Continuous Growth, and Decreasing Quality laws. External quality is explored by adapting DeLone and McLean model of information system success and using community-based metrics, when data is available for the included releases, to derive a corresponding success index. Finally, internal and external quality relationship is investigated by applying Spearman's correlation analysis on metrics data from 91 corresponding releases.
   Results: The analysis of Lehman's laws shows that only the law of Continuous Growth is validated for the selected mobile applications in both case studies. Spearman's analysis results indicate that the internal quality attribute of 'Understandability' is negatively related to 'Success Index' for Case Study A and 'LCOM' is negatively related to 'Success Index' for Case Study B. No other significant relationship between the internal quality attributes and the Success Index is observed; but specific to community-based metrics, some significant relationships with code-based attributes were determined.
   Conclusion: Our exploratory study is unique for the method it employs for exploring the relationship between internal and external quality in the evolution of mobile applications. Yet, our findings should be used with caution as they are derived from a limited number of applications. Therefore, this study should be considered to provide initial evidence for applicability of the method and a degree of confidence for repeating similar studies in wider contexts.
C1 [Gezici, Bahar; Tarhan, Ayca] Hacettepe Univ, Software Engn Res Grp HUSE, Comp Engn Dept, Ankara, Turkey.
   [Chouseinoglou, Oumout] Hacettepe Univ, Software Engn Res Grp HUSE, Ind Engn Dept, Ankara, Turkey.
C3 Hacettepe University; Hacettepe University
RP Gezici, B (corresponding author), Hacettepe Univ, TR-06800 Ankara, Turkey.
EM bahargezici@hacettepe.edu.tr; atarhan@hacettepe.edu.tr;
   uhus@hacettepe.edu.tr
RI Chouseinoglou, Oumout/M-3712-2018; KOLUKISA, AYÇA/HKN-2117-2023
OI Chouseinoglou, Oumout/0000-0002-8513-351X; Gezici,
   Bahar/0000-0001-6704-3134
CR Abreu R, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P153
   Aggarwal KK, 2006, J OBJECT TECHNOL, V5, P149, DOI 10.5381/jot.2006.5.8.a5
   [Anonymous], 15 WORKSH INF TECHN
   [Anonymous], ASS INF SYST AIS ELE
   [Anonymous], J INF SCI ENG
   [Anonymous], INT C SOFTWARE ENG
   [Anonymous], BR HIST COMPUT 1
   [Anonymous], P ANN HAW INT C SYST
   [Anonymous], QUALITY
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], BOOK
   [Anonymous], P WORK C MIN SOFTW R
   [Anonymous], 2011, 25010 ISOIEC
   [Anonymous], J SYST SOFTW
   [Anonymous], NUMB APPS AV LEAD AP
   [Anonymous], 2008, P 29 INT C INF SYST
   [Anonymous], SOFTWARE EVOLUTION
   [Anonymous], SOFTWARE MAINTENANCE
   [Anonymous], COMMENTING PRACTICE
   [Anonymous], FREE OPEN SOURCE SOF
   [Anonymous], IEE P SOFTW
   [Anonymous], DETERMINAZIONE EMPIR
   [Anonymous], SOFTWARE EVOLUTION S
   [Anonymous], GAZI U FAC ENG ARCHI
   [Anonymous], 2005, P 38 ANN HAW INT C S, DOI DOI 10.1109/HICSS.2005.38
   [Anonymous], P 2006 ACM IEEE INT
   [Anonymous], 2002, INT C INF SYST 2002
   [Anonymous], COMPUT LONG BEACH CA
   [Anonymous], EVALUATION CODE METR
   [Anonymous], FUNDAM SOFTW ENG
   [Anonymous], THESIS
   [Anonymous], P 2010 ACM IEEE INT
   Anwer S, 2017, PROCEEDINGS OF 2017 INTERNATIONAL CONFERENCE ON COMMUNICATION, COMPUTING AND DIGITAL SYSTEMS (C-CODE), P211, DOI 10.1109/C-CODE.2017.7918930
   Ayyildiz TE, 2017, J FAC ENG ARCHIT GAZ, V32, P887, DOI 10.17341/gazimmfd.337641
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Capiluppi A, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P113, DOI 10.1109/IWPSE.2004.1334775
   Capiluppi A, 2003, PROC IEEE INT CONF S, P65, DOI 10.1109/ICSM.2003.1235407
   Chevalier JA, 2006, J MARKETING RES, V43, P345, DOI 10.1509/jmkr.43.3.345
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Conley C.A., 2009, System Sciences, P1
   Corral L, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P22, DOI 10.1109/MobileSoft.2015.10
   Corral L, 2012, PROCEDIA COMPUT SCI, V10, P1202, DOI 10.1016/j.procs.2012.06.173
   Cortimiglia MN, 2011, IT PROF, V13, P51, DOI 10.1109/MITP.2011.84
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   Crowston K., 2003, P 24 INT C INF SYST, P28
   Dedrick J., 2004, Proceedings of the 37th Annual Hawaii International Conference on System Sciences
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   Di Penta M, 2007, PROC IEEE INT CONF S, P64
   Dimuro GP, 2010, BRAZ WORKSH SOC SIM, P66, DOI 10.1109/BWSS.2010.18
   Dubey SK., 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI DOI 10.1145/2020976.2020983
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Feller J., 2002, Understanding Open Source Software development
   Fernandez-Ramil J, 2009, INT FED INFO PROC, V299, P170
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Gonzalez-Barahona JM, 2014, J SOFTW-EVOL PROC, V26, P589, DOI 10.1002/smr.1615
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Gorton I, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P555, DOI 10.1109/ICSE.2002.1007999
   Gregor S, 2013, MIS QUART, V37, P337, DOI 10.25300/MISQ/2013/37.2.01
   Grewal R, 2006, MANAGE SCI, V52, P1043, DOI 10.1287/mnsc.1060.0550
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Herraiz I, 2009, PROC IEEE INT CONF S, P439, DOI 10.1109/ICSM.2009.5306299
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hu N., 2006, P 7 ACM C EL COMM
   Islam R., 2010, International Journal of Engineering Technology, V10, P104
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Kendall M. G., 1948, RANK CORRELATION MET
   Lakatos I., 2015, PROOFS REFUTATIONS L
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lehman MM, 2003, INFORM PROCESS LETT, V88, P33, DOI 10.1016/S0020-0190(03)00382-X
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   LEHMAN MM, 1997, P 4 INT SOFTW METR S
   Li DG, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1855
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Mann HB, 1945, ECONOMETRICA, V13, P245, DOI 10.2307/1907187
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meirelles P., 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P11, DOI 10.1109/SBES.2010.27
   Midha V, 2012, J SYST SOFTWARE, V85, P895, DOI 10.1016/j.jss.2011.11.010
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Newhook R, 2015, PROCEDIA MANUF, V3, P2026, DOI 10.1016/j.promfg.2015.07.250
   O'Reilly T, 1999, COMMUN ACM, V42, P32, DOI 10.1145/299157.299164
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Peng Y, 2007, J SYST SOFTWARE, V80, P1, DOI 10.1016/j.jss.2006.03.049
   RAMSEY PH, 1989, J EDUC STAT, V14, P245, DOI 10.2307/1165017
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Rosenberg L.H., 1997, Crosstalk J., V10, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos C, 2013, J STRATEGIC INF SYST, V22, P26, DOI 10.1016/j.jsis.2012.07.004
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Syer MD, 2015, SOFTWARE QUAL J, V23, P485, DOI 10.1007/s11219-014-9238-2
   Wang Yi, 2007, SIGSOFT Software Engineering Notes, V32, P7
   Xie GW, 2009, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSM.2009.5306356
   Yin R.K., 2014, Case Study Research: Design and Methods, P282
   Zar JH, 2005, ENCY BIOSTATISTICS, V7
   Zhang JX, 2013, 2013 IEEE WIRELESS COMMUNICATIONS AND NETWORKING CONFERENCE WORKSHOPS (WCNCW), P1, DOI [10.1109/WCNCW.2013.6533305, 10.1109/PLASMA.2013.6633336]
NR 110
TC 9
Z9 11
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 178
EP 200
DI 10.1016/j.infsof.2019.04.002
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IA9TG
UT WOS:000469899100014
DA 2024-07-18
ER

PT J
AU Horkoff, J
   Maiden, NA
   Asboth, D
AF Horkoff, J.
   Maiden, N. A.
   Asboth, D.
TI Creative goal modeling for innovative requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Creativity; Goal modeling
AB Context When determining the functions and qualities (a.k.a. requirements) for a system, creativity is key to drive innovation and foster business success. However, creative requirements must be practically operationalized, grounded in concrete functions and system interactions. Requirements Engineering (RE) has produced a wealth of methods centered around goal modeling, in order to graphically explore the space of alternative requirements, linking functions to goals and dependencies. In parallel work, creativity theories from the social sciences have been applied to the design of creative requirements workshops, pushing stakeholders to develop innovative systems. Goal models tend to focus on what is known, while creativity workshops are expensive, require a specific skill set to facilitate, and produce mainly paper-based, unstructured outputs. Objective Our aim in this work is to explore beneficial combinations of the two areas of work in order to overcome these and other limitations, facilitating creative requirements elicitation, supported by a simple extension of a well-known and structured requirements modeling technique. Method We take a Design Science approach, iterating over exploratory studies, design, and summative validation studies. Results The result is the Creative Leaf tool and method supporting creative goal modeling for RE. Conclusion We support creative RE by making creativity techniques more accessible, producing structured digital outputs which better match to existing RE methods with associated analysis procedures and transformations.
C1 [Horkoff, J.] Chalmers, Gothenburg, Sweden.
   [Horkoff, J.] Univ Gothenburg, Gothenburg, Sweden.
   [Maiden, N. A.; Asboth, D.] City Univ London, London, England.
C3 Chalmers University of Technology; University of Gothenburg; City
   University London
RP Horkoff, J (corresponding author), Chalmers, Gothenburg, Sweden.; Horkoff, J (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM jenho@chalmers.se; neil.maiden.1@city.ac.uk; david.asboth.2@city.ac.uk
OI Horkoff, Jennifer/0000-0002-2019-5277
FU ERC Marie Skodowska-Curie Intra European Fellow-ship
   [PIEF-GA-2013-627489]; Natural Sciences and Engineering Research Council
   of Canada Postdoctoral Fellowship
FX This work was supported by an ERC Marie Skodowska-Curie Intra European
   Fellow-ship (PIEF-GA-2013-627489) and by a Natural Sciences and
   Engineering Research Council of Canada Postdoctoral Fellowship (Sept.
   2014-Aug. 2016).
CR Allen E., 2007, Quality Progress, P64
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], 2011, ISTAR SHOWCASE 11 EX
   [Anonymous], 2002, COMMUN ACM, V45, P88, DOI [10.1145/570907.570938, DOI 10.1145/570907.570938]
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], 2011, I WILD GUIDELINES
   BERENBACH B, 2009, SOFTWARE SYSTEMS REQ
   Bhowmik T, 2015, REQUIR ENG, V20, P253, DOI 10.1007/s00766-015-0226-2
   Burnay C., 2016, P 16 INT REQ ENG C
   Collage, 2016, COLLAGE BECREATIVE E
   Csikszentmihalyi M., 2014, PSYCHOL OPTIMAL EXPE, P209
   Dalpiaz F., 2016, ISTAR 20 LANGUAGE GU
   Franch X, 2010, LECT NOTES COMPUT SC, V6051, P439, DOI 10.1007/978-3-642-13094-6_34
   Gralha C, 2014, LECT NOTES COMPUT SC, V8484, P91, DOI 10.1007/978-3-319-07881-6_7
   Greene SL, 2002, COMMUN ACM, V45, P100, DOI 10.1145/570907.570941
   Grubb A. M., 2016, LEAF BETA ISTAR MODE
   Guilford J.P., 1967, The nature of human intelligence
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Horkoff J., 2015, P 8 INT I WORKSH, P37
   Horkoff J., 2018, SUPPORTING MAT CREAT, V1, DOI [10.17632/79nwr89r3n.1, DOI 10.17632/79NWR89R3N.1]
   Horkoff J., 2016, P 24 INT REQ ENG C
   Horkoff J., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P675
   Horkoff J., 2015, P 5 INT WORKSH CREAT
   Horkoff J., 2016, P ISTAR, V16
   Horkoff J., 2015, PROC C CREATIVITY CO, P165
   Horkoff J, 2015, INT J INF SYST MODEL, V6, P1, DOI 10.4018/IJISMD.2015040101
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jones S., 2011, Proceedings of the 8th ACM Conference on Creativity and Cognition, P349
   Karlsen IK, 2009, LECT NOTES COMPUT SC, V5512, P162, DOI 10.1007/978-3-642-02050-6_14
   Kasanen E., 1993, J MANAG ACCOUNT RES, V5, P243
   Kerne A., 2004, P INT SYST PRACT THE, P1
   Kotonya G., 1998, Requirements engineering: processes and techniques
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Lubart T, 2005, INT J HUM-COMPUT ST, V63, P365, DOI 10.1016/j.ijhcs.2005.04.002
   Mahaux Martin, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P101, DOI 10.1007/978-3-642-28714-5_9
   Mahaux M., 2013, Proceedings of the International Conference on Research Challenges in Information Science (RCIS), P1
   Maiden N, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P105, DOI 10.1109/RE.2005.34
   Maiden N, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1331305
   Maiden Neil, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P57, DOI 10.1109/RE.2010.16
   Mavin A, 2017, INT REQUIR ENG CONF, P174, DOI 10.1109/RE.2017.40
   Mich L, 2005, REQUIR ENG, V10, P262, DOI 10.1007/s00766-005-0008-3
   Nguyen L, 2009, INFORM SOFTWARE TECH, V51, P655, DOI 10.1016/j.infsof.2008.09.002
   Object Management Group, 2015, BUS MOT MOD BMM
   Osborn A. F., 1963, APPL IMAGINATION
   Poincare H., 2003, Science and Method
   Rayasam S., 2015, P 8 INT I WORKSH, P67
   Robertson S., 2012, MASTERING REQUIREMEN
   Roden M. A., 2004, CREATIVE MIND MYTHS
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Sakhnini V, 2012, REQUIR ENG, V17, P171, DOI 10.1007/s00766-011-0133-0
   Svensson RB, 2015, INT REQUIR ENG CONF, P66, DOI 10.1109/RE.2015.7320409
   The Open Group, 2013, ARCH 2 1 MOT EXT
   Wohlin C., 2014, EXPT SOFTWARE ENG
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zachos K, 2008, INT REQUIR ENG CONF, P145, DOI 10.1109/RE.2008.39
NR 56
TC 9
Z9 10
U1 0
U2 33
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 85
EP 100
DI 10.1016/j.infsof.2018.09.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Cha, S
   Jeong, S
   Oh, H
AF Cha, Sooyoung
   Jeong, Sehun
   Oh, Hakjoo
TI A scalable learning algorithm for data-driven program analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data-driven program analysis; Learning algorithm
ID STRATEGY
AB Context: Recently data-driven program analysis has emerged as a promising approach for building cost-effective static analyzers. The ideal static analyzer should apply accurate but costly techniques only when they benefit. However, designing such a strategy for real-world programs is highly nontrivial and requires labor-intensive work. The goal of data-driven program analysis is to automate this process by learning the strategy from data through a learning algorithm.
   Objective: Current learning algorithms for data-driven program analysis are not scalable enough to be used with large codebases. The objective of this paper is to overcome this shortcoming and present a new algorithm that is able to efficiently learn a strategy from large codebases.
   Method: The key idea is to use an oracle and transform the existing blackbox learning problem into a whitebox one that is much easier to solve. The oracle quantifies the relative importance of each part of the program with respect to the analysis precision. The oracle can be obtained by running the most and least precise analyses only once over the codebase.
   Results: Our learning algorithm is much faster than the existing algorithms while producing high quality strategies. The evaluation is done with 140 open-source C programs, comprising of 2.1 MLoC in total. Learning at this large scale was previously impractical.
   Conclusion: Our work advances the state-of-the-art of data-driven program analysis by addressing the scalability issue of the existing learning algorithm. Our technique will make the data-driven approach more practical in the real-world.
C1 [Cha, Sooyoung; Jeong, Sehun; Oh, Hakjoo] Korea Univ, Dept Comp Sci & Engn, Seoul, South Korea.
C3 Korea University
RP Oh, H (corresponding author), Korea Univ, Dept Comp Sci & Engn, Seoul, South Korea.
EM sooyoungcha@korea.ac.kr; gifaranga@korea.ac.kr; hakjoo_oh@korea.ac.kr
RI ‍, 오학주[ 부교수 / 컴퓨터학과 ]/AAW-5194-2020
OI Cha, Sooyoung/0000-0002-4697-8536
FU Samsung Research Funding & Incubation Center of Samsung Electronics
   [SRFC-IT1701-09]; Basic Science Research Program through the National
   Research Foundation of Korea (NRF) - Ministry of Science, ICT & Future
   Planning [NRF-2016R1C1B2014062]
FX This work was supported by Samsung Research Funding & Incubation Center
   of Samsung Electronics under Project Number SRFC-IT1701-09. This
   research was also supported by Basic Science Research Program through
   the National Research Foundation of Korea (NRF) funded by the Ministry
   of Science, ICT & Future Planning (NRF-2016R1C1B2014062).
CR Blanchet B, 2002, LECT NOTES COMPUT SC, V2566, P85
   Blanchet B, 2003, PLDI
   Cha S, 2016, LECT NOTES COMPUT SC, V10017, P25, DOI 10.1007/978-3-319-47958-3_2
   Chae K., 2017, P ACM PROGR LANG 1 O, DOI 10.1145/3133925
   Cousot P, 2007, LECT NOTES COMPUT SC, V4435, P272
   Cousot P, 2009, FORM METHOD SYST DES, V35, P229, DOI 10.1007/s10703-009-0089-6
   Grigore R., 2016, POPL
   Guyer S., 2003, STATIC ANAL, P1073
   Halbwachs N, 1997, FORM METHOD SYST DES, V11, P157, DOI 10.1023/A:1008678014487
   Heintze N, 2001, ACM SIGPLAN NOTICES, V36, P24, DOI 10.1145/381694.378802
   Heo K, 2017, PROC INT CONF SOFTW, P519, DOI 10.1109/ICSE.2017.54
   Heo K, 2016, LECT NOTES COMPUT SC, V9837, P237, DOI 10.1007/978-3-662-53413-7_12
   Jeong S, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133924
   Kastrinis G, 2013, ACM SIGPLAN NOTICES, V48, P423, DOI 10.1145/2499370.2462191
   Kim S., 2015, SOFTW PRACT EXP
   Liang P, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P31, DOI 10.1145/1926385.1926391
   Mine A., 2006, COMPUT
   Oh H., 2014, SPARROW
   Oh H., 2012, PLDI
   Oh H, 2015, ACM SIGPLAN NOTICES, V50, P572, DOI [10.1145/2858965.2814309, 10.1145/2814270.2814309]
   Oh H, 2014, ACM SIGPLAN NOTICES, V49, P475, DOI [10.1145/2594291.2594318, 10.1145/2666356.2594318]
   Rasmussen CE, 2005, ADAPT COMPUT MACH LE, P1
   Smaragdakis Y, 2014, ACM SIGPLAN NOTICES, V49, P485, DOI [10.1145/2666356.2594320, 10.1145/2594291.2594320]
   Sridharan M, 2005, ACM SIGPLAN NOTICES, V40, P59, DOI 10.1145/1103845.1094817
   Sridharan M, 2006, ACM SIGPLAN NOTICES, V41, P387, DOI 10.1145/1133981.1134027
   Tan T, 2016, LECT NOTES COMPUT SC, V9837, P489, DOI 10.1007/978-3-662-53413-7_24
   Zhang XD, 2013, AIP CONF PROC, V1542, P365, DOI 10.1063/1.4811943
   Zhang X, 2014, ACM SIGPLAN NOTICES, V49, P239, DOI [10.1145/2594291.2594327, 10.1145/2666356.2594327]
NR 28
TC 4
Z9 5
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 1
EP 13
DI 10.1016/j.infsof.2018.07.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900001
DA 2024-07-18
ER

PT J
AU Shahrivar, S
   Elahi, S
   Hassanzadeh, A
   Montazer, G
AF Shahrivar, Shahrokh
   Elahi, Shaban
   Hassanzadeh, Alireza
   Montazer, Gholamali
TI A business model for commercial open source software: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Business model; Commercial open source software (COSS); Systematic
   literature review
ID COMPETITION; STRATEGIES; INNOVATION; FRAMEWORK; IMPACT
AB Context Commercial open source software (COSS) and community open source software (OSS) are two types of open source software. The former is the newer concept with the grounds for research such as business model. However, in the literature of open source software, the revenue model has been studied as a business model, which is one component of the business model. Therefore, there is a need for a more complete review of the COSS business model with all components.
   Objective: The purpose of this research is to describe and present the COSS business model with all its components.
   Method: A systematic literature review of the COSS business model was conducted and 1157 studies were retrieved through search in six academic databases. The result of the process of selecting the primary studies was 21 studies. By backward snowballing, we discovered 10 other studies, and thus a total of 31 studies were found. Then, the grounded theory coding procedures were used to determine the characteristics and components of the COSS business model.
   Results: The COSS business model was presented with value proposition, value creation & delivery, and value capture. This business model includes eight components: COSS products and complementarities, COSS clients and users, COSS competitive strategies, organizational aspects of COSS, position of COSS producers in the value network, resources and capabilities of COSS business, COSS revenue sources, and COSS cost-benefit.
   Conclusion: This study provides a complete illustration of the COSS business model. Identifies COSS generic competitive strategies. By cost-benefit component, we have considered both tangible and intangible components. This business model is especially effective in developing countries. In future research, it is necessary to review the management of the COSS community, the organization, the new revenue models for disruptive ability of open source software, and the localization of open source software.
C1 [Shahrivar, Shahrokh; Elahi, Shaban; Hassanzadeh, Alireza] Tarbiat Modares Univ, Sch Management & Econ, Dept Informat Technol Management, Tehran, Iran.
   [Montazer, Gholamali] Tarbiat Modares Univ, Dept Informat Technol Engn, Tehran, Iran.
C3 Tarbiat Modares University; Tarbiat Modares University
RP Elahi, S (corresponding author), Tarbiat Modares Univ, Sch Management & Econ, Dept Informat Technol Management, Tehran, Iran.
EM s.shahrivar@modares.ac.ir; elahi@modares.ac.ir;
   ar_hassanzadeh@modares.ac.ir; montazer@modares.ac.ir
RI Elahi, Shaban/AAD-2198-2022; Montazer, Gholam Ali/D-1831-2010
OI Elahi, Shaban/0000-0002-1598-4431; hassanzadeh,
   alireza/0000-0003-3015-3019; attarpour, mohammadreza/0000-0001-6258-5786
CR Ågerfalk PJ, 2008, MIS QUART, V32, P385
   Alexy O, 2013, RES POLICY, V42, P1325, DOI 10.1016/j.respol.2013.04.007
   Allan G., 2003, ELECT J BUSINESS RES, V2, P1
   Amit R, 2001, STRATEGIC MANAGE J, V22, P493, DOI 10.1002/smj.187
   Andersen-Gott M, 2012, INT J INFORM MANAGE, V32, P106, DOI 10.1016/j.ijinfomgt.2011.10.003
   Angot Jaques., 2015, J BUS STRAT, DOI [10.1108/JBS-11-2013-0111, DOI 10.1108/JBS-11-2013-0111]
   [Anonymous], CUSTOMER VALUE PROPO
   [Anonymous], ROB COMPUT INTEGR MA
   [Anonymous], ALL HANDS M OMII UK
   [Anonymous], J TECHNOL MANAGE INN
   [Anonymous], J CURRICULUM STUD
   [Anonymous], 2017, OPEN SOURCE SYSTEMS
   [Anonymous], STRATEGIC MANAGEMENT
   [Anonymous], OPEN SOURCE SOFTWARE
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], 40 ANN HAW INT C SYS
   [Anonymous], DISRUPTIVE BUSINESS
   [Anonymous], ICSOB 2013
   [Anonymous], FREE OPEN SOURCE SOF
   [Anonymous], BUSINESS MODEL INNOV
   [Anonymous], FRONTIERS E BUSINESS
   [Anonymous], 2016, INFO
   Asundi J, 2012, DECIS SUPPORT SYST, V54, P153, DOI 10.1016/j.dss.2012.05.001
   Axelsson J, 2014, INFORM SOFTWARE TECH, V56, P1457, DOI 10.1016/j.infsof.2014.03.011
   Balka K., 2011, Open source product development: The meaning and relevance of openness
   Bonaccorsi A, 2006, MANAGE SCI, V52, P1085, DOI 10.1287/mnsc.1060.0547
   Bouwman H., 2008, Mobile Service Innovation and Business Models
   Câmara G, 2007, J AM SOC INF SCI TEC, V58, P121, DOI 10.1002/asi.20444
   Capra E, 2008, INT FED INFO PROC, V275, P1
   Capra E, 2009, INT FED INFO PROC, V299, P225
   Casadesus-Masanell R, 2010, MANAG RES, V8, P123, DOI 10.1108/1536-541011066470
   Cheng HK, 2011, J MANAGE INFORM SYST, V27, P201, DOI 10.2753/MIS0742-1222270407
   Chesbrough H, 2002, IND CORP CHANGE, V11, P529, DOI 10.1093/icc/11.3.529
   Chesbrough H., 2007, STRATEGY LEADERSHIP, V35, P12, DOI DOI 10.1108/10878570710833714
   Daft R.L., 1989, ORG THEORY DESIGN
   Dahan NM, 2010, LONG RANGE PLANN, V43, P326, DOI 10.1016/j.lrp.2009.11.003
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Demil B, 2010, LONG RANGE PLANN, V43, P227, DOI 10.1016/j.lrp.2010.02.004
   Deodhar SJ, 2012, J STRATEGIC INF SYST, V21, P274, DOI 10.1016/j.jsis.2012.06.001
   Dubosson-Torbay M., 2001, THUNDERBIRD INT BUS, V44, P5, DOI [DOI 10.1002/TIE.1036, 10.1002/tie.1036]
   Economides N, 2006, MANAGE SCI, V52, P1057, DOI 10.1287/mnsc.1060.0549
   Feller J, 2008, J DATABASE MANAGE, V19, P95, DOI 10.4018/jdm.2008040105
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Gnatzy T, 2012, TECHNOL FORECAST SOC, V79, P688, DOI 10.1016/j.techfore.2011.08.001
   Goode S, 2005, INFORM MANAGE-AMSTER, V42, P669, DOI 10.1016/j.im.2004.01.011
   Hagel J, 2009, HARVARD BUS REV, V87, P86
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Hauge O, 2009, INT FED INFO PROC, V299, P70
   Hecker Frank., 2000, SETTING SHOP BUSINES
   Höfer CN, 2011, J INTERNET SERV APPL, V2, P81, DOI 10.1007/s13174-011-0027-x
   Hopkinson A, 2009, INFORM DEV, V25, P304, DOI 10.1177/0266666909349678
   Hyatt J, 2008, MIT SLOAN MANAGE REV, V50, P15
   Jaisingh J, 2008, J MANAGE INFORM SYST, V25, P241, DOI 10.2753/MIS0742-1222250307
   Johansson B, 2008, J ENTERP INF MANAG, V21, P649, DOI 10.1108/17410390810911230
   Johansson B, 2009, INT FED INFO PROC, V299, P143
   Johnson MW, 2008, HARVARD BUS REV, V86, P50
   Kapitsaki GM, 2015, J SYST SOFTWARE, V102, P72, DOI 10.1016/j.jss.2014.12.050
   Kessler EH, 2000, R&D MANAGE, V30, P213, DOI 10.1111/1467-9310.00172
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Koenig J., 2004, IT MANAGERS J
   Krishnamurthy S., 2005, Perspectives on free and open source software, P279
   Morgan L, 2014, J STRATEGIC INF SYST, V23, P226, DOI 10.1016/j.jsis.2014.07.001
   Morris M, 2005, J BUS RES, V58, P726, DOI 10.1016/j.jbusres.2003.11.001
   Nenonen Suvi, 2010, International Journal of Quality and Service Sciences, V2, P43, DOI 10.1108/17566691011026595
   Osterwalder A., 2010, BUSINESS MODEL GENER, DOI DOI 10.1111/J.1540-5885.2012.00977_2.X
   Osterwalder A., 2005, COMMUNICATIONS ASS I, V15, P751
   Pereira BA, 2015, J AIR TRANSP MANAG, V44-45, P70, DOI 10.1016/j.jairtraman.2015.02.006
   Poel Martijn, 2007, Info, V9, P86, DOI 10.1108/14636690710816471
   Porter M.E., 1985, Competitive Strategy
   Rajala R, 2012, EUR J MARKETING, V46, P1368, DOI 10.1108/03090561211248071
   Raymond E., 1999, CATHEDRAL BAZAAR MUS
   Richardson J, 2008, STRATEG CHANG, V17, P133, DOI 10.1002/jsc.821
   Riehle D, 2007, COMPUTER, V40, P25, DOI 10.1109/MC.2007.147
   Riehle D, 2015, PROGR IS, P25, DOI 10.1007/978-3-662-47011-4_2
   Riehle D, 2012, INF SYST E-BUS MANAG, V10, P5, DOI 10.1007/s10257-010-0149-x
   Sacks M, 2015, J MANAGE INFORM SYST, V32, P268, DOI 10.1080/07421222.2015.1099391
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Schaarschmidt M, 2011, IFIP ADV INF COMM TE, V366, P16
   Sen R, 2007, J MANAGE INFORM SYST, V24, P233, DOI 10.2753/MIS0742-1222240107
   Sharma S, 2016, J ASIA BUS STUD, V10, P105, DOI 10.1108/JABS-01-2015-0009
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Stuermer M, 2009, R&D MANAGE, V39, P170, DOI 10.1111/j.1467-9310.2009.00548.x
   Vitari C, 2009, EUR J INFORM SYST, V18, P249, DOI 10.1057/ejis.2009.13
   Westenholz A, 2009, RES SOCIOL ORGAN-RES, V27, P283, DOI 10.1108/S0733-558X(2009)0000027011
NR 87
TC 16
Z9 20
U1 3
U2 74
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 202
EP 214
DI 10.1016/j.infsof.2018.06.018
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GU9ZY
UT WOS:000445717000015
DA 2024-07-18
ER

PT J
AU Morrison, P
   Moye, D
   Pandita, R
   Williams, L
AF Morrison, Patrick
   Moye, David
   Pandita, Rahul
   Williams, Laurie
TI Mapping the field of software life cycle security metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metrics; Measurement; Security
AB Context: Practitioners establish a piece of software's security objectives during the software development process. To support control and assessment, practitioners and researchers seek to measure security risks and mitigations during software development projects. Metrics provide one means for assessing whether software security objectives have been achieved. A catalog of security metrics for the software development life cycle could assist practitioners in choosing appropriate metrics, and researchers in identifying opportunities for refinement of security measurement.
   Objective: The goal of this research is to support practitioner and researcher use of security measurement in the software life cycle by cataloging security metrics presented in the literature, their validation, and the subjects they measure.
   Method: We conducted a systematic mapping study, beginning with 4818 papers and narrowing down to 71 papers reporting on 324 unique security metrics. For each metric, we identified the subject being measured, how the metric has been validated, and how the metric is used. We categorized the metrics, and give examples of metrics for each category.
   Results: In our data, 85% of security metrics have been proposed and evaluated solely by their authors, leaving room for replication and confirmation through field studies. Approximately 60% of the metrics have been empirically evaluated, by their authors or by others. The available metrics are weighted heavily toward the implementation and operations phases, with relatively few metrics for requirements, design, and testing phases of software development. Some artifacts and processes remain unmeasured. Measured by phase, Testing received the least attention, with 1.5% of the metrics.
   Conclusions: At present, the primary application of security metrics to the software development life cycle in the literature is to study the relationship between properties of source code and reported vulnerabilities. The most-cited and most used metric, vulnerability count, has multiple definitions and operationalizations. We suggest that researchers must check vulnerability count definitions when making comparisons between papers. In addition to refining vulnerability measurement, we see research opportunities for greater attention to metrics for the requirement, design, and testing phases of development. We conjecture from our data that the field of software life cycle security metrics has yet to converge on an accepted set of metrics.
C1 [Morrison, Patrick; Moye, David; Pandita, Rahul; Williams, Laurie] North Carolina State Univ, Raleigh, NC 27695 USA.
   [Pandita, Rahul] Phase Change Software LLC, Golden, CO USA.
C3 North Carolina State University
RP Morrison, P (corresponding author), North Carolina State Univ, Raleigh, NC 27695 USA.
EM pmorrison@ncsu.edu; cdmoye@ncsu.edu; rpandita@phasechange.ai;
   lawilli3@ncsu.edu
FU NSA's Science of Security Lablet at NCSU
FX This material is based upon work supported with funding from the NSA's
   Science of Security Lablet at NCSU. Any opinions, findings, conclusions,
   or recommendations expressed in this material are those of the author(s)
   and do not necessarily reflect the views of any entity of the United
   States Government. Thanks to the Realsearch research group for the
   helpful feedback.
CR [Anonymous], 160852006ISOIEC16085
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 1990, RESPONDING COMPUTER
   [Anonymous], 2003, 4 GRAND CHALLENGE TR
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Howard M., 2006, SECURITY DEV LIFECYC
   Hudson W., 2012, Encyclopedia of Human-Computer Interaction, V2nd
   Jansen W., 2009, DIRECTIONS SECURITY
   Krsul I.V., 1998, SOFTWARE VULNERABILI
   Lennon E.E., ITL B
   McGraw G., 2006, Software security: building security in
   Mell P, 2007, 1 FOR INC RESP SEC T
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Ouedraogo M, 2012, J SYST SOFTWARE, V85, P193, DOI 10.1016/j.jss.2011.08.013
   Pfleeger C. P., 2002, Security in computing
   Pfleeger SL, 2010, IEEE SECUR PRIV, V8, P46, DOI 10.1109/MSP.2010.60
   Pharr N., 2008, P 3 INT C INT MON PR
   Rudolph M, 2012, 2012 SEVENTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES), P291, DOI 10.1109/ARES.2012.10
   Savola RM, 2013, COMPUT SECUR, V37, P78, DOI 10.1016/j.cose.2013.05.002
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Shirey R., 2007, 4949 IETF REQ COMM
   Verendel V, 2009, NEW SECURITY PARADIGMS WORKSHOP 2009, PROCEEDINGS, P37
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 24
TC 22
Z9 23
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 146
EP 159
DI 10.1016/j.infsof.2018.05.011
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400009
DA 2024-07-18
ER

PT J
AU Tantithamthavorn, C
   Abebe, SL
   Hassan, AE
   Ihara, A
   Matsumoto, K
AF Tantithamthavorn, Chakkrit
   Abebe, Surafel Lemma
   Hassan, Ahmed E.
   Ihara, Akinori
   Matsumoto, Kenichi
TI The impact of IR-based classifier configuration on the performance and
   the effort of method-level bug localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug localization; Classifier configuration; Evaluation metrics; Top-k
   performance; Effort
ID PROBABILISTIC RANKING; SOURCE CODE; RETRIEVAL
AB Context: IR-based bug localization is a classifier that assists developers in locating buggy source code entities (e.g., files and methods) based on the content of a bug report. Such IR-based classifiers have various parameters that can be configured differently (e.g., the choice of entity representation). Objective: In this paper, we investigate the impact of the choice of the IR-based classifier configuration on the top-k performance and the required effort to examine source code entities before locating a bug at the method level.
   Method: We execute a large space of classifier configuration, 3172 in total, on 5266 bug reports of two software systems, i.e., Eclipse and Mozilla.
   Results: We find that (1) the choice of classifier configuration impacts the top-k performance from 0.44% to 36% and the required effort from 4395 to 50,000 LOC; (2) classifier configurations with similar top-k performance might require different efforts; (3) VSM achieves both the best top-k performance and the least required effort for method-level bug localization; (4) the likelihood of randomly picking a configuration that performs within 20% of the best top-k classifier configuration is on average 5.4% and that of the least effort is on average 1%; (5) configurations related to the entity representation of the analyzed data have the most impact on both the top-k performance and the required effort; and (6) the most efficient classifier configuration obtained at the method level can also be used at the file-level (and vice versa).
   Conclusion: Our results lead us to conclude that configuration has a large impact on both the top-k performance and the required effort for method-level bug localization, suggesting that the IR-based configuration settings should be carefully selected and the required effort metric should be included in future bug localization studies.
EM chakkrit.tantithamthavorn@adelaide.edu.au; surafel.lemma@aait.edu.et;
   ahmed@cs.queensu.ca; akinori-i@is.naist.jp; matumoto@is.naist.jp
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Ali, Ahmed/HOF-4672-2023;
   MATSUMOTO, KENICHI/AAD-9090-2019; Hassan, Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; MATSUMOTO,
   KENICHI/0000-0002-7418-9323; Abebe, Surafel Lemma/0000-0002-2137-8673;
   Tantithamthavorn, Chakkrit/0000-0002-5516-9984
CR Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2014, REQUIR ENG
   [Anonymous], P INT C SOFTW ENG SO
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2018, ARXIV180110271
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cowles M. K., 2004, STAT COMPUTING INTRO
   D'Ambros M., 2012, EMP SOFTW ENG, V17
   Davies S., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P125, DOI 10.1109/WCRE.2012.22
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dilshener T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P286, DOI [10.1109/MSR.2016.037, 10.1145/2901739.2901775]
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Guan ZW, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P417
   Harrell F.E., 2002, Regression modeling strategies
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hill E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P184, DOI 10.1109/SCAM.2012.29
   Hill E, 2013, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2013.59
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McIntosh S., 2015, EMP SOFTW ENG
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Murphy-Hill E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P332, DOI 10.1109/ICSE.2013.6606579
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sweeney K., 2013, SOFTWARE BUGS COST M
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P108, DOI 10.1109/ISSREW.2013.6688888
   Tantithamthavorn C, 2013, 2013 14TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD 2013), P543, DOI 10.1109/SNPD.2013.92
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Wang SQ, 2011, PANCREATOLOGY, V11, P92, DOI 10.1159/000327688
   Wiese A., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P496, DOI 10.1109/ICSM.2011.6080817
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xu Y, 2009, PROCEEDINGS 32ND ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P676, DOI 10.1145/1571941.1572073
   Zar J. H., 1998, ENCY BIOSTAT
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 63
TC 16
Z9 20
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 160
EP 174
DI 10.1016/j.infsof.2018.06.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kallel, S
   Tibermacine, C
   Kallel, S
   Kacem, AH
   Dony, C
AF Kallel, Sahar
   Tibermacine, Chouki
   Kallel, Slim
   Kacem, Ahmed Hadj
   Dony, Christophe
TI Specification and automatic checking of architecture constraints on
   object oriented programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Architecture constraint; Object constraint language; Meta-program; Java
   reflect; AOP; Aspectj
ID DESIGN
AB Context: Architecture constraints are specifications of conditions to which an architecture model must adhere in order to satisfy an architecture decision imposed by a given design principle. These constraints can be specified with predicate languages like OCL at design time and checked on design artifacts.
   Objective: Many works in the literature studied the importance of checking these constraints to guarantee quality on design models, and to prevent technical debt and maintenance difficulties. In this paper, we propose a process whose ultimate goal is to enable the checking of these constraints in the implementation stage.
   Method: The proposed process takes as input a textual specification of an architecture constraint specified at design stage. It translates this specification into meta-programs and then it uses them with aspect-oriented programming to check constraints at the implementation stage and at run-time on object-oriented programs.
   Results: We experimented an implementation of this process on a set of 12 architecture constraints. The results of this experimentation showed that our process is able to statically and dynamically detect architecture constraint violations on toy object-oriented applications, but also on real-world ones.
   Conclusion: The automatic checking of architecture constraints is important at source code level and at runtime. It avoids the disappearance of architecture decision knowledge in implementation artifacts, and facilitates later their maintenance.
C1 [Kallel, Sahar; Kallel, Slim; Kacem, Ahmed Hadj] Univ Sfax, ReDCAD, Sfax, Tunisia.
   [Kallel, Sahar; Tibermacine, Chouki; Dony, Christophe] CNRS, LIRMM, Montpellier, France.
   [Kallel, Sahar; Tibermacine, Chouki; Dony, Christophe] Univ Montpellier, Montpellier, France.
C3 Universite de Sfax; Ecole Nationale dIngenieurs de Sfax (ENIS); Centre
   National de la Recherche Scientifique (CNRS); Universite Paul-Valery;
   Universite Perpignan Via Domitia; Universite de Montpellier; Universite
   de Montpellier
RP Kallel, S (corresponding author), CNRS, LIRMM, Montpellier, France.; Kallel, S (corresponding author), Univ Montpellier, Montpellier, France.
EM sahar.kallel@lirmm.fr; chouki.tibermacine@lirmm.fr;
   slim.kallel@fsegs.mu.tn; ahmed.hadjkacem@fsegs.rnu.tn; dony@lirmm.fr
OI Kallel, Slim/0000-0002-2824-167X; Tibermacine,
   Chouki/0000-0002-2063-0291
CR Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   [Anonymous], 2000, DESIGN RULES POWER M
   Bartetzko D., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00247-6
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Brucker A. D., 2011, SPECIFICATION BASED, P334
   Brunet J, 2009, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE-COMPANION.2009.5070995
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Demuth B, 2004, Proceedings of the Thirteenth International Conference on Information Systems Development: Advances in Theory, Practice and Education, P218
   Eden AH, 2003, PROC INT CONF SOFTW, P149, DOI 10.1109/ICSE.2003.1201196
   Ehms D., 2006, PATTERNBOX ECLIPSE T
   Erl T., 2008, SOA Design Patterns
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Ferdjoukh A, 2013, PROC INT C TOOLS ART, P1044, DOI 10.1109/ICTAI.2013.156
   Filman R., 2004, ASPECT ORIENTED SOFT
   Gamma Erich., 1994, DESIGN PATTERNS
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Hamie A, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P193
   Hassam K., 2010, BELGIAN NETHERLANDS, P16
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kallel S, 2017, J SYST SOFTWARE, V127, P91, DOI 10.1016/j.jss.2017.01.032
   Meyer B., 2013, TOUCH OF CLASS
   Peters J., 2016, P 10 EUR C SOFTW ARC, P17
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Stelting S., 2002, Applied Java Patterns
   Tibermacine C., SOFTWARE ARCHITECTUR, V2
   Tibermacine C., 2006, P ACM S APPL COMP SA, P1244
   Tibermacine C, 2006, LECT NOTES COMPUT SC, V4063, P294
   Van Eyck Jo, 2011, P 6 INT WORKSHOP SHA, P53
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Yoonsik Cheon, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1020, DOI 10.1109/ITNG.2010.123
   Zdun U, 2008, INFORM SOFTWARE TECH, V50, P1003, DOI 10.1016/j.infsof.2007.09.003
NR 31
TC 2
Z9 2
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2018
VL 101
BP 16
EP 31
DI 10.1016/j.infsof.2018.05.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK3OE
UT WOS:000436054200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ali, SM
   Doolan, M
   Wernick, P
   Wakelam, E
AF Ali, Shallaw Mohammed
   Doolan, Martina
   Wernick, Paul
   Wakelam, Ed
TI Developing an agent-based simulation model of software evolution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evolution; Simulation modelling; Agent-based simulation
   modelling; System evolution process
AB Context: In attempt to simulate the factors that affect the software evolution behaviour and possibly predict it, several simulation models have been developed recently. The current system dynamic (SD) simulation model of software evolution process was built based on actor-network theory (ANT) of software evolution by using system dynamic environment, which is not a suitable environment to reflect the complexity of ANT theory. In addition the SD model has not been investigated for its ability to represent the real-world process of software evolution.
   Objectives: This paper aims to re-implements the current SD model to an agent-based simulation environment 'Repast' and checks the behaviour of the new model compared to the existing SD model. It also aims to investigate the ability of the new Repast model to represent the real-world process of software evolution.
   Methods: a new agent-based simulation model is developed based on the current SD model's specifications and then tests similar to the previous model tests are conducted in order to perform a comparative evaluation between of these two results. In addition an investigation is carried out through an interview with an expert in software development area to investigate the model's ability to represent real-world process of software evolution.
   Results: The Repast model shows more stable behaviour compared with the SD model. Results also found that the evolution health of the software can be calibrated quantitatively and that the new Repast model does have the ability to represent real-world processes of software evolution.
   Conclusion: It is concluded that by applying a more suitable simulation environment (agent-based) to represent ANT theory of software evolution, that this new simulation model will show more stable bahaviour compared with the previous SD model; And it will also shows the ability to represent (at least quantatively) the real-world aspect of software evolution.
C1 [Ali, Shallaw Mohammed] Al Qalam Univ Coll, Ali Mardan St,Gulan St,Bldg 447 Erbil, Kirkuk, Iraq.
   [Doolan, Martina; Wakelam, Ed] Univ Hertfordshire, Sch Comp Sci Hatfield, Hatfield, Herts, England.
   [Wernick, Paul] Univ Hertfordshire, Ctr Comp Sci & Informat Res, Sch Comp Sci Hatfield, Hatfield, Herts, England.
C3 Al-Qalam University College; University of Hertfordshire; University of
   Hertfordshire
RP Ali, SM (corresponding author), Al Qalam Univ Coll, Ali Mardan St,Gulan St,Bldg 447 Erbil, Kirkuk, Iraq.
EM shallaw.abdulkader@gmail.com; m.a.doolan@herts.ac.uk;
   p.d.wernick@herts.ac.uk; e.wakelam@herts.ac.uk
RI Wakelam, Edward/ABG-6569-2020
CR [Anonymous], 2013, C H A O S MAN THINK
   Bonabeau E, 2002, P NATL ACAD SCI USA, V99, P7280, DOI 10.1073/pnas.082080899
   Callon M., 1981, Unscrewing the Big Leviathans: How Do Actors Macrostructure Reality and How Sociologists Help Them Advances in Social Theory and Methodology
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Darryl C., 2009, BRIEF OVERVIEW ACTOR
   Gilbert N., 2008, Agent-based models
   Guile J., 2012, 7 REASONS IT PROJECT
   Heeks Richard., 2013, Development Studies Research and Actor-Network Theory
   Helbing D., 2012, Social Self-Organization: Agent-Based Simulations and Experiments To Study Emergent Social Behavior, P25, DOI [DOI 10.1007/978-3-642-24004-1_2, 10.1007/978-3-642-24004-12, DOI 10.1007/978-3-642-24004-12]
   Kahen G, 2001, J SYST SOFTWARE, V59, P271, DOI 10.1016/S0164-1212(01)00068-1
   Kielbasa J., 2013, INTRO REPAST USING R
   Latour, 2005, Reassembling the Social: An Introduction to Actor-Network Theory
   Latour B, 1996, SOZ WELT, V47, P369
   Lehman M., 1972, STAT COMPUTER PERFOR, P503
   Lehman M. M., 1999, EMPIRICAL STUDIES GL
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Loomes M, 2001, LECT NOTES ARTIF INT, V2117, P25
   Macal Ch. M., 2009, AGENT BASED MODELING
   North MJ, 2006, ACM T MODEL COMPUT S, V16, P1, DOI 10.1145/1122012.1122013
   Okwu P.I., 2014, American Journal of Engineering Research (AJER), V03, P21
   Ozik J., 2014, Relogo Getting Started Guide," ed
   Page Scott., 2005, NEW PALGRAVE DICT EC, V2nd
   Railsback SF, 2006, SIMUL-T SOC MOD SIM, V82, P609, DOI 10.1177/0037549706073695
   Smith D., 2008, WHY MOST IT PROJECTS
   Vartiainen P.L., 2002, Evaluation, V8, P359, DOI DOI 10.1177/135638902401462484
   Walcelam E., 2015, FACTORS SOFTWARE EVO, P25
   Wernick P, 2008, IET SOFTW, V2, P321, DOI 10.1049/iet-sen:20070093
   Wernick P, 1999, J SYST SOFTWARE, V46, P193, DOI 10.1016/S0164-1212(99)00012-6
   Wernick P., 2006, SOFTWARE EVOLUTIONAR
NR 29
TC 10
Z9 11
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 126
EP 140
DI 10.1016/j.infsof.2017.11.013
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Prechelt, L
   Graziotin, D
   Fernández, DM
AF Prechelt, Lutz
   Graziotin, Daniel
   Fernandez, Daniel Mendez
TI A community's perspective on the status and future of peer review in
   software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Survey; Peer review; Open review; Double-blind review; Reward
ID SCIENCE
AB Context: Pre-publication peer review of scientific articles is considered a key element of the research process in software engineering, yet it is often perceived as not to work fully well.
   Objective: We aim at understanding the perceptions of and attitudes towards peer review of authors and reviewers at one of software engineering's most prestigious venues, the International Conference on Software Engineering (ICSE).
   Method: We invited 932 ICSE 2014/15/16 authors and reviewers to participate in a survey with 10 closed and 9 open questions.
   Results: We present a multitude of results, such as: Respondents perceive only one third of all reviews to be good, yet one third as useless or misleading; they propose double-blind or zero-blind reviewing regimes for improvement; they would like to see showable proofs of (good) reviewing work be introduced; attitude change trends are weak.
   Conclusion: The perception of the current state of software engineering peer review is fairly negative. Also, we found hardly any trend that suggests reviewing will improve by itself over time; the community will have to make explicit efforts. Fortunately, our (mostly senior) respondents appear more open for trying different peer reviewing regimes than we had expected.
C1 [Prechelt, Lutz] Free Univ Berlin, Berlin, Germany.
   [Graziotin, Daniel] Univ Stuttgart, Stuttgart, Germany.
   [Fernandez, Daniel Mendez] Tech Univ Munich, Garching, Germany.
C3 Free University of Berlin; University of Stuttgart; Technical University
   of Munich
RP Prechelt, L (corresponding author), Free Univ Berlin, Berlin, Germany.
EM prechelt@inf.fu-berlin.de; daniel.graziotin@informatik.uni-stuttgart.de;
   daniel.mendez@tum.de
RI Mendez, Daniel/ABA-4579-2021
OI Mendez, Daniel/0000-0003-0619-6027; Graziotin,
   Daniel/0000-0002-9107-7681
FU Alexander von Humboldt (AvH) Foundation
FX We thank our survey respondents for their sometimes quite elaborate, yet
   helpful answers. We thank all reviewers involved indirectly for
   participating in the respective reviewing processes. We also thank the
   anoymous reviewers of the present article, in particular the one who
   semi-identified him- or herself as a member of the ICSE steering
   committee. Daniel Graziotin has been supported by the Alexander von
   Humboldt (AvH) Foundation.
CR Armstrong J.S., 1997, SCI ENG ETHICS, V3, P63, DOI DOI 10.1007/S11948-997-0017-3
   Bacchelli A, 2017, PROC IEEE ACM INT C, P385, DOI 10.1109/ICSE-C.2017.49
   Baxt WG, 1998, ANN EMERG MED, V32, P310, DOI 10.1016/S0196-0644(98)70006-X
   Bornmann L, 2015, J ASSOC INF SCI TECH, V66, P2215, DOI 10.1002/asi.23329
   Breuning M, 2015, PS-POLIT SCI POLIT, V48, P595, DOI 10.1017/S1049096515000827
   Budden AE, 2008, TRENDS ECOL EVOL, V23, P4, DOI 10.1016/j.tree.2007.07.008
   Ferreira C, 2016, BIOL REV, V91, P597, DOI 10.1111/brv.12185
   Hettyey A, 2012, TRENDS ECOL EVOL, V27, P189, DOI 10.1016/j.tree.2012.01.005
   Jubb M, 2016, LEARN PUBL, V29, P13, DOI 10.1002/leap.1008
   LABAND DN, 1994, JAMA-J AM MED ASSOC, V272, P147
   Mulligan A, 2013, J AM SOC INF SCI TEC, V64, P132, DOI 10.1002/asi.22798
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Pontille David, 2014, Ada: A Journal of Gender, New Media, and Technology, V4, DOI [10.7264/N3542KVW, DOI 10.7264/N3542KVW]
   Prechelt L, 2017, OPEN SCI REPOSITORY
   Publons, 2017, REC PEER REV SPEEDIN
   Ralph P, 2016, COMMUN ASSOC INF SYS, V38, P274, DOI 10.17705/1CAIS.03813
   Ross-Hellauer T., 2017, ZENODOPREPRINT
   Schwarz N., 2001, Blackwell handbook of social psychology: Intraindividual processes, P436, DOI DOI 10.1002/9780470998519.CH20
   SclenceOpen I., 2017, PEER REV GUIDELINES
   Seeber M, 2017, SCIENTOMETRICS, V113, P567, DOI 10.1007/s11192-017-2264-7
   Smith R, 2006, J ROY SOC MED, V99, P178, DOI 10.1258/jrsm.99.4.178
   Strauss A.L., 1990, BASICS QUALITATIVE R
   T. BMJ, 2017, OP PEER REV
   Warne V, 2016, LEARN PUBL, V29, P41, DOI 10.1002/leap.1002
   Weller A. C., 2001, ITS STRENGTHS WEAKNE
   Zaharie MA, 2016, EUR MANAG J, V34, P69, DOI 10.1016/j.emj.2015.12.004
NR 26
TC 16
Z9 17
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 75
EP 85
DI 10.1016/j.infsof.2017.10.019
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FX4EZ
UT WOS:000426026800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Irshad, M
   Petersen, K
   Poulding, S
AF Irshad, Mohsin
   Petersen, Kai
   Poulding, Simon
TI A systematic literature review of software requirements reuse approaches
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software requirements; Requirements reuse; Rigor; Relevance; Artefact
   reuse; Reusability
ID SPECIFICATIONS; CLASSIFICATION; RETRIEVAL; FAMILIES; SUPPORT; MARKET
AB Context Early software reuse is considered as the most beneficial form of software reuse. Hence, previous research has focused on supporting the reuse of software requirements.
   Objective: This study aims to identify and investigate the current state of the art with respect to (a) what requirement reuse approaches have been proposed, (b) the methods used to evaluate the approaches, (c) the characteristics of the approaches, and (d) the quality of empirical studies on requirements reuse with respect to rigor and relevance.
   Method: We conducted a systematic review and a combination of snowball sampling and database search have been used to identify the studies. The rigor and relevance scoring rubric has been used to assess the quality of the empirical studies. Multiple researchers have been involved in each step to increase the reliability of the study.
   Results: Sixty-nine studies were identified that describe requirements reuse approaches. The majority of the approaches used structuring and matching of requirements as a method to support requirements reuse and text based artefacts were commonly used as an input to these approaches. Further evaluation of the studies revealed that the majority of the approaches are not validated in the industry. The subset of empirical studies (22 in total) was analyzed for rigor and relevance and two studies achieved the maximum score for rigor and relevance based on the rubric. It was found that mostly text-based requirements reuse approaches were validated in the industry.
   Conclusion: From the review, it was found that a number of approaches already exist in literature, but many approaches are not validated in industry. The evaluation of rigor and relevance of empirical studies show that these do not contain details of context, validity threats, and the industrial settings, thus highlighting the need for the industrial evaluation of the approaches.
C1 [Irshad, Mohsin; Petersen, Kai; Poulding, Simon] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Irshad, M (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM mohsin.irshad@bth.se; kai.petersen@bth.se; simon.poulding@bth.se
OI Petersen, Kai/0000-0002-1532-8223
FU Swedish Knowledge Foundation; project "Professional Licentiate of
   Engineering Research School"
FX The research presented in this paper was partly funded by the Swedish
   Knowledge Foundation, and the project "Professional Licentiate of
   Engineering Research School", conducted at Blekinge Institute of
   Technology, Software Engineering Research Lab - Sweden.
CR Alexander I, 2002, NINTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P9, DOI 10.1109/ECBS.2002.999817
   [Anonymous], 1 WORKSH KNOWL REUS
   [Anonymous], 2015, EMPIR SOFTW ENG
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Babar Muhammad Imran, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P43, DOI 10.1109/MySec.2014.6985987
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Bakar N. H., 2014, P 2 INT C ADV COMP C, P19
   Bakar NH, 2015, 2 INT C INF SCI SEC, P1
   Bano M, 2014, IEEE INT WORKS EMPIR, P9, DOI 10.1109/EmpiRE.2014.6890110
   Biddle R, 2002, LECT NOTES COMPUT SC, V2319, P210
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Blok M. C., 1998, SOFTW ENG C
   Bonilla-Morales B., 2012, International Journal of Computer Science Issues, V9, P24
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Castano S., 1993, REQUIREMENTS ENG 199, P121
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Chiang C. C., 1999, P 1999 ACMS APPL COM, P586
   Chou SC, 1996, INFORM SOFTWARE TECH, V38, P419, DOI 10.1016/0950-5849(95)01080-7
   Chou SC, 1996, SOFTWARE PRACT EXPER, V26, P815, DOI 10.1002/(SICI)1097-024X(199607)26:7<815::AID-SPE32>3.0.CO;2-#
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cybulski JL, 2000, LECT NOTES COMPUT SC, V1844, P190
   Daramola O., 2012, REQ PATT REPA 2012 I, P54
   de Azambuja Flavia Braga, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P67
   Dehlinger J., 2005, SIGSOFT SOFTW ENG NO, V30, P1
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1092, DOI 10.1016/j.infsof.2012.04.007
   Eriksson M, 2009, J SYST SOFTWARE, V82, P435, DOI 10.1016/j.jss.2008.07.046
   Finkelstein A., 1988, Software Engineering Journal, V3, P186, DOI 10.1049/sej.1988.0024
   Firesmith D. G., 2003, J OBJECT TECHNOL, V3
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Franch X, 2010, LECT NOTES COMPUT SC, V6182, P85, DOI 10.1007/978-3-642-14192-8_10
   FUGGETTA A, 1993, COMPUTER, V26, P25, DOI 10.1109/2.247645
   Goldin L, 2015, REQUIR ENG, V20, P23, DOI 10.1007/s00766-013-0182-7
   GOMAA H, 1995, J SYST SOFTWARE, V28, P189, DOI 10.1016/0164-1212(94)00056-S
   Gotzhein R, 1998, LECT NOTES COMPUT SC, V1486, P65, DOI 10.1007/BFb0055337
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Hauksdottir D., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P309, DOI 10.1109/RE.2012.6345820
   Hauksdóttir D, 2014, COMPUT IND, V65, P952, DOI 10.1016/j.compind.2014.02.011
   Hauksdóttir D, 2013, COMPUT IND, V64, P351, DOI 10.1016/j.compind.2012.10.008
   Heumesser N, 2003, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2003.1201230
   Irshad M., 2016, P 20 INT C EV ASS SO, P35
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   JACOBSON I., 2004, ASPECT ORIENTED SOFT
   Jedlitschka A, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P261
   Johnson W. L., 1991, KNOWL BAS SOFTW ENG, P57
   Karakostas V., 1989, SIGSOFT Software Engineering Notes, V14, P39, DOI 10.1145/71647.71650
   Karatas EK, 2014, 2014 IEEE International Conference on Data Mining Workshop (ICDMW), P832, DOI 10.1109/ICDMW.2014.57
   Keepence B., 1995, Proceedings of the 1995 International Symposium and Workshop on Systems Engineering of Computer Based Systems (Cat. No.95TH8053), P27, DOI 10.1109/ECBS.1995.521837
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Konrad S, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P127, DOI 10.1109/ICRE.2002.1211541
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lam W, 1998, ANN SOFTW ENG, V5, P253, DOI 10.1023/A:1018912105115
   Lam W, 1997, J SYST SOFTWARE, V38, P197, DOI 10.1016/S0164-1212(96)00151-3
   Lam W, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P233, DOI 10.1109/ICRE.1998.667831
   Lam W, 1997, ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE AND INTERNATIONAL COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P332, DOI 10.1109/APSEC.1997.640190
   Lam W., 1997, REQUIR ENG, V2
   Lasheras J, 2009, J RES PRACT INF TECH, V41, P119
   Lee S, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P147, DOI 10.1109/ASWEC.2007.42
   Lopez O., 2002, 8 INT WORKSH REQ ENG, P71
   MAIDEN N, 1991, SOFTWARE ENG J, V6, P3, DOI 10.1049/sej.1991.0001
   MAIDEN NA, 1992, COMMUN ACM, V35, P55, DOI 10.1145/129852.129857
   Mannion M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P453, DOI 10.1109/ICSE.1999.841035
   Mannion M, 2008, SYSTEMS ENG, V11, P61, DOI 10.1002/sys.20086
   Massonet P, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P26, DOI 10.1109/ISRE.1997.566836
   Melikhova L., 2007, 2007 IEEE INT S CONS
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Montabert C., 2005, P 11 INT C HUM COMP
   Montabert C, 2009, INTERACT COMPUT, V21, P304, DOI 10.1016/j.intcom.2009.06.003
   Monzon A, 2008, INT REQUIR ENG CONF, P223, DOI 10.1109/RE.2008.19
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   Moros B., 2008, P EMMSAD, P141
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Mussbacher G, 2013, S VIS LANG HUM CEN C, P238, DOI 10.1109/RE.2013.6636724
   Naish J., 2011, 2011 First International Workshop on Requirements Patterns (RePa'11), P42, DOI 10.1109/RePa.2011.6046721
   Nissen HW, 1999, INFORM SYST, V24, P131, DOI 10.1016/S0306-4379(99)00009-5
   Niu N, 2014, IEEE SYST J, V8, P827, DOI 10.1109/JSYST.2013.2260092
   Pacheco C., 2016, REQUIR ENG, P1
   Pacheco CL, 2015, J SOFTW-EVOL PROC, V27, P1, DOI 10.1002/smr.1698
   Paydar S, 2015, AUTOMAT SOFTW ENG, V22, P241, DOI 10.1007/s10515-014-0144-4
   Perednikas E, 2008, 20TH INTERNATIONAL CONFERENCE, EURO MINI CONFERENCE CONTINUOUS OPTIMIZATION AND KNOWLEDGE-BASED TECHNOLOGIES, EUROPT'2008, P450
   Periyasamy K., 1996, P 1996 C CTR ADV STU, P31
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Pooley Rob, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P65, DOI 10.1109/ICSEA.2008.60
   Radatz J., 3610121990121990 IEE
   Ravichandran T, 2003, COMMUN ACM, V46, P109, DOI 10.1145/859670.859678
   Redondo RPD, 2002, PROC IEEE INT CONF S, P618, DOI 10.1109/ICSM.2002.1167826
   RYAN K., 1993, IEEE INT S REQUIREME, P112
   Saeki M., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P309, DOI 10.1109/APSEC.1999.809617
   Schmitt C, 2015, JOINT P REFSQ 2015 W, P34
   Schmitz D, 2008, INT REQUIR ENG CONF, P229, DOI 10.1109/RE.2008.27
   Shehata M., 2002, 15 INT C SOFTW SYST
   Silva R. A., 2016, SYSTEMATIC REV SEARC
   SINDRE G, 2003, P 9 INT WORKSH REQ E
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Spanoudakis G, 1996, APPL ARTIF INTELL, V10, P281, DOI 10.1080/088395196118515
   SUTCLIFFE A, 1992, LECT NOTES COMPUT SC, V593, P290
   Sutcliffe A. G., 1998, SOFTW ENG IEEE T, V24
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Tracz W., 1990, SIGSOFT Software Engineering Notes, V15, P42, DOI 10.1145/382296.382702
   Benitti FBV, 2013, J UNIVERS COMPUT SCI, V19, P254
   von Knethen A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ICRE.2002.1048538
   Wild C., 1994, Proceedings. The Ninth Knowledge-Based Software Engineering Conference (Cat. No.94TH0664-3), P108, DOI 10.1109/KBSE.1994.342672
   Wnuk K., 2016, P 20 INT C EV ASS SO, P32
   Wohlin C, 2007, INFORM SOFTWARE TECH, V49, P2, DOI 10.1016/j.infsof.2006.08.004
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Woo HG, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICRE.2002.1048520
NR 110
TC 30
Z9 33
U1 1
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 223
EP 245
DI 10.1016/j.infsof.2017.09.009
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200014
DA 2024-07-18
ER

PT J
AU Khatiwada, S
   Tushev, M
   Mahmoud, A
AF Khatiwada, Saket
   Tushev, Miroslav
   Mahmoud, Anas
TI <i>Just enough semantics</i>: An information theoretic approach for
   IR-based software bug localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information retrieval; Bug localization; Information theory
ID LATENT DIRICHLET ALLOCATION; SOURCE-CODE; TRACEABILITY LINKS; RETRIEVAL;
   LOCATION; REPRESENTATIONS; DOCUMENTATION; COMPREHENSION; EVOLUTION;
   KNOWLEDGE
AB Context: Software systems are often shipped with defects. Whenever a bug is reported, developers use the information available in the associated report to locate source code fragments that need to be modified in order to fix the bug. However, as software systems evolve in size and complexity, bug localization can become a tedious and time-consuming process. To minimize the manual effort, contemporary bug localization tools utilize Information Retrieval (IR) methods for automated support. IR methods exploit the textual content of bug reports to automatically capture and rank relevant buggy source files.
   Objective: In this paper, we propose a new paradigm of information-theoretic IR methods to support bug localization tasks in software systems. These methods, including Pointwise Mutual Information (PMI) and Normalized Google Distance (NGD), exploit the co-occurrence patterns of code terms in the software system to reveal hidden textual semantic dimensions that other methods often fail to capture. Our objective is establish accurate semantic similarity relations between source code and bug reports.
   Method: Five benchmark datasets from different application domains are used to conduct our analysis. The proposed methods are compared against classical IR methods that are commonly used in bug localization research.
   Results: The results show that information-theoretic IR methods significantly outperform classical IR methods, providing a semantically aware, yet, computationally efficient solution for bug localization in large and complex software systems. (A replication package is available at: http://seel.cseisu.edu/datai istl7.zip).
   Conclusions: Information-theoretic co-occurrence methods provide "just enough semantics" necessary to establish relations between bug reports and code artifacts, achieving a balance between simple lexical methods and computationally-expensive semantic IR methods that require substantial amounts of data to function properly. (c) 2017 Elsevier B.V. All rights reserved.
C1 [Khatiwada, Saket; Tushev, Miroslav; Mahmoud, Anas] Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
C3 Louisiana State University System; Louisiana State University
RP Mahmoud, A (corresponding author), Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
EM skhati1@lsu.edu; mtushe1@lsu.edu; mahmoud@csc.lsu.edu
FU Louisiana Board of Regents Research Competitiveness Subprogram (LA
   BoRRCS) [LEQSF(2015-18)-RD-A-07]
FX This work was supported in part by the Louisiana Board of Regents
   Research Competitiveness Subprogram (LA BoRRCS), contract number:
   LEQSF(2015-18)-RD-A-07.
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Abebe SL, 2009, EUR CON SFTWR MTNCE, P189, DOI 10.1109/CSMR.2009.61
   Agirre E., 2009, P HUMAN LANGUAGE TEC, P19, DOI 10.3115/1620754.1620758
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], P 21 NATL C ART INT
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 1988, P SIGCHI C HUMAN FAC, DOI DOI 10.1145/57167.57214
   [Anonymous], 2010, PROC 10 ANN JOINT C, DOI DOI 10.1145/1816123.1816156
   [Anonymous], 2005, P 6 INT S AUTOMATED
   [Anonymous], 2017, DESIGN ANAL EXPT
   [Anonymous], 2009, ENCY DATABASE SYSTEM, DOI DOI 10.1007/978-0-387-39940-9_488
   Anquetil N., 1998, Conference of the Centre for Advanced Studies on Collaborative Research, P4
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Binkley David., 2010, Encyclopedia of Software Engineering, P454
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bouma G., 2009, P GSCL POTSD GERM, P31
   Budanitsky A, 2006, COMPUT LINGUIST, V32, P13, DOI 10.1162/coli.2006.32.1.13
   Bullinaria JA, 2007, BEHAV RES METHODS, V39, P510, DOI 10.3758/BF03193020
   Chen PI, 2010, EXPERT SYST APPL, V37, P1928, DOI 10.1016/j.eswa.2009.07.016
   Church K. W., 1990, Computational Linguistics, V16, P22
   Cilibrasi RL, 2007, IEEE T KNOWL DATA EN, V19, P370, DOI 10.1109/TKDE.2007.48
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Cover T. M., 1991, ELEMENTS INFORM THEO
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   Etzkorn LH, 2001, J PRAGMATICS, V33, P1731, DOI 10.1016/S0378-2166(00)00068-0
   Feilkas M, 2009, INT C PROGRAM COMPRE, P188, DOI 10.1109/ICPC.2009.5090042
   Frakes W. B., 1987, SIGIR Forum, V21, P30, DOI 10.1145/24634.24636
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gabrilovich E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1606
   Gracia J., 2006, International Conference on Web Engineering, P241, DOI DOI 10.1145/1145581.1145630
   Guo W., 2013, PROC ANN M ASS COMPU, P239
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haiduc S, 2008, INT C PROGRAM COMPRE, P113, DOI 10.1109/ICPC.2008.29
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Hill E., 2008, P 2008 INT WORKING C, P79
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Holzinger A., 2013, Quality Issues in the Management of Web Information, P145
   Host EW, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P193, DOI 10.1109/SCAM.2007.18
   Khatiwada S., 2016, International Conference on Program Comprehension, P1
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lin D., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P296
   Liu C, 2005, SIAM PROC S, P286, DOI 10.1145/1081706.1081753
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Mahmoud A, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2824251
   Mahmoud A, 2015, REQUIR ENG, V20, P281, DOI 10.1007/s00766-013-0199-y
   Mahmoud A, 2013, S VIS LANG HUM CEN C, P32, DOI 10.1109/RE.2013.6636703
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Pollock L., 2013, Software Engineering, P94, DOI DOI 10.1007/978-3-642-36054-14
   Porter F., ALGORITHM SUFFIX STR, P313
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rajlich V., 2007, INT WORKSH PROGR COM, P271
   Rao S., 2013, morebugs: A new dataset for benchmarking algorithms for information retrieval from software repositories
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Robertson SE, 2000, INFORM PROCESS MANAG, V36, P95, DOI 10.1016/S0306-4573(99)00046-1
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Sousa D., 2010, P 2 INT WORKSHOP SEA, P63, DOI [10.1145/1871985.1871996, DOI 10.1145/1871985.1871996]
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   Teufel S, 2007, TEXT SPEECH LANG TEC, V37, P163
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Thung F, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P767, DOI 10.1145/2635868.2661678
   Turney P. D., 2001, P 12 EUR C MACH LEAR, P491, DOI DOI 10.1007/3-540-44795-4_42
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Woon WL, 2009, KNOWL INF SYST, V21, P91, DOI 10.1007/s10115-009-0203-5
   Xiang Z, 2008, J TRAVEL RES, V47, P137, DOI 10.1177/0047287508321193
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 87
TC 28
Z9 37
U1 1
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 45
EP 57
DI 10.1016/j.infsof.2017.08.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FM3BC
UT WOS:000414878200004
DA 2024-07-18
ER

PT J
AU Bonifacio, A
   Moura, A
   Simao, A
AF Bonifacio, Adilson
   Moura, Arnaldo
   Simao, Adenilso
TI Experimental comparison of approaches for checking completeness of test
   suites from finite state machines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test suite completeness; Experiments; Completeness conditions; Confirmed
   sets; Simulation relations
ID FAULT COVERAGE; SEQUENCES; SPECIFICATIONS; LENGTH
AB Context: Many approaches have been proposed for checking test suite completeness for Finite State Machines (FSMs). Some approaches provide sufficient conditions whereas others give necessary and sufficient conditions for test suite completeness. One method, called the CONF method, is based on sufficient conditions, and relies on a search for confirmed sets when checking completeness. If a confirmed set cannot be found, then the outcome is inconclusive. Another method, the SIM method, is based on the notion of simulation relations, and relies on necessary and sufficient conditions when checking test suite completeness. The SIM method always returns conclusive verdicts about suite completeness.
   Objective: In this work, we describe experimental results comparing these two methods. We also investigate when both methods can be combined for checking completeness of test suites.
   Method: We evaluate both strategies according to different parameters of the FSMs, such as the number of states and the number of transitions in the FSM models, the size of input and output alphabets of the FSM models, as well as the size of the test suites. We also report on the relative rates of conclusive and inconclusive verdicts when using both methods.
   Results: We see that these methods are complementary, which allows for a combined strategy: the CONF method is the fastest in terms of processing time, while the SIM method is not as scalable in terms of the size of the specifications.
   Conclusion: The experimental results indicated a substantial difference for the rate of positive verdicts obtained by the SIM method when compared with the number of positive answers returned by the CONF method. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Bonifacio, Adilson] Univ Londrina, Dept Comp, Londrina, Brazil.
   [Moura, Arnaldo] Univ Estadual Campinas, Comp Inst, Campinas, SP, Brazil.
   [Simao, Adenilso] Univ Sao Paulo, Inst Math & Comp Sci, Sao Carlos, SP, Brazil.
C3 Universidade Estadual de Campinas; Universidade de Sao Paulo
RP Bonifacio, A (corresponding author), Univ Londrina, Dept Comp, Londrina, Brazil.
EM bonifacio@uel.br; arnaldo@ic.unicamp.br; adenilso@icmc.usp.br
RI Bonifacio, Adilson L/J-2583-2012; Simao, Adenilso S/E-9620-2011
OI Simao, Adenilso/0000-0002-1454-2607
CR [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   Bonifacio Adilson Luiz, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P96, DOI 10.1007/978-3-319-10431-7_8
   Bonifacio AL, 2012, INT J FOUND COMPUT S, V23, P147, DOI 10.1142/S0129054112500013
   Bonifácio AL, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P139, DOI 10.1109/SEFM.2008.17
   Bonifacio Adilson Luiz, 2014, S APPL COMP SAC 2014, P1287
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   DOROFEEVA R, 2005, FORTE, V3731, P204
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   Grünert T, 2002, COMPUT OPER RES, V29, P13, DOI 10.1016/S0305-0548(00)00053-8
   Hierons R. M., 2006, Automated Software Engineering, V13, P283, DOI 10.1007/s10515-006-7739-3
   Hierons RM, 2006, IEEE T COMPUT, V55, P618, DOI 10.1109/TC.2006.80
   Hierons RM, 2002, IEEE T COMPUT, V51, P1111, DOI 10.1109/TC.2002.1032630
   Karp R, 1972, COMPLEXITY COMPUTER, V40, P85, DOI 10.1007/978-3-540-68279-08
   Larsen KG, 1997, INFORM COMPUT, V134, P75, DOI 10.1006/inco.1997.2623
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Petrenko A, 1996, COMPUT NETWORKS ISDN, V29, P81, DOI 10.1016/S0169-7552(96)00019-0
   POMERANZ I, 1994, IEEE T COMPUT AID D, V13, P378, DOI 10.1109/43.265679
   Simao A, 2012, SOFTW TEST VERIF REL, V22, P435, DOI 10.1002/stvr.452
   Simao A, 2010, IEEE T COMPUT, V59, P1023, DOI 10.1109/TC.2010.17
   Ural H, 1997, IEEE T COMPUT, V46, P93, DOI 10.1109/12.559807
NR 21
TC 3
Z9 3
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 95
EP 104
DI 10.1016/j.infsof.2017.07.012
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200007
DA 2024-07-18
ER

PT J
AU Qi, FM
   Jing, XY
   Zhu, XK
   Xie, XY
   Xu, BW
   Ying, S
AF Qi, Fumin
   Jing, Xiao-Yuan
   Zhu, Xiaoke
   Xie, Xiaoyuan
   Xu, Baowen
   Ying, Shi
TI Software effort estimation based on open source projects: Case study of
   Github
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Effort data collection; Automated function
   point; Open source project; AdaBoost
ID EFFORT PREDICTION; ESTIMATION MODELS; COST ESTIMATION; MACHINE; IMPACT;
   WORK; VALIDATION; REGRESSION; FRAMEWORK; REASONS
AB Context: Managers usually want to pre-estimate the effort of a new project for reasonably dividing their limited resources. In reality, it is common practice to train a prediction model based on effort datasets to predict the effort required by a project. Sufficient data is the basis for training a good estimator, yet most of the data owners are unwilling to share their closed source project (CSP) effort data due to the privacy concerns, which means that we can only obtain a small number of effort data. Effort estimator built on the limited data usually cannot satisfy the practical requirement.
   Objective: We aim to provide a method which can be used to collect sufficient data for solving the problem of lack of training data when building an effort estimation model.
   Method: We propose to mine GitHub to collect sufficient and diverse real-life effort data for effort estimation. Specifically, we first demonstrate the feasibility of our cost metrics (including functional point analysis and personnel factors). In particular, we design a quantitative method for evaluating the personnel metrics based on GitHub data. Then we design a samples incremental approach based on AdaBoost and Classification And Regression Tree (ABCART) to make the collected dataset owns dynamic expansion capability.
   Results: Experimental results on the collected dataset show that: (1) the personnel factor is helpful for improving the performance of the effort estimation. (2) the proposed ABCART algorithm can increase the samples of the collected dataset online. (3) the estimators built on the collected data can achieve comparable performance with those of the estimators which built on existing effort datasets.
   Conclusions: Effort estimation based on Open Source Project (OSP) is an effective way for getting the effort required by a new project, especially for the case of lacking training data. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Qi, Fumin; Jing, Xiao-Yuan; Zhu, Xiaoke; Xie, Xiaoyuan; Xu, Baowen; Ying, Shi] Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan, Hubei, Peoples R China.
   [Jing, Xiao-Yuan] Nanjing Univ Posts & Telecommun, Sch Automat, Nanjing, Jiangsu, Peoples R China.
   [Zhu, Xiaoke] Henan Univ, Sch Comp & Informat Engn, Zhengzhou, Henan, Peoples R China.
C3 Wuhan University; Nanjing University of Posts & Telecommunications;
   Henan University
RP Jing, XY (corresponding author), Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan, Hubei, Peoples R China.; Jing, XY (corresponding author), Nanjing Univ Posts & Telecommun, Sch Automat, Nanjing, Jiangsu, Peoples R China.
EM qfm120@163.com; jingxy_2000@126.com
RI He, Chen/JLM-5059-2023; Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296
FU National Key Research and Development Program of China [2017YFB0202001];
   National Nature Science Foundation of China [61672208, U1404618,
   61272273, 61572375, 61233011, 91418202, 61472178, 61373038, 61672392];
   Chinese 973 Program [2014CB340702]; Science and Technology Program in
   Henan province [1721102410064]; Science and Technique Development
   Program of Henan [172102210186]; Province-School-Region Project of Henan
   University [2016511]
FX The authors want to thank the anonymous reviewers for their constructive
   comments and suggestions. The work described in this paper was supported
   by the National Key Research and Development Program of China under
   Grant No. 2017YFB0202001, and the National Nature Science Foundation of
   China under Grant Nos. 61672208, U1404618, 61272273, 61572375, 61233011,
   91418202, 61472178, 61373038, 61672392, and the Chinese 973 Program
   under Project No. 2014CB340702, and the Science and Technology Program
   in Henan province under Grant No. 1721102410064, and the Science and
   Technique Development Program of Henan under Grant No. 172102210186, and
   the Province-School-Region Project of Henan University under Grant No.
   2016511.
CR Abeel T., 2009, EROMISE REPOSITORY E
   Ahmed MA, 2013, INFORM SOFTWARE TECH, V55, P241, DOI 10.1016/j.infsof.2012.08.001
   ALAVI M, 1984, COMMUN ACM, V27, P556, DOI 10.1145/358080.358095
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2011, ISOIEC197612011
   [Anonymous], INT J STW ENG APPL
   [Anonymous], 2009, ISOIEC209262009
   [Anonymous], 2010, ISOIEC298812010
   Boehm B., 1997, COCOMO II MODEL DEFI
   Ceke D, 2015, J SYST SOFTWARE, V103, P219, DOI 10.1016/j.jss.2015.02.006
   Chatzipetrou P, 2015, INFORM SOFTWARE TECH, V59, P149, DOI 10.1016/j.infsof.2014.11.004
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Dave VS, 2014, ARTIF INTELL REV, V42, P295, DOI 10.1007/s10462-012-9339-x
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Gibbs MN, 2000, IEEE T NEURAL NETWOR, V11, P1458, DOI 10.1109/72.883477
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   ISO/IEC, 2002, ISOIEC209682002
   ISO/IEC, 2005, ISOIEC245702005
   Jing XY, 2016, PROC INT CONF SOFTW, P607, DOI 10.1145/2884781.2884827
   Jorgensen M, 2005, IEEE SOFTWARE, V22, P57, DOI 10.1109/MS.2005.73
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2016, J SYST SOFTWARE, V117, P274, DOI 10.1016/j.jss.2016.03.048
   Jorgensen M, 2013, INFORM SOFTWARE TECH, V55, P1640, DOI 10.1016/j.infsof.2013.03.001
   Jorgensen M, 2011, IEEE T SOFTWARE ENG, V37, P695, DOI 10.1109/TSE.2010.78
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Lohre E, 2016, J SYST SOFTWARE, V116, P49, DOI 10.1016/j.jss.2015.03.015
   Lokan C, 2014, INFORM SOFTWARE TECH, V56, P1063, DOI 10.1016/j.infsof.2014.02.008
   Mathew George, 2016, ARXIV161203240
   Menzies T, 2005, PROC INT CONF SOFTW, P587
   Menzies T., 2012, 2016 31 IEEE ACM INT, P75
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Moeyersoms J, 2015, J SYST SOFTWARE, V100, P80, DOI 10.1016/j.jss.2014.10.032
   (OMG) O.M.G., 2014, AUT FUNCT POINTS
   Oriogun PK, 1999, SOFTWARE QUAL J, V8, P53, DOI 10.1023/A:1008926902882
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   PRAAGMAN J, 1985, EUR J OPER RES, V19, P144, DOI 10.1016/0377-2217(85)90321-2
   Rätsch G, 2001, MACH LEARN, V42, P287, DOI 10.1023/A:1007618119488
   Reifer D., 1999, ROSETTA STONE MAKING, P11
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Sauer C, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1297797.1297801
   Schapire RE, 2003, LECT NOTES STAT, V171, P149, DOI 10.1007/978-0-387-21579-2_9
   SCHAPIRE RE, 1990, MACH LEARN, V5, P197, DOI 10.1023/A:1022648800760
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Seo YS, 2013, INFORM SOFTWARE TECH, V55, P1710, DOI 10.1016/j.infsof.2013.03.007
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Song QB, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P318
   Tian HX, 2010, IEEE T AUTOM SCI ENG, V7, P73, DOI 10.1109/TASE.2008.2005640
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   Wallshein CC, 2015, J SYST SOFTWARE, V105, P72, DOI 10.1016/j.jss.2015.03.069
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Wu XX, 2013, IEEE I CONF COMP VIS, P609, DOI 10.1109/ICCV.2013.81
   Zhou Zhi-Hua., 2015, ENCY BIOMETRICS, P411, DOI DOI 10.1007/978-1-4899-7488-4_293
NR 71
TC 22
Z9 26
U1 2
U2 32
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 145
EP 157
DI 10.1016/j.infsof.2017.07.015
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200010
DA 2024-07-18
ER

PT J
AU Khreich, W
   Khosravifar, B
   Hamou-Lhadj, A
   Talhi, C
AF Khreich, Wael
   Khosravifar, Babak
   Hamou-Lhadj, Abdelwahab
   Talhi, Chamseddine
TI An anomaly detection system based on variable N-gram features and
   one-class SVM
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software security; Anomaly detection systems; Intrusion detection and
   prevention; Feature extraction; Tracing; System calls
ID INTRUSION DETECTION SYSTEM; CLASSIFIERS; ATTACKS; CALLS; AREA
AB Context: Run-time detection of system anomalies at the host level remains a challenging task. Existing techniques suffer from high rates of false alarms, hindering large-scale deployment of anomaly detection techniques in commercial settings.
   Objective: To reduce the false alarm rate, we present a new anomaly detection system based on a novel feature extraction technique, which combines the frequency with the temporal information from system call traces, and on one-class support vector machine (OC-SVM) detector.
   Method: The proposed feature extraction approach starts by segmenting the system call traces into multiple n-grams of variable length and mapping them to fixed-size sparse feature vectors, which are then used to train OC-SVM detectors.
   Results: The results achieved on a real-world system call dataset show that our feature vectors with up to 6-grams outperform the term vector models (using the most common weighting schemes) proposed in related work. More importantly, our anomaly detection system using OC-SVM with a Gaussian kernel, trained on our feature vectors, achieves a higher-level of detection accuracy (with a lower false alarm rate) than that achieved by Markovian and n-gram based models as well as by the state-of-the-art anomaly detection techniques.
   Conclusion: The proposed feature extraction approach from traces of events provides new and general data representations that are suitable for training standard one-class machine learning algorithms, while preserving the temporal dependencies among these events. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Khreich, Wael; Khosravifar, Babak; Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Software Behav Anal SBA Res Lab, Montreal, PQ, Canada.
   [Talhi, Chamseddine] Ecole Technol Super, Dept Software Engn & Informat Technol, Montreal, PQ, Canada.
C3 Concordia University - Canada; University of Quebec; Ecole de
   Technologie Superieure - Canada
RP Khreich, W (corresponding author), Concordia Univ, Dept Elect & Comp Engn, Software Behav Anal SBA Res Lab, Montreal, PQ, Canada.
EM wkhreich@ece.concordia.ca; b_khosr@ece.concordia.ca;
   wahab.hamou-lhadj@concordia.ca; chamseddine.talhi@etsmtl.ca
OI Hamou-Lhadj, Abdelwahab/0000-0002-3319-5006
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Defence Research and Development Canada (DRDC) Valcartier (QC); Ericsson
   Canada
FX This research is partly supported by a grant from Natural Sciences and
   Engineering Research Council of Canada (NSERC), Defence Research and
   Development Canada (DRDC) Valcartier (QC), and Ericsson Canada.
CR [Anonymous], P 14 C USENIX SEC S
   [Anonymous], 2004, P NETW DISTR SYST SE
   [Anonymous], P 19 ANN COMP SEC AP
   [Anonymous], P 2001 IEEE S SEC PR
   Axelsson S., 2000, ACM Transactions on Information and Systems Security, V3, P186, DOI 10.1145/357830.357849
   Axelsson S., 2000, CHALMERS U TECHNOLOG, P99
   Baum L. E., ANN MATH STAT, V41, p164C171
   Bhatkar S, 2006, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2006.12
   Carla Marceau., 2000, Proceedings of the 2000 workshop on New security paradigms NSPW '00, P101, DOI [10.1145/366173.366197, DOI 10.1145/366173.366197]
   Chen WH, 2005, COMPUT OPER RES, V32, P2617, DOI 10.1016/j.cor.2004.03.019
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   Corona I, 2013, INFORM SCIENCES, V239, P201, DOI 10.1016/j.ins.2013.03.022
   Creech G, 2014, IEEE T COMPUT, V63, P807, DOI 10.1109/TC.2013.13
   Creech G, 2013, 2013 IEEE WIRELESS COMMUNICATIONS AND NETWORKING CONFERENCE (WCNC), P4487
   Cretu GF, 2008, P IEEE S SECUR PRIV, P81, DOI 10.1109/SP.2008.11
   Denning D.E., 1986, P 7 IEEE S SEC PRIV, P119
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Fan W, 2004, KNOWL INF SYST, V6, P507, DOI 10.1007/s10115-003-0132-7
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Feng HH, 2004, P IEEE S SECUR PRIV, P194
   Feng HHP, 2003, P IEEE S SECUR PRIV, P62, DOI 10.1109/SECPRI.2003.1199328
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   Forrest S, 2008, ANN COMPUT SECURITY, P418, DOI 10.1109/ACSAC.2008.54
   Gao D, 2004, P 11 ACM C COMP COMM, P318, DOI [10.1145/1030083.1030126, DOI 10.1145/1030083.1030126]
   Gao D., 2004, P 13 C USENIX SEC S, P1
   Gates C., 2006, Proceedings of the 2006 Workshop on New Security Paradigms (NSPW), P21
   Giffin JT, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P61
   Han J., 2012, LECT NOTES I COMPUTE, V96, P172, DOI [10.1007/978-3-642-31909-9_10, DOI 10.1007/978-3-642-31909-9_10]
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hu JK, 2010, HANDBOOK OF INFORMATION AND COMMUNICATION SECURITY, P235, DOI 10.1007/978-3-642-04117-4_13
   Huang GB, 2006, NEUROCOMPUTING, V70, P489, DOI 10.1016/j.neucom.2005.12.126
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Jha S, 2001, P IEEE CSFW, P206, DOI 10.1109/CSFW.2001.930147
   Kang DK, 2005, PROCEEDINGS FROM THE SIXTH ANNUAL IEEE SYSTEMS, MAN AND CYBERNETICS INFORMATION ASSURANCE WORKSHOP, P118, DOI 10.1109/IAW.2005.1495942
   Kang DK, 2005, LECT NOTES COMPUT SC, V3495, P511
   Kayacik HG, 2008, ANN CONF PRIV SECUR, P213, DOI 10.1109/PST.2008.25
   Khreich W, 2012, INFORM SCIENCES, V197, P105, DOI 10.1016/j.ins.2012.02.017
   Kruegel C, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P161
   Kruegel C, 2003, LECT NOTES COMPUT SC, V2808, P326
   Lee W, 2001, P IEEE S SECUR PRIV, P130, DOI 10.1109/SECPRI.2001.924294
   Liao HJ, 2013, J NETW COMPUT APPL, V36, P16, DOI 10.1016/j.jnca.2012.09.004
   Liao Y., 2002, USENIX SEC S, V12
   Liao YH, 2002, COMPUT SECUR, V21, P439, DOI 10.1016/S0167-4048(02)00514-X
   Maggi F, 2010, IEEE T DEPEND SECURE, V7, P381, DOI 10.1109/TDSC.2008.69
   McHugh J, 2000, IEEE SOFTWARE, V17, P42, DOI 10.1109/52.877859
   Michael C. C., 2002, ACM Transactions on Information and Systems Security, V5, P203, DOI 10.1145/545186.545187
   Mutz D, 2007, LECT NOTES COMPUT SC, V4637, P1
   Parampalli C., 2008, ACM S INFORM COMPUTE, P156, DOI [10.1145/1368310.1368334, DOI 10.1145/1368310.1368334]
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Provos N., 2003, USENIX SECURITY, V3
   Rawat S., J INF ASSUR SECUR, V1
   Rieck K, 2008, LECT NOTES COMPUT SC, V5137, P108, DOI 10.1007/978-3-540-70542-0_6
   Salton G., 1989, Analysis and Retrieval of Information by Computer
   Sekar R, 2001, P IEEE S SECUR PRIV, P144, DOI 10.1109/SECPRI.2001.924295
   Sharma A, 2007, COMPUT SECUR, V26, P488, DOI 10.1016/j.cose.2007.10.003
   Smola AJ, 1999, ADV NEUR IN, V11, P585
   Sommer R, 2010, P IEEE S SECUR PRIV, P305, DOI 10.1109/SP.2010.25
   Tan KMC, 2002, LECT NOTES COMPUT SC, V2516, P54
   Tan KMC, 2002, P IEEE S SECUR PRIV, P188, DOI 10.1109/SECPRI.2002.1004371
   Tandon G., 2003, P 3 IEEE INT C DAT M
   Tax DMJ, 2004, MACH LEARN, V54, P45, DOI 10.1023/B:MACH.0000008084.60811.49
   Wael Khreich., 2009, Proceedings of the Second IEEE international conference on computational intelligence for security and defense applications (CISDA09), P1
   Wagner David, 2002, P 9 ACM C COMP COMM, P255, DOI DOI 10.1145/586110.586145
   Walter SD, 2005, STAT MED, V24, P2025, DOI 10.1002/sim.2103
   Warrender C, 1999, P IEEE S SECUR PRIV, P133, DOI 10.1109/SECPRI.1999.766910
   Wespi A, 2000, LECT NOTES COMPUT SC, V1907, P110
   Williams S, 2009, PARALLEL COMPUT, V35, P178, DOI 10.1016/j.parco.2008.12.006
   Wressnegger C, 2013, P 2013 ACM WORKSH AR, P67
NR 68
TC 60
Z9 71
U1 0
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 186
EP 197
DI 10.1016/j.infsof.2017.07.009
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FG3DV
UT WOS:000410017900011
DA 2024-07-18
ER

PT J
AU Amanatidis, T
   Chatzigeorgiou, A
   Ampatzoglou, A
AF Amanatidis, Theodoros
   Chatzigeorgiou, Alexander
   Ampatzoglou, Apostolos
TI The relation relation between technical debt and corrective maintenance
   in PHP web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Corrective maintenance; Interest; PHP; Case study;
   Empirical evidence
AB Context: Technical Debt Management (TDM) refers to activities that are performed to prevent the accumulation of Technical Debt (TD) in software. The state-of-research on TDM lacks empirical evidence on the relationship between the amount of TD in a software module and the interest that it accumulates. Considering the fact that in the last years, a large portion of software applications are deployed in the web, we focus this study on PHP applications.
   Objective: Although the relation between debt amount and interest is well-defined in traditional economics (i.e., interest is proportional to the amount of debt), this relation has not yet been explored in the context of TD. To this end, the aim of this study is to investigate the relation between the amount of TD and the interest that has to be paid during corrective maintenance.
   Method: To explore this relation, we performed a case study on 10 open source PHP projects. The obtained data have been analyzed to assess the relation between the amount of TD and two aspects of interest: (a) corrective maintenance (i.e., bug fixing) frequency, which translates to interest probability and (b) corrective maintenance effort which is related to interest amount.
   Results: Both interest probability and interest amount are positively related with the amount of TD accumulated in a specific module. Moreover, the amount of TD is able to discriminate modules that are in need of heavy corrective maintenance.
   Conclusions: The results of the study confirm the cornerstone of TD research, which suggests that modules with a higher level of incurred TD, are costlier in maintenance activities. In particular, such modules prove to be more defect-prone and consequently require more (corrective) maintenance effort. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Amanatidis, Theodoros; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Ampatzoglou, Apostolos] Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
C3 University of Macedonia; University of Groningen
RP Chatzigeorgiou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM tamanatidis@uom.edu.gr; achat@uom.gr; apostolos.ampatzoglou@gmail.com
RI Chatzigeorgiou, Alexandros/AAL-6077-2021; Ampatzoglou,
   Apostolos/AAC-3632-2020
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A., 2015, BUSINESS MODELING SO, P117
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Feng Q, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P221, DOI 10.1109/WICSA.2016.41
   Li ZM, 2014, PROCEEDINGS OF THE 2014 9TH INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE 2014), P119, DOI 10.1109/SYSOSE.2014.6892474
   MacCormack A, 2016, J SYST SOFTWARE, V120, P170, DOI 10.1016/j.jss.2016.06.007
   Nord Robert L, 2016, 9 WORKSH CYB SEC EXP
   Oliva G.A., 2013, P 2013 INT WORKSH PR, P18, DOI DOI 10.1145/2501543.2501547
   Schwanke R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P891, DOI 10.1109/ICSE.2013.6606638
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 10
TC 11
Z9 12
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2017
VL 90
BP 70
EP 74
DI 10.1016/j.infsof.2017.05.004
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ9JK
UT WOS:000405046400005
OA Green Published
DA 2024-07-18
ER

PT J
AU Santos, RES
   da Silva, FQB
   Baldassarre, MT
   de Magalhaes, CVC
AF Santos, Ronnie E. S.
   da Silva, Fabio Q. B.
   Baldassarre, Maria Teresa
   de Magalhaes, Cleyton V. C.
TI Benefits and limitations of project-to-project job rotation in software
   organizations: A synthesis of evidence
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Job rotation; Work design; Software engineering; Systematic literature
   review; Case study; Replication
ID WORK; SPECIALIZATION; HEALTH
AB Context: Job rotation has been proposed as a managerial practice to be applied in the organizational environment to reduce job monotony, boredom, and exhaustion resulting from job simplification, specialization, and repetition. The scientific literature distinguishes between job-to-job and project-to-project rotations. Despite the potential benefits and its actual use on behalf of software companies, we do not have an accumulated body of scientific knowledge about benefits and limitations of job rotation in software engineering practice. In particular, we have no concrete empirical evidence about the use of project-to project rotations in practice.
   Goal: We aim to identify and discuss evidence about project-to-project (P2P) job rotation, in order to understand the potential benefits and limitations of this practice in software organizations. Method: We deployed a mix-method research strategy to collect and analyze empirical evidence from the scientific literature, performing a systematic literature review, on one hand and from industrial practice, performing qualitative case studies on the other. We synthesized the evidence using techniques from meta-ethnography.
   Results: We found eight benefits, nine limitations, and two factors classified as both benefits and limitations of P2P rotations in software engineering. Different research methods yielded confirmatory and complementary evidence, emphasizing the importance of conducting mix-method research. We found no contradictory evidence and five factors were identified in more than one study using different research methods, contributing to the strength of the evidence.
   Conclusion: We synthesized evidence from multiple sources and used different research methods concerning the benefits and limitations of P2P rotation in software engineering practice. Our findings show that rotation tends to benefit important job outcomes, such as motivation, and to decrease job monotony. The main limitations were associated with the potential increase in intra-group social conflicts, individual cognitive effort, and workload, and a temporary decrease in productivity. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Santos, Ronnie E. S.; da Silva, Fabio Q. B.; de Magalhaes, Cleyton V. C.] Univ Fed Pernambuco, Ctr Informat, Cidade Univ, BR-50540740 Recife, PE, Brazil.
   [Baldassarre, Maria Teresa] Univ Bari, Dipartimento Informat, Via E Orabona 4, Bari, Italy.
C3 Universidade Federal de Pernambuco; Universita degli Studi di Bari Aldo
   Moro
RP da Silva, FQB (corresponding author), Univ Fed Pernambuco, Ctr Informat, Cidade Univ, BR-50540740 Recife, PE, Brazil.
EM fabio@cin.ufpe.br; mariateresa.baldassarre@uniba.it
RI da Silva, Fabio Queda Bueno/A-6524-2012
OI da Silva, Fabio Queda Bueno/0000-0002-3734-040X; baldassarre, maria
   teresa/0000-0001-8589-2850
FU CNPq [314523/2009-0]; FACEPE under the MSc scholarship
   [IBPG-0651-1.03/12]
FX Fabio Q. B. da Silva holds a research grant from CNPq #314523/2009-0.
   Cleyton V. C. Magalhaes and Ronnie E. S. Santos are PhD students and
   receive a scholarship from CNPq. FACEPE also supported this research
   under the MSc scholarship IBPG-0651-1.03/12. We thank the reviewers of
   IST Journal for valuable comments and criticisms that greatly improved
   our work. Last but not least, we are very grateful to all participants
   in case studies I and II for dedicating their time and attention to our
   research.
CR A Franca, 2012, INT C EV ASS SOFTW E
   Alaei M., 2015, CUMHUR SCI J, V36, P2088
   Alnuem M. A., 2012, INT C COMP SOFTW APP
   ANG K. T., 1997, INT C INF SYST
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 1996, MASLACH BURNOUT INVE
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Brady T., 2005, 3 EUR C ORG KNOWL LE
   Brunetto Y., 2004, MANAGE DECIS, V42
   CAMPION MA, 1994, ACAD MANAGE J, V37, P1518, DOI 10.5465/256797
   Coyne P. F, 2011, EVIDENCE BASED MODEL
   Da Silva Fabio Q. B., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P153, DOI 10.1109/ESEM.2013.11
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Eriksson T., 2004, U AARHUS WORKING PAP
   Escorpizo R, 2008, INT J IND ERGONOM, V38, P291, DOI 10.1016/j.ergon.2007.10.018
   Fægri TE, 2010, INFORM SOFTWARE TECH, V52, P1118, DOI 10.1016/j.infsof.2010.06.002
   Fowdar C. D., 2002, INT C COMP INF SCI
   FRANCA A. C. C., 2014, P 8 ACM IEEE INT S E
   Franca A. C. C, 2014, A theory of motivation and satisfaction of software engineers
   Gale NK, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-117
   Game AM, 2007, PERS REV, V36, P701, DOI 10.1108/00483480710774007
   Ghaisas S, 2013, IEEE-ACM INT WKSP CO, P37, DOI 10.1109/CESI.2013.6618468
   HACKMAN JR, 1976, ORGAN BEHAV HUM PERF, V16, P250, DOI 10.1016/0030-5073(76)90016-7
   Ho WH, 2009, BMC HEALTH SERV RES, V9, DOI 10.1186/1472-6963-9-8
   Hsieh AT, 2004, INT J HUM RESOUR MAN, V15, P1108, DOI 10.1080/09585190410001677331
   Jang H, 2008, INT J ELECTRON COMM, V12, P57, DOI 10.2753/JEC1086-4415120304
   Kankanhallia A., 2004, DECIS SUPPORT SYST
   Kaymaz K., 2010, Business and Economics Research Journal, V1, P69
   Kriesberg L., 1982, ANN MILL C LECT
   KUKKO M, 2008, HAW INT C SYST SCI
   MELO C., 2011, AG C
   Merriam B.S., 2016, Qualitative research, a guide to design and implementation, V4th
   Moe N. B., 2009, IEEE SOFTW
   Morgeson FP, 2006, J APPL PSYCHOL, V91, P1321, DOI 10.1037/0021-9010.91.6.1321
   Ollo-Lopez A, 2010, J IND RELAT, V52, P219, DOI 10.1177/0022185609359446
   Paas F. G. W. C., 1994, EDUC PSYCHOL REV, V6
   Passos C., 2013, INT C EV ASS SOFTW E
   Paul P, 2004, HUM FACTORS, V46, P437, DOI 10.1518/hfes.46.3.437.50403
   Petticrew M, 2006, SYSTEMATIC REV SOCIA, P336
   Richardson Annette, 2003, Nurs Crit Care, V8, P84, DOI 10.1046/j.1478-5153.2003.00011.x
   SANCHEZ R, 1995, STRATEGIC MANAGE J, V16, P135, DOI 10.1002/smj.4250160921
   Santos R. E. S., 2016, P 20 INT C EV ASS SO
   Santos R. E. S., 2016, P 38 ACM IEEE INT C
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SIMS HP, 1976, ACAD MANAGE J, V19, P195, DOI 10.5465/255772
   Siy H. P., 2011, INT C SOFTW METR S
   Smidts A, 2001, ACAD MANAGE J, V44, P1051, DOI 10.5465/3069448
   Soderquist K. E., 2002, EUR C ORG KNOWL LEAR
   Staffs Keele, 2007, Tech. Rep.
   TAVEGGIA TC, 1976, J VOCAT BEHAV, V9, P293, DOI 10.1016/0001-8791(76)90057-9
   van Wijk R, 2008, J MANAGE STUD, V45, P830, DOI 10.1111/j.1467-6486.2008.00771.x
   VITELES MS, 1950, P ANN FALL C SOC ADV, P129
   Wood R., 1995, HUMAN RESOURCES MANA
   WOOD RE, 1986, ORGAN BEHAV HUM DEC, V37, P60, DOI 10.1016/0749-5978(86)90044-0
   Yin R.K., 2011, Qualitative research from start to finish
NR 56
TC 6
Z9 8
U1 0
U2 31
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2017
VL 89
BP 78
EP 96
DI 10.1016/j.infsof.2017.04.006
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EY3HD
UT WOS:000403861300006
OA Green Published
DA 2024-07-18
ER

PT J
AU Tarhan, A
   Turetken, O
   Reijers, HA
AF Tarhan, Ayca
   Turetken, Oktay
   Reijers, Hajo A.
TI Business process maturity models: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Business process management; Business process orientation; Maturity
   model; Systematic literature review
ID MANAGEMENT
AB Context: The number of maturity models proposed in the area of Business Process Management (BPM) has increased considerably in the last decade. However, there are a number of challenges, such as the limited empirical studies on their validation and a limited extent of actionable properties of these models in guiding their application. These challenges hinder the widespread usage of the maturity models in the BPM field.
   Objective: In order to better understand the state of the research on business process maturity models (BPMMs) and identify opportunities for future research, we conducted a systematic literature review.
   Method: We searched the studies between the years 1990 and 2014 in established digital libraries to identify empirical studies of BPMMs by focusing on their development, validation, and application. We targeted studies on generic models proposed for business process maturity, business process management or orientation maturity, and selected 61 studies out of 2899 retrieved initially.
   Results: We found that despite that many BPMMs were proposed in the last decade, the level of empirical evidence that reveals the validity and usefulness of these models is scarce.
   Conclusion: The current state of research on BPM maturity is in its early phases, and academic literature lacks methodical applications of many mainstream BPMMs that have been proposed. Future research should be directed towards: (1) reconciling existing models with a strong emphasis on prescriptive properties, (2) conducting empirical studies to demonstrate the validity and usefulness of BPMMs, and (3) separating the assessment method used to evaluate the maturity level from the maturity model which acts as the reference framework for the assessment. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Tarhan, Ayca] Hacettepe Univ, Dept Comp Engn, TR-06800 Ankara, Turkey.
   [Turetken, Oktay] Eindhoven Univ Technol, Dept Ind Engn & Innovat Sci, Den Dolech 2, NL-5612 AZ Eindhoven, Netherlands.
   [Reijers, Hajo A.] Vrije Univ Amsterdam, Dept Comp Sci, De Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
C3 Hacettepe University; Eindhoven University of Technology; Vrije
   Universiteit Amsterdam
RP Tarhan, A (corresponding author), Hacettepe Univ, Dept Comp Engn, TR-06800 Ankara, Turkey.
EM atarhan@hacettepe.edu.tr; o.turetken@tue.nl; h.a.reijers@vu.nl
RI KOLUKISA, AYÇA/HKN-2117-2023; Turetken, Oktay/H-1667-2015; Tarhan,
   Ayca/D-6138-2013; Turetken, Oktay/AAA-3441-2020
OI Turetken, Oktay/0000-0003-3798-0439; 
FU Scientific Research Council of Turkey (TUBITAK) under the 2219 program;
   Hacettepe University; Eindhoven University of Technology
FX This work was supported by the Scientific Research Council of Turkey
   (TUBITAK) under the 2219 program. The authors acknowledge this support
   as well as the supports of Hacettepe University and Eindhoven University
   of Technology as other enabling bodies for this joint research.
CR [Anonymous], 2011, STAND CMMI APPR METH
   [Anonymous], 2004, 15504 ISOIEC
   [Anonymous], 2004, OXFORD ENGLISH DICT
   [Anonymous], 2004, BUSINESS PROCESS MAT
   Bandara W., 2007, Proceedings of the 15th European Conference on Information Systems, University of St Gallen, St Gallen, P1240
   Becker J, 2009, BUS INFORM SYST ENG+, V1, P213, DOI 10.1007/s12599-009-0044-5
   Clark BK, 2000, IEEE SOFTWARE, V17, P65, DOI 10.1109/52.895170
   CMU/SEI, 2010, CMUSEI2010TR033
   Cronemyr P, 2013, TOTAL QUAL MANAG BUS, V24, P933, DOI 10.1080/14783363.2013.791114
   Crosby P. B., 1979, QUALITY IS FREE ART
   Curtis B., 2007, MATRUITY MODEL JOUR
   de Bruin T, 2010, INT HANDB INFORM SYS, P559, DOI 10.1007/978-3-642-01982-1_26
   Dombrowski U., 2011, Z WIRTSCH FABR, V106, P400
   EBSE, 2007, EBSE200701
   Gardner RA, 2001, QUAL PROG, V34, P51
   Gronau N., 2010, P 2010 AM C INF SYST
   Hammer M., 2007, HARVARD BUS REV, P1
   Harmon P, 2004, EVALUATING ORG BUSIN
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   HEINZE P, 2009, P INT C KNOWL MAN IN, P276
   Hogrebe F., 2009, HMD PRAX WIRTSCHAFTS, V266, P17
   Indulska M, 2009, LECT NOTES COMPUT SC, V5565, P501, DOI 10.1007/978-3-642-02144-2_39
   Jadhav M., 2009, P INT C FORM SEM ORG, P458
   Jochem Roland, 2011, TQM Journal, V23, P377, DOI 10.1108/17542731111139464
   Kangilaski Taivo, 2013, ICINCO 2013. Proceedings of the 10th International Conference on Informatics in Control, Automation and Robotics, P519
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kohlbacher M, 2011, BUS PROCESS MANAG J, V17, P267, DOI 10.1108/14637151111122347
   Lee J, 2009, STUD COMPUT INTELL, V208, P193
   McCormack K., 2001, BUSINESS PROCESS ORI
   Moradi-Moghadam Mohsen, 2013, International Journal of Business Process Integration and Management, V6, P167
   OMG, 2008, BUS PROC MAT MOD BPM
   Paunescu C., 2009, P 20 INT ANN DAAAM
   Poeppelbuss J, 2011, 19 EUR C INF SYST EC
   Pöppelbuss J, 2011, COMMUN ASSOC INF SYS, V29
   Raschke R.L., 2010, P 2010 AM C INF SYST
   Reijers HA, 2006, BUS PROCESS MANAG J, V12, P389, DOI 10.1108/14637150610678041
   Röglinger M, 2012, BUS PROCESS MANAG J, V18, P328, DOI 10.1108/14637151211225225
   Rohloff M., 2009, P 2010 AM C INF SYST
   Rosemann M., 2005, ECIS 2005 P 13 EUROP, P1
   Rosemann M., 2005, BPTrends, V2, P1
   Saco R. M., 2008, IND MANAG, P50
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Skrinjar R, 2006, ADVANCES IN INFORMATION SYSTEMS DEVELOPMENT, VOL 1 AND 2, P95, DOI 10.1007/978-0-387-36402-5_9
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Tarhan A., 2015, 15504 ISO IEC
   Van Looy A., 2014, Business Process Maturity: A Comparative Study on a Sample of Business Process Maturity Models, DOI [10.1007/978-3-319-04202-2, DOI 10.1007/978-3-319-04202-2]
   Van Looy A., 2010, P 5 SIKSBENAIS C ENT, VVolume 662, P7
   Van Looy A, 2013, INFORM MANAGE-AMSTER, V50, P466, DOI 10.1016/j.im.2013.06.002
   Van Looy A, 2011, TOTAL QUAL MANAG BUS, V22, P1119, DOI 10.1080/14783363.2011.624779
   Von Wangenheim C.G., 2010, P 12 INT C PROD FOC, P2
   Webster J, 2002, MIS QUART, V26, pXIII
   Wendler R, 2012, INFORM SOFTWARE TECH, V54, P1317, DOI 10.1016/j.infsof.2012.07.007
   Willaert P, 2007, LECT NOTES COMPUT SC, V4714, P1
   Wolf C., 2014, STATE BUSINESS PROCE
   Zwicker J, 2010, INT HANDB INFORM SYS, P369, DOI 10.1007/978-3-642-01982-1_18
NR 55
TC 138
Z9 156
U1 10
U2 168
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 122
EP 134
DI 10.1016/j.infsof.2016.01.010
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100009
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Ali, N
   Lai, R
AF Ali, Naveed
   Lai, Richard
TI A method of requirements change management for global software
   development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements change management; Distributed teams; Global software
   development
AB Context: : Requirements change is an inevitable software development activity and can occur due to changes in user requirements, increased understanding of the stakeholders' needs, customer organizational restructure, and availability of new technologies. Timely management of these changes is vital to successful software development, which can be achieved through a rigorous requirements change management (RCM) process. RCM is not straight forward in collocated software development; and with the presences of geographical, social, cultural and temporal factors in Global Software Development (GSD), it makes RCM even more difficult for GSD. Existing RCM methods do not take into consideration of the GSD issues.
   Objective: : In this paper, we present a method for managing requirements changes for GSD.
   Method: : Our method consists of three stages: (i) an understanding of the changes required between different GSD sites is to be established; (ii) a change analysis is to be performed with respect to the development work, which might be either directly or indirectly affected by the changes; and (iii) a finalization of the changes will be made between GSD sites. Past researchers used student groups in a university environment to play the roles of stakeholders in experiments in GSD studies. We validate our method by applying it to a case study of an online shopping system, where the roles of stakeholders were played by a group of students.
   Results: : The results showed that our method facilitates stakeholders to manage requirements changes for GSD better than the existing methods could.
   Conclusion: : Managing changes in requirements at the right time improves the chance of developing a GSD project successfully by minimizing the risks associated with it. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Ali, Naveed; Lai, Richard] La Trobe Univ, Dept Comp Sci & Informat Technol, Bundoora, Vic 3083, Australia.
C3 La Trobe University
RP Lai, R (corresponding author), La Trobe Univ, Dept Comp Sci & Informat Technol, Bundoora, Vic 3083, Australia.
EM n.ali@latrobe.edu.au; r.lai@latrobe.edu.au
FU La Trobe University Postgraduate Write-up Scholarship
FX This work is supported by a La Trobe University Postgraduate Write-up
   Scholarship.
CR Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], 2013, Humanpub Org, DOI DOI 10.4156/AIS.VOL1.ISSUE1.3
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], P AUSTR SOFTW ENG C
   Ansari Ali Akbar, 2010, Journal of Theoretical and Applied Information Technology, V20, P52
   Atkins D., 2001, P BELL LABS COL INT
   Babar MA, 2008, EMPIR SOFTW ENG, V13, P39, DOI 10.1007/s10664-007-9052-6
   Babar MA, 2014, INFORM SOFTWARE TECH, V56, P1, DOI 10.1016/j.infsof.2013.10.002
   Colomo-Palacios R, 2014, SOFTWARE QUAL J, V22, P3, DOI 10.1007/s11219-012-9191-x
   Dingsoyr T, 2014, IT PROF, V16, P22, DOI 10.1109/MITP.2013.19
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Gross J. L, 2004, HDB GRAPH THEORY, P25
   Heindl M., 2006, international workshop on Global software development for the practitioner, P20
   Hussain W., 2012, P 2 INT REQ ENG EFF
   Jayatilleke S, 2013, IEEE AUS SOFT ENGR, P175, DOI 10.1109/ASWEC.2013.29
   Jones C., 2007, Estimating Software Costs: Bringing Realism To Estimating
   Khan A. A., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P944, DOI 10.1109/ICCISci.2012.6297161
   Khan A. A., 2013, P SOC BEHAV SCI, V129, P496
   Khan SU, 2009, ASIA PAC SOFWR ENG, P79, DOI 10.1109/APSEC.2009.16
   Kobayashi A, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P171, DOI 10.1109/ECBS.2001.922419
   Kumar S. A., 2011, INT J STW ENG APPL, V2
   Lam W., 1999, P EUROMICRO C
   Lee YQ, 2006, LECT NOTES COMPUT SC, V3994, P805
   Lloyd WJ, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P311, DOI 10.1109/ICRE.2002.1048544
   LOCK S, 1990, P 4 AUSTR C REQ ENG, P29
   Manteli C, 2014, INFORM SOFTWARE TECH, V56, P1309, DOI 10.1016/j.infsof.2014.04.012
   McGee S., 2009, INT C SOFTW ENG ADV, P51
   Minhas N.M., 2014, Journal of Software Engineering and Applications, V07, P779, DOI DOI 10.4236/JSEA.2014.79072
   Nazir, 2013, EM TECHN ICET 2013 I, P1, DOI DOI 10.1109/ICET.2013.6743519
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sangwan R., 2006, Global software development handbook
   Shami N.S., 2004, CASCON 04, P255
   Sinha V, 2006, IEEE SOFTWARE, V23, P52, DOI 10.1109/MS.2006.123
   Smite D., 2006, Journal of Universal Knowledge Management, V1, P69
   Van de Walle B, 2007, LECT NOTES COMPUT SC, V4495, P381
   Wongthongtham P, 2007, LECT NOTES COMPUT SC, V4706, P346
   Zhang H, 2014, INFORM SOFTWARE TECH, V56, P40, DOI 10.1016/j.infsof.2013.07.001
NR 37
TC 21
Z9 25
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 49
EP 67
DI 10.1016/j.infsof.2015.09.005
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600005
DA 2024-07-18
ER

PT J
AU Parody, L
   Gómez-López, MT
   Gasca, RM
AF Parody, Luisa
   Teresa Gomez-Lopez, Maria
   Gasca, Rafael M.
TI Hybrid business process modeling for the optimization of outcome data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Hybrid model; Business process; Constraint programming; Data
   optimization
ID RECOMMENDATIONS; CONSTRAINTS; EXECUTION; LANGUAGES; ISSUE
AB Context: Declarative business processes are commonly used to describe permitted and prohibited actions in a business process. However, most current proposals of declarative languages fail in three aspects: (1) they tend to be oriented only towards the execution order of the activities; (2) the optimization is oriented only towards the minimization of the execution time or the resources used in the business process; and (3) there is an absence of capacity of execution of declarative models in commercial Business Process Management Systems.
   Objective: This contribution aims at taking into account these three aspects, by means of: (1) the formalization of a hybrid model oriented towards obtaining the outcome data optimization by combining a data-oriented declarative specification and a control-flow-oriented imperative specification; and (2) the automatic creation from this hybrid model to an imperative model that is executable in a standard Business Process Management System.
   Method: An approach, based on the definition of a hybrid business process, which uses a constraint programming paradigm, is presented. This approach enables the optimized outcome data to be obtained at runtime for the various instances.
   Results: A language capable of defining a hybrid model is provided, and applied to a case study. Likewise, the automatic creation of an executable constraint satisfaction problem is addressed, whose resolution allows us to attain the optimized outcome data. A brief computational study is also shown.
   Conclusion: A hybrid business process is defined for the specification of the relationships between declarative data and control-flow imperative components of a business process. In addition, the way in which this hybrid model automatically creates an entirely imperative model at design time is also defined. The resulting imperative model, executable in any commercial Business Process Management System, can obtain, at execution time, the optimized outcome data of the process. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Parody, Luisa; Teresa Gomez-Lopez, Maria; Gasca, Rafael M.] Univ Seville, Dept Languages & Comp Syst, Seville, Spain.
C3 University of Sevilla
RP Parody, L (corresponding author), Univ Seville, Dept Languages & Comp Syst, Seville, Spain.
EM lparody@us.es; maytegomez@us.es; gasca@us.es
RI Parody, Luisa/M-2370-2014; Gómez-López, María Teresa/L-1845-2014; M.
   Gasca, Rafael/F-5857-2015
OI Parody, Luisa/0000-0001-6096-8564; Gómez-López, María
   Teresa/0000-0002-3562-875X; M. Gasca, Rafael/0000-0003-2348-7424
FU Ministry of Science and Technology of Spain [TIN2009-13714]; European
   Regional Development Fund (ERDF/FEDER)
FX This work has been partially funded by the Ministry of Science and
   Technology of Spain (TIN2009-13714) and the European Regional
   Development Fund (ERDF/FEDER).
CR Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   [Anonymous], 2016, ADV FUNC MAT
   [Anonymous], J COMPUTER SCI
   [Anonymous], 2008, SEM BUS VOC BUS RUL
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Awad A, 2009, LECT NOTES COMPUT SC, V5900, P500, DOI 10.1007/978-3-642-10383-4_37
   Barba I, 2013, DATA KNOWL ENG, V86, P61, DOI 10.1016/j.datak.2013.01.004
   Bonita community, 2012, BON OP SOL
   Calvanese D., 2013, P 32 ACM SIGMOD SIGA, P1, DOI DOI 10.1145/2463664.2467796
   Castellanos M, 2005, LECT NOTES COMPUT SC, V3433, P1
   Cheeseman P.C., 1991, PROC 12 IJCAI, V91, P331, DOI [DOI 10.5555/1631171.1631221, 10.5555/1631171.1631221]
   Conforti Raffaele, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P116, DOI 10.1007/978-3-642-38709-8_8
   De Giacomo G, 2015, LECT NOTES COMPUT SC, V9097, P84, DOI 10.1007/978-3-319-19069-3_6
   De Masellis R., 2014, Proceedings of the 2014 International Conference on Software and System Process, P134
   Dechter R., 2003, Constraint Processing
   E. Foundations, 2014, EPS TRANSF LANG
   E. Foundations, 2014, EPS
   Fabra J, 2012, J SYST SOFTWARE, V85, P607, DOI 10.1016/j.jss.2011.09.022
   Fahland D, 2010, LECT NOTES BUS INF P, V43, P477
   Fahland D, 2009, LECT NOTES BUS INF P, V29, P353
   Goedertier S., 2006, P 9 INT C BUS INF SY, P558
   Goedertier S., 2007, EM BRA2CE V0 1 VOCAB
   Goedertier S, 2007, LECT NOTES COMPUT SC, V4824, P39
   Goedertier S, 2007, LECT NOTES COMPUT SC, V4805, P603
   Goedertier S, 2006, LECT NOTES COMPUT SC, V4103, P5
   Gomez-Lopez M.T., 2011, INT C INF SYST DEV I, P15
   Huang SM, 2008, INFORM SOFTWARE TECH, V50, P1069, DOI 10.1016/j.infsof.2007.10.014
   Jimenez-Ramirez Andres, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P99, DOI 10.1007/978-3-642-38709-8_7
   Knuplesch D, 2010, LECT NOTES COMPUT SC, V6412, P332, DOI 10.1007/978-3-642-16373-9_24
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Krzysztof A., 2003, PRINCIPLES CONSTRAIN
   Le M., 2014, EXPERT SYST
   Li B, 2008, INT FED INFO PROC, V254, P1
   Ly LT, 2011, LECT NOTES COMPUT SC, V7044, P82, DOI 10.1007/978-3-642-25109-2_7
   Ly LT, 2008, DATA KNOWL ENG, V64, P3, DOI 10.1016/j.datak.2007.06.007
   Ly LT, 2010, LECT NOTES COMPUT SC, V6051, P9
   Maggi Fabrizio Maria, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P81, DOI 10.1007/978-3-642-40176-3_8
   Maggi Fabrizio Maria, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P132, DOI 10.1007/978-3-642-23059-2_13
   Maggi F.M., 2014, DECLARE TOOL
   Maggi F.M., 2011, LNCS
   Maggi F.M., 2013, CORR
   Maggi FM, 2014, LECT NOTES COMPUT SC, V8659, P392, DOI 10.1007/978-3-319-10172-9_27
   Meyer Andreas, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P171, DOI 10.1007/978-3-642-40176-3_14
   Meyer Andreas., 2011, EMISA Forum, V31, P5
   Montali M., 2013, P 28 ANN ACM S APPL, P1391
   Montali M., 2010, LECT NOTES BUSINESS, V56
   Montali M., 2009, THESIS
   Montali M, 2013, ACM T INTEL SYST TEC, V5, DOI 10.1145/2542182.2542199
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Parody L., 2012, COMMUN IBIMA, V2012, DOI [10.5171/2012.959796, DOI 10.5171/2012.959796]
   Parody L, 2012, LECT NOTES BUS INF P, V125, P68
   Pesic M, 2006, LECT NOTES COMPUT SC, V4103, P169
   Pesic Maja, 2010, MODERN BUSINESS PROC, P175, DOI [10.1007/978-3-642-03121-2_6, DOI 10.1007/978-3-642-03121-2_6]
   Pichler P, 2012, LECT NOTES BUS INF P, V99, P383
   Reijers H.A., 2013, LECT NOTES BUSINESS, V8094
   Roover W.D., 2011, LECT NOTES BUSINESS, V99, P446
   Rummler G., 1995, IMPROVING PERFORMANC
   Rychkova I, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P99
   Rychkova I., 2011, PROC 44 HAWAII INT C, P1
   Rychkova I, 2011, LECT NOTES BUS INF P, V66, P420
   Sadiq S, 2006, ENTERPRISE INFORMATION SYSTEMS VII, P187, DOI 10.1007/978-1-4020-5347-4_21
   Sadiq SW, 2005, INFORM SYST, V30, P349, DOI 10.1016/j.is.2004.05.002
   Schonenberg H, 2008, LECT NOTES COMPUT SC, V5240, P51, DOI 10.1007/978-3-540-85758-7_7
   Team choco solver, 2014, CHOC 3 1 1
   Gómez-López MT, 2011, LECT NOTES BUS INF P, V66, P146
   Torres V, 2006, LECT NOTES COMPUT SC, V4102, P322
   van der Aalst W., 2011, PETRI NET ORIENTED A
   van der Aalst WMP, 2005, DATA KNOWL ENG, V53, P129, DOI 10.1016/j.datak.2004.07.003
   van der Aalst WMP, 2003, AUTOMAT CONSTR, V12, P303, DOI 10.1016/S0926-5805(02)00106-1
   Van Nuffelen Bert, 2001, LPNMR, P393
   Wallace R.J., 1995, DIRECTED ARC CONSIST, P121
   Weber B., 2012, ENABLING FLEXIBILITY
   Weber B, 2009, COMPUT SCI-RES DEV, V23, P47, DOI [10.1007/s00450-009-0069-5, 10.1007/S00450-009-0069-5]
   Weske M., 2001, Proceedings of the 34th Annual Hawaii International Conference on System Sciences, DOI 10.1109/HICSS.2001.927082
   Westergaard Michael, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P83, DOI 10.1007/978-3-642-23059-2_10
   Zhou XF, 2013, SIGMOD REC, V42, P63
   Zugal S, 2012, LECT NOTES BUS INF P, V113, P167
NR 77
TC 9
Z9 9
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 140
EP 154
DI 10.1016/j.infsof.2015.10.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Foucault, M
   Teyton, C
   Lo, D
   Blanc, X
   Falleri, JR
AF Foucault, Matthieu
   Teyton, Cedric
   Lo, David
   Blanc, Xavier
   Falleri, Jean-Remy
TI On the usefulness of ownership metrics in open-source software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Empirical study; Process metrics
AB Context: Code ownership metrics were recently defined in order to distinguish major and minor contributors of a software module, and to assess whether the ownership of such a module is strong or shared between developers.
   Objective: The relationship between these metrics and software quality was initially validated on proprietary software projects. Our objective in this paper is to evaluate such relationship in open-source software projects, and to compare these metrics to other code and process metrics.
   Method: On a newly crafted dataset of seven open-source software projects, we perform, using inferential statistics, an analysis of code ownership metrics and their relationship with software quality.
   Results: We confirm the existence of a relationship between code ownership and software quality, but the relative importance of ownership metrics in multiple linear regression models is low compared to metrics such as the number of lines of code, the number of modifications performed over the last release, or the number of developers of a module.
   Conclusion: Although we do find a relationship between code ownership and software quality, the added value of ownership metrics compared to other metrics is still to be proven. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Foucault, Matthieu; Teyton, Cedric; Blanc, Xavier; Falleri, Jean-Remy] Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 178902, Singapore.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de
   Bordeaux; Singapore Management University
RP Foucault, M (corresponding author), Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
EM mfoucaul@labri.fr; cteyton@labri.fr; davidlo@smu.edu.sg;
   xbianc@labri.fr; falleri@labri.fr
RI ; Lo, David/A-2493-2012
OI Falleri, Jean-Remy/0000-0002-8284-7218; Lo, David/0000-0002-4367-7201
CR [Anonymous], 2007, Proceedings of the 3rd International Workshop on Predictor Models in Software Engineering
   [Anonymous], 2008, P ISSTA WORKSHOP DEF
   [Anonymous], 2255827 SSRN
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Bird C., 2007, MSR 07, P6, DOI DOI 10.1109/MSR.2007.23
   Bird C., 2007, 4 INT WORKSHOP MININ, P26
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Capiluppi A., 2012, Open Source Systems: Long-Term Sustainability: Vol. 378. IFIP Advances in Information and Communication Technology, V378, P178, DOI [10.1007/978-3-642-33442-9_12, DOI 10.1007/978-3-642-33442-9_12]
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Foucault Matthieu, 2014, P 18 INT C EV ASS SO, P1, DOI [10.1145/2601248.2601283, DOI 10.1145/2601248.2601283]
   Groemping U., 2006, J STAT SOFTW, V17, P1, DOI [10.18637/jss.v017.i01, DOI 10.18637/JSS.V017.I01]
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Illes-Seifert T, 2010, INFORM SOFTWARE TECH, V52, P539, DOI 10.1016/j.infsof.2009.11.010
   Matsumoto S., 2010, P 6 INT C PRED MOD S, P18
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
NR 28
TC 14
Z9 14
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2015
VL 64
BP 102
EP 112
DI 10.1016/j.infsof.2015.01.013
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ3EB
UT WOS:000355365100007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Idri, A
   Amazal, FA
   Abran, A
AF Idri, Ali
   Amazal, Fatima Azzahra
   Abran, Alain
TI Analogy-based software development effort estimation: A systematic
   mapping and review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Mapping study; Systematic literature review; Software development effort
   estimation; Analogy; Case-based reasoning
ID COST ESTIMATION; ADAPTATION TECHNIQUES; PREDICTION; OPTIMIZATION;
   REGRESSION; SELECTION; WEIGHTS; MODEL; WEB
AB Context: Analogy-based Software development Effort Estimation (ASEE) techniques have gained considerable attention from the software engineering community. However, existing systematic map and review studies on software development effort prediction have not investigated in depth several issues of ASEE techniques, to the exception of comparisons with other types of estimation techniques.
   Objective: The objective of this research is twofold: (1) to classify ASEE studies which primary goal is to propose new or modified ASEE techniques according to five criteria: research approach, contribution type, techniques used in combination with ASEE methods, and ASEE steps, as well as identifying publication channels and trends and (2) to analyze these studies from five perspectives: estimation accuracy, accuracy comparison, estimation context, impact of the techniques used in combination with ASEE methods, and ASEE tools.
   Method: We performed a systematic mapping of studies for which the primary goal is to develop or to improve ASEE techniques published in the period 1990-2012, and reviewed them based on an automated search of four electronic databases.
   Results: In total, we identified 65 studies published between 1990 and 2012, and classified them based on our predefined classification criteria. The mapping study revealed that most researchers focus on addressing problems related to the first step of an ASEE process, that is, feature and case subset selection. The results of our detailed analysis show that ASEE methods outperform the eight techniques with which they were compared, and tend to yield acceptable results especially when combining ASEE techniques with Fuzzy Logic (FL) or Genetic Algorithms (GA).
   Conclusion: Based on the findings of this study, the use of other techniques such FL and GA in combination with an ASEE method is promising to generate more accurate estimates. However, the use of ASEE techniques by practitioners is still limited: developing more ASEE tools may facilitate the application of these techniques and then lead to increasing the use of ASEE techniques in industry. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Idri, Ali; Amazal, Fatima Azzahra] Mohammed Souissi Univ, ENSIAS, Software Projects Management Res Team, Rabat 10100, Morocco.
   [Abran, Alain] Ecole Technol Super, Dept Software Engn, Montreal, PQ H3C IK3, Canada.
C3 Mohammed V University in Rabat; University of Quebec; Ecole de
   Technologie Superieure - Canada
RP Idri, A (corresponding author), Mohammed Souissi Univ, ENSIAS, Software Projects Management Res Team, Rabat 10100, Morocco.
EM idri.ali123@gmail.com
RI Abran, Alain/I-2493-2016; amazal, fatima azzahra/JEN-1367-2023
OI Abran, Alain/0000-0003-2670-9061; Idri, Ali/0000-0002-4586-4158
CR Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], J COMPUTER SCI
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], 2002, Applied Statistics for Software Managers
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   Auer M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P147
   Azzeb M, 2008, LECT NOTES COMPUT SC, V5007, P123, DOI 10.1007/978-3-540-79588-9_12
   Azzeh M., 2011, Proceedings of the 2011 IEEE 11th International Conference on Computer and Information Technology (CIT 2011), P328, DOI 10.1109/CIT.2011.48
   Azzeh M., 2008, P 4 INT WORKSH PRED, P71, DOI DOI 10.1145/1370788.1370805
   AZZEH M, 2009, P 5 INT C PRED MOD S, P1
   Azzeh M, 2012, EMPIR SOFTW ENG, V17, P90, DOI 10.1007/s10664-011-9176-6
   Azzeh M, 2011, LECT NOTES COMPUT SC, V6882, P315, DOI 10.1007/978-3-642-23863-5_32
   Azzeh M, 2011, J SYST SOFTWARE, V84, P270, DOI 10.1016/j.jss.2010.09.028
   Azzeh M, 2010, EMPIR SOFTW ENG, V15, P60, DOI 10.1007/s10664-009-9113-0
   Bisio R., 1995, Case-Based Reasoning Research and Development. First International Conference, ICCBR-95. Proceedings, P11, DOI 10.1007/3-540-60598-3_2
   Boehm BW., 1981, Software Engineering Economics
   Boetticher G., PROMISE REPOSITORY E
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Desharnais J. M., 1989, Analyse statistique de la productivitie des projects informatique a partie de la technique des point des function
   Fernandez A, 2011, INFORM SOFTWARE TECH, V53, P789, DOI 10.1016/j.infsof.2011.02.007
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Higgins J, 2009, COCHRANE HDB SYSTEMA, DOI DOI 10.1002/9780470712184
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Idri A, 2002, ENG INTELL SYST ELEC, V10, P147
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   Idri A, 2001, JOINT 9TH IFSA WORLD CONGRESS AND 20TH NAFIPS INTERNATIONAL CONFERENCE, PROCEEDINGS, VOLS. 1-5, P470, DOI 10.1109/NAFIPS.2001.944298
   Idri A, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P85, DOI 10.1109/METRIC.2001.915518
   Idri A., 2006, P INT C SOFTW PROC P, P53
   Idris A., 2008, PROC WIRELESS DAYS, V2008, P1, DOI [10.1109/WD.2008.4812834, DOI 10.1109/WD.2008.4812834]
   Jingzhou Li, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P126
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KADODA G, 2000, P 4 INT C EMP ASS SO, P23
   Kamei Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P312
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P222, DOI 10.1109/ASPEC.2007.42
   Keung JW, 2008, ASIA PAC SOFWR ENG, P495, DOI 10.1109/APSEC.2008.43
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kirsopp C, 2003, LECT NOTES ARTIF INT, V2689, P231
   Kirsopp Colin., 2002, GECCO 02, P1367
   Kitchenham B., 2007, EBSE200701 KEEL U U
   KITCHENHAM BA, 2006, P EMP ASS SOFTW ENG, P89
   Kitchenham Barbara., 2010, P 2010 ACM IEEE INT, P1
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   KOSTI MV, 2010, P 3D ART INT TECHN S
   LETCHMUNAN S, 2010, P 14 INT C EV ASS SO, P15
   LI J, 2007, P 3D INT WORKSH PRED
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li YF, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON MANAGEMENT OF INNOVATION AND TECHNOLOGY, VOLS 1-3, P281, DOI 10.1109/ICMIT.2008.4654377
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Li YF, 2009, EXPERT SYST APPL, V36, P5921, DOI 10.1016/j.eswa.2008.07.062
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Light RJ., 1984, Summing up: The science of reviewing research, DOI DOI 10.4159/9780674040243
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P100, DOI 10.1109/ISESE.2003.1237969
   Mendes E, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P79, DOI 10.1109/ISESE.2002.1166928
   MENDES E, 2000, P 12 ACM C HYP HYP, P249
   MENDES E, 2001, P WEB ENG SOFTW ENG, P295
   Milios D, 2011, IFIP ADV INF COMM TE, V364, P350
   Mittas N, 2008, INFORM SOFTWARE TECH, V50, P221, DOI 10.1016/j.infsof.2007.04.001
   Mittas N, 2010, EMPIR SOFTW ENG, V15, P523, DOI 10.1007/s10664-010-9128-6
   Mittas N, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P70
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   OHSUGI N, 2007, P 1 INT S EMP SOFTW, P384
   PREMRAJ R, 2003, P 8 UK WORKSH CAS BA, P26
   Schulz S., 1999, P 7 GERM WORKSH CAS, P3
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
   STAMELOS I, 2001, P 12 EUR SOFTW CONTR, P17
   Stamelos L, 2003, INFORM MANAGE-AMSTER, V40, P729, DOI 10.1016/S0378-7206(02)00099-X
   Tosun A, 2009, EXPERT SYST APPL, V36, P10325, DOI 10.1016/j.eswa.2009.01.079
   Tsunoda M., 2011, P 7 INT C PRED MOD S
   Tuan Khanh Le-Do, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P503, DOI 10.1109/COMPSAC.2010.56
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wen JF, 2009, ASIA PAC SOFWR ENG, P179, DOI 10.1109/APSEC.2009.40
   2011, COMP SCI C RANK CORE
NR 90
TC 123
Z9 131
U1 1
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 206
EP 230
DI 10.1016/j.infsof.2014.07.013
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800012
DA 2024-07-18
ER

PT J
AU Acuña, ST
   Gómez, MN
   Hannay, JE
   Juristo, N
   Pfahl, D
AF Acuna, Silvia T.
   Gomez, Marta N.
   Hannay, Jo E.
   Juristo, Natalia
   Pfahl, Dietmar
TI Are team personality and climate related to satisfaction and software
   quality? Aggregating results from a twice replicated experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Personality factors; Team climate; Software quality; Satisfaction;
   Replication; Meta-analysis
ID PERFORMANCE; INNOVATION
AB Context: Research into software engineering teams focuses on human and social team factors. Social psychology deals with the study of team formation and has found that personality factors and group processes such as team climate are related to team effectiveness. However, there are only a handful of empirical studies dealing with personality and team climate and their relationship to software development team effectiveness.
   Objective: We present aggregate results of a twice replicated quasi-experiment that evaluates the relationships between personality, team climate, product quality and satisfaction in software development teams.
   Method: Our experimental study measures the personalities of team members based on the Big Five personality traits (openness, conscientiousness, extraversion, agreeableness, neuroticism) and team climate factors (participative safety, support for innovation, team vision and task orientation) preferences and perceptions. We aggregate the results of the three studies through a meta-analysis of correlations. The study was conducted with students.
   Results: The aggregation of results from the baseline experiment and two replications corroborates the following findings. There is a positive relationship between all four climate factors and satisfaction in software development teams. Teams whose members score highest for the agreeableness personality factor have the highest satisfaction levels. The results unveil a significant positive correlation between the extraversion personality factor and software product quality. High participative safety and task orientation climate perceptions are significantly related to quality.
   Conclusions: First, more efficient software development teams can be formed heeding personality factors like agreeableness and extraversion. Second, the team climate generated in software development teams should be monitored for team member satisfaction. Finally, aspects like people feeling safe giving their opinions or encouraging team members to work hard at their job can have an impact on software quality. Software project managers can take advantage of these factors to promote developer satisfaction and improve the resulting product. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Acuna, Silvia T.] Univ Autonoma Madrid, Escuela Politecn Super, E-28049 Madrid, Spain.
   [Gomez, Marta N.] Univ CEU San Pablo, Escuela Politecn Super, Madrid 28668, Spain.
   [Hannay, Jo E.] Norwegian Def Res Estab FFI, Modeling & Simulat Res Program, NO-2027 Kjeller, Norway.
   [Juristo, Natalia] Univ Politecn Madrid, Fac Informat, E-28660 Madrid, Spain.
   [Pfahl, Dietmar] Univ Tartu, Inst Comp Sci, EE-50409 Tartu, Estonia.
C3 Autonomous University of Madrid; San Pablo CEU University; Norwegian
   Defence Research Establishment; Universidad Politecnica de Madrid;
   University of Tartu
RP Acuña, ST (corresponding author), Univ Autonoma Madrid, Escuela Politecn Super, Calle Francisco Tomas & Valiente 11, E-28049 Madrid, Spain.
EM silvia.acunna@uam.es; mgomez.eps@ceu.es; jo.Hannay@ffi.no;
   natalia@fi.upm.es; dietmar.pfahl@ut.ee
RI Acuña, Silvia/A-7395-2008; Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015
OI Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X
FU project: Experiment Replication and Synthesis Technologies in SE [MICINN
   TIN2011-23216]; project: Go Lite [MICINN TIN2011-24139]
FX This research has been funded by the following projects: Experiment
   Replication and Synthesis Technologies in SE (MICINN TIN2011-23216) and
   Go Lite (MICINN TIN2011-24139).
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   Anderson N., 2003, TEAM SELECTION INVEN
   Anderson N.R., 1994, The team climate inventory: Manual and user's guide
   Anderson Neil., 1999, Team climate inventory : starter set
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], UNIFIED SOFTWARE PRO
   [Anonymous], P C SIGCPR
   [Anonymous], AG MAN
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE'10
   [Anonymous], DOES READINESS AGILE
   [Anonymous], INNOV INNOVATION CRE
   [Anonymous], P ACM IEEE INT S EMP
   [Anonymous], P 3 INT S EMP SOFTW
   [Anonymous], WORK GROUP CLIMATE D
   [Anonymous], P 24 INT C SOFTW ENG
   [Anonymous], P 6 INT WORKSH TEAMW
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Barry B, 1997, J APPL PSYCHOL, V82, P62, DOI 10.1037/0021-9010.82.1.62
   BECK K, 1989, SIGPLAN NOTICES, V24, P1, DOI 10.1145/74878.74879
   Beck K., 2001, Planning extreme programming
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Borenstein M., 2007, Meta-analysis, com
   Burch G.S.J., 2004, Journal of Managerial Psychology, V19, P406
   Burch GSJ, 2008, INT REV IND ORGAN PS, V23, P261
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Chan D, 1998, J APPL PSYCHOL, V83, P234, DOI 10.1037/0021-9010.83.2.234
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Costa PT., 2002, NEO PERSONALITY INVE
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Curral L.A., 2001, EUR J WORK ORGAN PSY, V10, P187, DOI [10.1080/13594320143000627, DOI 10.1080/13594320143000627]
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   English A, 2004, SMALL GR RES, V35, P643, DOI 10.1177/1046496404266320
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Feldt R., 2008, INT WORKSHOP COOPERA, P49, DOI DOI 10.1145/1370114.1370127
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   GLADSTEIN DL, 1984, ADMIN SCI QUART, V29, P499, DOI 10.2307/2392936
   Hackman J., 1987, WORK REDESIGN
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hedges LV, 1998, PSYCHOL METHODS, V3, P486, DOI 10.1037/1082-989X.3.4.486
   Higgins JPT, 2003, BMJ-BRIT MED J, V327, P557, DOI 10.1136/bmj.327.7414.557
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hunter JE, 2000, INT J SELECT ASSESS, V8, P275, DOI 10.1111/1468-2389.00156
   IEEE Computer Society, 2004, GUID SOFTW ENG BOD K
   Jarvenpaa SL, 1999, ORGAN SCI, V10, P791, DOI 10.1287/orsc.10.6.791
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jehn KA, 1997, ADMIN SCI QUART, V42, P530, DOI 10.2307/2393737
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   KENNY DA, 1985, J PERS SOC PSYCHOL, V48, P339, DOI 10.1037/0022-3514.48.2.339
   Lipsey M., 2001, PRACTICAL METAANALYS
   Macias F, 2003, PROCEEDINGS OF THE FOURTH MEXICAN INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE (ENC 2003), P73, DOI 10.1109/ENC.2003.1232877
   McGrath J.E., 1984, GROUPS INTERACTION P
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Molleman E, 2004, SMALL GR RES, V35, P515, DOI 10.1177/1046496404264361
   Myers Isabel Briggs, 1998, MBTI Manual: A Guide to the Development and Use of the Myers-Briggs Type Indicator
   Peslak A. R., 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P273, DOI 10.1145/1125170.1125233
   Pfahl D, 2004, INFORM SOFTWARE TECH, V46, P127, DOI 10.1016/S0950-5849(03)00115-0
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   Sudhakar GP, 2011, TEAM PERFORM MANAG, V17, P187, DOI 10.1108/13527591111143718
   THAMHAIN HJ, 1987, IEEE T ENG MANAGE, V34, P130, DOI 10.1109/TEM.1987.6498873
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   Van Vianen A.E. M., 2001, EUR J WORK ORGAN PSY, V10, P97, DOI [10.1080/13594320143000573, DOI 10.1080/13594320143000573]
   West MA, 1996, J APPL PSYCHOL, V81, P680, DOI 10.1037/0021-9010.81.6.680
   Wynekoop J. L., 2000, Information Technology & People, V13, P186, DOI 10.1108/09593840010377626
   Zander A., 1994, Making groups effective, V2nd
NR 70
TC 38
Z9 41
U1 0
U2 50
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 141
EP 156
DI 10.1016/j.infsof.2014.09.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AU9YI
UT WOS:000345947500009
OA Green Accepted
DA 2024-07-18
ER

PT J
AU da Silva, IF
   Neto, PADS
   O'Leary, P
   de Almeida, ES
   Meira, SRD
AF da Silva, Ivonei Freitas
   Silveira Neto, Paulo Anselmo da Mota
   O'Leary, Padraig
   de Almeida, Eduardo Santana
   de Lemos Meira, Silvio Romero
TI Using a multi-method approach to understand Agile software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile; Software product lines; Multi-method approach; Case study;
   Mapping study; Expert opinion
AB Context: Software product lines (SPLs) and Agile are approaches that share similar objectives. The main difference is the way in which these objectives are met. Typically evidence on what activities of Agile and SPL can be combined and how they can be integrated stems from different research methods performed separately. The generalizability of this evidence is low, as the research topic is still relatively new and previous studies have been conducted using only one research method.
   Objective: This study aims to increase understanding of Agile SPL and improve the generalizability of the identified evidence through the use of a multi-method approach.
   Method: Our multi-method research combines three complementary methods (Mapping Study, Case Study and Expert Opinion) to consolidate the evidence.
   Results: This combination results in 23 findings that provide evidence on how Agile and SPL could be combined.
   Conclusion: Although multi-method research is time consuming and requires a high degree of effort to plan, design, and perform, it helps to increase the understanding on Agile SPL and leads to more generalizable evidence. The findings confirm a synergy between Agile and SPL and serve to improve the body of evidence in Agile SPL. When researchers and practitioners develop new Agile SPL approaches, it will be important to consider these synergies. (C) 2014 Elsevier B.V. All rights reserved.
C1 [da Silva, Ivonei Freitas; de Lemos Meira, Silvio Romero] Univ Fed Pernambuco, Recife, PE, Brazil.
   [de Almeida, Eduardo Santana] Univ Fed Bahia, Salvador, BA, Brazil.
   [da Silva, Ivonei Freitas; Silveira Neto, Paulo Anselmo da Mota; de Almeida, Eduardo Santana; de Lemos Meira, Silvio Romero] Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
   [O'Leary, Padraig] Univ Limerick, Irish Software Engn Res Ctr, Lero, Limerick, Ireland.
   [O'Leary, Padraig] Univ Limerick, Ctr Appl Res Connected Hlth, ARCH, Limerick, Ireland.
   [da Silva, Ivonei Freitas] Western Parana State Univ, Cascavel, Parana, Brazil.
C3 Universidade Federal de Pernambuco; Universidade Federal da Bahia;
   University of Limerick; University of Limerick; Universidade Estadual do
   Oeste do Parana
RP da Silva, IF (corresponding author), Western Parana State Univ, Cascavel, Parana, Brazil.
EM ifs3@cin.ufpe.br; pamsn@rise.com.br; padraigoleary@ul.ie;
   esa@dcc.ufba.br; srlm@cin.ufpe.br
RI Meira, Silvio/AAT-9381-2020; de Almeida, Eduardo/JJC-2493-2023;
   Silveira, Paulo/AFR-7826-2022
FU National Institute of Science and Technology for Software Engineering
   (INES<SUP>1</SUP>) - CNPq; FACEPE [573964/2008-4, APQ-1037-1.03/08];
   CNPq [305968/2010-6, 559997/2010-8, 474766/2010-1]; FAPESB
FX This work was partially supported by the National Institute of Science
   and Technology for Software Engineering (INES<SUP>1</SUP>), funded by
   CNPq and FACEPE, grants 573964/2008-4 and APQ-1037-1.03/08 and CNPq
   grants 305968/2010-6, 559997/2010-8, 474766/2010-1 and FAPESB.
CR [Anonymous], 1988, Principles of software engineering management
   Babar M.A., SPLC 09 P 13 INT SOF, P171
   Balbino M., 23 INT C SOFTW ENG K
   Basili VR, 2007, LECT NOTES COMPUT SC, V4336, P33
   Beck K., 2000, EXTREME PROGRAMMING
   Beck Kent L., 2003, Test Driven Development By Example
   Bosch J, 2001, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2001.919084
   Bratthall L., 2002, Empirical Software Engineering, V7, P9, DOI 10.1023/A:1014866909191
   Brewer J., 1989, Multimethod Research: A Synthesis of Styles, DOI 10.1002/nur.4770140212
   Brooks A., 1996, Replication of experimental results in software engineering
   Brooks A., 1989, NUREG1150 US NUCL RE
   Carbon D. M. R., P 1 INT WORKSH AG PR
   Carbon R., 2008, PROVIDING FEEDBACK A
   Ciolkowski M., ESERNET 03, P104
   CLEMEN RT, 1985, OPER RES, V33, P427, DOI 10.1287/opre.33.2.427
   Conboy K, 2011, INFORM SOFTWARE TECH, V53, P535, DOI 10.1016/j.infsof.2010.10.007
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva IF, 2014, J SYST SOFTWARE, V88, P189, DOI 10.1016/j.jss.2013.10.040
   da Silva IF, 2011, SOFTWARE PRACT EXPER, V41, P899, DOI 10.1002/spe.1078
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   e Amin F., 2010, SIGSOFT SOFTW ENG NO, V35, P1
   Feng K., 2008, THESIS U TEXAS DALLA
   FINK A., 2003, SURVEY KIT SURVEY HD
   Fowler M., 2001, Software Development, V9, P28
   Fraser S, 2010, LECT NOTES BUS INF, V48, P410
   Gathers R., 1992, CHOOSING INFORM SYST
   Ghanam Y., AG 10 P INT C AG MET, P27
   Ghanam Y., 12 INT SOFTW PROD LI, P377
   Ghanam Y, 2009, AGILE 2009 CONFERENCE, P41, DOI 10.1109/AGILE.2009.12
   Ghanam Y, 2010, LECT NOTES COMPUT SC, V6287, P211, DOI 10.1007/978-3-642-15579-6_15
   Gill J., 2010, RES METHODS MANAGERS
   Gylterud S., 2009, THESIS NORWEGIAN U S
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Ishikawa M, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P567, DOI 10.1109/APSEC.2004.93
   Kakarontzas G, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P146, DOI 10.1109/CIMCA.2008.84
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kurmann R., 2006, APLE 06 P 1 INT WORK
   Larman C., 2008, Scaling Lean and Agile Development: Thinking and Organizational Tools for Large-Scale Scrum
   Li M, 2003, IEEE T SOFTWARE ENG, V29, P811, DOI 10.1109/TSE.2003.1232286
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mohan K, 2010, IEEE SOFTWARE, V27, P48, DOI 10.1109/MS.2010.31
   Nakakoji K, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P827
   Navarrete P. B. F., P APLE 1 INT WORKSH, P1
   Neiva D. F. S., 11 IEEE INT C INF RE
   Noor M. A., APLE 1 INT WORKSH AG
   Noor MA, 2008, J SYST SOFTWARE, V81, P868, DOI 10.1016/j.jss.2007.10.028
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   O'Leary P, 2012, IET SOFTW, V6, P423, DOI 10.1049/iet-sen.2011.0195
   O'Leary P, 2012, J SOFTW-EVOL PROC, V24, P561, DOI 10.1002/smr.498
   Paige RF, 2006, LECT NOTES COMPUT SC, V4044, P198
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Patton M.Q., 2001, Qualitative evaluation and research methods, V3
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K., EASE 08 P 12 INT C E
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Poppendieck M., 2005, INTRO LEAN SOFTWARE, V3556
   Riegger F., 2010, THESIS HOCHSCHULE MA
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Stapleton J. D, 2003, CONSORTIUM DSDM BUSI
   Sterman JohnD., 2000, BUSINESS DYNAMICS
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Thurimella AK, 2013, J SYST SOFTWARE, V86, P1831, DOI 10.1016/j.jss.2013.01.038
   Tian K., 2006, P 1 INT WORKSH AG PR
   Tourret R., 2006, THESIS U YORK
   van der Linden Frank, 2008, 2008 12th International Software Product Line Conference (SPLC), DOI 10.1109/SPLC.2008.74
   Version-One, 2011, STAT AG DEV VERS ON
   Walsham G., 1993, INTERPRETING INFORM
   Weinberg G.M., 1992, Quality Software Management: Systems Thinking
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
   Yi Wang, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P39, DOI 10.1145/1810295.1810302
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 78
TC 5
Z9 5
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 527
EP 542
DI 10.1016/j.infsof.2014.06.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500030
DA 2024-07-18
ER

PT J
AU Berger, T
   Pfeiffer, RH
   Tartler, R
   Dienst, S
   Czarnecki, K
   Wasowski, A
   She, S
AF Berger, Thorsten
   Pfeiffer, Rolf-Helge
   Tartler, Reinhard
   Dienst, Steffen
   Czarnecki, Krzysztof
   Wasowski, Andrzej
   She, Steven
TI Variability mechanisms in software ecosystems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystems; Empirical software engineering; Software product
   lines; Variability management; Mining software repositories
ID DOMAIN
AB Context: Software ecosystems are increasingly popular for their economic, strategic, and technical advantages. Application platforms such as Android or iOS allow users to highly customize a system by selecting desired functionality from a large variety of assets. This customization is achieved using variability mechanisms.
   Objective: Variability mechanisms are well-researched in the context of software product lines. Although software ecosystems are often seen as conceptual successors, the technology that sustains their success and growth is much less understood. Our objective is to improve empirical understanding of variability mechanisms used in successful software ecosystems.
   Method: We analyze five ecosystems, ranging from the Linux kernel through Eclipse to Android. A qualitative analysis identifies and characterizes variability mechanisms together with their organizational context. This analysis leads to a conceptual framework that unifies ecosystem-specific aspects using a common terminology. A quantitative analysis investigates scales, growth rates, and-most importantly-dependency structures of the ecosystems.
   Results: In all the studied ecosystems, we identify rich dependency languages and variability descriptions that declare many direct and indirect dependencies. Indirect dependencies to abstract capabilities, as opposed to concrete variability units, are used predominantly in fast-growing ecosystems. We also find that variability models-while providing system-wide abstractions over code work best in centralized variability management and are, thus, absent in ecosystems with large free markets. These latter ecosystems tend to emphasize maintaining capabilities and common vocabularies, dynamic discovery, and binding with strong encapsulation of contributions, together with uniform distribution channels.
   Conclusion: The use of specialized mechanisms in software ecosystems with large free markets, as opposed to software product lines, calls for recognition of a new discipline variability encouragement. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Berger, Thorsten; Czarnecki, Krzysztof; She, Steven] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
   [Pfeiffer, Rolf-Helge; Wasowski, Andrzej] IT Univ, DK-2300 Copenhagen, Denmark.
   [Tartler, Reinhard] Univ Erlangen Nurnberg, Dept Comp Sci 4, D-91058 Erlangen, Germany.
   [Dienst, Steffen] Univ Leipzig, Fac Math & Comp Sci, D-04109 Leipzig, Germany.
C3 University of Waterloo; IT University Copenhagen; University of Erlangen
   Nuremberg; Leipzig University
RP Berger, T (corresponding author), Univ Waterloo, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
EM tberger@gsd.uwaterloo.ca
OI Wasowski, Andrzej/0000-0003-0532-2685
FU German National Academic Foundation; German Research Foundation [LO
   1719/3-1]; German Federal Ministry of Education and Research
   [01IS10033D]; Ontario Research Fund
FX We would like to thank Sven Apel, Bram Adams, Christian Kastner, and
   Klaus Schmid for discussions on earlier versions of this article, as
   well as the anonymous reviewers for constructive feedback. This work was
   supported by the German National Academic Foundation, the German
   Research Foundation (LO 1719/3-1), the German Federal Ministry of
   Education and Research (01IS10033D), and the Ontario Research Fund.
CR [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI DOI 10.1007/978-1-84800-044-511
   [Anonymous], LINUX KERNEL DEV
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Anvaari M., 2010, ECSA
   Barbosa O., 2011, IWSECO
   Berger T, 2010, SPLC
   Berger T., 2013, THESIS U LEIPZIG
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger Thorsten, 2010, FORMAL SEMANTICS CDL
   Bosch Jan, 2009, SPLC
   Burkard C., 2012, WIRTSCHAFTSINFORMATI, V54
   Corbet Jonathan., 2010, Linux kernel development
   Cosmo R.D., 2010, SPLC
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Galindo J. A., 2010, ACOTA
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Google Play, 2011, SPLC
   Gurp J.V., 2001, WICSA
   Hanssen G. K., 2012, IWSECO
   Hanssen GK, 2012, J SYST SOFTWARE, V85, P1455, DOI 10.1016/j.jss.2011.04.020
   Herraiz I., 2010, Making Software: What Really Works, and Why We Believe It, P125
   Hubaux A., 2012, VAMOS
   Jansen S., 2009, ICSE
   Jorgensen M., 2004, EASE
   Kang K., 1990, SEI90TR21 CMUSEI
   KRAFFT M, 2005, DEBIAN SYSTEM
   Le Berre D., 2009, IWOCE
   Lotufo R., 2010, SPLC
   Lungu M., 2010, ASE
   McGregor J.D., 2009, J OBJECT TECHNOL, V8
   McGregor J.D., 2012, SPLC 12 TUT SUPP STR
   Mendonca Marcilio, 2009, SPLC
   Messerschmitt D., 2003, SOFTWARE ECOSYSTEM U
   Muthig D., 2002, NETOBJECTDAYS
   Nadi S, 2013, J SOFTW EVOL PROCESS
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Obbink H., 2000, TUTORIAL FOR SPLC, V2, P1
   Robbes R., 2011, ICSE
   Schmid K., 2010, SPLC
   Schmid K, 2013, J UNIVERS COMPUT SCI, V19, P233
   Schmid Klaus, 2011, VAMOS
   Seidl C., 2013, VAMOS
   She Steven, 2010, FORMAL SEMANTICS KCO
   Sincero J., 2007, SPLC OSSPL
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Svahnberg M., 2001, 0201 BLEK I TECHN
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   van Gurp J, 2010, SOFTWARE PRACT EXPER, V40, P285, DOI 10.1002/spe.955
   Zini E., 2005, 5 ANN DEB C
NR 50
TC 45
Z9 45
U1 0
U2 18
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2014
VL 56
IS 11
SI SI
BP 1520
EP 1535
DI 10.1016/j.infsof.2014.05.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AO4ZD
UT WOS:000341349000008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wu, YC
   Fan, CF
AF Wu, Yi-Chen
   Fan, Chin-Feng
TI Automatic test case generation for structural testing of function block
   diagrams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE FBD; Test coverage criteria; FPCC; Automatic test case generation;
   FPCCTestGen
ID COVERAGE
AB Context: Function Block Diagram (FBD) is increasingly used in safety-critical applications. Test coverage issues for FBDs are frequently raised by regulators and users. However, there is little work at this aspect on testing FBD at model level. Our previous study has designed a new data-flow test coverage criterion, FB-Path Complete Condition Test Coverage (FPCC), that can directly test FBD structures and effectively detect function mutation errors. Nevertheless, because FPCC scheme involves several data-flow concepts and thus it is somewhat complicated to comprehend and to generate FPCC-complied test cases. An automatic test suite generator for FPCC is highly desirable.
   Objective: This study designs an automatic test case generator, FPCCTestGen, for FPCC so as to enhance the practicability and acceptance of the FPCC approach.
   Method: First, a supporting infrastructure for performing automatic FBD-to-UPPAAL-for-FPCC transformation is designed. The supporting infrastructure includes templates, declarations, and functions as building blocks for transformation. Then, for each input FBD, represented in PLCopen XML format, FPCCTestGen performs parsing and converts FBD components into corresponding UPPAAL model components using aforementioned building blocks. After that, queries related to FPCC characteristics are submitted to UPPAAL model checker for verification. Finally, the verification traces are analyzed to obtain a FPCC-complied test suite.
   Results: A safety injection system is used as a case study. Preliminary results show that the generated test suite achieves the highest FPCC percentage with a near optimal number of test cases.
   Conclusion: This automatic test case generation tool is effective and thus, can promote the use of the new test coverage criterion. Methodology used in FPCCTestGen is generic and can be applied to test suite generation for other test criteria on data-flow programs. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Wu, Yi-Chen; Fan, Chin-Feng] Yuan Ze Univ, Dept Comp Sci & Engn, Zhongli, Taiwan.
   [Wu, Yi-Chen] Chang Gung Univ, Ctr Gen Educ, Guishan, Taiwan.
C3 Yuan Ze University; Chang Gung University
RP Fan, CF (corresponding author), 135 Far East Rd, Chungli 320, Taiwan.
EM irene@mail.cgu.edu.tw; csfanc@satum.yzu.edu.tw
FU National Science Council, Taiwan, Republic of China
FX This research was partially supported by National Science Council,
   Taiwan, Republic of China.
CR ALUR R, 1990, LECT NOTES COMPUT SC, V443, P322, DOI 10.1007/BFb0032042
   [Anonymous], 2003, 611313 IEC
   [Anonymous], WATER PUMP CONTROLLE
   [Anonymous], RTCADO178B
   [Anonymous], 1992, 521976R1992 ISA
   [Anonymous], 6 INT C NUCL THERM H
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Baresi L, 2000, IEEE SYS MAN CYBERN, P2437, DOI 10.1109/ICSMC.2000.884357
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Certification Authorities Software Team (CAST), 2002, CAST10
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Christensen J., 2012, The IEC 61499 Function Block Standard: Overview of the Second Edition
   CLARKE LA, 1989, IEEE T SOFTWARE ENG, V15, P1318, DOI 10.1109/32.41326
   da Silva Leandro Dias, 2008, IECON 2008 - 34th Annual Conference of IEEE Industrial Electronics Society, P291, DOI 10.1109/IECON.2008.4757968
   Donghwan Shin, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P465, DOI 10.1007/978-3-642-33666-9_30
   Enoiu EP, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P55, DOI 10.1109/CMSBSE.2013.6605711
   Hametner R., 2013, Recent advances in robotics and automation, P263, DOI [10.1007/978-3-642-37387-920, DOI 10.1007/978-3-642-37387-920]
   Hassapis G, 2000, ISA T, V39, P345, DOI 10.1016/S0019-0578(00)00029-X
   Hayhurst Kelly J., 2001, A practical tutorial on modified condition/decision coverage
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jee E, 2010, LECT NOTES COMPUT SC, V6351, P223
   Jee E, 2009, INFORM SOFTWARE TECH, V51, P1131, DOI 10.1016/j.infsof.2009.01.003
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Larsen K.G., 2012, PROBLEMS MANUFACTURI, P1653
   Mader A., 2000, P 5 INT WORKSH DISCR
   Papailiopoulou V., 2010, TEST AUTOMATIQUE PRO
   Sarabi M., 2012, EVALUTION STRUCTURAL
   Soliman D., INFORM CONTROL
   Wu YC, 2013, INFORM SOFTWARE TECH, V55, P2013, DOI 10.1016/j.infsof.2013.07.003
   Younis M., 2003, P COMP ENG SYST APPL, P0234
NR 30
TC 13
Z9 14
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1360
EP 1376
DI 10.1016/j.infsof.2014.04.016
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700012
DA 2024-07-18
ER

PT J
AU Asadi, M
   Soltani, S
   Gasevic, D
   Hatala, M
   Bagheri, E
AF Asadi, Mohsen
   Soltani, Samaneh
   Gasevic, Dragan
   Hatala, Marek
   Bagheri, Ebrahim
TI Toward automated feature model configuration with optimizing
   non-functional requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Feature model configuration; Stakeholders'
   preferences; Non-functional interdependencies
ID SELECTION; DECISION
AB Context: A software product line is a family of software systems that share some common features but also have significant variabilities. A feature model is a variability modeling artifact, which represents differences among software products with respect to the variability relationships among their features. Having a feature model along with a reference model developed in the domain engineering lifecycle, a concrete product of the family is derived by binding the variation points in the feature model (called configuration process) and by instantiating the reference model.
   Objective: In this work we address the feature model configuration problem and propose a framework to automatically select suitable features that satisfy both the functional and non-functional preferences and constraints of stakeholders. Additionally, interdependencies between various non-functional properties are taken into account in the framework.
   Method: The proposed framework combines Analytical Hierarchy Process (AHP) and Fuzzy Cognitive Maps (FCM) to compute the non-functional properties weights based on stakeholders' preferences and interdependencies between non-functional properties. Afterwards, Hierarchical Task Network (HTN) planning is applied to find the optimal feature model configuration.
   Result: Our approach improves state-of-art of feature model configuration by considering positive or negative impacts of the features on non-functional properties, the stakeholders' preferences, and nonfunctional interdependencies. The approach presented in this paper extends earlier work presented in [1] from several distinct perspectives including mechanisms handling interdependencies between nonfunctional properties, proposing a novel tooling architecture, and offering visualization and interaction techniques for representing functional and non-functional aspects of feature models.
   Conclusion: our experiments show the scalability of our configuration approach when considering both functional and non-functional requirements of stakeholders. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Asadi, Mohsen; Soltani, Samaneh; Gasevic, Dragan; Hatala, Marek] Simon Fraser Univ, Burnaby, BC V5A 1S6, Canada.
   [Gasevic, Dragan] Athabasca Univ, Athabasca, AB T9S 3A3, Canada.
   [Bagheri, Ebrahim] Ryerson Univ, Toronto, ON M5B 2K3, Canada.
C3 Simon Fraser University; Athabasca University; Toronto Metropolitan
   University
RP Asadi, M (corresponding author), Simon Fraser Univ, 8888 Univ Dr, Burnaby, BC V5A 1S6, Canada.
EM masadi@sfu.ca
RI asadi, mohsen/B-1939-2019; Gasevic, Dragan/AAT-3909-2020
OI Gasevic, Dragan/0000-0001-9265-1908; Bagheri,
   Ebrahim/0000-0002-5148-6237; Hatala, Marek/0000-0001-7418-9529
CR [Anonymous], P 21 INT JOINT C ART
   [Anonymous], 2005, Proceedings of the SIGCHI conference on Human factors in computing systems
   [Anonymous], 1999, Proceedings of the Section on Statistical Graphics, American Statistical Association
   [Anonymous], SOFTWARE QUALITY J
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Bagheri E, 2012, J SOFTW-EVOL PROC, V24, P375, DOI 10.1002/smr.534
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Bagheri E, 2010, LECT NOTES COMPUT SC, V6287, P300, DOI 10.1007/978-3-642-15579-6_21
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Benavides D, 2006, LECT NOTES COMPUT SC, V4143, P399
   Berander P, 2006, INT J SOFTW ENG KNOW, V16, P819, DOI 10.1142/S0218194006003026
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   CZARNECKI K, 2005, P INT WORKSH SOFTW F
   DAVIS R, 1993, AI MAG, V14, P17
   Espinoza H, 2006, LECT NOTES COMPUT SC, V3844, P79
   FISHBURN PC, 1967, OPER RES, V15, P537, DOI 10.1287/opre.15.3.537
   Forman EH, 2001, OPER RES, V49, P469, DOI 10.1287/opre.49.4.469.11231
   Ghallab M., 1998, TR98003DCSTR1165 CVC
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   HARKER PT, 1987, MATH MODELLING, V9, P837, DOI 10.1016/0270-0255(87)90503-3
   Kang K. C., 1990, Technical Report
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Kosko B., 1988, International Journal of Approximate Reasoning, V2, P377, DOI 10.1016/0888-613X(88)90111-9
   KOSKO B, 1986, INT J MAN MACH STUD, V24, P65, DOI 10.1016/S0020-7373(86)80040-2
   LEON M, 2010, P 9 MEX INT C ADV AR, V6437, P166
   Liaskos S., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P221, DOI 10.1109/RE.2012.6345808
   Liaskos S., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P135, DOI 10.1109/RE.2010.26
   Mairiza D., 2010, P 2010 ACM S APPL CO, P311, DOI DOI 10.1145/1774088.1774153
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   MILLER DW, 1969, EXECUTIVE DECISION O
   MOHABBATI B, 2011, 9 INT C SERV OR COMP, V7084, P436
   Nau D, 2003, J ARTIF INTELL RES, V20, P379, DOI 10.1613/jair.1141
   Nau D, 2005, IEEE INTELL SYST, V20, P34, DOI 10.1109/MIS.2005.20
   Ognjanovic Ivana., 2011, SAC, P683
   Olsina L., 2001, Web engineerng. Managing diversity and complexity of web application development, P266
   Palma F., 2011, P 19 ACM SIGSOFT S 1, P48, DOI DOI 10.1145/2025113.2025124
   *PUR SYST GMBH, 2003, VAR MAN PUR VAR
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Roos-Frantz F, 2012, SOFTWARE QUAL J, V20, P519, DOI 10.1007/s11219-011-9156-5
   Rosenberg F., 2009, P 13 IEEE INT C ENT, P128
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Siegmund N., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P160, DOI 10.1109/SPLC.2011.20
   Soltani S., 2011, EFFECTS VISUALIZATIO
   Soltani Samaneh., 2012, Proceedings of the 16th International Software Product Line Conference-Volume, V1, P56, DOI DOI 10.1145/2362536.2362548
   Sommerville I, 1997, ANN SOFTW ENG, V3, P101, DOI 10.1023/A:1018946223345
   Stone M., CHOOSEING COLORS DAT
   Svensson RB, 2012, IEEE T SOFTWARE ENG, V38, P923, DOI 10.1109/TSE.2011.47
   TABER R, 1991, EXPERT SYST APPL, V2, P83, DOI 10.1016/0957-4174(91)90136-3
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Triantaphyllou E., 1998, Encyclopedia of Electrical and Electronics Engineering, V15, P175
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Vinay S, 2013, ADV INTELL SYST, V174, P441
   White J., 2009, P 13 INT SOFTW PROD, P11
   White J, 2009, J SYST SOFTWARE, V82, P1268, DOI 10.1016/j.jss.2009.02.011
   Yu RC, 2006, APPL MATH COMPUT, V180, P63, DOI 10.1016/j.amc.2005.11.163
   Yu T, 2005, LECT NOTES COMPUT SC, V3826, P130
   Yu T, 2004, CEC 2004: IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE TECHNOLOGY, PROCEEDINGS, P129
   Zhang G., 2013, Shear Strength of Flue Gas Desulfurization By-Product, P1
NR 66
TC 26
Z9 31
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2014
VL 56
IS 9
BP 1144
EP 1165
DI 10.1016/j.infsof.2014.03.005
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6ER
UT WOS:000337783000007
DA 2024-07-18
ER

PT J
AU Lehtinen, TOA
   Virtanen, R
   Viljanen, JO
   Mäntylä, MV
   Lassenius, C
AF Lehtinen, Timo O. A.
   Virtanen, Risto
   Viljanen, Juha O.
   Mantyla, Mika V.
   Lassenius, Casper
TI A tool supporting root cause analysis for synchronous retrospectives in
   distributed software teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE ARCA-tool; Root cause analysis; Distributed retrospective; Global
   software engineering
ID PROCESS IMPROVEMENT; POST-MORTEM; REVIEWS; SYSTEMS; FIELD
AB Context: Root cause analysis (RCA) is a useful practice for software project retrospectives, and is typically carried out in synchronous collocated face-to-face meetings. Conducting RCA with distributed teams is challenging, as face-to-face meetings are infeasible. Lack of adequate real-time tool support exacerbates this problem. Furthermore, there are no empirical studies on using RCA in synchronous retrospectives of geographically distributed teams.
   Objective: This paper presents a real-time cloud-based software tool (ARCA-tool) we developed to support RCA in distributed teams and its initial empirical evaluation. The feasibility of using RCA with distributed teams is also evaluated.
   Method: We compared our tool with 35 existing RCA software tools. We conducted field studies of four distributed agile software teams at two international software product companies. The teams conducted RCA collaboratively in synchronous retrospective meetings by using the tool we developed. We collected the data using observations, interviews and questionnaires.
   Results: Comparison revealed that none of the existing 35 tools matched all the features of our ARCA-tool. The team members found ARCA-tool to be an essential part of their distributed retrospectives. They considered the software as efficient and very easy to learn and use. Additionally, the team members perceived RCA to be a vital part of the retrospectives. In contrast to the prior retrospective practices of the teams, the introduced RCA method was evaluated as efficient and easy to use.
   Conclusion: RCA is a useful practice in synchronous distributed retrospectives. However, it requires software tool support for enabling real-time view and co-creation of a cause-effect diagram. ARCA-tool supports synchronous RCA, and includes support for logging problems and causes, problem prioritization, cause-effect diagramming, and logging of process improvement proposals. It enables conducting RCA in distributed retrospectives. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Lehtinen, Timo O. A.; Virtanen, Risto; Viljanen, Juha O.; Mantyla, Mika V.; Lassenius, Casper] Aalto Univ, Sch Sci, Dept Comp Sci & Engn, FI-00076 Aalto, Finland.
C3 Aalto University
RP Lehtinen, TOA (corresponding author), Aalto Univ, Sch Sci, Dept Comp Sci & Engn, POB 19210, FI-00076 Aalto, Finland.
EM timo.o.lehtinen@aalto.fi; risto.virtanen@aalto.fi;
   juha.o.viljanen@aalto.fi; mika.mantyla@aalto.fi;
   casper.lassenius@aalto.fi
RI Viljanen, juha H/J-1621-2014; Mäntylä, Mika V/E-7644-2012; Lassenius,
   Casper/A-4339-2013
OI Mantyla, Mika/0000-0002-2841-5879; Lassenius, Casper/0000-0003-4192-7024
CR Anbari FT, 2008, TECHNOVATION, V28, P633, DOI 10.1016/j.technovation.2007.12.001
   Andersen Bjorn, 2006, Root cause analysis: simplified tools and techniques
   [Anonymous], 2010, NEWS NOTES GOOGLE DR
   BHANDARI I, 1993, IEEE T SOFTWARE ENG, V19, P1157, DOI 10.1109/32.249661
   Bjornson FO, 2009, INFORM SOFTWARE TECH, V51, P150, DOI 10.1016/j.infsof.2008.02.003
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   Dennis A. R., 1997, Journal of Management Information Systems, V14, P155
   DESANCTIS G, 1987, MANAGE SCI, V33, P589, DOI 10.1287/mnsc.33.5.589
   Desouza K. C., 2005, Software Process Improvement and Practice, V10, P203, DOI 10.1002/spip.224
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Dingsoyr T., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P167
   Glass RL, 2002, IEEE SOFTWARE, V19, P111
   Grady RB, 1996, HEWLETT-PACKARD J, V47, P15
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Huertas-Quintero LAM, 2011, ASSEMBLY AUTOM, V31, P38, DOI 10.1108/01445151111104155
   Jaanu T., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P149, DOI 10.1109/ICGSE.2012.37
   Jalote P., 2005, Proceedings of the Information Science and Communications Technology (ICICT 2005), P701
   Jamieson Susan, 2004, Med Educ, V38, P1217, DOI 10.1111/j.1365-2929.2004.02012.x
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Jin ZX, 2007, LECT NOTES ARTIF INT, V4562, P79
   Kalinowski M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P199, DOI 10.1109/SEAA.2008.47
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Latino R.J., 2006, ROOT CAUSE ANAL IMPR
   LEE S, 1992, OMEGA-INT J MANAGE S, V20, P23, DOI 10.1016/0305-0483(92)90053-A
   Lehtinen TOA, 2011, INT SYMP EMP SOFTWAR, P388, DOI 10.1109/ESEM.2011.55
   Lehtinen TOA, 2011, INFORM SOFTWARE TECH, V53, P1045, DOI 10.1016/j.infsof.2011.05.005
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   MAYS RG, 1990, IEEE J SEL AREA COMM, V8, P164, DOI 10.1109/49.46867
   Moe NB, 2007, LECT NOTES COMPUT SC, V4589, P20
   Monasor M.J, 2009, ADV SOFTW ENG, P1, DOI DOI 10.1155/2009/710971
   NUNAMAKER JF, 1991, COMMUN ACM, V34, P40, DOI 10.1145/105783.105793
   Rooney J.J., 2004, QUAL PROG, V37, P45
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber K., 2011, SCRUM GUIDE
   Siekkinen M, 2008, COMPUT NETW, V52, P1846, DOI 10.1016/j.comnet.2008.03.005
   Stålhane T, 2004, LECT NOTES COMPUT SC, V3281, P150
   Stålhane T, 2003, LECT NOTES COMPUT SC, V2765, P129
   Terzakis J, 2011, IEEE SOFTWARE, V28, P12, DOI 10.1109/MS.2011.68
   Vantine W, 2002, ESA SP PUBL, V486, P369
   Williams L, 2002, J AM MED INFORM ASSN, V9, pS52, DOI 10.1197/jamia.M1227
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Zigurs I, 1998, MIS QUART, V22, P313, DOI 10.2307/249668
NR 46
TC 8
Z9 9
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2014
VL 56
IS 4
BP 408
EP 437
DI 10.1016/j.infsof.2014.01.004
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AD0DG
UT WOS:000332904000003
DA 2024-07-18
ER

PT J
AU García-Borgoñón, L
   Barcelona, MA
   García-García, JA
   Alba, M
   Escalona, MJ
AF Garcia-Borgonon, L.
   Barcelona, M. A.
   Garcia-Garcia, J. A.
   Alba, M.
   Escalona, M. J.
TI Software process modeling languages: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software process modeling; Software process language; Systematic
   literature review
ID SPEM EXTENSION; UML4SPM; UML
AB Context: Organizations working in software development are aware that processes are very important assets as well as they are very conscious of the need to deploy well-defined processes with the goal of improving software product development and, particularly, quality. Software process modeling languages are an important support for describing and managing software processes in software-intensive organizations.
   Objective: This paper seeks to identify what software process modeling languages have been defined in last decade, the relationships and dependencies among them and, starting from the current state, to define directions for future research.
   Method: A systematic literature review was developed. 1929 papers were retrieved by a manual search in 9 databases and 46 primary studies were finally included.
   Results: Since 2000 more than 40 languages have been first reported, each of which with a concrete purpose. We show that different base technologies have been used to define software process modeling languages. We provide a scheme where each language is registered together with the year it was created, the base technology used to define it and whether it is considered a starting point for later languages. This scheme is used to illustrate the trend in software process modeling languages. Finally, we present directions for future research.
   Conclusion: This review presents the different software process modeling languages that have been developed in the last ten years, showing the relevant fact that model-based SPMLs (Software Process Modeling Languages) are being considered as a current trend. Each one of these languages has been designed with a particular motivation, to solve problems which had been detected. However, there are still several problems to face, which have become evident in this review. This let us provide researchers with some guidelines for future research on this topic. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Garcia-Borgonon, L.; Barcelona, M. A.] Aragon Inst Technol, Zaragoza, Spain.
   [Garcia-Borgonon, L.; Barcelona, M. A.; Garcia-Garcia, J. A.; Alba, M.; Escalona, M. J.] Univ Seville, Res Grp IWT2, Seville, Spain.
C3 University of Sevilla
RP Escalona, MJ (corresponding author), Univ Seville, Res Grp IWT2, Seville, Spain.
EM laurag@ita.es; mabarcelona@ita.es; julian.garcia@iwt2.org;
   manuel.alba@iwt2.org; mjescalona@us.es
RI Escalona, María José/G-3900-2010; García García, Julián
   Alberto/J-6081-2013; Barcelona, Miguel Angel/E-9038-2016;
   Garcia-Borgonon, Laura/D-1600-2014
OI Escalona, María José/0000-0002-6435-1497; García García, Julián
   Alberto/0000-0003-2680-1327; Barcelona, Miguel
   Angel/0000-0001-8785-2350; Garcia-Borgonon, Laura/0000-0001-9352-4230
FU Ministerio de Economia y Competitividad, Spain [TIN2010-20057-C03-02,
   TIN 2010-12312-E]; Junta de Andalucia, Spain [TIC-5789]
FX This research has been supported by the Tempros project
   (TIN2010-20057-C03-02) and Red CaSA (TIN 2010-12312-E) of the Ministerio
   de Economia y Competitividad, Spain and the NDTQ-Framework project of
   the Junta de Andalucia, Spain (TIC-5789).
CR Alver M. O., 2012, JABREF REFERENCE MAN
   Aoussat F, 2011, P INT COMP SOFTW APP, P215, DOI 10.1109/COMPSAC.2011.35
   Atkinson DC, 2007, INFORM SOFTWARE TECH, V49, P493, DOI 10.1016/j.infsof.2006.07.006
   Atkinson DC, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P73, DOI 10.1109/APSEC.2004.98
   Bendraou R, 2005, LECT NOTES COMPUT SC, V3713, P17, DOI 10.1007/11557432_3
   Bendraou R, 2010, J SOFTWARE MAINTENAN, DOI 10.1002/smr.494
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Bendraou R, 2007, EUROMICRO CONF PROC, P314
   Bendraou R, 2006, IEEE INT ENTERP DIST, P297
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Bendraou R, 2009, LECT NOTES COMPUT SC, V5543, P148, DOI 10.1007/978-3-642-01680-6_15
   Cares C, 2006, EUROMICRO CONF PROC, P336, DOI 10.1109/EUROMICRO.2006.39
   Chen Cheng, 2002, Journal of Software, V13, P1374
   Chen JYJ, 2000, INTERNATIONAL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P297, DOI 10.1109/MMSE.2000.897226
   Chou SC, 2004, INFORM SOFTWARE TECH, V46, P383, DOI 10.1016/j.infsof.2003.08.001
   Combemale B, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P530
   Debnath N, 2006, I C COMP SYST APPLIC, P1150
   Di Nitto E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P155, DOI 10.1109/ICSE.2002.1007964
   Ellner R, 2011, LECT NOTES COMPUT SC, V6698, P19, DOI 10.1007/978-3-642-21470-7_3
   Ellner R, 2010, LECT NOTES COMPUT SC, V6138, P116, DOI 10.1007/978-3-642-13595-8_11
   Ferreira AL, 2011, EUROMICRO CONF PROC, P330, DOI 10.1109/SEAA.2011.57
   Franch X, 2003, LECT NOTES COMPUT SC, V2786, P74
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Ge J., 2006, P INT C SOFTW ENG AD, P41
   Golra FR., 2011, 1 WORKSH PROC BAS AP, P44
   Hagen M., 2004, 3 IASTED C SOFTW ENG, P436
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Henderson-Sellers B, 2005, INFORM SOFTWARE TECH, V47, P49, DOI 10.1016/j.infsof.2004.06.001
   Hsueh NL, 2008, INFORM SOFTWARE TECH, V50, P897, DOI 10.1016/j.infsof.2007.10.015
   Jablonski Stefan, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1011, DOI 10.1109/COMPSAC.2008.58
   Jidong Ge, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P639, DOI 10.1109/CSSE.2008.1499
   Kang HW, 2008, 2008 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND INFORMATION TECHNOLOGY, PROCEEDINGS, P306, DOI 10.1109/MMIT.2008.146
   Kitchenham B., 2007, Joint Report
   Koudri A, 2010, LECT NOTES COMPUT SC, V6195, P248, DOI 10.1007/978-3-642-14347-2_22
   Lee SJ, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P376, DOI 10.1109/APSEC.2002.1183007
   Lonchamp J., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P41, DOI 10.1109/SPCON.1993.236823
   Maciel Rita Suzana Pitangueira, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P104, DOI 10.1109/SBES.2009.18
   Martínez-Ruiz T, 2011, IET SOFTW, V5, P172, DOI 10.1049/iet-sen.2010.0020
   Martínez-Ruiz T, 2011, EUROMICRO CONF PROC, P334, DOI 10.1109/SEAA.2011.58
   Martinho Ricardo, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P427, DOI 10.1109/ASE.2008.65
   Martinho R, 2009, LECT NOTES ARTIF INT, V5736, P78, DOI 10.1007/978-3-642-04754-1_9
   Min SY, 2000, INFORM SOFTWARE TECH, V42, P1, DOI 10.1016/S0950-5849(99)00050-6
   Noack J, 2000, INTERNATIONAL CONFERENCE ON SOFTWARE METHODS AND TOOLS, PROCEEDING, P87, DOI 10.1109/SWMT.2000.890424
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Pillain P. Y., 2011, P 1 WORKSH PROC BAS, P33
   Podnar I, 2000, LECT NOTES COMPUT SC, V1780, P190
   Reis CAL, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P112, DOI 10.1109/HCC.2002.1046363
   Reis RQ, 2002, P INT COMP SOFTW APP, P373
   Ruiz F, 2003, 14TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P739, DOI 10.1109/DEXA.2003.1232109
   Sutton SM, 1997, LECT NOTES COMPUT SC, V1301, P142, DOI 10.1145/267896.267908
   Tran Dan Thu, 2005, Software Process Improvement and Practice, V10, P217, DOI 10.1002/spip.217
   Tran HN, 2007, P 2 INT C SOFTW ENG
   Washizaki H., 2007, P IEEE INT C IND INF, P1301
   Wohlin C., 2013, INFORM SOFTWARE TECH
   Wu M., 2007, P IEEE INT C SYST MA, V6, P4508
   Zamli K.Z., 2001, Malaysian Journal of Computer Science, V14, P26
   ZAMLI K. Z., 2004, MALAYS J COMPUT SCI, V17, P68
   Zamli KZ, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P243, DOI 10.1109/APSEC.2003.1254377
   Zamli KZ, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P435, DOI 10.1109/AICCSA.2001.934035
NR 59
TC 46
Z9 48
U1 1
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2014
VL 56
IS 2
BP 103
EP 116
DI 10.1016/j.infsof.2013.10.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 285TN
UT WOS:000329418000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yamashita, A
   Moonen, L
AF Yamashita, Aiko
   Moonen, Leon
TI To what extent can maintenance problems be predicted by code smell
   detection? - An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code smells; Maintainability; Empirical study
ID REFACTORING OPPORTUNITIES; BAD SMELLS; SOFTWARE; IDENTIFICATION; CLONING
AB Context: Code smells are indicators of poor coding and design choices that can cause problems during software maintenance and evolution.
   Objective: This study is aimed at a detailed investigation to which extent problems in maintenance projects can be predicted by the detection of currently known code smells.
   Method: A multiple case study was conducted, in which the problems faced by six developers working on four different Java systems were registered on a daily basis, for a period up to four weeks. Where applicable, the files associated to the problems were registered. Code smells were detected in the pre-maintenance version of the systems, using the tools Borland Together and InCode. In-depth examination of quantitative and qualitative data was conducted to determine if the observed problems could be explained by the detected smells.
   Results: From the total set of problems, roughly 30% percent were related to files containing code smells. In addition, interaction effects were observed amongst code smells, and between code smells and other code characteristics, and these effects led to severe problems during maintenance. Code smell interactions were observed between collocated smells (i.e., in the same file), and between coupled smells (i.e., spread over multiple files that were coupled).
   Conclusions: The role of code smells on the overall system maintainability is relatively minor, thus complementary approaches are needed to achieve more comprehensive assessments of maintainability. Moreover, to improve the explanatory power of code smells, interaction effects amongst collocated smells and coupled smells should be taken into account during analysis. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Yamashita, Aiko; Moonen, Leon] Simula Res Lab, Lysaker, Norway.
   [Yamashita, Aiko] Univ Oslo, Dept Informat, Oslo, Norway.
C3 University of Oslo
RP Yamashita, A (corresponding author), Simula Res Lab, POB 134, Lysaker, Norway.
EM aiko@simula.no; leon.moonen@computer.org
RI Moonen, Leon/M-8790-2015
OI Moonen, Leon/0000-0002-1761-6771
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abran A., IEEE INT C SOFTW MAI, P104
   Alikacem E.H., IEEE INT C SOURC COD, P159
   Anda B.C.D., IEEE INT C SOFTW MAI, P204
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 2007, 4 INT WORKSH MIN SOF
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   BECKER HS, 1957, HUM ORGAN, V16, P28, DOI 10.17730/humo.16.3.k687822132323013
   Bennet K.H., 1990, Information and Software Technology, V12, P257
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Bracha G, 1998, ACM SIGPLAN NOTICES, V33, P183, DOI 10.1145/286942.286957
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Charette RN, 1997, IEEE SOFTWARE, V14, P43, DOI 10.1109/52.589232
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   Coad P., 1991, OBJECT ORIENTED DESI
   D'Ambros M., INT C QUAL SOFTW QSI, P23
   Dekleva S., IEEE INT C SOFTW MAI, P10
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Fokaefs M., IEEE INT C SOFTW MAI, P519
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma Erich., 1994, DESIGN PATTERNS
   Guo Y., INT C SOFTW ENG ICSE, V2, P167
   Hall T., IEEE INT C SOFTW MAI, P422
   Harrison W., IEEE INT C SOFTW MAI, P37
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hotta K., EUR C SOFTW MAINT RE, P53
   Jones TC, 1998, Estimating software costs
   Juergens E., INT C SOFTW ENG ICSE, P485
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Karahasanovic A., 2007, Proc. Ninth Australas. Conf. Comput. Educ., V66, P81
   Karahasanovic A, 2007, J SYST SOFTWARE, V80, P1541, DOI 10.1016/j.jss.2006.10.041
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kim M., JOINT 10 EUR SOFTW E, P187
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Layman L.M., 2008, P INT WORKSHOP COOPE, P73, DOI DOI 10.1145/1370114.1370133
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   LIENTZ BP, 1981, COMMUN ACM, V24, P763, DOI 10.1145/358790.358796
   Liu H., 2012, AUTOMAT SOFTW ENG, V20, P81
   Lozano A., IEEE INT C SOFTW MAI, P227
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Mantyla M.V., IEEE INT C SOFTW MAI, P399
   Mantyla M.V., INT C SOFTW ENG ICSE, P277
   Mantyla M.V., IEEE INT C SOFTW MAI, P381
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Marinescu R, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/WCRE.2004.31
   Marinescu R., IEEE INT C SOFTW MAI, P701
   Marinescu R., 2002, THESIS POLITEHNICA U
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Maxwell J.A., 2004, Field Methods, V16, P243, DOI [DOI 10.1177/1525822X04266831, 10.1177/1525822X04266831]
   Moha N., ACM SIGPLAN C OBJ OR, P949
   Moha N., FUNDAMENTAL APPROACH, P276
   Moha N, 2006, IEEE INT CONF AUTOM, P297
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Monden A., IEEE S SOFTW METR, P87
   Olbrich S.M., IEEE INT C SOFTW MAI, P1
   Palvia P., 1995, J INFORM TECHNOLOGY, V4, P17
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   Pietrzak B., EXTREME PROGRAMMING, P75
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Rahman F., WORK C MIN SOFTW REP, P72
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   Rao A.A., INT MULT ENG COMP SC, P1001
   Reedy A., IEEE INT C SOFTW MAI, P234
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Schneidewind N.F., 2003, ADV SOFTWARE MAINTEN, P182
   Sharma A., 2009, SIGSOFT SOFTW ENG NO, V34, P1
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Tempero E, 2000, J SYST SOFTWARE, V55, P87, DOI 10.1016/S0164-1212(00)00061-3
   Travassos G.H., ACM SIGPLAN C OBJ OR, P47
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Van Emden E., WORK C REV ENG WCRE, P97
   VONMAYRHAUSER A, 1995, SOFTWARE ENG J, V10, P171, DOI 10.1049/sej.1995.0023
   Wake W.C., 2003, Refactoring Workbook, V1st
   Walter B, 2005, LECT NOTES COMPUT SC, V3556, P154
   Wang W, 2011, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2011.17
   Webster K., IEEE INT C SOFTW MAI, P453
   WOOD RE, 1986, ORGAN BEHAV HUM DEC, V37, P60, DOI 10.1016/0749-5978(86)90044-0
   Yamashita A., IEEE INT C SOFTW MAI, P306
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 91
TC 71
Z9 80
U1 0
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2223
EP 2242
DI 10.1016/j.infsof.2013.08.002
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100010
DA 2024-07-18
ER

PT J
AU Al Dallal, J
AF Al Dallal, Jehad
TI Object-oriented class maintainability prediction using internal quality
   attributes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Internal and external quality attributes; Quality measures; Class
   cohesion; Class coupling; Class size; Class maintainability
ID OPEN SOURCE SOFTWARE; CLASS COHESION; FAULT PREDICTION; EMPIRICAL
   VALIDATION; METRICS SUITE; MODEL; COMPLEXITY; PRONENESS; PROJECT; IMPACT
AB Context: Class maintainability is the likelihood that a class can be easily modified. Before releasing an object-oriented software system, it is impossible to know with certainty when, where, how, and how often a class will be modified. At that stage, this likelihood can be estimated using the internal quality attributes of a class, which include cohesion, coupling, and size. To reduce the future class maintenance efforts and cost, developers are encouraged to carefully test and well document low maintainability classes before releasing the object-oriented system.
   Objective: We empirically study the relationship between internal class quality attributes (size, cohesion, and coupling) and an external quality attribute (class maintainability). Using statistical techniques, we also construct models based on the selected internal attributes to predict class maintainability.
   Method: We consider classes of three open-source systems. For each class, we account for two actual maintainability indicators, the number of revised lines of code and the number of revisions in which the class was involved. Using 19 internal quality measures, we empirically explore the impact of size, cohesion, and coupling on class maintainability. We also empirically investigate the abilities of the measures, considered both individually and combined, to estimate class maintainability. Statistically based prediction models are constructed and validated.
   Results: Our results demonstrate that classes with better qualities (i.e., higher cohesion values and lower size and coupling values) have better maintainability (i.e., are more likely to be easily modified) than those of worse qualities. Most of the considered measures are shown to be predictors of the considered maintainability indicators to some degree. The abilities of the considered internal quality measures to predict class maintainability are improved when the measures are combined using optimized multivariate statistical models.
   Conclusion: The prediction models can help software engineers locate classes with low maintainability. These classes must be carefully tested and well documented. (C) 2013 Elsevier B.V. All rights reserved.
C1 Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University [WI03/11]
FX The author would like to acknowledge the support of this work by Kuwait
   University Research Grant WI03/11. In addition, the authors would like
   to thank Anas Abdin for assisting in collecting the required data.
CR Aggarwal KK, 2006, PROC WRLD ACAD SCI E, V15, P285
   Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Ahn Y, 2003, J SOFTW MAINT EVOL-R, V15, P71, DOI 10.1002/smr.269
   Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2013, SOFTWARE PRACT EXPER, V43, P685, DOI 10.1002/spe.2127
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P1125, DOI 10.1016/j.infsof.2012.04.004
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2012, J SYST SOFTWARE, V85, P1042, DOI 10.1016/j.jss.2011.12.006
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, INFORM SOFTWARE TECH, V53, P914, DOI 10.1016/j.infsof.2011.03.004
   Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   [Anonymous], 1979, Encyclopedia of Mathematics and its Applications
   [Anonymous], HERMES SCI PUBLICATI
   [Anonymous], 2007, EVALUATION PRECISION
   [Anonymous], IEEE P 28 ANN INT CO
   [Anonymous], EMPIRICAL S IN PRESS
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2012, ANN ACM S APPL COMP
   [Anonymous], 9 PANH C INF THESS G
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], P 10 WORK C REV ENG
   [Anonymous], 2002, THESIS SE U
   [Anonymous], P 38 ANN SE REG C US
   [Anonymous], IEEE 7 INT C QUAL SO
   [Anonymous], 6 IEEE ACIS INT C CO
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Badri L, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.6.a1
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Barnett V., 1994, OUTLIERS STAT DATA, P584
   Benestad HC, 2006, LECT NOTES COMPUT SC, V4034, P94
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Bieman JM, 1998, IEEE T SOFTWARE ENG, V24, P111, DOI 10.1109/32.666825
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand L. C., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P88, DOI 10.1109/ICSM.1993.366952
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Chae HS, 2004, IEEE T SOFTWARE ENG, V30, P826, DOI 10.1109/TSE.2004.88
   Chaumun MA, 2002, SCI COMPUT PROGRAM, V45, P155, DOI 10.1016/S0167-6423(02)00058-8
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Elish MO, 2009, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2009.57
   Erdil Kagan., 2003, SOFTWARE MAINTENANCE
   Etzkorn LH, 2004, INFORM SOFTWARE TECH, V46, P677, DOI 10.1016/j.infsof.2003.12.002
   Fernandez L., 2006, INF THEOR APPL, V13, P82
   Genero M, 2005, J OBJECT TECHNOL, V4, P59, DOI 10.5381/jot.2005.4.9.a1
   GranjaAlvarez JC, 1997, J SOFTW MAINT-RES PR, V9, P161, DOI 10.1002/(SICI)1096-908X(199705)9:3<161::AID-SMR148>3.0.CO;2-8
   Gui G, 2009, J COMPUT, V4, P797
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   IEEE, 1990, IEEE STD 610 12 1990
   Krantz D. H., 1971, Foundations of Measurement, V1
   Lee YS., 1995, Proc. International Conference on Software Quality, Maribor, P81
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Mamone S., 1994, SIGSOFT Software Engineering Notes, V19, P75, DOI 10.1145/181610.181623
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Morasca S, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P46, DOI 10.1109/METRIC.2004.1357890
   Morasca S, 2009, INT SYMP EMP SOFTWAR, P44, DOI 10.1109/ESEM.2009.5316048
   Morasca S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P188
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Rizvi S., 2010, J COMPUT, V2, P26
   Rousseeuw PJ, 1999, AM STAT, V53, P382, DOI 10.2307/2686061
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Sarkar S, 2007, IEEE T SOFTWARE ENG, V33, P14, DOI 10.1109/TSE.2007.256942
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Sheldon T., 2002, J SOFTW MAINTENANCE, V14, P1
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Wang JM, 2005, INFORM SOFTWARE TECH, V47, P167, DOI 10.1016/j.infsof.2004.07.001
   Wang Li-jin, 2009, 2009 1st International Conference on Information Science and Engineering (ICISE 2009), P3827, DOI 10.1109/ICISE.2009.845
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 87
TC 55
Z9 57
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 2028
EP 2048
DI 10.1016/j.infsof.2013.07.005
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500011
DA 2024-07-18
ER

PT J
AU Brown, KP
   Capretz, MAM
AF Brown, Kevin P.
   Capretz, Miriam A. M.
TI ODEP-DPS: Ontology-driven engineering process for the collaborative
   development of semantic data providing services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service oriented architecture; Semantic data providing services;
   Ontologies; Ontology-driven development; Semantic Web; Semantic Web
   service development
ID REWRITING APPROACH; SYSTEMS
AB Context: Data services are services that handle operations involving the management of data. A problem with data services is that their interfaces are defined by their syntax alone. Consequently, Data Providing Services (DPSs) have been proposed to explicitly define semantics using ontologies for services that only retrieve data. However, the semantic annotations of DPSs are developed as afterthoughts to deployed data services.
   Objective: The objective of this work is to present a DPS development process that considers all of a DPS's dimensions including its data acquisition logic, syntax and semantics thus addressing the issue of semantic annotations developed as afterthoughts. This shall decrease the cost of deploying and maintaining DPSs.
   Method: This paper contributes a holistic and collaborative process - ODEP-DPS - for the development of DPSs. It is holistic as it considers both semantics and syntax from requirements to implementation. And it is collaborative as it separates responsibilities between the roles of those who require the data and those who own them. The process is to be ontology-driven as an ontological model shall be utilized through each phase of the process; it shall formalize the requirements domain, be used as a basis for the syntactic data model, and serve as the domain ontology for annotating the deployed DPSs.
   Results: This paper proposes the ODEP-DPS development process, in addition to defining three artefacts used throughout the process. In particular, a message descriptor is defined that binds semantics and syntax into a single reusable unit. A comprehensive definition of a DPS is also provided. ODEP-DPS is evaluated using a real-life case study from a mental health institution.
   Conclusion: This study contributes a holistic and collaborative development process that provides an end-to-end solution for the development of semantic data providing services. It addresses semantics being developed as afterthoughts by tightly coupling semantics and syntax. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Brown, Kevin P.; Capretz, Miriam A. M.] Univ Western Ontario, Fac Engn, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
C3 Western University (University of Western Ontario)
RP Brown, KP (corresponding author), Univ Western Ontario, Fac Engn, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
EM kpbrown@ieee.org; mcapretz@eng.uwo.ca
RI Capretz, Miriam/G-2362-2014
CR Amarouche IA, 2011, LECT NOTES COMPUT SC, V6990, P95, DOI 10.1007/978-3-642-23740-9_5
   [Anonymous], SEMANTIC WEB SERVICE
   [Anonymous], 2004, OWL S SEMANTIC MARKU
   Bao SH, 2006, LECT NOTES COMPUT SC, V4185, P488
   Barhamgi Mahmoud, 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P464, DOI 10.1109/SCC.2011.72
   Barhamgi M, 2010, IEEE T SERV COMPUT, V3, P206, DOI 10.1109/TSC.2010.4
   Borkar V, 2006, INT J WEB SERV RES, V3, P85, DOI 10.4018/jwsr.2006010105
   BOUGHANNAM A, 2008, IMPROVING INFORM ACC
   Brown AlanW., 2004, SOFTWARE SYSTEM MODE, V3, P314, DOI [DOI 10.1007/S10270-004-0061-2, 10.1007/s10270-004-0061-2]
   Brown P.C., 2008, Implementing SOA: Total Architecture in Practice, e-book
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Chandrasekaran BaTRJ., 1993, Second generation expert systems, P232
   Corcho O., 2006, Ontologies for software engineering and software technology, P1
   Erl T., 2007, SOA Principles of Service Design
   Erl T, 2005, SERVICE ORIENTED ARC
   Giordano AnthonyDavid., 2010, Data Integration Blueprint and Modeling: Techniques for a Scalable and Sustainable Architecture
   Godinez M., 2010, The Art of Enterprise Information Architecture
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   HAMBRICK G, 2008, DEV WORKS SERIES
   HAPPEL H., 2006, INT WORKSHOP SEMANTI, P1
   Happel HJ, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P109, DOI 10.1007/978-3-642-10294-3_6
   HENDERSONSELLERS B, 1990, COMMUN ACM, V33, P142, DOI 10.1145/83880.84529
   Hesse W, 2005, P WORKSH ENT APPL IN
   Hornung T, 2009, LECT NOTES COMPUT SC, V5870, P112, DOI 10.1007/978-3-642-05148-7_10
   IEEE, 1998, 8301998 IEEE
   Kof L, 2010, IEEE INT C SEMANT CO, P46, DOI 10.1109/ICSC.2010.95
   Królikowski Z, 2003, IN HAND I S, P18
   LARMAN C, 2003, AGILE INTERATIVE DEV
   Lu JG, 2005, International Workshop on Challenges in Web Information Retrieval and Integration, Proceedings, P240
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pires PF, 2011, REQUIR ENG, V16, P133, DOI 10.1007/s00766-011-0116-1
   Ruiz F., 2006, ONTOLOGIES SOFTWARE, P49
   Spyns P, 2002, SIGMOD REC, V31, P12, DOI 10.1145/637411.637413
   Sure Y., 2009, Handbook on Ontologies, P135
   Vaculin Roman, 2008, 2008 IEEE International Conference on Web Services (ICWS), P54, DOI 10.1109/ICWS.2008.110
NR 35
TC 1
Z9 2
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1563
EP 1579
DI 10.1016/j.infsof.2013.02.011
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174PU
UT WOS:000321168700003
DA 2024-07-18
ER

PT J
AU Olorisade, BK
   Vegas, S
   Juristo, N
AF Olorisade, Babatunde Kazeem
   Vegas, Sira
   Juristo, Natalia
TI Determining the effectiveness of three software evaluation techniques
   through informal aggregation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Testing technique; Aggregation; Experimentation; Testing technique
   effectiveness
AB Context: An accepted fact in software engineering is that software must undergo verification and validation process during development to ascertain and improve its quality level. But there are too many techniques than a single developer could master, yet, it is impossible to be certain that software is free of defects. So, it is crucial for developers to be able to choose from available evaluation techniques, the one most suitable and likely to yield optimum quality results for different products. Though, some knowledge is available on the strengths and weaknesses of the available software quality assurance techniques but not much is known yet on the relationship between different techniques and contextual behavior of the techniques.
   Objective: This research investigates the effectiveness of two testing techniques - equivalence class partitioning and decision coverage and one review technique - code review by abstraction, in terms of their fault detection capability. This will be used to strengthen the practical knowledge available on these techniques.
   Method: The results of eight experiments conducted over 5 years to investigate the effectiveness of three techniques - code reading by stepwise abstraction, equivalence class partitioning and decision (branch) coverage were aggregated using a less rigorous aggregation process proposed during the course of this work.
   Results: It was discovered that the equivalence class partitioning and the decision coverage techniques behaved similarly in terms of fault detection capacity (and type of faults caught) based on the programs and fault classification used in the experiments. They both behaved better than the code reading by stepwise abstraction technique.
   Conclusion: Overall, it can be deducted from the aggregation results that the equivalence class partitioning and the decision coverage techniques used are actually equally capable in terms of the type and number of faults detected. Nevertheless, more experiments is still required in this field so that this result can be verified using a rigorous aggregation technique. (c) 2013 Elsevier B.V. All rights reserved.
C1 [Olorisade, Babatunde Kazeem] Fountain Univ, Math & Comp Sci Dept, Osogbo, Osun State, Nigeria.
   [Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Fac Informat, Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Olorisade, BK (corresponding author), Fountain Univ, Math & Comp Sci Dept, PMB 4497, Osogbo, Osun State, Nigeria.
EM qasimbabatunde@yahoo.co.uk
RI Vegas, Sira/R-6742-2018
CR Andersson C, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P174, DOI 10.1109/ISESE.2003.1237976
   [Anonymous], 2002, RTI PROJECT
   [Anonymous], 2006, MULTIVARIATE DATA AN
   [Anonymous], 2000, P C FUT SOFTW ENG IC, DOI DOI 10.1145/336512.336532
   [Anonymous], 1990, Software testing techniques {
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Basili VictorR., 1985, EXPT SOFTWARE ENG
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Berling T, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P226, DOI 10.1109/METRIC.2003.1232470
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Ciolkowski M, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1241366
   Farooq S.U., 2009, NOVEL APPROACH EVALU
   Fernandez E., 2007, AGGREGATION PROCESS, P75
   Hetzel W.C., 1976, EXPT ANAL PROGRAM VE
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N, 2003, LECT NOTES COMPUT SC, V2765, P208
   Juristo N, 1998, KNOWL-BASED SYST, V11, P145, DOI 10.1016/S0950-7051(98)00047-1
   Juristo N., 2005, SOFTWARE EVALUATION, P117
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N., 2003, SERIES SOFTWARE ENG, V12, P1
   Kamsties E., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P362
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Olorisade B., 2010, SUMMARIZING RESULTS
   Olorisade B.K., 2012, IJCSI INT J COMPUTER, V9, P199
   PERRY DE, 2000, ACM P C FUT SOFTW EN, P345
   Porto D, 2009, INT C PROGRAM COMPRE, P285, DOI 10.1109/ICPC.2009.5090060
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Runeson P., 2003, 14 INT S SOFTW REL E, P11
   So SS, 2002, SOFTW TEST VERIF REL, V12, P155, DOI 10.1002/stvr.248
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Torkar R., 2006, AUTOMATED SOFTWARE T
   Vegas S., 2002, CHARACTERIZATION SCH
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
NR 36
TC 5
Z9 5
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2013
VL 55
IS 9
BP 1590
EP 1601
DI 10.1016/j.infsof.2013.02.015
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174PU
UT WOS:000321168700005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Vujosevic-Janicic, M
   Nikolic, M
   Tosic, D
   Kuncak, V
AF Vujosevic-Janicic, Milena
   Nikolic, Mladen
   Tosic, Dugan
   Kuncak, Viktor
TI Software verification and graph similarity for automated evaluation of
   students' assignments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automated grading; Software verification; Graph similarity; Computer
   supported education
ID BOUNDED MODEL CHECKING; MARKING
AB Context: The number of students enrolled in universities at standard and on-line programming courses is rapidly increasing. This calls for automated evaluation of students assignments.
   Objective: We aim to develop methods and tools for objective and reljable automated grading that can also provide substantial and comprehensible feedback. Our approach targets introductory programming courses, which have a number of specific features and goals. The benefits are twofold: reducing the workload for teachers, and providing helpful feedback to students in the process of learning.
   Method: For sophisticated automated evaluation of students' programs, our grading framework combines results of three approaches (i) testing, (ii) software verification, and (iii) control flow graph similarity measurement. We present our tools for software verification and control flow graph similarity measurement, which are publicly available and open source. The tools are based on an intermediate code representation, so they could be applied to a number of programming languages.
   Results: Empirical evaluation of the proposed grading framework is performed on a corpus of programs written by university students in programming language C within an introductory programming course. Results of the evaluation show that the synergy of proposed approaches improves the quality and precision of automated grading and that automatically generated grades are highly correlated with instructor-assigned grades. Also, the results show that our approach can be trained to adapt to teacher's grading style.
   Conclusions: In this paper we integrate several techniques for evaluation of student's assignments. The obtained results suggest that the presented tools can find real-world applications in automated grading. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Vujosevic-Janicic, Milena; Nikolic, Mladen; Tosic, Dugan] Univ Belgrade, Fac Math, Belgrade 11000, Serbia.
   [Kuncak, Viktor] Ecole Polytech Fed Lausanne, Sch Comp & Commun Sci, Stn 14, CH-1015 Lausanne, Switzerland.
C3 University of Belgrade; Swiss Federal Institutes of Technology Domain;
   Ecole Polytechnique Federale de Lausanne
RP Vujosevic-Janicic, M (corresponding author), Univ Belgrade, Fac Math, Studentski Trg 16, Belgrade 11000, Serbia.
EM milena@matf.bg.ac.rs; nikolic@matf.bg.ac.rs; dtosic@matf.bg.ac.rs;
   viktor.kuncak@epfl.ch
OI Vujosevic Janicic, Milena/0000-0001-5396-0644
FU Serbian Ministry of Science [174021]; Swiss National Science Foundation
   [SCOPES IZ73Z0_127979/1]; COST Action [IC0901]
FX This work was partially supported by the Serbian Ministry of Science
   Grant 174021, by Swiss National Science Foundation Grant SCOPES
   IZ73Z0_127979/1 and by COST Action IC0901 "Rich Model Toolkit-An
   Infrastructure for Reliable Computer Systems". The authors are grateful
   to Filip Maric from University of Belgrade and to the anonymous
   reviewers of the IST journal for their very constructive comments on the
   manuscript.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ala-Mutka KM, 2005, COMPUT SCI EDUC, V15, P83, DOI 10.1080/08993400500150747
   [Anonymous], FRONTIERS ED C
   [Anonymous], INTELLIGENT DA UNPUB
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   [Anonymous], LLVM COMPILER INFRAS
   [Anonymous], ACM SIGPLAN NOTICES
   [Anonymous], 2002, TECHNICAL REPORT
   [Anonymous], SUBSTR VIRT MACH
   [Anonymous], 2005, Journal on Educational Resources in Computing (JERIC)
   [Anonymous], INT J WEB BASED LEAR
   [Anonymous], 2005, Journal on Educational Resources in Computing (JERIC)
   [Anonymous], TECHNICAL REPORT
   [Anonymous], LNCS
   [Anonymous], VERIFICATION MODEL C
   [Anonymous], LLVM PY PYTHON BINDI
   [Anonymous], INT C TECHN OP MAN
   [Anonymous], 2012, ACM QUEUE, DOI DOI 10.1145/2090147.2094081
   [Anonymous], LUA JIT STATIC COMPI
   [Anonymous], BUNNY FUZZER
   [Anonymous], P 11 ANN NETW DISTR
   [Anonymous], NAT C SOFTW ENG COMP
   [Anonymous], LLVM RUBY
   [Anonymous], COMPILING SCALA LLVM
   [Anonymous], D LLVM D COMPILER
   [Anonymous], 2010, P KOLI CALLING, DOI 10.1145/1930464.1930480
   [Anonymous], COMP 2003 ACM C OBJ
   [Anonymous], SIGCUE OUTLOOK
   [Anonymous], LLVM PURE PURE PROGR
   [Anonymous], P FRONT ED C
   [Anonymous], J ED RESOURCES COMPU
   [Anonymous], FRONTIERS ED ANN
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Blondel VD, 2004, SIAM REV, V46, P647, DOI 10.1137/S0036144502415960
   Blumenstein M, 2008, COMPUT EDUC, V50, P1203, DOI 10.1016/j.compedu.2006.11.006
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cheang B, 2003, COMPUT EDUC, V41, P121, DOI 10.1016/S0360-1315(03)00030-7
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Condit J, 2003, ACM SIGPLAN NOTICES, V38, P232, DOI 10.1145/780822.781157
   Cordeiro L, 2009, IEEE INT CONF AUTOM, P137, DOI 10.1109/ASE.2009.63
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Dhurjati D, 2006, ACM SIGPLAN NOTICES, V41, P144, DOI 10.1145/1133981.1133999
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   EDMONDS J, 1972, J ACM, V19, P248, DOI 10.1145/321694.321699
   Ellsworth C. C., 2004, SIGCSE Bulletin, V36, P205, DOI 10.1145/1028174.971374
   English J., 2004, SIGCSE Bulletin, V36, P137, DOI 10.1145/1026487.1008033
   FLEMING WH, 1988, INFORM SOFTWARE TECH, V30, P547, DOI 10.1016/0950-5849(88)90133-4
   FREDMAN ML, 1987, J ACM, V34, P596, DOI 10.1145/28869.28874
   Garavel H, 1998, LECT NOTES COMPUT SC, V1384, P68
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   GroSS J., 2003, LINEAR REGRESSION
   HEXT JB, 1969, COMMUN ACM, V12, P272, DOI 10.1145/362946.362981
   Heymans M, 2003, BIOINFORMATICS, V19, pi138, DOI 10.1093/bioinformatics/btg1018
   Horwitz S., 1992, International Conference on Software Engineering, P392, DOI 10.1145/143062.143156
   Howatt J. W., 1994, SIGCSE Bulletin, V26, P3, DOI 10.1145/187387.187389
   Huang L, 2009, INFORM SOFTWARE TECH, V51, P182, DOI 10.1016/j.infsof.2008.03.007
   Ihantola P, 2007, INFORM EDUC, V6, P81
   Jackson D., 1997, SIGCSE Bulletin, V29, P335, DOI 10.1145/268085.268210
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Lattner Chris., 2002, The LLVM Instruction Set and Compilation Strategy
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li JR, 2010, LECT NOTES COMPUT SC, V6249, P247
   LOO PS, 1988, INFORM SOFTWARE TECH, V30, P402, DOI 10.1016/0950-5849(88)90037-7
   Merz F, 2012, LECT NOTES COMPUT SC, V7152, P146, DOI 10.1007/978-3-642-27705-4_12
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Mitchell M., 2012, RES DESIGN EXPLAINED, V8th
   Naudé KA, 2010, COMPUT EDUC, V54, P545, DOI 10.1016/j.compedu.2009.09.005
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Pears Arnold, 2007, SIGCSE Bulletin, V39, P204, DOI 10.1145/1345375.1345441
   Reek K. A., 1989, SIGCSE Bulletin, V21, P112, DOI 10.1145/65294.71198
   Saikkonen R., 2001, SIGCSE Bulletin, V33, P133, DOI 10.1145/507758.377666
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Spacco J., 2006, SIGCSE Bulletin, V38, P13, DOI 10.1145/1140123.1140131
   Thorburn G, 1997, COMPUT EDUC, V29, P195, DOI 10.1016/S0360-1315(97)00021-3
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Truong N., 2005, P 7 AUSTRALASIAN C C, V42, P117
   Vujosevic-Janicic M, 2008, TEACH MATH-SERB, V11, P63
   Vujosevic-Janicic M, 2012, LECT NOTES COMPUT SC, V7152, P98, DOI 10.1007/978-3-642-27705-4_9
   Wang TT, 2007, INFORM SOFTWARE TECH, V49, P99, DOI 10.1016/j.infsof.2006.03.001
   Wang TT, 2011, COMPUT EDUC, V56, P220, DOI 10.1016/j.compedu.2010.08.003
   Wick M., 2005, SIGCSE Bulletin, V37, P236, DOI 10.1145/1047124.1047427
   Yong SH, 2005, FORM METHOD SYST DES, V27, P313, DOI 10.1007/s10703-005-3401-0
   Zeller A, 2000, SIGCSE BULL, V32, P89, DOI 10.1145/353519.343090
NR 87
TC 54
Z9 56
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 1004
EP 1016
DI 10.1016/j.infsof.2012.12.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 139LS
UT WOS:000318584800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mehmood, A
   Jawawi, DNA
AF Mehmood, Abid
   Jawawi, Dayang N. A.
TI Aspect-oriented model-driven code generation: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aspect-oriented software development; Model-driven engineering; Code
   generation; Systematic map
ID DESIGN; IMPLEMENTATION; MATA; TOOL
AB Context: Model-driven code generation is being increasingly applied to enhance software development from perspectives of maintainability, extensibility and reusability. However, aspect-oriented code generation from models is an area that is currently underdeveloped.
   Objective: In this study we provide a survey of existing research on aspect-oriented modeling and code generation to discover current work and identify needs for future research.
   Method: A systematic mapping study was performed to find relevant studies. Classification schemes have been defined and the 65 selected primary studies have been classified on the basis of research focus, contribution type and research type.
   Results: The papers of solution proposal research type are in a majority. All together aspect-oriented modeling appears being the most focused area divided into modeling notations and process (36%) and model composition and interaction management (26%). The majority of contributions are methods.
   Conclusion: Aspect-oriented modeling and composition mechanisms have been significantly discussed in existing literature while more research is needed in the area of model-driven code generation. Furthermore, we have observed that previous research has frequently focused on proposing solutions and thus there is need for research that validates and evaluates the existing proposals in order to provide firm foundations for aspect-oriented model-driven code generation. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Mehmood, Abid; Jawawi, Dayang N. A.] Univ Teknol Malaysia, Dept Software Engn, Fac Comp Sci & Informat Syst, Skudai 81310, Johor, Malaysia.
C3 Universiti Teknologi Malaysia
RP Mehmood, A (corresponding author), Univ Teknol Malaysia, Dept Software Engn, Fac Comp Sci & Informat Syst, Skudai 81310, Johor, Malaysia.
EM mabid4@live.utm.my; dayang@utm.my
RI Mehmood, Abid/ACD-8583-2022; Jawawi, Dayang N. A./A-7251-2013
OI Mehmood, Abid/0000-0001-9974-9537; jawawi, dayang n.
   a./0000-0001-8300-8523
CR Afonso Margarida., 2006, Model-Based Development of Computer-Based Systems and Model-Based Methodologies for Pervasive and Embedded Software, P10
   AjileJ, 2011, AJIL STRUCTUREVIEWS
   Al Abed W, 2011, LECT NOTES COMPUT SC, V6981, P123, DOI 10.1007/978-3-642-24485-8_10
   Albunni N., 2008, 3 INT C INF COMM TEC, P1
   ALDAWUD T, 2003, 3 INT WORKSH ASP OR
   Alhalabi F., 2006, P 2 INF COMM TECHN, P3216
   Amalio N, 2010, LECT NOTES COMPUT SC, V6210, P151
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2006, P 14 ACM SIGSOFT INT
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], MDA GUIDE VERSION 1
   Ballal Rahul, 2009, 2009 WRI World Congress on Computer Science and Information Engineering, CSIE, P488, DOI 10.1109/CSIE.2009.847
   BARAIS O, 2008, P ICCBSS 2008 MADR S, P43, DOI DOI 10.1109/ICCBSS.2008.12
   Bennett J, 2010, SCI COMPUT PROGRAM, V75, P689, DOI 10.1016/j.scico.2009.05.005
   Booch G., 1993, Object-Oriented Analysis and Design with Applications, V2nd ed.
   Brooks Frederick P., 1995, The mythical man-month
   Buckl C, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P580
   Cacho Nelio., 2006, AOSD 06 P 5 INT C AS, P109
   Carton A, 2009, LECT NOTES COMPUT SC, V5560, P238, DOI 10.1007/978-3-642-03764-1_7
   Cetina C, 2007, FOURTH INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, PROCEEDINGS, P33, DOI 10.1109/MOMPES.2007.17
   Chauvel F, 2005, LECT NOTES COMPUT SC, V3713, P54, DOI 10.1007/11557432_5
   Chitchyan R., 2005, SURVEY ASPECT ORIENT
   Ciraci S, 2010, LECT NOTES COMPUT SC, V6210, P321
   Clarke S., 2005, ASPECT ORIENTED ANAL
   Clarke Siobhan, 2002, ACM P ASP OR SOFTW D, P113
   COHEN J, 1990, COMMUN ACM, V33, P52, DOI 10.1145/79204.79209
   Cottenier T, 2007, J OBJECT TECHNOL, V6, P51, DOI 10.5381/jot.2007.6.7.a3
   Dai L., 2005, THESIS U TEXAS DALLA
   Debnath N., 2008, 2008 IEEE Symposium on Computers and Communications (ISCC), P654, DOI 10.1109/ISCC.2008.4625764
   Demchak B, 2008, LECT NOTES COMPUT SC, V5153, P85
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Elrad T, 2002, LECT NOTES COMPUT SC, V2487, P189
   Evermann J, 2007, P 10 INT WORKSH ASP, P21, DOI [DOI 10.1145/1229375.1229379, 10.1145/1229375.1229379]
   Fabry J, 2011, LECT NOTES COMPUT SC, V6981, P93, DOI 10.1007/978-3-642-24485-8_8
   Francisca Losavio A.M., 2009, J OBJECT TECHNOLOGY, V8, P105
   FUENTES L, 2006, P WORKSH MOD BAS DEV, P10
   Fuentes L, 2007, J OBJECT TECHNOL, V6, P109, DOI 10.5381/jot.2007.6.7.a5
   Fuentes L, 2007, LECT NOTES COMPUT SC, V4530, P83
   Fuentes L, 2009, LECT NOTES COMPUT SC, V5560, P1, DOI 10.1007/978-3-642-03764-1_1
   Garcia A., 2005, AOSD 05, P3
   Gray JE, 2004, SE SYM SYS THRY, P36, DOI 10.1145/976270.976277
   Groher I, 2003, 3 INT WORKSH ASP OR
   Groher I., 2007, P 10 INT WORKSHOP AS, P35
   Gronmo R, 2008, LECT NOTES COMPUT SC, V5063, P122, DOI 10.1007/978-3-540-69927-9_9
   HANENBERG S, 2004, P 3 INT C ASP OR SOF, P46
   Hanenberg S., 2007, AOSD 07 P 6 INT C AS, P49
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Harrison W., 2002, RC22685 IBM
   Hecht M. V., 2005, PROC 20 BRAZILIAN C
   Ho W.M., 2002, PROC 1 INT, P99
   Holzl M, 2010, LECT NOTES COMPUT SC, V6210, P234
   Hovsepyan A., 2010, P 9 INT C ASP OR SOF, P85
   Hovsepyan A, 2006, LECT NOTES COMPUT SC, V4017, P49, DOI 10.1007/11796435_7
   Jackson J.K. Andrew, 2006, WORKSH INT MOD DRIV
   Jézéquel JM, 2008, SOFTW SYST MODEL, V7, P209, DOI 10.1007/s10270-008-0080-5
   Karakostas B., 2008, ENG SERVICE ORIENTED
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P272
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P1
   Kitchenham B., 2007, EBSE200701 KEEL U U
   KLEIN J, 2007, 11 WORKSH ASP OR MOD
   Klein J, 2007, LECT NOTES COMPUT SC, V4620, P167
   Klein J, 2009, LECT NOTES COMPUT SC, V5795, P514, DOI 10.1007/978-3-642-04425-0_39
   Klein Jacques., 2006, AOSD, P27
   Kramer M., 2011, P MODELS 2010 MOD SO, P125
   Krechetov I., 2006, 8 WORKSH ASP OR MOD
   Leroux D, 2006, IBM SYST J, V45, P555, DOI 10.1147/sj.453.0555
   Lidia Fuentes P.S.a., 2006, 8 WORKSH AOM 5 INT C
   Mehmood A., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P147, DOI 10.1109/MySEC.2011.6140660
   Mehner K, 2009, LECT NOTES COMPUT SC, V5490, P235, DOI 10.1007/978-3-642-02059-9_7
   Morin B, 2008, LECT NOTES COMPUT SC, V5301, P797, DOI 10.1007/978-3-540-87875-9_55
   Morin B, 2008, LECT NOTES COMPUT SC, V5301, P782, DOI 10.1007/978-3-540-87875-9_54
   Mosconi M., 2008, AOM 08 P 2008 AOSD W, P19
   Mouheb D, 2010, STUD COMPUT INTELL, V296, P197, DOI 10.1007/978-3-642-13273-5_13
   Niaz I. A., 2005, INT J COMPUTER INFOR, V6
   NoMagic, 2011, MAGICDRAW UML
   O. Group, 2007, OMG UN MOD LANG OMG
   Oldevik J, 2009, LECT NOTES COMPUT SC, V5795, P531, DOI 10.1007/978-3-642-04425-0_40
   Op de beeck S., 2006, STUDY ASPECT ORIENTE
   PAWLAK R, 2002, AO MOD UML WORKSH AO
   Philippi S, 2006, J SYST SOFTWARE, V79, P1444, DOI 10.1016/j.jss.2005.12.022
   Pilitowski R, 2007, INNOVATIONS AND ADVANCED TECHNIQUES IN COMPUTER AND INFORMATION SCIENCES AND ENGINEERING, P421, DOI 10.1007/978-1-4020-6268-1_75
   Pitkänen R, 2004, LECT NOTES COMPUT SC, V3273, P158
   Rashid A., 2006, EARLY ASPECTS ASPECT
   Rauchwerger Y., 2005, SDL 2005 MODEL DRIVE, P1159
   Reddy YR, 2006, LECT NOTES COMPUT SC, V3880, P75
   Reina A.M., 2004, 5 ASP OR MOD WORKSH
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Sánchez P, 2008, LECT NOTES COMPUT SC, V5301, P766, DOI 10.1007/978-3-540-87875-9_53
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Simmonds Devon M., 2009, Proceedings of the 2009 International Conference on Software Engineering Research & Practice. SERP 2009, P327
   Simmonds D.M., 2008, INT C SOFTW ENG RES
   Song HT, 2006, WCICA 2006: SIXTH WORLD CONGRESS ON INTELLIGENT CONTROL AND AUTOMATION, VOLS 1-12, CONFERENCE PROCEEDINGS, P6426
   Stavrou A, 2009, INFORMATION SYSTEMS DEVELOPMENT: CHALLENGES IN PRACTICE, THEORY AND EDUCATION, VOLS 1AND 2, P1047, DOI 10.1007/978-0-387-78578-3_36
   Stein D, 2006, P 5 INT C ASP OR SOF, P15
   Stein D., 2002, AOSD '02: Proceedings of the 1st international conference on Aspect-oriented software development, P106
   Wang Rui, 2009, Proceedings of the 2009 Second International Workshop on Computer Science and Engineering (WCSE 2009), P362, DOI 10.1109/WCSE.2009.688
   Wehrmeister MA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P234, DOI 10.1109/ISORC.2008.67
   Wehrmeister MA, 2009, IFIP ADV INF COMM TE, V310, P32
   White J, 2009, LECT NOTES COMPUT SC, V5560, P153, DOI 10.1007/978-3-642-03764-1_5
   Whittle J, 2008, LECT NOTES COMPUT SC, V5002, P16
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wimmer M, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978807
   Xu D., 2006, PROC INT C ASPECT OR, P180
   Zakaria A. A., 2002, 5 INT C UN MOD LANG
   Zhang G., 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   Zhang GF, 2007, LECT NOTES COMPUT SC, V4735, P529
   Zhang JJ, 2009, PROCEEDINGS OF THE FIRST INTERNATIONAL WORKSHOP ON EDUCATION TECHNOLOGY AND COMPUTER SCIENCE, VOL II, P242, DOI [10.1109/ETCS.2009.314, 10.1109/WCSE.2009.662]
   Zhou XC, 2008, ISCSCT 2008: INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND COMPUTATIONAL TECHNOLOGY, VOL 2, PROCEEDINGS, P738, DOI 10.1109/ISCSCT.2008.125
NR 112
TC 26
Z9 30
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 395
EP 411
DI 10.1016/j.infsof.2012.09.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500014
DA 2024-07-18
ER

PT J
AU Jiang, B
   Zhang, ZY
   Chan, WK
   Tse, TH
   Chen, TY
AF Jiang, Bo
   Zhang, Zhenyu
   Chan, W. K.
   Tse, T. H.
   Chen, Tsong Yueh
TI How well does test case prioritization integrate with statistical fault
   localization?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software process integration; Continuous integration; Test case
   prioritization; Statistical fault localization; Adaptive random testing;
   Coverage
ID FAMILY
AB Context: Effective test case prioritization shortens the time to detect failures, and yet the use of fewer test cases may compromise the effectiveness of subsequent fault localization.
   Objective: The paper aims at finding whether several previously identified effectiveness factors of test case prioritization techniques, namely strategy, coverage granularity, and time cost, have observable consequences on the effectiveness of statistical fault localization techniques.
   Method: This paper uses a controlled experiment to examine these factors. The experiment includes 16 test case prioritization techniques and four statistical fault localization techniques using the Siemens suite of programs as well as grep, gzip, sed, and flex as subjects. The experiment studies the effects of the percentage of code examined to locate faults from these benchmark subjects after a given number of failures have been observed.
   Results: We find that if testers have a budgetary concern on the number of test cases for regression testing, the use of test case prioritization can save up to 40% of test case executions for commit builds without significantly affecting the effectiveness of fault localization. A statistical fault localization technique using a smaller fraction of a prioritized test suite is found to compromise its effectiveness seriously. Despite the presence of some variations, the inclusion of more failed test cases will generally improve the fault localization effectiveness during the integration process. Interestingly, during the variation periods, adding more failed test cases actually deteriorates the fault localization effectiveness. In terms of strategies, Random is found to be the most effective, followed by the ART and Additional strategies, while the Total strategy is the least effective. We do not observe sufficient empirical evidence to conclude that using different coverage granularity levels have different overall effects.
   Conclusion: The paper empirically identifies that strategy and time cost of test case prioritization techniques are key factors affecting the effectiveness of statistical fault localization, while coverage granularity is not a significant factor. It also identifies a mid-range deterioration in fault localization effectiveness when adding more test cases to facilitate debugging. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Jiang, Bo] Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
   [Zhang, Zhenyu] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
   [Chen, Tsong Yueh] Swinburne Univ Technol, Ctr Software Anal & Testing, Melbourne, Vic, Australia.
C3 City University of Hong Kong; Beihang University; Chinese Academy of
   Sciences; Institute of Software, CAS; University of Hong Kong; Swinburne
   University of Technology
RP Chan, WK (corresponding author), City Univ Hong Kong, Dept Comp Sci, Tat Chee Ave, Hong Kong, Hong Kong, Peoples R China.
EM wkchan@cityu.edu.hk
RI Chan, Wah Kheong/AGA-6636-2022; Tse, T.H./C-6590-2008
OI Chan, Wah Kheong/0000-0002-9105-5837; Tse, T.H./0000-0002-0460-8377;
   Chen, Tsong/0000-0003-3578-0994; Chan, Wing Kwong/0000-0001-7726-6235
FU Beihang University; Natural Science Foundation of China [61003027]; City
   University of Hong Kong [7002673]; Research Grants Council of Hong Kong
   [717308]; Australian Research Council [DP120104773]
FX This research is supported in part by a grant of the Basic Research Fund
   of Beihang University, a grant of the Natural Science Foundation of
   China (Project No. 61003027), a strategy research grant of City
   University of Hong Kong (Project No. 7002673), a grant of the General
   Research Fund of the Research Grants Council of Hong Kong (Project No.
   717308), and a discovery grant of the Australian Research Council
   (Project No. DP120104773).
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   [Anonymous], P 2011 ACM S APPL CO
   [Anonymous], DEPLOYMENT PIPELINE
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], TUDSERG2010007 DELFT
   [Anonymous], 2008, ISSTA
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bo Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P377, DOI 10.1109/QSIC.2010.64
   Bo Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P62, DOI 10.1109/QSIC.2010.55
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chen TY, 2007, IEEE T RELIAB, V56, P562, DOI 10.1109/TR.2007.903293
   Chen TY, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363107
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chittimalli PK, 2009, IEEE T SOFTWARE ENG, V35, P452, DOI 10.1109/TSE.2009.4
   Ciupa I., 2007, P 2007 INT S SOFTWAR, P84, DOI [10.1145/1273463.1273476, DOI 10.1145/1273463.1273476]
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Ciupa Ilinca., 2006, P 1 INT WORKSHOP RAN, P55
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fowler M., 2006, Continuous integration
   Gonzalez-Sanchez Alberto, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P42, DOI 10.1109/QSIC.2010.28
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jiang B, 2009, P INT COMP SOFTW APP, P99, DOI 10.1109/COMPSAC.2009.23
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Leon D, 2005, PROC INT CONF SOFTW, P412
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Lipkus AH, 1999, J MATH CHEM, V26, P263, DOI 10.1023/A:1019154432472
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Shali Yan, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P147, DOI 10.1109/ICST.2010.47
   Sihan Li, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P72, DOI 10.1109/QSIC.2010.15
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang QQ, 2010, PROCEEDINGS OF 2010 INTERNATIONAL WORKSHOP ON DIFFUSE POLLUTION-MANAGEMENT MEASURES AND CONTROL TECHNIQUE, P171, DOI 10.1109/QSIC.2010.16
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
   Zhang ZY, 2011, J SYST SOFTWARE, V84, P885, DOI 10.1016/j.jss.2010.12.048
   Zhang ZY, 2010, J SYST SOFTWARE, V83, P174, DOI 10.1016/j.jss.2009.09.041
   Zhang ZY, 2009, INFORM SOFTWARE TECH, V51, P1573, DOI 10.1016/j.infsof.2009.06.013
   Zhi Quan Zhou, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P208, DOI 10.1109/COMPSACW.2010.43
NR 51
TC 43
Z9 49
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 739
EP 758
DI 10.1016/j.infsof.2012.01.006
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 946WG
UT WOS:000304387600006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Karlsson, F
   Ågerfalk, PJ
AF Karlsson, Fredrik
   Agerfalk, Par J.
TI MC Sandbox: Devising a tool for method-user-centered method
   configuration
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Situational method; Method adaptation; Method configuration; Method
   tailoring; Methods; Method engineering
ID REQUIREMENTS; DESIGN; USABILITY
AB Context: Method engineering approaches are often based on the assumption that method users are able to explicitly express their situational method requirements. Similar to systems requirements, method requirements are often vague and hard to explicate. In this paper we address the issue of involving method users early in method configuration. This is done through borrowing ideas from user-centered design and prototyping, and implementing them on the method engineering layer.
   Objective: We design a computerized tool, MC Sandbox, to capture method requirements through the use of method-user-centered method configuration, hence bridging the gap between systems developers' and method engineers' understanding of and expectations on a situational method.
   Method: The research method adopted can be characterized as multi-grounded action research. Our implementation of multi-grounded action research follows the traditional 'canonical' action research method, which has cycles of diagnosing, action planning, action taking, evaluating, and specifying learning. The research project comprised three such action research cycles where 10 action cases were performed.
   Results: MC Sandbox has proven useful in eliciting and negotiating method requirements in a continuously ongoing dialog between the method users and the method engineers during configuration workshops. The results also show that the method engineer role rotated among the systems developers and that they were indeed committed to the negotiated methods during the systems development projects.
   Conclusion: It is possible for method users to actively participate and construct suitable situational methods if they are provided with appropriate high-level modelling concepts, such as method components, configuration packages and configuration templates. This way, the project members' understanding of the current development practice develops incrementally, both in terms of understanding the needs and available method support. In addition, both method requirements and commitments are made explicit, which are important aspects when working with method configuration from a collaboration point of view. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Karlsson, Fredrik] Univ Orebro, Swedish Business Sch, SE-70182 Orebro, Sweden.
   [Agerfalk, Par J.] Uppsala Univ, Dept Informat & Media, SE-75105 Uppsala, Sweden.
C3 Orebro University; Uppsala University
RP Karlsson, F (corresponding author), Univ Orebro, Swedish Business Sch, SE-70182 Orebro, Sweden.
EM fredrik.karlsson@oru.se; par.agerfalk@im.uu.se
RI Agerfalk, Par J/I-9374-2012; Karlsson, Fredrik/AAQ-1270-2021
CR Agerfalk P.J., 2003, P 5 INT C ENT INF SY
   [Anonymous], 2002, User-Centered Design: An Integrated Approach
   [Anonymous], 1997, SITUATIONAL METHOD E
   [Anonymous], CHALLENGES STRATEGIE
   [Anonymous], SITUATIONAL METHOD E
   [Anonymous], ADOPTING RATIONAL UN
   Anton A.I., 1996, 2 IEEE INT C REQ ENG
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Backlund P., 2002, 8 AM C INF SYST AMCI
   Bajec M, 2007, INFORM SOFTWARE TECH, V49, P345, DOI 10.1016/j.infsof.2006.05.007
   Baskerville R, 1998, EUR J INFORM SYST, V7, P90, DOI 10.1057/palgrave.ejis.3000298
   Baskerville R., 1999, ACCOUNTING MANAGEMEN, V9, P1, DOI 10.1016/S0959-8022(98)00017-4
   Beck K., 2000, EXTREME PROGRAMMING
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Boar BH., 1984, APPL PROTOTYPING REQ
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   Braa K., 1999, ACCOUNTING MANAGEMEN, V9, P25, DOI [DOI 10.1016/S0959-8022(98)00018-6, 10.1016/S0959-8022(98)00018-6]
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Bucher T, 2007, INT FED INFO PROC, V244, P33
   Cameron J, 2002, COMMUN ACM, V45, P72, DOI 10.1145/504729.504731
   CARMEL E, 1993, COMMUN ACM, V36, P40, DOI 10.1145/153571.163265
   CARROLL JM, 1994, COMMUN ACM, V37, P29, DOI 10.1145/198366.198374
   Cato J., 2001, USER CTR WEB DEISGN
   Chakraborty S, 2010, J ASSOC INF SYST, V11, P212
   Cockburn A, 2000, IEEE SOFTWARE, V17, P64, DOI 10.1109/52.854070
   Coughlan J, 2003, INFORM SOFTWARE TECH, V45, P525, DOI [10.1016/S0950-5849(03)00032-6, 10.1016/SO950-5849(03)00032-6]
   Deneckere R., 2008, 13 WORKSH EXPL MOD M
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Eva M, 2001, INFORM MANAGE, V39, P101, DOI 10.1016/S0378-7206(01)00082-9
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   GOLDKUHL G, 1993, IFIP TRANS A, V24, P107
   Gould J.D., 1988, HDB HUMAN COMPUTER I
   GOULD JD, 1985, COMMUN ACM, V28, P300, DOI 10.1145/3166.3170
   Gupta D., 2001, Requirements Engineering, V6, P135, DOI 10.1007/s007660170001
   Hall RR, 2001, INT J HUM-COMPUT ST, V55, P485, DOI 10.1006/ijhc.2001.0478
   Henderson-Sellers B, 2007, INFORM SOFTWARE TECH, V49, P761, DOI 10.1016/j.infsof.2006.08.003
   Henderson-Sellers B, 2002, ANN SOFTW ENG, V14, P341, DOI 10.1023/A:1020570027891
   Henderson-Sellers B, 2008, 19 AUSTR C SOFTW ENG
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   HIGGINS JM, 1995, TRAINING DEV, V49, P13
   Holmström J, 2011, EUR J INFORM SYST, V20, P34, DOI 10.1057/ejis.2010.51
   Hoorn JF, 2007, J SYST SOFTWARE, V80, P328, DOI 10.1016/j.jss.2006.02.064
   Janiesch C., 2010, P 43 HAW INT C SYST, P1
   Karlsson F, 2006, EUR J INFORM SYST, V15, P82, DOI 10.1057/palgrave.ejis.3000596
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   Karlsson F., 2008, 17 INT C INF SYST DE
   KARLSSON F, 2004, 9 CAISE IFIP8 1 EUNO
   Karlsson F., 2005, SIT REQ ENG PROC MET
   Karlsson F, 2009, EUR J INFORM SYST, V18, P300, DOI 10.1057/ejis.2009.20
   Karlsson F, 2009, J DATABASE MANAGE, V20, P51, DOI 10.4018/jdm.2009070103
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Klein HK, 2001, INFORM SYST FRONT, V3, P75, DOI 10.1023/A:1011453721700
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Lind M, 2006, AUSTRALAS J INF SYST, V13, P69
   Lindgaard G, 2006, INTERACT COMPUT, V18, P47, DOI 10.1016/j.intcom.2005.06.003
   Madsen K.H., 1993, COMMUNICATIONS ACM, V36
   Maiden N.A.M., 2004, IEEE SOFTWARE, V21
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Marti Patrizia, 2009, Knowledge Technology & Policy, V22, P7, DOI 10.1007/s12130-009-9062-3
   Martin J., 1991, Rapid Application Development
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Naumann JD, 1982, MIS QUART, V6, P29, DOI 10.2307/248654
   Nickols F.W., 1993, J SYSTEMS MANAGEMENT, V44, P1993
   NORMAN, 2022, PSYCHOL EVERYDAY THI
   Ralyte J., 1999, 1 INT WORKSH REQ ENG
   RETTIG M, 1994, COMMUN ACM, V37, P21, DOI 10.1145/175276.175288
   Rolland C, 2004, REQUIR ENG, V9, P1, DOI 10.1007/s00766-003-0168-y
   Rolland C, 1996, METHOD ENGINEERING, P191
   Rolland C., 1999, Requirements Engineering, V4, P169, DOI 10.1007/s007660050018
   Rolland Colette, 2009, Software Process: Improvement and Practice, V14, P143, DOI 10.1002/spip.416
   Rolland C., 1998, 10 INT C CAISE 98 PI
   Rossi M., 1998, ADV COMPUTER SUPPORT
   Rossi M., 2004, Journal of the Association for Information Systems, V5, P356
   Stolterman E., 1992, Scandinavian Journal of Information Systems, V4, P137
   STOLTERMAN E, 1997, BRIT COMP SOC 5 ANN
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   van Lamsweerde A., 2008, 16 ACM SIGSOFT INT S
   van Lamsweerde A., 2001, 5 IEEE INT S REQ ENG
   van Slooten K., 1996, P IFIP TC8 WG8 1 8 2
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   Wistrand K, 2004, BIOMED SCI INSTRUM, V3084, P189
   Wistrand K., 2009, METHOD RATIONALE REV
   Wistrand K., 2008, 17 INT C INF SYST DE
   Yin R., 1994, CASE STUDY RES DESIG
   Yu E., 1998, P 4 INT WORKSH REQ E
   Yu E., 1993, IEEE INT S REQ ENG S
   Yue K., 1987, 4 INT WORKSH SOFTW S
   Zvanut B, 2010, INFORM SOFTWARE TECH, V52, P397, DOI 10.1016/j.infsof.2009.10.011
NR 90
TC 6
Z9 7
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2012
VL 54
IS 5
BP 501
EP 516
DI 10.1016/j.infsof.2011.12.009
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 906CR
UT WOS:000301323000005
DA 2024-07-18
ER

PT J
AU Ma, Y
   Luo, GC
   Zeng, X
   Chen, AG
AF Ma, Ying
   Luo, Guangchun
   Zeng, Xue
   Chen, Aiguo
TI Transfer learning for cross-company software defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Machine learning; Software defect prediction; Transfer learning; Naive
   Bayes; Different distribution
ID MODELS
AB Context: Software defect prediction studies usually built models using within-company data, but very few focused on the prediction models trained with cross-company data. It is difficult to employ these models which are built on the within-company data in practice, because of the lack of these local data repositories. Recently, transfer learning has attracted more and more attention for building classifier in target domain using the data from related source domain. It is very useful in cases when distributions of training and test instances differ, but is it appropriate for cross-company software defect prediction? Objective: In this paper, we consider the cross-company defect prediction scenario where source and target data are drawn from different companies. In order to harness cross company data, we try to exploit the transfer learning method to build faster and highly effective prediction model.
   Method: Unlike the prior works selecting training data which are similar from the test data, we proposed a novel algorithm called Transfer Naive Bayes (TNB), by using the information of all the proper features in training data. Our solution estimates the distribution of the test data, and transfers cross-company data information into the weights of the training data. On these weighted data, the defect prediction model is built.
   Results: This article presents a theoretical analysis for the comparative methods, and shows the experiment results on the data sets from different organizations. It indicates that TNB is more accurate in terms of AUC (The area under the receiver operating characteristic curve), within less runtime than the state of the art methods.
   Conclusion: It is concluded that when there are too few local training data to train good classifiers, the useful knowledge from different-distribution training data on feature level may help. We are optimistic that our transfer learning method can guide optimal resource allocation strategies, which may reduce software testing cost and increase effectiveness of software testing process. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Ma, Ying; Luo, Guangchun; Zeng, Xue; Chen, Aiguo] Univ Elect Sci & Technol China, Sch Comp Sci & Engn, Chengdu 610054, Peoples R China.
   [Zeng, Xue] Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90095 USA.
C3 University of Electronic Science & Technology of China; University of
   California System; University of California Los Angeles
RP Ma, Y (corresponding author), Univ Elect Sci & Technol China, Sch Comp Sci & Engn, Chengdu 610054, Peoples R China.
EM may@uestc.edu.cn; gcluo@uestc.edu.cn; snow.zeng@gmail.com;
   agchen@uestc.edu.cn
RI Ma, Ying/JXO-3723-2024; Ma, Ying/AAA-5182-2019; Chen, Aiguo/O-1175-2013
OI Ma, Ying/0000-0002-3819-8679; Chen, Aiguo/0000-0002-3712-2349
FU National High Technology Research and Development Program of China
   [2007AA01Z443]; Research Fund for the Doctoral Program of Higher
   Education [20070614008]; Fundamental Research Funds for the Central
   Universities [ZYGX2009J066]
FX This research was partially supported by National High Technology
   Research and Development Program of China (No. 2007AA01Z443), Research
   Fund for the Doctoral Program of Higher Education (No. 20070614008), and
   the Fundamental Research Funds for the Central Universities (No.
   ZYGX2009J066). We thank the anonymous reviewers for their great helpful
   comments.
CR [Anonymous], 2007, The promise repository of empirical software engineering data
   [Anonymous], OBJECT ORIENTED HIGH
   [Anonymous], P C UNC ART INT
   [Anonymous], 0808 HKUSTCS DEP COM
   [Anonymous], PATTERN RECOGNITION
   [Anonymous], P 8 INT C WEB INF SY
   [Anonymous], 1993, Proceedings of the 13th International Joint Conference on Artificial Intelligence
   [Anonymous], 9 IEEE INT C DAT MIN
   [Anonymous], 124 ART INT CTR SRI
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   [Anonymous], P IEEE INT C DAT MIN
   [Anonymous], ADV NEURAL INFORM PR
   Bickel S., 2007, P 24 INT C MACH LEAR, P81, DOI DOI 10.1145/1273496.1273507
   Blitzer J., 2006, PROC C EMPIRICAL MET, P120, DOI DOI 10.3115/1610075.1610094
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Indulska M., 2002, GIS 02, P125
   Kamishima T, 2009, IEEE DATA MINING, P219, DOI 10.1109/ICDM.2009.9
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Ling X., 2008, Proceedings of the 17th international conference on World Wide Web, P969, DOI 10.1145/1367497.1367628
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Newton I., 1687, Philosophi Naturalis Principia Mathematica, V1
   Peng LZ, 2009, INFORM SCIENCES, V179, P809, DOI 10.1016/j.ins.2008.11.007
   Sugiyama Masashi, 2008, Advances in Neural Information Processing Systems, P1433
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vaishnavi VK, 2007, INFORM SCIENCES, V177, P587, DOI 10.1016/j.ins.2006.06.002
   van Rijsbergen C.J., 1979, INFORM RETIREVAL
   Wang C, 2005, LECT NOTES COMPUT SC, V3612, P845
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Witten I. H., 2005, DATA MINING PRACTICA
   Wu P., 2004, P 21 INT C MACH LEAR, P110, DOI 10.1145/1015330.1015436
   Yu Yong, 2007, P NAT C ART INT, V22, P540
NR 38
TC 318
Z9 360
U1 0
U2 64
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2012
VL 54
IS 3
BP 248
EP 256
DI 10.1016/j.infsof.2011.09.007
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 898KM
UT WOS:000300741300002
DA 2024-07-18
ER

PT J
AU La, HJ
   Kim, SD
AF La, Hyun Jung
   Kim, Soo Dong
TI Static and dynamic adaptations for service-based systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service adaptation; Mismatch problem; Fault; Static adaptation; Dynamic
   adaptation
ID DESIGN
AB Context: In service-oriented computing (SOC), service providers publish reusable services, and service consumers subscribe them. However, there exist potential problems in reusing services. Mismatch is a problem that occurs when a candidate service does not fully match to the feature expected. Fault is a problem that occurs when an invocation of services results in some abnormality at runtime. Without remedying mismatch problems, services would not be reusable. Without remedying fault problems, service invocations at runtime would result in failures. Static and dynamic adaptations are practical approaches to remedying the problems.
   Objective: Our objective is to define a comprehensive framework which includes a design of service adaptation framework (SAF), and design of static and dynamic adapters.
   Method: We design the SAF which governs dynamic adaptations, and define a service life-cycle with adaptation-related activities. Based on causal-effect relationships among mismatch, fault, cause, and adapter, we derive mismatches and faults, from which their relevant causes are identified. For the causes, we define six static adapters and five dynamic adapters. We specify instructions for designing static adapters, and provide step-wise algorithms for designing dynamic adapters based on enterprise service bus (ESB). And, we show a proof-of-concept (POC) of implementation to show applicability of the methods.
   Results: The paper presents service life-cycle with adaptation-related activities, SAF design, and design of static and dynamic adapters.
   Conclusion: Mismatch and fault problems in utilizing services present threats to high reusability of services. Static adaptations can remedy mismatch problems, and dynamic adaptations can remedy fault problems. In this paper, we presented technical insights of service adaption, SAF design, and definitions of static and dynamic adapters. By utilizing the proposed SAF and service adapters, reusability of services can be greatly enhanced. (C) 2011 Elsevier B.V. All rights reserved.
C1 [La, Hyun Jung; Kim, Soo Dong] Soongsil Univ, Dept Comp Sci, Seoul 156743, South Korea.
C3 Soongsil University
RP La, HJ (corresponding author), Soongsil Univ, Dept Comp Sci, 511 Sangdo Dong, Seoul 156743, South Korea.
EM hjla80@gmail.com; sdkim777@gmail.com
FU National IT Industry Promotion Agency (NIPA)
FX This research was supported by the National IT Industry Promotion Agency
   (NIPA) under the program of Software Engineering Technologies
   Development.
CR Alves A., 2007, Web Services Business Process Execution Language Version 2.0
   [Anonymous], 2009, SERV OR ARCH MOD LAN
   [Anonymous], 1998, PROBABILISTIC REASON
   [Anonymous], BUS PROC MOD NOT SPE
   [Anonymous], 2004, OWL S SEMANTIC MARKU
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   Benatallah B, 2005, LECT NOTES COMPUT SC, V3520, P415
   Booch G., 2005, The Unified Modeling Language User Guide
   BOOTH D, 2007, WEB SERVICE DESCRIPT
   Brüning S, 2007, HASE 2007: 10TH IEEE HIGH ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P367, DOI 10.1109/HASE.2007.46
   Chafle G, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P549
   CHANG S, 2010, SOA EERP BU IN PRESS
   CHEUN DW, 2010, P 4 INT C UB INF MAN, P493
   Cremene M, 2006, P 3 INT WORKSH COORD, P25
   Dong X., 2004, Proceedings of the 30th International Conference on Very Large Data Bases (VLDB'04), V30, P372, DOI DOI 10.1016/B978-012088469-8.50035-8
   Elgedawy I, 2008, ACM T WEB, V2, DOI 10.1145/1346237.1346240
   Erl T, 2005, SERVICE ORIENTED ARC
   ESTEFAN JA, 2009, REFERENCE ARCHITECTU
   Fangfang Liu, 2010, 2010 IEEE International Conference on Web Services (ICWS), P155, DOI 10.1109/ICWS.2010.67
   FU Y, 2007, P 2007 INT C CONV IN, P253
   FUNGINI MG, 2006, P 1 INT WORKSH SEM M, P67
   Gamma Erich., 1994, DESIGN PATTERNS
   Hu JQ, 2008, PROCEEDINGS OF THE INTERNATIONAL SYMPOSIUM ON ELECTRONIC COMMERCE AND SECURITY, P536, DOI 10.1109/ISECS.2008.213
   Hwang San-Yih, 2008, IEEE T SERV COMPUT, V1, P104, DOI DOI 10.1109/TSC.2008.2
   Jenkins KA, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON INTEGRATED CIRCUIT DESIGN AND TECHNOLOGY, PROCEEDINGS, P5
   Jiang JJ, 2005, THIRD EUROPEAN CONFERENCE ON WEB SERVICES, PROCEEDINGS, P83
   JIEYING C, 2008, P 9 INT C WEB AG INF, P629
   Kalayci S, 2008, LECT NOTES COMPUT SC, V5364, P54, DOI 10.1007/978-3-540-89652-4_8
   Kim SD, 2005, LECT NOTES COMPUT SC, V3480, P57
   Kim SD, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P54, DOI 10.1109/SERVICES-I.2009.57
   Kongdenfha W, 2009, IEEE T SERV COMPUT, V2, P94, DOI 10.1109/TSC.2009.12
   Kuang L, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P279, DOI 10.1109/ICWS.2009.45
   Ludwig H., 2003, WEB SERVICE LEVEL AG
   Matthew MacKenzie C., 2006, Technical Report
   Min HG, 2004, LECT NOTES COMPUT SC, V3054, P40
   Object Management Group, 2006, CORBA Component Model Specification
   *OP GROUP, 2010, SOA ONT IN PRESS
   *OP GROUP, 2009, 10 OP GROUP
   *OP SOA COLL, 2007, SCA SERV COMP ARCH A
   Panahi M, 2008, LECT NOTES COMPUT SC, V5364, P180, DOI 10.1007/978-3-540-89652-4_16
   Peischl B, 2003, IEEE INTELL SYST, V18, P32, DOI 10.1109/MIS.2003.1200725
   Pernici B, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P119, DOI 10.1109/ECOWS.2007.13
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Sam Y., 2006, Proceedings of the 6th international conference on Web engineering, P25
   Schmidt D.A., 1994, STRUCTURE TYPED PROG
   Scott ML, 2009, PROGRAMMING LANGUAGE PRAGMATICS, 3RD EDITION, P1
   Sheng QZ, 2009, IEEE T SERV COMPUT, V2, P34, DOI 10.1109/TSC.2009.1
   Stroulia E, 2005, INT J COOP INF SYST, V14, P407, DOI 10.1142/S0218843005001213
   Tang L, 2010, INT CONF COMP SCI, P633, DOI 10.1109/ICCSIT.2010.5565069
   Wang K, 2008, PROCEEDINGS OF THE SIXTH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P145, DOI 10.1109/ECOWS.2008.23
   Wu B, 2008, 2008 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE, VOLS 1-3, PROCEEDINGS, P1276, DOI 10.1109/APSCC.2008.26
   YEH PZ, 2003, P 2 INT C KNOWL CAPT, P180
NR 53
TC 8
Z9 9
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2011
VL 53
IS 12
BP 1275
EP 1296
DI 10.1016/j.infsof.2011.06.001
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 847QF
UT WOS:000296986900001
DA 2024-07-18
ER

PT J
AU Garcia, E
   Giret, A
   Botti, V
AF Garcia, Emilia
   Giret, Adriana
   Botti, Vicente
TI Evaluating software engineering techniques for developing complex
   systems with multiagent approaches
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Multiagent systems development tool; Methodology; Software engineering
AB Context: Multiagent systems (MAS) allow complex systems to be developed in which autonomous and heterogeneous entities interact. Currently, there are a great number of methods and frameworks for developing MAS. The selection of one or another development environment is a crucial part of the development process. Therefore, the evaluation and comparison of MAS software engineering techniques is necessary in order to make the selection of the development environment easier.
   Objective: The main goal of this paper is to define an evaluation framework that will help in facilitating, standardizing, and simplifying the evaluation, analysis, and comparison of MAS development environments. Moreover, the final objective of the proposed tool is to provide a repository of the most commonly used MAS software engineering methods and tools.
   Method: The proposed framework analyzes methods and tools through a set of criteria that are related to both system engineering dimensions and MAS features. Also, the support for developing organizational and service-oriented MAS is studied. This framework is implemented as an online application to improve its accessibility.
   Results: In this paper, we present Masev, which is an evaluation framework for MAS software engineering. It allows MAS methods, techniques and environments to be analyzed and compared. A case study of the analysis of four methodologies is presented.
   Conclusion: It is concluded that Masev simplifies the evaluation and comparison task and summarizes the most important issues for developing MAS, organizational MAS, and service-oriented MAS. Therefore, it could help developers to select the most appropriate MAS method and tools for developing a specific system, and it could be used for MAS software engineering developers to detect and deficiencies in their methods and tools. Also, developers of new tools can understand this application as a way to publish their tools and demonstrate what their contributions are to the state of the art. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Garcia, Emilia; Giret, Adriana; Botti, Vicente] Univ Politecn Valencia, E-46071 Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Garcia, E (corresponding author), Univ Politecn Valencia, Camino Vera S-N, E-46071 Valencia, Spain.
EM mgarcia@dsic.upv.es; agiret@dsic.upv.es; vbotti@dsic.upv.es
RI Garcia, Emilia/P-7559-2019; Giret, Adriana/G-8660-2015; Botti,
   Vicente/M-5853-2019
OI Garcia, Emilia/0000-0002-0610-4631; Giret, Adriana/0000-0002-2311-0785;
   Botti, Vicente/0000-0002-6507-2756
FU CONSOLIDER-INGENIO [CSD2007-00022]; FPU [AP2007-01276]; 
   [TIN2008-04446];  [TIN2009-13839-C03-01];  [PROMETEO 2008/051]
FX This work is partially supported by the TIN2008-04446,
   TIN2009-13839-C03-01, PROMETEO 2008/051 Projects, CONSOLIDER-INGENIO
   2010 under Grant CSD2007-00022 and FPU Grant AP2007-01276 awarded to
   Emilia Garcia.
CR [Anonymous], THESIS RMIT U AUSTR
   Argente E., 2008, 9 INT WORKSH AG OR S, P1
   Argente E, 2006, ELECTRON NOTES THEOR, V150, P55, DOI 10.1016/j.entcs.2006.03.005
   BAJO J, 2007, INTEGRATING NEW BEHA, V1, P215
   BERNON C, 2004, REVISED SELECTED PAP, V3382, P62
   Beydoun G, 2009, IEEE T SOFTWARE ENG, V35, P841, DOI 10.1109/TSE.2009.34
   Bitting E., 2003, P 1 ANN C COMM NETW, P80
   BOARD J, 2005, JADE WEB SERVICES IN
   BONGAERTS, 1998, THESIS KU LEUVEN, pCH3
   Bordini RH, 2007, LECT NOTES ARTIF INT, V4457, P38
   Bordini RH, 2006, AUTON AGENT MULTI-AG, V12, P239, DOI 10.1007/s10458-006-5955-7
   BRAUBACH L, 2008, 6 INT WORKSH AG THEO
   CARRASCOSA C, 2003, EUMAS 2003
   Cernuzzi L., 2002, P OOPSLA 2002 WORKSH, P21
   DeLoach Scott A., 2009, International Journal of Agent-Oriented Software Engineering, V3, P416
   DICKINSON I, 2005, WORKSH SERV OR COMP
   DICKINSON I, 2004, NUIN JENA AGENT FRAM
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   DUBIELEWICZ I, 2007, IFIP INT FEDERATION, V227
   Eiter T, 2002, AI COMMUN, V15, P169
   *FIPA, ARC
   GARCIA E, 2008, INT C PRINC PRACT MU
   Garcia E., 2008, 6 INT WORKSH AG THEO, P59
   Garcia E, 2008, LECT NOTES ARTIF INT, V5180, P86, DOI 10.1007/978-3-540-85834-8_9
   Garcia E, 2008, INT FED INFO PROC, V276, P35
   Garcia E, 2008, ENASE 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P181
   GIRET A, 2008, SPRINGER SERIES ADV, V16, P214
   Giret A, 2009, COMPUT IND, V60, P428, DOI 10.1016/j.compind.2009.02.007
   Henderson-Sellers B, 2005, INFORM SOFTWARE TECH, V47, P49, DOI 10.1016/j.infsof.2004.06.001
   *ISO, 912612001 ISO IEC
   *ISO, 1459811999 ISO FDIS
   Julian V, 2004, INTEGR COMPUT-AID E, V11, P135
   LIN C, 2007, HICSS 2007, P60
   Lopez F. L., 2006, Computational & Mathematical Organization Theory, V12, P227, DOI 10.1007/s10588-006-9545-7
   PAVAN J, 2005, INGENIAS METHODOLOGY, P236
   Punter T, 2004, SOFTWARE QUAL J, V12, P137, DOI 10.1023/B:SQJO.0000024060.32026.a2
   Sturm A, 2003, LECT NOTES COMPUT SC, V3030, P94
   SUDEIKAT J, 2005, WORKSH AG OR SOFTW E, P126
   Tran Q.N., 2005, AGENT ORIENTEDMETHOD, P341
   Wooldridge M., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P952
   WOOLDRIDGE M, 2001, LNCS, V1957, P55
   Zhu H, 2005, WORDS 2005: 10th IEEE International Workshop on Object-Oriented Real-Time Dependable, Proceedings, P152, DOI 10.1109/WORDS.2005.14
   Zinnikus I, 2006, LECT NOTES COMPUT SC, V4196, P110
NR 43
TC 7
Z9 7
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 494
EP 506
DI 10.1016/j.infsof.2010.12.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 742DI
UT WOS:000288919900006
DA 2024-07-18
ER

PT J
AU Lemos, OAL
   Bajracharya, S
   Ossher, J
   Masiero, PC
   Lopes, C
AF Lazzarini Lemos, Otavio Augusto
   Bajracharya, Sushil
   Ossher, Joel
   Masiero, Paulo Cesar
   Lopes, Cristina
TI A test-driven approach to code search and its application to the reuse
   of auxiliary functionality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 24th Annual ACM Symposium on Applied Computing
CY MAR 08-12, 2009
CL Honolulu, HI
SP ACM SIGSAC
DE Code search; Test-Driven Development; Software reuse; Software
   development; Development tools
ID SOFTWARE
AB Context: Software developers spend considerable effort implementing auxiliary functionality used by the main features of a system (e.g., compressing/decompressing files, encryption/decription of data, scaling/rotating images). With the increasing amount of open source code available on the Internet, time and effort can be saved by reusing these utilities through informal practices of code search and reuse. However, when this type of reuse is performed in an ad hoc manner, it can be tedious and error-prone: code results have to be manually inspected and integrated into the workspace.
   Objective: In this paper we introduce and evaluate the use of test cases as an interface for automating code search and reuse. We call our approach Test-Driven Code Search (TDCS). Test cases serve two purposes: (1) they define the behavior of the desired functionality to be searched; and (2) they test the matching results for suitability in the local context. We also describe CodeGenie, an Eclipse plugin we have developed that performs TDCS using a code search engine called Sourcerer.
   Method: Our evaluation consists of two studies: an applicability study with 34 different features that were searched using CodeGenie; and a performance study comparing CodeGenie, Google Code Search, and a manual approach.
   Results: Both studies present evidence of the applicability and good performance of TDCS in the reuse of auxiliary functionality.
   Conclusion: This paper presents an approach to source code search and its application to the reuse of auxiliary functionality. Our exploratory evaluation shows promising results, which motivates the use and further investigation of TDCS. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Lazzarini Lemos, Otavio Augusto] Univ Fed Sao Paulo, Dept Sci & Technol, Sao Jose Dos Campos, SP, Brazil.
   [Masiero, Paulo Cesar] Univ Sao Paulo, ICMC, Comp Syst Dept, BR-13560970 Sao Carlos, SP, Brazil.
   [Bajracharya, Sushil; Ossher, Joel; Lopes, Cristina] Univ Calif Irvine, Donald Bren Sch Informat & Comp Sci, Irvine, CA USA.
C3 Universidade Federal de Sao Paulo (UNIFESP); Universidade de Sao Paulo;
   University of California System; University of California Irvine
RP Lemos, OAL (corresponding author), Univ Fed Sao Paulo, Dept Sci & Technol, Sao Jose Dos Campos, SP, Brazil.
EM otavio.lemos@unifesp.br; sbajrach@ics.uci.edu; jossher@ics.uci.edu;
   masiero@icmc.usp.br; lopes@ics.uci.edu
RI Isec, Inct/I-2409-2013; Masiero, Paulo Cesar/E-5882-2011; Lemos,
   Otavio/M-9278-2013
OI Lemos, Otavio/0000-0001-6481-5311
CR [Anonymous], 1990, IEEE STANDARD GLOSSA
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], CONTROLLED EXPT PROF
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], ICSE 81
   BAJRACHARYA S, 2006, OOPSLA 06, P681, DOI DOI 10.1145/1176617.1176671
   BAJRACHARYA SK, 2010, THESIS U CALIFORNIA
   Bajracharya S, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P1, DOI 10.1109/SUITE.2009.5070010
   Beck Kent L., 2003, Test Driven Development By Example
   Cottrell R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P933
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   FREEMAN P, 1983, P ITT WORKSH REUS PR, P129
   GALL H, 1995, SIGSOFT SOFTW ENG S1, V20, P225
   Hoffmann R, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P13
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   HOLMES R, 2006, ICSE 06, P961
   Holmes R, 2007, PROC INT CONF SOFTW, P447
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hummel O, 2008, IEEE SOFTWARE, V25, P45, DOI 10.1109/MS.2008.110
   Hummel O, 2007, LECT NOTES COMPUT SC, V4536, P28
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Lemos O.A. L., 2007, COMPANION 22 ACM SIG, P917, DOI [10.1145/1297846.1297944, DOI 10.1145/1297846.1297944]
   LEMOS OAL, 2007, ASE 07, P525
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   MANDELIN D, 2005, PLDI 05, P48, DOI [10.1145/1065010.1065018, DOI 10.1145/1065010.1065018]
   MCLLROY MD, 1969, P NATO SOFTW ENG C G, P138
   MILL H, 1995, IEEE T SOFTWARE ENG, V21, P528
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Ossher H, 2001, PROC INT CONF SOFTW, P821, DOI 10.1109/ICSE.2001.919190
   Ossher Joel, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P130, DOI 10.1109/MSR.2010.5463346
   Ossher J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P183, DOI 10.1109/MSR.2009.5069501
   Podgurski A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P286, DOI 10.1145/152388.152392
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2006.32
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   ROLLINS EJ, 1991, LOGIC PROGRAMM, P173
   Sahavechaphan N, 2006, ACM SIGPLAN NOTICES, V41, P413, DOI 10.1145/1167515.1167508
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   SINDHGATTA R, 2006, ICSE, P905
   SINGER J, 1981, CASCON 97, P21
   Tip F, 1999, ACM SIGPLAN NOTICES, V34, P292, DOI 10.1145/320385.320414
   Tip F, 1994, SURVEY PROGRAM SLICI
   Zaremski A. M., 1993, SIGSOFT Software Engineering Notes, V18, P182, DOI 10.1145/167049.167077
   2005, SCRAPH CHALL WORKSH
NR 45
TC 28
Z9 35
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2011
VL 53
IS 4
SI SI
BP 294
EP 306
DI 10.1016/j.infsof.2010.11.009
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 739QK
UT WOS:000288732700002
OA hybrid
DA 2024-07-18
ER

PT J
AU Park, WJ
   Bae, DH
AF Park, Wei-Jin
   Bae, Doo-Hwan
TI A two-stage framework for UML specification matching
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Specification matching; UML; Structure mapping; Graph similarity scoring
ID SOFTWARE; SIMILARITY; RETRIEVAL; REUSE; DESIGN; CLASSIFICATION; ANALOGY
AB Context: Specification matching techniques are crucial for effective retrieval processes. Despite the prevalence for object-oriented methodologies, little attention has been given to Unified Modeling Language (UML) for matching.
   Objective: This paper presents a two-stage framework for matching two UML specifications and quantifying the results based on the systematic integration of their structural and behavioral similarities in order to identify the candidate component set for reuse.
   Method: The first stage in the framework is an evaluation of the similarities between UML class diagrams using the Structure-Mapping Engine (SME), a simulation of the analogical reasoning approach known as the structure-mapping theory. The second stage, performed on the components identified in the first stage, is based on a graph-similarity scoring algorithm in which UML class diagrams and sequence diagrams are transformed into an SME representation and a Message-Object-Order Graph (MOOG). The effectiveness of the proposed framework was evaluated using a case study.
   Results: The experimental results showed a reduction in potential mismatches and an overall high precision and recall.
   Conclusion: It is concluded that the two-stage framework is capable of performing more precise matching compared to those of other single-stage matching frameworks. Moreover, the two-stage framework could be utilized within a reuse process, bypassing the need for extra information for retrieval of the components described by UML. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Park, Wei-Jin; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Park, WJ (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon, South Korea.
EM drjinpark@gmail.com; bae@salmosa.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
FU Ministry of Public Safety & Security (MPSS), Republic of Korea
   [C1080-1101-0001] Funding Source: Korea Institute of Science &
   Technology Information (KISTI), National Science & Technology
   Information Service (NTIS)
CR BJORNESTAD S, 2003, P 5 INT C CAS BAS RE, P54
   Blondel VD, 2004, SIAM REV, V46, P647, DOI 10.1137/S0036144502415960
   Cheesman J., 2001, UML Components A Simple Process for Specifying Component Based Software
   D'Souza DesmondF., 1999, OBJECTS COMPONENTS F
   FALKENHAINER B, 1989, ARTIF INTELL, V41, P1, DOI 10.1016/0004-3702(89)90077-5
   FORBUS KD, 1995, COGNITIVE SCI, V19, P141, DOI 10.1207/s15516709cog1902_1
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gamma Erich., 1994, DESIGN PATTERNS
   Geisterfer C. J. M., 2006, Fifth International Conference on Commercial-off-the-Shelf (COTS)-Based Software Systems
   GENTNER D, 1983, COGNITIVE SCI, V7, P155, DOI 10.1207/s15516709cog0702_3
   Ginsberg M.L., 1984, National Conference on Artificial Intelligence (AAAI), P126
   GIRSCHICK M, 2006, TUDCS20065
   Gomes P, 2005, ENG INTELL SYST ELEC, V13, P269
   Gomes P, 2007, LECT NOTES COMPUT SC, V4626, P449
   Gomes P, 2006, KNOWL-BASED SYST, V19, P480, DOI 10.1016/j.knosys.2006.04.006
   Heckel R, 2007, J LOGIC ALGEBR PROGR, V70, P15, DOI 10.1016/j.jlap.2006.05.003
   *IEEE, 1999, 1517 IEEE
   JACOBSON J., 1999, UNIFIED SOFTWARE DEV
   Jilani LL, 2001, IEEE T SOFTWARE ENG, V27, P673, DOI 10.1109/32.940565
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Kollmann R, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/WCRE.2002.1173061
   KRUEGER W, 1992, ACM COMPUT SURV, V24, P131
   LIU Y, 2002, P S E AS SOFT ENG C
   Lung CH, 2007, REQUIR ENG, V12, P1, DOI 10.1007/s00766-006-0035-8
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   MAIDEN N, 1991, SOFTWARE ENG J, V6, P3, DOI 10.1049/sej.1991.0001
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P281, DOI 10.1049/sej.1996.0038
   Mili A, 1998, ANN SOFTW ENG, V5, P349, DOI 10.1023/A:1018964121953
   Morel B, 2004, IEEE T SOFTWARE ENG, V30, P587, DOI 10.1109/TSE.2004.53
   PRIETODIAZ R, 1991, COMMUN ACM, V34, P88, DOI 10.1145/103167.103176
   PRIETODIAZ R, 1987, IEEE SOFTWARE, V4, P6, DOI 10.1109/MS.1987.229789
   Robinson WN, 2004, IEEE SOFTWARE, V21, P60, DOI 10.1109/MS.2004.1331304
   ROBINSON WN, 2002, P INT C REQ ENG, P173
   Sutton A, 2007, INFORM SOFTWARE TECH, V49, P212, DOI 10.1016/j.infsof.2006.10.011
   TRACZ W, 1995, COLLECTED CONFESSION
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Vitharana P, 2003, IEEE T SOFTWARE ENG, V29, P649, DOI 10.1109/TSE.2003.1214328
   Yao HN, 2008, J AM SOC INF SCI TEC, V59, P613, DOI 10.1002/asi.20775
   Zager LA, 2008, APPL MATH LETT, V21, P86, DOI 10.1016/j.aml.2007.01.006
   ZARAMSKI AM, 1995, ACM T SOFTW ENG METH, V4, P146
   Zaremski A., 1995, ACM Transactions on Software Engineering, V6, P333
NR 42
TC 11
Z9 11
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2011
VL 53
IS 3
BP 230
EP 244
DI 10.1016/j.infsof.2010.11.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 734PT
UT WOS:000288348500005
DA 2024-07-18
ER

PT J
AU Chou, YC
   Ko, D
   Cheng, HH
AF Chou, Yu-Cheng
   Ko, David
   Cheng, Harry H.
TI An embeddable mobile agent platform supporting runtime code mobility,
   interaction and coordination of mobile agents and host systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mobile agent library; Mobile agent API; Embeddable IEEE FIAP standard
   compliant mobile agent platform; C/C plus plus mobile agents; Ch, C/C
   plus plus interperter
ID ARCHITECTURE; SOFTWARE; MANAGEMENT; INFRASTRUCTURE; PERFORMANCE;
   FRAMEWORK; COMPLEX
AB Agent technology is emerging as an important concept for the development of distributed complex systems. A number of mobile agent systems have been developed in the last decade. However, most of them were developed to support only Java mobile agents. In order to provide distributed applications with code mobility, this article presents a library, the Mobile-C library, that allows a mobile agent platform, Mobile-C, to be embeddable in an application to support mobile C/C++ codes carried by mobile agents. Mobile-C uses a C/C++ interpreter as its Agent Execution Engine (AEE). Through the Mobile-C library. Mobile-C can be embedded into an application to support mobile C/C++ codes carried by mobile agents. Using mobile C/C++ codes, it is easy to interface a variety of low-level hardware devices and legacy systems. Through the Mobile-C library, Mobile-C can run on heterogeneous platforms with various operating systems. The Mobile-C library has a small footprint to meet the stringent memory capacity for applications in mechatronic and embedded systems. The Mobile-C library contains different categories of Application Programming Interfaces (APIs) in both binary and agent spaces to facilitate the design of mobile agent based applications. In addition, a rich set of existing APIs for the C/C++ interpreter employed as the AEE allows an application to have complete information and control over the mobile C/C++ codes residing in Mobile-C. With the synchronization mechanism provided by the Mobile-C library for both binary and agent spaces, simultaneous processes across both spaces can be coordinated to get correct runtime order and avoid unexpected race condition. The study of performance comparisons indicates that Mobile-C is about two times faster than JADE in agent migration. The application of the Mobile-C library is illustrated by dynamic runtime control of a mobile robot's behavior using mobile agents. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Chou, Yu-Cheng; Ko, David; Cheng, Harry H.] Univ Calif Davis, Dept Mech & Aeronaut Engn, Integrat Engn Lab, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Cheng, HH (corresponding author), Univ Calif Davis, Dept Mech & Aeronaut Engn, Integrat Engn Lab, Davis, CA 95616 USA.
EM hhcheng@ucdavis.edu
OI Chou, Yu-Cheng/0000-0002-9621-3638
CR Adler JL, 2002, TRANSPORT RES C-EMER, V10, P433, DOI 10.1016/S0968-090X(02)00030-X
   [Anonymous], MOBILE AGENT BASED C
   [Anonymous], JADE JAVA AGENT DEV
   [Anonymous], XML C PARSER TOOLKIT
   Barret D. J., 2005, SSH SECURE SHELL DEF, V2nd
   Baumann J, 2002, SOFTWARE PRACT EXPER, V32, P575, DOI 10.1002/spe.450
   Bellifemine F, 2008, INFORM SOFTWARE TECH, V50, P10, DOI 10.1016/j.infsof.2007.10.008
   Bölöni L, 2000, CONCURRENCY-PRACT EX, V12, P845, DOI 10.1002/1096-9128(20000810)12:9<845::AID-CPE494>3.0.CO;2-J
   Braitenberg V, 1984, Vehicles. Experiments in Synthetic Psychology
   Brennan RW, 2002, IEEE T ROBOTIC AUTOM, V18, P444, DOI 10.1109/TRA.2002.802211
   Brodlie Ken., 2004, P UK E SCI ALL HANDS, P54
   Casanova H, 1998, PARALLEL COMPUT, V24, P1777, DOI 10.1016/S0167-8191(98)00077-5
   CHEN B, 2005, P ASME IEEE INT C ME
   Chen B, 2008, J SYST SOFTWARE, V81, P1364, DOI 10.1016/j.jss.2007.10.026
   Chen WSE, 2002, INFORM SCIENCES, V141, P3, DOI 10.1016/S0020-0255(01)00189-X
   Cheng H., 2006, C/C++ Users Journal, V24, P6
   Cheng H. H., 1993, Scientific Programming, V2, P49
   CHENG HH, CH EMBEDDABLE C C IN
   Chmiel K., 2005, Scientific Programming, V13, P159
   Choi SPM, 2001, COMPUT NETW, V37, P195, DOI 10.1016/S1389-1286(01)00215-8
   Chou LD, 2003, LECT NOTES ARTIF INT, V2744, P280
   Chou YC, 2009, CONCURR COMP-PRACT E, V21, P2377, DOI 10.1002/cpe.1458
   Eo SY, 2000, COMPUT CHEM ENG, V24, P729, DOI 10.1016/S0098-1354(00)00329-X
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   Gray RS, 2002, SOFTWARE PRACT EXPER, V32, P543, DOI 10.1002/spe.449
   Hernández JZ, 2002, TRANSPORT RES C-EMER, V10, P473, DOI 10.1016/S0968-090X(02)00032-3
   HUANG J, 1995, APPL ARTIF INTELL, V9, P401, DOI 10.1080/08839519508945482
   Jennings NR, 2003, IEEE CONTR SYST MAG, V23, P61, DOI 10.1109/MCS.2003.1200249
   Jennings NR, 2001, COMMUN ACM, V44, P35, DOI 10.1145/367211.367250
   Johansen D, 2002, SOFTWARE PRACT EXPER, V32, P605, DOI 10.1002/spe.451
   Kohl JA, 2006, INT J HIGH PERFORM C, V20, P255, DOI 10.1177/1094342006064502
   Lange D. B., 1998, PROGRAMMING DEPLOYIN
   Logi F, 2002, TRANSPORT RES C-EMER, V10, P507, DOI 10.1016/S0968-090X(02)00033-5
   Martin DL, 1999, APPL ARTIF INTELL, V13, P91, DOI 10.1080/088395199117504
   *MOB C, MULT PLATF MOB C C C
   *MOB C, MOB C PERF AN
   Modi A, 2005, J AIRCRAFT, V42, P963, DOI 10.2514/1.7727
   Noda I, 2003, AUTON AGENT MULTI-AG, V7, P101, DOI 10.1023/A:1024128904944
   *OBJ MAN GROUP, MOB AG SYST INT FAC
   Parunak HV, 2001, INTEGR COMPUT-AID E, V8, P45
   Peine H, 2002, SOFTWARE PRACT EXPER, V32, P515, DOI 10.1002/spe.448
   Pickles SM, 2005, PHILOS T R SOC A, V363, P1843, DOI 10.1098/rsta.2005.1611
   Sandholm T, 2002, COMPUT INTELL-US, V18, P656, DOI 10.1111/1467-8640.t01-1-00209
   Shen W., 1998, PAAM 98. Proceedings of the Third International Conference on the Practical Application of Intelligent Agents and Multi-Agent Technology, P533
   *SOFTINTEGRATION I, EMB CH
   Stathis K, 2002, INTERACT COMPUT, V14, P663, DOI 10.1016/S0953-5438(02)00014-0
   Sudmann N.P., 2000, P IEEE ICDCS00 WORKS, P73
   Tu HC, 2000, DECIS SUPPORT SYST, V28, P255, DOI 10.1016/S0167-9236(99)00089-5
   Wada H, 2002, INTEGR COMPUT-AID E, V9, P251
   Wong D, 1997, LECT NOTES COMPUT SC, V1219, P86
   WOOLDRIDGE M, 2001, LECT NOTES ARTIF INT, V1957, P1
   Yokoo M, 2001, NEW GENERAT COMPUT, V19, P369, DOI 10.1007/BF03037574
   Zambonelli F, 2003, LECT NOTES ARTIF INT, V2577, P13
   MACE MOBILE AGENT CO
NR 54
TC 11
Z9 13
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2010
VL 52
IS 2
BP 185
EP 196
DI 10.1016/j.infsof.2009.09.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 540WW
UT WOS:000273372400005
DA 2024-07-18
ER

PT J
AU Lisboa, LB
   Garcia, VC
   Lucredio, D
   de Almeida, ES
   Meira, SRD
   Fortes, RPD
AF Lisboa, Liana Barachisio
   Garcia, Vinicius Cardoso
   Lucredio, Daniel
   de Almeida, Eduardo Santana
   de Lemos Meira, Silvio Romero
   de Mattos Fortes, Renata Pontin
TI A systematic review of domain analysis tools
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Domain analysis; Tools
AB The domain analysis process is used to identify and document common and variable characteristics of systems in a specific domain. in order to achieve an effective result, it is necessary to collect, organize and analyze several sources of information about different applications in this domain. Consequently, this process involves distinct phases and activities and also needs to identify which artifacts. arising from these activities, have to be traceable and consistent. In this context, performing a domain analysis process without tool support increases the risks of failure, but the used tool should support the complete process and not just a part of it. This article presents a systematic review of domain analysis tools that aims at finding out how the available tools offer support to the process. As a result, the review identified that these tools are usually focused on supporting only one process and there are still gaps in the complete process support. Furthermore, the results can provide insights for new research in the domain engineering area for investigating and defining new tools, and the study also aids in the identification of companies' needs for a domain analysis tool. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Lisboa, Liana Barachisio; Garcia, Vinicius Cardoso; Lucredio, Daniel; de Almeida, Eduardo Santana; de Lemos Meira, Silvio Romero] Reuse Software Engn, Recife, PE, Brazil.
   [Garcia, Vinicius Cardoso; de Lemos Meira, Silvio Romero] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
   [Lucredio, Daniel; de Mattos Fortes, Renata Pontin] Univ Sao Paulo, ICMC, Inst Math & Comp Sci, Sao Carlos, SP, Brazil.
   [Garcia, Vinicius Cardoso] Univ Fed Pernambuco, Caruaru Fac Sci & Technol FACITEC, Caruaru, PE, Brazil.
   [de Almeida, Eduardo Santana] Univ Fed Bahia, Salvador, BA, Brazil.
C3 Universidade Federal de Pernambuco; Universidade de Sao Paulo;
   Universidade Federal de Pernambuco; Universidade Federal da Bahia
RP Lisboa, LB (corresponding author), Reuse Software Engn, Recife, PE, Brazil.
EM lblisboa@gmail.com
RI Meira, Silvio/AAT-9381-2020; Garcia, Vinicius Cardoso/B-1327-2017;
   Lucredio, Daniel/I-1793-2012; de Almeida, Eduardo/JJC-2493-2023; Ines,
   INCT/J-9550-2013; FORTES, RENATA PONTIN DE MATTOS/A-3211-2010; Lucredio,
   Daniel/AAN-3070-2021
OI Garcia, Vinicius Cardoso/0000-0001-6904-7470; Lucredio,
   Daniel/0000-0002-1360-4036; FORTES, RENATA PONTIN DE
   MATTOS/0000-0001-9994-8923; Lucredio, Daniel/0000-0002-1360-4036
FU National Institute of Science and Technology [INES 15]; CNPq; FACEPE
   [573964/2008-4, APQ-1037-1.03/08]; Brazilian Agency [475743/2007-5]
FX We thank Barbara Kitchenham's help for her comments about the report.
   This work was partially supported by the National Institute of Science
   and Technology for Software Engineering (INES 15), funded by CNPq and
   FACEPE, Grants 573964/2008-4 and APQ-1037-1.03/08 and Brazilian Agency
   (CNPq process number 475743/2007-5).
CR ALMEIDA ES, 2007, THESIS FEDERAL U PER
   ALMEIDA ES, 2006, INT C SOFTW REUS ICS, P43
   ALMEIDA ES, 2007, IEEE EUROMICRO C SOF, P93
   [Anonymous], 2005, P WORKSHOP ECLIPSE T
   [Anonymous], 1981, THESIS U CALIFORNIA
   [Anonymous], CMUSEI97TR003
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   ARANGO G, 1994, SOFTWARE REUSABILITY, P17
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   BAYER J, 1999, INT S GEN COMP BAS S, P178
   BEUCHE D, 2003, COMP 18 ANN ACM SIGP, P108
   BIGGERSTAFF TJ, 1992, ADV COMPUT, V34, P1
   *BIGLEVER, 2005, GEARS US GUID
   BRAGA RMM, 1999, IEEE S APPL SPEC SYS, P49
   BRAGA RMM, 2000, THESIS FEDERAL U RIO
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   CAPILLA R, 2007, SOFTW SERV VAR MAN W, P32
   Charters S., 2007, GUIDELINES PERFORMIN
   CZARNECKI K, OBJECT ORIENTED PROG, P200
   Dehlinger J, 2007, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSECOMPANION.2007.29
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   ERIKSSON M, 2005, P 20 IEEE ACM INT C, P300
   ERIKSSON M, 2006, UMINF0631 UM U DEP C
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   Frakes W, 1997, XVII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P73, DOI 10.1109/SCCC.1997.636929
   FRAKES WB, 1994, IEEE SOFTWARE, V11, P15
   FRAKES WB, 1997, WORKSH I SOFTW REUS
   FUGGETTA A, 1993, COMPUTER, V26, P25, DOI 10.1109/2.247645
   Gomaa Hassan., 2004, Workshop on Software Variability Management for Product Derivation, Software Product Line Conference (SPLC), Boston, MA, August 30 - September 2, 2014, P73
   HAMILTON MH, 1991, 001 FULL LIFE CYCLE
   Jaring M., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P15
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   KIM K, 2006, INT C SOFTW ENG ICSR, P783
   Kim M, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P126, DOI 10.1109/APSEC.2003.1254365
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   KRUEGER CW, 2007, OOPSLA 07, P844
   KRUEGER CW, 2005, SOFTWARE MASS CUSTOR
   KRUEGER CW, 2002, 200207081 BIGL
   Krut R., 1993, CMUSEI93TR11
   Lee K, 2000, SOFTWARE PRACT EXPER, V30, P1025, DOI 10.1002/1097-024X(20000725)30:9<1025::AID-SPE323>3.0.CO;2-W
   LISBOA LB, 2009, THESIS FEDERAL U PER
   LUCRTDIO D, 2008, LECT NOTES COMPUTER, P200
   MASSEN TVD, 2003, INT WORKSH PROD FAM, P168
   Mei H, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P250, DOI 10.1109/CMPSAC.2003.1245350
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   PADMANABHAN P, 2002, DECIMAL REQUIREMENTS
   PADMANABHAN P, 2005, AUTOMAT SOFTW ENG, V12, P447
   Park Jihyeon, 2004, INT S FUT SOFTW TECH
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Prieto-Diaz R., 1990, SIGSOFT Software Engineering Notes, V15, P47, DOI 10.1145/382296.382703
   PRIETODFAZ R, 1992, DARE DOMAIN ANAL REU
   *PUR SYST, 2004, VAR MAN PUR
   *RWTH AACH, 2005, REQUILINE US MAN
   Schmid K., 2000, Software Architectures for Product Families. International Workshop IW-SAPF-3. Proceedings (Lecture Notes in Computer Science Vol.1951), P65
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   SPINCZYK O, 2004, 19 ANN ACM SIGPLAN C, P18
   Steger M, 2004, LECT NOTES COMPUT SC, V3154, P34
   Succi G, 2001, PROC INT CONF SOFTW, P829, DOI 10.1109/ICSE.2001.919194
   SUCCI G, 1999, IEEE PAC RIM C VICT, P365
   SUCCI G, 2000, INT C SOFTW ENG ICSE, P786
   SUCCI G, 2000, ACM COMPUT SURV, P12
   SUCCI G, 2001, ELECT COMPUTER ENG, V1, P75
   SUCCI G, 2000, ICSE 2000 WORKSH SOF
   Tracz W., 1995, SIGSOFT Software Engineering Notes, V20, P49, DOI 10.1145/219308.219318
   TRACZ W, 1995, ADAGELOR9413 LOR FED
   TRAVASSOS GH, 2007, BRAZ S SOFTW ENG SBE, P436
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Weiss DavidM., 1998, P 2 INT ESPRIT ARES, P214
   2003, POSTECH ASADAL FORM
NR 72
TC 56
Z9 62
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2010
VL 52
IS 1
BP 1
EP 13
DI 10.1016/j.infsof.2009.05.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 527ND
UT WOS:000272372900001
OA Green Published
DA 2024-07-18
ER

PT J
AU Wynn, MT
   Verbeek, HMW
   van der Aalst, WMP
   ter Hofstede, AHM
   Edmond, D
AF Wynn, M. T.
   Verbeek, H. M. W.
   van der Aalst, W. M. P.
   ter Hofstede, A. H. M.
   Edmond, D.
TI Reduction rules for YAWL workflows with cancellation regions and
   OR-joins
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Verification of process models; Soundness property; Reduction rules;
   Cancellation; OR-join; Reset nets
ID RESET NETS; VERIFYING WORKFLOWS; PETRI NETS
AB As the need for concepts such as cancellation and OR-joins occurs naturally in business scenarios, comprehensive support in a workflow language is desirable. However, there is a clear trade-off between the expressive power of a language (i.e., introducing complex constructs such as cancellation and OR-joins) and ease of verification. When a workflow contains a large number of tasks and involves complex control flow dependencies, verification can take too much time or it may even be impossible. There are a number of different approaches to deal with this complexity. Reducing the size of the workflow, while preserving its essential properties with respect to a particular analysis problem, is one such approach. In this paper, we present a set of reduction rules for workflows with cancellation regions and OR-joins and demonstrate how they can be used to improve the efficiency of verification. Our results are presented in the context of the YAWL workflow language. Crown Copyright (C) 2009 Published by Elsevier B.V. All rights reserved.
C1 [Wynn, M. T.; van der Aalst, W. M. P.; ter Hofstede, A. H. M.; Edmond, D.] Queensland Univ Technol, Business Proc Management Grp, Brisbane, Qld 4001, Australia.
   [Verbeek, H. M. W.; van der Aalst, W. M. P.] Eindhoven Univ Technol, Dept Math & Comp Sci, NL-5600 MB Eindhoven, Netherlands.
C3 Queensland University of Technology (QUT); Eindhoven University of
   Technology
RP Wynn, MT (corresponding author), Queensland Univ Technol, Business Proc Management Grp, GPO Box 2434, Brisbane, Qld 4001, Australia.
EM m.wynn@qut.edu.au; h.m.w.verbeek@tue.nl; w.m.p.v.d.aalst@tue.nl;
   a.terhofstede@qut.edu.au; d.edmond@qut.edu.au
RI van der Aalst, Wil/G-1248-2011; ter Hofstede, Arthur/I-9787-2012
OI van der Aalst, Wil/0000-0002-0955-6940; ter Hofstede,
   Arthur/0000-0002-2730-0201; Verbeek, Eric/0000-0002-1658-9679; Wynn,
   Moe/0000-0002-7205-8821
CR [Anonymous], 1995, CAMBRIDGE TRACTS THE
   Berthelot G, 1986, LECTURE NOTES COMPUT, V254, P359
   BERTHELOT G, 1985, ADV PETRI NETS 1985, P19
   Dufourd C, 1998, LECT NOTES COMPUT SC, V1443, P103, DOI 10.1007/BFb0055044
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   SADIQ W, 1999, LECT NOTES COMPUTER, V1626, P195
   Sloan RH, 1996, ACTA INFORM, V33, P687, DOI 10.1007/s002360050066
   Streit A, 2005, LECT NOTES COMPUT SC, V3649, P205, DOI 10.1007/11538394_14
   van der Aalst W. M. P., 2002, LECT NOTES COMPUTER, V2348, P534
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Verbeek HMW, 2007, COMPUT J, V50, P294, DOI 10.1093/comjnl/bx1074
   VERBEEK HMW, 2007, BPM0713
   VERBEEK HMW, 2004, THESIS EINDHOVEN U T
   Wynn MT, 2006, LECT NOTES COMPUT SC, V4102, P389
   Wynn MT, 2005, LECT NOTES COMPUT SC, V3536, P423
   WYNN MT, 2006, BPM0625
   WYNN MT, 2006, THESIS QUEENSLAND U
NR 19
TC 21
Z9 26
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 1010
EP 1020
DI 10.1016/j.infsof.2008.12.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400004
DA 2024-07-18
ER

PT J
AU Xiao, L
AF Xiao, Liang
TI An adaptive security model using agent-oriented MDA
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Adaptive security model; Agent-oriented model-driven architecture;
   Agent-oriented software engineering; Role-based access control; Adaptive
   and secure multi-agent systems
ID MULTIAGENT SYSTEMS; REQUIREMENTS
AB Model-driven architecture (MDA) supports model-centred software development via successive model transformation. In MDA, the reusability of models is improved as well as the traceability of requirements. Agent-oriented model-driven architecture (AMDA) associates adaptive agents with a business-oriented interaction model and lets agents dynamically interpret their behaviour from the continuously maintained model via which the current business needs are deployed at runtime. The continuous re-interpretation rather than discrete re-transformation of models means immediate requirements deployment after re-configuration, no system down time being required to affect changes and results in a development process that is oriented to business experts rather than developers. Adopting the adaptive agent model, an AMDA paradigm, we put forward a security-aware model-driven mechanism by using an extension of the role-based access control (RBAC) model. For this purpose, the concept or agent role proposed in agent-oriented software engineering (AOSE) is integrated with the one proposed in RBAC. Agent duties are specified in an interaction model and describe the roles that agents can play to fulfil their functional responsibilities. Agent rights are specified in a security policy rule model attached to the interaction model and describe constraints upon agent capabilities caused by their associated social roles. The role based interaction and policy-driven model incorporates both agent rights and duties. Hence, functional requirements and non-functional security constraint requirements are put together, related by the concept of role. Consequently, agents can continuously use the re-configurable model to play their roles in order to fulfil their responsibilities, and at the same time respect the security constraints. The major contribution from the approach is a method for building adaptive and secure MAS, following model-driven architecture. The approach is illustrated with an actual British railway management system. (C) 2008 Elsevier B.V. All rights reserved.
C1 Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
C3 University of Southampton
RP Xiao, L (corresponding author), Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
EM lx@ecs.soton.ac.uk
RI xiao, liang/G-2968-2010
OI xiao, liang/0000-0003-0178-9384
CR CHIVERS H, 2007, LNCS, V3556, P57
   Damian D, 2007, IEEE SOFTWARE, V24, P21, DOI 10.1109/MS.2007.55
   Farkas C, 2002, IEEE INTERNET COMPUT, V6, P76, DOI 10.1109/MIC.2002.1067741
   Fernandez-Medina E., 2006, J RES PRACTICE INFOR, V38
   Fernández-Medina E, 2006, DECIS SUPPORT SYST, V42, P1270, DOI 10.1016/j.dss.2005.10.008
   Fiadeiro JL, 2007, COMPUTER, V40, P34, DOI 10.1109/MC.2007.16
   France RB, 2006, COMPUTER, V39, P59, DOI 10.1109/MC.2006.65
   JADE Board, 2005, JADE SEC GUID
   *JAV AG DEVELOPMEN, JAV AG DEVELOPMENT F
   Jürjens J, 2005, IEEE INT C ENG COMP, P224
   Jurjens Jan., 2002, LECT NOTES COMPUTER, V2460, P412, DOI DOI 10.1007/3-540-45800-X_
   KERN A, 2003, P 8 ACM S ACC CONTR
   Kim DK, 2004, LECT NOTES COMPUT SC, V2984, P180
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Korthaus A., 1998, UNIFIED MODELING LAN, P220, DOI [10.1007/978-3-642-48673-915, DOI 10.1007/978-3-642-48673-9_15]
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Mouratidis H, 2006, LECT NOTES COMPUT SC, V4001, P48, DOI 10.1007/11767138_5
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   *OBJ MAN GROUP, 2002, PTC020109 OMG
   ODELL J, 2005, P 5 INT WORKSH AG OR, P78
   Peña J, 2006, DASC 2006: 2ND IEEE INTERNATIONAL SYMPOSIUM ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, PROCEEDINGS, P19
   Petrie C, 2003, IEEE INTERNET COMPUT, V7, P68, DOI 10.1109/MIC.2003.1215662
   POGGI A, 2001, P WOA
   Pollock J.T., 2004, ADAPTIVE INFORM IMPR
   POSLAD S, 2000, P AUT AG
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   TORRELLAS GAS, 2003, P EMERGING TECHNOLOG, P623
   VIGNA G, 1998, LNCS, V1419
   Xiao L., 2006, ADV TOPICS DATABASE, V5, P148
   XIAO L, 2006, THESIS QUEENS U BELF
   Xiao L., 2005, P 1 INT WORKSH REQ E, P28
   XIAO L, INT J MULTI IN PRESS
   XIAO L, 2006, P 18 INT C SOFTW ENG, P651
   Xiao L, 2007, P INT COMP SOFTW APP, P261
   Xiao L, 2007, P INT COMP SOFTW APP, P153
   Xiao L, 2007, EUR J INFORM SYST, V16, P390, DOI 10.1057/palgrave.ejis.3000688
   Xiao L, 2006, MULTIAGENT GRID SYST, V2, P325, DOI 10.3233/MGS-2006-2403
   Zambonelli F, 2003, ACM T SOFTW ENG METH, V12, P317, DOI 10.1145/958961.958963
NR 39
TC 11
Z9 11
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2009
VL 51
IS 5
SI SI
BP 933
EP 955
DI 10.1016/j.infsof.2008.05.005
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425OY
UT WOS:000264648200009
DA 2024-07-18
ER

PT J
AU Ahmed, MA
   Muzaffar, Z
AF Ahmed, Moataz A.
   Muzaffar, Zeeshan
TI Handling imprecision and uncertainty in software development effort
   prediction: A type-2 fuzzy logic based framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort prediction; Type-2 fuzzy logic; COCOMO; Imprecision; Uncertainty
AB Traditional approaches for software projects effort prediction such as the use of mathematical formulae derived from historical data, or the use of experts judgments are plagued with issues pertaining to effectiveness and robustness in their results. These issues are more pronounced when these effort prediction approaches are used during the early phases of the software development lifecycle, for example requirements development, whose effort predictors along with their relationships to effort are characterized as being even more imprecise and uncertain than those of later development phases, for example design. Recent works have demonstrated promising results using approaches based on fuzzy logic. Effort prediction systems that use fuzzy logic can deal with imprecision; they, however, can not deal with uncertainty. This paper presents an effort prediction framework that is based on type-2 fuzzy logic to allow handling imprecision and uncertainty inherent in the information available for effort prediction. Evaluation experiments have shown the framework to be promising. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Muzaffar, Zeeshan] Univ Western Ontario, Dept Comp Sci, London, ON N6A 3K7, Canada.
   [Ahmed, Moataz A.] LEROS Technol Corp, Fairfax, VA 22030 USA.
C3 Western University (University of Western Ontario)
RP Muzaffar, Z (corresponding author), Univ Western Ontario, Dept Comp Sci, London, ON N6A 3K7, Canada.
EM mahmed5@gmu.edu; smuzaff2@csd.uwo.ca
OI Ahmed, Moataz/0000-0003-0042-8819
FU King Fahd University of Petroleum and Minerals (KFUPM)
FX The authors wish to acknowledge King Fahd University of Petroleum and
   Minerals (KFUPM) for the use of various facilities in carrying out this
   research. The authors also wish to thank Prof. David Rine of George
   Mason University, Virginia, for his valuable comments. Many thanks are
   Clue to the anonymous referees for their detailed and helpful comments.
CR ADAM A, 2006, 4 ACS IEEE INT C COM
   Ahmed MA, 2005, INFORM SOFTWARE TECH, V47, P31, DOI 10.1016/j.infsof.2004.05.004
   ANGELIS L, 2001, 7 IEEE INT SOFTW MET
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], ANN SOFTWARE ENG
   [Anonymous], 7 INT C FUZZ THEOR T
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 1999, P IASTED INT C INT S
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   Bibi S, 2003, 1 BALK C INF THESS G
   BOEHM B, 2000, USCCSE2000505
   Boehm BW., 1981, Software Engineering Economics
   Clark B, 1998, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1998.671610
   Costagliola G, 2005, IEEE T SOFTWARE ENG, V31, P52, DOI 10.1109/TSE.2005.5
   Devnani-Chulani S., 1999, THESIS U SO CALIFORN
   FEI ZL, 1992, IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, P331, DOI 10.1109/FUZZY.1992.258637
   Fenton E.N., 1997, Software Metrics - A Rigorous Practical Approach
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   HODGKINSON AC, 1999, P 3 INT C SOFTW ENG, P401
   Jorgensen M., 2002, SEKE '02 Proceedings of the 14th international conference on Software engineering and knowledge engineering, P425, DOI DOI 10.1145/568760.568833
   KIRSOPP C, 2002, SEARCH HEURISTICS CA
   KIRSOPP C, 2002, 6 INT C EMP ASS EV S
   MACDONELL SG, 1997, P 1997 INT C NEUR IN, P869
   MAMDANI EH, 1974, P I ELECTR ENG, V121, P1585, DOI 10.1049/piee.1974.0328
   Mendel J. M., 2017, Uncertain Rule-Based Fuzzy Systems: Introduction and NewDirections, V2nd
   Musilek P., 2000, Applied Computing Review, V8, P24, DOI 10.1145/373975.373984
   MUZAFFAR SZ, 2006, THESIS KING FAHD U P
   NAUCK D, 2000, THESIS U MAGDEBURG
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   RAHMAN QA, 2005, THESIS KING FAHD U P
   RIBU K, 2001, THESIS U OSLO OSLO
   Russell S., 2016, Artificial intelligence a modern approach
   SALIU M, 2003, THESIS KING FAHD U P
   Saliu MO, 2004, NAFIPS 2004: ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1AND 2, P16
   SALIU MO, 2004, SOFT COMPUTING SOFTW
   SCHOFIELD C, 1998, TR9801 BOURN U DEP C
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   TEOLOGLOU G, 1999, 10 C EUR SOFTW CONTR
   Tian L, 2003, SE SYM SYS THRY, P232, DOI 10.1109/SSST.2003.1194564
   WALSTON CE, 1977, IBM SYST J, V16, P54, DOI 10.1147/sj.161.0054
   Wang L. X., 1994, Adaptive Fuzzy Systems and Control: Design and Stability Analysis
   ZADEH LA, 1975, INFORM SCIENCES, V8, P199, DOI 10.1016/0020-0255(75)90046-8
NR 43
TC 31
Z9 33
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 640
EP 654
DI 10.1016/j.infsof.2008.09.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 400TM
UT WOS:000262891500008
DA 2024-07-18
ER

PT J
AU Colosimo, M
   De Lucia, A
   Scanniello, G
   Tortora, G
AF Colosimo, Massimo
   De Lucia, Andrea
   Scanniello, Giuseppe
   Tortora, Genoveffa
TI Evaluating legacy system migration technologies through empirical
   studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software migration; Empirical studies; Controlled experiments; Case
   studies; Technology transfer
ID SOFTWARE; EXPERIMENTATION
AB We present two controlled experiments conducted with master students and practitioners and a case study conducted with practitioners to evaluate the use of MELIS (Migration Environment for Legacy Information Systems) for the migration of legacy COBOL programs to the web. MELIS has been developed as an Eclipse plug-in within a technology transfer project conducted with a small software company [16]. The partner company has developed and marketed in the last 30 years several COBOL systems that need to be migrated to the web, due to the increasing requests of the customers. The goal of the technology transfer project was to define a systematic migration strategy and the supporting tools to migrate these COBOL systems to the web and make the partner company an owner of the developed technology. The goal of the controlled experiments and case study was to evaluate the effectiveness of introducing MELIS in the partner company and compare it with traditional software development environments. The results of the overall experimentation show that the use of MELIS increases the productivity and reduces the gap between novice and expert software engineers. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Scanniello, Giuseppe] Univ Basilicata, Dipartimento Matemat & Informat, I-85100 Potenza, Italy.
   [Colosimo, Massimo; De Lucia, Andrea; Tortora, Genoveffa] Univ Salerno, Dipartimento Matemat & Informat, I-84080 Fisciano, SA, Italy.
C3 University of Basilicata; University of Salerno
RP Scanniello, G (corresponding author), Univ Basilicata, Dipartimento Matemat & Informat, Viale Ateneo, I-85100 Potenza, Italy.
EM massimo.colosimo@gmail.it; adelucia@unisa.it;
   giuseppe.scanniello@unibas.it; tortora@unisa.it
RI De Lucia, Andrea/AAG-6781-2020
OI De Lucia, Andrea/0000-0002-4238-1425; Scanniello,
   Giuseppe/0000-0003-0024-7508
FU MiUR (Ministero dell'Universita e della Ricerca) [PRIN-2006-2006098097]
FX The work described in this paper is supported by the project METAMORPHOS
   (MEthods and Tools for migrAting software systeMs towards web and
   service Oriented aRchitectures: exPerimental evaluation, usability, and
   technology tranSfer), funded by MiUR (Ministero dell'Universita e della
   Ricerca) under Grant PRIN-2006-2006098097.
CR Aversano L, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P148, DOI 10.1109/CSMR.2001.914979
   AVERSANO L, 2003, ADV SOFTWARE MAINTEN, P151
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Bodhuin T, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P329, DOI 10.1109/WCRE.2002.1173090
   BODHUIN T, 2002, P WORK C REV ENG, P165
   Bovenzi D, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P73, DOI 10.1109/CSMR.2003.1192412
   Brodie M., 1995, MIGRATING LEGACY SYS
   BUTLER JG, 1996, MAINFRAME CLIENT SER
   Campbell D. T., 1963, HDB RES TEACHING, P1, DOI [DOI 10.1037/022808, https://doi.org/10.1037/022808]
   Canfora G, 2000, J SYST SOFTWARE, V54, P99, DOI 10.1016/S0164-1212(00)00030-3
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P23
   Chiang CC, 2001, INFORM SOFTWARE TECH, V43, P497, DOI 10.1016/S0950-5849(01)00160-4
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   De Lucia A, 2008, SOFTWARE PRACT EXPER, V38, P1333, DOI 10.1002/spe.870
   De Lucia A, 2006, INT C PROGRAM COMPRE, P317, DOI 10.1109/ICPC.2006.28
   DEVOTE JL, 1999, APPL STAT ENG SCI
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lin JM, 2007, SOFTWARE PRACT EXPER, V37, P417, DOI 10.1002/spe.775
   Lin JM, 2004, INFORM SOFTWARE TECH, V46, P403, DOI 10.1016/j.infsof.2003.08.003
   Linkman S, 1997, INFORM SOFTWARE TECH, V39, P777, DOI 10.1016/S0950-5849(97)00029-3
   MERLO E, 1995, IEEE SOFTWARE, V12, P64, DOI 10.1109/52.363164
   MOORE M, 1998, THESIS COLL COMPUTIN
   Moore MM, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P52, DOI 10.1109/WCRE.2000.891452
   Oppenheim N.A., 1992, QUESTIONNAIRE DESIGN
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   RAGHAVAN SA, 1989, IEEE SOFTWARE, V6, P81, DOI 10.1109/52.31655
   Rahaozar M, 2003, J SOFTW MAINT EVOL-R, V15, P325, DOI 10.1002/smr.278
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sneed HM, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P3
   Sneed HM, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P189, DOI 10.1109/WCRE.2001.957823
   SNEED HM, 1999, P WORK C REV ENG, P104
   Stroulia E., 2003, Automated Software Engineering, V10, P271, DOI 10.1023/A:1024460315173
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   ZDUN U, 2002, P 6 EUR C SOFTW MAIN, P211
   2002, IBM WEBSPHERE SOFTWA
NR 41
TC 27
Z9 29
U1 3
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 433
EP 447
DI 10.1016/j.infsof.2008.05.012
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900015
OA Green Published
DA 2024-07-18
ER

PT J
AU Chen, LW
   Huang, SJ
AF Chen, Li-Wei
   Huang, Sun-Jen
TI Accuracy and efficiency comparisons of single- and multi-cycled software
   classification models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software measurement and analysis; Software classification model;
   Single-cycle; Multi-cycle; Classification accuracy and efficiency
ID STATIC CODE ATTRIBUTES; COST; RISK; RULE
AB Software classification models have been regarded as an essential support tool in performing measurement and analysis processes. Most of the established models are single-cycled in the model usage stage, and thus require the measurement data of all the model's variables to be simultaneously collected and utilized for classifying an unseen case within only a single decision cycle. Conversely, the multi-cycled model allows the measurement data of all the model's variables to be gradually collected and utilized for such a classification within more than one decision cycle, and thus intuitively seems to have better classification efficiency but poorer classification accuracy. Software project managers often have difficulties in choosing an appropriate classification model that is better suited to their specific environments and needs. However, this important topic is not adequately explored in software measurement and analysis literature. By using an industrial software measurement dataset of NASA KC2, this paper explores the quantitative performance comparisons of the classification accuracy and efficiency of the discriminant analysis (DA)- and logistic regression (LR)-based single-cycled models and the decision tree (DT)-based (C4.5 and ECHAID algorithms) multi-cycled models. The experimental results Suggest that the re-appraisal cost of the Type I MR, the software failure cost of Type II MR and the data collection cost of software measurements should be considered simultaneously when choosing an appropriate classification model. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Chen, Li-Wei; Huang, Sun-Jen] Natl Taiwan Univ Sci & Technol, Dept Informat Management, Taipei 106, Taiwan.
C3 National Taiwan University of Science & Technology
RP Huang, SJ (corresponding author), Natl Taiwan Univ Sci & Technol, Dept Informat Management, 43,Sec 4,Keelung Rd, Taipei 106, Taiwan.
EM huangsj@mail.ntust.edu.tw
FU National Science Council of Taiwan [NSC 94-2416-H-011-001]
FX This research was supported by the National Science Council of Taiwan
   under the contrast NSC 94-2416-H-011-001. The authors would like to
   gratefully acknowledge the anonymous referees for their fruitful
   comments on the previous version of the paper.
CR Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Basili VR, 1997, PROC INT CONF SOFTW, P282, DOI 10.1145/253228.253289
   Bellini P, 2005, IEEE INT C ENG COMP, P205
   Biggs P., 1991, J APPL STAT, V18, P49, DOI DOI 10.1080/02664769100000005
   BURMAN P, 1989, BIOMETRIKA, V76, P503, DOI 10.2307/2336116
   Chen S, 2008, EXPERT SYST APPL, V34, P411, DOI 10.1016/j.eswa.2006.09.042
   *CMU SEI CMMI PROD, 2002, CMUSEI2002TR012 CMMI
   Denaro Giovanni., 2002, P IEEE INT C SOFTWAR, P361
   Ebert C, 1996, SOFTWARE QUAL J, V5, P255, DOI 10.1007/BF00209184
   Han YS, 1996, APPL INTELL, V6, P275, DOI 10.1007/BF00132734
   Hosmer D.W., 1989, Applied logistic analysis
   Huang SJ, 2006, J INF SCI ENG, V22, P297
   *ISO IEC, 2002, 15939 ISOIEC
   Kass G.V., 1980, APPL STATIST, V29, P119, DOI [10.2307/2986296, DOI 10.2307/2986296]
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Khoshgoftaar T. G., 2001, Empirical Software Engineering, V6, P59, DOI 10.1023/A:1009803004576
   Khoshgoftaar T. M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P116, DOI 10.1109/ISSRE.1999.809316
   Khoshgoftaar TM, 2000, IEEE T RELIAB, V49, P209, DOI 10.1109/24.877340
   Khoshgoftaar TM, 2005, J SYST SOFTWARE, V76, P111, DOI 10.1016/j.jss.2004.04.027
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Lanubile F, 1997, J SYST SOFTWARE, V38, P225, DOI 10.1016/S0164-1212(96)00153-7
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   *NASA METR DAT PRO, 2004, NASA KC2 DAT SOFTW F
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   QUINLAN JR, 1997, PROGRAM C4 5 RELEASE
   Reformat M, 2003, INFORM SOFTWARE TECH, V45, P405, DOI 10.1016/S0950-5849(03)00012-0
   RODRIGUEZ V, 1987, J INFORM SOFTWARE TE, V29, P245
   *SPSS INC, 2004, SPSS V 13 TUT
   *STAND GROUP, 2004, CHAOS DEM PROJ RES 3
   Takahashi R, 1997, J SYST SOFTWARE, V38, P61, DOI 10.1016/S0164-1212(97)00060-5
   THOMAS Z, 1997, P 3 INT WORKSH PRED, P9
   Weller AF, 2006, COMPUT GEOSCI-UK, V32, P1357, DOI 10.1016/j.cageo.2005.12.007
   Xu Y, 2005, PROCEEDINGS OF 2005 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-9, P4442
NR 37
TC 5
Z9 5
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 173
EP 181
DI 10.1016/j.infsof.2008.03.004
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500016
DA 2024-07-18
ER

PT J
AU Henderson-Sellers, B
   France, R
   Georg, G
   Reddy, R
AF Henderson-Sellers, B.
   France, R.
   Georg, G.
   Reddy, R.
TI A method engineering approach to developing aspect-oriented modelling
   processes based on the OPEN process framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE aspect-oriented modelling; methodology; design; method engineering; OPEN
ID TRANSITION
AB Aspect-oriented software development (AOSD) is an approach to software development in which aspect-oriented techniques are integrated with traditional (mainly OO) development techniques. Identifying the appropriate method components for supporting aspect-oriented development is facilitated by the use of a method engineering approach. We demonstrate this approach by using the OPEN Process Framework (OPF) to identify previous deficiencies in the method fragments stored in the OPF repository so that the enhanced OPF repository is able to fully support AOSD. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Technol Sydney, Dept Software Engn, Broadway, NSW 2074, Australia.
   Colorado State Univ, Ft Collins, CO 80523 USA.
C3 University of Technology Sydney; Colorado State University
RP Henderson-Sellers, B (corresponding author), Univ Technol Sydney, Dept Software Engn, POB 123, Broadway, NSW 2074, Australia.
EM brian@it.uts.edu.au
RI , Raghu/JYO-4409-2024
OI , Raghu/0000-0003-2280-5400
CR [Anonymous], 2005, OMG UN MOD LANG SUP
   [Anonymous], CHALLENGES STRATEGIE
   [Anonymous], INTELLIGENT AGENT SO
   [Anonymous], LNCS
   AVISON DE, 1991, COMPUT J, V34, P98, DOI 10.1093/comjnl/34.2.98
   BANIASSAD E, TCDCS200340
   BANIASSAD ELA, 2004, EARL ASP WORKSH HELD
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Brinkkemper S, 1998, LECT NOTES COMPUT SC, V1413, P381, DOI 10.1007/BFb0054236
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   CLARKE S, 2002, 1 INT C ASP OR SOFTW
   CLARKE S, P 23 INT C SOFTW ENG
   Cockburn A, 2000, IEEE SOFTWARE, V17, P64, DOI 10.1109/52.854070
   Dijkstra E.W., 1982, EWD 447: On the role of scientific thought. Selected Writings on Computing: A Personal Perspective, P60, DOI DOI 10.1007/978-1-4612-5695-3
   Fayad ME, 1996, COMMUN ACM, V39, P108, DOI 10.1145/230798.230811
   Firesmith D.G., 2002, OPEN PROCESS FRAMEWO
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   France R, 2004, IEE P-SOFTW, V151, P173, DOI 10.1049/ip-sen:20040920
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   GEORG G, 2003, P 5 IFIP TC WG 11 5, P37
   Glass RL, 2000, IEEE SOFTWARE, V17, P128
   Glass RL, 2004, COMMUN ACM, V47, P19, DOI 10.1145/986213.986228
   GLASS RL, 2000, IEEE SOFTWARE, V17, P127
   Graham I., 1997, OPEN PROCESS SPECIFI
   GRAHAM IM, 1995, REPORT OBJECT ANAL D, V1, P10
   Haire B, 2001, P INT COMP SOFTW APP, P383, DOI 10.1109/CMPSAC.2001.960643
   Henderson-Sellers B, 2003, COMMUN ACM, V46, P73, DOI 10.1145/944217.944242
   Henderson-Sellers B, 2002, INT FED INFO PROC, V103, P9
   Henderson-Sellers B., 2004, P 7 AS PAC SOFTW ENG, P436
   Henderson-Sellers B., 2001, COMPONENT BASED SOFT, P321
   Henderson-Sellers B., 2003, PERFORMANCE DESIGN, P171
   Henderson-Sellers B., 1998, OPEN TOOLBOX TECHNIQ
   HENDERSONSELLER.B, LNAI, V3071, P323
   Nguyen V P., 2003, Procs. 7th IASTED SEA Conference, P691
   NGUYEN VP, 2003, ICSSEA 2003 16 INT C, V5
   Ralyte J, 2004, PROCEEDINGS OF THE THIRTEENTH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS DEVELOPMENT: ADVANCES IN THEORY, PRACTICE AND EDUCATION, P271
   Rashid A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P199, DOI 10.1109/ICRE.2002.1048526
   RASHID A, 2003, 2 INT C ASP OR SOFTW, P11
   Rolland C., 1999, Requirements Engineering, V4, P169, DOI 10.1007/s007660050018
   Serour M. K., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P50, DOI 10.1109/CMPSAC.2004.1342805
   Serour MK, 2002, LECT NOTES COMPUT SC, V2425, P229
   SEROUR MK, 2004, P IADIS INT C E SOC, V2, P751
   Ter Hofstede AHM, 1997, INFORM SYST, V22, P401, DOI 10.1016/S0306-4379(97)00024-0
   van Slooten K., 1993, Information systems Development Process Procs. IFIP WG8.1, eds
   VANSLOOTEN K, 1996, P IFIP TC8 WORK C ME, P29
   VESSEY I, 1994, INFORM SYST MANAGE, V11, P53, DOI 10.1080/07399019408964671
   Wistrand K, 2004, BIOMED SCI INSTRUM, V3084, P189
NR 47
TC 6
Z9 7
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2007
VL 49
IS 7
BP 761
EP 773
DI 10.1016/j.infsof.2006.08.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 179MV
UT WOS:000247294900004
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Chatzigeorgiou, A
AF Ampatzoglou, Apostolos
   Chatzigeorgiou, Alexander
TI Evaluation of object-oriented design patterns in game development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE game development; design patterns; software evaluation; software metrics
ID METRICS
AB The use of object-oriented design patterns in game development is being evaluated in this paper. Games' quick evolution, demands great flexibility, code reusability and low maintenance costs. Games usually differentiate between versions, in respect of changes of the same type (additional animation, terrains etc). Consequently, the application of design patterns in them can be beneficial regarding maintainability. In order to investigate the benefits of using design patterns, a qualitative and a quantitative evaluation of open source projects is being performed. For the quantitative evaluation, the projects are being analyzed by reverse engineering techniques and software metrics are calculated. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 University of Macedonia
RP Chatzigeorgiou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM ampatzoglou@doai.uom.gr; achat@uom.gr
RI Ampatzoglou, Apostolos/AAC-3632-2020; Chatzigeorgiou,
   Alexandros/AAL-6077-2021
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], 2003, ALAN APT SERIES
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   Bishop L, 1998, IEEE COMPUT GRAPH, V18, P46, DOI 10.1109/38.637270
   Bjork S., 2003, LECT NOTES GAME DESI
   Bjork S., 2003, P DIGITAL GAMES RES
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Crooks C. E., 2004, AWESOME 3D GAME DEV
   DOHERTY M, 2003, SOFTWARE ARCHITECTUR, V1
   EABREU F, 1995, P 9 EUR C OBJ OR PRO
   GAMMA H, 1995, DESIGN PATTERN ELEME
   GUEHENEUC YG, 11 WORK C REV ENG, P172
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   LAIRD J, GAME PRODUCTION TIME
   Lewis M, 2002, COMMUN ACM, V45, P27
   Masuch M, 2005, C5 2005: THIRD INTERNATIONAL CONFERENCE ON CREATING, CONNECTING AND COLLABORATING THROUGH COMPUTING, PROCEEDINGS, P67
   Pleva G., 2004, J COMPUTING SCI COLL, V20, P125
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   RAYNOLDS C, 2000, SIGGRAPH C
   Rhyne TM, 2000, IEEE VISUAL, P519
   SHALLOWAY JT, 2001, DESIGN PATTERNS EXPL
   SHULTZ GA, 2004, J COMPUTING SCI COLL, V20, P241
   STACEY P, 2005, P 38 HAW INT C SYS, P1
   TSANTALIS N, 2005, DESIGN PATTERN DETEC
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
NR 26
TC 40
Z9 41
U1 1
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2007
VL 49
IS 5
BP 445
EP 454
DI 10.1016/j.infsof.2006.07.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161VS
UT WOS:000246045200002
DA 2024-07-18
ER

PT J
AU Cechich, A
   Piattini, M
AF Cechich, Alejandra
   Piattini, Mario
TI Early detection of COTS component functional suitability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE COTS (Commercial Off-the-shelf) components; component-based system
   development; COTS component selection; quality attributes; Six-Sigma
ID SPECIFICATION
AB The adoption of COTS-based development brings with it many challenges about the identification and finding of candidate components for reuse. Particularly, the first stage in the identification of COTS candidates is commonly carried out by dealing with unstructured information on the Web, which makes the evaluation process highly costly when applying complex evaluation criteria. To facilitate this process, our proposal introduces an early measurement procedure for suitability of COTS candidates. Considering that filtering is about a first-stage selection, functionality evaluation might drive the analysis, proceeding with the evaluation of other properties only on the pre-selected candidates. In this way, a few candidates are fully evaluated making in principle the whole process more cost-effective. In this paper, we illustrate how functional measures at an initial state are calculated for an E-payment case study. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Nacl Comahue, Dept Ciencias Computac, RA-8300 Neuquen, Argentina.
   Univ Castilla La Mancha, Escuela Super Informat, Ciudad Real 13701, Spain.
C3 Universidad Nacional del Comahue; Universidad de Castilla-La Mancha
RP Cechich, A (corresponding author), Univ Nacl Comahue, Dept Ciencias Computac, Buenos Aires 1400, RA-8300 Neuquen, Argentina.
EM acechich@uncoma.edu.ar; Mario.Piattini@uclm.es
RI Piattini, Mario/F-6271-2013
OI Piattini, Mario/0000-0002-7212-8279; Cechich,
   Alejandra/0000-0003-4804-6270
CR ABTS C, 2002, P 1 INT C COTS BAS S, P1
   ALBERT C, 2002, 20030TR009 SEI
   ALEXANDER R, 1999, SPC98095CMC
   [Anonymous], 2003, 19761 ISOIEC
   [Anonymous], P S SOFTW REUS PUTT
   ASIKAINEN T, 2003, P WORKSH CONF CONJ 1
   ASIKAINEN T, 2002, P WORKSH CONF CONJ 1
   Ayala CP, 2005, LECT NOTES COMPUT SC, V3412, P90
   Bertoa ManuelF., 2003, P 7 ECOOP WORKSHOP Q, P25
   Bianchi A, 2003, LECT NOTES COMPUT SC, V2765, P233
   Biehl RB, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1270765
   BOEHM BW, 1998, IEEE COMPUTER    MAY, P61
   CARVALLO J, 2004, P 3 INT C COTS BAS S, V2959, P221
   Cechich A, 2004, LECT NOTES COMPUT SC, V3107, P195
   Cechich A, 2005, LECT NOTES COMPUT SC, V3412, P112
   Cechich A, 2004, LECT NOTES COMPUT SC, V2959, P31
   Cechich A, 2006, FIFTH INTERNATIONAL CONFERENCE ON COMMERCIAL-OFF-THE-SHELF (COTS) - BASED SOFTWARE SYSTEM, PROCEEDINGS, P90, DOI 10.1109/ICCBSS.2006.31
   CECHICH A, 2003, LECT NOTES COMPUTER, V2693
   CECHICH A, 2005, 7 INT C ENT INF SYST
   CECHICH A, 2004, P 6 INT C ENT INF SY, P115
   CECHICH A, 2004, P 5 INT C PROD FOC S, P556
   De Feo J.A., 2002, J CHANG MANAG, V3, P60, DOI [10.1080/714042521, DOI 10.1080/714042521]
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fettke P, 2003, LECT NOTES COMPUT SC, V2591, P62
   GACK A, 2003, SOFTW QUAL J, V5, P5
   HOLMES L, EVALUATING COTS USIN
   HRISTOZOVA M, 2003, WORKSH ONT AG SYST 2
   JACCHERI L, 2002, SOFTWARE PROCESS MOD
   JACOBSON IG, 1999, UNIFIED DEV PROCESS
   Jilani LL, 2001, IEEE T SOFTWARE ENG, V27, P673, DOI 10.1109/32.940565
   LI J, 2004, P INT WORKSH MOD PRO, P27
   LIPSON H, 2002, P CAISE 2002LNCS, V2348, P216
   Maiden NA, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.663784
   Mielnik JC, 2003, LECT NOTES COMPUT SC, V2580, P157
   Ncube C, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P133, DOI 10.1109/ISRE.1999.777993
   OCHS M, 2000, IESE05500E
   Overhage S, 2004, LECT NOTES COMPUT SC, V3263, P169
   Pahl C, 2003, LECT NOTES COMPUT SC, V2621, P6
   PAHL C, 2003, P SAVCBS 03 ESEC FSE
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Stake Robert E., 1995, The Art of Case Study Research
   TAYNTOR C, 2003, AUERBACH PUBLICATION
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   Ulkuniemi P, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.38
NR 44
TC 12
Z9 15
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 108
EP 121
DI 10.1016/j.infsof.2006.03.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 118EY
UT WOS:000242926300003
DA 2024-07-18
ER

PT J
AU Wohlin, C
AF Wohlin, Claes
TI An analysis of the most cited articles in software engineering journals
   - 2000
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE citations; bibliometric research; software engineering
AB Citations and related work are crucial in any research to position the work and to build on the work of others. A high citation count is an indication of the influence of specific articles. The importance of citations means that it is interesting to analyze which articles are cited the most. Such an analysis has been conducted using the ISI Web of Science to identify the most cited software engineering journal articles published in 2000. The objective of the analysis is to identify and list the articles that have influenced others the most as measured by citation count. An understanding of which research is viewed by the research community as most valuable to build upon may provide valuable insights into what research to focus on now and in the future. Based on the analysis, a list of the 20 most cited articles is presented here. The intention of the analysis is twofold. First, to identify the most cited articles, and second, to invite the authors of the most cited articles in 2000 to contribute to a special issue of Information and Software Technology. Five authors have accepted the invitation and their articles appear in this special issue. Moreover, an analysis of the most cited software engineering journal articles in the last 20 years is presented. The presentation includes both the most cited articles in absolute numbers and the most cited articles when looking at the average number of citations per year. The article describing the SPIN model checker by G.J. Holzmann published in 1997 is first on both these lists. (C) 2006 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Wohlin, C (corresponding author), Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, POB 520, S-37225 Ronneby, Sweden.
EM Claes.Wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR Glanzel W, 2002, SCIENTOMETRICS, V53, P171, DOI 10.1023/A:1014848323806
   Jones AW, 2005, INT J LEGAL MED, V119, P59, DOI 10.1007/s00414-004-0512-x
   McBurney MK, 2002, IPCC 2002, REFLECTIONS ON COMMUNICATION, PROCEEDINGS, P108, DOI 10.1109/IPCC.2002.1049094
   Tse TH, 2006, J SYST SOFTWARE, V79, P816, DOI 10.1016/j.jss.2005.08.018
   Wohlin C, 2005, INFORM SOFTWARE TECH, V47, P957, DOI 10.1016/j.infsof.2005.09.002
   Zitt M, 2005, SCIENTOMETRICS, V63, P373, DOI 10.1007/s11192-005-0218-y
NR 6
TC 23
Z9 24
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2007
VL 49
IS 1
BP 2
EP 11
DI 10.1016/j.infsof.2006.08.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115AK
UT WOS:000242706600002
DA 2024-07-18
ER

PT J
AU Tseng, FSC
   Chen, CL
AF Tseng, Frank S. C.
   Chen, Chun-Ling
TI Extending the UML concepts to transform natural language queries with
   fuzzy semantics into SQL
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE natural language query; UML; class; diagram; object-oriented modeling;
   fuzzy set theory
ID REPRESENTATION; MANAGEMENT; SYSTEMS
AB Database applications tend toward getting more versatile and broader to comply with the expansion of various organizations. However, naive users usually suffer from accessing data arbitrarily by using formal query languages. Therefore, we believe that accessing databases using natural language constructs will become a popular interface in the future. The concept of object-oriented modeling makes the real world to be well represented or expressed in some kinds of logical form. Since the class diagram in UML is used to model the static relationships of databases, in this paper, we intend to study how to extend the UML class diagram representations to capture natural language queries with fuzzy semantics. By referring to the conceptual schema throughout the class diagram representation, we propose a methodology to map natural language constructs into the corresponding class diagram and employ Structured Object Model (SOM) methodology to transform the natural language queries into SQL statements for query executions. Moreover, our approach can handle queries containing vague terms specified in fuzzy modifiers, like 'good' or 'bad'. By our approach, users obtain not only the query answers but also the corresponding degree of vagueness, which can be regarded as the same way we are thinking. (c) 2006 Elsevier B.V. All rights reserved.
C1 Natl Kaohsiung First Univ Sci & Technol, Dept Informat Management, Kaohsiung 824, Taiwan.
   Natl Chiao Tung Univ, Dept Comp Sci & Informat Engn, Hsinchu 300, Taiwan.
C3 National Kaohsiung University of Science & Technology; National Yang
   Ming Chiao Tung University
RP Tseng, FSC (corresponding author), Natl Kaohsiung First Univ Sci & Technol, Dept Informat Management, 1 Univ Rd, Kaohsiung 824, Taiwan.
EM imfrank@ccms.nkfust.edu.tw; gis93804@cis.nctu.edu.tw
CR Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   Alavi M., 1999, COMMUNICATION ASS IN, V1, P7, DOI DOI 10.17705/1CAIS.00107
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1999, Developing time-oriented database applications in sql
   BOOCH G, 1999, UNIFIED MODELLING LA
   Booch G., 1996, OBJECT SOLUTIONS MAN
   BOSC P, 1988, FUZZY SET SYST, V28, P333, DOI 10.1016/0165-0114(88)90039-5
   CHEN P, 1976, ACM T DATABASE SYST, V1, P19
   CHEN PPS, 1983, INFORM SCIENCES, V29, P127, DOI 10.1016/0020-0255(83)90014-2
   Date C.J., 2000, INTRO DATABASE SYSTE, V7th
   Feijs LMG, 2000, INFORM SOFTWARE TECH, V42, P633, DOI 10.1016/S0950-5849(00)00107-5
   HIGA K, 1999, P 24 ANN HAW INT C S, V3, P53
   Isoda S, 2001, J SYST SOFTWARE, V59, P153, DOI 10.1016/S0164-1212(01)00059-0
   Métais E, 2002, DATA KNOWL ENG, V41, P247, DOI 10.1016/S0169-023X(02)00043-5
   MORENO AM, 1997, P INT WORKSH APPL NA
   Muller R. J., 1999, DATABASE DESIGN SMAR
   OESTEREICH B, 1999, DEV SOFTWARE UML OBJ
   Owei V, 2002, J SYST SOFTWARE, V63, P45, DOI 10.1016/S0164-1212(01)00139-X
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SCHMUCKER KJ, 1984, NATURAL LANGUAGE COM
   TAKAHASHI Y, 1993, IEEE T KNOWL DATA EN, V5, P122, DOI 10.1109/69.204096
   Tseng F. S. C., 1992, Data & Knowledge Engineering, V9, P97, DOI 10.1016/0169-023X(92)90019-8
   TSENG FSC, 2005, EXTENDING UML CONCEP
   UMANO M, 1986, DE864 IEICE, V86, P1
   VELARDI P, 1986, P 7 INT C ENT REL AP
   Winston P.H., 1992, Artificial Intelligence
   Yazici A, 1999, INFORM SCIENCES, V115, P137, DOI 10.1016/S0020-0255(98)10079-8
   ZADEH LA, 1975, INFORM SCIENCES, V8, P199, DOI 10.1016/0020-0255(75)90046-8
   ZADEH LA, 1978, INT J MAN MACH STUD, V10, P395, DOI 10.1016/S0020-7373(78)80003-0
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   ZEMANKOVALEECHM, 1984, FUZZY RELATIONAL DAT
NR 31
TC 5
Z9 5
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 901
EP 914
DI 10.1016/j.infsof.2005.12.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU García, F
   Bertoa, MF
   Calero, C
   Vallecillo, A
   Ruíz, F
   Piattini, M
   Genero, M
AF Garcia, Felix
   Bertoa, Manuel F.
   Calero, Coral
   Vallecillo, Antonio
   Ruiz, Francisco
   Piattini, Mario
   Genero, Marcela
TI Towards a consistent terminology for software measurement
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software measurement; measurement terminology
ID ONTOLOGIES
AB Although software measurement plays an increasingly important role in Software Engineering, there is no consensus yet on many of the concepts and terminology used in this field. Even worse, vocabulary conflicts and inconsistencies can be frequently found amongst the many sources and references commonly used by software measurement researchers and practitioners. This article presents an analysis of the current situation, and provides a comparison framework that can be used to identify and address the discrepancies, gaps, and terminology conflicts that current software measurement proposals present. A basic software measurement ontology is introduced, that aims at contributing to the harmonization of the different software measurement proposals and standards, by providing a coherent set of common concepts used in software measurement. The ontology is also aligned with the metrology vocabulary used in other more mature measurement engineering disciplines. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Castilla La Mancha, Dept Comp Sci, Alarcos Res Grp, Ciudad Real 13071, Spain.
   Univ Malaga, Dept Lenguajes & Ciencias Computac, Malaga, Spain.
C3 Universidad de Castilla-La Mancha; Universidad de Malaga
RP García, F (corresponding author), Univ Castilla La Mancha, Dept Comp Sci, Alarcos Res Grp, Paseo Univ 4, Ciudad Real 13071, Spain.
EM felix.garcia@uclm.es
RI Bertoa, Manuel F./K-6855-2012; Piattini, Mario/F-6271-2013; Ruiz,
   Francisco/D-4295-2011; Bertoa, Manuel F./O-8707-2019; GENERO,
   MARCELA/L-6480-2014; Vallecillo, Antonio/B-1884-2014; Garcia,
   Felix/D-4299-2011; Calero, Coral/D-4319-2011
OI Bertoa, Manuel F./0000-0002-0950-5019; Piattini,
   Mario/0000-0002-7212-8279; Ruiz, Francisco/0000-0002-4923-7848; GENERO,
   MARCELA/0000-0002-6868-7465; Vallecillo, Antonio/0000-0002-8139-9986;
   Garcia, Felix/0000-0001-6460-0353; Calero, Coral/0000-0003-0728-4176
CR ABRAN A, 2002, P IWSM2002 MAGD GERM
   ALTHOFF KD, 1999, P 11 INT C SOFTW ENG
   Azuma M., 2001, PAPER PRESENTED ESCO
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P1106, DOI 10.1109/TSE.2002.1158285
   COALLIER F, 2003, CROSSTALK, V18, P15
   DECHAMPEAUX D, 1997, OBJECT ORIENTED DEV
   GARCIA F, 2004, DIAB04022 UCLM
   Gomez-Perez A., 1998, Knowledge Sharing and Reuse, The Handbook of Applied Expert Systems
   *ISO, 1993, INT STAND ISO VIM IN
   *ISO IEC, 2004, INT STAND ISO IEC 90
   JONES C, 2001, CROSSTALK, V16, P15
   Kim H. M., 1999, THESIS U TORONTO CAN
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   MacDonell SG, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P99, DOI 10.1109/METRIC.1997.637170
   MCGARRY J, 2002, OBJECTIVE INFORMATIO
   Pfleeger SL, 1997, IEEE SOFTWARE, V14, P25
   Staab S, 2001, IEEE INTELL SYST APP, V16, P26, DOI 10.1109/5254.912382
   TAUTZ C, 1998, 1598E IESE
   Uschold M, 1996, KNOWL ENG REV, V11, P93, DOI 10.1017/S0269888900007797
   Zuse Horst., 1998, A framework of software measurement
NR 21
TC 99
Z9 111
U1 0
U2 18
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 631
EP 644
DI 10.1016/j.infsof.2005.07.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700001
DA 2024-07-18
ER

PT J
AU Han, LX
   Chen, GH
AF Han, Lixin
   Chen, Guihai
TI The HWS hybrid web search
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information retrieval; search engine; Semantic Web
AB The widespread availability of machine understandable information on the Semantic Web offers some opportunities to improve traditional search. In this paper, we propose a hybrid web search architecture-HWS, which combines text search with semantic search to improve precision and recall. The components in HWS are described in detail, including several novel algorithms proposed to support the hybrid web search. (c) 2005 Elsevier B.V. All rights reserved.
C1 Nanjing Univ, Dept Math, Nanjing 210093, Peoples R China.
   Hohai Univ, Dept Comp Sci & Engn, Nanjing 210024, Peoples R China.
   Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
C3 Nanjing University; Hohai University; Nanjing University
RP Han, LX (corresponding author), Nanjing Univ, Dept Math, Nanjing 210093, Peoples R China.
EM lixinhan2002@yahoo.com.cn
OI Chen, Guihai/0000-0002-6934-1685
CR ALEMANMEZA B, 2003, SEM WEB DAT WORKSH P
   [Anonymous], 1998, 7 INT WORLD WIDE WEB
   [Anonymous], 1994, P 20 INT C VER LARG
   BERNERSLEE T, 2000, SCI AM, V1, P68
   BOX D, 2000, SIMPLE OBJECT AC MAY
   Brickley D., 2000, RESOURCE DESCRIPTION
   Brill E., 1992, 3 C APPL NAT LANG PR
   Carroll J., HPL2003146
   Cassidy Doireann, 2003, SYSTEMS INFORMATION, P13
   Chakrabarti S, 1999, COMPUTER, V32, P60, DOI 10.1109/2.781636
   Cho J, 1998, COMPUT NETWORKS ISDN, V30, P161, DOI 10.1016/S0169-7552(98)00108-1
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   GUHA R, 2003, P 12 INT WORLD WID W
   Han Lixin, 2002, Journal of the China Society for Scientific and Technical Information, V21, P524
   Han LX, 2004, LECT NOTES COMPUT SC, V3314, P1041
   HAN LX, 2005, GESTS INT T COMPUTER, V4, P223
   HAN LX, 2004, ADV WORKSH CONT COMP, P410
   HANDSCHUH S, 2002, WWW2002 MAY 7 11 200
   HEFLIN J, 2000, AAAI 2000 WORKSH AI
   Kobayashi M, 2000, ACM COMPUT SURV, V32, P144, DOI 10.1145/358923.358934
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   ROCHA C, 2004, HYBRID APPROACH SEAR, P374
   RODRIGUEZ MA, 2003, IEEE T KNOWLEDGE DAT, V15
   Tomita Masaru., 1985, EFFICIENT PARSING NA
   WILKINSON K, 2003, EFFICIENT RDF STORAG, P131
NR 25
TC 5
Z9 5
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 687
EP 695
DI 10.1016/j.infsof.2005.07.005
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700005
DA 2024-07-18
ER

PT J
AU Lai, R
   Kim, YS
AF Lai, Richard
   Kim, Yong Soo
TI A method for assigning a value to a communication protocol test case
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE formal description technique; protocol testing; Estelle; sensitivity
   analysis; test case value
AB One of the main problems in industrial testing is the enormous number of test cases derived from any complex communication protocol. Due to budget constraints and tight schedule, the number of test cases has to be within a certain limit. However, by having a limit on the number of test cases, it raises some issues. For instances, what criteria should be used for selecting the test cases? How can we ensure that important test cases have not been excluded? We are proposing that assigning a value to each of the test cases of a test suite can provide a solution. By doing so, the relative importance of each of the test cases can be ranked and an optimal test suite can then be designed. The value of a test case is to be measured in economic terms, which could be based on the probability that a particular case will occur, and the probability that an error is likely to be uncovered. This paper presents a method for assigning a value to a test case of a communication protocol: it is based on sensitivity analysis, which involves execution, infection and propagation probabilities. To illustrate the method, the results of applying it to the INRES protocol are presented. (c) 2005 Elsevier B.V. All rights reserved.
C1 La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
   Kyungwon Univ, Coll Software, Songnam 461701, South Korea.
C3 La Trobe University; Gachon University
RP Lai, R (corresponding author), La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
EM lai@latrobe.edu.au
CR AHO AV, 1988, PROTOCOL SPECIFICATI, V8
   ALILOVICCURGUS J, 1993, PROTOCOL TEST SYSTEM, V5
   BENJAMIN M, 1999, P 36 ACM IEEE C DES
   BOCHMANN GV, 1992, PROTOCOL TEST SYSTEM, V4
   BUDKOWSKI S, 1992, COMPUTER NETWORKS IS, V25
   *CCITT, 1991, INF TECHN  1 2 3 4 5
   DAHBURA AT, 1988, P IEEE INFOCOM, P71
   DeMillo R. A., 1978, IEEE COMPUTER
   DUBOUSQUET L, 2000, 13 INT C TEST COMM S
   FORGHANI B, 1989, P 2 INT WORKSH PROT
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   HIERONS RM, 2004, COMPUTER NETWORKS
   HOWDEN W, 1982, IEEE T SOFTWARE ENG
   *ISO IEC 8807, 1989, INF PROC SYST OP SYS
   *ISO IEC 9074, 1989, INF PROC SYST OP SYS
   KHOSHGOFTAAR TM, 1996, IEEE SOFTWARE
   KOCH B, 1998, 2 IEEE WORKSH IND ST
   LAI R, 1995, COMPUT NETWORKS ISDN, V27, P537, DOI 10.1016/0169-7552(93)E0110-Z
   LEDRU Y, 2001, P 16 IEEE INT C AUT
   LEE DY, 1991, IEEE T COMPUTERS, V40
   LOMBARDI F, 1992, IEEE T COMMUNICATION, V40
   MCALLISTER M, 1993, PROTOCOL TEST SYSTEM, V5
   MORELL L, 1988, P 2 WORKSH SOFTW TES
   MORELL L, 1987, P 5 ANN PAC NW SOFTW
   MORELL L, 1990, IEEE T SOFTWARE ENG
   MOTTELER H, 1994, PROTOCOL TEST SYSTEM, V6
   OFFUTT A, 1989, P ACM SIGSOFT 3 S SO
   PROBERT R, 1991, PROTOCOL TEST SYSTEM
   RAYNER D, 1987, COMPUT NETWORKS ISDN, V14, P79, DOI 10.1016/0169-7552(87)90087-0
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   SARIKAYA B, 1991, COMPUT COMMUN, V14, P534, DOI 10.1016/0140-3664(91)90111-D
   Sarikaya B., 1993, Principles of protocol engineering and conformance testing
   SHEN YN, 1990, PROTOCOL SPECIFICATI, V9
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15
   VOAS J, 1991, IEEE SOFTWARE, V8, P41, DOI 10.1109/52.73748
   VOAS J, 1992, J SOFTWARE TESTING V, P25
   Voas J. M., 1992, Proceedings of the Second Symposium on Assessment of Quality Software Development Tools (Cat. No.92TH0415-0), P297, DOI 10.1109/AQSDT.1992.205866
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   VOUNG ST, 1992, PROTOCOL TEST SYSTEM, V4
   1987, RECOMMENDATION Z SPE
NR 40
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2006
VL 48
IS 8
BP 645
EP 659
DI 10.1016/j.infsof.2005.07.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 056GS
UT WOS:000238510700002
DA 2024-07-18
ER

PT J
AU Grossman, M
   Aronson, JE
   McCarthy, RV
AF Grossman, M
   Aronson, JE
   McCarthy, RV
TI Does UML make the grade? Insights from the software development
   community
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE unified modeling language; UML; object-oriented analysis and design;
   OOAD; task-technology fit
ID TASK-TECHNOLOGY FIT
AB The Unified Modeling Language (UML) has become the de facto standard for systems development and has been promoted as a technology that will help solve some of the longstanding problems in the software industry. However, there is still little empirical evidence supporting the claim that UML is an effective approach to modeling software systems. Indeed, there is much anecdotal evidence suggesting the contrary, i.e. that UML is overly complex, inconsistent, incomplete and difficult to learn. This paper describes an investigation into the adoption and use of UML in the software development community. A web-based survey was conducted eliciting responses from users of UML worldwide. Results indicate a wide diversity of opinion regarding UML, reflecting the relative immaturity of the technology as well as the controversy over its effectiveness. This paper discusses the results of the survey and charts of the course for future research in UML usage. (c) 2004 Elsevier B.V. All rights reserved.
C1 Bridgewater State Coll, Dept Management, Bridgewater, MA 02325 USA.
   Univ Georgia, Terry Coll Business, Dept Management Informat Syst, Athens, GA 30602 USA.
   Quinnipiac Univ, Lender Sch Business, Hamden, CT 06518 USA.
C3 Massachusetts System of Public Higher Education; Bridgewater State
   University; University System of Georgia; University of Georgia;
   Quinnipiac University
RP Bridgewater State Coll, Dept Management, Bridgewater, MA 02325 USA.
EM mgrossman@bridgew.edu; jaronson@uga.edu; richard.mccarthy@quinnipiac.edu
CR Agarwal R, 1996, INT J HUM-COMPUT ST, V45, P639, DOI 10.1006/ijhc.1996.0072
   AKEHURST DH, 1999, OOPSLA 99 WORKSH RIG
   AMBLER S., 2001, OBJECT PRIMER APPL D, V2nd
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Cockburn A., 2000, Agile Software Development
   COOPRIDER JG, 1991, J MANAGE INFORM SYST, V7, P67
   DAMBRA J, 1999, P 5 AM C INF SYST MI
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   Dishaw MT, 1998, J SYST SOFTWARE, V44, P107, DOI 10.1016/S0164-1212(98)10048-1
   DISHAW MT, 2001, P 7 AM C INF SYST BO
   Dori D., 2001, Journal of Database Management, V12, P4, DOI 10.4018/jdm.2001010101
   ERICKSON J, 2003, P 9 AM C INF SYST TA, P1323
   Fedorowicz J, 1999, INFORM MANAGE, V35, P331, DOI 10.1016/S0378-7206(98)00098-6
   Ferratt TW, 1998, EUR J INFORM SYST, V7, P123, DOI 10.1057/palgrave.ejis.3000288
   Fowler M., 2004, UML DISTILLED, VThird
   GARCEAU L, 1993, J SYST MANAGE, V44, P25
   Glinz M, 2000, TENTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, P11, DOI 10.1109/IWSSD.2000.891122
   GOODHUE DL, 1995, MIS QUART, V19, P213, DOI 10.2307/249689
   Goodhue DL, 1998, DECISION SCI, V29, P105, DOI 10.1111/j.1540-5915.1998.tb01346.x
   GROSSMAN M, 2003, 4 ANN GLOB INF TECHN, P294
   GUIN TD, 2002, IMRO J ONLINE RES
   HALPERN T, 2001, P 34 HAW INT C SYST, P1
   Hardgrave BC, 1999, ASSOCIATION FOR INFORMATION SYSTEMS - PROCEEDINGS OF THE FIFTH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 1999), P568
   HITZ M, 1998, UN MOD LANG UML 98 N
   Johnson RA, 2000, COMMUN ACM, V43, P68, DOI 10.1145/352183.352205
   Johnson RA, 1999, J SYST SOFTWARE, V48, P5, DOI 10.1016/S0164-1212(99)00041-2
   Kobryn C, 2002, COMMUN ACM, V45, P107
   Larman Craig., 2002, APPLYING UML PATTERN, V3nd
   MCCARTHY RV, 2001, P 7 AM C INF SYST BO
   MCCARTHY RV, 2002, P AM C INF SYST DALL, P40
   Murthy U.S., 2000, P 33 ANN HAW INT C S, VVolume 2, P10
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Shirani AI, 1999, INFORM MANAGE, V36, P139, DOI 10.1016/S0378-7206(99)00015-4
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   SIMONS AJH, 1999, PRECISE BEHAV SPECIF
   SMYTH R, 2001, 9 EUR C INF SYST BLE
   SRIVIHOK A, 2000, P AUSTR C INF SYST B
   THOMPSON RL, 1991, MIS QUART, V15, P125, DOI 10.2307/249443
   TJAHJONO B, 2001, P 12 ANN C PROD OP M
   USHAKOV IB, 1998, OOPSLA 98 MID YEAR W
   WANG S, 2001, P 7 AM C INF SYST BO, P1289
   Wells JD, 2003, P 36 ANN HAW INT C S
   Yourdon Edward., 1996, Rise and Resurrection of the American Programmer
   Zigurs I., 1999, Data Base for Advances in Information Systems, V30, P34
NR 45
TC 62
Z9 69
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2005
VL 47
IS 6
BP 383
EP 397
DI 10.1016/j.infsof.2004.09.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 916VO
UT WOS:000228414700002
DA 2024-07-18
ER

PT J
AU Hatton, L
AF Hatton, L
TI Safer language subsets: an overview and a case history, MISRA C
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE safer language subsets; rule categories; rule signal to noise; embedded
   control systems
AB This paper gives an overview of safer language subsets in general and considers one widely-used one, MISRA C, in particular. The rationale, specification, implementation and enforcement of a safer language subset each introduce particular problems which has led to their inconsistent take-up over the years even in applications which may be safety-related and definitely need subset restrictions. Each of these areas will be discussed illustrating practical problems which may be encountered with standards in general before focussing on the widely used MISRA C standard [MISRA C guidelines (1998)]. The approach taken is necessarily empirical and where it is able quotes measurements.
   The real objective of this paper is to produce an empirically based taxonomy of programming language subset rules to bring all these issues together and promote the concept that a safer subset must be based on measurement principles however crudely they are practised currently in software development.
   The concept of signal to noise ratio of a programming standard is also introduced. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Kent, Comp Lab, Canterbury, Kent, England.
C3 University of Kent
RP Hatton, L (corresponding author), Oakwood Comp Assoc Ltd, FBCS, Oakwood KT3 3AJ, England.
EM l.hatton@ukc.ac.uk
CR [Anonymous], 1990, Software testing techniques {
   Hatton L, 1997, IEEE COMPUT SCI ENG, V4, P27, DOI 10.1109/99.609829
   HATTON L, 2002, EXEMPLARY TEST SUITE
   HATTON L, 1995, DEVELOPING SOFTWARE
   KOENIG A, 1989, TRAPS PITFALLS
   *MISRA C, 1998, MISRA C GUID
   PARKER S, 2001, COMPARISON MISRA C T
   Pfleeger SL, 1997, COMPUTER, V30, P33, DOI 10.1109/2.566148
   SPULER D, 1995, TESTING RELIABILITY
   Van der Linden P., 1994, EXPERT C PROGRAMMING
   YOURDON E, 1979, CLASSICS SOFT ENG
NR 11
TC 25
Z9 28
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2004
VL 46
IS 7
BP 465
EP 472
DI 10.1016/j.infsof.2003.09.016
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 809AM
UT WOS:000220609600004
DA 2024-07-18
ER

PT J
AU Mbale, J
   Fei, XX
   Chung, DS
AF Mbale, J
   Fei, XX
   Chung, DS
TI Global intelligence benevolent builder (GIBB): a system automating
   integration of heterogeneous classical databases and web
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE automation; agents; intelligent benevolent architecture; sites;
   TIT-Integrator
AB In this paper we investigate highly sophisticated mechanisms that merge and automate interoperability of heterogeneity classical database systems together with the World Wide Web as one world. In particular, we introduce the global intelligence benevolent builder (GIBB) system that employs Intelligent Benevolent Architecture (IBA), which is comprised of assertions, integration rules, conceptual model constructs and agents. IBAs boost the components' versatility to reconcile the semantics involved in data sharing in order to withstand the dynamic computer technology in the present and future information age. Due to the IBAs power of intelligence, and in order to save costs and time, GIBB also has the capability to filter out and process only the relevant operational sources like preferences (i.e. customer's interest) from the sites. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Harbin Inst Technol, Sch Comp Sci & Technol, Harbin 150001, Peoples R China.
C3 Harbin Institute of Technology
RP Mbale, J (corresponding author), Harbin Inst Technol, Sch Comp Sci & Technol, 13th Flats,Room 1311,92 W Dazhi St,Nangang Distri, Harbin 150001, Peoples R China.
EM mbalej@www.com; xiaofei@hope.hit.edu.cn; dsc@hope.hit.edu.cn
CR BALABANOVIC M, 1997, COMMUNICATIONS ACM, V4
   BALABANOVIC M, 1997, COMMUNICATIONS ACM, V40
   Beneventano Domenico., 2000, VLDB 2000 P 26 INT C, P611
   BERGAMASCHI S, 2001, DATA KNOWLEDGE ENG D, V36, P249
   Bray Tim., 1998, EXTENSIBLE MARKUP LA
   BREITBART Y, 1990, SIGMOD RECORD, V19
   BUCCAFURI F, 2002, AGENT MODELING HETER, P1168
   ERIKSSON J, 1998, UNPUB AG MED EL TRAD
   GAECIASOLOCO M, 1996, OBJECT ORIENTED MULT, P129
   JACSO P, 1998, SHOPBOTS SHOPPING RO, P6
   JOACHIMS T, 1997, P 15 INT JOINT C ART, P770
   Li WS, 2000, DATA KNOWL ENG, V33, P49, DOI 10.1016/S0169-023X(99)00044-0
   LIEBERMAN H, 1995, P INT JOINT C ART IN, V1, P924
   LITWIN W, 1990, COMPUTING SURVEYS, V22
   Madhavan J., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P49
   MCCARTHY WE, 1982, ACCOUNT REV, V57, P554
   Palopoli L, 2001, PROC INT CONF DATA, P330, DOI 10.1109/ICDE.2001.914845
   Rosaci D, 2002, IDEAS 2002: INTERNATIONAL DATABASE ENGINEERING AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P202, DOI 10.1109/IDEAS.2002.1029673
   SHETH AP, 1990, ACM COMPUTING SURVEY, V22
   Somlo G. L., 2001, Proceedings of the Fifth International Conference on Autonomous Agents, P262, DOI 10.1145/375735.376306
   SPACCAPIETRA S, 1992, VERY LARGE DATA BASE, V1, P1
   TERRACINA G, 2000, P INT C MAN DAT COMA, P21
   WAGNER G, 1999, ORIENTED INFORMATION
   WAGNER G, 2002, AGENT OBJECT RELATIO, P39
   [No title captured]
NR 25
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2003
VL 45
IS 9
BP 559
EP 570
DI 10.1016/S0950-5849(03)00034-X
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 699RL
UT WOS:000184069700002
DA 2024-07-18
ER

PT J
AU Lin, QP
   Low, CP
   Ng, JM
   Bu, J
   Liu, XH
AF Lin, QP
   Low, CP
   Ng, JM
   Bu, J
   Liu, XH
TI Multiuser collaborative work in virtual environment based CASE tool
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE concurrency control; collaborative virtual environment; computer aided
   software engineering tool; software modeling; database design
ID SOFTWARE
AB VRCASE is a virtual environment based Computer Aided Software Engineering (CASE) tool. It provides a 3D multiuser collaborative software modeling environment with automatic object-class abstraction, class diagram generation, and C++ skeleton generation facilities for assisting Object-Oriented software development. It allows multiple concurrent users to model software system collaboratively. To achieve efficient collaborative software development in VRCASE, we have proposed and implemented a Fine-grained locking and notification mechanism together with visual indicators to maintain system consistency among multiple concurrent users. The system evaluation shows that our approach can effectively support multiuser collaborative software design in VRCASE. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Naynang Technol Univ, Sch Elect & Elect Engn, Informat Commun Inst Singapore, Naynang 639798, Singapore.
C3 Nanyang Technological University
RP Naynang Technol Univ, Sch Elect & Elect Engn, Informat Commun Inst Singapore, Naynang 639798, Singapore.
EM iqplin@ntu.edu.sg
RI Low, ChorPing/A-5086-2011
CR *ADV SOFTW TECHN, 2001, GDPRO LIN DOC
   Brothers L., 1990, P 1990 ACM C COMPUTE, P169
   BU J, 2001, IASTED INT C APPL IN, P202
   COAD P, 1997, OBJECT MODELS STRATE
   ELLIS CA, 1989, SIGMOD REC, V18, P399, DOI 10.1145/66926.66963
   FUGETTA A, 1993, IEEE COMPUT, V26, P25
   Funkhouser T. A., 1995, Proceedings 1995 Symposium on Interactive 3D Graphics, P85, DOI 10.1145/199404.199418
   Gil J, 1998, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.1998.671107
   GINTELL JW, 1995, SEVENTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P350
   Gogolla M, 1999, LECT NOTES COMPUT SC, V1723, P489
   *H KOIK LABS, 1997, VIS 3D VIS PAR LIND
   IRIS V, 1995, COMMUN ACM, V38, P83
   KIM TH, 1997, P APSEC 97 ICSC 97 I, P427
   Koike H., 1992, VISUAL COMPUTING, P151
   KROHN U, 1996, P ACM INT WORKSH ADV
   LIN Q, 2000, 2098 NAN TECHN U SIN
   MACEDONIA M, 1993, PRESENCE, V3, P265
   Maxfield J, 1998, PRESENCE-TELEOP VIRT, V7, P241, DOI 10.1162/105474698565695
   Munson J., 1996, COMPUT SUPP COOP W J, P278
   NORMAN RJ, 1992, IEEE SOFTWARE, V9, P13
   *U NEW BRUNSW, 1995, GRAPH VIS 3D PROJ ON
   WANG W, 2000, P EUROMEDIA 2000 ANT, P74
   Young P, 1998, PROG COMPREHEN, P19, DOI 10.1109/WPC.1998.693276
NR 23
TC 3
Z9 4
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 1
PY 2003
VL 45
IS 5
BP 253
EP 267
DI 10.1016/S0950-5849(03)00017-X
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668KQ
UT WOS:000182290200003
DA 2024-07-18
ER

PT J
AU Akbar, MA
   Khan, AA
   Shameem, M
   Nadeem, M
AF Akbar, Muhammad Azeem
   Khan, Arif Ali
   Shameem, Mohammad
   Nadeem, Mohammad
TI Genetic model-based success probability prediction of quantum software
   development projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quantum computing (QC); Quantum software development (QSD); Variables;
   Prediction model; Genetic algorithm
ID GUIDELINES; ALGORITHM
AB Context: Quantum computing (QC) holds the potential to revolutionize computing by solving complex problems exponentially faster than classical computers, transforming fields such as cryptography, optimization, and scientific simulations. To unlock the potential benefits of QC, quantum software development (QSD) enables harnessing its power, further driving innovation across diverse domains. To ensure successful QSD projects, it is crucial to concentrate on key variables.Objective: This study aims to identify key variables in QSD and develop a model for predicting the success probability of QSD projects.Methodology: We identified key QSD variables from existing literature to achieve these objectives and collected expert insights using a survey instrument. We then analyzed these variables using an optimization model, i.e., Genetic Algorithm (GA), with two different prediction methods the Naive Bayes Classifier (NBC) and Logistic Regression (LR).Results: The results of success probability prediction models indicate that as the QSD process matures, project success probability significantly increases, and costs are notably reduced. Furthermore, the best fitness rankings for each QSD project variable determined using NBC and LR indicated a strong positive correlation (rs=0.945). The t-test results (t = 0.851, p = 0.402>0.05) show no significant differences between the rankings calculated by the two methods (NBC and LR).Conclusion: The results reveal that the developed success probability prediction model, based on 14 identified QSD project variables, highlights the areas where practitioners need to focus more in order to facilitate the costeffective and successful implementation of QSD projects.
C1 [Akbar, Muhammad Azeem] Lappeenranta Lahti Univ Technol, Software Engn Dept, Lappeenranta 53851, Finland.
   [Khan, Arif Ali] Univ Oulu, M3S Empir Software Engn Res Unit, Oulu 90014, Finland.
   [Shameem, Mohammad] MIT World Peace Univ, Dept Comp Sci & Applicat Dr Vishwanath Karad, Pune 411038, Maharashtra, India.
   [Nadeem, Mohammad] Aligarh Muslim Univ, Dept Comp Sci, Aligarh 202002, Uttar Pradesh, India.
C3 Lappeenranta-Lahti University of Technology LUT; University of Oulu; Dr.
   Vishwanath Karad MIT World Peace University; Aligarh Muslim University
RP Akbar, MA (corresponding author), Lappeenranta Lahti Univ Technol, Software Engn Dept, Lappeenranta 53851, Finland.
EM azeem.akbar@lut.fi
RI Khan, Arif Ali/ABG-2862-2020
OI Khan, Arif Ali/0000-0002-8479-1481
FU PHP Foundation [20220006]
FX The PHP Foundation supports this research with grant #20220006.
CR Abe S., 2006, 28th International Conference on Software Engineering Proceedings, P600, DOI 10.1145/1134285.1134371
   Abhari Ali, 2012, Scaffold: quantum programming language
   Agarwal P., 2021, inBignData Analytics, P113
   Akbar M.A., 2022, Classical to quantum software migration journey begins: a conceptual readiness model
   Akbar M. A., 2022, Inf. Technol. Manag., P1
   Akbar M.A., 2022, arXiv, DOI [10.48550/arxiv.2211.13990, DOI 10.48550/ARXIV.2211.13990]
   Akbar MA, 2023, SOFT COMPUT, V27, P1907, DOI 10.1007/s00500-020-05150-w
   Akbar MA, 2022, LECT NOTES COMPUT SC, V13709, P563, DOI 10.1007/978-3-031-21388-5_42
   Akbar MA, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106894
   Ali Shaukat, 2022, Communications of the ACM, V65, P84, DOI 10.1145/3512340
   Ali Shaukat, 2020, APEQS 2020: Proceedings of the 1st SIGSOFT International Workshop on Architectures and Paradigms for Engineering Quantum Software, P14, DOI 10.1145/3412451.3428499
   Arias D, 2023, NEUROCOMPUTING, V538, DOI 10.1016/j.neucom.2023.03.060
   Barzen J., 2022, Quantum workforce: human resources for the future of computing
   Bayerstadler A, 2021, EPJ QUANTUM TECHNOL, V8, DOI 10.1140/epjqt/s40507-021-00114-x
   Berrar D., 2018, ENCY BIOINFORMATICS, V403, P412, DOI [10.1016/B978-0-12-809633-8.20473-1, DOI 10.1016/B978-0-12-809633-8.20473-1]
   Biswas R, 2017, PARALLEL COMPUT, V64, P81, DOI 10.1016/j.parco.2016.11.002
   Björnson K, 2019, SOFTWAREX, V9, P205, DOI 10.1016/j.softx.2019.02.005
   Cerpa N, 2016, J SYST SOFTWARE, V112, P48, DOI 10.1016/j.jss.2015.10.011
   Cheng MY, 2010, AUTOMAT CONSTR, V19, P302, DOI 10.1016/j.autcon.2009.12.003
   de la Barrera A.G., 2022, Quantum Software Engineering, P167
   de Winter JCF, 2016, PSYCHOL METHODS, V21, P273, DOI 10.1037/met0000079
   El Aoun MR, 2021, PROC IEEE INT CONF S, P343, DOI 10.1109/ICSME52107.2021.00037
   Fingerhuth M, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0208561
   de la Barrera AG, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2419
   Hasson F, 2000, J ADV NURS, V32, P1008, DOI 10.1046/j.1365-2648.2000.01567.x
   Heim B, 2020, NAT REV PHYS, V2, P709, DOI 10.1038/s42254-020-00245-7
   Hevia JL, 2021, IEEE SOFTWARE, V38, P7, DOI 10.1109/MS.2021.3087755
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Hu P, 2020, KNOWL-BASED SYST, V195, DOI 10.1016/j.knosys.2020.105746
   JavadiAbhari A, 2015, PARALLEL COMPUT, V45, P2, DOI 10.1016/j.parco.2014.12.001
   Kaur M, 2022, OPT ENG, V61, DOI 10.1117/1.OE.61.8.081806
   Khan A.A., 2023, P IEEE T COMP SOC SY
   Khan A.A., 2022, Software architecture for quantum computing systems-a systematic review
   Khan AA, 2023, J SYST SOFTWARE, V201, DOI 10.1016/j.jss.2023.111682
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan AA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2242
   Khan AA, 2019, APPL SOFT COMPUT, V83, DOI 10.1016/j.asoc.2019.105648
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Ko CH, 2007, J CONSTR ENG M, V133, P316, DOI 10.1061/(ASCE)0733-9364(2007)133:4(316)
   Komaki GM, 2015, J COMPUT SCI-NETH, V8, P109, DOI 10.1016/j.jocs.2015.03.011
   Kop M., 2022, BTLJ Comment, P101
   Kop M, 2022, J INTELLET PROP LAW, V17, P613, DOI 10.1093/jiplp/jpac060
   Kotsiantis SB, 2006, ARTIF INTELL REV, V26, P159, DOI 10.1007/S10462-007-9052-3
   Kumar A, 2023, EVOL SYST-GER, V14, P141, DOI 10.1007/s12530-022-09432-6
   Li Y, 2016, PROCEEDINGS OF THE NINTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'16), P247, DOI 10.1145/2835776.2835791
   Hevia JL, 2022, SOFTWARE PRACT EXPER, V52, P1517, DOI 10.1002/spe.3064
   Mahmoodabadi MJ, 2013, APPL SOFT COMPUT, V13, P2577, DOI 10.1016/j.asoc.2012.11.028
   Miranskyy Andriy, 2021, arXiv
   Mirjalili S, 2019, STUD COMPUT INTELL, V780, P43, DOI 10.1007/978-3-319-93025-1_4
   Mirjalili S, 2014, ADV ENG SOFTW, V69, P46, DOI 10.1016/j.advengsoft.2013.12.007
   Mitarai K, 2018, PHYS REV A, V98, DOI 10.1103/PhysRevA.98.032309
   Mitchell M., 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   Moguel E, 2022, SOFTWARE QUAL J, V30, P983, DOI 10.1007/s11219-022-09589-y
   Moguel Enrique, 2020, QCE, P5
   Montanaro A, 2016, NPJ QUANTUM INFORM, V2, DOI 10.1038/npjqi.2015.23
   Myers L., 2004, Encyclopedia of statistical sciences, DOI [10.1002/0471667196.ess5050, DOI 10.1002/0471667196.ESS5050]
   Mykhailova M., 2021, P 2 QUANTUM SOFTWARE, P81
   Pérez-Castillo R, 2021, ADV ENG SOFTW, V151, DOI 10.1016/j.advengsoft.2020.102933
   Peterssen G., 2022, Quantum Software Engineering, P251
   Peterssen G., 2020, P 1 INT WORKSH QUANT, P6
   Piattini Mario, 2020, ACM SIGSOFT Software Engineering Notes, V45, P12, DOI 10.1145/3402127.3402131
   Portmann C, 2022, REV MOD PHYS, V94, DOI 10.1103/RevModPhys.94.025008
   Qiskit, 2021, Qiskit global summer school on quantum machine learning
   Reyes F, 2011, J SYST SOFTWARE, V84, P775, DOI 10.1016/j.jss.2010.12.036
   Riel H, 2021, INT EL DEVICES MEET, DOI 10.1109/IEDM19574.2021.9720538
   Sarkar A., 2022, arXiv, DOI [10.48550/arxiv.2212.00619, DOI 10.48550/ARXIV.2212.00619]
   Scheerer M, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON QUANTUM SOFTWARE (IEEE QSW 2022), P52, DOI 10.1109/QSW55613.2022.00023
   Serrano M., 2022, Quantum software engineering
   Serrano MA, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3548679
   Shameem M, 2023, APPL SOFT COMPUT, V135, DOI 10.1016/j.asoc.2023.109998
   Shameem M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1979
   Stancliffe RJ, 2010, AUGMENT ALTERN COMM, V26, P87, DOI 10.3109/07434618.2010.481564
   Teo KH, 2021, J APPL PHYS, V130, DOI 10.1063/5.0061555
   Verner JM, 2007, INFORM SOFTWARE TECH, V49, P181, DOI 10.1016/j.infsof.2006.05.001
   Vietz Daniel, 2021, Computational Science - ICCS 2021. 21st International Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12747), P127, DOI 10.1007/978-3-030-77980-1_10
   Weder Benjamin, 2020, APEQS 2020: Proceedings of the 1st SIGSOFT International Workshop on Architectures and Paradigms for Engineering Quantum Software, P2, DOI 10.1145/3412451.3428497
   Weder B., 2022, Quantum Software Engineering, P61, DOI DOI 10.1007/978-3-031-05324-54
   Weder B, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P1, DOI 10.1109/ICWS53863.2021.00015
   Wille R, 2016, ICCAD-IEEE ACM INT, DOI 10.1145/2966986.2980099
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Wright KB, 2005, J COMPUT-MEDIAT COMM, V10
   Zhao Jianjun, 2020, arXiv
NR 83
TC 2
Z9 2
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107352
DI 10.1016/j.infsof.2023.107352
EA OCT 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z0NP7
UT WOS:001109140200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Cardozo, N
   Dusparic, I
AF Cardozo, Nicolas
   Dusparic, Ivana
TI Auto-COP: Adaptation generation in Context-oriented Programming using
   Reinforcement Learning options
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context-oriented programming; Reinforcement learning; Macro actions;
   Option learning; Self-adaptive systems
ID SYSTEMS
AB Context: Self-adaptive software systems continuously adapt in response to internal and external changes in their execution environment, captured as contexts. The Context-oriented Programming (COP) paradigm posits a technique for the development of self-adaptive systems, capturing their main characteristics with specialized programming language constructs. In COP, adaptations are specified as independent modules that are composed in and out of the base system as contexts are activated and deactivated in response to sensed circumstances from the surrounding environment. However, the definition of adaptations, their contexts and associated specialized behavior, need to be specified at design time. In complex cyber-physical systems this is intractable, if not impossible, due to new unpredicted operating conditions arising.Objective: In this paper, we propose Auto-COP, a new technique to enable generation of adaptations at run time. Auto-COP uses Reinforcement Learning (RL) options to build action sequences, based on the previous instances of the system execution (for example, atomic system actions enacted by human operators). Options are further explored in interaction with the environment, and the most suitable options for each context are used to generate the adaptations, exploiting COP abstractions.Method: To validate Auto-COP, we present two case studies exhibiting different system characteristics and application domains: a driving assistant and a robot delivery system. We present examples of Auto-COP to illustrate the types of circumstances (contexts) requiring adaptation at run time, and the corresponding generated adaptations for each context. Results: We confirm that the generated adaptations exhibit correct system behavior measured by domain specific performance metrics (e.g., conformance to specified speed limit), while reducing the number of required execution/actuation steps by a factor of two showing that the adaptations are regularly selected by the running system as adaptive behavior is more appropriate than the execution of atomic actions.Conclusion: Therefore, we demonstrate that Auto-COP is able to increase system adaptivity by enabling runtime generation of new adaptations for conditions detected at run time, while retaining the modularity offered by COP languages, and reducing the upfront specification required by system developers.
C1 [Cardozo, Nicolas] Univ Los Andes, Syst & Comp Engn Dept, Bogota, Colombia.
   [Dusparic, Ivana] Trinity Coll Dublin, Sch Comp Sci & Stat, Dublin, Ireland.
C3 Universidad de los Andes (Colombia); Trinity College Dublin
RP Cardozo, N (corresponding author), Univ Los Andes, Syst & Comp Engn Dept, Bogota, Colombia.
EM n.cardozo@uniandes.edu.co; ivana.dusparic@scss.tcd.ie
RI Dusparic, Ivana/AAB-7268-2022
OI Cardozo, Nicolas/0000-0002-1094-9952; Dusparic,
   Ivana/0000-0003-0621-5400
CR [Anonymous], 2002, P INT C MACH LEARN
   [Anonymous], 2013, P INT C ASP OR SOFTW, DOI [DOI 10.1145/2451436, DOI 10.1145/2451436.2451461, 10.1145/2451436.2451461]
   Appeltauer Malte, 2011, Computer Software, V28, P272
   Appeltauer Malte, 2009, P 1 ACM INT WORKSHOP, P1, DOI DOI 10.1145/1562112.1562118
   Bashari M, 2018, J SYST SOFTWARE, V144, P84, DOI 10.1016/j.jss.2018.05.069
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Caporuscio M, 2016, LECT NOTES COMPUT SC, V9846, P53, DOI 10.1007/978-3-319-44482-6_4
   Cardozo N., 2023, C AI ENG SOFTW ENG A, P1
   Cardozo N., 2020, P INT S SOFTW ENG AD
   Cardozo N., 2013, THESIS U CATHOLIQUE
   Cardozo N., 2011, P INT WORKSH CONT OR, DOI DOI 10.1145/2068736.2068738
   Cardozo N, 2021, 2021 INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2021), P252, DOI 10.1109/SEAMS51251.2021.00041
   Cardozo N, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS COMPANION (ACSOS-C 2020), P133, DOI 10.1109/ACSOS-C51401.2020.00044
   Cardozo N, 2017, PROCEEDINGS OF THE 9TH INTERNATIONAL WORKSHOP ON CONTEXT-ORIENTED PROGRAMMING, P1
   Cruz-Benito J, 2021, AI-BASEL, V2, P1, DOI 10.3390/ai2010001
   D'Angelo M, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P13, DOI 10.1109/SEAMS.2019.00012
   Devanbu P, 2020, Arxiv, DOI arXiv:2009.08525
   Duhoux B, 2019, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'19), DOI 10.1145/3319499.3328240
   Dusparic I, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168271
   Elfwing S., 2004, 2004 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (IEEE Cat. No.04CH37566), P3164
   Fikes R.E., 1993, LEARNING EXECUTING G, P485
   Filho R. R., 2022, I W S E ADAP SM SYS, P36, DOI DOI 10.1145/3524844.3528079
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   Girgin Sertan, 2005, INT C COMP INT MOD C, V1, P371
   Griffith Shane, 2013, Advances in neural information processing systems, V26
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Hirschfeld R, 2008, LECT NOTES COMPUT SC, V5235, P396, DOI 10.1007/978-3-540-88643-3_9
   Jamshidi P, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P39, DOI 10.1109/SEAMS.2019.00015
   Kamina T., 2014, Proceedings of the 13th International Conference on Modularity, MODULARITY'14, page, P85
   Leger P, 2023, INFORM SOFTWARE TECH, V156, DOI 10.1016/j.infsof.2022.107132
   Marinescu A, 2017, ACM T AUTON ADAP SYS, V12, DOI 10.1145/3070861
   McGovern A., 1998, MACROACTIONS REINFOR
   Milani S, 2020, Arxiv, DOI [arXiv:2003.05012, DOI arXiv:2003.05012.v4]
   Palm A, 2020, LECT NOTES COMPUT SC, V12127, P169, DOI 10.1007/978-3-030-49435-3_11
   Precup Doina, 2002, INT S ABSTRACTION RE, P212, DOI DOI 10.1007/3-540-45622-8_
   Randlov J., 1998, P INT C NEUR INF PRO, P1045
   Restuccia F, 2020, IEEE INFOCOM SER, P844, DOI [10.1109/infocom41043.2020.9155461, 10.1109/INFOCOM41043.2020.9155461]
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Salvaneschi G, 2012, Arxiv, DOI arXiv:1105.0069
   Salvaneschi G, 2012, J SYST SOFTWARE, V85, P1801, DOI 10.1016/j.jss.2012.03.024
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   Schmid Sanny, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P102, DOI 10.1109/SEAMS.2017.20
   Sculley D., 2014, SE4ML 14
   Sharma Prerna, 2020, International Conference on Innovative Computing and Communications. Proceedings of ICICC 2019. Advances in Intelligent Systems and Computing (AISC 1087), P687, DOI 10.1007/978-981-15-1286-5_61
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Sutton Richard S, 1998, ICML, V98, P556
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tay Y., 2019, Adv. Neural Inf. Process. Syst., V32
   Tesauro G, 2007, IEEE INTERNET COMPUT, V11, P22, DOI 10.1109/MIC.2007.21
   Tiwang R, 2019, IEEE SOUTHEASTCON, DOI 10.1109/southeastcon42311.2019.9020360
   Villegas NM, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P17, DOI 10.1016/B978-0-12-802855-1.00002-2
   Wang HB, 2019, KNOWL-BASED SYST, V180, P75, DOI 10.1016/j.knosys.2019.05.020
   Wang WH, 2022, IEEE T SOFTWARE ENG, V48, P102, DOI 10.1109/TSE.2020.2979701
   Watanabe H., 2015, P 7 INT WORKSH CONT
NR 54
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107308
DI 10.1016/j.infsof.2023.107308
EA AUG 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S2UT7
UT WOS:001069780500001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Rostami, T
   Jalili, S
AF Rostami, Taha
   Jalili, Saeed
TI FrMi: Fault-revealing Mutant Identification using killability severity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Mutation testing; Fault-revealing mutants; Machine
   learning
AB Context: Mutation testing is a powerful method used in software testing for various activities, such as guidance for test case generation and test suite quality assessment. However, a vast number of mutants, most unrelated to real faults, threaten the scalability and validity of the method. Over the decades, researchers have proposed various approaches to alleviate these problems, most of which have almost the same performance in practice. To overcome this issue, recently predicting a category of mutants named fault-revealing mutants has been proposed, which outperforms other methods in terms of real-fault revelation ability. Although recent research shows the usefulness of targeting this type of mutant, they are scarce, which makes predictions of them with higher accuracy challengingObjective: This paper aims to propose a method that can predict fault-revealing mutants with higher accuracy compared to the state-of-the-art method.Methods: To tackle this challenge, a feature representing the difficulty of killing a mutant is added as a new feature to complement the state-of-the-art feature set. Then a method based on ensemble learning is proposed that uses this feature for fault-revealing mutants' prediction.Results: According to our experimental results, the proposed method outperforms the state-of-the-art method regarding area under a receiver operating characteristic curve (AUC) value on the Codeflaws and CoRBench data sets by 7.09% and 8.97%, respectively. Conclusion: It is concluded that the proposed method, which includes a new feature and an ensemble-learning approach, enhances the accuracy of predicting fault-revealing mutants in software testing. This is achieved by incorporating the difficulty of killing a mutant as a feature, which complements the existing feature set used in state-of-the-art methods. The experimental results demonstrate that the proposed method outperforms the state-of-the-art method on two datasets, Codeflaws and CoRBench, indicating that it has the potential to be applied in practical software testing scenarios.
C1 [Rostami, Taha; Jalili, Saeed] Tarbiat Modares Univ, Comp Engn Dept, Tehran, Iran.
C3 Tarbiat Modares University
RP Jalili, S (corresponding author), Tarbiat Modares Univ, Comp Engn Dept, Tehran, Iran.
EM taha.rostami@modares.ac.ir; sjalili@modares.ac.ir
OI Jalili, Saeed/0000-0002-4333-3097
CR Aghamohammadi A, 2021, SOFTW TEST VERIF REL, DOI 10.1002/stvr.1784
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   [Anonymous], 2008, P OSDI
   Arcaini P, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1664
   Chekam TT, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3425497
   Chekam TT, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1080, DOI 10.1145/3338906.3341180
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chen W., 2009, ADV NEURAL INFORM PR, V22, P315, DOI [DOI 10.5555/2984093.2984129, 10.5555/2984093.2984129]
   Dallilo LD, 2019, SAST 2019: PROCEEDINGS OF THE IV BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, P12, DOI 10.1145/3356317.3356323
   Degiovanni R, 2022, IEEE ICST WORKSHOP, P160, DOI 10.1109/ICSTW55395.2022.00039
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Garg A, 2023, IEEE T SOFTWARE ENG, V49, P24, DOI 10.1109/TSE.2022.3140510
   Gopinath R, 2016, PROC INT CONF SOFTW, P511, DOI 10.1145/2884781.2884787
   Hariri F, 2018, IEEE INT CONF SOFTW, P285, DOI 10.1109/ICST.2018.00036
   Hussain S., 2008, MUTATION CLUSTERING
   Jammalamadaka K, 2022, SOFTWARE PRACT EXPER, V52, P576, DOI 10.1002/spe.3038
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kar P., 2015, ARXIV
   Kaufman SJ, 2022, PROC INT CONF SOFTW, P1743, DOI 10.1145/3510003.3510187
   Khanfir A., 2020, ARXIV
   Kim J, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3510417
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Majd A, 2020, EXPERT SYST APPL, V147, DOI 10.1016/j.eswa.2019.113156
   Mao DY, 2019, IEEE INT CONF SOFTW, P160, DOI 10.1109/ICST.2019.00025
   Naeem MR, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2238
   Naeem MR, 2019, IEEE ACCESS, V7, P158264, DOI 10.1109/ACCESS.2019.2950171
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papadakis M, 2018, IEEE ICST WORKSHOP, P32, DOI 10.1109/ICSTW.2018.00025
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Patra J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P906, DOI 10.1145/3468264.3468623
   Pinheiro P, 2020, SCI COMPUT PROGRAM, V191, DOI 10.1016/j.scico.2020.102418
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Rani S, 2022, EVOL INTELL, V15, P2105, DOI 10.1007/s12065-021-00618-6
   Reichstaller A, 2018, INT WORKSH AUTOMAT, P64, DOI 10.1145/3194733.3194739
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Shin D, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1695
   Shwartz-Ziv R, 2022, INFORM FUSION, V81, P84, DOI 10.1016/j.inffus.2021.11.011
   Tasche D., 2018, ARXIV
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Wang HF, 2022, IEEE T RELIAB, V71, P1157, DOI 10.1109/TR.2022.3162039
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Wu XX, 2018, PR IEEE I C PROGR IN, P364, DOI 10.1109/PIC.2018.8706335
   Yu M, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1692
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang P, 2022, IEEE T SOFTWARE ENG, V48, P1067, DOI 10.1109/TSE.2020.3010361
NR 50
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107307
DI 10.1016/j.infsof.2023.107307
EA AUG 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R2IS3
UT WOS:001062638900001
DA 2024-07-18
ER

PT J
AU Gong, YD
   Liu, GZ
   Xue, YZ
   Li, R
   Meng, LZ
AF Gong, Youdi
   Liu, Guangzhen
   Xue, Yunzhi
   Li, Rui
   Meng, Lingzhong
TI A survey on dataset quality in machine learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dataset; Dataset quality; Machine Learning
AB With the rise of big data, the quality of datasets has become a crucial factor affecting the performance of machine learning models. High-quality datasets are essential for the realization of data value. This survey article summarizes the research direction of dataset quality in machine learning, including the definition of related concepts, analysis of quality issues and risks, and a review of dataset quality dimensions and metrics throughout the dataset lifecycle and a review of dataset quality metrics analyzed from a dataset lifecycle perspective and summarized in literatures. Furthermore, this article introduces a comprehensive quality evaluation process, which includes a framework for dataset quality evaluation with dimensions and metrics, computation methods for quality metrics, and assessment models. These studies provide valuable guidance for evaluating dataset quality in the field of machine learning, which can help improve the accuracy, efficiency, and generalization ability of machine learning models, and promote the development and application of artificial intelligence technology.
C1 [Gong, Youdi; Liu, Guangzhen; Xue, Yunzhi; Li, Rui; Meng, Lingzhong] Chinese Acad Sci, Inst Software, Beijing 100190, Peoples R China.
   [Gong, Youdi] Beihang Univ, Beijing 100191, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Beihang
   University
RP Meng, LZ (corresponding author), Chinese Acad Sci, Inst Software, Beijing 100190, Peoples R China.
EM lingzhong@iscas.ac.cn
RI Jiang, Yu/JEZ-9814-2023
CR Abdallah M., 2019, P 2019 INT C BIG
   Al Jazaety M, 2020, IET BIOMETRICS, V9, P25, DOI 10.1049/iet-bmt.2019.0081
   [Anonymous], 2018, INFORM STUDIES THEOR
   Ardagna D, 2018, FUTURE GENER COMP SY, V89, P548, DOI 10.1016/j.future.2018.07.014
   Birodkar V., 2019, SEMANTIC REDUNDANCIE
   Bors C, 2018, ACM J DATA INF QUAL, V10, DOI 10.1145/3190578
   [蔡莉 Cai Li], 2020, [软件学报, Journal of Software], V31, P302
   Chang W, 2022, ISO IEC JTC 1 SC 42
   Chug S., 2021, STAT LEARNING OPERAT
   Del Corso G. M., 2005, P 14 INT C WORLD WID, P97
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Diaz D., 2013, 2013 IEEE 21 INT C
   Escudero JP, 2018, Arxiv, DOI arXiv:1803.09016
   Everingham M, 2010, INT J COMPUT VISION, V88, P303, DOI 10.1007/s11263-009-0275-4
   Fabbrizzi S., 2021, SURVEY BIAS VISUAL D
   Garofolo J. S., 1993, Timit acoustic phonetic continuous speech corpus
   GB, 363442018 GBT
   Gervasi V, 2014, INT REQUIR ENG CONF, P143, DOI 10.1109/RE.2014.6912256
   Guo L, 2020, DISCRETE DYN NAT SOC, V2020, DOI 10.1155/2020/6195189
   He X. etal, 2020, medRxiv
   He Yulin, 2021, Journal of Shenzhen University Science and Engineering, V38, P170, DOI 10.3724/SP.J.1249.2021.02170
   Heinrich B, 2018, DECIS SUPPORT SYST, V110, P95, DOI 10.1016/j.dss.2018.03.011
   Hooker S, 2021, PATTERNS, V2, DOI 10.1016/j.patter.2021.100241
   Japkowicz N., 2001, Advances in Artificial Intelligence. 14th Biennial Conference of the Canadian Society for Computational Studies of Intelligence, AI 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2056), P67
   [金菊良 Jin Juliang], 2004, [水利学报, Journal of Hydraulic Engineering], P65
   Krizhevsky A., 2009, LEARNING MULTIPLE LA, DOI DOI 10.1145/3065386
   Lang K., 1995, P 12 INT C MACHINE L, P331
   Li L., 2018, Neural Comput. Appl., P1
   Li SS, 2013, COMM COM INF SC, V400, P105
   Li Y., 2020, STUDIES DATA QUALITY
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Linguistic data consortium, 2002, 2000 HUB5 ENGL EV TR
   Luong D.T.A., 2019, J HEALTHC INF RES, V3, P1
   Maas Andrew, 2011, P 49 ANN M ASS COMP
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Mohan L.I., 2016, INTELL COMPUT APPL
   Nayar Sheila J., 1996, Columbia object image library (coil100)
   Nehmé Y, 2023, ACM T GRAPHIC, V42, DOI 10.1145/3592786
   Ni JM, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P188
   Northcutt C.G., 2021, CONFIDENT LEARNING E
   Panayotov V, 2015, INT CONF ACOUST SPEE, P5206, DOI 10.1109/ICASSP.2015.7178964
   Picard S., 2020, ENSURING DATASET QUA
   Priem J., 2010, Alt-metrics: A manifesto
   Priestley M, 2023, ACM J DATA INF QUAL, V15, DOI 10.1145/3592616
   Rosli MM, 2018, ADV SCI LETT, V24, P7232, DOI 10.1166/asl.2018.12920
   Ruckhaus E, 2014, LECT NOTES COMPUT SC, V8798, P488, DOI 10.1007/978-3-319-11955-7_72
   Ruiz N, 2015, 2015 IEEE WORKSHOP ON AUTOMATIC SPEECH RECOGNITION AND UNDERSTANDING (ASRU), P296, DOI 10.1109/ASRU.2015.7404808
   Scantamburlo T, 2021, ETHICS INF TECHNOL, V23, P703, DOI 10.1007/s10676-021-09608-9
   Shi JY, 2019, IEEE INT CONF HEALT, DOI 10.1109/ichi.2019.8904553
   Snyder D., 2015, arXiv
   Socher R., 2013, P 2013 C EMP METH NA, V2013, P1631, DOI DOI 10.1371/JOURNAL.PONE.0073791
   Song J., 2013, COMMAND INFORM SYSTE
   Takahashi N, 2016, INTERSPEECH, P2982, DOI 10.21437/Interspeech.2016-805
   Taleb I, 2021, J BIG DATA-GER, V8, DOI 10.1186/s40537-021-00468-0
   Taleb I, 2018, IEEE INT CONF INNOV, P69, DOI 10.1109/INNOVATIONS.2018.8605945
   Taleb I, 2018, IEEE INT CONGR BIG, P166, DOI 10.1109/BigDataCongress.2018.00029
   Tao J, 2001, SYST ENG THEORY PRAC, V8, P43
   Tian HX, 2018, 2018 IEEE 3RD INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND BIG DATA ANALYSIS (ICCCBDA), P248, DOI 10.1109/ICCCBDA.2018.8386521
   voxforge, US
   Wook M, 2021, J BIG DATA-GER, V8, DOI 10.1186/s40537-021-00439-5
   Yelp, about us
   zenodo, About us
   Zhang XZ, 2018, AAAI CONF ARTIF INTE, P4482
   Zhou BL, 2018, IEEE T PATTERN ANAL, V40, P1452, DOI 10.1109/TPAMI.2017.2723009
   Zog Aa N.W., 2017, DATASETS USED 15 YEA
   Zogaan W., 2017, REQUIREMENTS ENG C
   US
NR 68
TC 12
Z9 12
U1 20
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107268
DI 10.1016/j.infsof.2023.107268
EA JUN 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N2KB1
UT WOS:001035352200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Tenhunen, S
   Männistö, T
   Luukkainen, M
   Ihantola, P
AF Tenhunen, Saara
   Mannisto, Tomi
   Luukkainen, Matti
   Ihantola, Petri
TI A systematic literature review of capstone courses in software
   engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Capstone; Project course; Computer science education; Software
   engineering education
AB Context: Tertiary education institutions aim to prepare their computer science and software engineering students for working life. While much of the technical principles are covered in lower-level courses, team-based capstone courses are a common way to provide students with hands-on experience and teach soft skills.Objective: This paper explores the characteristics of project-based software engineering capstone courses presented in the literature. The goal of this work is to understand the pros and cons of different approaches by synthesising the various aspects of software engineering capstone courses and related experiences.Method: In a systematic literature review for 2007-2022, we identified 127 articles describing real-world capstone courses. These articles were analysed based on their presented course characteristics and the reported course outcomes.Results: The characteristics were synthesised into a taxonomy consisting of duration, team sizes, client and project sources, project implementation, and student assessment. We found out that capstone courses generally last one semester and divide students into groups of 4-5 where they work on a project for a client. For a slight majority of courses, the clients are external to the course staff and students are often expected to produce a proof-of-concept level software product as the main end deliverable. The courses generally include various forms of student assessment both during and at the end of the course.Conclusions: This paper provides researchers and educators with a classification of characteristics of software engineering capstone courses based on previous research. We also further synthesise insights on the reported course outcomes. Our review study aims to help educators to identify various ways of organising capstones and effectively plan and deliver their own capstone courses. The characterisation also helps researchers to conduct further studies on software engineering capstones.
C1 [Tenhunen, Saara; Mannisto, Tomi; Luukkainen, Matti; Ihantola, Petri] Univ Helsinki, Helsinki, Finland.
C3 University of Helsinki
RP Tenhunen, S; Männistö, T (corresponding author), Univ Helsinki, Helsinki, Finland.
EM saaraten@gmail.com; tomi.mannisto@helsinki.fi;
   matti.luukkainen@helsinki.fi; petri.ihantola@helsinki.fi
RI Männistö, Tomi/ABC-7781-2021
OI Männistö, Tomi/0000-0001-7470-5183; Luukkainen,
   Matti/0000-0003-4779-4998; Ihantola, Petri/0000-0003-1197-7266
CR ACM, 2009, GRAD SOFTW ENG 2009
   ACM/IEEE ACM/IEEE joint task force on computing curricula, 2014, ACM IEEE JOINT TASK
   ACM/IEEE ACM/IEEE joint task force on computing curricula, 2013, ACM IEEE JOINT TASK
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Anicic K.P., 2022, IEEE SOFTW
   Bowring J., 2016, MITOCHONDRIAL DNA A, V27, P5
   Burge JE, 2009, CONF SOFTW ENG EDUC, P166, DOI 10.1109/CSEET.2009.37
   Castleberry A, 2018, CURR PHARM TEACH LEA, V10, P807, DOI 10.1016/j.cptl.2018.03.019
   Cico O, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110736
   Cico O, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P292, DOI 10.1109/ICSE-Companion.2019.00120
   Dugan RF, 2011, COMPUT SCI EDUC, V21, P201, DOI 10.1080/08993408.2011.606118
   Dupuis R, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P1, DOI 10.1109/QUATIC.2010.11
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fortaleza L. L., 2012, 2012 Second International Workshop on Collaborative Teaching of Globally Distributed Software Development - Community Building Workshop (CTGDSD 2012), P1, DOI 10.1109/CTGDSD.2012.6226944
   Garousi V, 2020, IEEE SOFTWARE, V37, P68, DOI 10.1109/MS.2018.2880823
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Haddad HM, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P97, DOI 10.1109/ITNG.2013.21
   Hattie J, 2007, REV EDUC RES, V77, P81, DOI 10.3102/003465430298487
   Ikonen M., 2009, SIGITE'09, P235
   Keogh K, 2007, J INF TECHNOL EDUC-R, V6, P515
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Majanoja AM, 2019, CSEDU: PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON COMPUTER SUPPORTED EDUCATION - VOL 2, P68, DOI 10.5220/0006665600680077
   Marques Maira R., 2014, 2014 IEEE Frontiers in Education Conference (FIE). Proceedings, P1, DOI 10.1109/FIE.2014.7044277
   Martin N, 2019, PROCEEDINGS OF THE 20TH ANNUAL CONFERENCE ON INFORMATION TECHNOLOGY EDUCATION (SIGITE '19), P102, DOI 10.1145/3349266.3351346
   Mishra A., 2013, Int J Adv Res Comp Sci Manag Stud, V1, P64
   Paasivaara M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P12, DOI 10.1109/ICSE-SEET.2019.00010
   Panicker RC, 2020, PROC FRONT EDUC CONF
   Parker R, 2019, INT J ENG EDUC, V35, P1926
   Radermacher A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P291, DOI 10.1145/2591062.2591159
   Steghofer J.-P., 2018, ACM T COMPUT EDUC, V18, P1
   Trevisan M., 2006, AM SOC ENG ED ANN C
   Venson E., 2016, 2016 IEEE FRONT ED C, P1
   Watkins KZ, 2010, IEEE SOUTHEASTCON, P111, DOI 10.1109/SECON.2010.5453908
   Ziv H, 2010, CONF SOFTW ENG EDUC, P185, DOI 10.1109/CSEET.2010.41
NR 35
TC 3
Z9 3
U1 2
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107191
DI 10.1016/j.infsof.2023.107191
EA MAR 2023
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D1WU1
UT WOS:000966700600001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Qian, LF
   Li, J
   He, XD
   Gu, RB
   Shao, JW
   Lu, YQ
AF Qian, Lifeng
   Li, Jing
   He, Xudong
   Gu, Rongbin
   Shao, Jiawei
   Lu, Yuqi
TI Microservice extraction using graph deep clustering based on dual view
   fusion
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Monolithic programs; Microservice architecture; Microservice extraction;
   Dual view; Graph deep clustering
ID SYSTEMATIC-APPROACH
AB Context: With the increasing scale of software, traditional monolithic architecture applications are challenging to maintain and scale on cloud platforms. Many companies increasingly adopt microservices architecture as a more flexible choice. Objective: However, microservice migration is still challenging due to the lack of higher-quality microservice extraction methods. Traditional microservice extraction methods cannot effectively combine the structural dependency and business functions of monolithic applications; thus, their performance warrants improvement. Method: This paper proposes a graph deep clustering method based on dual view fusion (GDC-DVF) for microservice extraction. GDC-DVF constructs a graph of invocation relationships between classes, which is the structural dependency view, using the runtime trace data of a monolithic application. Then the business function view is constructed by the random walk algorithm and uniform random sampling using the structural dependency view. Next, the fused node feature embedding representations of the two views are learned using a graph encoder based on a graph attention adaptive residual network. Clustering is performed on the fused feature embedding representations to obtain microservice extraction proposals. Results: GDC-DVF is tested on four open-source monolithic applications and achieves better performance compared with comparison methods. Conclusion: Experimental results show that GDC-DVF can extract high-quality microservice collections and validate the effectiveness and scalability of the graph neural network (GNN) for microservice extraction problems.
C1 [Qian, Lifeng; Li, Jing] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Jangsu, Peoples R China.
   [He, Xudong; Gu, Rongbin; Shao, Jiawei; Lu, Yuqi] Informat & Commun Co State Grid Shanghai Elect Pow, Shanghai, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics
RP Li, J (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Jangsu, Peoples R China.
EM lijing@nuaa.edu.cn
FU Science and Technology Program of State Grid Corporation of China
   [5108-202218280A-2-152-XG]
FX This work was supported by the Science and Technology Program of State
   Grid Corporation of China under Grant 5108-202218280A-2-152-XG.
CR Aksakalli IK, 2021, IEEE ACCESS, V9, P29505, DOI 10.1109/ACCESS.2021.3057582
   Brito M, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1409, DOI 10.1145/3412841.3442016
   De Alwis AAC, 2018, LECT NOTES COMPUT SC, V11236, P37, DOI 10.1007/978-3-030-03596-9_3
   Desai U, 2021, AAAI CONF ARTIF INTE, V35, P72
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Fuhr A., 2011, 2011 18th Working Conference on Reverse Engineering, P275, DOI 10.1109/WCRE.2011.41
   Guo XF, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1753
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Kalia AK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1214, DOI 10.1145/3468264.3473915
   Li ZD, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106992
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Mathai A, 2022, Arxiv, DOI arXiv:2112.01317
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Sadeghi M, 2021, IEEE IMAGE PROC, P1009, DOI 10.1109/ICIP42928.2021.9506051
   Saidi Malak., 2021, INT C HYBRID INTELLI, P386
   Sellami K, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.106996
   Velickovic Petar, 2017, ARXIV171010903, DOI DOI 10.48550/ARXIV.1710.10903
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Xu K., 2018, arXiv, DOI DOI 10.48550/ARXIV.1810.00826
   Yedida R., 2022, arXiv
   Zhang J, 2019, arXiv
   Zhuang CY, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P499, DOI 10.1145/3178876.3186116
NR 27
TC 1
Z9 1
U1 7
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107171
DI 10.1016/j.infsof.2023.107171
EA FEB 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9P6LU
UT WOS:000944395400001
DA 2024-07-18
ER

PT J
AU Wu, JJW
   Mazzuchi, TA
   Sarkani, S
AF Wu, Jie J. W.
   Mazzuchi, Thomas A.
   Sarkani, Shahram
TI Comparison of multi-criteria decision-making methods for online
   controlled experiments in a launch decision-making framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE A; B testing; Multi -criteria decision making; Design of experiments;
   Online controlled experiments; Continuous experimentation; Criteria
   weighting; Software product development and launch; strategy; Decision
   making
ID TOPSIS
AB Context: User-intensive software systems such as Web and mobile applications are defined as systems that serve and interact with an increasingly large number of users. Inefficient launch decisions in user-intensive systems in domains such as social media, information retrieval and e-commerce can lead to dramatic loss in the goal metrics of these highly scalable applications, and therefore impact potentially billions of users. Objective: Due to the complexity of user-intensive systems, engineers rely heavily on A/B testing (i.e., online controlled experiments) to evaluate and measure the impact of new changes. However, little attention has been paid to improve the empirical process of making launch decisions based on the A/B testing results. In this paper, we propose a framework to address this issue. Method: We propose a Multi-Criteria Decision Making (MCDM) framework that uses A/B testing results to provide launch decisions analysis, as a complementary tool to assist decision making. The framework includes modules for 1) configuration setup, 2) criteria weighting, 3) pairwise comparison between criteria and alternatives 4) analysis of alternatives using MCDM and produces launch decisions based on the A/B testing results. Results: Experimental results from publicly available dataset that compares well-known and widely applied MDCM methods shows that a good combination of the Analysis of Alternative method (such as TOPSIS-Vector, MMOORA, and VIKOR) and Criteria Weighting method (such as Standard Deviation) in the framework can effectively assistlaunch decision making. Conclusion: We formulate the problem of launch decision making using A/B testing results and propose a MCDM based framework for it, as an imperfect first step to address this problem. The experiments suggest that MCDM methods such as TOPSIS, MMOORA and VIKOR may be effective at making launch decisions based on A/B testing results.
C1 [Wu, Jie J. W.; Mazzuchi, Thomas A.; Sarkani, Shahram] George Washington Univ, Dept Engn Management & Syst Engn, Washington, DC 20052 USA.
C3 George Washington University
RP Wu, JJW (corresponding author), George Washington Univ, Dept Engn Management & Syst Engn, Washington, DC 20052 USA.
EM jiewu@gwu.edu
OI Wu, Jie/0000-0002-7895-2023
CR [Anonymous], MCDM Package
   Asadabadi Mehdi Rajabi, 2019, Cogent Engineering, V6, DOI 10.1080/23311916.2019.1623153
   Auer F, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106551
   Bernroider EWN, 2013, EUR J OPER RES, V224, P141, DOI 10.1016/j.ejor.2012.07.025
   Box GE., 2005, Statistics for Experimenters: Design, Innovation, and Discovery, V2nd ed.
   Brans JP, 2005, INT SER OPER RES MAN, V78, P163, DOI 10.1007/b100605
   Brauers WKM, 2010, TECHNOL ECON DEV ECO, V16, P5, DOI 10.3846/tede.2010.01
   Büyüközkan G, 2008, MATH COMPUT SIMULAT, V77, P464, DOI 10.1016/j.matcom.2007.11.015
   Chang YH, 2001, OMEGA-INT J MANAGE S, V29, P405, DOI 10.1016/S0305-0483(01)00032-9
   Chiam YK, 2013, INFORM SOFTWARE TECH, V55, P1419, DOI 10.1016/j.infsof.2013.02.001
   Deng AL, 2016, Arxiv, DOI arXiv:1610.03917
   Deng A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P77, DOI 10.1145/2939672.2939700
   Dube S., ANAL B TEST RESULTS
   Esmaeilzadeh E, 2019, IEEE SYST J, V13, P4122, DOI 10.1109/JSYST.2019.2925346
   Fabijan A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P1, DOI 10.1109/ICSE-SEIP.2019.00009
   Fabijan A, 2018, EUROMICRO CONF PROC, P64, DOI 10.1109/SEAA.2018.00020
   Fabijan A, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P18, DOI 10.1109/SEAA.2017.47
   Fabijan A, 2017, PROC INT CONF SOFTW, P770, DOI 10.1109/ICSE.2017.76
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Farshidi S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106640
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Franklin B, 1956, COMMUNICATION
   Ghapanchi Amir Hossein, 2013, Lecture Notes on Software Engineering, V1, P98, DOI 10.7763/LNSE.2013.V1.22
   Gharakheili MA, 2018, IEEE SYST J, V12, P316, DOI 10.1109/JSYST.2015.2500262
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   Gomez-Uribe CA, 2016, ACM TRANS MANAG INF, V6, DOI 10.1145/2843948
   Hwang C.-L., 1981, Multiple Attribute Decision-Making: Methods and Applications: A State-of-the-Art Survey, V13
   INCOSE, 2015, INCOSE SYST ENG HDB
   Ishizaka A., 2013, MULTICRITERIA DECISI, DOI DOI 10.1002/9781118644898
   Ishizaka A, 2018, EUR J OPER RES, V264, P462, DOI 10.1016/j.ejor.2017.05.041
   Jadhav AS, 2009, INFORM SOFTWARE TECH, V51, P555, DOI 10.1016/j.infsof.2008.09.003
   Jahanshahloo GR, 2006, APPL MATH COMPUT, V175, P1375, DOI 10.1016/j.amc.2005.08.048
   KARAYALCIN II, 1982, EUR J OPER RES, V9, P97, DOI 10.1016/0377-2217(82)90022-4
   Koc T, 2019, INFORM SOFTWARE TECH, V109, P14, DOI 10.1016/j.infsof.2019.01.003
   Kohavi R, 2020, TRUSTWORTHY ONLINE CONTROLLED EXPERIMENTS: A PRACTICAL GUIDE TO A/B TESTING, P1, DOI 10.1017/9781108653985
   Kohavi R, 2009, DATA MINING CASE STU, V11, P39
   Kohavi R, 2017, HARVARD BUS REV, V95, P74
   Kohavi R, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1168
   Kohavi R, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P959
   Koning R., 2019, W26278 NBER
   Lamprakos CP, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106851
   Liu YC, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P300, DOI 10.1109/SEAA53835.2021.00046
   Lotfi F.Hosseinzadeh., 2011, Applied Mathematical Sciences, V5, P805
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   Machmouchi W, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P589, DOI 10.1145/2911451.2926731
   Matias J.N., 2020, Asking questions of the upworthy research archive
   Matias JN, 2021, SCI DATA, V8, DOI 10.1038/s41597-021-00934-7
   Matias JN., 2019, The Upworthy Research Archive: A Time Series of 32,488 Experiments in US Advocacy
   Mattos DI, 2018, LECT NOTES COMPUT SC, V11271, P182, DOI 10.1007/978-3-030-03673-7_14
   Menon A.K., 2019, ADV NEURAL INF PROCE, V32
   Miller DavidWilliam., 1963, Executive decisions and operations research
   Odu G. O., 2019, Journal of Applied Sciences & Environmental Management, V23, P1449, DOI 10.4314/jasem.v23i8.7
   Opricovic S, 2004, EUR J OPER RES, V156, P445, DOI 10.1016/s0377-2217(03)00020-1
   Patel M.R., 2017, P NEW HORIZONS CIVIL
   Raha S., DECISION ANAL B TEST
   RAJALA DW, 1979, IEEE T SYST MAN CYB, V9, P403
   Roszkowska E., 2013, Optimum. Studia Ekonomiczne, V5, P14, DOI DOI 10.15290/OSE.2013.05.65.02
   Roy B., 1978, Cahiers du Centre d'Etudes de Recherche Operationelle, V20, P3
   ROY B, 1968, REV FR INFORM RECH O, V2, P57
   Roy B., 1973, METHODE ELECTRE II
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Sage A.P., 2000, INTRO SYSTEMS ENG
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Schermann G, 2016, MIDDLEWARE '16: PROCEEDINGS OF THE 17TH INTERNATIONAL MIDDLEWARE CONFERENCE, DOI 10.1145/2988336.2988348
   Shukla V, 2016, IEEE SYST J, V10, P4, DOI 10.1109/JSYST.2014.2344635
   García-Cascales MS, 2012, MATH COMPUT MODEL, V56, P123, DOI 10.1016/j.mcm.2011.12.022
   Tamburrelli G, 2014, LECT NOTES COMPUT SC, V8636, P184, DOI 10.1007/978-3-319-09940-8_13
   Tang D., 2010, P 16 C KNOWL DISC DA
   Triantaphyllou E., 2000, MULTICRITERIA DECISI, P5, DOI [10.1007/978-1-4757-3157-6_2, DOI 10.1007/978-1-4757-3157-6_2, 10.1007/978-1-4757-3157-62, DOI 10.1007/978-1-4757-3157-62]
   Triantaphyllou E., 1998, Encyclopedia of Electrical and Electronics Engineering, V15, P175
   Tzeng GH, 2011, MULTIPLE ATTRIBUTE DECISION MAKING: METHODS AND APPLICATIONS, P1
   Tzeng GH, 2011, MULTIPLE ATTRIBUTE DECISION MAKING: METHODS AND APPLICATIONS, P1
   Xu Y, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2227, DOI 10.1145/2783258.2788602
   Yoon K., 1980, Systems selection by multiple attribute decision making
   Zardari N.H., 2015, WEIGHTING METHODS TH, DOI [10.1007/978-3-319-12586-2, DOI 10.1007/978-3-319-12586-2]
   Zavadskas EK, 2012, ELEKTRON ELEKTROTECH, V122, P3, DOI 10.5755/j01.eee.122.6.1810
   Zavadskas EK, 2014, TECHNOL ECON DEV ECO, V20, P165, DOI 10.3846/20294913.2014.892037
   Zhu Y, 2020, MATH PROBL ENG, V2020
NR 78
TC 5
Z9 6
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107115
DI 10.1016/j.infsof.2022.107115
EA DEC 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200004
OA Bronze
DA 2024-07-18
ER

PT J
AU Nguyen, TT
   Ngo, KT
   Nguyen, S
   Vo, HD
AF Nguyen, Thu-Trang
   Ngo, Kien-Tuan
   Nguyen, Son
   Vo, Hieu Dinh
TI Detecting false-passing products and mitigating their impact on
   variability fault localization in software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE False-passing products; Variability bugs; Coincidental correctness;
   Fault localization; Software product line
ID TEST SUITES
AB In a Software Product Line (SPL) system, variability bugs can cause failures in certain products (buggy products), not in the others. In practice, variability bugs are not always exposed, and buggy products can still pass all the tests due to their ineffective test suites (so-called false-passing products). The misleading indi-cations caused by those false-passing products' test results can negatively impact variability fault localization performance. In this paper, we introduce CLAP, a novel approach to detect false-passing products in SPL systems failed by variability bugs. Our key idea is that given a set of tested products of an SPL system, we collect failure indications in failing products based on their implementation and test quality. For a passing product, we evaluate these indications, and the stronger indications, the more likely the product is false-passing. Specifically, the possibility of the product to be false-passing is evaluated based on if it has a large number of the statements which are highly suspicious in the failing products, and if its test suite is in lower quality compared to the failing products' test suites. We conducted several experiments to evaluate our false-passing product detection approach on a large benchmark of 14,191 false-passing products and 22,555 true-passing products in 823 buggy versions of the existing SPL systems. The experimental results show that CLAP can effectively detect false-passing and true-passing products with the average accuracy of more than 90%. Especially, the precision of false-passing product detection by CLAP is up to 96%. This means, among 10 products predicted as false-passing products, more than 9 products are precisely detected. Furthermore, we propose two simple and effective methods to mitigate the negative impact of false-passing products on variability fault localization. These methods can improve the performance of the state-of-the-art variability fault localization techniques by up to 34%.
C1 [Nguyen, Thu-Trang; Ngo, Kien-Tuan; Nguyen, Son; Vo, Hieu Dinh] VNU Univ Engn & Technol, Fac Informat Technol, Hanoi, Vietnam.
C3 Vietnam National University Hanoi
RP Vo, HD (corresponding author), VNU Univ Engn & Technol, Fac Informat Technol, Hanoi, Vietnam.
EM trang.nguyen@vnu.edu.vn; tuanngokien@vnu.edu.vn; sonnguyen@vnu.edu.vn;
   hieuvd@vnu.edu.vn
RI Ngo, Tuan/KLB-9554-2024
OI Ngo, Tuan/0000-0001-7136-7529; Vo, Hieu/0000-0002-9407-1971
FU Development Foundation of Vietnam National University, Hanoi;  [ID
   VNU.2021.NCS.09]
FX Nguyen Thu Trang, ID VNU.2021.NCS.09, thanks The Development Foundation
   of Vietnam National University, Hanoi for sponsoring this research.
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Al-Hajjaji M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P197, DOI 10.1145/2648511.2648532
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Bandyopadhyay A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P479, DOI 10.1109/ICST.2012.130
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Chaleshtari NB, 2020, EMPIR SOFTW ENG, V25, P4282, DOI 10.1007/s10664-020-09845-4
   Chekam TT, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3425497
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Garvin BJ, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P90, DOI 10.1109/ISSRE.2011.25
   Gonzalez-Sanchez A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P634, DOI 10.1109/ICSTW.2011.22
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Guizzo G, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1127, DOI 10.1145/3368089.3409742
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   James G, 2013, SPRINGER TEXTS STAT, V103, P15, DOI 10.1007/978-1-4614-7138-7_2
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Ngo KT, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3473058
   Kuhn M., 2013, APPL PREDICTIVE MODE, V26, DOI [10.1007/978-1-4614-6849-3, DOI 10.1007/978-1-4614-6849-3]
   Kusumoto S., 2002, Empirical Software Engineering, V7, P49, DOI 10.1023/A:1014823126938
   Son LH, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11020212
   Lei Y, 2018, IET SOFTW, V12, P190, DOI 10.1049/iet-sen.2017.0026
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li XY, 2020, IEEE INT CONF SOFTW, P28, DOI 10.1109/ICST46399.2020.00014
   Li Z, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P72, DOI 10.1109/SATE.2016.19
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Marijan Dusica., 2013, Proceedings of the 17th International Software Product Line Conference. SPLC'13, P227, DOI DOI 10.1145/2491627.2491646
   Masri Wes, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P165, DOI 10.1109/ICST.2010.22
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nguyen S, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P489, DOI 10.1109/ASE.2019.00053
   Nguyen S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P974, DOI 10.1145/3236024.3275437
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perez A., 2019, IEEE T SOFTWARE ENG
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Nguyen S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P156, DOI 10.1109/ICSE-Companion.2019.00065
   Struder S, 2020, P 24 ACM C SYST SOFT, VA, P1, DOI [10.1145/3382025.3414960, DOI 10.1145/3382025.3414960]
   Tartler R., 2011, P 6 WORKSHOP PROGRAM, P1
   Tip F, 2001, ACM T SOFTW ENG METH, V10, P5, DOI 10.1145/366378.366379
   Wang WB, 2021, J CIRCUIT SYST COMP, V30, DOI 10.1142/S0218126621500535
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Xue XZ, 2014, P INT COMP SOFTW APP, P239, DOI 10.1109/COMPSAC.2014.32
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 57
TC 2
Z9 2
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107080
DI 10.1016/j.infsof.2022.107080
EA OCT 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5M1OI
UT WOS:000870873400007
OA Bronze
DA 2024-07-18
ER

PT J
AU Cadavid, H
   Andrikopoulos, V
   Avgeriou, P
   Broekema, PC
AF Cadavid, Hector
   Andrikopoulos, Vasilios
   Avgeriou, Paris
   Broekema, P. Chris
TI System and software architecting harmonization practices in
   ultra-large-scale systems of systems: A confirmatory case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systems of systems; SoS architecting; Confirmatory case study; Empirical
   software engineering; Scientific instruments; Qualitative research
AB Context: The challenges posed by the architecting of System of Systems (SoS) has motivated a significant number of research efforts in the area. However, literature is lacking when it comes to the interplay between the disciplines involved in the architecting process, a key factor in addressing these challenges.
   Objective: This paper aims to contribute to this line of research by confirming and extending previously characterized architecting harmonization practices from Systems and Software Engineering, adopted in an ultra-large-scale SoS.
   Methods: We conducted a confirmatory case study on the Square-Kilometre Array (SKA) project to evaluate and extend the findings of our exploratory case on the LOFAR/LOFAR2.0 radio-telescope projects. In doing so, a pre-study was conducted to map the findings of the previous study with respect to the SKA context. A survey was then designed, through which the views of 46 SKA engineers were collected and analyzed.
   Results: The study confirmed in various degrees the four practices identified in the exploratory case, and provided further insights about them: (1) the friction between disciplines caused by long-term system requirements, and how they can be ameliorated through intermediate, short-term requirements; (2) the way design choices with a cross-cutting impact on multiple agile teams have an indirect impact on the system architecture; (3) how these design choices are often caused by the criteria that guided early system decomposition; (4) the seemingly recurrent issue with the lack of details about the dynamic elements of the interfaces; and (5) the use of machine-readable interface specifications for aligning hardware/software development processes.
   Conclusions: The findings of this study and its predecessor support the importance of a cross-disciplinary view in the Software Engineering research agenda in SoS as a whole, not to mention their value as a convergence point for research on SoS architecting from the Systems and Software Engineering standpoints.
C1 [Cadavid, Hector; Andrikopoulos, Vasilios; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Dept Comp Sci, Groningen, Netherlands.
   [Broekema, P. Chris] Netherlands Inst Radio Astron ASTRON, Dwingeloo, Netherlands.
   [Cadavid, Hector] Escuela Colombiana Ingn, Bogota, Colombia.
   [Broekema, P. Chris] Univ Cambridge, Cambridge, England.
C3 University of Groningen; University of Cambridge
RP Cadavid, H (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Dept Comp Sci, Groningen, Netherlands.
EM h.f.cadavid.rengifo@rug.nl; v.andrikopoulos@rug.nl; p.avgeriou@rug.nl;
   broekema@astron.nl
RI Andrikopoulos, Vasilios/IVH-6273-2023
OI Broekema, Chris/0000-0002-7658-4087; Andrikopoulos,
   Vasilios/0000-0001-7937-0247; Cadavid Rengifo, Hector
   Fabio/0000-0003-4965-4243; Avgeriou, Paris/0000-0002-7101-0754
CR Alfieri A, 2012, INT J TECHNOL MANAGE, V57, P149, DOI 10.1504/IJTM.2012.043956
   [Anonymous], 2006, REPORT SYSTEM SYSTEM
   [Anonymous], 2014, ENABLING MANUFACTURI, DOI DOI 10.1007/978-3-319-02054
   [Anonymous], 2013, PROC INFORMATIK 2013
   [Anonymous], 2018, SYSTEM SYSTEMS CHARA
   [Anonymous], 2009, Crosstalk
   [Anonymous], 2018, 21839 BS ISO IEC
   [Anonymous], DOD ARCH FRAM VERS 1
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Cadavid H, 2020, PROC ACMIEEE INT S E, DOI [10.1145/3382494.3410671, DOI 10.1145/3382494.3410671]
   Cadavid H, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P13, DOI 10.1109/ICSA51549.2021.00010
   Cadavid H, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106202
   Carson R.S., 2013, INCOSE International Symposium, V23, P16
   Ceccarelli Andrea, 2016, Cyber-Physical Systems of Systems. Foundations - a Conceptual Model and Some Derivations: the AMADEOS Legacy. LNCS 10099, P1, DOI 10.1007/978-3-319-47590-5_1
   Dahmann JS, 2008, 2008 2ND ANNUAL IEEE SYSTEMS CONFERENCE, P133
   Douglass Bruce Powel, 2015, Agile Systems Engineering
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   FAIRLEY RICHARD E., 2019, SYSTEMS ENGINEERING OF SOFTWARE-ENABLED SYSTEMS
   Fan C., 2018, 2018 ANN IEEE INT SY, P1, DOI [DOI 10.1109/SYSCON.2018.8369545, 10.1109/SYSCON.2018.8369545]
   Fowler K., 2014, DEV MANAGING EMBEDDE
   Friese Susanne., 2019, QUALITATIVE DATA ANA
   Gorod A, 2018, 2018 13TH ANNUAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE), P556, DOI 10.1109/SYSOSE.2018.8428792
   Haberfellner R., 2019, Systems engineering
   Hessels Jason, 2016, KNAW AGENDA GROOTSCH
   Knaster R., 2018, SAFE 45 DISTILLED AP
   Leffingwell D., 2018, SAFE 4 5 REFERENCE G
   Lopes AJ, 2011, PROCEDIA COMPUT SCI, V6, DOI 10.1016/j.procs.2011.08.083
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Muller G, 2012, PROCEDIA COMPUT SCI, V8, P321, DOI 10.1016/j.procs.2012.01.067
   Muscarella Sally, 2020, INCOSE International Symposium, V30, DOI 10.1002/j.2334-5837.2020.00787.x
   Okami S, 2019, IEEE SYST J, V13, P952, DOI 10.1109/JSYST.2017.2778418
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santander-Vela J, 2017, Arxiv, DOI arXiv:1712.00061
   Sheard Sarah, 2019, INCOSE International Symposium, V29, P249, DOI 10.1002/j.2334-5837.2019.00602.x
   van Haarlem MP, 2013, ASTRON ASTROPHYS, V556, DOI 10.1051/0004-6361/201220873
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 36
TC 2
Z9 2
U1 2
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106984
DI 10.1016/j.infsof.2022.106984
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4P3BJ
UT WOS:000855271700001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Zhao, CY
   Mu, YZ
   Chen, X
   Zhao, JK
   Ju, XL
   Wang, G
AF Zhao, Chunyu
   Mu, Yanzhou
   Chen, Xiang
   Zhao, Jingke
   Ju, Xiaolin
   Wang, Gan
TI Can test input selection methods for deep neural network guarantee test
   diversity? A large-scale empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep neural network testing; Test input selection; Test diversity;
   Empirical study
AB Context: Recently, various methods on test input selection for deep neural network (TIS-DNN) have been proposed. These methods can effectively reduce the labeling cost by selecting a subset from the original test inputs, which can still accurately estimate the performance (such as accuracy) of the target DNN models.
   Objective: Previous studies on TIS-DNN mainly focused on the performance on all the classes. However, the selected subset may miss the coverage of some classes or decrease the performance on some classes, which will reduce the test diversity of the original test inputs.
   Methods: Therefore, we conducted a large-scale empirical study to investigate whether previous TIS-DNN methods can guarantee test diversity in the subset. In our study, we selected five state-of-the-art TIS-DNN methods: SRS, CSS, CES, DeepReduce and PACE. Then we selected 18 pairs of DNN models and the corresponding test inputs from seven popular DNN datasets.
   Results: Our experimental results can be summarized as follows. (1) Previous TIS-DNN methods can guarantee the performance on all the classes. However, these methods have a negative impact on the test diversity and the performance on each class is not satisfactory. (2) Reducing the performance estimation error on each class can help reduce the estimation error on the test adequacy of the original inputs based on DNN-based coverage criteria (especially for the criterion NC and the criterion TKNC). (3) There still exists great room for performance improvement (i.e., 7.637% improvement on all the classes and 12.833% improvement on each class) after comparing the TIS-DNN method PACE with approximately optimal solutions.
   Conclusion: The above experimental findings implicate there is still a long way for the TIS-DNN issue to go. Given this, we present observations about the road ahead for this issue.
C1 [Zhao, Chunyu; Chen, Xiang; Zhao, Jingke; Ju, Xiaolin] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Mu, Yanzhou; Zhao, Jingke; Wang, Gan] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Chen, Xiang] Nanjing Univ Aeronaut & Astronaut, Minist Ind & Informat Technol, Key Lab Safety Crit Software, Nanjing, Peoples R China.
   [Chen, Xiang] Chinese Acad Sci, Inst Informat Engn, State Key Lab Informat Secur, Beijing, Peoples R China.
C3 Nantong University; Tianjin University; Nanjing University of
   Aeronautics & Astronautics; Chinese Academy of Sciences; Institute of
   Information Engineering, CAS
RP Chen, X; Ju, XL (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM 2010320004@stmail.ntu.edu.cn; 2019218009@tju.edu.cn; xchencs@ntu.edu.cn;
   ke1206371563@gmail.com; ju.xl@ntu.edu.cn; wg_98@tju.edu.cn
RI JU, Xiao-lin/F-8459-2011; Chen, Xiang/AAG-3663-2019
OI Chen, Xiang/0000-0002-1180-3891
FU National Natural Science Foundation of China [61872263]; Open Project of
   Key Laboratory of Safety-Critical Software for Nanjing University of
   Aeronautics and Astronautics, Ministry of Industry and Information
   Technology, China [NJ2020022]; Open Project of State Key Laboratory of
   Information Security (Institute of Information Engineering, Chinese
   Academy of Sciences), China [2020-MS-07]; Nantong Application Research
   Plan, China [JC2021124]
FX Chunyu Zhao and Yanzhou Mu have contributed equally to this work and
   they are co-first authors. This work is supported in part by the
   National Natural Science Foundation of China (Grant No. 61872263), The
   Open Project of Key Laboratory of Safety-Critical Software for Nanjing
   University of Aeronautics and Astronautics, Ministry of Industry and
   Information Technology, China (Grant No. NJ2020022), The Open Project of
   State Key Laboratory of Information Security (Institute of Information
   Engineering, Chinese Academy of Sciences), China (Grant No. 2020-MS-07),
   and the Nantong Application Research Plan, China (Grant No. JC2021124).
CR Biggio B, 2018, PATTERN RECOGN, V84, P317, DOI 10.1016/j.patcog.2018.07.023
   Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   Chen DY, 2019, IEEE ACCESS, V7, P184832, DOI 10.1109/ACCESS.2019.2961129
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen X, 2021, IEEE T SOFTWARE ENG, V47, P1960, DOI 10.1109/TSE.2019.2940439
   Chen X, 2020, IEEE T RELIAB, V69, P70, DOI 10.1109/TR.2019.2924932
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Kim B, 2016, ADV NEUR IN, V29
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kurakin A, 2017, Arxiv, DOI arXiv:1607.02533
   LeCun Y., 1995, ICANN '95. International Conference on Artificial Neural Networks. Neuronimes '95 Scientific Conference, P53
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Li Z, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111036
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Mukaka MM, 2012, MALAWI MED J, V24, P69
   Ni C, 2019, J SYST SOFTWARE, V152, P215, DOI 10.1016/j.jss.2019.03.012
   Papernot N, 2016, P IEEE S SECUR PRIV, P582, DOI 10.1109/SP.2016.41
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Voulodimos A, 2018, COMPUT INTEL NEUROSC, V2018, DOI 10.1155/2018/7068349
   Wang K, 2011, IEEE I CONF COMP VIS, P1457, DOI 10.1109/ICCV.2011.6126402
   Wang S, 2021, PROC INT CONF SOFTW, P1548, DOI 10.1109/ICSE43902.2021.00138
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yan M, 2023, Arxiv, DOI arXiv:2010.04946
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yang YM, 2020, Arxiv, DOI arXiv:2011.14597
   Young T, 2018, IEEE COMPUT INTELL M, V13, P55, DOI 10.1109/MCI.2018.2840738
   Zhang FY, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P800, DOI 10.1145/3368089.3409750
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zheng W, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110659
   Zhou JY, 2020, PROC INT SYMP SOFTW, P289, DOI 10.1109/ISSRE5003.2020.00035
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 43
TC 2
Z9 3
U1 1
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106982
DI 10.1016/j.infsof.2022.106982
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J2AJ8
UT WOS:001007686300011
DA 2024-07-18
ER

PT J
AU Bombarda, A
   Bonfanti, S
   Galbiati, C
   Gargantini, A
   Pelliccione, P
   Riccobene, E
   Wada, M
AF Bombarda, Andrea
   Bonfanti, Silvia
   Galbiati, Cristiano
   Gargantini, Angelo
   Pelliccione, Patrizio
   Riccobene, Elvinia
   Wada, Masayuki
TI Guidelines for the development of a critical software under emergency
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety-critical systems development; Software certification; Lessons
   learned; Guidelines; Healthcare
ID ARCHITECTURE; AGILE
AB Context: During the first wave of the COVID-19 pandemic, an international and heterogeneous team of scientists collaborated on a social project to produce a mechanical ventilator for intensive care units (MVM). MVM has been conceived to be produced and used also in poor countries: it is open-source, no patents, cheap, and can be produced with materials that are easy to retrieve.Objective: The objective of this work is to extract from the experience of the MVM development and software certification a set of lessons learned and then guidelines that can help developers to produce safety-critical devices in similar emergency situations. Method: We conducted a case study. We had full access to source code, comments on code, change requests, test reports, every deliverable (60 in total) produced for the software certification (safety concepts, requirements specifications, architecture and design, testing activities, etc.), notes, whiteboard sketches, emails, etc. We validated both lessons learned and guidelines with experts. Findings: We contribute a set of validated lessons learned and a set of validated guidelines, together with a discussion of benefits and risks of each guideline.Conclusion: In this work we share our experience in certifying software for healthcare devices produced under emergency, i.e. with strict and pressing time constraints and with the difficulty of establishing a heterogeneous development team made of volunteers. We believe that the guidelines will help engineers during the development of critical software under emergency.
C1 [Bombarda, Andrea; Bonfanti, Silvia; Gargantini, Angelo] Univ Bergamo, Dept Management Informat & Prod Engn, Bergamo, Italy.
   [Galbiati, Cristiano] Princeton Univ, Princeton, NJ USA.
   [Galbiati, Cristiano; Pelliccione, Patrizio] Gran Sasso Sci Inst GSSI, Laquila, Italy.
   [Galbiati, Cristiano] INFN Lab Nazl Gran Sasso, Laquila, Italy.
   [Riccobene, Elvinia] Univ Milan, Milan, Italy.
   [Wada, Masayuki] Polish Acad Sci, N Copernicus Astron Ctr, AstroCeNT, Warsaw, Poland.
C3 University of Bergamo; Princeton University; Gran Sasso Science
   Institute (GSSI); Gran Sasso Science Institute (GSSI); University of
   Milan; Polish Academy of Sciences
RP Bonfanti, S (corresponding author), Univ Bergamo, Dept Management Informat & Prod Engn, Bergamo, Italy.
EM silvia.bonfanti@unibg.it
RI Bombarda, Andrea/AHB-9415-2022; Galbiati, Cristiano/I-7487-2012;
   Bonfanti, Silvia/AAD-9350-2019; Riccobene, Elvinia/B-7517-2013;
   Pelliccione, Patrizio/Q-5118-2019
OI Bombarda, Andrea/0000-0003-4244-9319; Bonfanti,
   Silvia/0000-0001-9679-4551; Pelliccione, Patrizio/0000-0002-5438-2281;
   Wada, Masayuki/0000-0002-6414-6944
FU FIRS Italian project MVM- Adapt [FISR2020IP_05310]
FX This work is partially supported by the FIRS Italian project MVM- Adapt
   (Milano Ventilatore Meccanico Adattativo in presenza d'incertezza)
   FISR2020IP_05310. The authors would like to thank the entire team who
   contributed to the realization of the MVM project. We would like to
   thank also the experts that helped us in the validation of lessons
   learned and guidelines.
CR Abba A, 2021, PHYS FLUIDS, V33, DOI 10.1063/5.0044445
   Agren SM, 2022, IEEE T ENG MANAGE, V69, P3459, DOI 10.1109/TEM.2022.3146139
   Ågren SM, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111111
   Ågren SM, 2019, REQUIR ENG, V24, P315, DOI 10.1007/s00766-019-00319-8
   [Anonymous], 2014, ONLINE J PUBLIC HLTH
   Anthony B, 2020, J MED SYST, V44, DOI 10.1007/s10916-020-01596-5
   Arcaini P., 2021, LOGIC COMPUTATION RI
   Arcaini P, 2018, SCI COMPUT PROGRAM, V158, P148, DOI 10.1016/j.scico.2017.07.003
   Asadzadeh Afsoon, 2020, Inform Med Unlocked, V21, P100475, DOI 10.1016/j.imu.2020.100475
   Boehm B, 2004, PROC INT CONF SOFTW, P718, DOI 10.1109/ICSE.2004.1317503
   Bombarda Andrea, 2019, Software Technology: Methods and Tools. 51st International Conference, TOOLS 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11771), P89, DOI 10.1007/978-3-030-29852-4_7
   Bombarda A., 2022, Replication package for the paper "Multi-thread Combinatorial Test Generation with SMT solvers
   BOMBARDA A, 2021, ELECTRON P THEOR COM, P13, DOI DOI 10.4204/EPTCS.349.2
   Bombarda A., 2021, 2021 IEEE 32 INT S S
   Boogerd C, 2008, PROC IEEE INT CONF S, P277, DOI 10.1109/ICSM.2008.4658076
   Brooks Frederick P., 1995, The mythical man-month
   Chaudron MRV, 2012, SOFTW SYST MODEL, V11, P571, DOI 10.1007/s10270-012-0278-4
   Denger Christian, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P485
   Dufour C., 2008, 2008 IEEE POW EL SPE
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Eckstein J, 2014, LECT NOTES BUS INF P, V199, P21
   FDA, 2002, GEN PRINC SOFTW VAL
   Felderer M, 2016, SOFTWARE QUAL J, V24, P519, DOI 10.1007/s11219-015-9289-z
   Ferreira G., 2019, ARXIV
   Gannous A, 2019, PROC INT SYMP SOFTW, P250, DOI 10.1109/ISSRE.2019.00033
   Gordon WJ, 2019, NAT BIOMED ENG, V3, P493, DOI 10.1038/s41551-019-0426-z
   Gozes O., 2020, RAPID AI DEV CYCLE C
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hohl P, 2017, LECT NOTES COMPUT SC, V10611, P28, DOI 10.1007/978-3-319-69926-4_3
   Hovsepyan A., 2014, 1 INT WORKSHOP MODEL, V1249
   Hrgarek N., 2012, 2012 4th International Workshop on Software Engineering in Health Care (SEHC 2012), P40, DOI 10.1109/SEHC.2012.6227011
   IEC, 62304 IEC
   Ingram C., 2011, SOFTWARE SYSTEMS TRA
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Kasauli Rashidah, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P31, DOI 10.1145/3383219.3383223
   Kasauli R, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110851
   Kess P, 2002, INT J PROD ECON, V80, P49, DOI 10.1016/S0925-5273(02)00242-6
   Knaster R., 2017, SAFe 4.0 Distilled: Applying the Scaled Agile Framework for Lean Software and Systems Engineering
   Knauss E, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962639
   Kornecki A, 2008, 2008 INTERNATIONAL MULTICONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY (IMCSIT), VOLS 1 AND 2, P618
   Kusters R.J., 2017, 19 INT C ENTERPRISE
   Larman C., 2016, Large-Scale Scrum: More with LeSS
   Lee I, 2006, COMPUTER, V39, P33
   Li Y, 2012, INFORM MANAGE-AMSTER, V49, P257, DOI 10.1016/j.im.2012.05.005
   Livermore Jeffrey A., 2008, Journal of Software, V3, P31, DOI 10.4304/jsw.3.4.31-36
   de la Vara JL, 2019, IEEE INT SYMP SOFTW, P326, DOI 10.1109/ISSREW.2019.00092
   Marks T, 2020, PRACTITIONER HDB PRO
   Mayer Philip, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0035-z
   McHugh M., 2014, SOFTWARE PROCESS IMP
   McHugh M., 2013, 2013 5 INT WORK SOFT
   Meyer B., 2014, Agile!
   Moe N.B., 2018, INVESTIGATION M INTE
   Neto JA, 2015, STUD HEALTH TECHNOL, V216, P227, DOI 10.3233/978-1-61499-564-7-227
   Nyrud H., 2017, P XP2017 SCI WORKSH
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   Pearce Joshua M, 2020, F1000Res, V9, P218, DOI 10.12688/f1000research.22942.1
   Pelayo S, 2013, STUD HEALTH TECHNOL, V183, P337, DOI 10.3233/978-1-61499-203-5-337
   Pelliccione P, 2017, J SYST ARCHITECT, V77, P83, DOI 10.1016/j.sysarc.2017.02.005
   Pietrantuono R, 2018, IEEE INT SYMP SOFTW, P308, DOI [10.1109/1SSREW.2018.00023, 10.1109/ISSREW.2018.00023]
   Quist C., 2015, Benefits of blending agile and waterfall project planning methodologies
   Raskin Jef, 2005, Queue, V3, P64, DOI DOI 10.1145/1053331.1053354
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rushby J.M., 1981, Design and verification of secure systems, V15, P12
   Scaled Agile, 2022, COMMUNITIES PRACTICE
   Schroeder J., 2015, P 1 INT WORKSHOP AUT
   Sedano T, 2019, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2019.00036
   Shi F, 2021, IEEE REV BIOMED ENG, V14, P4, DOI 10.1109/RBME.2020.2987975
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Stray V, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234182
   Stupperich M., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P141, DOI 10.1109/ICGSE.2011.15
   Subbarao A., 2019, J ADV RES DYN CONTRO, V11
   Taylor R. N., 2007, SOFTWARE ARCHITECTUR
   Varajao J., 2021, QUEUE, V19
   Wagner F., 2006, MODELING SOFTWARE FI
   Westhorpe RN, 2012, ANAESTH INTENS CARE, V40, P749, DOI 10.1177/0310057X1204000501
   Wohlrab R, 2021, IEEE SOFTWARE, V38, P62, DOI 10.1109/MS.2020.2996369
   Wohlrab R, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2166
   Wohlrab R, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P151, DOI 10.1109/ICSA.2019.00024
   Wolfl A., 2018, THESIS U PASSAU
   Wolfl A., 2015, 2015 30 IEEE ACM INT
NR 80
TC 4
Z9 4
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107061
DI 10.1016/j.infsof.2022.107061
EA SEP 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5S0QY
UT WOS:000874907100001
PM 36093290
OA Green Published
DA 2024-07-18
ER

PT J
AU Akbar, MA
   Smolander, K
   Mahmood, S
   Alsanad, A
AF Akbar, Muhammad Azeem
   Smolander, Kari
   Mahmood, Sajjad
   Alsanad, Ahmed
TI Toward successful DevSecOps in software development organizations: A
   decision-making framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE DevOps; DevSecOps; Challenges; Multivocal literature review; Fuzzy
   analytical hierarchy process
ID FUZZY TOPSIS; SYSTEMATIC LITERATURE; PROCESS IMPROVEMENT; MANAGEMENT;
   DEVOPS; BARRIERS
AB Context: Development and Operations (DevOps) is a methodology that aims to establish collaboration between programmers and operators to automate the continuous delivery of new software to reduce the development life cycle and produce quality software. Development, Security, and Operations (DevSecOps) is developing the DevOps concept, which integrates security methods into a DevOps process. DevSecOps is a software development process where security is built in to ensure application confidentiality, integrity, and availability.
   Objective: This paper aims to identify and prioritize the challenges associated with implementing the DevSecOps process.
   Method: We performed a multivocal literature review (MLR) and conducted a questionnaire-based survey to identify challenges associated with DevSecOps-based projects. Moreover, interpretive structure modeling (ISM) was applied to study the relationships among the core categories of the challenges. Finally, we used the fuzzy technique for order preference by similarity to an ideal solution (TOPSIS) to prioritize the identified challenges associated with DevSecOps projects.
   Results: We identified 18 challenges for the DevSecOps process and mapped them to 10 core categories. The ISM results indicate that the "standards" category has the most decisive influence on the other nine core categories of the identified challenges. Moreover, the fuzzy TOPSIS indicates that "lack of secure coding standards," "lack of automated testing tools for security in DevOps," and "ignorance in static testing for security due to lack of knowledge" are the highest priority challenges for the DevSecOps paradigm.
   Conclusion: Organizations using DevOps should consider the identified challenges in developing secure software.
C1 [Akbar, Muhammad Azeem; Smolander, Kari] LUT Univ, Software Engn, Lappeenranta 53851, Finland.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran, Saudi Arabia.
   [Mahmood, Sajjad] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
   [Alsanad, Ahmed] King Saud Univ, Coll Comp & Informat Sci, Dept Informat Syst, STCs Artificial Intelligence Chair, Riyadh 11451, Saudi Arabia.
C3 Lappeenranta-Lahti University of Technology LUT; King Fahd University of
   Petroleum & Minerals; King Fahd University of Petroleum & Minerals; King
   Saud University
RP Akbar, MA (corresponding author), LUT Univ, Software Engn, Lappeenranta 53851, Finland.
EM azeem.akbar@lut.fi; kari.smolander@lut.fi; smahmood@kfupm.edu.sa;
   aasanad@ksu.edu.sa
RI Smolander, Kari/B-4581-2015; Mahmood, Sajjad/B-2295-2010
OI Mahmood, Sajjad/0000-0001-5786-5118
FU Deanship of Scientific Research, King Saud University
FX The authors are grateful to the Deanship of Scientific Research, King
   Saud University, for funding through Vice Deanship of Scientific
   Research Chairs for empirical data collection and analysis.
CR Afzal W, 2016, J SYST SOFTWARE, V111, P1, DOI 10.1016/j.jss.2015.08.048
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Agarwal A, 2017, Jindal J Business Res, V6, P44
   Ahmed Zaheeruddin, 2019, 2019 International Conference on Digitization (ICD). Proceedings, P178, DOI 10.1109/ICD47981.2019.9105789
   Akbar MA, 2019, J COMPUT LANG, V51, P112, DOI 10.1016/j.cola.2018.12.005
   Akbar MA, 2018, IEEE ACCESS, V6, P8066, DOI 10.1109/ACCESS.2018.2805702
   Ali S, 2016, J SYST SOFTWARE, V117, P402, DOI 10.1016/j.jss.2016.03.069
   Altman D., 2013, STAT CONFIDENCE CONF, V2nd
   [Anonymous], 2015, BUILDING SECURITY MA
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2015, P 8 INT C SECURITY I
   Attri R, 2013, INT J SYST ASSUR ENG, V4, P365, DOI 10.1007/s13198-012-0122-9
   Bozbura FT, 2007, EXPERT SYST APPL, V32, P1100, DOI 10.1016/j.eswa.2006.02.006
   Carter K, 2017, IEEE SOFTWARE, V34, P93, DOI 10.1109/MS.2017.3571578
   Chen Lianping, 2010, 14 INT C EVALUATION
   Chen TY, 2008, FUZZY SET SYST, V159, P1410, DOI 10.1016/j.fss.2007.11.004
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erich F., 2014, REPORT DEV LIT REV
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Farroha BS, 2014, IEEE MILIT COMMUN C, P288, DOI 10.1109/MILCOM.2014.54
   Finstad K, 2010, J USABILITY STUD, V5, P104
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Goldschmidt M., 2016, DEVSECOPS AGILITY SE, P44
   Heiner A.P., 2007, P 3 S US PRIV SEC, P155
   Hsu T.H.-C., 2019, PRACTICAL SECURITY A
   Hsu Tony Hsiang-Chih, 2018, Hands-On Security in DevOps: Ensure Continuous Security, Deployment, and Delivery with DevSecOps
   Humble J., 2019, CONTINUOUS DELIVERY
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Kannan D, 2014, EUR J OPER RES, V233, P432, DOI 10.1016/j.ejor.2013.07.023
   Kannan G, 2009, RESOUR CONSERV RECY, V54, P28, DOI 10.1016/j.resconrec.2009.06.004
   Keshta I, 2017, IEEE ACCESS, V5, P24162, DOI 10.1109/ACCESS.2017.2764490
   Khan AA, 2018, IET SOFTW, V12, P333, DOI 10.1049/iet-sen.2018.0010
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Krohling RA, 2011, EXPERT SYST APPL, V38, P4190, DOI 10.1016/j.eswa.2010.09.081
   Kumar R, 2020, COMPUT SECUR, V97, DOI 10.1016/j.cose.2020.101967
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lenarduzzi V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P112, DOI 10.1109/SEAA.2016.56
   Liao CN, 2011, EXPERT SYST APPL, V38, P10803, DOI 10.1016/j.eswa.2011.02.031
   Lima FR, 2014, APPL SOFT COMPUT, V21, P194, DOI 10.1016/j.asoc.2014.03.014
   Longstaff T, 2019, BUILD SECURE APPL DE
   Mahmood S, 2017, INFORM SOFTWARE TECH, V91, P102, DOI 10.1016/j.infsof.2017.06.009
   Mao RF, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P450, DOI 10.1109/QRS51102.2020.00064
   McKay J., 2016, USE DEVSECOPS SMOOTH
   Myrbakken H, 2017, COMM COM INF SC, V770, P17, DOI 10.1007/978-3-319-67383-7_2
   Niazi M, 2016, INT J PROJ MANAG, V34, P1553, DOI 10.1016/j.ijproman.2016.08.008
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Patten M., 2016, Questionnaire research: A practical guide
   Prates L, 2019, LECT NOTES BUS INF P, V359, P77, DOI 10.1007/978-3-030-29608-7_7
   Rafi S, 2020, IEEE ACCESS, V8, P46958, DOI 10.1109/ACCESS.2020.2976803
   Rahul B., 2019, International Journal of Advance Research, Ideas and Innovations in Technology, V5
   Raj Tilak, 2011, International Journal of Productivity and Quality Management, V8, P153, DOI 10.1504/IJPQM.2011.041844
   Ravi V, 2005, TECHNOL FORECAST SOC, V72, P1011, DOI 10.1016/j.techfore.2004.07.002
   Rembetsy M, 2012, CONTINUOUSLY DEPLOYI
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Sage A.P., 1977, Methodology for large-scale systems, P165
   SALINGER S, 2008, HUM TECHNOL, V4, P9, DOI DOI 10.17011/HT/URN.200804151350
   Sanchez-Gordon M., 2020, P IEEEACM 42 INT C S, P266
   Senapathi M., 2018, ser. EASE'18, P57
   Shackleford D., 2017, DEVSECOPS APPROACH S
   Shackleford D., 2016, DEVSECOPS PLAYBOOK
   SHARMA HD, 1995, TECHNOL FORECAST SOC, V48, P285, DOI 10.1016/0040-1625(94)00066-6
   Soni M, 2016, IEEE CONF CLOUD COMP, P85, DOI 10.1109/CCEM.2015.29
   Tomas N., 2019, 2019 International Conference on Cyber Security and Protection of Digital Services (Cyber Security), Cyber Security and Protection of Digital Services (Cyber Security), 2019 International Conference On, P1, DOI [DOI 10.1109/CYBERSECPODS.2019.8884935, 10.1109/CyberSecPODS.2019.8884935]
   Trewin D., 2002, Small business in Australia (ABS catalogue no. 1321.0)
   WARFIELD JN, 1974, IEEE T SYST MAN CYB, VSMC4, P81, DOI 10.1109/TSMC.1974.5408524
   Woods E, 2016, IEEE SOFTWARE, V33, P20, DOI 10.1109/MS.2016.86
   Yasar H., 2020, Overcoming DevSecOps Challenges: A Practical Guide for All Stakeholders
   Yasar H., 2018, BUILD SECURE APPL DE
   Yong D, 2006, INT J ADV MANUF TECH, V28, P839, DOI 10.1007/s00170-004-2436-5
   YOON KS, 1985, INT J PROD RES, V23, P345, DOI 10.1080/00207548508904712
   Zaydi M., 2020, Journal of Management Information and Decision Sciences, V23, P1
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zouggari A, 2012, ENG APPL ARTIF INTEL, V25, P507, DOI 10.1016/j.engappai.2011.10.012
NR 78
TC 23
Z9 25
U1 11
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106894
DI 10.1016/j.infsof.2022.106894
EA MAR 2022
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700009
OA hybrid
DA 2024-07-18
ER

PT J
AU Agh, H
   García, F
   Piattini, M
AF Agh, Halimeh
   Garcia, Felix
   Piattini, Mario
TI A checklist for the evaluation of software process line approaches
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software process line; Software development process; Software process
   variability; Evaluation checklist
ID EMPIRICAL-RESEARCH; PRODUCT LINES; VARIABILITY; MANAGEMENT; SUPPORT
AB Context: A Software Process Line (SPrL) can help organisations to construct bespoke software development processes for specific project situations by reusing core assets. However, as there are diverse approaches for SPrL Engineering (SPrLE), this necessitates proper assistance to organisations in selecting the SPrL approach best suited to their needs.Objective: This paper aims to identify an evaluation checklist that can be used for evaluating SPrLs. Method: The checklist was constructed in five stages: first, relevant aspects for managing process variability in the context of SPrLs were identified; based on these, research questions were then formed in the second stage. In the third stage, to answer the research questions, a literature review was conducted that focused on analysing 39 primary studies. In the fourth stage, the checklist was built by synthesising the literature results. In the fifth stage, the checklist was applied to two SPrL approaches as a proof of concept.Results: The checklist includes seven main aspects, including the modelling language used, the type of the approach based on the number of artefacts produced, the language constructs provided for variability modelling, the process perspectives covered, the tool used for supporting the SPrL approach, the variability-specific features provided to support process variability throughout the SPrL lifecycle, and the empirical evaluation conducted to evaluate the approach. Conclusion: The checklist can be used by organisations to compare SPrLs and then select the most suitable SPrL approach; furthermore, it can be used by researchers to propose novel SPrL approaches that consider important aspects for variability management throughout the SPrL lifecycle. Although we have provided an example of the use of the checklist to compare SPrLs, an empirical evaluation of the checklist is required to get feedback from the organisations regarding the strengths and weaknesses of the checklist.
C1 [Agh, Halimeh; Garcia, Felix; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, Informat Technol & Syst Inst, Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Agh, H (corresponding author), Univ Castilla La Mancha, Alarcos Res Grp, Informat Technol & Syst Inst, Ciudad Real, Spain.
EM agh.halime@gmail.com
RI Piattini, Mario/F-6271-2013
OI Piattini, Mario/0000-0002-7212-8279
FU Ministerio de Economia, Industria y Competitividad (MINECO) y el Fondo
   Europeo de Desarrollo Regional (FEDER) [RTI2018-098309-B-C31]; G3Soft
   [SBPLY/17/180501/000150]; GEMA (Generation and Evaluation of Models for
   dAta Quality); Consejeria de Educacion y Ciencia; Junta de Comunidades
   de Castilla-La Mancha
FX This work was supported by: BIZDEVOPS-Global [grant number
   RTI2018-098309-B-C31] , Ministerio de Economia, Industria y
   Competitividad (MINECO) y el Fondo Europeo de Desarrollo Regional
   (FEDER) ; G3Soft [grant number SBPLY/17/180501/000150 Model Engineering
   for Government and Management of Global Software Development] and GEMA
   (Generation and Evaluation of Models for dAta Quality) , Consejeria de
   Educacion y Ciencia, Junta de Comunidades de Castilla-La Mancha.
CR Abderrahmane L, 2014, P INT COMP SOFTW APP, P59, DOI 10.1109/COMPSAC.2014.13
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Acher M, 2010, LECT NOTES COMPUT SC, V5969, P62
   Acher Mathieu, 2011, P 5 INT WORKSH VAR M, P91
   Agh H, 2017, PROCEEDINGS OF THE FIFTH EUROPEAN CONFERENCE ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS (ECBS 2017), DOI 10.1145/3123779.3123810
   Agh H, 2021, SOFTWARE QUAL J, V29, P337, DOI 10.1007/s11219-021-09551-4
   Agh H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110546
   Aiello Marco, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P245, DOI 10.1109/COMPSACW.2010.50
   Alegria Hurtado., 2011, Proc. of the 2011 International Conference on Software and Systems Process, P43
   Alegria J. A. H., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P170, DOI 10.1109/ICSSP.2012.6225962
   Aleixo FA, 2011, LECT NOTES BUS INF P, V73, P372
   Aleixo FA, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P92
   [Anonymous], 2011, P INT C BUS PROC MAN, DOI DOI 10.1007/978-3-642-28115-0_31
   Hurtado JA, 2013, J SYST SOFTWARE, V86, P1153, DOI 10.1016/j.jss.2012.09.033
   Armbrust Ove, 2009, Software Process: Improvement and Practice, V14, P181, DOI 10.1002/spip.412
   Asadi M, 2014, J SYST SOFTWARE, V96, P73, DOI 10.1016/j.jss.2014.05.063
   Ayora C, 2012, J COLLOID INTERF SCI, V12, P111
   Ayora C, 2015, INFORM SOFTWARE TECH, V57, P248, DOI 10.1016/j.infsof.2014.05.009
   Ayora C, 2013, LECT NOTES BUS INF P, V132, P477
   Barreto AS, 2011, J UNIVERS COMPUT SCI, V17, P1765
   Bashroush R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3034827
   Biffl S., 2006, Software Process Improvement and Practice, V11, P229, DOI 10.1002/spip.266
   Blum FR., 2015, Proceedings of the 2015 international conference on software and system process, ICSSP 2015, tallinn, estonia, august 24 - 26, 2015, P127
   Botterweck Goetz., 2014, EVOLVING SOFTWARE SY, P265, DOI DOI 10.1007/978-3-642-45398-4_9
   Casare S, 2016, IEEE INT C ENG COMP, P197, DOI [10.1109/ICECCS.2016.31, 10.1109/ICECCS.2016.033]
   Costa DM, 2018, 2018 XLIV LATIN AMERICAN COMPUTER CONFERENCE (CLEI 2018), P110, DOI 10.1109/CLEI.2018.00022
   Costa DM, 2018, P BRAZ S SOFTW QUAL, P170
   Derguech W, 2010, LECT NOTES BUS INF P, V50, P157
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Dias de Carvalho D., 2014, 14 SOFTW PROC IMPR C, P118, DOI 10.1007/978-3-319-13036-1_11
   Duran A., 2003, P INT WORKSH SOFTW P, P140, DOI [10.1007/978-3-540-24667-1_11, DOI 10.1007/978-3-540-24667-1_11]
   Gallina B, 2014, 2014 38TH ANNUAL IEEE INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW 2014), P504, DOI 10.1109/COMPSACW.2014.84
   Gallina B, 2012, IEEE ANNU SOFTW ENG, P148, DOI 10.1109/SEW.2012.22
   García-Borgoñón L, 2014, INFORM SOFTWARE TECH, V56, P103, DOI 10.1016/j.infsof.2013.10.001
   Golpayegani F, 2013, 2013 IEEE EUROCON, P550, DOI 10.1109/EUROCON.2013.6625035
   Gomaa H, 2000, IEEE INT C ENG COMP, P50, DOI 10.1109/ICECCS.2000.873927
   Gomaa H., 2004, P WORKSH SOFTW VAR M, P331
   Hallerbach Alena, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P98, DOI 10.1109/CEC.2009.62
   Henderson-Sellers B., 2014, Situational method engineering, DOI DOI 10.1007/978-3-642-41467-1
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Alegría JAH, 2014, J SOFTW-EVOL PROC, V26, P386, DOI 10.1002/smr.1576
   Jafarinezhad O, 2012, P INT COMP SOFTW APP, P279, DOI 10.1109/COMPSAC.2012.39
   Jaufman O, 2005, LECT NOTES COMPUT SC, V3547, P328
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kellner M.I., 1991, Software Process, P176
   Kuhrmann M., 2014, INT C SOFTW SYST PRO, P99
   Kuhrmann M, 2016, J SYST SOFTWARE, V121, P49, DOI 10.1016/j.jss.2016.07.031
   Kuhrmann M, 2016, J SOFTW-EVOL PROC, V28, P241, DOI 10.1002/smr.1751
   La Rosa M, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3041957
   Lorenz WG, 2014, INT J SOFTW ENG KNOW, V24, P1357, DOI 10.1142/S0218194014500429
   Magdaleno A.M., 2012, P C IB AM ENG SOFTW, P42
   Martinez-Ruiz Tomas, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P128, DOI 10.1007/978-3-642-21843-9_12
   Martínez-Ruiz T, 2011, IET SOFTW, V5, P172, DOI 10.1049/iet-sen.2010.0020
   Martinez-Ruiz T., 2013, P INT C SOFTW SYST P, P46, DOI [10.1145/2486046.2486056, DOI 10.1145/2486046.2486056]
   Martínez-Ruiz T, 2013, LECT NOTES BUS INF P, V148, P417
   Martínez-Ruiz T, 2011, EUROMICRO CONF PROC, P334, DOI 10.1109/SEAA.2011.58
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Mirbel I, 2006, REQUIR ENG, V11, P58, DOI 10.1007/s00766-005-0019-0
   Munch Jurgen, 2012, Software Process Definition and Management
   Murguzur A, 2013, LECT NOTES BUS INF P, V148, P371
   Ocampo A., 2005, Software Process Improvement and Practice, V10, P273, DOI 10.1002/spip.229
   Ocampo A, 2007, LECT NOTES COMPUT SC, V4589, P160
   *OMG, 2008, SOFTW SYST PROC ENG
   Pillat RM, 2015, INFORM SOFTWARE TECH, V57, P95, DOI 10.1016/j.infsof.2014.09.004
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Rausch A., 2011, P INT C SOFTW SYST P, P230, DOI [10.1145/1987875.1987917, DOI 10.1145/1987875.1987917]
   Razavian M, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P82
   Reinhartz-berger I., 2014, ENTERPRISE BUSINESS, P378
   Reiser MO, 2007, REQUIR ENG, V12, P57, DOI 10.1007/s00766-007-0046-0
   Rocha RD, 2013, INFORM SOFTWARE TECH, V55, P1355, DOI 10.1016/j.infsof.2013.02.007
   Rojas Blum Fabian, 2016, Journal of Software: Evolution and Process, V28, P783, DOI 10.1002/smr.1778
   Rombach D, 2005, LECT NOTES COMPUT SC, V3840, P83
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   Rosenmuller M, 2011, P 5 INT WORKSH VAR M, P11, DOI DOI 10.1145/1944892.1944894
   Rouille Emmanuelle, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P90, DOI 10.1109/SEAA.2013.50
   Rouillé E, 2012, ASIA PAC SOFWR ENG, P148, DOI 10.1109/APSEC.2012.82
   Saidani O., 2014, LNBIP, V175, P169
   Santos RMS, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1657, DOI 10.1145/2695664.2696046
   Schnieders Puhlmann, 2007, TECHNOLOGIES BUSINES, P63, DOI DOI 10.1007/1-4020-5634-6_6
   Schramm J., P INT C EV ASS SOFTW, V13, P1, DOI [10.1145/2745802.2745814, DOI 10.1145/2745802.2745814]
   Shakari P., 2006, P NORW INF C NIK 06, P81
   Silvestre L., 2015, P ACM IEEE INT C MOD, P36
   Simmonds J., 2011, MODELING VARIABILITY
   Simmonds J, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P406, DOI 10.1109/MODELS.2015.7338272
   Simmonds J, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON PRODUCT LINE APPROACHES IN SOFTWARE ENGINEERING (PLEASE), P33, DOI 10.1109/PLEASE.2013.6608661
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Teixeira Eldanae N., 2018, P 20 INT C ENT INF S, V2, P231
   Teixeira EN, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.08.007
   Ternite T., 2009, TUMI0905
   Ternité T, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P173, DOI 10.1109/SEAA.2009.48
   Valenca George, 2013, International Journal of Computer Science & Information Technology, V5, P1, DOI 10.5121/ijcsit.2013.5101
   Washizaki Hironori, 2006, 2006 4th IEEE International Conference on Industrial Informatics, P1301, DOI 10.1109/INDIN.2006.275847
   Washizaki H, 2006, LECT NOTES COMPUT SC, V4034, P415
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Zhang L, 2018, J COMPUT SCI TECH-CH, V33, P876, DOI 10.1007/s11390-018-1864-x
NR 96
TC 3
Z9 3
U1 2
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106864
DI 10.1016/j.infsof.2022.106864
EA FEB 2022
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700011
DA 2024-07-18
ER

PT J
AU Krupitzer, C
   Gruhl, C
   Sick, B
   Tomforde, S
AF Krupitzer, Christian
   Gruhl, Christian
   Sick, Bernhard
   Tomforde, Sven
TI Proactive hybrid learning and optimisation in self-adaptive systems: The
   swarm-fleet infrastructure scenario
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Self-awareness; Self-reflection; Hybrid optimisation; Autonomous
   learning; Proactive behaviour; Swarm fleet infrastructure; Autonomous
   taxi; Organic computing
ID USER PREFERENCES; MULTIAGENT; COORDINATION; INCENTIVES; SIMULATION
AB Context: Smart and adaptive Systems, such as self-adaptive and self-organising (SASO) systems, typically consist of a large set of highly autonomous and heterogeneous subsystems that are able to adapt their behaviour to the requirements of ever-changing, dynamic environments. Their successful operation is based on appropriate modelling of the internal and external conditions. Objective: The control problem for establishing a near-to-optimal coordinated behaviour of systems with multiple, potentially conflicting objectives is either approached in a distributed (i.e., fully autonomous by the autonomous subsystems) or in a centralised way (i.e. one instance controlling the optimisation and planning process). In the distributed approach, selfish behaviour and being limited to local knowledge may lead to sub-optimal system behaviour, while the centralised approach ignores the autonomy and the coordination efforts of parts of the system. Method: In this article, we present a concept for a hybrid (i.e., integrating a central optimisation with a distributed decision-making process) system management that combines local reinforcement learning and selfawareness mechanisms of fully autonomous subsystems with external system-wide planning and optimisation of adaptation freedom that steers the behaviour dynamically by issuing plans and guidelines augmented with incentivisation schemes. Results: This work addresses the inherent uncertainty of the dynamic system behaviour, the local autonomous and context-aware learning of subsystems, and proactive control based on adaptiveness. We provide the 'swarm-fleet infrastructure' - a self-organised taxi service established by autonomous, privately-owned cars - as a testbed for structured comparison of systems. Conclusion: The 'swarm-fleet infrastructure' supports the advantages of a proactive hybrid self-adaptive and self-organising system operation. Further, we provide a system model to combine the system-wide optimisation while ensuring local decision-making through reinforcement learning for individualised configurations.
C1 [Krupitzer, Christian] Univ Hohenheim, Food Informat & Computat Sci Lab CSL, Fruwirthstr 21, D-70599 Stuttgart, Germany.
   [Tomforde, Sven] Christian Albrechts Univ Kiel, Intelligent Syst, Hermann Rodewald Str 3, D-24118 Kiel, Germany.
   [Gruhl, Christian; Sick, Bernhard] Univ Kassel, Intelligent Embedded Syst, Wilhelmshoher Allee 73, D-34121 Kassel, Germany.
C3 University Hohenheim; University of Kiel; Universitat Kassel
RP Krupitzer, C (corresponding author), Univ Hohenheim, Food Informat & Computat Sci Lab CSL, Fruwirthstr 21, D-70599 Stuttgart, Germany.
EM christian.krupitzer@uni-hohenheim.de
RI Gruhl, Christian/AAM-9946-2021
OI Gruhl, Christian/0000-0001-9838-3676; Krupitzer,
   Christian/0000-0002-7275-0738
CR Agogino AK, 2012, AUTON AGENT MULTI-AG, V24, P1, DOI 10.1007/s10458-010-9142-5
   Ahmadi M, 2006, IEEE INT CONF ROBOT, P1724, DOI 10.1109/ROBOT.2006.1641955
   Angelov P., 2012, Autonomous learning systems: from data streams to knowledge in real-time
   Axhausen KW, 2016, MULTIAGENT TRANSPORT
   Bansal P, 2016, TRANSPORT RES C-EMER, V67, P1, DOI 10.1016/j.trc.2016.01.019
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bellman K, 2014, INT CONF SELF SELF, P123, DOI 10.1109/SASOW.2014.21
   Bergenhem C., 2012, P 19 ITS WORLD C OCT
   Berry D.M., 2005, P REFSQ
   Bhoopalam AK, 2018, TRANSPORT RES B-METH, V107, P212, DOI 10.1016/j.trb.2017.10.016
   BRACHA G, 1987, INFORM COMPUT, V75, P130, DOI 10.1016/0890-5401(87)90054-X
   Busoniu L, 2008, IEEE T SYST MAN CY C, V38, P156, DOI 10.1109/TSMCC.2007.913919
   Calma A, 2017, 2017 IEEE 2ND INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P109, DOI 10.1109/FAS-W.2017.129
   Casanova P, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P75, DOI 10.1145/2593929.2593946
   Casas J, 2010, INT SER OPER RES MAN, V145, P173, DOI 10.1007/978-1-4419-6142-6_5
   Chan ND, 2012, TRANSPORT REV, V32, P93, DOI 10.1080/01441647.2011.621557
   Coulouris G.F., 2005, Distributed Systems: Concepts and Design
   Criado N, 2013, AI COMMUN, V26, P317, DOI 10.3233/AIC-130560
   D'Angelo M, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P13, DOI 10.1109/SEAMS.2019.00012
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   De Hauwere Y.-M., 2009, P 20 BELG NETH C ART, P83
   De Hauwere Y.M., 2010, P 9 INT C AUTONOMOUS, V1, P715
   Diaconescu A, 2016, INT CONF SELF SELF, P100, DOI 10.1109/SASO.2016.16
   Dolev S, 1997, IEEE T PARALL DISTR, V8, P424, DOI 10.1109/71.588622
   Edenhofer S, 2016, AUTON SYST, P127, DOI 10.1007/978-3-319-29201-4_5
   Esfahani N., 2011, P ESECFSE
   Fagnant DJ, 2018, TRANSPORTATION, V45, P143, DOI 10.1007/s11116-016-9729-z
   Faria ER, 2016, ARTIF INTELL REV, V45, P235, DOI 10.1007/s10462-015-9444-8
   Firnkorn J, 2012, BUS STRATEG ENVIRON, V21, P264, DOI 10.1002/bse.738
   Forges F, 2002, J MATH ECON, V38, P1, DOI 10.1016/S0304-4068(02)00073-3
   Fredericks EM, 2019, INT CONF SELF SELF, P1, DOI 10.1109/SASO.2019.00010
   Gama J, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2523813
   Gerostathopoulos I, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P58, DOI 10.1145/3194133.3194152
   Gneiting T, 2014, ANNU REV STAT APPL, V1, P125, DOI 10.1146/annurev-statistics-062713-085831
   Graepel T., 2017, ARXIV PREPRINT ARXIV
   Gruhl C, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS COMPANION (ACSOS-C 2020), P64, DOI 10.1109/ACSOS-C51401.2020.00032
   Haboucha CJ, 2017, TRANSPORT RES C-EMER, V78, P37, DOI 10.1016/j.trc.2017.01.010
   Hahner  J., 2016, P 29 GI ITG INT C AR, P1
   Hennes D., 2012, Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems, P147
   Hörl S, 2017, PROCEDIA COMPUT SCI, V109, P899, DOI 10.1016/j.procs.2017.05.418
   Howard G.D., 2009, Proceedings of the Genetic and Evolutionary Computation Conference, P1219
   Jennings NR, 2001, GROUP DECIS NEGOT, V10, P199, DOI 10.1023/A:1008746126376
   Ji M, 2006, P AMER CONTR CONF, V1-12, P1358
   Kamel J, 2019, TRANSP RES PROC, V37, P115, DOI 10.1016/j.trpro.2018.12.173
   Kantert J., 2017, P SAOS
   Kantert J, 2015, CIT/IUCC/DASC/PICOM 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - UBIQUITOUS COMPUTING AND COMMUNICATIONS - DEPENDABLE, AUTONOMIC AND SECURE COMPUTING - PERVASIVE INTELLIGENCE AND COMPUTING, P1828, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.273
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kinneer C, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P40, DOI 10.1145/3194133.3194145
   Kok J.R., 2005, P IEEE S COMPUTATION, P29
   Kok JR, 2003, PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON ADVANCED ROBOTICS 2003, VOL 1-3, P1124
   Kounev S., 2015, Dagstuhl Rep., V5, P164, DOI [10.4230/DagRep.5.1.164, DOI 10.4230/DAGREP.5.1.164]
   Kounev S., 2017, Self-Aware Computing Systems, P3, DOI [10.1007/978-3-319-47474-8_1, DOI 10.1007/978-3-319-47474-81]
   Krueger R, 2016, TRANSPORT RES C-EMER, V69, P343, DOI 10.1016/j.trc.2016.06.015
   Krupitzer C, 2018, 2018 IEEE GLOBAL CONFERENCE ON INTERNET OF THINGS (GCIOT), P6, DOI 10.1109/GCIoT.2018.8620134
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Lesch V., 2019, P SAOS
   Lesch V, 2021, FUTURE GENER COMP SY, V116, P117, DOI 10.1016/j.future.2020.10.029
   Lesch V, 2019, 2019 IEEE 4TH INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W 2019), P6, DOI 10.1109/FAS-W.2019.00016
   Maciejewski M, 2018, TRANSPORT-VILNIUS, V33, P971, DOI 10.3846/16484142.2017.1347827
   Marinescu A, 2017, ACM T AUTON ADAP SYS, V12, DOI 10.1145/3070861
   Martinez Luis M., 2017, International Journal of Transportation Science and Technology, V6, P13, DOI 10.1016/j.ijtst.2017.05.005
   Mihaylov M, 2014, AUTON AGENT MULTI-AG, V28, P749, DOI 10.1007/s10458-013-9240-2
   Moreno GA, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P51, DOI 10.1145/3194133.3194144
   Moreno GA, 2016, PR INT CONF AUTONOM, P147, DOI 10.1109/ICAC.2016.59
   Muller-Schloer C., 2017, Organic Computing-Technical Systems for Survival in the Real World
   Musk E, 2020, TESLA VISION
   Pinedo ML, 2012, SCHEDULING: THEORY, ALGORITHMS, AND SYSTEMS, FOURTH EDITION, P1, DOI 10.1007/978-1-4614-2361-4
   Pipattanasomporn M, 2009, 2009 IEEE/PES POWER SYSTEMS CONFERENCE AND EXPOSITION, VOLS 1-3, P1629
   Prasad M. V. N., 1996, Adaptation, Coevolution and Learning in Multiagent Systems. Papers from the 1996 AAAI Symposium (TR SS-96-01), P72
   Prothmann Holger, 2012, Self-Organizing Systems. Proceedings of the 6th IFIP TC 6 International Workshop (IWSOS 2012), P48, DOI 10.1007/978-3-642-28583-7_5
   Qureshi Nauman A., 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P263, DOI 10.1007/978-3-642-28714-5_24
   Ramirez Andres J., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P53, DOI 10.1007/978-3-642-33666-9_5
   Requate T, 2005, ECOL ECON, V54, P175, DOI 10.1016/j.ecolecon.2004.12.028
   Rizk Y, 2018, IEEE T COGN DEV SYST, V10, P514, DOI 10.1109/TCDS.2018.2840971
   Rudolph S, 2019, ACM T AUTON ADAP SYS, V14, DOI 10.1145/3345319
   Salinas D, 2020, INT J FORECASTING, V36, P1181, DOI 10.1016/j.ijforecast.2019.07.001
   Scheidler A, 2008, INT FED INFO PROC, V268, P33
   Shaheen SA, 2015, TRANSPORTATION, V42, P519, DOI 10.1007/s11116-015-9607-0
   Shevtsov S, 2019, ACM T AUTON ADAP SYS, V13, DOI 10.1145/3328730
   SMITH RG, 1980, IEEE T COMPUT, V29, P1104, DOI 10.1109/TC.1980.1675516
   Sommer M, 2016, AUTON SYST, P113, DOI 10.1007/978-3-319-25808-9_7
   Steck F, 2018, TRANSPORT RES REC, V2672, P11, DOI 10.1177/0361198118757980
   Stein A., 2017, PROC IJCCI, P129
   Stein A., 2017, J SYST ARCHIT
   Stone P, 2000, AUTON ROBOT, V8, P345, DOI 10.1023/A:1008942012299
   Sudeikat J., 2009, ELECT COMMUN EASST, V17
   Tomforde S., 2011, IGI, P11
   Tomforde S, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS COMPANION (ACSOS-C 2020), P166, DOI 10.1109/ACSOS-C51401.2020.00050
   Tomforde S, 2014, J AMB INTEL SMART EN, V6, P179, DOI 10.3233/AIS-140252
   Tomforde S, 2011, AUTON SYST, P325, DOI 10.1007/978-3-0348-0130-0_21
   Tomforde S, 2008, SASO 2008: SECOND IEEE INTERNATIONAL CONFERENCE ON SELF-ADAPTIVE AND SELF-ORGANIZING SYSTEMS, PROCEEDINGS, P413, DOI 10.1109/SASO.2008.31
   VanSyckel S, 2014, PERVASIVE MOB COMPUT, V10, P51, DOI 10.1016/j.pmcj.2013.10.006
   Vinuesa R, 2020, NAT COMMUN, V11, DOI 10.1038/s41467-019-14108-y
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Vosooghi R., 2017, P EEE C INT TRANSP S, P199
   Vosooghi R, 2019, TRANSPORTATION, V46, P1997, DOI 10.1007/s11116-019-10013-x
   Vrancx P, 2011, ICAART 2011: PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON AGENTS AND ARTIFICIAL INTELLIGENCE, VOL 2, P263
   Wang BY, 2018, PROCEDIA COMPUT SCI, V130, P797, DOI 10.1016/j.procs.2018.04.138
   Wang HZ, 2017, ENERG CONVERS MANAGE, V153, P409, DOI 10.1016/j.enconman.2017.10.008
   Weiss G, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P26, DOI 10.1145/3194133.3194157
   Weissbach M, 2017, INT CONF SELF SELF, P111, DOI 10.1109/SASO.2017.20
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Wilson SW, 1995, EVOL COMPUT, V3, P149, DOI 10.1162/evco.1995.3.2.149
   Zhang WJ, 2019, IEEE T SMART GRID, V10, P4425, DOI 10.1109/TSG.2018.2859749
   Zhang XL, 2016, IEEE COMMUN SURV TUT, V18, P54, DOI 10.1109/COMST.2015.2415528
NR 105
TC 4
Z9 4
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106826
DI 10.1016/j.infsof.2022.106826
EA FEB 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0J9PR
UT WOS:000780430800008
DA 2024-07-18
ER

PT J
AU Cho, H
   Lee, S
   Kang, S
AF Cho, Heetae
   Lee, Seonah
   Kang, Sungwon
TI Classifying issue reports according to feature descriptions in a user
   manual based on a deep learning model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep learning; Classification; Issue reports; User manual; Software
   features; Data-based software engineering; Convolution neural network;
   Recurrent neural network; Machine learning
AB Context: Issue reports are documents with which users report problems and state their opinions on a software system. Issue reports are useful for software maintenance, but managing them requires developers' considerable manual effort. To reduce such effort, previous studies have mostly suggested methods for automatically classifying issue reports. However, most of those studies classify issue reports according to issue types, based only on whether the report is relevant to a bug, whether the report is duplicated, or whether the issue is functional or nonfunctional. Objective: In this paper, we intend to link issue reports and a user manual and so propose a deep learning model based method that classifies issue reports according to software features that are described in the user manual in order to help developers relate issue reports to features to make changes to a software system. Method: In order to classify issue reports according to the feature descriptions in a user manual, our method uses a deep learning technique with a word embedding technique. The key insight in our method is that the sections of a user manual that describe software features contain the words and sentences similar to those in issue reports. Based on the insight, we construct a classification model that learns the feature descriptions (i.e. sections) in a user manual and classifies issue reports according to the feature descriptions. Results: We evaluate the proposed method by comparing its classification performance with that of the state-ofthe-art method, TicketTagger. The experimental results show that the proposed method yields 10% ~ 24% higher classification f1-score than that of TicketTagger. We also experiment with two deep learning models and four word embedding techniques and find out that the Convolution Neural Network model with FastText (or GloVe) yields the best performance. Conclusion: Our study shows the feasibility of classifying issue reports according to software features, which can be the basis for successive studies to classify issue reports into software features.
C1 [Cho, Heetae] Gyeongsang Natl Univ, Dept Aerosp & Software Engn, 501 Jinju Daero, Jinju Si, Gyeongsangnam D, South Korea.
   [Cho, Heetae; Lee, Seonah] Gyeongsang Natl Univ, Dept AI Convergence Engn, 501 Jinju Daero, Jinju Si, Gyeongsangnam D, South Korea.
   [Kang, Sungwon] Korea Adv Inst Sci & Technol, Sch Comp, 291 Daehak Ro, Daejeon, South Korea.
C3 Gyeongsang National University; Gyeongsang National University; Korea
   Advanced Institute of Science & Technology (KAIST)
RP Lee, S (corresponding author), Gyeongsang Natl Univ, Dept Aerosp & Software Engn, 501 Jinju Daero, Jinju Si, Gyeongsangnam D, South Korea.
EM saleese@gnu.ac.kr
OI Lee, Seonah/0000-0002-2004-2924
CR Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Charalampidou S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2294
   Choetkiertikul M, 2018, PROC IEEE ACM INT C, P244, DOI 10.1145/3183440.3194952
   Chung J., 2014, NIPS 2014 WORKSH DEE
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dommati S. J., 2013, ARXIV13041677
   El Zanaty F., 2020, IEEE SOFTWARE
   Esparteiro Garcia Jorge, 2016, Journal of Software, V11, P193, DOI 10.17706/jsw.11.2.193-200
   Fan Q, 2017, INT SYMP EMP SOFTWAR, P121, DOI 10.1109/ESEM.2017.19
   Fazayeli H, 2019, PROCEDIA COMPUT SCI, V161, P585, DOI 10.1016/j.procs.2019.11.160
   Haris M. Syauqi, 2020, SIET '20: Proceedings of the 5th International Conference on Sustainable Information Engineering and Technology, P142, DOI 10.1145/3427423.3427450
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hübner P, 2020, EMPIR SOFTW ENG, V25, P4350, DOI 10.1007/s10664-020-09831-w
   Joulin A., 2016, ARXIV PREPRINT ARXIV, V2, P427
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kang K. C., 1990, Technical Report
   조희태, 2018, [KIPS Transactions on Software and Data Engineering, 정보처리학회논문지. 소프트웨어 및 데이터 공학], V7, P461, DOI 10.3745/KTSDE.2018.7.12.461
   King DB, 2015, ACS SYM SER, V1214, P1
   Kochhar PS, 2014, IEEE INT C ENG COMP, P126, DOI 10.1109/ICECCS.2014.25
   Kruger Jacob, 2019, Software Engineering for Variability Intensive Systems, P153, DOI 10.1201/9780429022067-7
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Pandey N, 2018, ADV INTELL SYST, V518, P422, DOI 10.1007/978-981-10-3373-5_42
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Panichella A, 2019, LECT NOTES COMPUT SC, V11664, P11, DOI 10.1007/978-3-030-27455-9_2
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Quirchmayr T, 2018, EMPIR SOFTW ENG, V23, P3630, DOI 10.1007/s10664-018-9597-6
   Quirchmayr T, 2017, LECT NOTES COMPUT SC, V10153, P255, DOI 10.1007/978-3-319-54045-0_19
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Ruan H, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110406
   Sak H, 2014, INTERSPEECH, P338
   Saleem Muhammad., 2018, University of Sindh Journal of Information and Communication Technology, V2, P180
   SHAND RM, 1994, IEEE T PROFESSIONAL, V37, P75
   Sohrawardi SJ, 2014, 2014 NINTH INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION MANAGEMENT (ICDIM), P242, DOI 10.1109/ICDIM.2014.6991434
   Sree-Kumar A, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P43, DOI 10.1145/3233027.3233029
   Umer Q., 2019, IEEE T RELIAB
   Wang BC, 2018, J SYST SOFTWARE, V146, P59, DOI 10.1016/j.jss.2018.09.001
   Wen M, 2018, IEEE Transactions on Software Engineering
   White Robert, 2020, 2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE), P861, DOI 10.1145/3377811.3380921
   Zhang ZL, 2018, ADV NEUR IN, V31
   Zhu Y., 2019, ArXiv preprint
NR 45
TC 3
Z9 3
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106743
DI 10.1016/j.infsof.2021.106743
EA OCT 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WN5QL
UT WOS:000711821900003
OA hybrid
DA 2024-07-18
ER

PT J
AU Smite, D
   Moe, NB
   Gonzalez-Huerta, J
AF Smite, Darja
   Moe, Nils Brede
   Gonzalez-Huerta, Javier
TI Overcoming cultural barriers to being agile in distributed teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Culture; Cultural Barriers; Agile; DevOps; Distributed Agile Teams
ID SOFTWARE; MANAGEMENT; DISTANCE; CONTEXT
AB Context: Agile methods in offshored projects have become increasingly popular. Yet, many companies have found that the use of agile methods in coordination with companies located outside the regions of early agile adopters remains challenging. India has received particular attention as the leading destination of offshoring contracts due to significant cultural differences between sides of such contracts. Alarming differences are primarily rooted in the hierarchical business culture of Indian organizations and related command-and-control management behavior styles. Objective: In this study, we attempt to understand whether cultural barriers persist in distributed projects in which Indian engineers work with a more empowering Swedish management, and if so, how to overcome them. The present work is an invited extension of a conference paper. Method: We performed a multiple-case study in a mature agile company located in Sweden and a more hierarchical Indian vendor. We collected data from five group interviews with a total of 34 participants and five workshops with 96 participants in five distributed DevOps teams, including 36 Indian members, whose preferred behavior in different situations we surveyed. Results: We identified twelve cultural barriers, six of which were classified as impediments to agile software development practices, and report on the manifestation of these barriers in five DevOps teams. Finally, we put forward recommendations to overcome the identified barriers and emphasize the importance of cultural training, especially when onboarding new team members. Conclusions: Our findings confirm previously reported behaviors rooted in cultural differences that impede the adoption of agile approaches in offshore collaborations, and identify new barriers not previously reported. In contrast to the existing opinion that cultural characteristics are rigid and unchanging, we found that some barriers present at the beginning of the studied collaboration disappeared over time. Many offshore members reported behaving similarly to their onshore colleagues.
C1 [Smite, Darja; Moe, Nils Brede; Gonzalez-Huerta, Javier] Blekinge Inst Technol, Karlskrona, Sweden.
   [Smite, Darja; Moe, Nils Brede] SINTEF ICT, Trondheim, Norway.
C3 Blekinge Institute Technology; SINTEF
RP Smite, D (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM Darja.Smite@bth.se; Nils.B.Moe@bth.se; Javier.Gonzalez.Huerta@bth.se
RI Gonzalez-Huerta, Javier/V-4258-2019; Moe, Nils Brede/AAD-8183-2021
OI Gonzalez-Huerta, Javier/0000-0003-1350-7030; 
FU GoLD project; ScaleWise project; Swedish Knowledge Foundation under the
   KK-Hog grant [2016/0191, 2019/0087]; A-team project; Research Council of
   Norway [267704]
FX This research was funded by the GoLD and ScaleWise projects and the
   Swedish Knowledge Foundation under the KK-Hog grants 2016/0191 and
   2019/0087, and by the A-team project and the Research Council of Norway
   through grant 267704.
CR ANCONA DG, 1990, ACAD MANAGE J, V33, P334, DOI 10.5465/256328
   [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2010, CULTURES ORG SOFTWAR
   [Anonymous], 1986, PSYCHOL WORK PRODUCT
   Ayed H, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P153, DOI 10.1109/ICSE-SEIP.2017.33
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Casey V, 2009, INT CONF GLOBAL SOFT, P8, DOI 10.1109/ICGSE.2009.9
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dorairaj S, 2013, 2013 AGILE CONFERENCE (AGILE), P1, DOI 10.1109/AGILE.2013.7
   Dorairaj S, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P197, DOI 10.1109/ICGSE.2013.33
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Erickson J, 2005, J DATABASE MANAGE, V16, P88, DOI 10.4018/jdm.2005100105
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2006, USING AGILE SOFTWARE
   Gallivan M., 2005, Information and Organization, V15, P295, DOI 10.1016/j.infoandorg.2005.02.005
   Guzzo RA, 1996, ANNU REV PSYCHOL, V47, P307, DOI 10.1146/annurev.psych.47.1.307
   Hackman JR, 2005, ACAD MANAGE REV, V30, P269, DOI [10.2307/20159119, 10.5465/AMR.2005.16387885]
   HALL ET, 1960, HARVARD BUS REV, V38, P87
   Hoda R, 2011, LECT NOTES BUS INF P, V77, P73
   Hole S, 2008, COMM COM INF SC, V16, P189
   Holmström H, 2006, INFORM SYST MANAGE, V23, P7, DOI 10.1201/1078.10580530/46108.23.3.20060601/93703.2
   Iivari J, 2011, INFORM SOFTWARE TECH, V53, P509, DOI 10.1016/j.infsof.2010.10.008
   Iivari N, 2010, J ORGAN END USER COM, V22, P40, DOI 10.4018/joeuc.2010070103
   Jabbari R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1957
   Kajko-Mattsson M., 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P51, DOI 10.1109/AGILE.2010.14
   KATZENBACH JR, 1993, HARVARD BUS REV, V71, P111
   Kautz K., 2009, ACIS 2009 P 20 AUSTR, P174
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Lehman M. M., 1989, Journal of Software Maintenance: Research and Practice, V1, P3, DOI 10.1002/smr.4360010103
   Leung Lawrence, 2015, J Family Med Prim Care, V4, P324, DOI 10.4103/2249-4863.161306
   Liu Bo-Han, 2019, Journal of Software, V30, P3206, DOI 10.13328/j.cnki.jos.005796
   Moe N.B., 2020, EVALUATION ASSESSMEN, P150
   Moe NB, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P6997
   Moe NB, 2014, EMPIR SOFTW ENG, V19, P1225, DOI 10.1007/s10664-013-9272-x
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   Morgan G., 1996, IMAGES ORG, V2nd
   Morgeson FP, 2005, J APPL PSYCHOL, V90, P497, DOI 10.1037/0021-9010.90.3.497
   Ozawa H, 2013, 2013 AGILE CONFERENCE (AGILE), P82, DOI 10.1109/AGILE.2013.13
   Schon Donald., 1996, READING ADDISON WESL, V305
   Smite D, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P1
   Srinivasan J., 2010, P 3 INDIA SOFTWARE E, P125
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Stray V, 2016, LECT NOTES COMPUT SC, V10027, P458, DOI 10.1007/978-3-319-49094-6_31
   Strong DR, 2009, ECOLOGY, V90, P1, DOI 10.1890/0012-9658-90.1.1
   Summers M, 2008, AGILE 2008, PROCEEDINGS, P333, DOI 10.1109/Agile.2008.37
   Sundararajan S, 2014, IET SOFTW, V8, P245, DOI 10.1049/iet-sen.2013.0190
   Van Maanen J., 1993, Organization theory and the multinational corporation, P275, DOI [DOI 10.1007/978-1-349-22557-6_12, 10.1007/978-1-349-22557-6_12]
   van Solingen R, 2000, INFORM SOFTWARE TECH, V42, P965, DOI 10.1016/S0950-5849(00)00148-8
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Yukl G., 2006, LEADERSHIP ORG, V6th
NR 53
TC 16
Z9 19
U1 5
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106612
DI 10.1016/j.infsof.2021.106612
EA MAY 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA TI1GV
UT WOS:000672531500012
DA 2024-07-18
ER

PT J
AU Rankovic, D
   Rankovic, N
   Ivanovic, M
   Lazic, L
AF Rankovic, Dragica
   Rankovic, Nevena
   Ivanovic, Mirjana
   Lazic, Ljubomir
TI Convergence rate of Artificial Neural Networks for estimation in
   software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Convergence rate; Taguchi Orthogonal Arrays;
   Artificial Neural Networks design; Fuzzification; Clustering
ID OPTIMIZATION; PARAMETERS; DESIGN
AB Context: Nowadays, companies are investing in brand new software, given that fact they always need help with estimating software development, effort, costs, and the period of time needed for completing the software itself. In this paper, four different architectures of Artificial Neural Networks (ANN), as one of the most desired tools for predicting and estimating effort in software development, were used. Objective: This paper aims to determine the convergence rate of each of the proposed ANNs, when obtaining the minimum relative error, first depending on the cost effect function, then on the nature of the data on which the training, testing, and validation is performed. Method: Magnitude relative error (MRE) is calculated based on Taguchi's orthogonal plans for each of these four proposed ANN architectures. The fuzzification method, five different datasets, the clustering method for input values of each dataset, and prediction were used to achieve the best model for estimation. Results: Based on performed parts of the experiment, it can be concluded that the convergence rate of each proposed architecture depends on the cost effect function and the nature of projects in different datasets. By following the prediction throughout all experimental parts, it can be further confirmed that ANN-L36 gave the best results in this proposed approach. Conclusion: The main advantages of this model are as follows: the number of iterations is less than 10, shortened effort estimation time thanks to convergence rate, simple architecture of each proposed ANN, large coverage of different values of actual project efficiency, and minimal MMRE. This model can also serve as an idea for the construction of a tool that would be able to reliably, efficiently and accurately estimate the effort when developing various software projects.
C1 [Rankovic, Dragica; Rankovic, Nevena; Lazic, Ljubomir] Union Univ, Sch Comp, Belgrade 11000, Serbia.
   [Ivanovic, Mirjana] Univ Novi Sad, Fac Sci, Novi Sad 21000, Serbia.
C3 University of Novi Sad
RP Rankovic, D (corresponding author), Union Univ, Sch Comp, Belgrade 11000, Serbia.
EM drankovic@raf.rs
RI Ivanovic, M./AAE-7711-2020; Rankovic, Nevena/IYJ-9547-2023
OI Rankovic, Nevena/0000-0002-9910-5886; Ivanovic,
   Mirjana/0000-0003-1946-0384
CR Abdullah S, 2021, FOOD CHEM, V339, DOI 10.1016/j.foodchem.2020.127862
   Albarqi M, 2020, NUCL INSTRUM METH A, V953, DOI 10.1016/j.nima.2019.163217
   BaniMustafa A, 2018, INT CONF COMP SCI, P249, DOI 10.1109/CSIT.2018.8486222
   Barry, 1981, SOFTWARE ENG EC, V197
   Bhatia P.K., 2014, INT J COMPUT APPL, V98
   Boehm B., 2020, SOFTWARE COST ESTIMA
   BOETTICHER G, 2001, 2 INT WORKSH SOFT CO
   Dutta, IJCA P INT S DEV MEM, P5
   Apolo-Apolo OE, 2020, AGRONOMY-BASEL, V10, DOI 10.3390/agronomy10020175
   Fadhil AA, 2020, IEEE ACCESS, V8, P75279, DOI 10.1109/ACCESS.2020.2988867
   Galorath D.D., 2006, SOFTWARE SIZING ESTI
   Goyal Somya, 2018, International Journal of Information Technology and Computer Science, V10, P35, DOI 10.5815/ijitcs.2018.03.05
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Irfan SS, 2019, MATER TODAY-PROC, V18, P2952
   Jong WR, 2020, J CHIN INST ENG, V43, P346, DOI 10.1080/02533839.2019.1708804
   Kamaraj K, 2020, SOFT COMPUT, V24, P13501, DOI 10.1007/s00500-020-05197-9
   Kaur Ishleen, 2018, International Journal of Information Technology, V10, P181, DOI 10.1007/s41870-018-0083-6
   KHAW JFC, 1995, NEUROCOMPUTING, V7, P225, DOI 10.1016/0925-2312(94)00013-I
   Kumar PS, 2020, ADV INTELL SYST COMP, V1120, P165, DOI 10.1007/978-981-15-2449-3_14
   Kumar PS, 2020, COMPUT SCI REV, V38, DOI 10.1016/j.cosrev.2020.100288
   Langsari K, 2017, 2017 4TH INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING, COMPUTER SCIENCE AND INFORMATICS (EECSI), P453
   Lazic Ljubomir, 2010, Proceedings of the WSEAS International Conference. 4th European Computing Conference (ECC 2010). European Computing Conference, P160
   LAZIC L, 2015, CRITICAL REV SOURCE, V15, P535
   Lin MC, 2020, INT J COMPUT INTEG M, V33, P343, DOI 10.1080/0951192X.2019.1639218
   Liu YQ, 2020, NEURAL PROCESS LETT, V51, P1771, DOI 10.1007/s11063-019-10185-8
   Malhotra R, 2012, J INF PROCESS SYST, V8, P241, DOI 10.3745/JIPS.2012.8.2.241
   Mandal T., 2020, ENERGY ECOL ENV, P1
   Mukherjee S, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION CONTROL AND COMPUTING TECHNOLOGIES (ICACCCT), P406, DOI 10.1109/ICACCCT.2014.7019474
   Onyutha C., 2020, Geoscientific Model Development Discussions, DOI [DOI 10.5194/GMD-2020-51, https://doi.org/10.5194/gmd-2020-51, 10.5194/gmd-2020-51]
   Pandey M, 2020, WIRELESS PERS COMMUN, V110, P1659, DOI 10.1007/s11277-019-06805-0
   Phannachitta P, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106330
   Poonam R., 2020, IJSDR, V5
   Putnam LawrenceH., 1991, Measures for excellence: reliable software on time, within budget
   Roxas C.L. C., 2019, 2019 IEEE 11th International Conference on Humanoid, Nanotechnology, Information Technology, Communication and Control, Environment, and Management (HNICEM), P1
   Setiono R, 2010, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2010.82
   Stoica A, 1997, FR ART INT, V41, P418
   Subasri R, 2020, INT J AMBIENT ENERGY, DOI 10.1080/01430750.2020.1817779
   Suresh Kumar P., 2020, Computational Intelligence in Pattern Recognition. Proceedings of CIPR 2019. Advances in Intelligent Systems and Computing (AISC 999), P807, DOI 10.1007/978-981-13-9042-5_70
   Khang TD, 2020, ALGORITHMS, V13, DOI 10.3390/a13070158
   Vijay JF, 2019, NEURAL COMPUT APPL, V31, P1633, DOI 10.1007/s00521-018-3565-3
   Yang WH, 1998, J MATER PROCESS TECH, V84, P122, DOI 10.1016/S0924-0136(98)00079-X
   Yu H, 2011, IEEE T POWER SYST, V26, P1573, DOI 10.1109/TPWRS.2010.2082576
   Zhan L, 2022, CURR ISSUES TOUR, V25, P150, DOI 10.1080/13683500.2020.1857712
NR 43
TC 13
Z9 13
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106627
DI 10.1016/j.infsof.2021.106627
EA MAY 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500011
OA hybrid
DA 2024-07-18
ER

PT J
AU Mi, Q
   Xiao, Y
   Cai, Z
   Jia, XB
AF Mi, Qing
   Xiao, Yan
   Cai, Zhi
   Jia, Xibin
TI The effectiveness of data augmentation in code readability
   classification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code readability classification; Data augmentation; Generative
   adversarial network; Deep learning; Empirical software engineering
AB Context: Training deep learning models for code readability classification requires large datasets of quality pre-labeled data. However, it is almost always time-consuming and expensive to acquire readability data with manual labels. Objective: We thus propose to introduce data augmentation approaches to artificially increase the size of training set, this is to reduce the risk of overfitting caused by the lack of readability data and further improve the classification accuracy as the ultimate goal. Method: We create transformed versions of code snippets by manipulating original data from aspects such as comments, indentations, and names of classes/methods/variables based on domain-specific knowledge. In addition to basic transformations, we also explore the use of Auxiliary Classifier GANs to produce synthetic data. Results: To evaluate the proposed approach, we conduct a set of experiments. The results show that the classification performance of deep neural networks can be significantly improved when they are trained on the augmented corpus, achieving a state-of-the-art accuracy of 87.38%. Conclusion: We consider the findings of this study as primary evidence of the effectiveness of data augmentation in the field of code readability classification.
C1 [Mi, Qing; Cai, Zhi; Jia, Xibin] Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
   [Xiao, Yan] Natl Univ Singapore, Sch Comp, Singapore, Singapore.
C3 Beijing University of Technology; National University of Singapore
RP Cai, Z (corresponding author), Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
EM miqing@bjut.edu.cn; dcsxan@nus.edu.sg; caiz@bjut.edu.cn;
   jiaxibin@bjut.edu.cn
RI jia, xibin/AAE-6620-2022; Mi, Qing/GQI-1620-2022
OI Mi, Qing/0000-0001-5063-3189
FU Beijing Municipal Natural Science Foundation [4202004]
FX This work is supported by the Beijing Municipal Natural Science
   Foundation (No. 4202004).
CR Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Dorn Jonathan, 2012, A General Software Readability Model, P1
   Inoue H., 2018, IMAGES CLASSIFICATIO
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Mi Q, 2018, INFORM SOFTWARE TECH, V104, P60, DOI 10.1016/j.infsof.2018.07.006
   Odena A, 2017, PR MACH LEARN RES, V70
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
NR 10
TC 12
Z9 13
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106378
DI 10.1016/j.infsof.2020.106378
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200001
DA 2024-07-18
ER

PT J
AU Yusop, NSM
   Grundy, J
   Schneider, JG
   Vasa, R
AF Yusop, Nor Shahida Mohamad
   Grundy, John
   Schneider, Jean-Guy
   Vasa, Rajesh
TI A revised open source usability defect classification taxonomy
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Usability defect reporting; Usability defect taxonomy; Empirical
   evaluation; Open source software development
AB Context: : Reporting usability defects is a critical part of improving software. Accurately classifying these reported usability defects is critical for reporting, understanding, triaging, prioritizing and ultimately fixing such defects. However, existing usability defect classification taxonomies have several limitations when used for open source software (OSS) development. This includes incomplete coverage of usability defect problems, unclear criticality of defects, lack of formal usability training of most OSS defect reporters and developers, and inconsistent terminology and descriptions.
   Objective: : To address this gap, as part of our wider usability defect reporting research, we have developed a new usability defect taxonomy specifically designed for use on OSS projects.
   Method: : We used Usability Problem Taxonomy (UPT) to classify 377 usability defect reports from Mozilla Thunderbird, Firefox for Android, and the Eclipse Platform. At the same time, we also used the card-sorting technique to group defects that could not be classified using UPT. We looked for commonalities and similarities to further group the defects within each category as well as across categories.
   Results: : We constructed a new taxonomy for classifying OSS usability defects, called Open Source Usability Defect Classification (OSUDC). OSUDC was developed by incorporating software engineering and usability engineering needs to make it feasible to be used in open source software development. The use of the taxonomy has been validated on five real cases of usability defects. However, evaluation results using the OSUDC were only moderately successful.
   Conclusion: : The OSUDC serves as a common vocabulary to describe and classify usability defects with respect to graphical user interface issues. It may help software developers to better understand usability defects and prioritize them accordingly. For researchers, the OSUDC will be helpful when investigating both trends of usability defect types and understanding the root cause of usability defect problems.
C1 [Yusop, Nor Shahida Mohamad] Univ Teknol MARA, Fac Comp & Math Sci, Shah Alam, Selangor, Malaysia.
   [Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Schneider, Jean-Guy; Vasa, Rajesh] Deakin Univ, Fac Sci Engn & Built Environm, Geelong, Vic, Australia.
C3 Universiti Teknologi MARA; Monash University; Deakin University
RP Yusop, NSM (corresponding author), Univ Teknol MARA, Fac Comp & Math Sci, Shah Alam, Selangor, Malaysia.
EM nor_shahida@uitm.edu.my; john.grundy@monash.edu;
   rajesh.vasa@deakin.edu.au
RI Vasa, Rajesh/GOK-1135-2022; MOHAMAD YUSOP, NOR SHAHIDA/KQT-8730-2024;
   Grundy, John/I-6681-2012
OI Vasa, Rajesh/0000-0003-4805-1467; Grundy, John/0000-0003-4928-7076
FU Fundamental Research Grant Scheme (FRGS), Universiti Teknologi MARA
   (UiTM) [FRGS/1/2018/ICT 01/UITM/02/1]; ARC [DP140102185, FL190100035];
   Deakin Software and Technology Innovation Lab; Data61
FX Support for the first author from the Fundamental Research Grant Scheme
   (FRGS) under Contracts FRGS/1/2018/ICT 01/UITM/02/1, Universiti
   Teknologi MARA (UiTM), ARC Discovery Projects scheme project DP140102185
   and Laureate Fellowship FL190100035, and from the Deakin Software and
   Technology Innovation Lab and Data61 for all authors, is gratefully
   acknowledged.
CR Andre TS, 2001, INT J HUM-COMPUT ST, V54, P107, DOI 10.1006/ijhc.2000.0441
   [Anonymous], 1977, BIOMETRICS
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Bruun A, 2014, BEHAV INFORM TECHNOL, V33, P1148, DOI 10.1080/0144929X.2014.883552
   Çetin G, 2007, LECT NOTES COMPUT SC, V4564, P32
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   David S, 2014, PROCEEDINGS OF INTERNATIONAL CONFERENCE INFORMATION SYSTEMS AND DESIGN OF COMMUNICATION (ISDOC2014), P1, DOI 10.1145/2618168.2618169
   Despalatovic L., 2013, INT J COMPUT INF TEC, V2, P958
   Faaborg A., 2010, CHI C HUM FACT COMP, P4
   Faaborg A., 2010, 28 ACM C HUM FACT CO
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Geng RL, 2014, INT CONF QUAL SOFTW, P240, DOI 10.1109/QSIC.2014.49
   Ham DH, 2014, COGN TECHNOL WORK, V16, P373, DOI 10.1007/s10111-013-0267-6
   Keenan S. L., 1999, Empirical Software Engineering, V4, P71, DOI 10.1023/A:1009855231530
   Khajouei R, 2011, J BIOMED INFORM, V44, P948, DOI 10.1016/j.jbi.2011.07.002
   Lelli V., 2015, IEEE 8 INT C SOFTW T
   Nichols D. M., 2006, Software Process Improvement and Practice, V11, P149, DOI 10.1002/spip.256
   Nielsen J., 1990, SIGCHI Bulletin, P249
   Norman D. A., 1986, Cognitive Engineering, P31, DOI [10.1201/b15703-3, DOI 10.1201/B15703]
   Padayachee I., 2010, ISO 9126 external systems quality characteristics, sub-characteristics and domain specific criteria for evaluating e-Learning systems
   Raza Arif, 2010, Advances in Software Engineering, DOI 10.1155/2010/517532
   Reeder RW, 2006, I C DEPEND SYS NETWO, P61, DOI 10.1109/DSN.2006.71
   Tarkkanen K., 2015, DESIGN USER EXPERIEN
   Vetro A., 2012, INT C EV ASS SOFTW E, P87
   Vilbergsdottir S.G., 2006, P 4 NORD C HUM COMP, P14
   Vilbergsdottir SG, 2014, J SYST SOFTWARE, V87, P18, DOI 10.1016/j.jss.2013.08.014
   Wilson C., 2001, INTERACTIONS, P15
   Wood JR, 2008, J USABILITY STUD, V4, P1
   Yusop N.S.M., 2017, 24 AS PAS SOFTW ENG
   Yusop N.S.M., 2018, P 25 AUSTR SOFTW ENG
   Yusop N. S. M., 2015, P ASWEC 2015 24 AUST, P38, DOI DOI 10.1145/2811681.2811689
   Yusop NSM, 2017, IEEE T SOFTWARE ENG, V43, P848, DOI 10.1109/TSE.2016.2638427
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 33
TC 3
Z9 4
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106396
DI 10.1016/j.infsof.2020.106396
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100006
DA 2024-07-18
ER

PT J
AU Tao, CQ
   Guo, HJ
   Huang, ZQ
AF Tao, Chuanqi
   Guo, Hongjing
   Huang, Zhiqiu
TI Identifying security issues for mobile applications based on user review
   summarization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Mobile app review summarization; Natural language processing; Security
   and privacy
AB Context: With the development of mobile apps, public concerns about security issues are continually rising. From the user's perspective, it is crucial to be aware of the security issues of apps. Reviews serve as an important channel for users to discover the diverse issues of apps. However, previous works rarely rely on existing reviews to provide a detailed summarization of the app's security issues.
   Objective: To provide a detailed overview of apps' security issues for users, this paper introduces SRR-Miner, a novel review summarization approach that automatically summarizes security issues and users' sentiments.
   Method: SRR-Miner follows a keyword-based approach to extracting security-related review sentences. It summarizes security issues and users' sentiments with <misbehavior-aspect-opinion> triples, which makes full use of the deep analysis of sentence structures. SRR-Miner also provides visualized review summarization through a radar chart.
   Results: The evaluation on 17 mobile apps shows that SRR-Miner achieves higher F1-score and MCC than Machine Learning-based classification approaches in extracting security-related review sentences. It also accurately identifies misbehaviors, aspects and opinions from review sentences. A qualitative study shows that SRR-Miner outperforms two state-of-the-art approaches (AR-Miner and SUR-Miner) in terms of summarizing security issues and users' sentiments. A further user survey indicates the usefulness of the summarization of SRR-Miner.
   Conclusion: SRR-Miner is capable of automatically extracting security-related review sentences based on keywords, and summarizing misbehaviors, aspects and opinions of review sentences with a deep analysis of the sentence structures.
C1 [Tao, Chuanqi; Guo, Hongjing; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211100, Peoples R China.
   [Tao, Chuanqi; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Minist Key Lab Safety Crit Software Dev & Verific, Nanjing 211100, Peoples R China.
   [Tao, Chuanqi] Nanjing Univ, Natl Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University of
   Aeronautics & Astronautics; Nanjing University
RP Tao, CQ (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211100, Peoples R China.; Tao, CQ (corresponding author), Nanjing Univ Aeronaut & Astronaut, Minist Key Lab Safety Crit Software Dev & Verific, Nanjing 211100, Peoples R China.; Tao, CQ (corresponding author), Nanjing Univ, Natl Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM taochuanqi@nuaa.edu.cn
FU National Key R&D Program of China [2018YFB1003900]; National Natural
   Science Foundation of China [61602267, 61402229]; Open Fund of the State
   Key Laboratory for Novel Software Technology [KFKT2018B19]; Fundamental
   Research Funds for the Central Universities [NS2019058]; China
   Postdoctoral Science Foundation [2019M651825]
FX This work is supported by National Key R&D Program of China
   (2018YFB1003900), National Natural Science Foundation of China
   (61602267, 61402229), Open Fund of the State Key Laboratory for Novel
   Software Technology (KFKT2018B19), Fundamental Research Funds for the
   Central Universities (NO.NS2019058), and China Postdoctoral Science
   Foundation Funded Project (No.2019M651825).
CR [Anonymous], 2006, PROC 5 INT C LANGUAG
   [Anonymous], 2011, P 49 ANN M ASS COMPU
   Bird S., 2006, ACL 2006
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brualdi R.A., 2008, INTRO COMBINATORIES
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cen L., 2015, P 2015 SIAM INT C DA, DOI [10.1137/1.9781611974010.74, DOI 10.1137/1.9781611974010.74]
   Cen L., 2014, PIR SIGIR
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Felt AP, 2012, P 8 S USABLE PRIVACY, P1, DOI DOI 10.1145/2335356.2335360
   Figueiredo F, 2011, INFORM SYST, V36, P843, DOI 10.1016/j.is.2011.02.002
   Frazer K., 2002, ACM SIGSOFT SOFTWARE, V27, P71, DOI [10.1145/511152.511169, DOI 10.1145/511152.511169]
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Goseva-Popstojanova K, 2015, INFORM SOFTWARE TECH, V68, P18, DOI 10.1016/j.infsof.2015.08.002
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Ha E, 2013, 2013 IEEE CONSUMER COMMUNICATIONS AND NETWORKING CONFERENCE (CCNC), P149, DOI 10.1109/CCNC.2013.6488439
   Hadad T, 2017, ICISSP: PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS SECURITY AND PRIVACY, P83, DOI 10.5220/0006131200830094
   Hataya M., 2017, IEEE ICEMS, P1, DOI DOI 10.1109/CCST.2017.8167854
   Hutto C., 2015, 8 INT C WEBLOGS SOCI, P218
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jiawei Zhu, 2012, Information and Communication Security. 14th International Conference (ICICS 2012). Proceedings, P228, DOI 10.1007/978-3-642-34129-8_20
   Jo Yohan, 2011, P 4 ACM INT C WEB SE, P815, DOI DOI 10.1145/1935826.1935932
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Kong DG, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P530, DOI 10.1145/2810103.2813689
   Kowsari K, 2019, INFORMATION, V10, DOI 10.3390/info10040150
   Li CT, 2012, PROCEEDINGS OF THE ASME DYNAMIC SYSTEMS AND CONTROL CONFERENCE AND BATH/ASME SYMPOSIUM ON FLUID POWER AND MOTION CONTROL (DSCC 2011), VOL 2, P247
   Lykourentzou I, 2013, LECT NOTES ARTIF INT, V8083, P90
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Peiravian N, 2013, PROC INT C TOOLS ART, P300, DOI 10.1109/ICTAI.2013.53
   Pelloni L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P522, DOI 10.1109/SANER.2018.8330252
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Qadri J., 2016, IJCSA, V1, P210, DOI [10.22619/IJCSA.2016.100110, DOI 10.22619/IJCSA.2016.100110]
   Rahman Akond, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P149, DOI 10.1109/MOBILESoft.2017.14
   Ribeiro FN, 2016, EPJ DATA SCI, V5, DOI 10.1140/epjds/s13688-016-0085-1
   Schütte J, 2015, INT CON ADV INFO NET, P571, DOI 10.1109/AINA.2015.238
   Shahmehri N, 2012, INFORM SOFTWARE TECH, V54, P997, DOI 10.1016/j.infsof.2012.03.004
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Vu P. M., 2015, CORR
   Wang DJ, 2012, 2012 INTERNATIONAL CONFERENCE ON CONTROL ENGINEERING AND COMMUNICATION TECHNOLOGY (ICCECT 2012), P1029, DOI 10.1109/ICCECT.2012.267
   Wang Y, 2013, LECT NOTES COMPUT SC, V7964, P226, DOI 10.1007/978-3-642-39256-6_15
   Wartena C., 2010, 2010 21st International Conference on Database and Expert Systems Applications, P54, DOI 10.1109/DEXA.2010.32
   Wu SY, 2016, INFORM SOFTWARE TECH, V75, P17, DOI 10.1016/j.infsof.2016.03.004
   Zheng M, 2013, IEEE INT CONF TRUST, P163, DOI 10.1109/TrustCom.2013.25
   Zhou YJ, 2011, LECT NOTES COMPUT SC, V6740, P93, DOI 10.1007/978-3-642-21599-5_7
   Zhuang L, 2006, INT C INF KNOWL MAN, V2006, P43, DOI [DOI 10.1145/1183614.1183625, 10.1145/1183614.1183625]
NR 57
TC 20
Z9 23
U1 2
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106290
DI 10.1016/j.infsof.2020.106290
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800010
DA 2024-07-18
ER

PT J
AU Zhang, JZ
   Wan, YL
   Xie, T
AF Zhang, Jianzhang
   Wan, Yinglin
   Xie, Tian
TI Software feature refinement prioritization based on online user review
   mining
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Online software reviews; Feature extraction; Topic model; Feature
   refinement; Release planning
AB Context: Online software reviews have provided a wealth of user feedback on software applications. User reviews along with ratings have been influential in a series of software engineering tasks e.g. software maintenance and release planning.
   Objective: Our research aims to assist managers in prioritizing features to be refined in next release from the perspective of enhancing user ratings via mining online reviews.
   Method: We first extract software features from user reviews and determine their probability distribution in each review with LDA. Then the ground truth rating of each feature is estimated by linear regression under the assumption that the software functionality rating is a convex combination of all feature ratings weighted by their distribution probabilities over the review. Finally, we formalize feature refinement prioritization as an optimization problem which maximizes user group's rating on the software functionality under the constraint of development budget.
   Results: The proposed approach can use topic model to jointly extract features from user reviews semi-supervisedly and determine each feature's weight in each user's rating on the software functionality. The estimated ground truth ratings of all features reveal how reviewer group evaluate those features. Finally, we provide an illustrative example to demonstrate the key idea of our framework.
   Conclusion: Our proposed framework is general to various software products with mass user reviews and semi-automatic without much human efforts and intervention. The framework's interpretability helps managers better understand user feedback on the software functionality and make feature refinement plan for the upcoming releases.
C1 [Zhang, Jianzhang; Wan, Yinglin; Xie, Tian] Shanghai Univ Finance & Econ, Sch Informat Management & Engn, Shanghai, Peoples R China.
C3 Shanghai University of Finance & Economics
RP Zhang, JZ (corresponding author), Shanghai Univ Finance & Econ, Sch Informat Management & Engn, Shanghai, Peoples R China.
EM jianzhang.zhang2017@gmail.com; wang.yinglin@shufe.edu.cn;
   xietiansh@gmail.com
OI Xie, Tian/0000-0001-9893-2778
CR Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Nayebi M., 2018, IEEE T SOFTWARE ENG, P1
   Nayebi M, 2017, INT REQUIR ENG CONF, P388, DOI 10.1109/RE.2017.72
NR 10
TC 15
Z9 17
U1 1
U2 27
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 30
EP 34
DI 10.1016/j.infsof.2018.12.002
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3IE
UT WOS:000459366200002
DA 2024-07-18
ER

PT J
AU Marques, M
   Simmonds, J
   Rossel, PO
   Bastarrica, MC
AF Marques, Maira
   Simmonds, Jocelyn
   Rossel, Pedro O.
   Cecilia Bastarrica, Maria
TI Software product line evolution: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Evolution; Software reuse; Software product line; Systematic literature
   review
ID SUPPORT
AB Context: Software Product Lines (SPL) evolve when there are changes in the requirements, product structure or the technology being used. Different approaches have been proposed for managing SPL assets and some also address how evolution affects these assets. Existing mapping studies have focused on specific aspects of SPL evolution, but there is no cohesive body of work that gives an overview of the area as a whole.
   Objective: The goals of this work are to review the characteristics of the approaches reported as supporting SPL evolution, and to synthesize the evidence provided by primary studies about the nature of their processes, as well as how they are reported and validated.
   Method: We conducted a systematic literature review, considering six research questions formulated to evaluate evolution approaches for SPL. We considered journal, conference and workshop papers published up until March 2017 in leading digital libraries for computer science.
   Results: After a thorough analysis of the papers retrieved from the digital libraries, we ended up with a set of 60 primary studies. Feature models are widely used to represent SPLs, so feature evolution is frequently addressed. Other assets are less frequently addressed. The area has matured over time: papers presenting more rigorous work are becoming more common. The processes used to support SPL evolution are systematic, but with a low level of automation.
   Conclusions: Our research shows that there is no consensus about SPL formalization, what assets can evolve, nor how and when these evolve. Case studies are quite popular, but few industrial-sized case studies are publicly available. Also, few of the proposed techniques offer tool support. We believe that the SPL community needs to work together to improve the state of the art, creating methods and tools that support SPL evolution in a more comparable manner.
C1 [Marques, Maira; Simmonds, Jocelyn; Cecilia Bastarrica, Maria] Univ Chile, Dept Ciencias Comp, Beauchef 851, Santiago, Chile.
   [Rossel, Pedro O.] Univ Catolica Santisima Concepcion, Dept Ingn Informat, Alonso de Ribera 2850, Concepcion, Chile.
C3 Universidad de Chile; Universidad Catolica de la Santisima Concepcion
RP Rossel, PO (corresponding author), Univ Catolica Santisima Concepcion, Dept Ingn Informat, Alonso de Ribera 2850, Concepcion, Chile.
EM mmarques@dcc.uchile.cl; jsimmond@dcc.uchile.cl; prossel@ucsc.cl;
   cecilia@dcc.uchile.cl
RI Bastarrica, Maria Cecilia/AGN-6617-2022; SAMARY, MAIRA
   MARQUES/Q-8247-2019; Rossel, Pedro O./J-1054-2017; Simmonds,
   Jocelyn/N-1295-2014
OI SAMARY, MAIRA MARQUES/0000-0001-5347-1664; Rossel, Pedro
   O./0000-0001-5027-936X; Simmonds, Jocelyn/0000-0002-1253-9260
CR Ajila SA, 2008, J SYST SOFTWARE, V81, P1784, DOI 10.1016/j.jss.2007.12.797
   Alves V, 2005, LECT NOTES COMPUT SC, V3714, P70
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], P 7 INT WORKSH VAR M
   [Anonymous], 2015, BOOK SOFTWARE ENG 10
   Arcega L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P505, DOI 10.1109/SANER.2016.24
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Botterweck G., 2010, Proceedings of the 2010 ICSE Workshop on Product Line Approaches in Software Engineering, P24
   Botterweck G., 2009, P 1 INT WORKSH FEAT, P109, DOI DOI 10.1145/1629716.1629737
   Botterweck G., EVOLUTION SOFTWARE P, P265, DOI [10.1007/978-3-642-45398-49, DOI 10.1007/978-3-642-45398-49]
   Cool B., 2016, P SAC 16 31 ANN ACM, P1350, DOI [10.1145/2851613.2851964, DOI 10.1145/2851613.2851964]
   Creff S., 2012, P 16 INT SOFTW PROD, P107, DOI [10.1145/2364412.2364430, DOI 10.1145/2364412.2364430]
   de Oliveira RP, 2015, P BRAZ SYMP SOFTW, P1, DOI 10.1109/SBCARS.2015.11
   Demuth A, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P31, DOI 10.1109/ICST.2014.14
   Dhungana D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P319, DOI 10.1109/SPLC.2008.26
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Douta G, 2009, INFORM SOFTWARE TECH, V51, P448, DOI 10.1016/j.infsof.2008.05.017
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ferreira F., 2012, 2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2012), P21, DOI 10.1109/SBCARS.2012.18
   Font J, 2017, COMPUT LANG SYST STR, V48, P20, DOI 10.1016/j.cl.2016.08.003
   Gamez N, 2013, INFORM SOFTWARE TECH, V55, P563, DOI 10.1016/j.infsof.2012.06.012
   Garg A, 2003, PROC IEEE INT CONF S, P358, DOI 10.1109/ICSM.2003.1235443
   Gomaa H, 2006, LECT NOTES COMPUT SC, V4199, P1
   Gomaa H, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P24, DOI 10.1109/TwinPeaks.2013.6614720
   Gorton I., 2006, ESSENTIAL SOFTWARE A
   Heider W., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P1, DOI 10.1109/WICSA-ECSA.212.8
   Inoki M, 2016, COMM COM INF SC, V671, P34, DOI 10.1007/978-981-10-3256-1_3
   Inoki M, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1207, DOI 10.1145/1244002.1244266
   Jahn M., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P21, DOI 10.1109/WICSA-ECSA.212.10
   Jiang M, 2008, PROC IEEE INT CONF S, P444, DOI 10.1109/ICSM.2008.4658100
   John I., 2009, P 13 INT SOFTW PROD, P31
   Johnsson S., 2000, P 1 ICSE 2000 WORKSH, P27
   Khoshnevis S, 2015, LECT NOTES COMPUT SC, V9392, P275, DOI 10.1007/978-3-319-24644-4_19
   Kitchenham Barbara, 2007, 200701 EBSE KEEL U D
   Ko D., 2014, INT J STW ENG APPL, V8, P113, DOI DOI 10.14257/IJ-SEIA.2014.8.2.12
   Kuhrmann M, 2016, J SOFTW-EVOL PROC, V28, P241, DOI 10.1002/smr.1751
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lee J, 2016, WIRELESS PERS COMMUN, V89, P729, DOI 10.1007/s11277-016-3195-y
   Lity S, 2016, PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON FEATURE-ORIENTED SOFTWARE DEVELOPMENT (FOSD'16), P39, DOI 10.1145/3001867.3001872
   Liu J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P596
   Livengood S, 2011, 2 INT WORKSH PROD LI, P6
   Loesch F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P159
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Michalik B, 2011, INT SYMP EMP SOFTWAR, P187, DOI 10.1109/ESEM.2011.27
   Michalik B, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P290, DOI 10.1109/WICSA.2011.45
   Montalvillo L, 2016, J SYST SOFTWARE, V122, P110, DOI 10.1016/j.jss.2016.08.053
   Napoleao B., 2017, The 29th International Conference on Software Engineering and Knowledge Engineering (SEKE), P85
   Neves L, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P33
   Nieke M, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P73, DOI 10.1145/2866614.2866625
   Nieke Michael., 2017, P 11 INT WORKSHOP VA, P92, DOI DOI 10.1145/3023956.3023962
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Passos L, 2016, EMPIR SOFTW ENG, V21, P1744, DOI 10.1007/s10664-015-9364-x
   Patzke T.B., 2011, THESIS
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pessoa L, 2017, INFORM SOFTWARE TECH, V86, P54, DOI 10.1016/j.infsof.2017.02.002
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pleuss A, 2012, J SYST SOFTWARE, V85, P2261, DOI 10.1016/j.jss.2011.08.008
   Rabiser D., 2016, P 20 INT SOFTW PROD, P35, DOI DOI 10.1145/2934466.2934487
   Romanovsky K., 2008, P IFIP CENTR E EUR C, P158, DOI [10.1007/978-3-642-22386-0_12, DOI 10.1007/978-3-642-22386-0_12]
   Romero D, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P59
   Sampaio G., 2016, 20 INT SYSTEMS SOFTW, P124, DOI [10.1145/2934466.2934482, DOI 10.1145/2934466.2934482]
   Savolainen J., 2009, P 13 INT SOFTW PROD, P315
   Schulze S, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P9, DOI 10.1145/2866614.2866616
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   Seidl C, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P22, DOI 10.1145/2648511.2648514
   Seidl Christoph., 2014, P 8 INT WORKSHOP VAR, V6, P1, DOI [DOI 10.1145/2556624.2556625, 10.1145/2556624.2556625]
   Strasser A, 2014, LECT NOTES COMPUT SC, V8327, P491, DOI 10.1007/978-3-319-04298-5_43
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Tanhaei M, 2016, J COMPUT SCI TECH-CH, V31, P951, DOI 10.1007/s11390-016-1674-y
   Thao C., 2011, P 2 INT WORKSH PROD, P60, DOI [10.1145/1985484.1985499, DOI 10.1145/1985484.1985499]
   Tizzei LP, 2011, INFORM SOFTWARE TECH, V53, P121, DOI 10.1016/j.infsof.2010.08.007
   Vale T, 2017, INFORM SOFTWARE TECH, V84, P1, DOI 10.1016/j.infsof.2016.12.004
   Weyns D., 2011, P 6 INT WORKSH SHAR, P37, DOI [10.1145/1988676.1988684, DOI 10.1145/1988676.1988684]
   Weyns D, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P204, DOI 10.1109/WICSA.2011.34
   Wijnstra JG, 2004, LECT NOTES COMPUT SC, V3014, P111
   Wu YH, 2012, EVID-BASED COMPL ALT, V2012, DOI 10.1155/2012/356806
   Ye H., 2008, P SOFTW ENG RES PRAC, P349
   Yinxing Xue, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P109, DOI 10.1109/WCRE.2010.20
   Zhang Bo., 2013, Proceedings of the 17th International Software Product Line Conference, P168
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 83
TC 34
Z9 34
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 190
EP 208
DI 10.1016/j.infsof.2018.08.014
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900011
DA 2024-07-18
ER

PT J
AU Blouin, A
   Lelli, V
   Baudry, B
   Coulon, F
AF Blouin, Arnaud
   Lelli, Valeria
   Baudry, Benoit
   Coulon, Fabien
TI User interface design smell: Automatic detection and refactoring of Blob
   listeners
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User interface; Event handling; Design smell; Software maintenance; Code
   refactoring; Empirical software engineering
ID SOFTWARE; CODE; BAD
AB Context. User Interfaces (UIs) intensively rely on event-driven programming: interactive objects send UI events, which capture users' interactions, to dedicated objects called controllers. Controllers use several UI listeners that handle these events to produce UI commands.
   Objective. First, we reveal the presence of design smells in the code that describes and controls UIs. Second, we demonstrate that specific code analyses are necessary to analyze and refactor UI code, because of its coupling with the rest of the code.
   Method. We conducted an empirical study on four large Java software systems. We studied to what extent the number of UI commands that a UI listener can produce has an impact on the change- and fault-proneness of the UI listener code. We developed a static code analysis for detecting UI commands in the code.
   Results. We identified a new type of design smell, called Blob listener, that characterizes UI listeners that can produce more than two UI commands. We proposed a systematic static code analysis procedure that searches for Blob listener that we implement in InspectorGuidget. We conducted experiments on the four software systems for which we manually identified 53 instances of Blob listener. InspectorGuidget successfully detected 52 Blob listeners out of 53. The results exhibit a precision of 81.25% and a recall of 98.11%. We then developed a semi-automatically and behavior-preserving refactoring process to remove Blob listeners. 49.06% of the 53 Blob listeners were automatically refactored. Patches have been accepted and merged. Discussions with developers of the four software systems assess the relevance of the Blob listener.
   Conclusion. This work shows that UI code also suffers from design smells that have to be identified and characterized. We argue that studies have to be conducted to find other UI design smells and tools that analyze UI code must be developed.
C1 [Blouin, Arnaud] Univ Rennes, INSA Rennes, INRIA, CNRS,IRISA, Rennes, France.
   [Lelli, Valeria] Univ Fed Ceara, Fortaleza, Ceara, Brazil.
   [Baudry, Benoit] KTH Royal Inst Technol, Stockholm, Sweden.
   [Coulon, Fabien] Univ Toulouse Jean Jaures, Toulouse, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite de
   Rennes; Inria; Institut National des Sciences Appliquees de Rennes;
   Universidade Federal do Ceara; Royal Institute of Technology; Universite
   de Toulouse; Universite de Toulouse - Jean Jaures
RP Blouin, A (corresponding author), Univ Rennes, INSA Rennes, INRIA, CNRS,IRISA, Rennes, France.
EM ablouin@irisa.fr; valerialelli@great.ufc.br; baudry@kth.se;
   fabien.coulon@irit.fr
OI Blouin, Arnaud/0000-0002-5974-9601; Lelli, Valeria/0000-0002-1210-7935
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Almeida D, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P175, DOI 10.1145/2695664.2695670
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], P INT S SOFTW TEST A
   Arlt S., 2012, SOFTW REL ENG ISSRE, P301, DOI [10.1109/ISSRE.2012.25, DOI 10.1109/ISSRE.2012.25]
   Beaudouin-Lafon M., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P446, DOI 10.1145/332040.332473
   Blouin A, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P115
   Blouin Arnaud., 2011, Proceedings of the 3rd ACM SIGCHI symposium on Engineering interactive computing systems, EICS '11, P85, DOI DOI 10.1145/1996461.1996500
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ganesh SG, 2013, J OBJECT TECHNOL, V12, DOI 10.5381/jot.2013.12.2.a1
   Ganov S, 2009, LECT NOTES COMPUT SC, V5885, P69, DOI 10.1007/978-3-642-10373-5_4
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Lelli V., EICS 16 P 8 ACM SIGC
   Lelli Valeria, 2015, IEEE INT C SOFTW TES
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Maier Ingo., 2012, Deprecating the observer pattern with Scala
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N., 2010, SOFTWARE ENG IEEE T, V36, P20, DOI DOI 10.1109/TSE.2009.50
   Moha Naouel, 2012, INT C SERV OR COMP
   Myers B. A., 1991, UIST Fourth Annual Symposium on User Interface Software and Technology. Proceedings of the ACM Symposium on User Interface Software and Technology, P211, DOI 10.1145/120782.120805
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Ocariza FS, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P325, DOI 10.1109/ICSE.2015.52
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Potel M., 1996, MVP MODEL VIEW PRESE
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Silva JC, 2014, ADV INTELL SYST, V276, P199, DOI 10.1007/978-3-319-05948-8_19
   Silva JC, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P181
   Silva Joao Carlos, 2010, GUI INSPECTION SOURC
   Smith J., 2009, MSDN MAG
   Staiger S, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P252
   W3C, 2014, TECHNICAL REPORT
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Yang SQ, 2015, IEEE INT CONF AUTOM, P658, DOI 10.1109/ASE.2015.76
   Zanoni M, 2015, J SYST SOFTWARE, V103, P102, DOI 10.1016/j.jss.2015.01.037
   Zhang SP, 2012, ACM T INTEL SYST TEC, V3, DOI 10.1145/2168752.2168757
NR 51
TC 5
Z9 5
U1 0
U2 18
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 49
EP 64
DI 10.1016/j.infsof.2018.05.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Carrozza, G
   Pietrantuono, R
   Russo, S
AF Carrozza, Gabriella
   Pietrantuono, Roberto
   Russo, Stefano
TI A software quality framework for large-scale mission-critical systems
   engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Decision support systems; Mission-critical systems;
   Software testing; Software reliability; Automatic static analysis;
   Testing resource allocation; Defect prediction; Fault prediction
ID RESOURCE-ALLOCATION; RELIABILITY MODELS; GENETIC ALGORITHM;
   ERROR-DETECTION; TESTING-EFFORT; TIME; CLASSIFICATION; PREDICTION; COST
AB Context: In the industry of large-scale mission-critical systems, software is a pivotal asset and a key business driver. Production and maintenance costs of systems in domains like air/naval traffic control or homeland security are largely dependent on the quality of software, and there are numerous examples where poor software quality is blamed for major business failures. Because of the size, the complexity and the nature of systems and engineering processes in this industry, there is a strong need yet a slow shift toward innovation in software quality management.
   Objective: We present SVEVIA, a framework for software quality assessment and strategic decisions support for large-scale mission-critical systems engineering, and its application in a three years long industry-academy cooperation.
   Method: We started with the analysis of the industrial software quality management processes, and identified the key challenges toward a satisfying quality-cost-time trade-off. We defined new methods for product/process quality assessment, prediction, planning and optimization. We experimented them on the industrial partner systems and processes. They finally conflated in the SVEVIA framework.
   Results:SVEVIA was integrated into the industrial process, and tested with hundreds of software (sub)systems. More than 20 millions of lines of code - deployed in about 20 sites in Italy and UK - have come under the new quality measurement and improvement chain. The framework proved its ability to support systematic management of software quality and key decisions for productivity improvement.
   Conclusion:SVEVIA supports team leaders and managers coping with software quality in mission-critical industries, yielding figures and projections about quality and productivity trends for a prompt and informed decision-making.
C1 [Carrozza, Gabriella] Accenture Operat, Piazzale Ind 40, I-00144 Rome, Italy.
   [Pietrantuono, Roberto; Russo, Stefano] Univ Napoli Federico II, Via Claudio 21, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Pietrantuono, R (corresponding author), Univ Napoli Federico II, Via Claudio 21, I-80125 Naples, Italy.
EM gabriella.carrozza@accenture.com; roberto.pietrantuono@unina.it;
   stefano.russo@unina.it
RI Russo, Stefano/H-7723-2013
OI Russo, Stefano/0000-0002-8747-3446; Pietrantuono,
   Roberto/0000-0003-2449-1724
FU PRIN 2015 project "GAUSS" - MIUR Grant [2015KWREMX]
FX The work by Pietrantuono and Russo has been supported by the PRIN 2015
   project "GAUSS" funded by MIUR Grant no. n. 2015KWREMX. The work by G.
   Carrozza was performed while she was Head of Metrics and Reporting Unit
   at Selex ES.
CR [Anonymous], 2011, ISO 13314
   [Anonymous], 1997, ICML
   [Anonymous], 2013, MISRA C 2012 GUIDELI
   [Anonymous], 2017, IEEE T RELIAB
   [Anonymous], 1994, ADV OPTIMIZATION NUM, DOI DOI 10.1007/978-94-015-8330-5_4
   Association for Project Management, 2010, HIST ASS PROJ MAN, P1972
   Bai CG, 2008, IEEE T SYST MAN CY A, V38, P1129, DOI 10.1109/TSMCA.2008.2001071
   Boehm BW., 1981, Software Engineering Economics
   Carrozza G, 2015, SECOND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE SER&IP 2015, P25, DOI 10.1109/SERIP.2015.13
   Carrozza G, 2014, INT J SOFTW TOOLS TE, V16, P593, DOI 10.1007/s10009-014-0319-0
   Carrozza G, 2015, J SOFTW-EVOL PROC, V27, P22, DOI 10.1002/smr.1699
   Carrozza G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P262, DOI 10.1109/ICST.2013.21
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cinque M, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1638
   Cinque M, 2014, LECT NOTES COMPUT SC, V8583, P461, DOI 10.1007/978-3-319-09156-3_33
   Cotroneo D, 2016, J SYST SOFTWARE, V113, P27, DOI 10.1016/j.jss.2015.11.021
   Cotroneo D, 2013, PERFORM EVALUATION, V70, P163, DOI 10.1016/j.peva.2012.09.004
   Damm LO, 2004, LECT NOTES COMPUT SC, V3281, P138
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Drown DJ, 2009, IEEE T SYST MAN CY A, V39, P1097, DOI 10.1109/TSMCA.2009.2020804
   Frattini F, 2016, SPRINGER SER RELIAB, P551, DOI 10.1007/978-3-319-30599-8_21
   Glass R., 1998, Software Runaways: Monumental Software Disasters
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gokhale SS, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P34, DOI 10.1109/HASE.1998.731593
   Han X, 2013, IEEE T SYST MAN CY-S, V43, P237, DOI 10.1109/TSMCA.2012.2201467
   Huang CY, 2007, IEEE T RELIAB, V56, P198, DOI 10.1109/TR.2007.895301
   Huang CY, 2006, J SYST SOFTWARE, V79, P653, DOI 10.1016/j.jss.2005.06.039
   Huang CY, 2005, IEEE T RELIAB, V54, P583, DOI 10.1109/TR.2005.859230
   Jones Capers, 2011, The Economics of Software Quality
   Knowles J, 1999, P 1999 C EV COMP CEC, P98, DOI [DOI 10.1109/CEC.1999.781913, 10.1109/cec.1999.781913]
   Kumar A, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P80, DOI 10.1145/2856636.2856648
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mullen RE, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P134, DOI 10.1109/ISSRE.1998.730872
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nebro AJ, 2007, LECT NOTES COMPUT SC, V4403, P126
   Ohishi K, 2009, J SYST SOFTWARE, V82, P535, DOI 10.1016/j.jss.2008.11.840
   Okamura H, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P263
   Okamura H, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.2003.1251047
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pham L, 2000, IEEE T SYST MAN CY A, V30, P25, DOI 10.1109/3468.823478
   Pietrantuono R, 2018, IEEE T EVOLUT COMPUT, V22, P347, DOI 10.1109/TEVC.2017.2691060
   Pietrantuono R, 2010, IEEE T SOFTWARE ENG, V36, P323, DOI 10.1109/TSE.2010.6
   Plosch R., 2008, Proceedings of the 2008 32nd Annual IEEE Software Engineering Workshop. SEW 2008, P169, DOI 10.1109/SEW.2008.17
   Schneidewind NF, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P185, DOI 10.1109/ISSRE.2001.989472
   Seiffert C, 2009, IEEE T SYST MAN CY A, V39, P1283, DOI 10.1109/TSMCA.2009.2027131
   US Department of Defense, 1996, MILSTD498 US DEP DEF
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 52
TC 10
Z9 13
U1 1
U2 35
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 100
EP 116
DI 10.1016/j.infsof.2018.05.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400007
DA 2024-07-18
ER

PT J
AU Rodríguez-Pérez, G
   Robles, G
   González-Barahona, JM
AF Rodriguez-Perez, Gema
   Robles, Gregorio
   Gonzalez-Barahona, Jesus M.
TI Reproducibility and credibility in empirical software engineering: A
   case study based on a systematic literature review of the use of the SZZ
   algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Credibility; Reproducibility; SZZ Algorithm; Systematic literature
   review
AB Context Reproducibility of Empirical Software Engineering (ESE) studies is an essential part for improving their credibility, as it offers the opportunity to the research community to verify, evaluate and improve their research outcomes.
   Objective: We aim to study reproducibility and credibility in ESE with a case study, by investigating how they have been addressed in studies where SZZ, a widely-used algorithm by gliwerski, Zimmermann and Zeller to detect the origin of a bug, has been applied.
   Methodology: We have performed a systematic literature review to evaluate publications that use SZZ. In total, 187 papers have been analyzed for reproducibility, reporting of limitations and use of improved versions of the algorithm.
   Results: We have found a situation with a lot of room for improvement in ESE as reproducibility is not commonly found; factors that undermine the credibility of results are common. We offer some lessons learned and guidelines for researchers and reviewers to address this problem.
   Conclusion: Reproducibility and other related aspects that ensure a high quality scientific process should be taken more into consideration by the ESE community in order to increase the credibility of the research results.
C1 [Rodriguez-Perez, Gema; Robles, Gregorio; Gonzalez-Barahona, Jesus M.] Univ Rey Juan Carlos, Madrid, Spain.
C3 Universidad Rey Juan Carlos
RP Rodríguez-Pérez, G (corresponding author), Univ Rey Juan Carlos, Madrid, Spain.
EM gema.rodriguez@urjc.es; grex@gsyc.urjc.es; jgb@gsyc.es
RI Robles, Gregorio/I-2507-2012; Rodríguez-Pérez, Gema/AAN-7844-2020;
   Gonzalez-Barahona, Jesus M./L-5646-2017
OI Robles, Gregorio/0000-0002-1442-6761; Rodríguez-Pérez,
   Gema/0000-0002-0062-8418; Gonzalez-Barahona, Jesus
   M./0000-0001-9682-460X
FU Spanish Government [TIN2014-59400-R]
FX We want to express our gratitude to the Spanish Government, as the
   authors are funded in part by it, through project TIN2014-59400-R. We
   would also thank Alexander Serebrenik and Marcos Roman-Gonzalez for
   their feedback and help.
CR Amann Sven, 2015, Software Engineering - International Summer Schools, LASER 2013-14. Revised Tutorial Lectures LNCS 8987, P121, DOI 10.1007/978-3-319-28406-4_5
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Clarke M, 2000, COCHRANE REV HDB
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   da Costa D. A., 2016, IEEE T SOFTW ENG
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   German DM, 2009, INFORM SOFTWARE TECH, V51, P1394, DOI 10.1016/j.infsof.2009.04.018
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Jung W, 2012, IEICE T INF SYST, VE95D, P1384, DOI 10.1587/transinf.E95.D.1384
   Jureczko M., 2011, Metody Informatyki Stosowanej, V5, P133
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kuper A., 2013, The Social Science Encyclopedia
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   MIttelhammer R. C., 2000, ECONOMETRIC FDN PACK, V1
   Nam J., 2014, TECHNICAL REPORT
   Nguyen A. T., 2012, P ACM SIGSOFT 20 INT, P63
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Piwowar HA, 2007, PLOS ONE, V2, DOI 10.1371/journal.pone.0000308
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Rodríguez-Pérez G, 2016, IFIP ADV INF COMM TE, V472, P192, DOI 10.1007/978-3-319-39225-7_16
   Rosenthal R, 2001, ANNU REV PSYCHOL, V52, P59, DOI 10.1146/annurev.psych.52.1.59
   Sun Y, 2017, INFORM SOFTWARE TECH, V84, P33, DOI 10.1016/j.infsof.2016.11.010
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
NR 48
TC 54
Z9 60
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2018
VL 99
BP 164
EP 176
DI 10.1016/j.infsof.2018.03.009
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GG5XA
UT WOS:000432767900014
DA 2024-07-18
ER

PT J
AU Soares, LR
   Schobbens, PY
   Machado, ID
   de Almeida, ES
AF Soares, Larissa Rocha
   Schobbens, Pierre-Yves
   Machado, Ivan do Carmo
   de Almeida, Eduardo Santana
TI Feature interaction in software product line engineering: A systematic
   mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature interaction; Software product lines; Systematic mapping
AB Context Software product lines (SPL) engineering defines a set of systems that share common features and artifacts to achieve high productivity, quality, market agility, low time to market, and cost. An SPL product is derived from a configuration of features which need to be compounded together without violating their particular specifications. While it is easy to identify the behavior of a feature in isolation, specifying and resolving interactions among features may not be a straightforward task. The feature interaction problem has been a challenging subject for decades.
   Objective: This study aims at surveying existing research on feature interaction in SPL engineering in order to identify common practices and research trends.
   Method: A systematic mapping study was conducted with a set of seven research questions, in which the 35 studies found are mainly classified regarding the feature interaction solution presented: detection, resolution and general analysis.
   Results: 43% of the papers deal with feature interaction at early phases of a software lifecycle. The remaining is shared among the other categories: source code detection, resolution and analysis. For each category, it was also identified the main strategies used to deal with interactions.
   Conclusions: The findings can help to understand the needs in feature interaction for SPL engineering, and highlight aspects that still demand an additional investigation. For example, often strategies are partial and only address specific points of a feature interaction investigation.
C1 [Soares, Larissa Rocha; Machado, Ivan do Carmo; de Almeida, Eduardo Santana] Univ Fed Bahia, Comp Sci Dept, Salvador, BA, Brazil.
   [Soares, Larissa Rocha] RiSE Reuse Software Engn, Salvador, BA, Brazil.
   [Schobbens, Pierre-Yves] Univ Namur, Namur, Belgium.
C3 Universidade Federal da Bahia; University of Namur
RP Soares, LR (corresponding author), Univ Fed Bahia, Comp Sci Dept, Salvador, BA, Brazil.; Soares, LR (corresponding author), RiSE Reuse Software Engn, Salvador, BA, Brazil.
EM larissars@dcc.com.br
RI Machado, Isabel C/I-6935-2012; Machado, Ivan/AAC-1015-2020; Schobbens,
   Pierre-Yves/H-2333-2011; de Almeida, Eduardo/JJC-2493-2023; Machado,
   Ivan/E-7228-2013; Machado, Ivan/AAL-8021-2020
OI Machado, Ivan/0000-0001-9027-2293; Schobbens,
   Pierre-Yves/0000-0001-8677-4485; 
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Alferez M., 2009, FOSD 09, P117
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel Sven, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P161, DOI 10.1109/ISSRE.2010.11
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Apel S, 2013, COMPUT NETW, V57, P2399, DOI 10.1016/j.comnet.2013.02.025
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Atlee JM, 2015, FME WORKS FORM, P20, DOI 10.1109/FormaliSE.2015.11
   Batory D.S., 2013, P 5 INT WORKSH FEAT, P9, DOI [10.1145/2528265.2528269, DOI 10.1145/2528265.2528269]
   Batory D, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Ben-David S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P189, DOI 10.1109/ICSE.2015.40
   Bessling S., 2013, International Symposium on Foundations of Health Informatics Engineering and Systems, P217
   Beuche D., 2012, SPLC 12, V2, P255
   Blundell C, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P258, DOI 10.1109/ASE.2004.1342743
   Bocovich C, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P553, DOI 10.1145/2635868.2635927
   Bowen T. F., 1989, Seventh International Conference on Software Engineering for Telecommunication Switching Systems: SETSS 89 (Conf. Publ. No.306), P59
   Bredereke J, 2005, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VIII, P96
   Bruns G, 2005, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VIII, P3
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   da Silva IF, 2011, SOFTWARE PRACT EXPER, V41, P899, DOI 10.1002/spe.1078
   Dietrich David, 2012, P WORKSH MOD DRIV EN, P17, DOI 10.1145/2427376.2427380
   Dominguez A. L. J., 2008, 2008 23 IEEE ACM INT, P521, DOI DOI 10.1109/ASE.2008.97
   Ferreira Bastos Jonatas, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P11, DOI 10.1049/ic.2011.0002
   Gibson JP, 2009, FEATURE INTERACTIONS IN SOFTWARE AND COMMUNICATION SYSTEMS X, P91, DOI 10.3233/978-1-60750-014-8-91
   Hall RJ, 2000, COMPUT NETW, V32, P449, DOI 10.1016/S1389-1286(00)00010-4
   Hu H, 2011, IET COMMUN, V5, P2451, DOI 10.1049/iet-com.2010.0615
   Jayaraman P, 2007, LECT NOTES COMPUT SC, V4735, P151
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kastner Christian., 2009, Proceedings of the 13th International Software Product Line Conference, P181, DOI DOI 10.1145/1753235.1753261
   Kim CHP, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P23
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Krueger CW, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P353, DOI 10.1109/SPLC.2008.33
   Li H. C., 2005, Automated Software Engineering, V12, P349, DOI 10.1007/s10515-005-2643-9
   Linsbauer L., 2016, SOFTWARE SYSTEMS MOD, P1
   Liu J, 2005, J OBJECT TECHNOL, V4, P13, DOI 10.5381/jot.2005.4.3.a2
   Liu J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P596
   Metzger A, 2005, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VIII, P198
   Mosser S., 2012, P 6 INT WORKSH VAR M, P101
   Mussbacher G, 2012, SOFTWARE QUAL J, V20, P645, DOI 10.1007/s11219-011-9153-8
   OHTA T, 1994, FEATURE INTERACTIONS IN TELECOMMUNICATIONS SYSTEMS, P60
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Prasanna Padmanabhan, 2005, Automated Software Engineering, V12, P447, DOI 10.1007/s10515-005-2648-4
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Razzaq A, 2012, 2012 15TH INTERNATIONAL MULTITOPIC CONFERENCE (INMIC), P471, DOI 10.1109/INMIC.2012.6511500
   Rodrigues I, 2016, INFORM SOFTWARE TECH, V78, P27, DOI 10.1016/j.infsof.2016.05.006
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Scholz W., 2011, WORKSHOP P, V2, P7
   Schuster S., 2013, P 8 INT WORKSH VAR M
   Shaker P., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P151, DOI 10.1109/RE.2012.6345799
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Silva RS, 2008, FEATURE INTERACTIONS IN SOFTWARE AND COMMUNICATION SYSTEMS IX, P33
   Soares L. R., 2015, P 9 INT WORKSH VAR M
   Soares LR, 2014, EUROMICRO CONF PROC, P328, DOI 10.1109/SEAA.2014.48
   Sochos P., 2006, 13th Annual IEEE International Symposium and Workshop on Engineering of Computer Based Systems
   Takeyama Fuminobu, 2013, Software Composition. 12th International Conference, SC 2013. Proceedings. LNCS 8088, P81, DOI 10.1007/978-3-642-39614-4_6
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Vale T, 2017, INFORM SOFTWARE TECH, V84, P1, DOI 10.1016/j.infsof.2016.12.004
   Zave Pamela, 2015, ARXIV151006714
NR 62
TC 19
Z9 23
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 44
EP 58
DI 10.1016/j.infsof.2018.01.016
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD8LP
UT WOS:000430764200004
DA 2024-07-18
ER

PT J
AU Laukkarinen, T
   Kuusinen, K
   Mikkonen, T
AF Laukkarinen, Teemu
   Kuusinen, Kati
   Mikkonen, Tommi
TI Regulated software meets DevOps
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regulated software; DevOps; Standards
AB Context: Regulatory authorities require proofs from critical systems manufacturers that the software in their products is developed in accordance to prescribed development practices before accepting the product to the markets. This is challenging when using DevOps, where continuous integration and deployment are the default practices, which are not a good match with the regulatory software development standards.
   Objective: We aim to bring DevOps and regulated software development closer to each other. First, we want to make it easier for developers to develop regulated software with tools and practices they are familiar with. Second, we want to allow regulatory authorities to build confidence on solutions provided by manufacturers by defining a mapping between DevOps and regulatory software development.
   Method: We performed a literature survey and created research suggestions using exploratory research.
   Results: Tighter integration between development tools, requirements management, version control and deployment pipeline would simplify the creation of regulatory compliant development practices.
   Conclusions: Regulations could be improved for more agile and incremental method in quality approval, the final step before the actual deployment of the software. Improved development practices and tool integration, created in cooperation by tool vendors, system providers, and regulatory authorities, could support developers who are not comfortable with fixed, and rigid practices of regulated software development.
C1 [Laukkarinen, Teemu] Tampere Univ Technol, Tampere, Finland.
   [Kuusinen, Kati] Univ Southern Denmark, Odense, Denmark.
   [Mikkonen, Tommi] Univ Helsinki, Helsinki, Finland.
C3 Tampere University; University of Southern Denmark; University of
   Helsinki
RP Laukkarinen, T (corresponding author), Tampere Univ Technol, Tampere, Finland.
EM teemu.laukkarinen@tut.fi; kaku@mmmi.sdu.dk; tommi.mikkonen@helsinki.fi
RI Kuusinen, Kati/M-6152-2018
OI Kuusinen, Kati/0000-0003-3076-1356; Mikkonen, Tommi/0000-0002-8540-9918
CR [Anonymous], 2006, 623042006 IEC
   [Anonymous], 823041 IEC
   Cawley O, 2010, LECT NOTES BUS INF P, V65, P31, DOI 10.1007/978-3-642-16416-3_4
   Debois P., 2011, J INF TECHNOL MANAG, V24, P3
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   Laukkarinen T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P15, DOI 10.1109/ICSE-NIER.2017.20
   Lwakatare LE, 2016, P ANN HICSS, P5437, DOI 10.1109/HICSS.2016.671
   McHugh M, 2013, INT WORK SOFTW, P12, DOI 10.1109/SEHC.2013.6602471
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
NR 9
TC 15
Z9 19
U1 3
U2 44
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 176
EP 178
DI 10.1016/j.infsof.2018.01.011
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Velásquez, I
   Caro, A
   Rodríguez, A
AF Velasquez, Ignacio
   Caro, Angelica
   Rodriguez, Alfonso
TI Kontun: A Framework for recommendation of authentication schemes and
   methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security; Authentication scheme; Multi-factor authentication method;
   Recommendation Framework
ID SMART CARDS; 3-FACTOR AUTHENTICATION; USER; PASSWORDS
AB Context: There are many techniques for performing authentication, such as text passwords and biometrics. Combining two factors into one technique is known as multi-factor authentication. The lack of a proper method for comparing and selecting these techniques for their implementation in software development processes is observed.
   Objective: The article presents a recommendation Framework proposal for comparing and selecting authentication techniques in a software development process.
   Method: Knowledge from academy is obtained through a systematic literature review and experience from industry is gathered using a survey and interviews. The results of these two techniques are used to generate a Framework proposal, which is validated afterwards, through an expert panel and the case study method.
   Results: A recommendation Framework is generated, which recommends the most appropriate authentication schemes and methods for software applications based on criteria identified in literature and industry, categorized by usability, security and costs, plus the context for which the application is intended. The Framework's validity is ascertained by confirming that its recommendations are on line with those on industry, based in the results from the developed case studies. A tool prototype was created in order to help using the Framework in software development processes.
   Conclusion: The proposed Framework helps to cover the observed gap in literature, helping software developers to compare and select the most appropriate authentication techniques for their applications.
C1 [Velasquez, Ignacio; Caro, Angelica; Rodriguez, Alfonso] Univ Bio Bio, Comp Sci & Informat Technol Dept, Chillan, Chile.
C3 Universidad del Bio-Bio
RP Caro, A (corresponding author), Univ Bio Bio, Comp Sci & Informat Technol Dept, Chillan, Chile.
EM ivelasqu@alumnos.ubiobio.cl; mcaro@ubiobio.cl; alfonso@ubiobio.cl
RI Rodriguez, Alfonso/N-5691-2015
FU DIUBB [144319 2/R]; BuPERG [DIUBB 152419G/EF]
FX This research is part of the following projects: DIUBB 144319 2/R and
   BuPERG (DIUBB 152419G/EF).
CR Al-Assam H., 2010, 2010 International Conference for Internet Technology and Secured Transactions, P1
   Altinkemer K, 2011, DECIS SUPPORT SYST, V51, P394, DOI 10.1016/j.dss.2011.01.005
   [Anonymous], RECENT APPL BIOMETRI
   [Anonymous], 2003, WBMA 03 P 2003 ACM S
   Bonneau J, 2012, P IEEE S SECUR PRIV, P553, DOI 10.1109/SP.2012.44
   Brainard J., 2006, P 13 ACM C COMP COMM
   Cao T., 2013, J COMPUT INF SYST, V21, P8831
   Cheng ZY, 2012, INT J INNOV COMPUT I, V8, P5499
   Choi S, 2012, INT CARN CONF SECU, P147, DOI 10.1109/CCST.2012.6393550
   Das AK, 2012, J NETW COMPUT APPL, V35, P1646, DOI 10.1016/j.jnca.2012.03.011
   Eliasson C, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P865, DOI 10.1109/ARES.2009.166
   Forget A, 2015, INF COMPUT SECUR, V23, P497, DOI 10.1108/ICS-08-2014-0058
   Guel M.D., 2002, Information Security Technical Report, V7, P63
   Huang XY, 2011, IEEE T PARALL DISTR, V22, P1390, DOI 10.1109/TPDS.2010.206
   Imtiaz H., 2011, 2011 IEEE Symposium on Computers & Informatics (ISCI), P313, DOI 10.1109/ISCI.2011.5958933
   Islam SKH, 2013, MATH COMPUT MODEL, V57, P2703, DOI 10.1016/j.mcm.2011.07.001
   Jansen W., 2003, P CAN INF TECHN SEC, P1
   Jeon W, 2013, INT J SECUR APPL, V7, P1
   Kang J, 2014, INFORM SCIENCES, V269, P1, DOI 10.1016/j.ins.2014.02.011
   Kim J., 2016, WIRELESS PERS COMMUN, P1
   Kwang Cheul Shin, 2013, International Journal of Information Processing and Management, V4, P10, DOI 10.4156/ijipm.vol4.issue2.2
   Li Z, 2005, LECT NOTES COMPUT SC, V3645, P751
   Madhusudhan R, 2012, J NETW COMPUT APPL, V35, P1235, DOI 10.1016/j.jnca.2012.01.007
   Mihajlov M, 2011, INTERACT COMPUT, V23, P582, DOI 10.1016/j.intcom.2011.09.001
   O'Gorman L, 2003, P IEEE, V91, P2021, DOI 10.1109/JPROC.2003.819611
   Palmer AJ, 2010, COMPUT SECUR, V29, P785, DOI 10.1016/j.cose.2010.03.002
   Rathgeb C., 2010, 2 FACTOR AUTHENTICAT, P296
   Tang H.B., 2013, INT C CYB TECHN CCT, P39
   Umar M.S., 2012, 2012 IEEE INT C SIGN
   Wang D., 2016, P 11 ACM AS C COMP C
   Wang SQ, 2013, IERI PROC, V4, P2, DOI 10.1016/j.ieri.2013.11.002
   Wang X, 2012, DIGIT SIGNAL PROCESS, V22, P707, DOI 10.1016/j.dsp.2012.04.012
   Yang GM, 2008, J COMPUT SYST SCI, V74, P1160, DOI 10.1016/j.jcss.2008.04.002
   Yu JS, 2014, IEEE T INF FOREN SEC, V9, P2302, DOI 10.1109/TIFS.2014.2362979
   Yu Z., 2008, BIOM SEC TECHN 2008, P1
   Zhang M, 2015, SECUR COMMUN NETW, V8, P682, DOI 10.1002/sec.1016
NR 36
TC 6
Z9 6
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 27
EP 37
DI 10.1016/j.infsof.2017.11.004
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200003
DA 2024-07-18
ER

PT J
AU Budgen, D
   Brereton, P
   Williams, N
   Drummond, S
AF Budgen, David
   Brereton, Pearl
   Williams, Nikki
   Drummond, Sarah
TI The contribution that empirical studies performed in industry make to
   the findings of systematic reviews: A tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Primary study; Industry study; Case study
ID SOFTWARE-DEVELOPMENT; SUPPORT; QUALITY; DESIGN; MODELS
AB Context Systematic reviews can provide useful knowledge for software engineering practice, by aggregating and synthesising empirical studies related to a specific topic.
   Objective: We sought to assess how far the findings of systematic reviews addressing practice-oriented topics have been derived from empirical studies that were performed in industry or that used industry data.
   Method: We drew upon and augmented the data obtained from a tertiary study that performed a systematic review of systematic reviews published in the period up to the end of 2015, seeking to identify those with findings that are relevant for teaching and practice. For the supplementary analysis reported here, we then examined the profiles of the primary studies as reported in each systematic review.
   Results: We identified 48 systematic reviews as candidates for further analysis. The many differences that arise between systematic reviews, together with the incompleteness of reporting for these, mean that our counts should be treated as indicative rather than definitive. However, even when allowing for problems of classification, the findings from the majority of these systematic reviews were predominantly derived from using primary studies conducted in industry. There was also an emphasis upon the use of case studies, and a number of the systematic reviews also made some use of weaker 'experience' or even 'opinion' papers.
   Conclusions: Primary studies from industry play an important role as inputs to systematic reviews. Using more rigorous industry-based primary studies can give greater authority to the findings of the systematic reviews, and should help with the creation of a corpus of sound empirical data to support evidence-informed decisions.
C1 [Budgen, David; Drummond, Sarah] Univ Durham, Dept Comp Sci, Durham DH1 3LE, England.
   [Brereton, Pearl] Keele Univ, Sch Comp & Maths, Keele ST5 5BG, Staffs, England.
   [Williams, Nikki] Cranfield Univ, Ctr Elect Warfare Informat & Cyber, Def Acad United Kingdom, Shrivenham SN6 8LA, England.
C3 Durham University; Keele University; Cranfield University
RP Budgen, D (corresponding author), Univ Durham, Dept Comp Sci, Durham DH1 3LE, England.
EM david.budgen@durham.ac.uk; o.p.brereton@keele.ac.uk;
   nikki.williams@cranfield.ac.uk; sarah.dnumnond@durham.ac.uk
RI Williams, Nikki/HZL-1958-2023
OI Williams, Nikki/0000-0002-0771-217X; Budgen, David/0000-0001-7143-0241
CR Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Al-Baik O, 2015, EMPIR SOFTW ENG, V20, P1861, DOI 10.1007/s10664-014-9340-x
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], 2015, INNOVATIONS SOFTWARE
   Ardis M, 2015, COMPUTER, V48, P106, DOI 10.1109/MC.2015.345
   Arias TBC, 2011, EMPIR SOFTW ENG, V16, P544, DOI 10.1007/s10664-011-9158-8
   Bano M, 2015, INFORM SOFTWARE TECH, V58, P148, DOI 10.1016/j.infsof.2014.06.011
   Barends EGR, 2014, ACAD MANAG LEARN EDU, V13, P476, DOI 10.5465/amle.2014.0136
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Budgen D, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P181
   Budgen D., 2017, REPORTING SYSTEMATIC
   Budgen D., 2017, TERTIARY REV E UNPUB
   Budgen D, 2012, PROC INT CONF SOFTW, P1205, DOI 10.1109/ICSE.2012.6227022
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Ghapanchi AH, 2011, J SYST SOFTWARE, V84, P238, DOI 10.1016/j.jss.2010.09.022
   Giuffrida R, 2013, INFORM SOFTWARE TECH, V55, P1143, DOI 10.1016/j.infsof.2013.01.004
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Heaton D, 2015, INFORM SOFTWARE TECH, V67, P207, DOI 10.1016/j.infsof.2015.07.011
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Jorgensen M, 2005, IEEE T SOFTWARE ENG, V31, P942, DOI 10.1109/TSE.2005.128
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Kitchenham B, 2007, IET SOFTW, V1, P161, DOI 10.1049/iet-sen:20060052
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Lavis JN, 2009, HEALTH RES POLICY SY, V7, DOI 10.1186/1478-4505-7-S1-S13
   Li Z, 2013, J SYST SOFTWARE, V86, P2371, DOI 10.1016/j.jss.2013.04.021
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Magdaleno AM, 2012, J SYST SOFTWARE, V85, P351, DOI 10.1016/j.jss.2011.08.028
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Oliver S, 2016, EVID POLICY, V12, P235, DOI 10.1332/174426415X14399963605641
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Persson JS, 2009, IEEE T ENG MANAGE, V56, P508, DOI 10.1109/TEM.2009.2013827
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Petersson H, 2004, J SYST SOFTWARE, V72, P249, DOI 10.1016/S0164-1212(03)00090-6
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Rogers EM, 2003, DIFFUSION INNOVATION
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Silva F.S., 2015, INF SOFTWARE TECHNOL, V58
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Staples M, 2008, INFORM SOFTWARE TECH, V50, P605, DOI 10.1016/j.infsof.2007.07.003
   Steinmacher I., 2015, INF SOFTWARE TECHNOL, V59
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Tüzün E, 2015, INFORM SOFTWARE TECH, V60, P77, DOI 10.1016/j.infsof.2014.12.007
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zarour M, 2015, J SYST SOFTWARE, V101, P180, DOI 10.1016/j.jss.2014.11.041
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 69
TC 12
Z9 12
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 234
EP 244
DI 10.1016/j.infsof.2017.10.012
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Esfandyari, S
   Rafe, V
AF Esfandyari, Sajad
   Rafe, Vahid
TI A tuned version of genetic algorithm for efficient test suite generation
   in interactive <i>t</i>-way testing strategy
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Genetic algorithm; T-way testing; Combinatorial testing; Covering array
   generation
ID PARTICLE SWARM OPTIMIZATION; COMBINATORIAL TEST SUITE; COVERING ARRAYS;
   GRAPH; CONSTRUCTION; SYSTEM
AB Context To improve the quality and correctness of a software product it is necessary to test different aspects of the software system. Among different approaches for software testing, combinatorial testing along with covering array is a proper testing method. The most challenging problem in combinatorial testing strategies like t-way, is the combinatorial explosion which considers all combinations of input parameters. Many evolutionary and meta heuristic strategies have been proposed to address and mitigate this problem.
   Objective: Genetic Algorithm (GA) is an evolutionary search-based technique that has been used in t-way interaction testing by different approaches. Although useful, all of these approaches can produce test suite with small interaction strengths (i.e. t <= 6). Additionally, most of them suffer from expensive computations. Even though there are other strategies which use different meta-heuristic algorithms to solve these problems, in this paper, we propose an efficient uniform and variable t-way minimal test suite generation approach to address these problems using GA, called Genetic Strategy (GS).
   Method: By changing the bit structure and accessing test cases quickly, GS improves performance of the fitness function. These adjustments and reduction of the complexities of GA in the proposed GS decreases the test suite size and increases the speed of test suite generation up to t = 20.
   Results: To evaluate the efficiency and performance of the proposed GS, various experiments are performed on different set of benchmarks. Experimental results show that not only GS supports higher interaction strengths in comparison with the existing GA-based strategies, but also its supported interaction strength is higher than most of other AI-based and computational-based strategies.
   Conclusion: Furthermore, experimental results show that GS can compete against the existing (both AI-based and computational-based) strategies in terms of efficiency and performance in most of the case studies.
C1 [Esfandyari, Sajad; Rafe, Vahid] Arak Univ, Dept Comp Engn, Fac Engn, Arak 3815688349, Iran.
C3 Arak University
RP Rafe, V (corresponding author), Arak Univ, Dept Comp Engn, Fac Engn, Arak 3815688349, Iran.
EM v-rafe@araku.ac.ir
OI esfandyari, sajad/0000-0002-3971-7215
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahmed BS, 2015, INFORM SOFTWARE TECH, V66, P13, DOI 10.1016/j.infsof.2015.05.005
   Ahmed BS, 2012, APPL SOFT COMPUT, V12, P1330, DOI 10.1016/j.asoc.2011.11.029
   Ahmed BS, 2011, J SYST SOFTWARE, V84, P2171, DOI 10.1016/j.jss.2011.06.004
   Alsariera Y.A., 2015, P 4 INT C SOFTW ENG
   Alsewari A.A., 2011, IEEE S IND EL APPL I
   Alsewari ARA, 2012, INFORM SOFTWARE TECH, V54, P553, DOI 10.1016/j.infsof.2012.01.002
   [Anonymous], 1995, THESIS
   [Anonymous], 2006, P 24 PAC NW SOFTW QU
   [Anonymous], 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/50898-1221(96)90227-8.FIFTH
   Bansal Priti, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P294, DOI 10.1007/978-3-642-39742-4_27
   Banzhaf W., 1998, GENETIC PROGRAMMING
   Barisal P, 2015, E-INFORMATICA, V9, P87, DOI 10.5277/E-INF150107
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Bryce RC, 2009, SOFTW TEST VERIF REL, V19, P37, DOI 10.1002/stvr.393
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Calvagna A, 2009, IEEE ICST WORKSHOP, P10, DOI 10.1109/ICSTW.2009.7
   Changhai N., 2011, ACM COMPUT SURV, V43
   Chen X, 2009, ASIA PAC SOFWR ENG, P160, DOI 10.1109/APSEC.2009.18
   Cheon Yoonsik, 2011, IEEE INT C COMP SCI
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen M. B., 2004, THESIS
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Cohen MB, 2008, DISCRETE MATH, V308, P2709, DOI 10.1016/j.disc.2006.06.036
   Forbes M, 2008, J RES NATL INST STAN, V113, P287, DOI 10.6028/jres.113.022
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Hartman A., 2005, SOFTWARE HARDWARE TE, P34
   Hartman A., 2016, IBM INTELLIGENT TEST
   JENKINS B, JENNY TEST TOOL
   Kalaee A, 2016, QUAL RELIAB ENG INT, V32, P2263, DOI 10.1002/qre.1934
   Lehmann E., 2000, Proc. EuroStar, P1
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Lin J., INT C AUT SOFTW ENG
   Mahmoud T, 2015, EXPERT SYST APPL, V42, P8753, DOI 10.1016/j.eswa.2015.07.029
   Maity S., 2003, P 16 IEEE INT S SOFT
   Margetts S., 2001, THESIS
   McCaffrey James D., 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P992, DOI 10.1109/ITNG.2010.93
   Miller B. L., 1995, Complex Systems, V9, P193
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Nasser Abdullah B., 2015, Journal of Theoretical and Applied Information Technology, V82, P154
   Nasser A. B., 2015, ARPN J ENG APPL SCI, V10, P8948
   Nasser A.B., 2015, IEEE STUD C RES DEV
   Nasser A.B., 2015, IEEE INT C CONTR SYS
   Nasser A.B., 2014, P 7 ED ANN SOFTW TES
   Rafe V, 2013, J VISUAL LANG COMPUT, V24, P136, DOI 10.1016/j.jvlc.2012.12.002
   Sabharwal S, 2016, ARAB J SCI ENG, V41, P2821, DOI 10.1007/s13369-015-2022-1
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Stardom J., 2001, THESIS
   Stevens B., 1998, P 8 IBM CTR ADV STUD
   Torres-Jimenez J, 2015, DISCRETE APPL MATH, V190, P141, DOI 10.1016/j.dam.2015.03.010
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Wang ZY, 2008, INT CONF QUAL SOFTW, P155, DOI 10.1109/QSIC.2008.52
   Williams AW, 2000, INT FED INFO PROC, V48, P59
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Yilmaz C., 2004, Software Engineering Notes, V29, P45, DOI 10.1145/1013886.1007519
   Yousefian R, 2014, APPL SOFT COMPUT, V24, P169, DOI 10.1016/j.asoc.2014.06.055
   Yu YT, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P83, DOI 10.1109/QSIC.2003.1319089
   Za Z, 2013, INT J ADV SOFT COMPU, V5, P104
   Zamli KZ, 2015, COMM COM INF SC, V513, P223, DOI 10.1007/978-3-319-17530-0_16
   Zamli KZ, 2016, APPL SOFT COMPUT, V44, P57, DOI 10.1016/j.asoc.2016.03.021
   Zamli KZ, 2011, INFORM SCIENCES, V181, P1741, DOI 10.1016/j.ins.2011.01.002
   Zhang ZQ, 2014, J SYST SOFTWARE, V98, P191, DOI 10.1016/j.jss.2014.09.001
NR 64
TC 32
Z9 32
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 165
EP 185
DI 10.1016/j.infsof.2017.10.007
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000010
DA 2024-07-18
ER

PT J
AU ul Hassan, I
   Ahmad, N
   Zuhaira, B
AF ul Hassan, Isma
   Ahmad, Naveed
   Zuhaira, Behjat
TI Calculating completeness of software project scope definition
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Scope definition; Scope statement; Scope management; Project planning;
   Project management
ID CRITICAL SUCCESS FACTORS; LARGE-SCALE; MANAGEMENT; FAILURE; PRODUCT;
   RISKS
AB Context: Software project plan is the basis of the project execution, and its quality depends on completeness of software scope definition. A method is required that should gauge the completeness of different aspects of scope definition, thus, providing guidance to practitioners to reconsider areas that have not been defined well.
   Objective: This paper aims to evaluate completeness of software project scope definition. It identifies a detailed list of different aspects of software project scope definition, and builds a method where numerical score can be assigned to a scope definition.
   Method: A detailed list of different elements of software project scope definition is identified through literature. These elements are then empirically evaluated through an electronic survey, conducted with the industrial experts. Once finalized, these elements are ranked and assigned weights to systematically build a scorecard that is used to calculate scope definition score. Evaluation of the proposed method is done through a series of formal experiments.
   Results: Evaluation results suggest that the proposed method is useful not only in calculating completeness of software projects scope definition, but it also serves as a guide for practitioners to determine specific aspects that require further consideration.
C1 [ul Hassan, Isma; Ahmad, Naveed; Zuhaira, Behjat] COMSATS Inst Informat Technol, Dept Comp Sci, Islamabad, Pakistan.
C3 COMSATS University Islamabad (CUI)
RP Ahmad, N (corresponding author), COMSATS Inst Informat Technol, Dept Comp Sci, Islamabad, Pakistan.
EM issmaahassan@comsats.edu.pk; naveedahmad@comsats.edu.pk;
   b_zuhaira@comsats.edu.pk
RI Zuhaira, Behjat/GSE-3021-2022
OI Hassan, Isma/0000-0001-7782-1358
CR AARAMAA S, 2013, P 14 INT C PROD FOC, V7983, P123
   Abrantes R, 2014, INT J PROJ MANAG, V32, P874, DOI 10.1016/j.ijproman.2013.10.014
   Addison T., 2002, Proceedings of SAICSIT, P128
   Agarwal N., 2006, International Journal of Project Management, V24, P358, DOI 10.1016/j.ijproman.2005.11.009
   Ahmad N, 2013, RES ENG DES, V24, P219, DOI 10.1007/s00163-012-0139-8
   [Anonymous], 2012, 16 INT SOFTWARE PROD
   [Anonymous], 2008, GUIDE PROJECT MANAGE, V4th
   [Anonymous], 2001, Journal of Architectural Engineering
   [Anonymous], 1969, CONTENT ANAL SOCIAL
   [Anonymous], 1999, International Journal of Project Management., DOI DOI 10.1016/S0263-7863(98)00040-4
   [Anonymous], P 17 ANZAM C PERTH A
   Arnuphaptrairong T., 2011, P INT MULTICONFERENC, V1, P1
   Badiru AB, 2009, IND INNOV SER, P1
   Bagla V., 2011, INT J COMPUTER APPL, V36, P1
   Banerjee U., 2011, IND SOFTW ENG C 2011, P69
   Barron FH, 1996, MANAGE SCI, V42, P1515, DOI 10.1287/mnsc.42.11.1515
   Belassi W., 1996, International Journal of Project Management, V14, P141
   Berry D. M., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P311, DOI 10.1109/RE.2010.44
   Bhatti Muhammad Wasim, 2010, 2010 International Conference on Computer Information Systems and Industrial Management Applications (CISIM 2010), P319, DOI 10.1109/CISIM.2010.5643642
   Bingham E., 2010, Development of the Project Definition Rating Index (PDRI) For Infrastructure Projects
   Bjarnason E., 2010, 2010 Fourth International Workshop on Software Product Management (IWSPM), P30, DOI 10.1109/IWSPM.2010.5623866
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   Boschetti MA, 2014, COMPUT OPER RES, V43, P116, DOI 10.1016/j.cor.2013.09.007
   Boyd N, 1999, J OBJECT-ORIENT PROG, V11, P45
   Buschmann F., 2009, IEEE SOFTW, V26
   Callendar G., 2004, INT PUBLIC PROCUREME
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Cannon J.A., 1994, IND COMMER TRAIN, V26, P10
   Carter RA, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P94
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Clarke A., 1999, INT J PROJ MANAG, V17, P139, DOI 10.1016/S0263-7863(98)00031-3
   Clements PC, 2005, IEEE SOFTWARE, V22, P54, DOI 10.1109/MS.2005.133
   Cooke-Davies T., 2002, International Journal of Project Management, V20, P185
   Cooke-Davies T. J., 2003, PROCEDIA TECHNOL, V21, P471, DOI DOI 10.1016/j.protcy.2013.12.080
   Crawford L., 2006, International Journal of Project Management, V24, P687, DOI 10.1016/j.ijproman.2006.09.011
   CURRIE W, 1994, NEW TECH WORK EMPLOY, V9, P19, DOI 10.1111/j.1468-005X.1994.tb00047.x
   da Silva IF, 2014, J SYST SOFTWARE, V88, P189, DOI 10.1016/j.jss.2013.10.040
   Dalcher D., 2009, CEPIS Upgrade, VX, P42
   Damasiotis V., 2014, SCOPE MANAGEMENT COM
   Davies B.P., 1999, INTERACT COMPUT, V11, P699
   De Ubach P., 2004, VALIDATION PROJECT D
   DE WIT A., 1988, INT J PROJ MANAG, V6, P164, DOI DOI 10.1016/0263-7863(88)90043-9
   Dekkers C., 2001, CROSSTALK J DEFENSE, V14, P8
   Dekkers C., 2010, CROSSTALK J DEFENSE, P16
   Dekkers C, 2007, EUROMICRO CONF PROC, P385
   DeMarco T, 2003, IEEE SOFTWARE, V20, P99, DOI 10.1109/MS.2003.1231163
   Dimitrijevic S, 2015, INFORM SOFTWARE TECH, V57, P352, DOI 10.1016/j.infsof.2014.05.012
   Dumont PR, 1997, J MANAGE ENG, V13, P54, DOI 10.1061/(ASCE)0742-597X(1997)13:5(54)
   Dvir D, 1998, RES POLICY, V27, P915, DOI 10.1016/S0048-7333(98)00085-7
   Dvir D., 2003, International Journal of Project Management, V21, P89, DOI DOI 10.1016/S0263-7863(02)00012-1
   EDWARDS W, 1994, ORGAN BEHAV HUM DEC, V60, P306, DOI 10.1006/obhd.1994.1087
   Fageha MK, 2013, PROCD SOC BEHV, V74, P154, DOI 10.1016/j.sbspro.2013.03.038
   Gautam T.P., 2014, SOFTWARE MEASUREMENT
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   Gillain J., 2012, P 16 INT SOFTW PROD, P161
   Gregory J., 2014, MORE AGILE TESTING L
   Hackney J.W., 1992, CONTROL MANAGEMENT
   Hartman F., 2002, Project Management Journal, V33, P5
   Hinde S, 2005, COMPUT FRAUD SECUR, P15, DOI 10.1016/S1361-3723(05)00148-X
   Imtiaz M. A., 2013, INT J SOCIAL HUMAN S, V7, P1913
   Iqbal S., 2012, International Journal of Software Engineering and its Applications, V6, P19
   ISO, 2012, 1414362012 ISO IEC
   Javdani T., 2013, INT J COMPUT SCI ISS, V9, P127
   Jiang JJ, 2001, IEEE T ENG MANAGE, V48, P46, DOI 10.1109/17.913165
   Jie Hu, 2012, 2012 Proceedings of the 3rd International Workshop on Product LinE Approaches in Software Engineering (PLEASE 2012), P45, DOI 10.1109/PLEASE.2012.6229770
   John I., 2009, P 13 INT SOFTW PROD, P31
   Jones C., 2006, Crosstalk - The Journal of Defense Software Engineering, V19, P4
   Judson J., 1999, COMMUNICATIONS ASS I, V2
   Kakola T., 2015, 36 INT C INF SYST
   Kassab M, 2007, EUROMICRO CONF PROC, P409
   Keil M, 2003, IEEE T ENG MANAGE, V50, P251, DOI 10.1109/TEM.2003.817312
   Keote A.K., 2010, FUNCTION POINTS AGIL
   Khan A., 2006, COST ENG J, V48, P12
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kliem R, 2004, INFORM SYST MANAGE, V21, P22, DOI 10.1201/1078/44432.21.3.20040601/82473.4
   Kronbichler S.A., 2009, The Open Information Systems Journal, V3, P14, DOI [DOI 10.2174/1874133900903010014, 10.2174/1874133900903010014]
   Kulk GP, 2008, SCI COMPUT PROGRAM, V72, P136, DOI 10.1016/j.scico.2008.04.003
   Kumari SN, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P510, DOI 10.1109/IndiaCom.2014.6828190
   Laporti V, 2009, COMPUT IND, V60, P367, DOI 10.1016/j.compind.2009.02.011
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Lotz S.J., 2015, INCOSE SYST ENG
   Lynch J., 2015, CHAOS REPORT
   Madhuri K.L., 2014, ADV INTELLIGENT SYST, P249
   Madhuri K. L., 2014, INT C ADV EL COMP CO, P1
   Madhuri L., 2014, International journal of computer applications, V106, P9
   Martinez E.V., 1994, PROJ MANAG J, V25, P17
   McGee S, 2010, INT J ADV SOFTW, P118
   McQuighan J. M., 2011, 2011 9th International Conference on Software Engineering Research, Management and Applications, P235, DOI 10.1109/SERA.2011.25
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Munns A. K., 1996, International Journal of Project Management, V14, P81, DOI [10.1016/0263-7863(95)00057-7, DOI 10.1016/0263-7863(95)00057-7]
   Murray JP, 2001, INFORM SYST MANAGE, V18, P25, DOI 10.1201/1078/43195.18.2.20010301/31274.5
   Nasir M.H. N., 2011, Scientific Research and Essays, V6, P2174, DOI [DOI 10.5897/SRE10.1171, 10.5897/SRE10.1171]
   Nganji JuliusT., 2011, International Journal of Software Engineeering and Its Applications (IJSEIA), V5, P47
   Ofori D.F., 2013, International Journal of Business and Management, V8, P14
   OZ E, 1994, COMMUN ACM, V37, P29, DOI 10.1145/194313.194319
   Papke-Shields KE, 2010, INT J PROJ MANAG, V28, P650, DOI 10.1016/j.ijproman.2009.11.002
   Patton J, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P146, DOI 10.1109/ADC.2003.1231465
   Patton J., 2014, USER STORY MAPPING D
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Pinto J.K., 1988, PROJECT MANAGEMENT H, V479
   PINTO JK, 1990, IEEE T ENG MANAGE, V37, P269, DOI 10.1109/17.62322
   Poli M, 2003, TECHNOLOGY MANAGEMENT FOR RESHAPING THE WORLD, P231
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Pühl S, 2011, INT REQUIR ENG CONF, P307, DOI 10.1109/RE.2011.6051623
   Q/P Management group Inc, 2009, CONTR PROJ SCOP FUNC
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   Rainer A, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P326, DOI 10.1109/ISESE.2003.1237993
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   Robinson P., 1999, WORK STUDY, V48, P211
   Sakthidaran R.T., 2010, OPEN SOFTW ENG J, V4, P64
   Sanghera P., 2008, Fundamentals of effective program management: A process approach based on the global standard
   Savolainen P, 2012, INT J PROJ MANAG, V30, P458, DOI 10.1016/j.ijproman.2011.07.002
   Schach S.R., 1996, CLASSICAL OBJECT ORI, V3rd
   Schiel J., 2011, SCRUMMASTER STUDY GU
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Schwalbe K., 2010, Information technology: Project management 6e
   Schwalbe K., 2014, INFORM TECHNOLOGY PR, V7th
   Shah U.S., 2015, SIGSOFT SOFTW ENG NO, V40, P1
   Sheffield J, 2013, INT J PROJ MANAG, V31, P459, DOI 10.1016/j.ijproman.2012.09.011
   Sillitti A., 2011, 12 INT C XP 2011 MAD
   Sliger M., 2008, The software project manager's bridge to agility
   Soldano D., 1994, Northcon/94. Conference Record, P310, DOI 10.1109/NORTHC.1994.643367
   Stoica R, 2013, PROCEDIA COMPUT SCI, V16, P728, DOI 10.1016/j.procs.2013.01.076
   Sulaiman T., 2006, ARXIVMATHCO0606690, P10
   Taherdoost H., 2015, 12 INT C EACT SEOUL, P5
   Taylor A., 2000, COMPUT BULL, V41, P24, DOI 10.1093/combul/42.1.24
   Tennant D., 1993, ADVANCES IN INSTRUMENTATION AND CONTROL, V48, P675
   Thite M., 2000, International Journal of Project Management, V18, P235, DOI 10.1016/S0263-7863(99)00021-6
   U.S. Department of Energy, 2010, PROJ DEF RAT IND GUI
   U.S. Department of Energy, 2001, PROJ DEF RAT IND GUI
   Vaughan P. J., 2001, P COLL U MACH REC C
   Verner J, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P71
   Wang Y., 2002, APPL PDRI PROJECT RI
   Wang Y. R., 2006, PROC 23 INT S ROBOTI, P878
   Weber P., 1990, BASIC CONTENT ANAL, V2nd
   Wever A, 2011, IEEE SOFTWARE, V28, P22
   Whittaker B., 1999, Information Management & Computer Security, V7, P23, DOI 10.1108/09685229910255160
   Wnuk K., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P409, DOI 10.1109/RE.2010.62
   Wnuk Krzysztof, 2009, Fourth International Workshop on Requirements Engineering Visualization (REV 2009), P11, DOI 10.1109/REV.2009.2
   Wnuk K, 2016, IEEE T SOFTWARE ENG, V42, P47, DOI 10.1109/TSE.2015.2445347
   Wnuk K, 2011, LECT NOTES COMPUT SC, V6606, P54, DOI 10.1007/978-3-642-19858-8_6
   Wohlin C., 2012, Experimentation in Software Engineering
   Woolridge RW, 2009, COMMUN ACM, V52, DOI 10.1145/1538788.1538822
   Yeo K. T., 2002, International Journal of Project Management, V20, P241, DOI 10.1016/S0263-7863(01)00075-8
   Yeo K.T., 1995, International Journal of Project Management, V13, P219
   Young Raymond, 2008, International Journal of Project Management, V26, P713, DOI 10.1016/j.ijproman.2008.06.001
   Yusop N., P 6 INT C WEB ENG
   [No title captured]
NR 151
TC 10
Z9 18
U1 0
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 208
EP 233
DI 10.1016/j.infsof.2017.10.010
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FO6WE
UT WOS:000417009000012
DA 2024-07-18
ER

PT J
AU Aysolmaz, B
   Leopold, H
   Reijers, HA
   Demirörs, O
AF Aysolmaz, Banu
   Leopold, Henrik
   Reijers, Hajo A.
   Demirors, Onur
TI A semi-automated approach for generating natural language requirements
   documents based on business process models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements elicitation; Business process model; Natural language
   generation
ID REPRESENTATION; INFORMATION; SIZE
AB Context: The analysis of requirements for business-related software systems is often supported by using business process models. However, the final requirements are typically still specified in natural language. This means that the knowledge captured in process models must be consistently transferred to the specified requirements. Possible inconsistencies between process models and requirements represent a serious threat for the successful development of the software system and may require the repetition of process analysis activities.
   Objective: The objective of this paper is to address the problem of inconsistency between process models and natural language requirements in the context of software development.
   Method: We define a semi-automated approach that consists of a process model-based procedure for capturing execution-related data in requirements models and an algorithm that takes these models as input for generating natural language requirements. We evaluated our approach in the context of a multiple case study with three organizations and a total of 13 software development projects.
   Results: We found that our approach can successfully generate well-readable requirements, which do not only positively contribute to consistency, but also to the completeness and maintainability of requirements. The practical use of our approach to identify a suitable subcontractor on the market in 11 of the 13 projects further highlights the practical value of our approach.
   Conclusion: Our approach provides a structured way to obtain high-quality requirements documents from process models and to maintain textual and visual representations of requirements in a consistent way. (c) 2017 Elsevier B.V. All rights reserved.
C1 [Aysolmaz, Banu; Leopold, Henrik; Reijers, Hajo A.] Vrije Univ Amsterdam, Dept Comp Sci, De Boelelaan 1105, NL-1081 HV Amsterdam, Netherlands.
   [Aysolmaz, Banu] Maastricht Univ, Sch Business & Econ, POB 616, NL-6200 MD Maastricht, Netherlands.
   [Demirors, Onur] Izmir Inst Technol, Dept Comp Engn, TR-35430 Urla, Turkey.
   [Demirors, Onur] Univ New South Wales, Sch Comp Sci & Engn, Barker St, Kensington, NSW 2052, Australia.
C3 Vrije Universiteit Amsterdam; Maastricht University; Izmir Institute of
   Technology; University of New South Wales Sydney
RP Aysolmaz, B (corresponding author), Vrije Univ Amsterdam, Dept Comp Sci, De Boelelaan 1105, NL-1081 HV Amsterdam, Netherlands.
EM b.aysolmaz@maastrichtuniversity.nl; h.leopold@vu.nl; h.a.reijers@vu.nl;
   onurdemirors@iyte.edu.tr
RI Aysolmaz, Banu/D-1318-2010
OI Aysolmaz, Banu/0000-0002-6540-5100; Reijers, Hajo/0000-0001-9634-5852;
   Demirors, Onur/0000-0001-6601-3937
FU European Union's Horizon research and innovation programme [660646];
   Marie Curie Actions (MSCA) [660646] Funding Source: Marie Curie Actions
   (MSCA)
FX This work has been partially supported by the European Union's Horizon
   2020 research and innovation programme under the Marie Sklodowska-Curie
   grant agreement No 660646.
CR [Anonymous], THESIS
   [Anonymous], LEARN MOTIV
   [Anonymous], MCIS 2010 P
   [Anonymous], COMPUT LINGUIST
   [Anonymous], P 1 C PRINC SOFTW EN
   [Anonymous], TECHNICAL REPORT
   [Anonymous], GUIDE BUSINESS ANALE
   [Anonymous], PRACTICE
   [Anonymous], J BUS CASES APPL
   [Anonymous], TECHNICAL REPORT
   [Anonymous], EUR C 2003
   [Anonymous], P INT C SOFTW ENG AP
   [Anonymous], 8301998 IEEE COMP SO
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bollmann M., 2011, Proceedings of the 13th European Workshop on Natural Language Generation (ENLG 2011), P133
   Chiao C.M., 2013, CPSM ICSM, P1, DOI [10.1109/BIBE.2013.6701699, DOI 10.1109/BIBE.2013.6701699]
   Cox K, 2005, INFORM SOFTWARE TECH, V47, P319, DOI 10.1016/j.infsof.2004.09.002
   Davis A.M., 2013, Just enough requirements management: where software development meets marketing
   DAVIS R., 2007, ARIS DESIGN PLATFORM
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Firesmith D., 2003, J OBJECT TECHNOL, V2, P77
   Goedertier S, 2007, LECT NOTES COMPUT SC, V4805, P603
   Gonzalez J.D. la V., 2007, P 8 WORKSHOP BUSINES, P1
   Gross A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P47, DOI 10.1109/RE.2009.30
   Hardy G., 2006, Information Security Technical Report, V11, P55, DOI 10.1016/j.istr.2005.12.004
   Hunnebeck L., 2011, ITIL Service Design
   Indulska M, 2009, LECT NOTES COMPUT SC, V5829, P458, DOI 10.1007/978-3-642-04840-1_34
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   Klein D, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P423, DOI 10.3115/1075096.1075150
   Leopold H, 2014, IEEE T SOFTWARE ENG, V40, P818, DOI 10.1109/TSE.2014.2327044
   Leopold H, 2012, INFORM SYST, V37, P443, DOI 10.1016/j.is.2012.01.004
   Li J, 2012, LECT NOTES COMPUT SC, V7481, P200, DOI 10.1007/978-3-642-32885-5_16
   Lu XF, 2010, INT J CORPUS LINGUIS, V15, P474, DOI 10.1075/ijcl.15.4.02lu
   de la Vara JL, 2009, LECT NOTES BUS INF P, V21, P133
   Malik S, 2013, LECT NOTES BUS INF P, V132, P611
   Mayer RE, 2009, MULTIMEDIA LEARNING, 2ND EDITION, P1
   Mayr HeinrichC., 2007, ICDS 07 1 INT C DIGI, P8
   Moher T. G., 1993, Empirical Studies of Programmers: Fifth Workshop, P137
   Monsalve Carlos, 2011, Recent Researchers in Applied Computer and Applied Computational Science. 10th WSEAS International Conference on Applied Computer and Applied Computational Science (ACACOS' 11), P235
   Monsalve C, 2011, INT J SOFTW ENG KNOW, V21, P311, DOI 10.1142/S0218194011005359
   Nicolás J, 2009, INFORM SOFTWARE TECH, V51, P1291, DOI 10.1016/j.infsof.2009.04.001
   POLICH JM, 1974, MEM COGNITION, V2, P683, DOI 10.3758/BF03198139
   RAMSEY HR, 1983, COMMUN ACM, V26, P445, DOI 10.1145/358141.358149
   Recker J., 2013, SCI RES INFORM SYSTE, DOI DOI 10.1007/978-3-642-30048-6
   Reiter E., 1997, Natural Language Engineering, V3, P57, DOI 10.1017/S1351324997001502
   Reiter E., 1995, Proceedings of the Fifth European Workshop on Natural-Language Generation (ENLGW-1995), ENLGW-1995, P95
   SCANLAN DA, 1989, IEEE SOFTWARE, V6, P28, DOI 10.1109/52.35587
   Schatz Bernhard, 2005, LNI, V68, P511
   SCHWARTZ SH, 1972, J EXP PSYCHOL, V95, P343, DOI 10.1037/h0033669
   Cardoso ECS, 2009, 2009 13TH ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE WORKSHOPS (EDOCW 2009), P320, DOI 10.1109/EDOCW.2009.5331974
   Specht T, 2005, CEC 2005: Seventh IEEE International Conference on E-Commerce Technology, Proceedings, P249, DOI 10.1109/ICECT.2005.60
   van der Aa H, 2015, LECT NOTES COMPUT SC, V9253, P90, DOI 10.1007/978-3-319-23063-4_6
   Weber M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P331, DOI 10.1109/ICRE.2002.1048546
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   WRIGHT P, 1973, J APPL PSYCHOL, V57, P160, DOI 10.1037/h0037045
   Yin Robert K., 2002, APPL SOCIAL RES METH, V5
   Zowghi D., 2002, International Workshop on Requirements Engineering: Foundations for Software Quality, P155
NR 57
TC 24
Z9 24
U1 1
U2 29
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 14
EP 29
DI 10.1016/j.infsof.2017.08.009
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FM3BC
UT WOS:000414878200002
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Kula, RG
   Ouni, A
   German, DM
   Inoue, K
AF Kula, Raula Gaikovina
   Ouni, Ali
   German, Daniel M.
   Inoue, Katsuro
TI An empirical study on the impact of refactoring activities on evolving
   client-used APIs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring; API Breakages; Software libraries; Software evolution
ID SOURCE CODE; EVOLUTION; SUPPORT
AB Context Refactoring is recognized as an effective practice to maintain evolving software systems. For software libraries, we study how library developers refactor their Application Programming Interfaces (APIs), especially when it impacts client users by breaking an API of the library.
   Objective: Our work aims to understand how clients that use a library API are affected by refactoring activities. We target popular libraries that potentially impact more library client users.
   Method: We distinguish between library APIs based on their client-usage (referred to as client-used APIs) in order to understand the extent to which API breakages relate to refactorings. Our tool-based approach allows for a large-scale study across eight libraries (i.e., totaling 183 consecutive versions) with around 900 clients projects.
   Results: We find that library maintainers are less likely to break client-used API classes. Quantitatively, we find that refactoring activities break less than 37% of all client-used APIs. In a more qualitative analysis, we show two documented cases of where non-refactoring API breaking changes are motivated other maintenance issues (i.e., bug fix and new features) and involve more complex refactoring operations.
   Conclusion Using our automated approach, we find that library developers are less likely to break APIs and tend to break client-used APIs when performing maintenance issues.
C1 [Kula, Raula Gaikovina; Inoue, Katsuro] Osaka Univ, Suita, Osaka, Japan.
   [Kula, Raula Gaikovina] Nara Inst Sci & Technol, Ikoma, Japan.
   [German, Daniel M.] Univ Victoria, Victoria, BC, Canada.
   [Ouni, Ali] Ecole Technol Super Montreal, Montreal, PQ, Canada.
C3 Osaka University; Nara Institute of Science & Technology; University of
   Victoria; University of Quebec; Ecole de Technologie Superieure - Canada
RP Kula, RG (corresponding author), Osaka Univ, Suita, Osaka, Japan.; Kula, RG (corresponding author), Nara Inst Sci & Technol, Ikoma, Japan.
EM raula-k@is.naist.jp; ali@ist.osaka-u.ac.jp; dmg@uvic.ca;
   inoue@istosaka-u.ac.jp
RI Ouni, Ali/Y-8280-2019; Kula, Raula/AAD-6079-2019
OI Ouni, Ali/0000-0003-4708-0362; Kula, Raula/0000-0003-2324-0608
FU JSPS KANENHI [JP25220003, JP26280021]; Osaka University Program for
   Promoting International Joint Research
FX This work is supported by JSPS KANENHI (Grant Numbers JP25220003 and
   JP26280021) and the "Osaka University Program for Promoting
   International Joint Research."
CR [Anonymous], P ACM SIGSOFT 20 INT
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Balaban I., 2005, REFACTORING SUPPORT, P265
   Bauml J, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P428, DOI 10.1109/SEAA.2009.80
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   Bouwers M. v. E. Joel Cox Eric, 2015, MEASURING DEPENDENCY, V2, P109
   Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Chow K, 1996, P 1996 INT C SOFTW M
   Cohen J., 1977, FRONT MATTER
   Cossette BE, 2012, P ACM SIGSOFT INT S
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   FORMAN IR, 1995, SIGPLAN NOTICES, V30, P426, DOI 10.1145/217839.217880
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Jezek K, 2015, INFORM SOFTWARE TECH, V65, P129, DOI 10.1016/j.infsof.2015.02.014
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapur P, 2010, ACM SIGPLAN NOTICES, V45, P726, DOI 10.1145/1932682.1869518
   Kawamitsu N, 2014, P SCAM
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kula R. G., 2014, P IEEE WORK C SOFT V
   Kula RG, 2015, 22 IEEE INT C SOFTW
   Larman C, 2001, IEEE SOFTWARE, V18, P89, DOI 10.1109/52.922731
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Malpohl G, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P73, DOI 10.1109/ASE.2000.873652
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mezini M, 1997, ACM SIGPLAN NOTICES, V32, P1, DOI 10.1145/263700.263701
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Opdyke William F., 1992, THESIS
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Steyaert P, 1996, ACM SIGPLAN NOTICES, V31, P268, DOI 10.1145/236338.236363
   Vasquez M. L., 2014, DO API CHANGES TRIGG, P83
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
NR 41
TC 20
Z9 24
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 186
EP 199
DI 10.1016/j.infsof.2017.09.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FM3BC
UT WOS:000414878200012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Al Dallal, J
AF Al Dallal, Jehad
TI Predicting move method refactoring opportunities in object-oriented code
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented design; Move method refactoring; Class quality; Logistic
   regression analysis
ID QUALITY; IDENTIFICATION; COHESION
AB Context: Refactoring is the maintenance process of restructuring software source code to improve its quality without changing its external behavior. Move Method Refactoring (MMR) refers to moving a method from one class to the class in which the method is used the most often. Manually inspecting and analyzing the source code of the system under consideration to determine the methods in need of MMR is a costly and time-consuming process. Existing techniques for identifying MMR opportunities have several limitations, such as scalability problems and being inapplicable in early development stages. Most of these techniques do not consider semantic relationships.
   Objective: We introduce a measure and a corresponding model to precisely predict whether a class includes methods in need of MMR. The measure is applicable once a class has entered the early development stages without waiting for other classes to be developed.
   Method: The proposed measure considers both the cohesion and coupling aspects of methods. In addition, the measure uses structural and semantic data available within the class of interest. A statistical technique is applied to construct prediction models for classes that include methods in need of MMR. The models are applied on seven object-oriented systems to empirically evaluate their abilities to predict MMR opportunities.
   Results: The results show both that the prediction models based on the proposed measure had outstanding prediction abilities and that the measure was able to correctly detect more than 90% of the methods in need of MMR within the predicted classes.
   Conclusions: The proposed measure and corresponding prediction models are expected to greatly assist software engineers both in locating classes that include methods in need of MMR and in identifying these methods within the predicted classes. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Al Dallal, Jehad] Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University Research Grant [QI01/15]
FX The author would like to acknowledge the support of this work by Kuwait
   University Research Grant QI01/15. In addition, the author would like to
   thank Anas Abdin for assisting in collecting the quality results and
   performing the mutation process.
CR Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P1125, DOI 10.1016/j.infsof.2012.04.004
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Alkhalid A, 2011, J RES PRACT INF TECH, V43, P285
   [Anonymous], WORKSH PRED MOD SOFT
   [Anonymous], 4 WORKSH REF TOOLS W
   [Anonymous], THESIS U FEDERAL RIO
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Czibula Istvan Gergely, 2008, WSEAS Transactions on Electronics, V5, P291
   Czibula IG, 2006, INT J COMPUT SCI NET, V6, P40
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Dumais ST, 2004, ANNU REV INFORM SCI, V38, P189
   Fokaefs M, 2007, PROC IEEE INT CONF S, P467
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Kim M., 2011, ICSE 11, P151, DOI DOI 10.1145/1985793.1985815
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Murgia A., 2012, 16 EUR C SOFTW MAINT
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Olson D.L., 2008, ADV DATA MINING TECH, DOI https://doi.org/10.1007/978-3-540-76917-0
   Pan WF, 2013, INT J MODEL IDENTIF, V18, P182, DOI 10.1504/IJMIC.2013.052300
   Pan WF, 2009, FRONT COMPUT SCI CHI, V3, P396, DOI [10.1007/s11704-009-0054-v, 10.1007/s11704-009-0054-y]
   Rousseeuw PJ, 1999, AM STAT, V53, P382, DOI 10.2307/2686061
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Samoladas I., 2003, 9 PANH C INF
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Serban G., 2007, 22nd Int. Symp. on Computer and Information Sciences (ISCIS), P1
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Spinellis D, 2009, ELECTRON NOTES THEOR, V233, P5, DOI 10.1016/j.entcs.2009.02.058
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
NR 45
TC 16
Z9 17
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 105
EP 120
DI 10.1016/j.infsof.2017.07.013
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200008
DA 2024-07-18
ER

PT J
AU Reinhartz-Berger, I
   Figl, K
   Haugen, O
AF Reinhartz-Berger, Iris
   Figl, Kathrin
   Haugen, Oystein
TI Investigating styles in variability modeling: Hierarchical vs.
   constrained styles
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Variability modeling; Feature modeling; Comprehensibility; Hierarchical
   modeling; Textual constraints; Cognitive aspects; Empirical research;
   Product line engineering
ID COGNITIVE LOAD; GUIDELINES; SYSTEMS; DESIGN; EXPRESSIVENESS; QUALITY
AB Context: A common way to represent product lines is with variability modeling. Yet, there are different ways to extract and organize relevant characteristics of variability. Comprehensibility of these models and the ease of creating models are important for the efficiency of any variability management approach.
   Objective: The goal of this paper is to investigate the comprehensibility of two common styles to organize variability into models hierarchical and constrained where the dependencies between choices are specified either through the hierarchy of the model or as cross-cutting constraints, respectively.
   Method: We conducted a controlled experiment with a sample of 90 participants who were students with prior training in modeling. Each participant was provided with two variability models specified in Common Variability Language (CVL) and was asked to answer questions requiring interpretation of provided models. The models included 9-20 nodes and 8-19 edges and used the main variability elements. After answering the questions, the participants were asked to create a model based on a textual description.
   Results: The results indicate that the hierarchical modeling style was easier to comprehend from a subjective point of view, but there was also a significant interaction effect with the degree of dependency in the models, that influenced objective comprehension. With respect to model creation, we found that the use of a constrained modeling style resulted in higher correctness of variability models.
   Conclusions: Prior exposure to modeling style and the degree of dependency among elements in the model determine what modeling style a participant chose when creating the model from natural language descriptions. Participants tended to choose a hierarchical style for modeling situations with high dependency and a constrained style for situations with low dependency. Furthermore, the degree of dependency also influences the comprehension of the variability model. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Reinhartz-Berger, Iris] Univ Haifa, Dept Informat Syst, Haifa, Israel.
   [Figl, Kathrin] Vienna Univ Econ & Business, Inst Informat Syst & New Media, Vienna, Austria.
   [Haugen, Oystein] Ostfold Univ Coll, Halden, Norway.
C3 University of Haifa; Vienna University of Economics & Business; Ostfold
   University College
RP Reinhartz-Berger, I (corresponding author), Univ Haifa, Dept Informat Syst, Haifa, Israel.
EM iris@is.haifa.ac.il; kathrin.figl@wu.ac.at; oystein.haugen@hiof.no
OI Figl, Kathrin/0000-0002-0777-2295
CR Acher M., 2013, P 7 INT WORKSH VAR M
   Ambler S. W., 2005, ELEMENTS UML TM 2 0
   [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], P 13 INT SOFTW PROD
   [Anonymous], 2007, P 11 INT SOFTW PROD
   Asadi Mohsen, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P397, DOI 10.1007/978-3-642-34002-4_31
   BADDELEY A, 1992, Science (Washington D C), V255, P556, DOI 10.1016/j.cub.2009.12.014
   Batory Don., 2005, FEATURE MODELS GRAMM
   Berg K., 2005, P 2005 ANN RES C S A
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   Bowen PL, 2009, INFORM SYST RES, V20, P565, DOI 10.1287/isre.1080.0181
   Burton-Jones A, 2006, INFORM SYST RES, V17, P38, DOI 10.1287/isre.1050.0079
   CHANDLER P, 1992, BRIT J EDUC PSYCHOL, V62, P233, DOI 10.1111/j.2044-8279.1992.tb01017.x
   Christensen BT, 2007, MEM COGNITION, V35, P29, DOI 10.3758/BF03195939
   COLL RA, 1994, COMMUN ACM, V37, P76, DOI 10.1145/175276.175283
   Czarnecki K., 2005, P 2005 INT WORKSH SO
   Czarnecki K., 2000, FEATURE MODELING GEN
   Czarnecki K, 2012, VAMOS
   Czarnecki K., 2006, P 2006 INT SOFTW PRO
   Duncker K, 1945, PSYCHOL MONOGR, V58, P1
   Eppler MartinJ., 2006, INFORM VISUAL, V5, P202, DOI [DOI 10.1057/PALGRAVE.IVS.9500131, 10.1057/palgrave.ivs.9500131]
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Figl K, 2017, BUS INFORM SYST ENG+, V59, P41, DOI 10.1007/s12599-016-0460-2
   Figl K, 2015, INT J HUM-COMPUT ST, V82, P96, DOI 10.1016/j.ijhcs.2015.05.007
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Gomaa H., 2005, P 2005 SEW TUT NOT
   Haisjackl C, 2016, SOFTW SYST MODEL, V15, P325, DOI 10.1007/s10270-014-0435-z
   Haugen O., 2014, BVR BETTER VARIABILI, P1
   Haugen O., 2012, AD20120805 OMG
   Houy Constantin, 2012, Conceptual Modeling. Proceedings 31st International Conference, ER 2012, P64, DOI 10.1007/978-3-642-34002-4_5
   Itzik N., 2014, P 18 INT SOFTW PROD, V2
   Itzik N, 2016, IEEE T SOFTWARE ENG, V42, P687, DOI 10.1109/TSE.2015.2512599
   Jansson D., 1991, DESIGN STUDIES, V12, P3, DOI [DOI 10.1016/0142-694X(91)90003-F, 10.1016/0142-694X(91)90003-F]
   Kalyuga S, 2003, EDUC PSYCHOL-US, V38, P23, DOI 10.1207/S15326985EP3801_4
   Kang KC., 2013, VARIABILITY MODELING, P25, DOI [10.1007/978-3-642-36583-6_2, DOI 10.1007/978-3-642-36583-6_2]
   Kang Kyo C, 1990, Technical Report
   Kirschner PA, 2002, LEARN INSTR, V12, P1, DOI 10.1016/S0959-4752(01)00014-7
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Koschmider A., 2013, P 2013 C MOV MEAN IN
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Maes A, 2007, DATA KNOWL ENG, V63, P701, DOI 10.1016/j.datak.2007.04.008
   Mayer RE, 2003, WEB-BASED LEARNING: WHAT DO WE KNOW? WHERE DO WE GO?, P23
   McNamara T.P., 2003, HDB PSYCHOL
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Parsons J, 2005, DATA KNOWL ENG, V55, P327, DOI 10.1016/j.datak.2004.12.008
   Parsons J., 2006, CLASSIFICATION SYSTE
   Parsons J, 2013, J ASSOC INF SYST, V14, P245
   Parsons J, 2011, J ASSOC INF SYST, V12, P441
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Recker J, 2013, EUR J INFORM SYST, V22, P673, DOI 10.1057/ejis.2012.50
   Recker J, 2010, EUR J INFORM SYST, V19, P76, DOI 10.1057/ejis.2010.5
   Reinhartz-Berger I., 2014, P ACM IEEE 17 INT C
   Reinhartz-Berger I., 2008, SEL READ DATABASE TE, P330
   Reinhartz-Berger I., 2014, P 18 SOFTW PROD LIN
   Reinhartz-Berger I, 2011, LECT NOTES BUS INF P, V81, P468
   RIST RS, 1989, COGNITIVE SCI, V13, P389, DOI 10.1207/s15516709cog1303_3
   Rokach L, 2005, IEEE T SYST MAN CY C, V35, P476, DOI 10.1109/TSMCC.2004.843247
   Sánchez-González L, 2010, LECT NOTES COMPUT SC, V6426, P78
   Schmider E, 2010, METHODOLOGY-EUR, V6, P147, DOI 10.1027/1614-2241/a000016
   Shanks G, 2008, MIS QUART, V32, P553
   SMITH SM, 1993, MEM COGNITION, V21, P837, DOI 10.3758/BF03202751
   Soffer P., 2012, P 2012 BUS PROC MAN
   Sternberg R. J., 2009, Cognitive Psychology, V5th
   SWELLER J, 1988, COGNITIVE SCI, V12, P257, DOI 10.1207/s15516709cog1202_4
   Sweller J, 2010, EDUC PSYCHOL REV, V22, P123, DOI 10.1007/s10648-010-9128-5
   Tabachnick B.G., 2012, Using multivariate statistics, V6th
   Thum T., 2011, P 15 INT SOFTW PROD
   Trinidad P., 2008, P 2008 SOFTW PROD LI
   Turetken O., 2016, P 2016 INT C BUS PRO
   WAND Y, 1995, INFORM SYST J, V5, P203, DOI 10.1111/j.1365-2575.1995.tb00108.x
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   Wand Y, 1993, INFORM SYST J, V3, P217, DOI 10.1111/j.1365-2575.1993.tb00127.x
   Zugal S, 2015, SOFTW SYST MODEL, V14, P1081, DOI 10.1007/s10270-013-0356-2
NR 77
TC 7
Z9 7
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 81
EP 102
DI 10.1016/j.infsof.2017.01.012
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EV2QD
UT WOS:000401599300006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ahmed, BS
   Gambardella, LM
   Afzal, W
   Zamli, KZ
AF Ahmed, Bestoun S.
   Gambardella, Luca M.
   Afzal, Wasif
   Zamli, Kamal Z.
TI Handling constraints in combinatorial interaction testing in the
   presence of multi objective particle swarm and multithreading
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Constrained combinatorial interaction; Multi-objective particle swarm
   optimisation; Test generation tools; Search-based software engineering;
   Test case design techniques
ID CONSTRUCTING COVERING ARRAYS; INTERACTION TEST SUITES; OPTIMIZATION;
   STRENGTH; ALGORITHMS; GENERATION; STRATEGY; SEARCH; UNIFORM; BOUNDS
AB Context: Combinatorial testing strategies have lately received a lot of attention as a result of their diverse applications. In its simple form, a combinatorial strategy can reduce several input parameters (configurations) of a system into a small set based on their interaction (or combination). In practice, the input configurations of software systems are subjected to constraints, especially in case of highly configurable systems. To implement this feature within a strategy, many difficulties arise for construction. While there are many combinatorial interaction testing strategies nowadays, few of them support constraints.
   Objective: This paper presents a new strategy, to construct combinatorial interaction test suites in the presence of constraints.
   Method: The design and algorithms are provided in detail. To overcome the multi-judgement criteria for an optimal solution, the multi-objective particle swarm optimisation and multithreading are used. The strategy and its associated algorithms are evaluated extensively using different benchmarks and comparisons.
   Results: Our results are promising as the evaluation results showed the efficiency and performance of each algorithm in the strategy. The benchmarking results also showed that the strategy can generate constrained test suites efficiently as compared to state-of-the-art strategies.
   Conclusion: The proposed strategy can form a new way for constructing of constrained combinatorial interaction test suites. The strategy can form a new and effective base for future implementations. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Ahmed, Bestoun S.; Gambardella, Luca M.] Ist Dalle Molle Studi sullIntelligenza Artificial, CH-6928 Manno Lugano, Switzerland.
   [Ahmed, Bestoun S.] Czech Tech Univ, Fac Elect Engn, Dept Comp Sci, Karlovo Nam 13, Prague 12135 2, Czech Republic.
   [Afzal, Wasif] Mlardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Zamli, Kamal Z.] Univ Malaysia Pahang, Fac Comp Syst & Software Engn, Gambang, Malaysia.
C3 Universita della Svizzera Italiana; Czech Technical University Prague;
   Universiti Malaysia Pahang Al-Sultan Abdullah (UMPSA)
RP Ahmed, BS (corresponding author), Ist Dalle Molle Studi sullIntelligenza Artificial, CH-6928 Manno Lugano, Switzerland.; Ahmed, BS (corresponding author), Czech Tech Univ, Fac Elect Engn, Dept Comp Sci, Karlovo Nam 13, Prague 12135 2, Czech Republic.
EM albeybes@fel.cvut.cz; luca@idsia.ch; wasif.afzal@mdh.se;
   kamalz@ump.edu.my
RI Zamli, Kamal Z./F-6437-2010; Ahmed, Bestoun S./B-4429-2010
OI Zamli, Kamal Z./0000-0003-4626-0513; Ahmed, Bestoun
   S./0000-0001-9051-7609
FU Ministry of Science, Technology, and Innovation (MOSTI), Malaysia
   [RDU14050]; IDSIA institute; Swiss Excellence Scholarship; Knowledge
   Foundation (KKS) [20130085]
FX The first author of the paper would like to thank IDSIA institute and
   Swiss Excellence Scholarship for hosting and supporting this research.
   Kamal Z. Zamli is funded by the Science Fund Grant RDU140503-
   Constraints t-way Testing Strategy with Modified Condition Decision
   Coverage from the Ministry of Science, Technology, and Innovation
   (MOSTI), Malaysia. Wasif Afzal is funded by The Knowledge Foundation
   (KKS) through the project 20130085: Testing of Critical System
   Characteristics (TOCSYC).
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahmed BS, 2016, ENG SCI TECHNOL, V19, P737, DOI 10.1016/j.jestch.2015.11.006
   Ahmed BS, 2015, INFORM SOFTWARE TECH, V66, P13, DOI 10.1016/j.infsof.2015.05.005
   Ahmed BS, 2012, APPL SOFT COMPUT, V12, P1330, DOI 10.1016/j.asoc.2011.11.029
   Ahmed BS, 2012, INT J INNOV COMPUT I, V8, P431
   Ahmed BS, 2011, J SYST SOFTWARE, V84, P2171, DOI 10.1016/j.jss.2011.06.004
   AlRashidi MR, 2009, IEEE T EVOLUT COMPUT, V13, P913, DOI 10.1109/TEVC.2006.880326
   [Anonymous], 2006, Evolutionary Algorithms for Solving Multi-Objective Problems (Genetic and Evolutionary Computation)
   [Anonymous], P 16 INT SOFTW PROD
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   BRYCE RC, 2005, CHI 05, P1108
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Chen X, 2009, ASIA PAC SOFWR ENG, P160, DOI 10.1109/APSEC.2009.18
   Clerc M, 2002, IEEE T EVOLUT COMPUT, V6, P58, DOI 10.1109/4235.985692
   Coello CAC, 2002, COMPUT METHOD APPL M, V191, P1245, DOI 10.1016/S0045-7825(01)00323-1
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen M. B., 2006, Software Engineering Notes, V31, P1, DOI [DOI 10.1145/1218776.1218785, 10.1145/1218776.1218785]
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2008, DISCRETE MATH, V308, P2709, DOI 10.1016/j.disc.2006.06.036
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colbourn CJ, 2010, DISCRETE APPL MATH, V158, P1158, DOI 10.1016/j.dam.2010.03.008
   Deb K., 2014, MULTIOBJECTIVE OPTIM, DOI [10.1007/0-387-28356-0_10, DOI 10.1007/0-387-28356-0_10]
   FEDERER WT, 1986, J COMB THEORY A, V43, P149, DOI 10.1016/0097-3165(86)90057-9
   Forbes M, 2008, J RES NATL INST STAN, V113, P287, DOI 10.6028/jres.113.022
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Garvinl B.J., 2016, COMBINATIONAL INTERA
   GCC, 2016, FREE SOFTW FDN GNU 4
   Gonzalez-Hernandez L, 2015, INFORM SOFTWARE TECH, V59, P17, DOI 10.1016/j.infsof.2014.10.009
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Hartman A., SOFTWARE HARDWARE TE, P237, DOI [10.1007/0-387-25036-0_10, DOI 10.1007/0-387-25036-0_10]
   Hervieu A, 2016, INFORM SOFTWARE TECH, V71, P129, DOI 10.1016/j.infsof.2015.11.007
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Kacker RN, 2013, MEASUREMENT, V46, P3745, DOI 10.1016/j.measurement.2013.02.021
   Khalsa SK, 2014, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2014.15
   Kim C.H. P., 2011, Proceedings of the Tenth International Conference on Aspect-oriented Software Development, P57
   Kuhn R, 2009, COMPUTER, V42, P94, DOI 10.1109/MC.2009.253
   Kuliamin VV, 2011, PROGRAM COMPUT SOFT+, V37, P121, DOI 10.1134/S0361768811030029
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lopez-Herrejon R. E., 2001, Generative and Component-Based Software Engineering. Third International Conference, GCSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2186), P10
   Lopez-Herrejon R. E., 2015, 8 IEEE INT C SOFTW T, P1, DOI DOI 10.1109/ICSTW.2015.7107435
   Mahmoud T, 2015, EXPERT SYST APPL, V42, P8753, DOI 10.1016/j.eswa.2015.07.029
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Petke J, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P17, DOI 10.1109/SBST.2015.11
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Richard Kuhn D., 2013, Introduction to combinatorial testing
   Sahib MA, 2014, J CONTROL SCI ENG, V2014, DOI 10.1155/2014/576868
   Sahib MA, 2016, J ADV RES, V7, P125, DOI 10.1016/j.jare.2015.03.004
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Sloane N.J. A., 1993, J COMBIN DES, V1, P51, DOI [DOI 10.1002/JCD.3180010106, 10.1002/jcd.3180010106]
   Tripathi PK, 2007, INFORM SCIENCES, V177, P5033, DOI 10.1016/j.ins.2007.06.018
   Weiss M, 2011, TECHNOL INNOV MANAG, P13
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Yu L., 2015, P INT C WIR COMM SIG, P1
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Zhang YJ, 2016, OPT COMMUN, V376, P56, DOI 10.1016/j.optcom.2016.04.049
   Zhong H., COMKORAT TOOL UNIFIE, P107, DOI [10.1007/978-3-319-40648-0_9, DOI 10.1007/978-3-319-40648-0_9.]
NR 62
TC 29
Z9 29
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2017
VL 86
BP 20
EP 36
DI 10.1016/j.infsof.2017.02.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9DB
UT WOS:000399855200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ståhl, D
   Bosch, J
AF Stahl, Daniel
   Bosch, Jan
TI Cinders: The continuous integration and delivery architecture framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cinders; Software integration; Software testing; Continuous integration;
   Continuous delivery; Architecture framework
ID SCIENCE; DESIGN
AB Context: The popular agile practices of continuous integration and delivery have become an essential part of the software development process in many companies, yet effective methods and tools to support design, description and communication of continuous integration and delivery systems are lacking.
   Objective: The work reported on in this paper addresses that lack by presenting Cinders an architecture framework designed specifically to meet the needs of such systems, influenced both by prominent enterprise and software architecture frameworks as well as experiences from continuous integration and delivery modeling in industry.
   Method: The state of the art for systematic design and description of continuous integration and delivery systems is established through review of literature, whereupon a proposal for an architecture framework addressing requirements derived from continuous integration and delivery modeling experiences is proposed. This framework is subsequently evaluated through interviews and workshops with engineers in varying roles in three independent companies.
   Results: Cinders, an architecture framework designed specifically for the purpose of describing continuous integration and delivery systems is proposed and confirmed to constitute an improvement over previous methods. This work presents software professionals with a demonstrably effective method for describing their continuous integration and delivery systems from multiple points of view and supporting multiple use-cases, including system design, communication and documentation.
   Conclusion: It is concluded that an architecture framework for the continuous integration and delivery domain has value; at the same time potential for further improvement is identified, particularly in the area of tool support for data collection as well as foi. manual modeling. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Stahl, Daniel] Ericsson AB, Datalinjen 3, S-58112 Linkoping, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Gothenburg, Sweden.
C3 Ericsson; Chalmers University of Technology
RP Ståhl, D (corresponding author), Ericsson AB, Datalinjen 3, S-58112 Linkoping, Sweden.
EM daniel.stahl@ericsson.com; jan@janbosch.com
CR [Anonymous], LIC SAF CRIT SOFTW N
   [Anonymous], IND APPL CONTINUOUS
   [Anonymous], 2013, OPEN GROUP SERIES
   [Anonymous], 42010 ISOIECIEE
   [Anonymous], 1979, QUASIEXPERIMENTATION
   [Anonymous], METRICS MODELS SOFTW
   [Anonymous], ACHIEVING TRAC UNPUB
   [Anonymous], ARCHIMATE
   [Anonymous], TL9000 QUAL MAN SYST
   [Anonymous], ECSSE40C
   Beaumont O, 2012, IEEE SYM PARA DISTR, P91, DOI 10.1109/IPDPSW.2012.7
   Beck K., 2000, EXTREME PROGRAMMING
   Brown S., 2013, SOFTWARE ARCHITECTUR
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Eun Ha Kim, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P534, DOI 10.1109/COMPSAC.2009.188
   Fowler M., 2006, Continuous integration
   Fowler M., 2013, Continuous Delivery
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoffman B., 2009, Proceedings of the 2009 DoD High Performance Computing Modernization Program Users Group Conference (HPCMP-UGC 2009), P378, DOI 10.1109/HPCMP-UGC.2009.62
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Klepper S, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P5, DOI 10.1109/RCoSE.2015.9
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krusche S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P335, DOI 10.1145/2591062.2591163
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Nilsson Agneta., 2014, Agile Processes in Software Engineering and Extreme Programming, volume 179 of Lecture Notes in Business Information Processing, V179, P171
   Radio Technical Commission for Aeronautics, 2011, DO178C RAD TECHN COM
   Remencius T, 2009, LECT NOTES BUS INF P, V31, P255
   Roberts M, 2004, LECT NOTES COMPUT SC, V3092, P194
   Robson C., 2011, REAL WORLD RES RESOU
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Rouille Emmanuelle, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P90, DOI 10.1109/SEAA.2013.50
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ståhl D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P54, DOI 10.1145/2591062.2591186
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Stahl Daniel, 2013, P 2013 12 IASTED INT, P736
   Urbaczewski L., 2006, Issues Inf Syst, V7, P18, DOI [DOI 10.48009/2IIS, DOI 10.48009/2IIS200618-23]
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Yüksel HM, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P741
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 42
TC 9
Z9 12
U1 1
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2017
VL 83
BP 76
EP 93
DI 10.1016/j.infsof.2016.11.006
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1YO
UT WOS:000393006700005
DA 2024-07-18
ER

PT J
AU Deng, L
   Offutt, J
   Ammann, P
   Mirzaei, N
AF Deng, Lin
   Offutt, Jeff
   Ammann, Paul
   Mirzaei, Nariman
TI Mutation operators for testing Android apps
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android; Software testing; Mutation testing
AB Context: Due to the widespread use of Android devices, Android applications (apps) have more releases, purchases, and downloads than apps for any other mobile devices. The sheer volume of code in these apps creates significant concerns about the quality of the software. However, testing Android apps is different from testing traditional Java programs due to the unique program structure and new features of apps. Simple testing coverage criteria such as statement coverage are insufficient to assure high quality of Android apps. While researchers show significant interest in finding better Android testing approaches, there is still a lack of effective and usable techniques to evaluate their proposed test selection strategies, and to ensure a reasonable number of effective tests.
   Objective: As mutation analysis has been found to be an effective way to design tests in other software domains, we hypothesize that it is also a viable solution for Android apps.
   Method: This paper proposes an innovative mutation analysis approach that is specific for Android apps. We define mutation operators specific to the characteristics of Android apps, such as the extensive use of XML files to specify layout and behavior, the inherent event-driven nature, and the unique Activity lifecycle structure. We also report on an empirical study to evaluate these mutation operators.
   Results: We have built a tool that uses the novel Android mutation operators to mutate the source code of Android apps, then generates mutants that can be installed and run on Android devices. We evaluated the effectiveness of Android mutation testing through an empirical study on real-world apps. This paper introduces several novel mutation operators based on a fault study of Android apps, presents a significant empirical study with real-world apps, and provides conclusions based on an analysis of the results.
   Conclusion: The results show that the novel Android mutation operators provide comprehensive testing for Android apps. Additionally, as applying mutation testing to Android apps is still at a preliminary stage, we identify challenges, possibilities, and future research directions to make mutation analysis for mobile apps more effective and efficient. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Deng, Lin; Offutt, Jeff; Ammann, Paul; Mirzaei, Nariman] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 George Mason University
RP Deng, L (corresponding author), George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
EM ldeng2@gmu.edu; offutt@gmu.edu; pammann@gmu.edu; nmirzaei@gmu.edu
RI Deng, Lin/S-1510-2018
OI Deng, Lin/0000-0003-0588-643X
FU Knowledge Foundation (KKS), Testing of Critical System Characteristics
   (TOCSYC) [20130085]
FX Offutt is partially funded by The Knowledge Foundation (KKS) through
   project 20130085, Testing of Critical System Characteristics (TOCSYC).
CR Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Ammann Paul, 2008, Introduction to software testing, V1st
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], 3 WORKSH MUT ANAL
   [Anonymous], 6 IEEE INT C SOFTW T
   [Anonymous], 2015, SATISFACTION BEHAV P
   [Anonymous], SERCTR41P PURD U SOF
   [Anonymous], 2000, PM 2 TEC 2000 2000 I
   [Anonymous], GARTN SAYS SAL SMART
   [Anonymous], FSE 14
   [Anonymous], P 8 INT C FORM DESCR
   [Anonymous], 6 WORKSH MUT AN IEEE
   [Anonymous], 2015, P IEEE INT ULTR S IU
   [Anonymous], P OBJ DAYS
   [Anonymous], P 16 INT S SOFTW REL
   [Anonymous], P 2 INT WORKSH MOD B
   [Anonymous], 7 IEEE INT C SOFTW T
   [Anonymous], 7 IEEE INT C SOFTW T
   [Anonymous], 3 WORKSH MUT ANAL
   [Anonymous], ISSETR9609 GEORG MAS
   [Anonymous], 95115 CELMS DEP COMP
   Arlt S, 2014, LECT NOTES COMPUT SC, V8430, P313, DOI 10.1007/978-3-319-06200-6_27
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Bottaci Leonardo, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P126, DOI 10.1109/ICSTW.2010.56
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Darwin Ian., 2012, Android Cookbook
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   Delamaro ME, 2013, SOFTW TEST VERIF REL, V23, P171, DOI 10.1002/stvr.463
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Deng L, 2015, IEEE INT CONF MOB, P19, DOI 10.1109/MASS.2015.25
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   Kapfhammer GM, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P31, DOI 10.1109/ICST.2013.47
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Korel B., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P311, DOI 10.1109/ICSM.1990.131379
   Lee SC, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P200, DOI 10.1109/ISSRE.2001.989474
   Lemos O.A. L., 2006, P 2 WORKSHOP TESTING, P33
   Lin YD, 2014, IEEE T SOFTWARE ENG, V40, P957, DOI 10.1109/TSE.2014.2331982
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P22, DOI 10.1109/IWAST.2012.6228986
   Mirshokraie S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P74, DOI 10.1109/ICST.2013.23
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Offutt J, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2001.989461
   Offutt J., 2000, Proc. Mutat. 2000 Mutat. Test. Twent. Twenty First Centuries, P45
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Takala T., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P377, DOI 10.1109/ICST.2011.11
   van der Merwe H., 2014, SIGSOFT Softw. Eng. Notes, V39, P1
   van der Merwe H, 2012, SIGSOFT SOFTW ENG NO, V37, P1, DOI DOI 10.1145/2382756.2382797
   Wong W.E., 1994, P 8 BRAZ S SOFTW ENG, P439
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
NR 63
TC 49
Z9 53
U1 0
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 154
EP 168
DI 10.1016/j.infsof.2016.04.012
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200011
DA 2024-07-18
ER

PT J
AU Garousi, V
   Mäntylä, MV
AF Garousi, Vahid
   Mantyla, Mika V.
TI A systematic literature review of literature reviews in software testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Secondary studies; Tertiary study; Software testing; Systematic mapping;
   Systematic literature reviews; Surveys
ID CITED ARTICLES; QUALITY; COST
AB Context: Any newcomer or industrial practitioner is likely to experience difficulties in digesting large volumes of knowledge in software testing. In an ideal world, all knowledge used in industry, education and research should be based on high-quality evidence. Since no decision should be made based on a single study, secondary studies become essential in presenting the evidence. According to our search, over 101 secondary studies have been published in the area of software testing since 1994. With this high number of secondary studies, it is important to conduct a review in this area to provide an overview of the research landscape in this area.
   Objective: The goal of this study is to systematically map (classify) the secondary studies in software testing. We propose that tertiary studies can serve as summarizing indexes which facilitate finding the most relevant information from secondary studies and thus supporting evidence-based decision making in any given area of software engineering. Our research questions (RQs) investigate: (1) Software-testing specific areas, (2) Types of RQs investigated, (3) Numbers and Trends, and (4) Citations of the secondary studies.
   Method: To conduct the tertiary study, we use the systematic-mapping approach. Additionally, we contrast the testing topics to the number of Google hits to address a general popularity of a testing topic and study the most popular papers in terms of citations. We furthermore demonstrate the practicality and usefulness of our results by mapping them to ISTQB foundation syllabus and to SWEBOK to provide implications for practitioners, testing educators, and researchers.
   Results: After a systematic search and voting process, our study pool included 101 secondary studies in the area of software testing between 1994 and 2015. Among our results are the following: (1) In terms of number of secondary studies, model-based approach is the most popular testing method, web services are the most popular system under test (SUT), while regression testing is the most popular testing phase; (2) The quality of secondary studies, as measured by a criteria set established in the community, is slowly increasing as the years go by; and (3) Analysis of research questions, raised and studied in the pool of secondary studies, showed that there is a lack of 'causality' and 'relationship' type of research questions, a situation which needs to be improved if we, as a community, want to advance as a scientific field. (4) Among secondary studies, we found that regular surveys receive significantly more citations than SMs (p = 0.009) and SLRs (p = 0.014).
   Conclusion: Despite the large number of secondary studies, we found that many important areas of software testing currently lack secondary studies, e.g., test management, role of product risk in testing, human factors in software testing, beta-testing (A/B-testing), exploratory testing,. testability, test stopping criteria, and test-environment development. Having secondary studies in those areas is important for satisfying industrial and educational needs in software testing. On the other hand, education material of ISTQB foundation syllabus and SWEBOK could benefit from the inclusion of the latest research topics, namely search-based testing, use of cloud-computing for testing and symbolic execution. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Garousi, Vahid] Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.
   [Garousi, Vahid] Maral Software Engn Consulting Corp, Calgary, AB, Canada.
   [Mantyla, Mika V.] Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
C3 Hacettepe University; University of Oulu
RP Garousi, V (corresponding author), Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.
EM vgarousi@gmail.com; mika.mantyla@oulu.fi
RI Mäntylä, Mika V/E-7644-2012
OI Mantyla, Mika/0000-0002-2841-5879; Garousi, Vahid/0000-0001-6590-7576
FU Hacettepe University; Scientific and Technological Research Council of
   Turkey (TUBITAK) [115E805]
FX Vahid Garousi was partially supported by several internal grants by
   Hacettepe University and the Scientific and Technological Research
   Council of Turkey (TUBITAK) via grant #115E805.
CR Afzal Wasif, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P488
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Aksnes DW, 2003, RES EVALUAT, V12, P159, DOI 10.3152/147154403781776645
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], GRAD SOFTW ENG 2009
   Antonakis J, 2014, LEADERSHIP QUART, V25, P152, DOI 10.1016/j.leaqua.2013.10.014
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Basili V. R., 1992, Technical Report
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Binder R.V., 1996, P TOOLS 23 TECHN OBJ, P374
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Bozkurt M., 2010, Testing Web Services: A Survey
   Budgen D., 2008, EIVDENCE BASED SOFTW
   Cavalcanti YC, 2014, J SOFTW-EVOL PROC, V26, P620, DOI 10.1002/smr.1639
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   Endo A.T., 2010, BRAZ WORKSH SYST AUT, P89
   Farhoodi R, 2013, INT J SOFTW ENG KNOW, V23, P463, DOI 10.1142/S0218194013500137
   Febrero F, 2014, INFORM SOFTWARE TECH, V56, P839, DOI 10.1016/j.infsof.2014.03.006
   Feinbube L., 2016, The landscape of software failure cause models
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Garousi V., 2013, PROGR INNOVATIONS MO
   Garousi V., ONLINE PAPER REPOSIT
   Garousi V., BIBLIO DETAILS REPOS
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V71, P108, DOI 10.1016/j.infsof.2015.11.003
   Garousi V, 2015, SCIENTOMETRICS, V105, P23, DOI 10.1007/s11192-015-1663-x
   Garousi V, 2013, INT J SOFTW ENG KNOW, V23, P1343, DOI 10.1142/S0218194013500423
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garousi V, 2012, SOFTW SYST MODEL, V11, P273, DOI 10.1007/s10270-011-0189-9
   Grindal M., 2005, SOFTW TEST VERIFICAT, V15
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Haugset B, 2008, AGILE 2008, PROCEEDINGS, P27, DOI 10.1109/Agile.2008.82
   HP Capgemini, WORLD QUAL REP 2014
   Imtiaz S., 2013, P INT C EV ASS SOFTW
   ISTQB (International Software Testing Qualifications Board), 2016, ISTQB WORLDW SOFTW T
   ISTQB (International Software Testing Qualifications Board), 2011, CERT TEST FDN LEV SY
   ISTQB (International Software Testing Qualifications Board), 2016, ISTQB PORTF
   Jill J., 2011, DOING YOUR LIT REV T
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P161, DOI 10.1109/ISESE.2002.1166935
   Karg LM, 2011, J SYST SOFTWARE, V84, P415, DOI 10.1016/j.jss.2010.11.904
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B., 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - ICSE '10, V1, P589, DOI DOI 10.1145/1806799.1806887
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kumar R., 2012, INT J ADV RES COMPUT, V2, P420
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Lai R, 2002, J SYST SOFTWARE, V62, P21, DOI 10.1016/S0164-1212(01)00132-7
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lo D., 2015, P 2015 10 JOINT M FD
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Nagpurkar S., 2013, INT J ADV RES TECHNO, V2
   Niazi M, 2015, ARAB J SCI ENG, V40, P845, DOI 10.1007/s13369-015-1586-0
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Sharma Abhishek, 2012, 2012 IEEE Eighth World Congress on Services, P346, DOI 10.1109/SERVICES.2012.21
   Silva F.Q.B.d., 2010, P ACM IEEE INT S EMP
   Singh PK, 2013, IEEE INT ADV COMPUT, P1455
   Singh Y., 2012, INFORMATICA, V36
   Strate JD, 2013, IEEE T RELIAB, V62, P444, DOI 10.1109/TR.2013.2259204
   Van Noorden R, 2014, NATURE, V514, P550, DOI 10.1038/514550a
   Vanhanen J, 2013, INT J SOFTW ENG KNOW, V23, P1221, DOI 10.1142/S0218194013500381
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2008, INFORM SOFTWARE TECH, V50, P3, DOI 10.1016/j.infsof.2007.10.002
   Wohlin C, 2009, INFORM SOFTWARE TECH, V51, P2, DOI 10.1016/j.infsof.2008.09.012
   Yusifoglu V.G., 2014, J INF SOFTW TECHNOL, V58, P123
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 82
TC 74
Z9 83
U1 4
U2 92
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 195
EP 216
DI 10.1016/j.infsof.2016.09.002
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800012
DA 2024-07-18
ER

PT J
AU Mouzarani, M
   Sadeghiyan, B
AF Mouzarani, Maryam
   Sadeghiyan, Babak
TI Towards designing an extendable vulnerability detection method for
   executable codes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software vulnerability; Executable codes; General specification;
   Extendable method
AB Context: Software vulnerabilities allow the attackers to harm the computer systems. Timely detection and removal of vulnerabilities help to improve the security of computer systems and avoid the losses from exploiting the vulnerabilities.
   Objective: Various methods have been proposed to detect the vulnerabilities in the past decades. However, most of these methods are suggested for detecting one or a limited number of vulnerability classes and require fundamental changes to be able to detect other vulnerabilities. In this paper, we present a first step towards designing an extendable vulnerability detection method that is independent from the characteristics of specific vulnerabilities.
   Method: To do so, we first propose a general model for specifying software vulnerabilities. Based on this model, a general specification method and an extendable algorithm is then presented for detecting the specified vulnerabilities in executable codes.
   As the first step, single-instruction vulnerabilities-the vulnerabilities that appear in one instruction are specified and detected. We present a formal definition for single-instruction vulnerabilities. In our method, detection of the specified vulnerabilities is considered as solving a satisfaction problem. The suggested method is implemented as a plug-in for Valgrind binary instrumentation framework and the vulnerabilities are specified by the use of Valgrind intermediate language, called Vex.
   Results: Three classes of single-instruction vulnerabilities are specified in this paper, i.e. division by zero, integer bugs and NULL pointer dereference. The experiments demonstrate that the presented specification for these vulnerabilities are accurate and the implemented method can detect all the specified vulnerabilities.
   Conclusion: As we employ a general model for specifying the vulnerabilities and the structure of our vulnerability detection method does not depend on a specific vulnerability, our method can be extended to detect other specified vulnerabilities. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Mouzarani, Maryam; Sadeghiyan, Babak] Amirkabir Univ Technol, Tehran Polytech, Tehran, Iran.
C3 Amirkabir University of Technology
RP Sadeghiyan, B (corresponding author), Amirkabir Univ Technol, Tehran Polytech, Tehran, Iran.
EM basadegh@aut.ac.ir
FU APA Research Center of Amirkabir University of Technology (Tehran
   Polytechnic)
FX This work is supported in part by APA Research Center of Amirkabir
   University of Technology (Tehran Polytechnic).
CR Almorsy M, 2012, IEEE INT CONF AUTOM, P100, DOI 10.1145/2351676.2351691
   [Anonymous], FUZZGRIND AUTOMATIC
   [Anonymous], 2012, ACM QUEUE, DOI DOI 10.1145/2090147.2094081
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Balakrishnan G, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1749608.1749612
   Balzarotti D, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P25
   Byers D, 2006, PROC IEEE INT CONF S, P411
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Chen T, 2013, FUTURE GENER COMP SY, V29, P1758, DOI 10.1016/j.future.2012.02.006
   Chipounov V., 2012, S2E: A platform for in-vivo multi-path analysis of software systems, V47
   Ciortea Liviu, 2009, Operating Systems Review, V43, P5, DOI 10.1145/1713254.1713257
   developers V., 2014, VALGRIND USER MANUAL
   Dor N, 2003, ACM SIGPLAN NOTICES, V38, P155, DOI 10.1145/780822.781149
   Ganapathy V., 2003, ACM C COMPUTER COMMU, P345
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gu Q, 2009, COMM COM INF SC, V51, P461, DOI 10.1007/978-3-642-04962-0_53
   Haller Istvan, 2013, P 22 USENIX SEC S, P49, DOI DOI 10.5555/2534766.2534772
   Hooimeijer P., 2011, P 20 USENIX C SEC
   Lam MS, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P3, DOI 10.1145/1328408.1328410
   Livshits Benjamin, 2006, THESIS
   Mallouli W., 2011, J INTERNET SERV INF, V1, P4
   MITRE, 2014, COMM WEAKN EN
   MITRE, 2014, COMM VULN EXP
   MITRE-CWE, 2014, CWE476 MITRECWE
   MITRE-CWE, 2014, CWE190 MITRECWE
   MITRE-CWE, 2014, CWE369 MITRECWE
   MITRE-CWE, 2014, CWE681 MITRECWE
   MITRE-CWE, 2014, CWE191 MITRECWE
   Molnar David, 2009, P 18 C USENIX SEC S, V9, P67
   Mouzarani M., 2015, PRDC, P42
   Mouzarani M, 2016, IET SOFTW, V10, P96, DOI 10.1049/iet-sen.2015.0039
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Shankar U, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P201
   Sotirov A.I., 2005, THESIS
   Tevis J.-E.J., 2006, Proceedings of the 44th annual southeast regional conference on - ACM-SE, V44, P560
   Vajk T., 2008, ELECT COMMUN EASST, V15
   Wagner D., 2000, NDSS, P2000
   Yang Junfeng., 2003, CCS 03, P321
NR 39
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 231
EP 244
DI 10.1016/j.infsof.2016.09.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800014
DA 2024-07-18
ER

PT J
AU Maté, A
   Trujillo, J
   García, F
   Serrano, M
   Piattini, M
AF Mate, Alejandro
   Trujillo, Juan
   Garcia, Felix
   Serrano, Manuel
   Piattini, Mario
TI Empowering global software development with business intelligence
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Business intelligence; Kpis
ID MANAGEMENT
AB Context: Global Software Development (GSD) allows companies to take advantage of talent spread across the world. Most research has been focused on the development aspect. However, little if any attention has been paid to the management of GSD projects. Studies report a lack of adequate support for management's decisions made during software development, further accentuated in GSD since information is scattered throughout multiple factories, stored in different formats and standards.
   Objective: This paper aims to improve GSD management by proposing a systematic method for adapting Business Intelligence techniques to software development environments. This would enhance the visibility of the development process and enable software managers to make informed decisions regarding how to proceed with GSD projects.
   Method: A combination of formal goal-modeling frameworks and data modeling techniques is used to elicitate the most relevant aspects to be measured by managers in GSD. The process is described in detail and applied to a real case study throughout the paper. A discussion regarding the generalisability of the method is presented afterwards.
   Results: The application of the approach generates an adapted BI framework tailored to software development according to the requirements posed by GSD managers. The resulting framework is capable of presenting previously inaccessible data through common and specific views and enabling data navigation according to the organization of software factories and projects in GSD.
   Conclusions: We can conclude that the proposed systematic approach allows us to successfully adapt Business Intelligence techniques to enhance GSD management beyond the information provided by traditional tools. The resulting framework is able to integrate and present the information in a single place, thereby enabling easy comparisons across multiple projects and factories and providing support for informed decisions in GSD management. (c) 2016 Elsevier B.V. All rights reserved.
C1 [Mate, Alejandro; Trujillo, Juan] Univ Alicante, Dept Software & Comp Syst, Carretera San Vicente Raspeig S-N, Alicante 03690, Spain.
   [Garcia, Felix; Serrano, Manuel; Piattini, Mario] Univ Castilla La Mancha, Dept Comp Sci, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
C3 Universitat d'Alacant; Universidad de Castilla-La Mancha
RP Maté, A (corresponding author), Univ Alicante, Dept Software & Comp Syst, Carretera San Vicente Raspeig S-N, Alicante 03690, Spain.
EM amate@dlsi.ua.es; jtrujillo@dlsi.ua.es; Felix.Garcia@uclm.es;
   Manuel.Serrano@uclm.es; Mario.Piattini@uclm.es
RI Maté, Alejandro/AAG-7809-2021; Serrano, Manuel/N-8266-2013; Piattini,
   Mario/F-6271-2013; Maté, Alejandro/H-5963-2015; Trujillo,
   Juan/L-7079-2014; Garcia, Felix/D-4299-2011
OI Serrano, Manuel/0000-0003-0962-5659; Piattini,
   Mario/0000-0002-7212-8279; Maté, Alejandro/0000-0001-7770-3693;
   Trujillo, Juan/0000-0003-0139-6724; Garcia, Felix/0000-0001-6460-0353
FU Ministry of Economy and Competitiveness (MINECO) [TIN2012-37493-C03-03,
   TIN2012-37493-C03-01]; Fondo Europeo de Desarrollo Regional FEDER;
   SDGear - Ministerio de Industria, Energ y Turismo dentro del Plan
   Nacional de Investigacin Cientfica, Desarrollo e Innovacin Tecnolgica
   [TSI-100104-2014-4]; APOSTD grant from the Generalitat Valenciana
   [APOSTD/2014/064]
FX This work has partially funded by the GEODAS-BI (TIN2012-37493-C03-03)
   and GEODAS-BC (TIN2012-37493-C03-01) projects from the Ministry of
   Economy and Competitiveness (MINECO) and the Fondo Europeo de Desarrollo
   Regional FEDER, SDGear (TSI-100104-2014-4, ITEA 2-Call 7, co-funded by
   the Ministerio de Industria, Energ y Turismo dentro del Plan Nacional de
   Investigacin Cientfica, Desarrollo e Innovacin Tecnolgica 2013-2016, and
   the APOSTD grant (APOSTD/2014/064) from the Generalitat Valenciana.
CR Amyot D, 2003, COMPUT NETW, V42, P285, DOI 10.1016/S1389-1286(03)00244-5
   [Anonymous], 26 CAISE FOR
   [Anonymous], 2007 4 IEEE INT WORK
   [Anonymous], 2004, Strategy & leadership, DOI DOI 10.1016/J.BMC.2004.12.042
   [Anonymous], 2010, Performance dashboards: Measuring, monitoring, and managing your business
   [Anonymous], BUS MOT MOD BMM
   [Anonymous], PENT BUS AN
   Bird C, 2009, COMMUN ACM, V52, P85, DOI 10.1145/1536616.1536639
   Bititci US, 2005, INT J OPER PROD MAN, V25, P333, DOI 10.1108/01443570510585534
   Borici A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P5, DOI 10.1109/CHASE.2012.6223024
   Burkhard R., 2004, P P IKNOW GRAZ AUSTR, V4, P449
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Da Silva I., 2007, 1 WORKSH MEAS BAS CO, P14
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Dasgupta GB, 2013, LECT NOTES COMPUT SC, V8274, P131, DOI 10.1007/978-3-642-45005-1_10
   García F, 2015, IET SOFTW, V9, P51, DOI 10.1049/iet-sen.2013.0193
   Giorgini P, 2008, DECIS SUPPORT SYST, V45, P4, DOI 10.1016/j.dss.2006.12.001
   Golfarelli M, 1998, INT J COOP INF SYST, V7, P215, DOI 10.1142/S0218843098000118
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Horkoff J., 2012, Softw. Syst. Model., P1
   Johnson PM, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.95
   Kaplan RS, 2010, HARVARD BUS REV, V88, P114
   Kimball R., 2011, The Data Warehouse Toolkit: The Complete Guide to Dimensional Modeling
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Lin CY, 2009, PROC INT CONF DATA, P1483, DOI 10.1109/ICDE.2009.140
   Luján-Mora S, 2006, DATA KNOWL ENG, V59, P725, DOI 10.1016/j.datak.2005.11.004
   Margaret-Anne D.Storey., 2005, SOFTVIS, P193, DOI DOI 10.1145/1056018.1056045
   Mate A., 2012, Proceedings of the 2012 Conference of the Center for Advanced Studies on Collaborative Research, P102
   Mazón JN, 2007, LECT NOTES COMPUT SC, V4802, P255
   Monasor M.J, 2009, ADV SOFTW ENG, P1, DOI DOI 10.1155/2009/710971
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Parmenter D., 2010, Key performance indicators: Developing, implementing and using winning kpis
   Portillo-Rodríguez J, 2012, INFORM SOFTWARE TECH, V54, P663, DOI 10.1016/j.infsof.2012.02.006
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Richardson I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P35, DOI 10.1007/978-3-642-10294-3_2
   Rodriguez RR, 2009, COMPUT IND, V60, P104, DOI 10.1016/j.compind.2008.09.002
   Sapia C, 1999, LECT NOTES COMPUT SC, V1552, P105
   Sarma A, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P127, DOI 10.1109/ICGSE.2006.261225
   Sillitti A, 2003, EUROMICRO CONF PROC, P336
   Vassiliadis P., 2002, P 5 ACM INT WORKSH D, P14
   Vizcaíno A, 2013, INFORM SOFTWARE TECH, V55, P1200, DOI 10.1016/j.infsof.2013.01.003
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Ye E, 2009, PROC INT CONF SOFTW, P291, DOI 10.1109/ICSE-COMPANION.2009.5071004
   Yigitbasioglu Ogan M., 2012, International Journal of Accounting Information Systems, V13, P41, DOI 10.1016/j.accinf.2011.08.002
   Yu Eric., 2011, SOCIAL MODELING REQU, V11, P2011, DOI DOI 10.7551/MITPRESS/7549.003.0005
NR 47
TC 3
Z9 4
U1 0
U2 37
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2016
VL 76
BP 81
EP 91
DI 10.1016/j.infsof.2016.04.011
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO6VZ
UT WOS:000377922900005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gilal, AR
   Jaafar, J
   Omar, M
   Basri, S
   Waqas, A
AF Gilal, Abdul Rehman
   Jaafar, Jafreezal
   Omar, Mazni
   Basri, Shuib
   Waqas, Ahmad
TI A rule-based model for software development team composition: Team
   leader role with personality types and gender classification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Human aspects; Personality types; Myers-Briggs Type Indicator; Team
   leader; Gender; Software development; Team composition; Rule-based
ID PERFORMANCE; EDUCATION
AB Context: Recent studies have established the fact that the supply of handy and successful software has decreased to 6%. The past studies have also attributed this supply failure to software development team composition factor. To overcome this problem, it is also suggested in the past studies that the soft skills of team member must be considered along with the hard skills.
   Objective: Keeping in view this problem, this study aimed to look for in-depth understanding of team lead role with personality types of member. This study also included gender to see its diverting impact on personality types and job role, since past studies have also raised many issues pertinent to these two variables.
   Method: This study used the experimented data to develop the rule-based model for software development team composition by keeping gender as major effecting variable with personality. There were three independent predictor variables: Team leader role, Personality types, and Gender; and one outcome dependent variable: team performance. Additionally, personality types of team members were measured by using Myers Briggs Type Indicator(MBTI) instrument. This study divided the experiments into two stages. The first stage was descriptive examination of factual figures of data for model development. Whereas, the second stage was predictive experiments of data for developing the model.
   Results: The findings revealed that each gender emerged compatible with different types of personality for the same role. For instance, descriptive analysis part of this research highlighted that feeling(F) personality males were appropriate for team leader role, on another hand, thinking(T) personality females were suitable for the team lead role.
   Conclusion: The conclusion can be drawn with the claim that the personality types of software development team roles fluctuate by gender type. Besides, this study revealed and ensured that gender should be kept in the consideration when composing teams based on personality types. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Gilal, Abdul Rehman; Jaafar, Jafreezal; Basri, Shuib] Univ Teknol PETRONAS, Dept Comp & Informat Sci, Tronoh, Perak, Malaysia.
   [Gilal, Abdul Rehman; Waqas, Ahmad] Sukkur Inst Business Adm, Dept Comp Sci, Sukkur, Pakistan.
   [Omar, Mazni] Univ Utara Malaysia, Sch Comp, Kedah, Malaysia.
C3 Universiti Teknologi Petronas; Universiti Utara Malaysia
RP Gilal, AR (corresponding author), Univ Teknol PETRONAS, Dept Comp & Informat Sci, Tronoh, Perak, Malaysia.
EM a-rehman@iba-suk.edu.pk; jafreez@petronas.com.my; mazni@uum.edu.my;
   shuib_basri@petronas.com.my; ahmad.waqas@iba-suk.edu.pk
RI Waqas, Ahmad/H-5582-2018; Omar, Mazni/A-3392-2013; Gilal, Abdul
   Rehman/M-3039-2017
OI Waqas, Ahmad/0000-0003-3102-8391; Gilal, Abdul
   Rehman/0000-0002-1904-1588; Omar, Mazni/0000-0003-1816-2940
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   [Anonymous], J INF KNOWL MANAG SY
   [Anonymous], 2009, P 5 WORKSHOP EMOTION
   Bakar A.A., 2011, IEEE, P1
   Bell ST, 2007, J APPL PSYCHOL, V92, P595, DOI 10.1037/0021-9010.92.3.595
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   COSTA PT, 1986, CLIN PSYCHOL REV, V6, P407, DOI 10.1016/0272-7358(86)90029-2
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   da Silva FQB, 2013, INFORM SOFTWARE TECH, V55, P1316, DOI 10.1016/j.infsof.2012.11.006
   Dingsoyr T., 2012, TEAM EFFECTIVENESS S, V7465, P27
   en Hvidsten T.R., 1999, FAULT DIAGN ROT MACH
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Gilal AR, 2014, J INF COMMUN TECHNOL, V13, P1
   Gilal AR, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATIONS, AND CONTROL TECHNOLOGY (I4CT), P261, DOI 10.1109/I4CT.2014.6914186
   Gilal AR, 2015, LECT NOTES ELECT ENG
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Grzymala-Busse J. W., 1997, Fundamenta Informaticae, V31, P27
   Howard A, 2001, COMMUN ACM, V44, P23, DOI 10.1145/374308.374322
   Hsu CW, 2002, IEEE T NEURAL NETWOR, V13, P415, DOI 10.1109/72.991427
   Kankanhalli A, 2004, DECIS SUPPORT SYST, V38, P183, DOI 10.1016/s0167-9236(03)00101-5
   Koroutchev K, 2013, INT J HUM CAP INF TE, V4, P1, DOI 10.4018/jhcitp.2013010101
   Kumar S. A., 2011, COMPUTER SCI INFORM, V02, P335, DOI [DOI 10.5121/CSIT.2011.1230, 10.5121/csit.2011.1230]
   Mazni O., 2010, P INT C SCI SOC RES, P624
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Mead NR, 2009, J SYST SOFTWARE, V82, P571, DOI 10.1016/j.jss.2008.12.038
   Menon R, 2014, ACTA OBSTET GYN SCAN, V93, P382, DOI 10.1111/aogs.12344
   Omar M., 2012, THESIS U TEKNOLOGI M
   Omar M, 2012, PROC TECH, V1, P390, DOI 10.1016/j.protcy.2012.02.089
   Park SH, 2004, KOREAN J RADIOL, V5, P11, DOI 10.3348/kjr.2004.5.1.11
   Pittenger D.J., 2005, Consult. Psychol. J.: Pract. Res., V57, P210, DOI [DOI 10.1037/1065-9293.57.3.210, 10.1037/1065-9293.57.3.210]
   Rehman M., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P1115, DOI 10.1109/ICCISci.2012.6297193
   Rien Sach M.P., 2010, P 22 ANN PSYCH PROGR, P19
   Ruano-Mayoral M, 2010, INT J INF TECHNOL PR, V1, P42, DOI 10.4018/jitpm.2010100204
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Sarin S, 2003, DECISION SCI, V34, P707, DOI 10.1111/j.1540-5414.2003.02350.x
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Trauth E.M., 2006, ENCY GENDER INFORM T, P1154
   Valencia-García R, 2010, IET SOFTW, V4, P373, DOI 10.1049/iet-sen.2010.0043
   Varona D., 2012, EVOLUTION SOFTWARE E, V37, P2
   Whipkey K.L., 1984, IDENTIFYING PREDICAT, P36
   Wiesche M, 2014, SIGMIS-CPR'14: PROCEEDINGS OF THE 2014 CONFERENCE ON COMPUTERS AND PEOPLE RESEARCH, P149, DOI 10.1145/2599990.2600012
   Zarzu C., 2013, P MAN KNOWL LEARN IN, P1321
NR 45
TC 44
Z9 48
U1 0
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 105
EP 113
DI 10.1016/j.infsof.2016.02.007
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DJ7BX
UT WOS:000374368000007
DA 2024-07-18
ER

PT J
AU Knauss, A
   Damian, D
   Franch, X
   Rook, A
   Müller, HA
   Thomo, A
AF Knauss, Alessia
   Damian, Daniela
   Franch, Xavier
   Rook, Angela
   Mueller, Hausi A.
   Thomo, Alex
TI ACon: A learning-based approach to deal with uncertainty in contextual
   requirements at runtime
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Self-adaptive systems; Contextual
   requirements; Operationalization; Machine learning
AB Context Runtime uncertainty such as unpredictable operational environment and failure of sensors that gather environmental data is a well-known challenge for adaptive systems.
   Objective: To execute requirements that depend on context correctly, the system needs up-to-date knowledge about the context relevant to such requirements. Techniques to cope with uncertainty in contextual requirements are currently underrepresented. In this paper we present ACon (Adaptation of Contextual requirements), a data-mining approach to deal with runtime uncertainty affecting contextual requirements.
   Method: ACon uses feedback loops to maintain up-to-date knowledge about contextual requirements based on current context information in which contextual requirements are valid at runtime. Upon detecting that contextual requirements are affected by runtime uncertainty, ACon analyses and mines contextual data, to (re-)operationalize context and therefore update the information about contextual requirements.
   Results: We evaluate ACon in an empirical study of an activity scheduling system used by a crew of 4 rowers in a wild and unpredictable environment using a complex monitoring infrastructure. Our study focused on evaluating the data mining part of ACon and analysed the sensor data collected onboard from 46 sensors and 90,748 measurements per sensor.
   Conclusion: ACon is an important step in dealing with uncertainty affecting contextual requirements at runtime while considering end-user interaction. ACon supports systems in analysing the environment to adapt contextual requirements and complements existing requirements monitoring approaches by keeping the requirements monitoring specification up-to-date. Consequently, it avoids manual analysis that is usually costly in today's complex system environments. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Knauss, Alessia; Damian, Daniela; Rook, Angela; Mueller, Hausi A.; Thomo, Alex] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Franch, Xavier] Univ Politecn Cataluna, Software Engn Informat Syst Res Grp GESSI, Barcelona, Catalunya, Spain.
C3 University of Victoria; Universitat Politecnica de Catalunya
RP Knauss, A (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
EM alessiak@uvic.ca; danielad@cs.uvic.ca; franch@essi.upc.edu;
   arook@uvic.ca; hausi@cs.uvic.ca; thomo@cs.uvic.ca
RI Franch, Xavier/A-8588-2008
OI Thomo, Alex/0000-0002-3020-2258; Franch, Xavier/0000-0001-9733-8830;
   Muller, Hausi/0000-0002-1004-5830
FU Natural Sciences and Engineering Research Council of Canada, as part of
   the NECSIS Automotive; General Motors; IBM Canada; Malina Software
   Corp.; Spanish funded project EOSSAC [TIN2013-44641-P]
FX We are deeply indebted to the OAR Northwest members, J. Cummer, L.
   Pasquale, and the SEGAL research group members. Furthermore, we would
   like to express our gratitude to E. Zavala for her implementation of
   ACon based on the example of the automotive domain. This work is
   supported in part by the Natural Sciences and Engineering Research
   Council of Canada, as part of the NECSIS Automotive Partnership with
   General Motors, IBM Canada, and Malina Software Corp. This work was
   partially supported by the Spanish funded project EOSSAC,
   TIN2013-44641-P.
CR Ali  R., 2010, THESIS
   Ali R., 2011, P INT C EV NOV APPR, P28
   Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   Ali R, 2011, LECT NOTES BUS INF P, V81, P372
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Bhaskar NU, 2008, INT J COMPUT SCI NET, V8, P292
   Brill O, 2011, INT REQUIR ENG CONF, P175, DOI 10.1109/RE.2011.6051660
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Canavera K., 2012, P INT S FDN SOFTW EN, P1
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   Dameri R.P., 2014, SMART CITY PROGR IS
   ESFAHANI N, 2013, T SOFTW ENG, V39, P1467, DOI DOI 10.1109/TSE.2013.37
   Finkelstein A., 2001, INT WORKSH SOFTW REQ, P2
   Forman George, 2010, ACM SIGKDD Explorations Newsletter, DOI DOI 10.1145/1882471.1882479
   Franch X., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P458, DOI 10.1109/COMPSACW.2011.83
   Furnkranz J., 1994, INCREMENTAL REDUCED, P70, DOI DOI 10.1016/B978-1-55860-335-6.50017-9
   Gullapalli R., 2011, INT J COMPUT TRENDS, V2, P128
   I. Corporation, 2006, CISC VIS NETW IND GL
   I. Corporation, 2006, SYMPT REF SPEC
   Inverardi P., 2011, 2011 2nd International Workshop on Requirements@Run.Time (RE@RunTime), P1, DOI 10.1109/ReRunTime.2011.6046241
   Jacobs A, 2009, COMMUN ACM, V52, P36, DOI 10.1145/1536616.1536632
   Kent Martin J., 1996, International Symposium on Artificial Intelligence and Mathematics, P112
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Klein K.E., 1980, TECHNICAL REPORT
   Kotsiantis SB, 2007, INFORM-J COMPUT INFO, V31, P249
   Maalej W., 2011, Proceedings of the 2011 IEEE 9th International Conference on Dependable, Autonomic and Secure Computing (DASC 2011), P864, DOI 10.1109/DASC.2011.146
   Muller H, 2014, EVOLVING SOFTWARE SY, P229
   Oriol Marc, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P280, DOI 10.1007/978-3-642-28714-5_25
   Qureshi Nauman A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P108, DOI 10.1109/RE.2010.23
   QURESHI NA, 2009, INT WORKSH SOFTW ENG, P126
   Ramirez Andres J., 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P198, DOI 10.1007/978-3-642-33119-0_15
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   ROOK A, 2014, INT WORKSH ART INT R, P43
   Rook A., 2014, THESIS
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Samuels C, 2009, PHYS MED REH CLIN N, V20, P149, DOI 10.1016/j.pmr.2008.10.009
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Sculley D., 2014, WORKSH SOFTW ENG MAC
   Souza V. E. S., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P155, DOI 10.1109/SEAMS.2012.6224402
   Souza V. E. S., 2011, 2011 2nd International Workshop on Requirements@Run.Time (RE@RunTime), P9, DOI 10.1109/ReRunTime.2011.6046242
   Tan P. N., 2016, INTRO DATA MINING
   Welsh K., 2010, P INT WORK C REQ ENG, P2
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Zavala E, 2015, INT REQUIR ENG CONF, P278, DOI 10.1109/RE.2015.7320437
NR 46
TC 36
Z9 38
U1 0
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 85
EP 99
DI 10.1016/j.infsof.2015.10.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600007
OA Green Published
DA 2024-07-18
ER

PT J
AU Huang, RB
   Liu, H
   Xie, XD
   Chen, JF
AF Huang, Rubing
   Liu, Huai
   Xie, Xiaodong
   Chen, Jinfu
TI Enhancing mirror adaptive random testing through dynamic partitioning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Software testing; Random testing; Adaptive random testing; Mirror
   adaptive random testing
AB Context: Adaptive random testing (ART), originally proposed as an enhancement of random testing, is often criticized for the high computation overhead of many ART algorithms. Mirror ART (MART) is a novel approach that can be generally applied to improve the efficiency of various ART algorithms based on the combination of "divide-and-conquer" and "heuristic" strategies.
   Objective: The computation overhead of the existing MART methods is actually on the same order of magnitude as that of the original ART algorithms. In this paper, we aim to further decrease the order of computation overhead for MART.
   Method: We conjecture that the mirroring scheme in MART should be dynamic instead of static to deliver a higher efficiency. We thus propose a new approach, namely dynamic mirror ART (DMART), which incrementally partitions the input domain and adopts new mirror functions.
   Results: Our simulations demonstrate that the new DMART approach delivers comparable failure-detection effectiveness as the original MART and ART algorithms while having much lower computation overhead. The experimental studies further show that the new approach also delivers a better and more reliable performance on programs with failure-unrelated parameters.
   Conclusion: In general, DMART is much more cost-effective than MART. Since its mirroring scheme is independent of concrete ART algorithms, DMART can be generally applied to improve the cost-effectiveness of various ART algorithms. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Huang, Rubing; Chen, Jinfu] Jiangsu Univ, Sch Comp Sci & Telecommun Engn, Zhenjiang 212013, Jiangsu, Peoples R China.
   [Liu, Huai] RMIT Univ, Australia India Res Ctr Automat Software Engn, Melbourne, Vic 3001, Australia.
   [Xie, Xiaodong] Huaqiao Univ, Sch Comp Sci & Technol, Xiamen 361021, Fujian, Peoples R China.
C3 Jiangsu University; Royal Melbourne Institute of Technology (RMIT);
   Huaqiao University
RP Liu, H (corresponding author), RMIT Univ, Australia India Res Ctr Automat Software Engn, Melbourne, Vic 3001, Australia.
EM rbhuang@ujs.edu.cn; huai.liu@rmit.edu.au; xiaodongxie@hqu.edu.cn;
   jinfuchen@ujs.edu.cn
RI Liu, Huai/M-4871-2019; Huang, Rubing/R-7367-2019
OI Liu, Huai/0000-0003-3125-4399; Huang, Rubing/0000-0002-1769-6126
FU National Natural Science Foundation of China [61202110, 61103053];
   Natural Science Foundation of Jiangsu Province [BK2012284]; Senior
   Personnel Scientific Research Foundation of Jiangsu University
   [14JDG039]
FX This work is in part supported by the National Natural Science
   Foundation of China (Grant Nos. 61202110 and 61103053), the Natural
   Science Foundation of Jiangsu Province (Grant No. BK2012284), and the
   Senior Personnel Scientific Research Foundation of Jiangsu University
   (Grant No. 14JDG039).
CR ACM, 1980, COLL ALG ACM
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 1992, Numerical recipes in C: The Art of Scientific Computing
   Arcuri Andrea., 2011, ISSTA
   Barus A., NOVEL LINEAR ORDER A
   Bati H., 2007, P 33 INT C VER LARG, P1243
   Bishop P. G., 1993, P 23 INT S FAULT TOL, P98
   Bourque P.E., 2014, SWEBOK 3 0 GUIDE SOF
   Chan KP, 2006, P INT COMP SOFTW APP, P485
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen TY, 2007, INT J SOFTW ENG KNOW, V17, P805, DOI 10.1142/S0218194007003501
   Chen TY, 2011, J INF SCI ENG, V27, P1449
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P1001, DOI 10.1016/j.infsof.2004.07.004
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Chow C, 2013, INT CONF QUAL SOFTW, P268, DOI 10.1109/QSIC.2013.19
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   DeMillo R.A., 1978, IEEE COMPUT, V1, P31
   FINELLI GB, 1991, RELIAB ENG SYST SAFE, V32, P155, DOI 10.1016/0951-8320(91)90052-9
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Kuo FC, 2009, INT CONF QUAL SOFTW, P51, DOI 10.1109/QSIC.2009.15
   Lin Y, 2009, IEEE INT CONF AUTOM, P221, DOI 10.1109/ASE.2009.13
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   Mayer J., 2005, P 20 IEEEACM INT C A, P333, DOI DOI 10.1145/1101908
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Regehr J, 2005, P 5 ACM INT C EMB SO, P290
   Shahbazi A, 2013, IEEE T SOFTWARE ENG, V39, P163, DOI 10.1109/TSE.2012.18
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
NR 34
TC 26
Z9 28
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 13
EP 29
DI 10.1016/j.infsof.2015.06.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Estácio, BJD
   Prikladnicki, R
AF da Silva Estacio, Bernardo Jose
   Prikladnicki, Rafael
TI Distributed Pair Programming: A Systematic Literature Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Extreme Programming; Distributed Software Development; Pair Programming;
   Distributed Pair Programming
AB Context: Geographically distributed teams have adopted agile practices as a work strategy. One of these practices is Distributed Pair Programming (DPP). DPP consists in two developers working remotely on the same design, algorithm or code.
   Objective: In this paper we sought to identify and synthesize papers that describe and analyze DPP both from teaching and practice perspectives. Method: We conducted a Systematic Literature Review to search for empirical evidence in eight digital libraries.
   Results: Most of the 34 DPP primary studies identified explore DPP from a teaching perspective. We found that DPP requires a specific infrastructure, but the existing studies do not explore the impact of the distribution in the details. There are many tools proposed that support DPP practice, but few of them are evaluated within a software development team.
   Conclusion: We need more studies that explore the effects of Pair Programming in the context of Distributed Software Development, such as coordination and communication. Most of the studies do not empirically evaluate DPP in industry. There is also a need to propose guidelines to use DPP in industry and as a teaching strategy. (C) 2015 Elsevier B.V. All rights reserved.
C1 [da Silva Estacio, Bernardo Jose; Prikladnicki, Rafael] Pontiffcia Univ Catolica Rio Grande Sul PUCRS, Comp Sci Sch Fac Informat Facin, BR-90619900 Porto Alegre, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Estácio, BJD (corresponding author), Pontiffcia Univ Catolica Rio Grande Sul PUCRS, Comp Sci Sch Fac Informat Facin, 6681 Ipiranga Ave,Bldg 32, BR-90619900 Porto Alegre, RS, Brazil.
EM bernardoestacio@acad.pucrs.br; rafaelp@pucrs.br
OI Da Silva Estacio, Bernardo Jose/0000-0002-1985-9048
FU ThoughtWorks; PUCRS
FX This research is partially funded by the agreement between ThoughtWorks
   and PUCRS. We also thank CNPq Brazil (309000/2012-2).
CR [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], P 2010 ICSE WORKSH C
   [Anonymous], 2005, ACM SIGCSE B, DOI DOI 10.1145/1151954.1067532
   Baheti Prashant, 2002, EXTREME PROGRAMMING, V2002, P387
   Beck K., 2004, Extreme Programming Explained: Embrace Change, V2nd, P224
   Brereton P, 2009, CONF SOFTW ENG EDUC, P240, DOI 10.1109/CSEET.2009.11
   Canfora G, 2006, INT J SOFTW ENG KNOW, V16, P293, DOI 10.1142/S0218194006002756
   Canfora G, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P314
   Deshpande Sadhana, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P67, DOI 10.1109/ICGSE.2010.16
   DEWAN P, 2009, ICSE WORKSH COOP HUM, P48
   Dou W., 2009, 2009 INT C COMP INT
   Duque Rafael, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P270, DOI 10.1109/ICSEA.2008.82
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edwards R.L., 2010, ACM INROADS, V1, P48
   Hanks B., 2008, ACM J ED RESOUR COMP, V7
   Hanks B, 2008, INT J HUM-COMPUT ST, V66, P530, DOI 10.1016/j.ijhcs.2007.10.003
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Ho C.W., 2004, P OOPSLA WORKSHOP EC, P73, DOI DOI 10.1145/1066129.1066144
   McDowell C., 2002, SIGCSE Bulletin, V34, P38, DOI 10.1145/563517.563353
   Navoraphan K., 2006, ECLIPSE 06, P6
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Radermacher A, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P41, DOI 10.1109/CSEET.2011.5876117
   Rosen E., 2010, WORKSH PSYCH PROGR I
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Sato D, 2008, AGILE 2008, PROCEEDINGS, P459, DOI 10.1109/Agile.2008.11
   Schümmer T, 2009, J UNIVERS COMPUT SCI, V15, P3101
   Smite D., 2012, EMP SOFTW ENG IN JUL
   Stotts D., 2004, XP
   Tsompanoudi D., 2013, EXPLORING EFFECTS CO
   Vanhanen J., 2007, SOFTWARE ENG ADV, P25
   VERSIONONE INC, 2013, STAT AG DEV SURV
   VERSIONONE INC, 2011, STAT AG DEV SURV
   Wanfeng Dou, 2010, 2010 2nd International Workshop on Education Technology and Computer Science (ETCS), P467, DOI 10.1109/ETCS.2010.367
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Zacharis NZ, 2011, IEEE T EDUC, V54, P168, DOI 10.1109/TE.2010.2048328
   Zin A.M., 2006, TURKISH ONLINE J DIS, V7
NR 38
TC 39
Z9 41
U1 1
U2 46
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2015
VL 63
BP 1
EP 10
DI 10.1016/j.infsof.2015.02.011
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH6LV
UT WOS:000354149000001
DA 2024-07-18
ER

PT J
AU Felderer, M
   Herrmann, A
AF Felderer, Michael
   Herrmann, Andrea
TI Manual test case derivation from UML activity diagrams and state
   machines: A controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE System testing; Test design; Model-based testing; Controlled experiment
ID SEQUENCE DIAGRAMS; COMPREHENSION; STEREOTYPES; QUALITY; FAMILY; IMPACT
AB Context: It is a difficult and challenging task to fully automatize model-based testing because this demands complete and unambiguous system models as input. Therefore, in practice, test cases, especially on the system level, are still derived manually from behavioral models like UML activity diagrams or state machines. But this kind of manual test case derivation is error-prone and knowing these errors makes it possible to provide guidelines to reduce them.
   Objective: The objective of the study presented in this paper therefore is to examine which errors are possible and actually made when manually deriving test cases from UML activity diagrams or state machines and whether there are differences between these diagram types.
   Method: We investigate the errors made when deriving test cases manually in a controlled student experiment. The experiment was performed and internally replicated with overall 84 participants divided into three groups at two institutions.
   Results: As a result of our experiment, we provide a taxonomy of errors made and their frequencies. In addition, our experiment provides evidence that activity diagrams have a higher perceived comprehensibility but also a higher error-proneness than state machines with regard to manual test case derivation. This information helps to develop guidelines for manual test case derivation from UML activity diagrams and state machines.
   Conclusion: Most errors observed were due to missing test steps, conditions or results, or content was written into the wrong field. As activity diagrams have a higher perceived comprehensibility, but also more error-prone than state machines, both diagram types are useful for manual test case derivation. Their application depends on the context and should be complemented with clear rules on how to derive test cases. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Felderer, Michael] Univ Innsbruck, A-6020 Innsbruck, Austria.
   [Herrmann, Andrea] Herrmann & Ehrlich, D-70372 Stuttgart, Germany.
C3 University of Innsbruck
RP Felderer, M (corresponding author), Univ Innsbruck, Technikerstr 21a, A-6020 Innsbruck, Austria.
EM michael.felderer@uibk.ac.at; herrmann@herrmann-ehrlich.de
RI Felderer, Michael/AAF-4909-2020
FU project QE LaB - Living Models for Open Systems [FFG 882740]; project
   MOBSTECO [FWF P 26194-N15]
FX This work was sponsored by the projects QE LaB - Living Models for Open
   Systems (FFG 882740) and MOBSTECO (FWF P 26194-N15). In addition, we
   thank all participants of the experiment for their time and
   concentration.
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2012, STAND GLOSS TERMS US
   Aranda J., 2007, INT WORKSHOP MODELIN
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Chen MS, 2009, COMPUT J, V52, P545, DOI 10.1093/comjnl/bxm057
   Crawley MJ., 2012, R BOOK
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   De Lucia A, 2010, EMPIR SOFTW ENG, V15, P455, DOI 10.1007/s10664-009-9127-7
   Felderer M., 2013, SOFTWARE QUALITY INC
   Felderer M., 2014, EUR SEAA 2014
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   Hartmann J., 2005, INNOVATIONS SYST SOF, V1, P2005
   Jedlitschka A., 2008, Guide to Advanced Empirical Software Engineering
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kansomkeat S, 2003, SAICSIT 03
   KIM H, 2007, 8 ACIS INT C SOFTW E
   Kim Y. G., 1999, IEE Proceedings-Software, V146, P187, DOI 10.1049/ip-sen:19990602
   Kirk R.E., 1995, EXPT DESIGN, V3rd
   Kundu D, 2009, J OBJECT TECHNOL, V8, P65, DOI 10.5381/jot.2009.8.3.a1
   Linzhang W, 2004, 11 AS PAC SOFTW ENG
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Mingsong C, 2006, INT WORKSH AUT SOFTW
   Mosterman P, 2011, Model-based testing for embedded systems
   Nugroho A, 2014, EMPIR SOFTW ENG, V19, P926, DOI 10.1007/s10664-013-9243-2
   Nugroho A, 2009, LECT NOTES COMPUT SC, V5795, P181, DOI 10.1007/978-3-642-04425-0_14
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   PRETSCHNER A, 2005, P 27 INT C SOFTW ENG
   Purchase Helen C., 2001, P 2001 AS PAC S INF, V9
   Reggio G., 2011, MODELS
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Riebisch M., 2003, LNCS, V2591
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Samuel P, 2008, IET SOFTW, V2, P79, DOI 10.1049/iet-sen:20060061
   Sokenou D, 2008, SOFTW ENG WORKSH
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Sun D, 2005, PROG COMPREHEN, P317
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Utting M., 2010, Practical model-based testing: a tools approach
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Wohlin C., 2012, Experimentation in Software Engineering
   [No title captured]
NR 48
TC 12
Z9 12
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 1
EP 15
DI 10.1016/j.infsof.2014.12.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400001
DA 2024-07-18
ER

PT J
AU Lizcano, D
   Alonso, F
   Soriano, J
   López, G
AF Lizcano, David
   Alonso, Fernando
   Soriano, Javier
   Lopez, Genoveva
TI Automated end user-centred adaptation of web components through
   automated description logic-based reasoning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE D.2 [Software engineering]; D.3 [Programming languages]; H.5
   [Information interfaces and presentation]; K.4 [Computers and society];
   J.4 [Social and behavioural sciences]
ID COMPOSITION MODEL; INTERNET
AB Context: This paper addresses one of the major end-user development (EUD) challenges, namely, how to pack today's EUD support tools with composable elements. This would give end users better access to more components which they can use to build a solution tailored to their own needs. The success of later end-user software engineering (EUSE) activities largely depends on how many components each tool has and how adaptable components are to multiple problem domains.
   Objective: A system for automatically adapting heterogeneous components to a common development environment would offer a sizeable saving of time and resources within the EUD support tool construction process. This paper presents an automated adaptation system for transforming EUD components to a standard format.
   Method: This system is based on the use of description logic. Based on a generic UML2 data model, this description logic is able to check whether an end-user component can be transformed to this modelling language through subsumption or as an instance of the UML2 model. Besides it automatically finds a consistent, non-ambiguous and finite set of XSLT mappings to automatically prepare data in order to leverage the component as part of a tool that conforms to the target UML2 component model.
   Results: The proposed system has been successfully applied to components from four prominent EUD tools. These components were automatically converted to a standard format. In order to validate the proposed system, rich intemet applications (RIA) used as an operational support system for operators at a large services company were developed using automatically adapted standard format components. These RIAs would be impossible to develop using each EUD tool separately.
   Conclusion: The positive results of applying our system for automatically adapting components from current tool catalogues are indicative of the system's effectiveness. Use of this system could foster the growth of web EUD component catalogues, leveraging a vast ecosystem of user-centred SaaS to further current EUSE trends. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Lizcano, David] Open Univ, UDIMA, Sch Comp Sci, Madrid 28400, Spain.
   [Alonso, Fernando; Soriano, Javier; Lopez, Genoveva] Univ Politecn Madrid, Sch Comp Engn, E-28660 Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Lizcano, D (corresponding author), Open Univ, UDIMA, Sch Comp Sci, Collado Villalba, Madrid 28400, Spain.
EM dlizcano@fi.upm.es
RI Lizcano, David/B-4518-2011; Soriano, Javier/IZE-0163-2023; Martinez,
   Andres/KBC-9454-2024; Soriano, Javier/O-3317-2013
OI Lizcano, David/0000-0001-7928-5237; Soriano, Javier/0000-0001-6272-8708
CR AMICO, 2012, AMICO WEB PLATFORM
   Baader F., 2003, THE DESCRIPTION LOGI
   Berardi Daniela, 2001, WORKSHOP ON APPLICAT
   Cali Andrea, 2002, LECTURE NOTES IN COM, V2366, P423
   Calvanese D, 1999, J LOGIC COMPUT, V9, P295, DOI 10.1093/logcom/9.3.295
   EZWEB, 2012, EZWEB WEB PLATFORM
   GOOGLE, 2012, IGOOGLE WEB PLATFORM
   Haarslev V., 2001, Automated Reasoning. First International Joint Conference, IJCAR 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2083), P701
   Haarslev V., 2001, PROC OF IJCAR
   Haarslev V., 2001, HIGH PERFORMANCE REA
   Horrocks I., 2006, THE EVEN MORE IRRESI
   JACKBE, 2012, JACKBE PRESTO CLOUD
   KAPOW SOFTWARE, 2012, OPEN KAPOW AND KAPOW
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Lieberman H., 2006, END USER DEVELOPMENT
   Liicano D., 2013, END USER DEVELOPMENT
   Lizcano D., 2010, THESIS
   Lizcano D., 2011, PROCEEDINGS OF THE S, V11, P99
   Lizcano D, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522929
   Lizcano D, 2012, J UNIVERS COMPUT SCI, V18, P143
   Lizcano D, 2011, J WEB ENG, V10, P197
   Lizcano D, 2009, INT J WEB GRID SERV, V5, P155, DOI 10.1504/IJWGS.2009.027572
   Macías JA, 2008, INTERACT COMPUT, V20, P29, DOI 10.1016/j.intcom.2007.07.007
   MARMITE, 2012, MARMITE WEB PLATFORM
   MICROSOFT, 2012, MICROSOFT POPFLY WEB
   Palopoli L, 2003, ANN MATH ARTIF INTEL, V39, P385, DOI 10.1023/A:1026094327713
   Ramalho Franklin, 2004, 3RD UML WORKSHOP IN
   Rode J, 2005, LECT NOTES COMPUT SC, V3579, P478
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sattler U., 1998, THESIS
   Scaffidi C., 2005, TECHNICAL REPORT CMU
   Simmonds Jocelyn., 2005, ASE, P431
   Sobek R., 2005, TECHNICAL REPORT
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   Vavliakis KN, 2011, EXPERT SYST APPL, V38, P3844, DOI 10.1016/j.eswa.2010.09.045
   Xiaodong Zhu, 2011, Special Track on Supernetworks and System Management. Proceedings of the 2011 International Conference on Business Management and Electronic Information (BMEI 2011), P205, DOI 10.1109/ICBMEI.2011.5914460
   YAHOO!, 2012, YAHOO PIPES WEB PLAT
   YAHOO!, 2012, YAHOO DAPPER WEB PLA
NR 38
TC 2
Z9 2
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 446
EP 462
DI 10.1016/j.infsof.2014.05.021
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500026
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Mossige, M
   Gotlieb, A
   Meling, H
AF Mossige, Morten
   Gotlieb, Arnaud
   Meling, Hein
TI Testing robot controllers using constraint programming and continuous
   integration
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Constraint programming; Continuous integration; Robotized painting;
   Software testing; Distributed real time systems; Agile development
ID TEST DATA GENERATION
AB Context: Testing complex industrial robots (CIRs) requires testing several interacting control systems. This is challenging, especially for robots performing process-intensive tasks such as painting or gluing, since their dedicated process control systems can be loosely coupled with the robot's motion control.
   Objective: Current practices for validating CIRs involve manual test case design and execution. To reduce testing costs and improve quality assurance, a trend is to automate the generation of test cases. Our work aims to define a cost-effective automated testing technique to validate CIR control systems in an industrial context.
   Method: This paper reports on a methodology, developed at ABB Robotics in collaboration with SIMULA, for the fully automated testing of CIRs control systems. Our approach draws on continuous integration principles and well-established constraint-based testing techniques. It is based on a novel constraint-based model for automatically generating test sequences where test sequences are both generated and executed as part of a continuous integration process.
   Results: By performing a detailed analysis of experimental results over a simplified version of our constraint model, we determine the most appropriate parameterization of the operational version of the constraint model. This version is now being deployed at ABB Robotics's CIR testing facilities and used on a permanent basis. This paper presents the empirical results obtained when automatically generating test sequences for CIRs at ABB Robotics. In a real industrial setting, the results show that our methodology is not only able to detect reintroduced known faults, but also to spot completely new faults.
   Conclusion: Our empirical evaluation shows that constraint-based testing is appropriate for automatically generating test sequences for CIRs and can be faithfully deployed in an industrial context. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Mossige, Morten] ABB Robot, N-4349 Bryme, Norway.
   [Mossige, Morten; Gotlieb, Arnaud] Simula Res Lab, Lysaker, Norway.
   [Mossige, Morten; Meling, Hein] Univ Stavanger, N-4036 Stavanger, Norway.
C3 Universitetet i Stavanger
RP Mossige, M (corresponding author), Univ Stavanger, N-4036 Stavanger, Norway.
EM morten.mossige@uis.no; arnaud@simula.no; hein.meling@uis.no
RI Meling, Hein/AAA-3780-2020
OI Meling, Hein/0000-0002-8564-2218
FU Norwegian Research Council under the Industrial PhD Program [222010];
   Certus SFI grant; ABB Robotics
FX This work is funded by the Norwegian Research Council under the
   Industrial PhD Program (222010), the Certus SFI grant
   (http://www.certus-sfi.no), and ABB Robotics.
CR [Anonymous], 1989, Constraint Satisfaction in Logic Programming
   Barnett M, 2011, COMMUN ACM, V54, P81, DOI 10.1145/1953122.1953145
   Bell J.S., 2014, COMP P 36 INT C SOFT
   Broy M., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P263
   Carlsson M., 1997, Programming Languages: Implementations, Logics, and Programs. 9th International Symposium, PLILP'97, Including a Special Track on Declarative Programming Languages in Education. Proceedings, P191, DOI 10.1007/BFb0033845
   Cassandras C. G., 2008, INTRO TODISCRETE EVE
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   de la Banda M.G., 2013, CONSTRAINTS, P1
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Di Alesio S., 2013, INT S SOFT REL ENG I
   Di Alesio S, 2013, PROC INT SYMP SOFTW, P158, DOI 10.1109/ISSRE.2013.6698915
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Dösinger S, 2012, IEEE INT CONF AUTOM, P374, DOI 10.1145/2351676.2351751
   Eidson J, 2002, PROCEEDINGS OF THE ISA/IEEE SENSORS FOR INDUSTRY CONFERENCE, P98
   Fitzgerald B., 2014, 1 WORKSH RAP CONT SO, V14
   Fowler M., 2006, Continuous integration
   Francis Kathryn, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P274, DOI 10.1007/978-3-642-33558-7_22
   Gotlieb A., 1998, Software Engineering Notes, V23, P53, DOI 10.1145/271775.271790
   Gotlieb A, 2007, INFORM SOFTWARE TECH, V49, P1030, DOI 10.1016/j.infsof.2006.10.016
   Hao D, 2012, PROC INT CONF SOFTW, P738, DOI 10.1109/ICSE.2012.6227144
   Hill JH, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P66, DOI 10.1109/ECBS.2008.20
   I. IBM ILOG Labs, 2006, IBM CPLEX HIGH PERF
   Johannessen S, 2004, IEEE CONTR SYST MAG, V24, P61, DOI 10.1109/MCS.2004.1275432
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Marre B, 2005, ELECTRON NOTES THEOR, V111, P93, DOI 10.1016/j.entcs.2004.12.010
   Marriott K., 1998, PROGRAMMING CONSTRAI
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mossige M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P489, DOI 10.1109/ICST.2013.71
   Orso A., 2014, P IEEE INT C SOFTW E
   Rajkumar R, 2010, DES AUT CON, P731
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Rossum van G, 1995, TECHNICAL REPORT
   Sha L., 2009, Cyber-physical systems: A new frontier, Machine Learning in Cyber Trust, P3, DOI [10.1007/978-0-387-88735-7_1, DOI 10.1007/978-0-387-88735-7_1]
   Ulrich A.W., 1999, P 12 INT SOFTW QUAL
   Utting M., 2007, PRACTICAL MODEL BASE
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Zhao Y, 2007, RTAS 2007: 13TH REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P259
NR 39
TC 12
Z9 12
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 169
EP 185
DI 10.1016/j.infsof.2014.09.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500011
DA 2024-07-18
ER

PT J
AU Kanewala, U
   Bieman, JM
AF Kanewala, Upulee
   Bieman, James M.
TI Testing scientific software: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Scientific software; Software testing; Systematic literature review;
   Software quality
ID QUALITY; DESIGN
AB Context: Scientific software plays an important role in critical decision making, for example making weather predictions based on climate models, and computation of evidence for research publications. Recently, scientists have had to retract publications due to errors caused by software faults. Systematic testing can identify such faults in code.
   Objective: This study aims to identify specific challenges, proposed solutions, and unsolved problems faced when testing scientific software.
   Method: We conducted a systematic literature survey to identify and analyze relevant literature. We identified 62 studies that provided relevant information about testing scientific software.
   Results: We found that challenges faced when testing scientific software fall into two main categories: (1) testing challenges that occur due to characteristics of scientific software such as oracle problems and (2) testing challenges that occur due to cultural differences between scientists and the software engineering community such as viewing the code and the model that it implements as inseparable entities. In addition, we identified methods to potentially overcome these challenges and their limitations. Finally we describe unsolved challenges and how software engineering researchers and practitioners can help to overcome them.
   Conclusions: Scientific software presents special challenges for testing. Specifically, cultural differences between scientist developers and software engineers, along with the characteristics of the scientific software make testing more difficult. Existing techniques such as code clone detection can help to improve the testing process. Software engineers should consider special challenges posed by scientific software such as oracle problems when developing testing techniques. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Kanewala, Upulee; Bieman, James M.] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
C3 Colorado State University
RP Kanewala, U (corresponding author), Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
EM upuleegk@cs.colostate.edu; bieman@cs.colostate.edu
RI Kanewala, Upulee/AAG-8708-2020
OI Kanewala, Upulee/0000-0002-5954-1616
FU National Institute of General Medical Sciences - United States
   [1R01GM096192]
FX This project is supported by Award Number 1R01GM096192 from the National
   Institute of General Medical Sciences - United States. The content is
   solely the responsibility of the authors and does not necessarily
   represent the official views of the National Institute of General
   Medical Sciences or the National Institutes of Health. We thank the
   reviewers for their insightful comments on earlier versions of this
   paper.
CR Abackerli AJ, 2010, J BRAZ SOC MECH SCI, V32, P8, DOI 10.1590/S1678-58782010000100002
   Ackroyd KS, 2008, IEEE SOFTWARE, V25, P44, DOI 10.1109/MS.2008.93
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2004, TECHNICAL REPORT
   [Anonymous], 2007, SEKE
   [Anonymous], 2011, SEHC
   Bagnara R, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P1, DOI 10.1109/ICST.2013.17
   BRILLIANT SS, 1990, IEEE T SOFTWARE ENG, V16, P238, DOI 10.1109/32.44387
   Carver Jeffrey, 2011, SAND20112196
   Carver JC, 2007, PROC INT CONF SOFTW, P550
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chen TY, 2002, P INT COMP SOFTW APP, P327, DOI 10.1109/CMPSAC.2002.1045022
   Chin L.S., 2007, RALTR2007010
   Clune TL, 2011, IEEE SOFTWARE, V28, P49, DOI 10.1109/MS.2011.117
   Cox MG, 1999, ANAL CHIM ACTA, V380, P339, DOI 10.1016/S0003-2670(98)00481-4
   Dahlgren TL, 2007, LECT NOTES COMPUT SC, V4608, P157
   DAHLGREN TL, 2005, P 2 INT WORKSH SOFTW, P73
   Davis M. D., 1981, P ACM 81 C, P254, DOI DOI 10.1145/800175.809889
   Drake JB, 2005, INT J HIGH PERFORM C, V19, P177, DOI 10.1177/1094342005056094
   Dubois PF, 2012, COMPUT SCI ENG, V14, P69, DOI 10.1109/MCSE.2012.84
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Easterbrook SM, 2009, COMPUT SCI ENG, V11, P64
   Easterbrook Steve M., 2010, P WORKSH FUT SOFTW E, P99, DOI DOI 10.1145/1882362.1882383
   Eddins SL, 2009, COMPUT SCI ENG, V11, P48, DOI 10.1109/MCSE.2009.186
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Farrell PE, 2011, GEOSCI MODEL DEV, V4, P435, DOI 10.5194/gmd-4-435-2011
   Guderlei R, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P404
   Hannay JE, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P1, DOI 10.1109/SECSE.2009.5069155
   Hatton L, 1997, IEEE COMPUT SCI ENG, V4, P27, DOI 10.1109/99.609829
   HATTON L, 1994, IEEE T SOFTWARE ENG, V20, P785, DOI 10.1109/32.328993
   Heroux MA, 2007, 15TH EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P11, DOI 10.1109/PDP.2007.51
   Heroux MA, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P15, DOI 10.1109/SECSE.2009.5069157
   Hochstein L, 2008, COMPUTER, V41, P50, DOI 10.1109/MC.2008.101
   Hook D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P59, DOI 10.1109/SECSE.2009.5069163
   Kane DW, 2006, BMC BIOINFORMATICS, V7, DOI 10.1186/1471-2105-7-273
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   Kanewala U, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P48, DOI 10.1109/SECSE.2013.6615099
   Kelly D, 2011, COMPUT SCI ENG, V13, P7, DOI 10.1109/MCSE.2011.86
   Kelly D, 2011, IEEE SOFTWARE, V28, P84, DOI 10.1109/MS.2010.88
   Kelly D, 2011, J COMPUT SCI-NETH, V2, P47, DOI 10.1016/j.jocs.2010.12.002
   Kelly D, 2009, COMPUT SCI ENG, V11, P48, DOI 10.1109/MCSE.2009.139
   Kelly Diane, 2008, 1 INT WORKSH SOFTW E
   Kelly Diane, 2008, P 3 ANN C ASS SOFTWA, P30
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kreyman K., 1999, 368 CRL MCMASTER U
   Lane PCR, 2012, J EXP THEOR ARTIF IN, V24, P421, DOI 10.1080/0952813X.2012.695443
   Lemos G. S., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P157, DOI 10.1109/SERE.2012.28
   Mayer J., 2005, Software Engineering 2005, Fachtagung des GI-Fachbereichs Softwaretechnik, P69
   Mayer J, 2006, INT CONF QUAL SOFTW, P85
   Meinke K, 2010, LECT NOTES COMPUT SC, V6435, P221, DOI 10.1007/978-3-642-16573-3_16
   Miller G, 2006, SCIENCE, V314, P1856, DOI 10.1126/science.314.5807.1856
   Morris Chris, 2009, Proceedings of the 2009 5th IEEE International Conference on e-Science (e-Science 2009), P216, DOI 10.1109/e-Science.2009.38
   Morris C., 2008, P 1 INT WORKSH SOFTW
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Murphy C., 2007, P INT WORKSH RAND TE, P38
   Murphy C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P436, DOI 10.1109/ICST.2009.19
   Nguyen-Hoan L., 2010, P 2010 ACM IEEE INT
   Pipitone J, 2012, GEOSCI MODEL DEV, V5, P1009, DOI 10.5194/gmd-5-1009-2012
   Pitt-Francis J, 2008, PHILOS T R SOC A, V366, P3111, DOI 10.1098/rsta.2008.0096
   Post DE, 2004, INT J HIGH PERFORM C, V18, P399, DOI 10.1177/1094342004048534
   Remmel H, 2012, COMPUT SCI ENG, V14, P38, DOI 10.1109/MCSE.2011.115
   Reupke W. A., 1988, Proceedings of the Symposium on the Engineering of Computer-Based Medical Systems (Cat. No.88CH2606-2), P15, DOI 10.1109/ECBS.1988.5439
   Sanders R, 2008, IEEE SOFTWARE, V25, P21, DOI 10.1109/MS.2008.84
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   Segal J., 2008, 2008 WORKSH SOFTW EN
   Segal J., 2008, P 20 ANN M PSYCH PRO
   Segal J, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P111
   Segal J, 2009, COMPUT SUPP COOP W J, V18, P581, DOI 10.1007/s10606-009-9096-9
   Segal J, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P9, DOI 10.1109/SECSE.2009.5069156
   Shin Yoo, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P192, DOI 10.1109/ICSTW.2010.26
   Sletholt MT, 2012, COMPUT SCI ENG, V14, P24, DOI 10.1109/MCSE.2011.113
   Smith BT, 2007, INT FED INFO PROC, V239, P227
   Smith MC, 2004, PROC SPIE, V5423, P288, DOI 10.1117/12.542345
   Vilkomir SA, 2008, LECT NOTES COMPUT SC, V5103, P291, DOI 10.1007/978-3-540-69389-5_34
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wood WA, 2003, IEEE SOFTWARE, V20, P30, DOI 10.1109/MS.2003.1196317
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
NR 81
TC 76
Z9 91
U1 3
U2 62
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1219
EP 1232
DI 10.1016/j.infsof.2014.05.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700004
PM 25125798
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Génova, G
   Llorens, J
   Fraga, A
AF Genova, Gonzalo
   Llorens, Juan
   Fraga, Anabel
TI Metamodeling generalization and other directed relationships in UML
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Unified Modeling Language; Model engineering; Metamodel; Generalization;
   Directed relationship
ID MODEL-DRIVEN DEVELOPMENT
AB Context: Generalization is a fundamental relationship in object orientation and in the UML (Unified Modeling Language). The generalization relationship is represented in the UML metamodel as a "directed relationship".
   Objective: Being a directed relationship corresponds to the nature of generalization in the semantic domain of object orientation: a relationship that is directed from the subclass to the superclass. However, we claim that the particular form this relationship adopts in the metamodel is erroneous, which entails a series of inconveniencies for model manipulation tools that try to adhere to the UML specification. Moreover, we think that this error could be due to a misinterpretation of the relationships between metamodeling levels in the UML: represented reality (MO), model (M1) and metamodel (M2). This problem also affects other directed relationships: Dependency and its various subtypes, Include and Extend between use cases, and others.
   Method: We analyze the features of the generalization relationship in various domains and how it has been metamodeled in UML. We examine the problems, both theoretical and technological, posed by the UML metamodel of generalization. We then compare it with the metamodel of other directed relationships.
   Results: We arrive at the conclusion that the metamodel of all directed relationships could be improved. Namely, we claim that, at level M2, the metamodel should not contain any one-way meta-associations: all meta-associations should be two-way, both for practical and theoretical reasons.
   Conclusions: The rationale for our main claim can be summarized as follows: connected graphical symbols do know each other, and the goal of a metamodel is to specify the syntactic properties of a language, ergo meta-associations must be two-way. This, of course, does not preclude at all the use of one-way associations at the user model level (M1). (C) 2014 Elsevier B.V. All rights reserved.
C1 [Genova, Gonzalo] Univ Andres Bello, Fac Ingn, Santiago, Chile.
   [Genova, Gonzalo; Llorens, Juan; Fraga, Anabel] Univ Carlos III Madrid, Dept Informat, Madrid 28911, Spain.
C3 Universidad Andres Bello; Universidad Carlos III de Madrid
RP Génova, G (corresponding author), Univ Andres Bello, Fac Ingn, Sazie 2325, Santiago, Chile.
EM gonzalo.genova@unab.cl; llorens@inf.uc3m.es; afraga@inf.uc3m.es
RI Génova, Gonzalo/ABF-4284-2021
OI Genova, Gonzalo/0000-0003-0299-286X; LLORENS, JUAN/0000-0001-7951-6357;
   FRAGA, ANABEL/0000-0001-5837-920X
FU Spanish Ministerio de Ciencia y Tecnologia [TIN2007-67153]
FX This research is supported through the Spanish Ministerio de Ciencia y
   Tecnologia, Project TIN2007-67153, "SEMSE: SEmantic Metadata SEarch"
   ("Desarrollo de un sistema de recuperacion conceptual mediante niveles
   semanticos en la representacion de esquemas de metadatos").
CR [Anonymous], MDA GUID VERS 1 0 1
   [Anonymous], 1997, Object-oriented software construction
   Antony Charles, 1981, COMMUN ACM, V24, P75
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Clark Tony., 2008, Applied Metamodelling, V2nd
   Eco Umberto., 1984, SEMIOTICS PHILOS LAN
   Gamma Erich., 1994, DESIGN PATTERNS
   Genova G., 2005, PROC CAISE 05 WORKSH, V2, P547
   Génova G, 2009, J OBJECT TECHNOL, V8, P107, DOI 10.5381/jot.2009.8.1.c7
   Genova Gonzalo, 2003, THESIS U CARIOS 3 MA
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   HENDERSONSELLER.B, 2005, SOFTWARE SYSTEM MODE, V4, P4, DOI DOI 10.1007/S10270-004-0076-8
   Liskov Barbara, 1988, ACM SIGPLAN NOTICES, V23, P17
   Mellor StephenJ., 2004, MDA Distilled: Principles of Model-Driven Architecture
   Miller Joaquin, 2002, 3C UML ANAHEIM PRESE
   O'Keefe G, 2006, LECT NOTES COMPUT SC, V4199, P42
   *OBJ MAN GROUP, 2005, PROP MDA FDN MOD
   Object Management Group, 2013, Semantics of a Foundational Subset for Executable UML Models (FUML)
   Object Management Group, 2010, UN MOD LANG VERS 2 3
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Platform Eclipse, INT EL METH SUMM GET
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Selic BV, 2004, LECT NOTES COMPUT SC, V3185, P181
NR 24
TC 4
Z9 4
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2014
VL 56
IS 7
BP 718
EP 726
DI 10.1016/j.infsof.2014.01.010
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH3FW
UT WOS:000336010100002
DA 2024-07-18
ER

PT J
AU Eriksson, O
   Henderson-Sellers, B
   Ågerfalk, PJ
AF Eriksson, Owen
   Henderson-Sellers, Brian
   Agerfalk, Par J.
TI Ontological and linguistic metamodelling revisited: A language use
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Concepts; Speech act theory; Set theory; Metamodel
AB Context: Although metamodelling is generally accepted as important for our understanding of software and systems development, arguments about the validity and utility of ontological versus linguistic metamodelling continue.
   Objective: The paper examines the traditional, metamodel-focused construction of modelling languages in the context of language use, and particularly speech act theory. These concepts are then applied to the problems introduced by the "Orthogonal Classification Architecture" that is often called the ontological/linguistic paradox. The aim of the paper is to show how it is possible to overcome these problems.
   Method: The paper adopts a conceptual-analytical approach by revisiting the published arguments and developing an alternative metamodelling architecture based on language use.
   Results: The analysis shows that when we apply a language use perspective of meaning to traditional modelling concepts, a number of incongruities and misconceptions in the traditional approaches are revealed - issues that are not evident in previous work based primarily on set theory. Clearly differentiating between the extensional and intensional aspects of class concepts (as sets) and also between objects (in the social world) and things (in the physical world) allows for a deeper understanding to be gained of the relationship between the ontological and linguistic views promulgated in the modelling world.
   Conclusions: We propose that a viewpoint that integrates language use ideas into traditional modelling (and metamodelling) is vital, and stress that meaning is not inherent in the physical world; meaning, and thus socially valid objects, are constructed by use of language, which may or may not establish a one-to-one correspondence relationship between objects and physical things. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Eriksson, Owen; Agerfalk, Par J.] Uppsala Univ, Dept Informat & Media, S-75120 Uppsala, Sweden.
   [Henderson-Sellers, Brian] Univ Technol Sydney, Sch Software, Broadway, NSW 2007, Australia.
C3 Uppsala University; University of Technology Sydney
RP Eriksson, O (corresponding author), Uppsala Univ, Dept Informat & Media, Box 513, S-75120 Uppsala, Sweden.
EM owen.eriksson@im.uu.se
RI Agerfalk, Par J/I-9374-2012
CR Agerfalk P.J., 2011, P INT C INF SYST ICI
   Ågerfalk PJ, 2010, EUR J INFORM SYST, V19, P251, DOI 10.1057/ejis.2010.22
   Ågerfalk PJ, 2006, EUR J INFORM SYST, V15, P4, DOI 10.1057/palgrave.ejis.3000607
   Ågerfalk PJ, 2004, EUR J INFORM SYST, V13, P80, DOI 10.1057/palgrave.ejis.3000486
   [Anonymous], 2008, Metamodelling for software engineering
   [Anonymous], 050705 OMG
   [Anonymous], 24744 ISOIEC
   [Anonymous], 2012, 19505 ISOIEC
   [Anonymous], 1941, Language, culture, and personality, essays in memory of Edward Sapir
   Atkinson C, 1999, LECT NOTES COMPUT SC, V1618, P21
   Atkinson C, 2005, LECT NOTES COMPUT SC, V3713, P398, DOI 10.1007/11557432_30
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   ATKINSON C, 1997, P 1 INT ENT DISTR OB
   Atkinson C., 2001, INT C UNIFIED MODELI, P19, DOI [DOI 10.1007/3-540-45441-1_3, DOI 10.1007/3-540-45441-1]
   Atkinson C., 2010, SLE, P266
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2009, IEEE T SOFTWARE ENG, V35, P742, DOI 10.1109/TSE.2009.31
   Austin John L., 2003, DO THINGS WORDS
   Austin JohnL., 1969, SPEECH ACTS ESSAY PH, DOI DOI 10.1017/CBO9781139173438
   Bernstein R., 2010, PRAGMATIC TURN
   Borkar V.S., 1998, RESONANCE J SCI ED, V3, P40
   Carmichael A., 1994, OBJECT DEV METHODS, P321
   Coad P., 1992, Communications of the ACM, V35, P152, DOI 10.1145/130994.131006
   Denning PeterJ., 1978, Machines, Languages and Computation
   Egginton W., 2004, The Pragmatic Turn in Philosophy: Contemporary Engagements between Analytic and Continental Thought
   Eriksson O, 2010, J ASSOC INF SYST, V11, P433
   Evermann J, 2009, J DATABASE MANAGE, V20, P48, DOI 10.4018/jdm.2009010103
   Flatscher R. G., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P322, DOI 10.1145/643120.643124
   Frege Gottlob, 1892, Zeitschrift fur Philosophie und philosophische Kritik, P56
   Gasevic D, 2007, LECT NOTES COMPUT SC, V4735, P91
   Gonzalez-Perez C., 2006, An ontology for software development methodologies and endeavours, P123
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   Gonzalez-Perez C, 2007, J SYST SOFTWARE, V80, P1778, DOI 10.1016/j.jss.2007.02.048
   Guizzardi G, 2005, LECT NOTES ARTIF INT, V3508, P110
   Guizzardi G., 2005, CTIT PHD THESIS SERI
   Gupta Anil., 1980, LOGIC COMMON NOUNS I
   Habermas J., 1976, On the pragmatics of communication
   Habermas J., 1981, THEORY COMMUNICATIVE
   HABERMAS J, 1996, PRAGMATICS COMMUNICA
   Haliday MA.K., 1973, Explorations in the functions of language
   Halpin T., 2005, ADV TOPICS DATABASE, V4, P218
   Henderson-Sellers Brian, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P240, DOI 10.1007/978-3-642-38709-8_16
   Henderson-Sellers B, 2011, J SYST SOFTWARE, V84, P301, DOI 10.1016/j.jss.2010.10.025
   Henderson-Sellers B., 2012, On the mathematics of modelling, metamodelling, ontologies and modelling languages
   Henderson-Sellers B., 1994, AM PROGRAM, V7, P2
   Henderson-Sellers B., 2005, Conferences in Research and Practice in Information Technology, eds, P7
   Henderson-Sellers B, 2005, J OBJECT TECHNOL, V4, P83, DOI 10.5381/jot.2005.4.7.a3
   Henderson-Sellers B, 2010, LECT NOTES COMPUT SC, V6412, P219, DOI 10.1007/978-3-642-16373-9_16
   HENDERSONSELLER.B, 1998, OBJECT ORIENTED META
   Jarvinen P. H., 2000, Proceedings of the 8th European Conference on Information Systems, P124
   Johnson Ralph, 1997, Pattern Languages of Program Design, V3, P47
   Kuhne T., 2006, J SOFTWARE SYSTEMS M, V5, P369
   Laarman A, 2010, LECT NOTES COMPUT SC, V5969, P174
   Leppanen M., 2005, JYVASKYLA STUDIES CO, V52
   Lowe E.J., 1989, Kinds of Being: A Study of Individuation, Identity, and the Logic of Sortal Terms
   Lyytinen K., 2006, Scandinavian Journal of Information Systems, V18, P81
   March S.T., 2007, DES REQ WORKSH CLEV
   Martin J., 1998, OBJECT ORIENTED METH
   McNAMARA J., 1986, BORDER DISPUTE PLACE
   McNamara J., 1994, LOGICAL FDN COGNITIO, V4
   Michel JB, 2011, SCIENCE, V331, P176, DOI 10.1126/science.1199644
   MONARCHI D, 1994, SIGPLAN NOTICES, V29, P223
   Neumayr B, 2011, LECT NOTES COMPUT SC, V6520, P68
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   OMG, 2011, 20110806 OMG
   OMG, 1997, UML SEM VERS 1 1 AD
   OMG, 2005, MET FAC MOF SPEC VER
   Reinhartz-Berger I., 2013, RES DIRECTIONS DOMAI
   Searle J.R., 2007, CONSTRUCTION SOCIAL
   Searle J.R., 2010, ANTHR THEORY, V6
   SEARLE JR, 1989, LINGUIST PHILOS, V12, P535, DOI 10.1007/BF00627773
   Stack Exchange, 2011, CLASS INST ONT
   VANLEEUWEN J, 1991, THESIS U AMSTERDAM
   Whitmire ScottA., 1997, OBJECT ORIENTED DESI
   Wilson E.O., 1975, P1
   Wyssusek B., 2006, Scandinavian Journal of Information Systems, V18, P63
   [No title captured]
NR 78
TC 26
Z9 27
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2099
EP 2124
DI 10.1016/j.infsof.2013.07.008
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100003
DA 2024-07-18
ER

PT J
AU Wnuk, K
   Gorschek, T
   Zanda, S
AF Wnuk, Krzysztof
   Gorschek, Tony
   Zanda, Showayb
TI Obsolete software requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements management; Obsolete requirements; Survey; Empirical study;
   Market driven requirements engineering; Change impact analysis
ID ENGINEERING PRACTICES; RISK-MANAGEMENT; INCONSISTENCY; PRINCIPLES;
   MARKET
AB Context: Coping with rapid requirements change is crucial for staying competitive in the software business. Frequently changing customer needs and fierce competition are typical drivers of rapid requirements evolution resulting in requirements obsolescence even before project completion.
   Objective: Although the obsolete requirements phenomenon and the implications of not addressing them are known, there is a lack of empirical research dedicated to understanding the nature of obsolete software requirements and their role in requirements management.
   Method: In this paper, we report results from an empirical investigation with 219 respondents aimed at investigating the phenomenon of obsolete software requirements.
   Results: Our results contain, but are not limited to, defining the phenomenon of obsolete software requirements, investigating how they are handled in industry today and their potential impact.
   Conclusion: We conclude that obsolete software requirements constitute a significant challenge for companies developing software intensive products, in particular in large projects, and that companies rarely have processes for handling obsolete software requirements. Further, our results call for future research in creating automated methods for obsolete software requirements identification and management, methods that could enable efficient obsolete software requirements management in large projects. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Wnuk, Krzysztof] Lund Univ, Dept Comp Sci, SE-22363 Lund, Sweden.
   [Gorschek, Tony] Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, SE-37179 Karlskrona, Sweden.
   [Zanda, Showayb] Axis Commun AB, SE-22369 Lund, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Wnuk, K (corresponding author), Lund Univ, Dept Comp Sci, Ole Romers Vag 3, SE-22363 Lund, Sweden.
EM Krzysztof.Wnuk@cs.lth.se; Tony.Gorschek@bth.se; Showayb.Zanda@axis.com
CR Anderson W., 2008, CMUSEI2006SR017
   [Anonymous], REQUIREMENTS MANAGEM
   [Anonymous], P 16 INT WORK C REQ
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 6 INT WORKSH REQ ENG
   [Anonymous], 2003, Software requirements
   [Anonymous], 2009, Requirements Engineering: From System Goals to UML Models to Software
   Anthes G., 1994, Computerworld, V28, P107
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Aurum A, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P1, DOI 10.1007/3-540-28244-0_1
   Aurum A., 2005, Engineering and Managing Software Requirements
   Bano M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P64, DOI 10.1109/ICSEA.2010.17
   Bekker MC, 2008, PORTL INT CONF MANAG, P1324, DOI 10.1109/PICMET.2008.4599744
   Berenbach B., 2009, SOFTW 82 SYST REQ EN
   Boehm B, 2000, COMPUTER, V33, P99, DOI 10.1109/2.869384
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Bourque P., 2015, Guide to the software engineering body of knowledge (swe-bok)2015: Iso - international organization for standardization
   Bühne S, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P346
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Chen JY, 2005, IEEE T ENG MANAGE, V52, P199, DOI 10.1109/TEM.2005.844926
   Curtis B., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P96
   Dag JNO, 2006, EMPIR SOFTW ENG, V11, P303, DOI 10.1007/s10664-006-6405-5
   Dawson C.W., 2005, Projects in computing and information systems: A student's guide
   DEBELLIS M, 1995, IEEE EXPERT, V10, P34, DOI 10.1109/64.391959
   DeMarco T, 2003, IEEE SOFTWARE, V20, P99, DOI 10.1109/MS.2003.1231163
   Easterbrook S., 2004, WHAT IS REQURIEMENTS
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Gorschek T, 2007, REQUIR ENG, V12, P163, DOI 10.1007/s00766-007-0047-z
   Gorschek T, 2007, INFORM SOFTWARE TECH, V49, P790, DOI 10.1016/j.infsof.2006.09.003
   Gorschek T, 2010, IEEE SOFTWARE, V27, P37, DOI 10.1109/MS.2009.164
   Harker S., 1993, P IEEE INT S REQUIRE, P266, DOI DOI 10.1109/ISRE.1993.324847
   Herald T, 2009, SYSTEMS ENG, V12, P1, DOI 10.1002/sys.20106
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Hood C., 2008, REQUIREMENTS MANAGEM
   Hood C., 2008, REQUIREMENTS MANAGEM
   Houston DX, 2001, J SYST SOFTWARE, V59, P247, DOI 10.1016/S0164-1212(01)00066-8
   Iacovou C. L., 2004, IEEE Engineering Management Review, V32, P97, DOI 10.1109/EMR.2004.25141
   IBM, DESCR METH
   *IEEE, 1997, IEEE REC PRACT SOFTW
   Kohl R, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P271
   Konrad S, 2008, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2008.31
   Kossmann M., 2 INT C APPL DIG INF, P95, DOI DOI 10.1109/ICADIVVT.2009.5273953
   Kotonya G., 1998, Requirements engineering
   Kulk GP, 2008, SCI COMPUT PROGRAM, V72, P136, DOI 10.1016/j.scico.2008.04.003
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Legodi I., 2010, TECHNOLOGY MANAGEMEN, P1
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Loconsole A., 2005, AS PAC SOFTW ENG C, P1
   Loesch F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P159
   Mannion M, 2000, LECT NOTES COMPUT SC, V1844, P153
   McGee S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P51, DOI 10.1109/ICSEA.2009.17
   Merola L, 2006, Fifth International Conference on Commercial-off-the-Shelf (COTS) - Based Software System, Proceedings, P127, DOI 10.1109/ICCBSS.2006.29
   Monkey S., SURVEY MONKEY WEBPAG
   Murphy D., 2006, CUTTER IT J, V19, P6
   Nakagawa S, 2004, BEHAV ECOL, V15, P1044, DOI 10.1093/beheco/arh107
   Nurmuliani N, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P28, DOI 10.1109/ASWEC.2004.1290455
   Pohl K., 2010, REQUIRMENTS ENG FUND
   Quispe A., 2010, 2010 Proceedings of XXIX International Conference of the Chilean Computer Science Society (SCCC 2010), P81, DOI 10.1109/SCCC.2010.35
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rea R. A. P. L. M., DESIGNING CONDUCTING, P1005
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Regnell B, 2008, LECT NOTES COMPUT SC, V5025, P123, DOI 10.1007/978-3-540-69062-7_11
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Robinson WN, 1999, IEEE T SOFTWARE ENG, V25, P816, DOI 10.1109/32.824411
   Ruël HJM, 2010, INT J INF TECHNOL PR, V1, P43, DOI 10.4018/jitpm.2010040103
   Russo A, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P51, DOI 10.1109/ICRE.1998.667808
   S. E. Institute, CAP MAT MOD INT CMMI
   Savolainen J, 2005, P INT COMP SOFTW APP, P186
   Shang X., 2010, P 2010 INT C MAN SER, P1, DOI DOI 10.1109/1CBECS.2010.5462314
   Siegel S., 1998, NONPARAMETRIC STAT B, V2nd
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Sommerville Ian, 2016, Software engineering 8
   Stephen J., 2011, 6480524 I GOV
   TAKAHASHI M, 1989, IEEE T SOFTWARE ENG, V15, P82, DOI 10.1109/32.21729
   Wiki, SURV
   Wnuk K., SURVEY QUESTIONNAIRE
   Wnuk K., APPENDIX ANAL
   Wnuk K., FULL LIST MAILING LI
   Wnuk K., FULL LIST COUNTRIES
   Wnuk K, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P89, DOI 10.1109/RE.2009.32
   WOHLIN C, 1995, 1995 IEEE ANNUAL INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE PROCEEDINGS OF, P116, DOI 10.1109/IEMC.1995.523919
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C., 2000, FULL LIST TOOL VENDO
   Zowghi D., 2002, AS PAC SOFTW ENG C, V3, DOI DOI 10.1109/APSECTI0N
NR 89
TC 22
Z9 26
U1 1
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 921
EP 940
DI 10.1016/j.infsof.2012.12.001
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 139LS
UT WOS:000318584800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Domínguez, E
   Pérez, B
   Rubio, AL
   Zapata, MA
AF Dominguez, Eladio
   Perez, Beatriz
   Rubio, Angel L.
   Zapata, Maria A.
TI A systematic review of code generation proposals from state machine
   specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE UML state machines; Finite state machines; Statecharts; Code generation;
   Systematic review
ID CLINICAL GUIDELINES; UML; MODELS
AB Context: Model Driven Development (MDD) encourages the use of models for developing complex software systems. Following a MDD approach, modelling languages are used to diagrammatically model the structure and behaviour of object-oriented software, among which state-based languages (including UML state machines, finite state machines and Harel statecharts) constitute the most widely used to specify the dynamic behaviour of a system. However, generating code from state machine models as part of the final system constitutes one of the most challenging tasks due to its dynamic nature and because many state machine concepts are not supported by the object-oriented programming languages. Therefore, it is not surprising that such code generation has received great attention over the years.
   Objective: The overall objective of this paper is to plot the landscape of published proposals in the field of object oriented code generation from state machine specifications, restricting the search neither to a specific context nor to a particular programming language.
   Method: We perform a systematic, accurate literature review of published studies focusing on the object oriented implementation of state machine specifications.
   Results: The systematic review is based on a comprehensive set of 53 resources in all, which we have classified into two groups: pattern-based and not pattern-based. For each proposal, we have analysed both the state machine specification elements they support and the means rile authors propose for their implementation. Additionally, the review investigates which proposals take into account desirable features to be considered in software development such as maintenance or reusability.
   Conclusions: One of the conclusions drawn from the review is that most of the analysed works are based on a software design pattern. Another key finding is that many papers neither support several of the main components of the expressive richness of state machine specifications nor provide an implementation strategy that considers relevant qualitative aspects in software development. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Perez, Beatriz; Rubio, Angel L.] Univ La Rioja, Dpto Matemat & Computac, E-26004 La Rioja, Spain.
   [Dominguez, Eladio; Zapata, Maria A.] Univ Zaragoza, Dpto Informat & Ingn Sistemas, E-50009 Zaragoza, Spain.
C3 Universidad de La Rioja; University of Zaragoza
RP Pérez, B (corresponding author), Univ La Rioja, Dpto Matemat & Computac, E-26004 La Rioja, Spain.
EM noesis@unizar.es; beatriz.perez@uniriojas.es; arubio@unirioja.es;
   mazapata@unizar.es
RI Garcia, Angel Luis Rubio/X-6828-2019; Pérez, Beatriz/K-2176-2014;
   Zapata, María Antonia/L-7290-2014
OI Garcia, Angel Luis Rubio/0000-0002-3052-6404; Pérez,
   Beatriz/0000-0001-9235-7311; Zapata, María Antonia/0000-0002-9531-1586;
   Dominguez Murillo, Eladio/0000-0002-3270-899X
FU Spanish Ministry of Science and Innovation [TIN2009-13584,
   IPT-2011-1328-390000]; Centre for Industrial Technological Development
   (CDTI) [CEN20101019]
FX This work has been partially supported by the Spanish Ministry of
   Science and Innovation (projects TIN2009-13584 and SMOTY
   (IPT-2011-1328-390000)) and the Centre for Industrial Technological
   Development (CDTI) (project THOFU (CEN20101019)).
CR Adamczyk P., 2003, P 10 C PATT LANG PRO
   Adamczyk P., 2004, P 11 C PATT LANG PRO
   Ali Jauhar, 2010, 2010 2nd International Conference on Education Technology and Computer (ICETC 2010), P413, DOI 10.1109/ICETC.2010.5529651
   Ali J., 2001, J COMPUTER SCI INFOR, V2, P24
   Ali J., 1999, P 5 INT C INT DES PR, P111
   Ali Jauhar., 2010, Journal of Software Engineering, V4, P215
   Allegrini T., 2002, CODE GENERATION STRA
   Alur D., 2003, Core J2EE patterns, best practices and design strategies, V2nd
   [Anonymous], 2012, RHAPSODY
   [Anonymous], P 15 C PATT LANG PRO
   [Anonymous], 2008, HUGO TOOL
   [Anonymous], 2012, BORL TOG 2008 ED ECL
   [Anonymous], 2005, SYSTEMATIC REV SOCIA
   [Anonymous], 2011, SPIN PROMELA REFEREN
   [Anonymous], 2008, EX UML
   Azim I., 2005, THESIS U TSUKUBA
   Babitsky D., HIERARCHICAL STATE M
   Benowitz E, 2006, SMC-IT 2006: 2ND IEEE INTERNATIONAL CONFERENCE ON SPACE MISSION CHALLENGES FOR INFORMATION TECHNOLOGY, PROCEEDINGS, P413
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Chauvel F, 2005, LECT NOTES COMPUT SC, V3713, P54, DOI 10.1007/11557432_5
   Chow K.O., 2000, P INT C PAR DISTR PR
   Culwin F., ITALICS E J, V3
   Derezinska Anna, 2008, 2008 International Multiconference on Computer Science and Information Technology, P517, DOI 10.1109/IMCSIT.2008.4747293
   Derezinska A., 2007, SOFTWARE ENG PROGR, P80
   Derezinska A, 2009, INFORM-J COMPUT INFO, V33, P431
   Dominguez E, 2010, METHOD INFORM MED, V49, P571, DOI 10.3414/ME09-01-0038
   Douglass B.P., 2001, P EMB SYST C FALL
   Douglass BrucePowel., 1998, REAL TIME UML DEV EF
   Duby C., 2004, IMPLEMENTING UML STA
   Duby C., 2001, P EMB SYST C FALL
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gentleware, 2012, POS UML CAS TOOL
   Gurp J.V., 1999, P 3 ANN IASTED INT C
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Heinzmann Stefan., 2004, Overload Journal: Association of C C++ Users, P14
   IBM, 2012, IBM RAT ROS
   Jakimi A., 2009, INT J COMPUTER THEOR, V1, P35
   Jakimi A., 2009, INT J ENG TECHNOLOGY, V1, P165, DOI 10.7763/IJET.2009.V1.30
   Khomh F., 2008, P 12 C SOFTW MAINT R
   Kiri K.P., 2008, PROTOCOL SPECIFICATI
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B., 2004, ARXIV
   Knapp A., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P395
   Knapp A., 2002, PROC 5 WSH TOOLS SYS, P59
   Kohler H. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P241, DOI 10.1109/ICSE.2000.870415
   Kohler H.J., 1999, TRRI99205 U PAD
   Lafreniere D., 2000, C/C++ Users Journal, V18, P58
   Lamour L., 1998, P WORKSH REFL PROGR, P81
   Lamour L., 1998, P PATTERN LANGUAGES
   Metz P., 1999, P OBJ TECHN GROUP OT
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Niaz I. A., 2005, INT J COMPUTER INFOR, V6
   Niaz I.A., 2003, INT C SOFTWARE ENG A, P315
   Niaz IA, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P111
   Niaz Iftikhar Azim, 2005, Ph. D. Thesis,
   OMG, 2010, FORMAL20100505 OMG
   OMG, 2007, FORMAL20071102 OMG
   OMG Model Driven Architecture, 2010, OMG MOD DRIV ARCH CO
   Perez B., 2011, THESIS U ZARAGOZA ZA
   Pérez B, 2010, J BIOMED INFORM, V43, P520, DOI 10.1016/j.jbi.2010.02.009
   Pilitowski R, 2007, INNOVATIONS AND ADVANCED TECHNIQUES IN COMPUTER AND INFORMATION SCIENCES AND ENGINEERING, P421, DOI 10.1007/978-1-4020-6268-1_75
   Pintér G, 2004, EUROMICRO CONF PROC, P136, DOI 10.1109/EURMIC.2004.1333365
   Pinter G., 2003, P WORKSH FORM METH R, P45
   Pinter G., 2003, P 10 PHD MIN BUD U T, P18
   Pinter G., 2003, ELECTRON ENG, V47, P087
   Pinter G., 2007, THESIS BUDAPEST U TE
   Samek M, 2000, EMBED SYST PROGRAM, V13, P22
   Samek M., 2002, PRACTICAL STATECHART
   Saude A.V., 2010, P 17 C PATT LANG PRO
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Shalyto A, 2006, NET TECHNOLOGIES 2006, SHORT COMMUNICATION PAPERS PROCEEDINGS, P51
   Shlaer Sally., 1992, Object lifecycles: modeling the world in states
   Sun Microsystems, 2012, JAV TUT
   Teppola Susanna, 2009, Proceedings of the 2009 Fourth International Conference on Software Engineering Advances (ICSEA), P15, DOI 10.1109/ICSEA.2009.11
   Tiella R., 2006, P 5 INT WORKSH CRIT, P93
   Tiella R., 2007, PPPJ 07 P 5 INT S PR, P93
   Tigris.org, 2012, OP SOURC SOFTW ENG T
   Tomura T, 2001, FOURTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P428, DOI 10.1109/ISORC.2001.922868
   Tomura T, 2001, IEEE INT CONF ROBOT, P211, DOI 10.1109/ROBOT.2001.932555
   Villafiorita A, 2009, IEEE T INF FOREN SEC, V4, P651, DOI 10.1109/TIFS.2009.2034903
   Wagstaff K.L., 2008, P 9 INT S ART INT RO
   Yacoub S.M., 1998, P 5 ANN C PATT LANG, P98
NR 82
TC 26
Z9 27
U1 2
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2012
VL 54
IS 10
BP 1045
EP 1066
DI 10.1016/j.infsof.2012.04.008
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 983QK
UT WOS:000307133600001
DA 2024-07-18
ER

PT J
AU Portillo-Rodríguez, J
   Vizcaíno, A
   Piattini, M
   Beecham, S
AF Portillo-Rodriguez, Javier
   Vizcaino, Aurora
   Piattini, Mario
   Beecham, Sarah
TI Tools used in Global Software Engineering: A systematic mapping review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Global Software Development; Distributed Software Engineering; Tool;
   Systematic Mapping Study
ID COLLABORATION
AB Context: This systematic mapping review is set in a Global Software Engineering (GSE) context, characterized by a highly distributed environment in which project team members work separately in different countries. This geographic separation creates specific challenges associated with global communication, coordination and control.
   Objective: The main goal of this study is to discover all the available communication and coordination tools that can support highly distributed teams, how these tools have been applied in GSE, and then to describe and classify the tools to allow both practitioners and researchers involved in GSE to make use of the available tool support in GSE.
   Method: We performed a systematic mapping review through a search for studies that answered our research question, "Which software tools (commercial, free or research based) are available to support Global Software Engineering?" Applying a range of related search terms to key electronic databases, selected journals, and conferences and workshops enabled us to extract relevant papers. We then used a data extraction template to classify, extract and record important information about the GSD tools from each paper. This information was synthesized and presented as a general map of types of GSD tools, the tool's main features and how each tool was validated in practice.
   Results: The main result is a list of 132 tools, which, according to the literature, have been, or are intended to be, used in global software projects. The classification of these tools includes lists of features for communication, coordination and control as well as how the tool has been validated in practice. We found that out the total of 132, the majority of tools were developed at research centers, and only a small percentage of tools (18.9%) are reported as having been tested outside the initial context in which they were developed.
   Conclusion: The most common features in the GSE tools included in this study are: team activity and social awareness, support for informal communication, Support for Distributed Knowledge Management and Interoperability with other tools. Finally, there is the need for an evaluation of these tools to verify their external validity, or usefulness in a wider global environment. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Portillo-Rodriguez, Javier; Vizcaino, Aurora; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
   [Beecham, Sarah] Univ Limerick, Lero The Irish Software Engn Res Ctr, Limerick, Ireland.
C3 Universidad de Castilla-La Mancha; University of Limerick
RP Portillo-Rodríguez, J (corresponding author), Univ Castilla La Mancha, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM javier.portillo@uclm.es; aurora.vizcaino@uclm.es;
   mario.piattini@uclm.es; sarah.beecham@lero.ie
RI Piattini, Mario/F-6271-2013; Beecham, Simon C/M-1544-2016; Vizcaíno,
   Aurora/D-4452-2011
OI Piattini, Mario/0000-0002-7212-8279; Vizcaíno,
   Aurora/0000-0002-2072-5581
FU Ministerio de Ciencia e Innovacion MICINN [TIN2009-13718-C02-01]; FEDER;
   ENGLOBAS [PII2I09-0147-8235]; GLOBALIA [PEII11-0291-5274]; Consejeria de
   Educacion y Ciencia (Junta de Comunidades de Castilla-La Mancha); FEDER
   (Spain); ORIGIN [IDI-2010043 (1-5)]; CDTI; Science Foundation Ireland
   [10/CE/I1855]
FX This work has been funded by the PEGASO/MAGO Project (Ministerio de
   Ciencia e Innovacion MICINN, TIN2009-13718-C02-01) and co-funded by
   FEDER. It is also supported by ENGLOBAS (PII2I09-0147-8235) and GLOBALIA
   (PEII11-0291-5274), funded by Consejeria de Educacion y Ciencia (Junta
   de Comunidades de Castilla-La Mancha) and co-funded by FEDER (Spain), as
   well as, ORIGIN (IDI-2010043 (1-5)) funded by CDTI and FEDER. This
   research is also supported, in part, by Science Foundation Ireland Grant
   10/CE/I1855. Finally, we would also to thank the anonymous reviewers for
   their useful and constructive comments.
CR Abran A., 2004, IEEE COMPUTER SOC 20
   Ågerfalk PJ, 2008, LECT NOTES COMPUT SC, V5007, P1, DOI 10.1007/978-3-540-79588-9_1
   Al-Ani B., 2008, Proc. Int'l Workshop Cooperative and Human Aspects of Software Eng. (CHASE 08), P1, DOI DOI 10.1145/1370114.1370115
   Ali-Babar M., 2008, P 3 WORKSH SHARING R, P45
   [Anonymous], 2008, PROC 12 INT C EVAL A
   Assogba Y, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P961
   Aversano L., 2004, Software Process Improvement and Practice, V9, P239, DOI 10.1002/spip.206
   Babar MA, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P105, DOI 10.1109/ECBS.2008.27
   Bani-Salameh Hani, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P915, DOI 10.1109/CSE.2009.420
   Bartholomew R, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ICGSE.2008.31
   Bauer K., 2009, Proc. Conf. Center for Advanced Studies on Collaborative Research (CASCON 09), P174
   Berkling K, 2007, LECT NOTES COMPUT SC, V4716, P1
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Boden A, 2009, INT CONF GLOBAL SOFT, P18, DOI 10.1109/ICGSE.2009.10
   Boulila N, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P422, DOI 10.1109/ASE.2004.1342781
   Braun A, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P197, DOI 10.1109/APSEC.2002.1182989
   Bruegge B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ICGSE.2006.261227
   Bruegge B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P213, DOI 10.1109/ICGSE.2006.261235
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Calefato F, 2009, 2ND INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING AND APPLICATIONS - SOSEA 2009, P23
   Carmel E., 1999, GLOBAL SOFTWARE TEAM, P269
   Cataldo M., 2009, INT C GLOB SOFTW ENG
   Costa C., 2010, INT C GLOB SOFTW DEV
   Damian D., 2006, INT C SOFTW ENG ICSE
   Dullemond K., 2009, TECHNOLOGICAL SUPPOR, P223
   Ebert C., 2010, GLOBAL SOFTWARE ENG
   Edwards R.L., 2010, ACM INROADS, V1, P48
   Favela J, 2001, IEEE SOFTWARE, V18, P47, DOI 10.1109/52.914742
   Fernandez A., 2004, Software Process Improvement and Practice, V9, P95, DOI 10.1002/spip.199
   Friedman T. L., 2005, The World Is Flat: A Brief History of the Twenty-First Century
   Froehlich J, 2004, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.2004.1317461
   FUGGETTA A, 1993, COMPUTER, V26, P25, DOI 10.1109/2.247645
   Garousi V, 2010, J VISUAL LANG COMPUT, V21, P121, DOI 10.1016/j.jvlc.2010.03.001
   Gupta A, 2007, ACM T INTERNET TECHN, V7, DOI 10.1145/1275505.1275507
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Haynes S. R., 2006, Designing Interactive Systems. DIS2006, P219
   Herbsleb J.D, 2000, ACM C COMP SUPP COOP
   Hill C, 2006, IBM SYST J, V45, P663, DOI 10.1147/sj.454.0663
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Jalali S., 2010, 2010 5 IEEE INT C GL
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Keshlaf Ayad Ali, 2010, Proceedings of the Fifth International Conference on Internet Monitoring and Protection (ICIMP 2010), P22, DOI 10.1109/ICIMP.2010.12
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Krishnamurthy TV, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/ICGSE.2008.8
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Laurent C., 2007, TOOL SUPPORT REQUIRE, P38
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   Legenhausen Malte, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P328, DOI 10.1109/ICGSE.2009.51
   Lester N.G., 2004, POSTPR STEP 17 19 SE, P57
   Lutz B, 2009, INT CONF GLOBAL SOFT, P249, DOI 10.1109/ICGSE.2009.33
   Meisinger M., 2006, Software Process Improvement and Practice, V11, P627, DOI 10.1002/spip.296
   Meyer B, 2008, COMMUN ACM, V51, P66, DOI 10.1145/1378727.1378744
   Norbert S., 2005, ENHANCING GSS BASED
   Petkovic D, 2008, ITICSE '08: PROCEEDINGS OF THE 13TH ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P78
   Prikladnicki R, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P239, DOI 10.1109/ICGSE.2008.35
   Salinger S, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P48
   Sarkar S., 2008, P 1 BANG ANN COMP C, P1
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Sengupta B., 2006, P 28 INT C SOFTW ENG
   Servant F, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P39
   Sinha V, 2006, IEEE SOFTWARE, V23, P52, DOI 10.1109/MS.2006.123
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Spanjers H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ICGSE.2006.261232
   Thissen MR, 2007, SIGMIS CPR 2007: PROCEEDINGS OF THE 2007 ACM SIGMIS CPR CONFERENCE GLOBAL INFORMATION TECHNOLOGY WORKFORCE, P28
   Winkler D., 2010, 14 INT C EV ASSE SOF
   Xu DM, 2009, P INT COMP SOFTW APP, P367, DOI 10.1109/COMPSAC.2009.56
NR 66
TC 72
Z9 79
U1 0
U2 35
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 663
EP 685
DI 10.1016/j.infsof.2012.02.006
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 946WG
UT WOS:000304387600002
DA 2024-07-18
ER

PT J
AU Nejati, S
   Sabetzadeh, M
   Falessi, D
   Briand, L
   Coq, T
AF Nejati, Shiva
   Sabetzadeh, Mehrdad
   Falessi, Davide
   Briand, Lionel
   Coq, Thierry
TI A SysML-based approach to traceability management and design slicing in
   support of safety certification: Framework, tool support, and case
   studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Safety certification; SysML; Traceability; Model slicing
AB Context: Traceability is one of the basic tenets of all safety standards and a key prerequisite for software safety certification. In the current state of practice, there is often a significant traceability gap between safety requirements and software design. Poor traceability, in addition to being a non-compliance issue on its own, makes it difficult to determine whether the design fulfills the safety requirements, mainly because the design aspects related to safety cannot be clearly identified.
   Objective: The goal of this article is to develop a framework for specifying and automatically extracting design aspects relevant to safety requirements. This goal is realized through the combination of two components: (1) A methodology for establishing traceability between safety requirements and design, and (2) an algorithm that can extract for any given safety requirement a minimized fragment (slice) of the design that is sound, and yet easy to understand and inspect.
   Method: We ground our framework on System Modeling Language (SysML). The framework includes a traceability information model, a methodology to establish traceability, and mechanisms for model slicing based on the recorded traceability information. The framework is implemented in a tool, named SafeSlice.
   Results: We prove that our slicing algorithm is sound for temporal safety properties, and argue about the completeness of slices based on our practical experience. We report on the lessons learned from applying our approach to two case studies, one benchmark and one industrial case. Both studies indicate that our approach substantially reduces the amount of information that needs to be inspected for ensuring that a given (behavioral) safety requirement is met by the design. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Nejati, Shiva; Sabetzadeh, Mehrdad; Falessi, Davide; Briand, Lionel] Simula Res Lab, Oslo, Norway.
   [Coq, Thierry] Det Norske Veritas, Dunkerque, France.
RP Nejati, S (corresponding author), Simula Res Lab, Oslo, Norway.
EM shiva@simula.no; mehrdad@simula.no; falessi@simula.no; briand@simula.no;
   thierry.coq@dnv.com
RI Falessi, Davide/AAA-4587-2021; Nejati, Shiva/KBT-7650-2024
OI Sabetzadeh, Mehrdad/0000-0002-4711-8319; Nejati,
   Shiva/0000-0002-0281-8231
CR Abadi M., 1988, Proceedings of the Third Annual Symposium on Logic in Computer Science (Cat. No.88CH2608-8), P165, DOI 10.1109/LICS.1988.5115
   Androutsopoulos K, 2009, LECT NOTES COMPUT SC, V5503, P216
   [Anonymous], 2009, ROAD VEH FU IN PRESS
   [Anonymous], OMG SYST MOD LANG OM
   [Anonymous], 61508 IEC
   [Anonymous], 2007, Software for Dependable Systems: Sufficient Evidence?
   [Anonymous], 2008, A Practical Guide To SysML: The Systems Modeling Language
   [Anonymous], 2008, SURV MOD BAS SYST EN
   [Anonymous], 2011, 420102007 ISO IEC
   [Anonymous], 1992, DO178B RTCA INC
   [Anonymous], THESIS U OSLO
   [Anonymous], 2009, OBJECT ORIENTED SOFT
   Barbey Stephane, 1998, CASE STUDY TESTING O
   BAZZANA G, 1992, ANN R AUT P, V16, P153, DOI 10.1016/0066-4138(92)90024-J
   Binkley D., 1996, Advances in Computers, V43, P1
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Briand L., 2010, 201008 SIM RES LAB
   Briand L., 2009, 2 SRLDNV
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P512, DOI 10.1016/j.infsof.2008.06.002
   Clarke EM, 1999, MODEL CHECKING, P1
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   David P, 2010, RELIAB ENG SYST SAFE, V95, P431, DOI 10.1016/j.ress.2009.11.015
   Egyed A, 2001, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2001.919087
   Ericson CA, 2005, HAZARD ANALYSIS TECHNIQUES FOR SYSTEM SAFETY, P1, DOI 10.1002/0471739421
   Falessi D., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P460
   Goknil Arda, 2009, ECMDA TW 09, P17
   Gomaa H., 2000, DESIGNING CONCURRENT
   Harel D, 2003, SOFTWARE SYSTEM MODE, V2, P82, DOI [10.1007/s10270-002-0015-5, DOI 10.1007/S10270-002-0015-5]
   Holt J., 2008, SysML for Systems Engineering, V7
   Jirapanthong W, 2009, SOFTW SYST MODEL, V8, P117, DOI 10.1007/s10270-007-0066-8
   Juristo N, 1998, KNOWL-BASED SYST, V11, P145, DOI 10.1016/S0950-7051(98)00047-1
   Kagdi H, 2005, PROC IEEE INT CONF S, P635
   Kelly D, 2004, J SYST SOFTWARE, V73, P361, DOI 10.1016/j.jss.2003.10.027
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Lago P, 2010, IEEE SOFTWARE, V27, P20, DOI 10.1109/MS.2010.142
   Lewerentz C., 1995, LNCS, P891
   Mäder P, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P21, DOI 10.1109/TEFSE.2009.5069578
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Panesar-Walawege Rajwinder Kaur, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P335, DOI 10.1109/ICST.2010.12
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Sabetzadeh M., 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P193, DOI 10.1109/HASE.2011.23
   Schäfer W, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P72, DOI 10.1109/FOSE.2007.28
   Soares MD, 2011, J SYST SOFTWARE, V84, P328, DOI 10.1016/j.jss.2010.10.020
   Tip F, 1994, SURVEY PROGRAM SLICI
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Weissman A, 2011, ADV ENG INFORM, V25, P516, DOI 10.1016/j.aei.2011.02.001
   Yue T, 2009, LECT NOTES COMPUT SC, V5795, P484
NR 49
TC 39
Z9 46
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2012
VL 54
IS 6
BP 569
EP 590
DI 10.1016/j.infsof.2012.01.005
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 922ZH
UT WOS:000302587100004
DA 2024-07-18
ER

PT J
AU von Wangenheim, CG
   Savi, R
   Borgatto, AF
AF von Wangenheim, Christiane Gresse
   Savi, Rafael
   Borgatto, Adriano Ferreti
TI DELIVER! - An educational game for teaching Earned Value Management in
   computing courses
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Project management; Serious game; Teaching; Education; Earned Value
   Management; Computing
AB Context: To meet the growing need for education in Software Project Management, educational games have been introduced as a beneficial instructional strategy. However, there are no low-cost board games openly available to teach Earned Value Management (EVM) in computing programs. Objective: This paper presents an educational board game to reinforce and teach the application of EVM concepts in the context of undergraduate computing programs complementing expository lessons on EVM basics.
   Method: The game has been developed based on project management fundamentals and teaching experience in this area. So far, it has been applied in two project management courses in undergraduate computing programs at the Federal University of Santa Catarina. We evaluated motivation, user experience and the game's contribution to learning through case studies on Kirkpatrick's level one based on the perception of the students.
   Results: First results of the evaluation of the game indicate a perceived potential of the game to contribute to the learning of EVM concepts and their application. The results also point out a very positive effect of the game on social interaction, engagement, immersion, attention and relevance to the course objectives.
   Conclusion: We conclude that the game DELIVER! can contribute to the learning of the EVM on the cognitive levels of remembering, understanding and application. The illustration of the application of EVM through the game can motivate its usefulness. The game has proven to be an engaging instructional strategy, keeping students on the task and attentive. In this respect, the game offers a possibility to complement traditional instructional strategies for teaching EVM. In order to further generalize and to strengthen the validity of the results, it is important to obtain further evaluations. (C) 2011 Elsevier B.V. All rights reserved.
C1 [von Wangenheim, Christiane Gresse; Borgatto, Adriano Ferreti] Univ Fed Santa Catarina, Informat & Stat Dept, BR-88049200 Florianopolis, SC, Brazil.
   [Savi, Rafael] Univ Fed Santa Catarina, Knowledge Engn & Management Dept, BR-88049200 Florianopolis, SC, Brazil.
C3 Universidade Federal de Santa Catarina (UFSC); Universidade Federal de
   Santa Catarina (UFSC)
RP von Wangenheim, CG (corresponding author), Univ Fed Santa Catarina, Dept Informat & Stat INE, BR-88049200 Florianopolis, SC, Brazil.
EM gresse@gmail.com; rafaelsavi@gmail.com; borgatto@inf.ufsc.br
RI Incod, Inct/J-8375-2013; von Wangenheim, Aldo/AAL-7158-2020; Borgatto,
   Adriano/AAF-9796-2021; von Wangenheim, Christiane Gresse/H-3685-2013
OI von Wangenheim, Aldo/0000-0003-4532-1417; von Wangenheim, Christiane
   Gresse/0000-0002-6566-1606
FU CNPq (Conselho Nacional de Desenvolvimento Cientifico e Tecnologico)
FX This work was supported by the CNPq (Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico - www.cnpq.br), an entity of
   the Brazilian government focused on scientific and technological
   development.
CR Abt C. C., 2002, Serious Games
   Alliger GM, 1997, PERS PSYCHOL, V50, P341, DOI 10.1111/j.1744-6570.1997.tb00911.x
   Anderson L. W., 2001, A Taxonomy for Learning, Teaching, and Assessing: A Revision of Bloom's Taxonomy of Educational Objectives
   [Anonymous], 2006, INFORM WEEK     0320
   [Anonymous], 2005, PRACT STAND EARN VAL
   [Anonymous], 2005, COMPTING CURRICULA 2
   [Anonymous], 2008, A Guide to the Project Management Body of Knowledge (PMBOK Guide), V4th
   [Anonymous], 2008, Measuring the User Experience Collecting, Analyzing, and Presenting Usability Metrics
   [Anonymous], 961 U S AL COLL ED
   Barros M. O., 2006, Software Process Improvement and Practice, V11, P411, DOI 10.1002/spip.279
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bennatan EM., 2011, SOFTWARE PROJECT MAN
   Bourne L, 2005, JAFA C AUCKL NZ
   Bruns B., 1999, Multimediales Lernen im Netz. Leitfaden fur Entscheider und Planer
   CHOI JI, 1995, ETR&D-EDUC TECH RES, V43, P53, DOI 10.1007/BF02300472
   DeVellis R. F., 2016, Scale development: Theory and applications, DOI DOI 10.1037/CCP0000482
   Drappa A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P199, DOI 10.1109/ICSE.2000.870411
   FALCHIKOV N, 1989, REV EDUC RES, V59, P395, DOI 10.3102/00346543059004395
   Gamez E.H.C., 2009, THESIS UCL INTERACTI
   Itin C.M., 1999, Journal of Experiential Education, V29, P91, DOI [https://doi.org/10.1177/105382599902200206, DOI 10.1177/105382599902200206, 10.1177/105382599902200206]
   Jennett C, 2008, INT J HUM-COMPUT ST, V66, P641, DOI 10.1016/j.ijhcs.2008.04.004
   Kafai Y. B., 2001, C PLAYING RUL CULT P
   Keller J. M., 1987, Journal of Instructional Development, V10, P2, DOI [10.1007/BF02905780, DOI 10.1007/BF02905780]
   Keller JM, 2010, MOTIVATIONAL DESIGN FOR LEARNING AND PERFORMANCE: THE ARCS MODEL APPROACH, P1, DOI 10.1007/978-1-4419-1250-3
   Kirkpatrick D., 2006, Evaluating training programs: the four levels
   Lethbridge TC, 2000, COMPUTER, V33, P44, DOI 10.1109/2.841783
   Moody DL., 2003, Evaluating the effectiveness of learning interventions: an information systems case study
   Navarro EO, 2007, CONF SOFTW ENG EDUC, P195, DOI 10.1109/CSEET.2007.14
   Nellore R, 2001, IEEE T ENG MANAGE, V48, P164, DOI 10.1109/17.922476
   Percival F., 1993, HDB ED TECHNOLOGY
   Poels K., 2007, P 2007 C FUT PLAY
   Prensky Marc, 2001, Digital Game-Based Learning
   Pyster AB, 2005, IEEE SOFTWARE, V22, P18, DOI 10.1109/MS.2005.137
   Ross JA, 1998, TEACH TEACH EDUC, V14, P463, DOI 10.1016/S0742-051X(97)00054-1
   Rust J.Golombok., 1999, MODERN PSYCHOMETRICS
   Saskatchewan Education, 1991, INSTR APPR FRAM PROF
   Savi R., 2011, ANAL EVALUATION MODE
   Savi R., 2008, Revista Novas Tecnologias na Educacao, Porto Alegre, v, V6
   Sweetser P, 2005, COMPUTERS ENTERTAINM, V3, P3, DOI [10.1145/1077246.1077253, DOI 10.1145/1077246.1077253]
   Takatalo J, 2010, HUM-COMPUT INT-SPRIN, P23, DOI 10.1007/978-1-84882-963-3_3
   Taran G, 2007, CONF SOFTW ENG EDUC, P211, DOI 10.1109/CSEET.2007.54
   Topping K.J., 2003, Optimizing new modes of assessment: in search of qualities and standards
   von Wangenheim CG, 2009, IEEE SOFTWARE, V26, P92, DOI 10.1109/MS.2009.54
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ye E., 2007, P 37 ANN C FRONT ED
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 46
TC 60
Z9 64
U1 0
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2012
VL 54
IS 3
BP 286
EP 298
DI 10.1016/j.infsof.2011.10.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 898KM
UT WOS:000300741300005
DA 2024-07-18
ER

PT J
AU Conejero, JM
   Figueiredo, E
   Garcia, A
   Hernández, J
   Jurado, E
AF Conejero, Jose M.
   Figueiredo, Eduardo
   Garcia, Alessandro
   Hernandez, Juan
   Jurado, Elena
TI On the relationship of concern metrics and requirements maintainability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Product lines; Crosscutting; Concern metrics;
   Maintainability; Stability
ID SOFTWARE; STABILITY
AB Context: Maintainability has become one of the most essential attributes of software quality, as software maintenance has shown to be one of the most costly and time-consuming tasks of software development. Many studies reveal that maintainability is not often a major consideration in requirements and design stages, and software maintenance costs may be reduced by a more controlled design early in the software life cycle. Several problem factors have been identified as harmful for software maintainability, such as lack of upfront consideration of proper modularity choices. In that sense, the presence of crosscutting concerns is one of such modularity anomalies that possibly exert negative effects on software maintainability. However, to the date there is little or no knowledge about how characteristics of crosscutting concerns, observable in early artefacts, are correlated with maintainability.
   Objective: In this setting, this paper introduces an empirical analysis where the correlation between crosscutting properties and two ISO/IEC 9126 maintainability attributes, namely changeability and stability, is presented.
   Method: This correlation is based on the utilization of a set of concern metrics that allows the quantification of crosscutting, scattering and tangling.
   Results: Our study confirms that a change in a crosscutting concern is more difficult to be accomplished and that artefacts addressing crosscutting concerns are found to be less stable later as the system evolves. Moreover, our empirical analysis reveals that crosscutting properties introduce non-syntactic dependencies between software artefacts, thereby decreasing the quality of software in terms of changeability and stability as well. These subtle dependencies cannot be easily detected without the use of concern metrics.
   Conclusion: The correlation provides evidence that the presence of certain crosscutting properties negatively affects to changeability and stability. The whole analysis is performed using as target cases three software product lines, where maintainability properties are of upmost importance not only for individual products but also for the core architecture of the product line. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Conejero, Jose M.; Hernandez, Juan; Jurado, Elena] Univ Extremadura, Quercus Software Engn Grp, Extremadura 10071, Spain.
   [Figueiredo, Eduardo] Univ Fed Minas Gerais, Dept Comp, Belo Horizonte, MG, Brazil.
   [Garcia, Alessandro] Pontif Catholic Univ Rio de Janeiro, Dept Informat, Rio De Janeiro, Brazil.
C3 Universidad de Extremadura; Universidade Federal de Minas Gerais
RP Conejero, JM (corresponding author), Univ Extremadura, Quercus Software Engn Grp, Avda Univ S-N, Extremadura 10071, Spain.
EM chemacm@unex.es; figueiredo@dcc.ufmg.br; afgarcia@inf.puc-rio.br;
   juanher@unex.es; elenajur@unex.es
RI Manzano, José M. Conejero/AAF-9336-2019; Hernandez, Juan/L-5065-2014
OI Manzano, José M. Conejero/0000-0003-2640-679X; Hernandez,
   Juan/0000-0002-6343-7395
FU European Commission [IST-2-004349]; MEC [TIN2008-02985, TIN2011-27340];
   University of Extremadura
FX This work has been supported in part by the European CommissionGrant
   IST-2-004349: European Network of Excellence on AOSD (AOSD-Europe), by
   MEC and FEDER under Contracts TIN2008-02985 and TIN2011-27340, by
   University of Extremadura (research initiation program).
CR Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   [Anonymous], P 2 INT WORKSH VAR M
   [Anonymous], AMPLE PROJECT DELIVE
   [Anonymous], P 15 EUR C SOFTW MAI
   [Anonymous], P 17 INT C PROGR COM
   [Anonymous], LNCS
   [Anonymous], P INT C FUND APPR SO
   [Anonymous], P 14 INT S FDN SOFTW
   [Anonymous], MINING EARLY ASPECTS
   [Anonymous], P 2 INT C SOFTW LANG
   [Anonymous], P FSE 14 INT C FDN S
   [Anonymous], P 20 INT C SOFTW ENG
   [Anonymous], SOFTWARE MAINTENANCE
   [Anonymous], P 21 EUR C OBJ OR PR
   [Anonymous], P WORKSH ARCH CTR EV
   [Anonymous], P WORKSH MDD PROD LI
   [Anonymous], ANN SOFTWARE ENG
   [Anonymous], P 20 INT C SOFTW ENG
   [Anonymous], 1997, INTRO ERROR ANAL STU
   [Anonymous], LNCS
   [Anonymous], J SYSTEMS SOFTWARE
   [Anonymous], P INT C SOFTW MAINT
   [Anonymous], P EARL ASP WORKSH IC
   [Anonymous], P 21 IEEE INT S SOFT
   [Anonymous], SJTUCSETR0701
   [Anonymous], P 10 INT C ASP OR SO
   [Anonymous], P 32 INT C SOFTW ENG
   [Anonymous], P 1 WORKSH ASP REV E
   [Anonymous], 2005, THESIS U BRIT COLUMB
   [Anonymous], P JOINT 8 WORK IEEE
   [Anonymous], P 21 INT C SOFTW ENG
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Balci O, 2003, PROCEEDINGS OF THE 2003 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P150, DOI 10.1109/WSC.2003.1261418
   Baniassad E, 2006, IEEE SOFTWARE, V23, P61, DOI 10.1109/MS.2006.8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   Colyer A., 2004, COMP0012004 LANC U
   Conejero JM, 2009, LECT NOTES BUS INF P, V33, P136
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Galorath D.D., 2008, Software Tech News, V11
   Garcia A, 2008, COMMUN ACM, V51, P75, DOI 10.1145/1342327.1342341
   Griss ML, 2000, SPRINGER INT SER ENG, V576, P271
   Groher I, 2009, LECT NOTES COMPUT SC, V5560, P111, DOI 10.1007/978-3-642-03764-1_4
   Hovsepyan A., 2010, P 9 INT C ASP OR SOF, P85
   ISO, 2001, Stan-dard ISO/IEC 9126-1
   Kang Kyo C, 1990, Technical Report
   Kelly D, 2006, IEEE T SOFTWARE ENG, V32, P315, DOI 10.1109/TSE.2006.42
   Kemerer CF, 1998, COMMUN ACM, V41, P63, DOI 10.1145/280324.280334
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Koskinen Jussi., 2003, Software maintenance costs
   Lee K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P103
   Molesini A, 2010, J SYST SOFTWARE, V83, P711, DOI 10.1016/j.jss.2009.05.022
   Notkin D, 2009, J COMPUT SCI TECH-CH, V24, P189, DOI 10.1007/s11390-009-9217-4
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Revelle M, 2005, PROG COMPREHEN, P23, DOI 10.1109/WPC.2005.43
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Schneidewind NF, 2002, COMPUTER, V35, P77, DOI 10.1109/2.982919
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Voelter M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P233, DOI 10.1109/SPLINE.2007.23
   Yip S. W. L., 1994, Proceedings. 1994 First Asia-Pacific Software Engineering Conference, P70, DOI 10.1109/APSEC.1994.465272
NR 63
TC 11
Z9 13
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2012
VL 54
IS 2
BP 212
EP 238
DI 10.1016/j.infsof.2011.09.003
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 864ES
UT WOS:000298220400006
DA 2024-07-18
ER

PT J
AU Johri, A
AF Johri, Aditya
TI Sociomaterial bricolage: The creation of location-spanning work
   practices by global software developers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Virtual teams; Interpretive analysis;
   Sociomaterial bricolage; Qualitative field study; Work practices
ID MEDIA RICHNESS; INFORMATION; TECHNOLOGY; COMMUNICATION; KNOWLEDGE;
   INFRASTRUCTURE; CONSEQUENCES; ECOLOGY
AB Context: Studies on global software development have documented severe coordination and communication problems among coworkers due to geographic dispersion and consequent dependency on technology. These problems are exacerbated by increase in the complexity of work undertaken by global teams. However, despite these problems, global software development is on the rise and firms are adopting global practices across the board, raising the question: What does successful global software development look like and what can we learn from its practitioners?
   Objective: This study draws on practice-based studies of work to examine successful work practices of global software developers. The primary aim of this study was to understand how workers develop practices that allow them to function effectively across geographically dispersed locations.
   Method: An ethnographically-informed field study was conducted with data collection at two international locations of a firm. Interview, observation and archival data were collected. A total of 42 interviews and 3 weeks of observations were conducted.
   Results: Teams spread across different locations around the world developed work practices through sociomaterial bricolage. Two facets of technology use were necessary for the creation of these practices: multiplicity of media and relational personalization at dyadic and team levels. New practices were triggered by the need to achieve a work-life balance, which was disturbed by global development. Reflecting on my role as a researcher, I underscore the importance of understanding researchers' own frames of reference and using research practices that mirror informants' work practices.
   Conclusion: Software developers on global teams face unique challenges which necessitate a shift in their work practices. Successful teams are able to create practices that span locations while still being tied to location based practices. Inventive use of material and social resources is central to the creation of these practices. (C) 2011 Elsevier B.V. All rights reserved.
C1 Virginia Tech, Blacksburg, VA 24061 USA.
C3 Virginia Polytechnic Institute & State University
RP Johri, A (corresponding author), Virginia Tech, 616 McBryde Hall, Blacksburg, VA 24061 USA.
EM ajohri@vt.edu
OI Johri, Aditya/0000-0001-9018-7574
FU Div Of Engineering Education and Centers; Directorate For Engineering
   [0954034] Funding Source: National Science Foundation
CR [Anonymous], 2007, HUMAN MACHINE RECONF
   [Anonymous], P 2008 INT WORKSH CO
   [Anonymous], 1986, POWER ACTION BELIEF
   [Anonymous], 1967, SAVAGE MIND
   [Anonymous], 1987, SCI ACTION CAMBRIDGE
   Armstrong D.J., 1995, DIVERSITY WORK TEAMS, P187
   Avram G, 2009, COMPUT SUPP COOP W J, V18, P477, DOI 10.1007/s10606-009-9099-6
   Baker T, 2005, ADMIN SCI QUART, V50, P329, DOI 10.2189/asqu.2005.50.3.329
   Barad K, 2003, SIGNS, V28, P801, DOI 10.1086/345321
   BARLEY SR, 1986, ADMIN SCI QUART, V31, P78, DOI 10.2307/2392767
   Barley SR, 2001, ORGAN SCI, V12, P76, DOI 10.1287/orsc.12.1.76.10122
   Boden A, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P235
   Bourdieu P, 1990, LOGIC PRACTICE
   Brown J.S., 2002, SOCIAL LIFE INFORM
   Brown JS, 1991, ORGAN SCI, V2, P40, DOI 10.1287/orsc.2.1.40
   Brown JS, 2001, ORGAN SCI, V12, P198, DOI 10.1287/orsc.12.2.198.10116
   Buscher M., 2001, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V10, P1, DOI 10.1023/A:1011293210539
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Cramton C.D., 2002, DISTRIBUTED WORK
   Cramton CD, 2001, ORGAN SCI, V12, P346, DOI 10.1287/orsc.12.3.346.10098
   CRAMTON CD, 2005, RES ORG BEHAV
   Crowston K., 2007, INFORM SOFTWARE TECH
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   DAFT RL, 1984, ACAD MANAGE REV, V9, P284, DOI 10.2307/258441
   de Certeau Michel., 1980, The Practice of Everyday Life
   Dennis AR, 1998, INFORM SYST RES, V9, P256, DOI 10.1287/isre.9.3.256
   Dittrich Y, 2007, QUALITATIVE SOFTWARE, V49
   Dube L., 1999, ACCOUNTING MANAGEMEN, V9, P223
   Espinosa J.A., 2001, 22 INT C INF SYST NE
   FIOL M, 2005, ORGAN SCI, V16, P9
   Friedman T. L., 2005, The World Is Flat: A Brief History of the Twenty-First Century
   Herbsleb J. D., 2000, P COMP SUPP COOP WOR
   Hinds P., 2002, Distributed Work
   Hinds Pamela J, 2005, ORG SCI
   Hinds PJ, 2003, ORGAN SCI, V14, P615, DOI 10.1287/orsc.14.6.615.24872
   Jarvenpaa SL, 1999, ORGAN SCI, V10, P791, DOI 10.1287/orsc.10.6.791
   JOHRI A, 2009, P 39 ASEE IEEE FRONT
   Johri A., 2008, P 38 ASEE IEEE FRONT
   Johri A, 2010, INT J ENG EDUC, V26, P278
   Krueger JI, 2004, BEHAV BRAIN SCI, V27, P313, DOI 10.1017/S0140525X04000081
   Levina N, 2005, MIS QUART, V29, P335
   Lofland J., 1994, ANALYZING SOCIAL SET
   Lutters WG, 2007, INFORM SOFTWARE TECH, V49, P576, DOI 10.1016/j.infsof.2007.02.013
   Majchrzak A, 2000, MIS QUART, V24, P569, DOI 10.2307/3250948
   Marshall C., 1995, Designing qualitative research
   Nardi B. A., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P91, DOI 10.1007/s10606-004-8127-9
   O'Leary Michael., 2002, DISTRIBUTED WORK, P27
   Orlikowski WJ, 2008, ACAD MANAG ANN, V2, P433, DOI 10.1080/19416520802211644
   Orr J., 1996, TALKING MACHINES
   Pipek V., 2009, J ASS INFORM SYSTEMS, V10, P306, DOI DOI 10.17705/1jais.00195
   SCACCHI W, 1991, SOFTWARE ENG J, V6, P355, DOI 10.1049/sej.1991.0036
   Schatzki T., 2001, PRACTICE TURN CONT T, P42, DOI DOI 10.4324/9780203977453
   Schatzki T.R., 2001, PRACTICE TURN CONT T, V44
   SCHMIDT K, 2002, P 5 INT C DES COOP S
   Schultze U, 2000, J STRATEGIC INF SYST, V9, P193, DOI 10.1016/S0963-8687(00)00043-3
   Semin G., 2002, COGN SYST RES, V3, P385, DOI [DOI 10.1016/S1389-0417(02)00049-9, 10.1016/S1389-0417(02)00049-9]
   Smith ER, 2004, ADV EXP SOC PSYCHOL, V36, P53, DOI 10.1016/S0065-2601(04)36002-8
   Spradley J.P., 2016, The ethnographic interview
   Sproull L., 1991, Connections: New Ways of Working in the Networked Organization
   Star SL, 1996, INFORM SYST RES, V7, P111, DOI 10.1287/isre.7.1.111
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Strauss A.L., 2003, QUALITATIVE ANAL SOC
   Suchman L, 2000, ORGANIZATION, V7, P311, DOI 10.1177/135050840072007
   Watson-Manheim MB, 2007, MIS QUART, V31, P267
   Webb J., 1966, Unobtrusive measures: Nonreactive measures in the social sciences
   WEISBAND SP, 1995, ACAD MANAGE J, V38, P1124, DOI 10.5465/256623
   Zuboff S., 1988, In the age of the smart machine: the future of work and power
NR 67
TC 45
Z9 51
U1 0
U2 21
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 955
EP 968
DI 10.1016/j.infsof.2011.01.014
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 795DC
UT WOS:000292950700006
DA 2024-07-18
ER

PT J
AU Palacios, M
   García-Fanjul, J
   Tuya, J
AF Palacios, Marcos
   Garcia-Fanjul, Jose
   Tuya, Javier
TI Testing in Service Oriented Architectures with dynamic binding: A
   mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software testing; Service Oriented Architectures; SOA; Dynamic binding;
   Mapping study; Systematic literature review
ID WEB SERVICES; GENERATION; SELECTION; FRAMEWORK
AB Context: Service Oriented Architectures (SOA) have emerged as a new paradigm to develop interoperable and highly dynamic applications.
   Objective: This paper aims to identify the state of the art in the research on testing in Service Oriented Architectures with dynamic binding.
   Method: A mapping study has been performed employing both manual and automatic search in journals, conference/workshop proceedings and electronic databases.
   Results: A total of 33 studies have been reviewed in order to extract relevant information regarding a previously defined set of research questions. The detection of faults and the decision making based on the information gathered from the tests have been identified as the main objectives of these studies. To achieve these goals, monitoring and test case generation are the most proposed techniques testing both functional and non-functional properties. Furthermore, different stakeholders have been identified as participants in the tests, which are performed in specific points in time during the life cycle of the services. Finally, it has been observed that a relevant group of studies have not validated their approach yet.
   Conclusions: Although we have only found 33 studies that address the testing of SOA where the discovery and binding of the services are performed at runtime, this number can be considered significant due to the specific nature of the reviewed topic. The results of this study have contributed to provide a body of knowledge that allows identifying current gaps in improving the quality of the dynamic binding in SOA using testing approaches. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Palacios, Marcos; Garcia-Fanjul, Jose; Tuya, Javier] Univ Oviedo, Dept Comp Sci, Gijon 33204, Asturias, Spain.
C3 University of Oviedo
RP Palacios, M (corresponding author), Univ Oviedo, Dept Comp Sci, Campus Viesques, Gijon 33204, Asturias, Spain.
EM palacios@lsi.uniovi.es; jgfanjul@uniovi.es; tuya@uniovi.es
RI García-Fanjul, José/F-4855-2016; Tuya, Javier/L-6850-2014
OI García-Fanjul, José/0000-0003-3225-3304; Tuya,
   Javier/0000-0002-1091-934X
FU Department of Science and Innovation (Spain); ERDF
   [TIN2007-67843-006-01, TIN2010-20057-C03-01]; FICYT (Government of the
   Principality of Asturias) [BP09-075]
FX This work was partially funded by the Department of Science and
   Innovation (Spain) and ERDF funds within the National Program for
   Research, Development and Innovation, Projects Test4SOA
   (TIN2007-67843-006-01) and Test4DBS (TIN2010-20057 -C03-01) and FICYT
   (Government of the Principality of Asturias) Grant BP09-075.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Al-Masri Eyhab, 2008, IT Professional, V10, P24, DOI 10.1109/MITP.2008.59
   ANDRIEWC A, WEB SERVICES AGREEME
   [Anonymous], 2007, Semantic Annotations for WSDL and XML Schema
   [Anonymous], OASIS WEB SERVICES B
   [Anonymous], ISI Web of Knowledge
   [Anonymous], 2007, EBSE2007001
   [Anonymous], 2007, ANAL, DOI DOI 10.1016/J.JPHA.2021.03.003
   [Anonymous], OWL S SEMANTIC MARKU
   [Anonymous], P 27 INT C VER LARG
   [Anonymous], WEB SERVICE DESCRIPT
   [Anonymous], TR1001 DEP COMP SCI
   [Anonymous], UNIVERSAL DESCRIPTIO
   [Anonymous], SIMPLE OBJECT ACCESS
   Bai XY, 2007, P INT COMP SOFTW APP, P233
   Balke WT, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P621
   BARESI L, 2010, IEEE T SOFTW ENG 02
   BARESI L, 2004, ICSOC 04, V4, P193
   BARESI L, 2007, TEST ANAL WEB SERVIC
   BARESI L, 2007, ESSPE 2007, P11
   BENHALIMA R, 2008, IEEE INT C WEB SERV, P104
   Bertolino A, 2005, EUROMICRO-SEAA 2005: 31ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P134
   BERTOLINO A, 2007, ICWE, P16
   Bertolino A, 2008, LECT NOTES COMPUT SC, V5047, P266, DOI 10.1007/978-3-540-68524-1_19
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   BIANCULLI D, 2008, ICWS 2008, P621
   BIANCULLI D, 2010, WWW 2010
   BUDGEN D, 2008, P PPIG 2008 LANC U, P195
   CANFORA G, 2006, IT PROFESSIONAL, V8
   CANFORA G, 2009, LNCS, V5413, P18
   CANFORA G, 2006, WS MATE 2006, P3
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Di Penta M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1090
   DRANIDIS D, 2007, COMPUTING TELEINFORM, V1, P36
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   ENDO AT, 2010, 4 BRAZ WORK IN PRESS, P10
   Ernst M.D., 2006, Proceedings of WS-MaTe-2006, International Workshop on Web Services-Modeling and Testing, P123
   Erradi A, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P99, DOI 10.1109/ECOWS.2007.31
   GORBENKO A, 2008, COMPSAC 08, P1023
   Hielscher J, 2008, LECT NOTES COMPUT SC, V5377, P122, DOI 10.1007/978-3-540-89897-9_11
   *INT ORG STAND, 2001, 9126 ISOIEC
   *ISO IEC, 2006, 24765 ISOIEO
   Jurca R., 2007, PROC INT C WORLD WID, P1003
   Kitchenham B., 2004, ARXIV
   KITCHENHAM BA, 2010, EASE 10
   Kourtesis D, 2010, PROD PLAN CONTROL, V21, P130, DOI 10.1080/09537280903441922
   Kourtesis D, 2008, INT FED INFO PROC, V283, P473
   Liu Y., 2004, 13 INT WORLD WIDE WE, P66, DOI DOI 10.1145/1013367.1013379
   Lohmann M., 2007, Test and Analysis of Web Services, P173
   Mendonça NC, 2008, J SYST SOFTWARE, V81, P1346, DOI 10.1016/j.jss.2007.11.002
   MOSER O, 2008, WWW 08, P21
   MOSINCAT A, 2009, SOCA 09
   ORIOL M, 2009, THESIS BIBLIOTECA RE
   ORIOL M, 2008, MONA
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Papazoglou MP, 2007, VLDB J, V16, P389, DOI 10.1007/s00778-007-0044-3
   PARK Y, 2009, COMPSAC 09 P 33 ANN, V1, P107
   Ran S., 2003, ACM SIGECOM EXCHANGE, V4, P1, DOI DOI 10.1145/844357.844360
   Seo YJ, 2005, LECT NOTES COMPUT SC, V3605, P65
   SHAW M, 2003, ICSE, P726
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Szydlo T, 2008, LECT NOTES COMPUT SC, V5101, P307, DOI 10.1007/978-3-540-69384-0_36
   Tosi Davide, 2009, International Journal of Autonomic Computing, V1, P58, DOI 10.1504/IJAC.2009.024500
   Tsai WT, 2005, IEICE T INF SYST, VE88D, P2691, DOI 10.1093/ietisy/e88-d.12.2691
   Tsai WT, 2005, P INT COMP SOFTW APP, P101
   Tsai WT, 2004, P INT COMP SOFTW APP, P170
   Tsai WT, 2003, EIGHTH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE SYSTEMS, PROCEEDINGS, P131
   Verheecke B, 2004, LECT NOTES COMPUT SC, V3250, P15
   XIA J, 2006, COMPSAC 06, P359
   Xiaoying Bai, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P84, DOI 10.1109/COMPSAC.2008.75
   Xiong Z, 2008, IEEE INT C NETW SENS, P1577
   Yoon SH, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P808, DOI 10.1109/ICWS.2004.1314829
   Zakaria Z, 2009, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC.2009.72
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   EL COMPENDEX
   DBLP DIGITAL BIBLIOG
NR 78
TC 27
Z9 28
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2011
VL 53
IS 3
BP 171
EP 189
DI 10.1016/j.infsof.2010.11.014
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 734PT
UT WOS:000288348500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Engström, E
   Runeson, P
AF Engstrom, Emelie
   Runeson, Per
TI Software product line testing - A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product line testing; Testing; Systematic mapping; Systematic
   literature review
AB Context: Software product lines (SPL) are used in industry to achieve more efficient software development. However, the testing side of SPL is underdeveloped.
   Objective: This study aims at surveying existing research on SPL testing in order to identify useful approaches and needs for future research.
   Method: A systematic mapping study is launched to find as much literature as possible, and the 64 papers found are classified with respect to focus, research type and contribution type.
   Results: A majority of the papers are of proposal research types (64%). System testing is the largest group with respect to research focus (40%), followed by management (23%). Method contributions are in majority.
   Conclusions: More validation and evaluation research is needed to provide a better foundation for SPL testing. (c) 2010 Elsevier B.V. All rights reserved.
C1 [Engstrom, Emelie; Runeson, Per] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 Lund University
RP Engström, E (corresponding author), Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
EM emelie.engstrom@cs.lth.se; per.runeson@cs.lth.se
RI Runeson, Per/H-5113-2019; Engström, Emelie/AAG-7808-2019
OI Runeson, Per/0000-0003-2795-4851; Engström, Emelie/0000-0001-6736-9425
CR Afzal W., 2008, 20 INT C SOFTW ENG K
   Al Dallal Jehad, 2008, Journal of Software, V3, P11, DOI 10.4304/jsw.3.5.11-25
   [Anonymous], INT WORKSH SOFTW PRO
   [Anonymous], 2008, PROC 12 INT C EVAL A
   Bailey J., 2007, 1 INT S EMP SOFTW EN
   BASHARDOUSTTAJA.S, 2008, 13 IEEE INT C ENG CO, P98
   BERTOLINO A, 2003, 5 INT WORKSH SOFTW P
   Bertolino A., 2006, SOFTWARE PRODUCT LIN
   BERTOLINO A, 2003, P 9 EUR SOFTW ENG C, P355
   BOSCH J, 2000, ADOPTING EVOLVING PR
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   CONDRON C, 2004, INT WORKSH SOFTW PRO
   DENGER C, 2006, P 5 INT SOFTW METR S
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   DOWIE U, 2005, P 13 EUR C INF SYST
   Duenas J.C., 2004, 1 EUR WORKSH MOD DRI
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   FENG Y, 2007, P 31 ANN INT COMP SO
   GANESAN D, 2007, P SOFTW PROD LIN C S
   GANESAN D, 2005, P INT WORKSH SOFTW P, P23
   GEPPERT BJ, 2004, 8 INT C SOFTW REUS M
   GHANAM Y, 2008, 5 SPLIT WORKSH SPLC
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   GUSTAFSSON T, 2007, INT WORKSH SOFTW PRO
   HARTMANN J, 2004, INT WORKSH SOFTW PRO, P58
   Jaring M, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/ICCBSS.2008.9
   Jin-hua L., 2008, INT S COMP SCI COMP
   KAHSAI T, 2008, 6 IEEE INT C SOFTW E, P10
   Kamsties E., 2003, International Workshop on Software Product-Family Engineering, P6
   Kang S, 2007, 2007 CIT: 7TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P921
   Kauppinen R., 2004, P INT WORKSH SOFTW P, P7
   KISHI T, 2004, SOFTW PROD LIN TEST
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Knauber P., 2004, INT WORKSH SOFTW PRO
   KNAUBER P, 2005, P INT WORKSH SOFTW P
   Kolb R., 2003, Proceedings of the 7th Conference on Quality Engineering in Software Technology, CONQUEST, P81
   KOLB R, 2003, 5 GPCE YOUNG RES WOR
   KOLB R, 2006, P ISSTA 2006 WORKSH
   Kolb R, 2006, ADV MANAG INFORM SYS, V2, P123
   LAMANCHA BP, 2009, 4 INT C SOFTW DAT TE, P23
   LI JJ, 2007, P INT WORKSH SOFTW P
   MCGREGOR JD, 2004, P INT WORKSH SOFTW P, P45
   MCGREGOR JD, 2008, P 5 INT WORKSH SOFTW, P27
   MCGREGOR JD, CMUSEI2001TR022
   MCGREGOR JD, 2001, P 2 INT WORKSH SOFTW, P89
   Meyer M., 1997, The power of product platforms
   MISHRA S, 2006, P CONC SPEC PROGR WO, P243
   Muccini H, 2003, ELECT NOTES THEORETI, V82
   NEBUT C, 2003, INT WORKSH PROD FAM
   NEBUT C, 2006, ENG MANAGEMENT, P447
   NEBUT C, 2003, P 18 IEEE INT C AUT
   NEBUT C, 2002, INT WORKSH REQ ENG P
   OLIMPIEW E, 2006, INT WORKSH SOFTW PRO
   OLIMPIEW EM, 2005, 1 WORKSH ADV MOD BAS
   OLIMPIEW EM, 2005, INT WORKSH SOFTW PRO, P8
   OLIMPIEW EM, 2008, INT WORKSH SOFTW PRO
   OSTER S, 2008, P 6 INT FUJ DAYS, P48
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl K, 2006, COMMUN ACM, V49, P78, DOI 10.1145/1183236.1183271
   Ramesh V, 2004, J SYST SOFTWARE, V70, P165, DOI [10.1016/S0164-1212(03)00015-3, 10.1016/S0164-1212(03)00014-1]
   REIS S, 2007, LNCS, V4422
   Reis S., 2006, P INT WORKSHOP SOFTW, P5
   Reuys A, 2005, LECT NOTES COMPUT SC, V3520, P519
   Reuys A., 2006, Software Product Lines, P479
   Reuys A, 2003, P INT WORKSH PROD LI
   Runeson P., 2009, 13 INT C EMP ASS EV
   Scheidemann KD, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P75, DOI 10.1109/SPLINE.2006.1691579
   SHAULS C, 2004, P INT C PROD LIN TES
   SHAW M, 2002, INT J SOFTW TOOLS TE, V4, P1433
   STEPHENSON Z, 2004, LNCS, V3154
   TEVANLINNA A, 2004, ACM SIGSOFT SOFTWARE, V29, P12, DOI DOI 10.1145/979743.979766
   TEVANLINNA A, 2004, P 11 NORD WORKSH PRO, P251
   Trew T., 2004, P INT WORKSH SOFTW P
   UZUNCAOVA E, 2008, ISSRE
   WEINGARTNER J, 2002, LNCS, V2290, P56
   Weissleder S., 2008, 1 WORKSH MOD BAS TES
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   WILLIAMS JJ, 2004, INT WORKSH SOFTW PRO
   ZENG H, 2004, INT WORKSH SOFTW PRO
NR 79
TC 182
Z9 190
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2011
VL 53
IS 1
BP 2
EP 13
DI 10.1016/j.infsof.2010.05.011
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 692QV
UT WOS:000285171100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Muzaffar, Z
   Ahmed, MA
AF Muzaffar, Zeeshan
   Ahmed, Moataz A.
TI Software development effort prediction: A study on the factors impacting
   the accuracy of fuzzy logic systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort prediction; Fuzzy logic; COCOMO; Imprecision; Uncertainty
AB Reliable effort prediction remains an ongoing challenge to software engineers. Traditional approaches to effort prediction such as the use of models derived from historical data, or the use of expert opinion are plagued with issues pertaining to their effectiveness and robustness. These issues are more pronounced when the effort prediction is used during the early phases of the software development lifecycle. Recent works have demonstrated promising results obtained with the use of fuzzy logic. Fuzzy logic based effort prediction systems can deal better with imprecision, which characterizes the early phases of most software development projects, for example requirements development, whose effort predictors along with their relationships to effort are characterized as being even more imprecise and uncertain than those of later development phases. for example design. Fuzzy logic based prediction systems could produce further better estimates provided that various parameters and factors pertaining to fuzzy logic are carefully set. in this paper, we present an empirical study, which shows that the prediction accuracy of a fuzzy logic based effort prediction system is highly dependent on the system architecture, the corresponding parameters, and the training algorithms. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Muzaffar, Zeeshan] Univ Western Ontario, Dept Comp Sci, London, ON N6A 3K7, Canada.
   [Ahmed, Moataz A.] LEROS Technol Corp, Fairfax, VA 22030 USA.
   [Ahmed, Moataz A.] King Fahd Univ Petr & Minerals, Dhahran 31261, Saudi Arabia.
C3 Western University (University of Western Ontario); King Fahd University
   of Petroleum & Minerals
RP Muzaffar, Z (corresponding author), Univ Western Ontario, Dept Comp Sci, London, ON N6A 3K7, Canada.
EM smuzaff2@csd.uwo.ca; mahmed5@gmu.edu
OI Ahmed, Moataz/0000-0003-0042-8819
FU King Fahd University of Petroleum and Minerals (KFUPM)
FX The authors wish to acknowledge King Fahd University of Petroleum and
   Minerals (KFUPM) for the use of various facilities in carrying out this
   research.
CR Ahmed MA, 2005, INFORM SOFTWARE TECH, V47, P31, DOI 10.1016/j.infsof.2004.05.004
   Ahmed MA, 2009, INFORM SOFTWARE TECH, V51, P640, DOI 10.1016/j.infsof.2008.09.004
   ANGELIS L, 2001, 7 IEEE INT SOFTW MET
   [Anonymous], ANN SOFTWARE ENG
   [Anonymous], 7 INT C FUZZ THEOR T
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 1999, P IASTED INT C INT S
   Bibi S, 2003, 1 BALK C INF THESS G
   BOEHM B, 2000, USCCSE2000505
   Boehm BW., 1981, Software Engineering Economics
   Clark B, 1998, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1998.671610
   Devnani-Chulani S., 1999, THESIS U SO CALIFORN
   FEI ZL, 1992, IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, P331, DOI 10.1109/FUZZY.1992.258637
   HODGKINSON AC, 1999, P 3 INT C SOFTW ENG, P401
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kirsopp C., 2002, GEN EV COMP C GECCO
   LARSEN PM, 1980, INT J MAN MACH STUD, V12, P3, DOI 10.1016/S0020-7373(80)80050-2
   Mamdani E.H., 1974, Proc. IEEE, V121, P12
   Mendel J. M., 2017, Uncertain Rule-Based Fuzzy Systems: Introduction and NewDirections, V2nd
   Musilek P., 2000, Applied Computing Review, V8, P24, DOI 10.1145/373975.373984
   MUZAFFAR SZ, 2006, THESIS KING FAHD U P
   NAUCK D, 2000, THESIS U MAGDEBURG
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   SALIU M, 2003, THESIS KING FAHD U P
   Saliu MO, 2004, NAFIPS 2004: ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1AND 2, P16
   SALIU MO, 2004, SOFT COMPUTING SOFTW
   SCHOFIELD C, 1998, TR9801 BOURN U DEP C
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Tian L, 2003, SE SYM SYS THRY, P232, DOI 10.1109/SSST.2003.1194564
   WALSTON CE, 1977, IBM SYST J, V16, P54, DOI 10.1147/sj.161.0054
   Wang L. X., 1994, Adaptive Fuzzy Systems and Control: Design and Stability Analysis
   ZADEH LA, 1975, INFORM SCIENCES, V8, P199, DOI 10.1016/0020-0255(75)90046-8
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zimmermann H.-J., 2001, Fuzzy Set Theory-and Its Applications, V4th
NR 34
TC 18
Z9 21
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2010
VL 52
IS 1
BP 92
EP 109
DI 10.1016/j.infsof.2009.08.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 527ND
UT WOS:000272372900007
DA 2024-07-18
ER

PT J
AU Hannay, JE
   Dybå, T
   Arisholm, E
   Sjoberg, DIK
AF Hannay, Jo E.
   Dyba, Tore
   Arisholm, Erik
   Sjoberg, Dag I. K.
TI The effectiveness of pair programming: A meta-analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Pair programming; Evidence-based software engineering; Systematic
   review; Meta-analysis; Fixed effects; Random effects
ID PUBLICATION BIAS; FILL METHOD; PERFORMANCE; DESIGN; TRIM; INDICATORS;
   COMPLEXITY
AB Several experiments on the effects of pair versus solo programming have been reported in the literature. We present a meta-analysis of these studies. The analysis shows a small significant positive overall effect of pair programming on quality, a medium significant positive overall effect on duration, and a medium significant negative overall effect on effort. However, between-study variance is significant, and there are signs of publication bias among published studies on pair programming. A more detailed examination of the evidence suggests that pair programming is faster than solo programming when programming task complexity is low and yields code solutions of higher quality when task complexity is high. The higher quality for complex tasks comes at a price of considerably greater effort, while the reduced completion time for the simpler tasks comes at a price of noticeably lower quality. We conclude that greater attention should be given to moderating factors on the effects of pair programming. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Hannay, Jo E.; Dyba, Tore; Arisholm, Erik; Sjoberg, Dag I. K.] Simula Res Lab, Dept Software Engn, NO-1325 Lysaker, Norway.
   [Hannay, Jo E.; Arisholm, Erik; Sjoberg, Dag I. K.] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
   [Dyba, Tore] SINTEF Informat & Commun Technol, NO-7465 Trondheim, Norway.
C3 University of Oslo; SINTEF
RP Hannay, JE (corresponding author), Simula Res Lab, Dept Software Engn, Pb 134, NO-1325 Lysaker, Norway.
EM johannay@simula.no
CR [Anonymous], 2002, Pair Programming Illuminated
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   BAHETI P, 2002, LNCS, V2418, P208
   Beck K., 2003, Extreme Programming
   BOLLEN K, 1991, PSYCHOL BULL, V110, P305, DOI 10.1037/0033-2909.110.2.305
   Borenstein M., 2007, COMPREHENSIVE META A, DOI [10.1002/9780470743386, DOI 10.1002/9780470743386]
   Brown R., 2000, Group processes: Dynamics within and between groups
   Canfora G, 2005, LECT NOTES COMPUT SC, V3556, P92
   Canfora G, 2007, J SYST SOFTWARE, V80, P1317, DOI 10.1016/j.jss.2006.11.004
   Chi M.T. H., 1982, ADV PSYCHOL HUMAN IN, V1, P17
   CHI MTH, 1981, COGNITIVE SCI, V5, P121, DOI 10.1207/s15516709cog0502_2
   CHI MTH, 1994, COGNITIVE SCI, V18, P439, DOI 10.1207/s15516709cog1803_3
   Chomsky Noam, 2002, SYNTACTIC STRUCTURES
   CHONG J, 2007, P 29 INT C SOFTW ENG
   Diamantopoulos A, 2006, BRIT J MANAGE, V17, P263, DOI 10.1111/j.1467-8551.2006.00500.x
   Domino MA, 2007, INFORM TECHNOL MANAG, V8, P297, DOI 10.1007/s10799-007-0016-8
   Duval S, 2000, J AM STAT ASSOC, V95, P89, DOI 10.2307/2669529
   Duval S, 2000, BIOMETRICS, V56, P455, DOI 10.1111/j.0006-341X.2000.00455.x
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba T., 2007, Proc. of the First Int. Symp. on Empirical Software Engineering and Measurement, P225
   DYBA T, 2007, IEEE SOFTWARE    NOV, P12
   DYBA T, 2006, J INFORM SOFTWARE TE, V48
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   ERICSSON KA, 1994, AM PSYCHOL, V49, P725, DOI 10.1037/0003-066X.49.8.725
   Forsyth D.R., 2006, Group Dynamics, V5th
   FREUDENBERG S, 2007, P AGILE 2007
   Haerem T, 2007, J APPL PSYCHOL, V92, P1320, DOI 10.1037/0021-9010.92.5.1320
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   Hedges LV, 1998, PSYCHOL METHODS, V3, P486, DOI 10.1037/1082-989X.3.4.486
   HEIBERG S, 2003, LNCS, V2675, P215
   Higgins JPT, 2003, BMJ-BRIT MED J, V327, P557, DOI 10.1136/bmj.327.7414.557
   Hunter JE, 2000, INT J SELECT ASSESS, V8, P275, DOI 10.1111/1468-2389.00156
   Jarvis CB, 2003, J CONSUM RES, V30, P199, DOI 10.1086/376806
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   KARAU SJ, 1993, J PERS SOC PSYCHOL, V65, P681, DOI 10.1037/0022-3514.65.4.681
   Kerr NL, 2004, ANNU REV PSYCHOL, V55, P623, DOI 10.1146/annurev.psych.55.090902.142009
   Kitchenham B., 2007, 2007001 EBSE
   LEVINE JM, 1990, ANNU REV PSYCHOL, V41, P585, DOI 10.1146/annurev.ps.41.020190.003101
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lipsey M. W., 2001, PRACTICAL METAANALYS, DOI DOI 10.1016/J.AUTNEU.2007.06.087
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4589, P207
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4034, P278
   March J.G., 1958, ORGANIZATIONS
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Müller MM, 2006, INFORM SOFTWARE TECH, V48, P335, DOI 10.1016/j.infsof.2005.09.008
   MULLER, 2005, J SYST SOFTWARE, V78, P169
   NAWROCKI, 2001, P EUR SOFTW CONTR ME, P269
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Nunnally J. C., 1994, Psychometric Theory
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   PENNINGTON N, 1987, P 2 WORKSH EMP STUD, P100
   PERROW C, 1967, AM SOCIOL REV, V32, P194, DOI 10.2307/2091811
   Peters JL, 2007, STAT MED, V26, P4544, DOI 10.1002/sim.2889
   PHONGPAIBUL, 2007, P 1 INT S EMP SOFTW, P265
   PHONGPAIBUL, 2006, P INT S EMP SOFTW EN, P85
   Rosenthal R, 2001, ANNU REV PSYCHOL, V52, P59, DOI 10.1146/annurev.psych.52.1.59
   ROSTAHER, 2002, LECT NOTES COMPUTER, V2418, P174
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Soloway E., 1988, The nature of expertise, P129
   Steiner I. D., 1972, Group process and productivity
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
   Sterne JAC, 2005, PUBLICATION BIAS IN META-ANALYSIS: PREVENTION, ASSESSMENT AND ADJUSTMENTS, P99
   Sutton AJ, 2005, PUBLICATION BIAS IN META-ANALYSIS: PREVENTION, ASSESSMENT AND ADJUSTMENTS, P175
   VANHANEN, 2005, P INT S EMP SOFTW EN, P336
   Voas J, 2001, IEEE SOFTWARE, V18, P96, DOI 10.1109/52.922733
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   XU, 2006, P INT C COMP INF SCI, P500
NR 69
TC 109
Z9 123
U1 8
U2 58
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2009
VL 51
IS 7
SI SI
BP 1110
EP 1122
DI 10.1016/j.infsof.2009.02.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 456JD
UT WOS:000266840500002
DA 2024-07-18
ER

PT J
AU Valderas, P
   Pelechano, V
AF Valderas, Pedro
   Pelechano, Vicente
TI Introducing requirements traceability support in model-driven
   development of web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements traceability; Requirements engineering; Web engineering;
   Web applications; Model-to-model transformations; Model-driven
   development
AB In this work, we present an approach that introduces requirements traceability capabilities in the context of model-driven development of Web applications. This aspect allows us to define model-to-mode I transformations that not only provide a software artifact of lower abstraction (as model-to-model transformations usually do) but also to provide feedback about how they are applied. This feedback helps LIS to validate whether transformations are correctly applied. In particular, we present a model-to-model transformation that allows LIS to obtain navigational models of the Web engineering method OOWS from a requirements model. This transformation is defined as a set of mappings between these two models that have been implemented by means of graph transformations. The use of graph transformations allows us to develop a tool-supported strategy for applying mappings automatically. In addition, mechanisms for tracing requirements are also included in the definition of graph transformations. These mechanisms allow us to link each conceptual element to the requirements from which it is derived. In particular, we focus on tracing requirements throughout the navigational model, which describe the navigational structure of a Web application. To take advantage of these traceability mechanisms, we have developed a tool that obtains traceability reports after applying transformations. These reports help us to Study aspects such as whether or not requirements are all supported. the impact of changing a requirement, or how requirements are modelled. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Valderas, Pedro; Pelechano, Vicente] Univ Politecn Valencia, Dept Informat Syst & Computat, Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Valderas, P (corresponding author), Univ Politecn Valencia, Dept Informat Syst & Computat, 46022 Cami Vera S-N, Valencia, Spain.
EM pvalderas@dsic.upv.es; pele@dsic.upv.es
RI Pelechano, Vicente/S-4344-2016; Valderas, Pedro/X-3605-2018
OI Pelechano, Vicente/0000-0003-1090-230X; Valderas,
   Pedro/0000-0002-4156-0675
CR [Anonymous], 1990, DESIGNING OBJECT ORI
   [Anonymous], P 2 WORKSH GEN TECHN
   [Anonymous], P 2 EC MDA WORKSH TR
   Baresi L., 2001, P 34 HAW INT C SYST
   *BON, AN DES METH REL REUS
   Burdman J., 1999, COLLABORATIVE WEB DE
   CERI S, WWW9 C AMST MAY 2000
   CONKLIN J, 1987, COMPUTER, V20, P17, DOI 10.1109/MC.1987.1663693
   de Lara J, 2007, THEOR COMPUT SCI, V376, P139, DOI 10.1016/j.tcs.2007.02.001
   De Troyer OMF, 1998, COMPUT NETWORKS ISDN, V30, P85, DOI 10.1016/S0169-7552(98)00042-7
   Del Fabro M. D., 2006, ECLIPSE MODELING S, P37
   DROMEY RG, 2003, P 1 INT C SOFTW ENG
   DURAN A, 1999, INT WORKSH REQ ENG W, P17
   EGYED A, 2002, P 17 IEEE INT C AUT
   England Elaine., 1999, Managing Multimedia
   Escalona M.J., 2004, J WEB ENG, V2, P193
   ESCALONA MJ, 2004, THESIS U SEVILLA
   FONS J, 2003, LNCS, V2813
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gómez J, 2000, LECT NOTES COMPUT SC, V1789, P79
   GOTEL O, 1995, THESIS IMPERIAL COLL
   GREENSPUN P, 1999, PHILIP ALEX GUIDE WE
   INSFRAN E, 2003, THESIS TU VALENCIA S
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   Jouault F., 2005, P ECMDA TRAC WORKSH
   KOCH N, 2006, MODEL TRANSFORMATION
   KOCH N, 2000, THESIS LUDWIGMAXIMIL
   Lauesen S, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1184169
   LOWE D, 2003, REQUIREMENTS ENG, V8
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   *MYSQL, MYSQL 5 0 COMM SERV
   *OBJ MAN GROUP, OBJ CONSTR LANG OCL
   *OBJ MAN GROUP, UN MOD LANG 2 0
   *OBJ MAN GROUP, MET OBJ FAC MOF QUER
   OVERMYER SP, 2000, REQUIR ENG, P62
   PARTSCH H, 1983, COMPUT SURV, V15, P199, DOI 10.1145/356914.356917
   Pastor O, 2001, INFORM SYST, V26, P507, DOI 10.1016/S0306-4379(01)00035-7
   Paterno F, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P362
   Rozenberg G., 1997, HDB GRAPH GRAMMARS C
   Schwabe Daniel., 1996, Proceedings of the the seventh ACM conference on Hypertext (HYPERTEXT96), P116
   SEGURA S, 2007, CONJ 12 JORN ING SOF
   Shepherd A., 2001, Hierarchical task analysis
   Tsumaki T, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P206, DOI 10.1109/APSEC.2000.896701
   Valderas P., 2007, International Journal of Web Engineering and Technology, V3, P4, DOI 10.1504/IJWET.2007.011526
   VALDERAS P, 2007, METAMODEL TASK BASED
   VALDERAS P, 2005, P 6 INT C E COMM WEB
   VALDERAS P, 2005, PELECHANO TRANSFORMI, P320
   VALDERAS P, 2007, SET GRAPH TRANSFORMA
   VALDERAS P, 2007, OOWS APPROACH NUTSHE
   VARRO D, 2004, 7 INT C UN MOD LANG
   VILAIN P, 2002, LECT NOTES COMPUTER
   VILAIN P, 2002, P 2 INT WORKSH WEB O
   WINTER K, 2004, P INT C INT FORM MET
   Young R., 2003, The requirements engineering handbook
   VISUAL MODELING TRAN
   ATTRIBUTED GRAPH GRA
NR 56
TC 12
Z9 13
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 749
EP 768
DI 10.1016/j.infsof.2008.09.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600006
DA 2024-07-18
ER

PT J
AU Guarda, P
   Zannone, N
AF Guarda, Paolo
   Zannone, Nicola
TI Towards the development of privacy-aware systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Privacy-related legal requirements; Requirements Engineering; Privacy
   policy; Privacy-Aware Access Control
ID HIPPOCRATIC DATABASES; PERSONAL INFORMATION; REQUIREMENTS; MODEL;
   4TH-AMENDMENT; SECURITY
AB Privacy and data protection are pivotal issues in nowadays society. They concern the right to prevent the dissemination of sensitive or confidential information of individuals. Many studies have been proposed on this topic from various perspectives, namely sociological, economic, legal, and technological. We have recognized the legal perspective as being the basis of all other perspectives. Actually, data protection regulations set the legal principles and requirements that must be met by organizations when processing personal data. The objective of this work is to provide a reference base for the development of methodologies tailored to design privacy-aware systems to be compliant with data protection regulations. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Guarda, Paolo] Univ Trento, Dept Legal Sci, Trento, Italy.
   [Zannone, Nicola] Univ Trento, Dept Informat & Commun Technol, Trento, Italy.
C3 University of Trento; University of Trento; Fondazione Bruno Kessler;
   FBK-ICT - Center for Information & Communication Technology
RP Zannone, N (corresponding author), Univ Trento, Dept Legal Sci, Trento, Italy.
EM paolo.guarda@unitn.ir; zannone@dit.unitn.it
RI Zannone, Nicola/H-1318-2012
OI Zannone, Nicola/0000-0002-9081-5996; Guarda, Paolo/0000-0001-5216-1998
FU EU Commission through the SERENITY; MIUR through the FIRB TOCALIT
FX This work has been partially funded by EU Commission through the
   SERENITY project and by the MIUR through the FIRB TOCALIT project.
CR Adams A., 1999, P TEL POL RES C
   Agrawal R, 2004, LECT NOTES COMPUT SC, V2992, P845
   Agrawal R., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P143
   AGRAWAL R, 2003, P 12 INT C WORLD WID, P629
   Anderson A., 2006, SWS 06, P53
   [Anonymous], 2001, Security Engineering: A Guide to Building Dependable Distributed Systems
   [Anonymous], P IEEE 5 INT S REQ E
   [Anonymous], PRIV POL PROF XACML
   [Anonymous], 2002, W3C recommendation
   Antón AI, 2004, REQUIR ENG, V9, P169, DOI 10.1007/s00766-003-0183-z
   Antón AI, 2003, INFORM SOFTWARE TECH, V45, P967, DOI 10.1016/S0950-5849(03)00095-8
   ANTON AI, 2001, E COMMERCE SECURITY, P29
   Araujo I., 2005, 21st International Conference on Data Engineering Workshops, P1193
   ASHLEY P, 2003, 3485 IBM RES
   Austin JohnL., 1969, SPEECH ACTS ESSAY PH, DOI DOI 10.1017/CBO9781139173438
   Backes M, 2003, LECT NOTES COMPUT SC, V2808, P162
   Backes M., 2004, SAC, P375
   Barth A., 2005, Proceedings of the 2005 workshop on Issues in the theory of security, P58
   Barth A., 2004, Proceedings of the 2004 ACM workshop on Privacy in the electronic society, P45
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Bertino E., 2001, ACM Transactions on Information and Systems Security, V4, P191, DOI 10.1145/501978.501979
   Bertino E, 2005, LECT NOTES COMPUT SC, V3655, P178
   Bertino E, 1997, IEEE T KNOWL DATA EN, V9, P85, DOI 10.1109/69.567051
   Bertino E, 1998, ACM T DATABASE SYST, V23, P231, DOI 10.1145/293910.293151
   BERTINO E, 1996, T KNOWL DATA ENG, V8, P67
   Bettini C., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P502
   Bettini C, 2002, THIRD INTERNATION WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P2, DOI 10.1109/POLICY.2002.1011288
   BIBAS SA, 1994, HARVARD J LAW PUBL P, V17, P591
   Brandeis L., 1890, Harvard law Review, V4, P193
   Bygrave LA, 2002, INFORM LAW SERIES, V10
   Camenisch J., 2005, DIGITAL IDENTITY MAN, P20, DOI DOI 10.1145/1102486.1102491
   CAREY P, 2004, PRACTICAL GUIDE UK E
   Carpenter D, 2002, MINN LAW REV, V86, P1097
   Chung L., 2000, Non-functional Requirements in Software Engineering
   CLARKE R, 2002, P 15 BLED EL COMM C
   Collmann J, 2007, J AM MED INFORM ASSN, V14, P239, DOI 10.1197/jamia.M2195
   Coyne E.J., 1995, Proc. ACM Workshop on Role-Based Access Control, P15
   Cranor L., 2002, P3P PREFERENCE EXCHA
   CRANOR LF, 2002, P TPRC 02
   CROCK R, 2002, P RE 02, P203
   Damianou N., 1995, Lecture Notes in Computer Science, P18
   Davies S.G., 1997, TECHNOLOGY PRIVACY N, P143
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   Doan Thuong., 2004, FMSE '04, P75
   Downs D. D., 1985, Proceedings of the 1985 Symposium on Security and Privacy (Cat. No. 85CH2150-1), P208
   DRITSAS S, TELEMATICS INFORM, V23
   Dumortier J, 2004, NATO SC S SS III C S, V193, P191
   Feigenbaum J., 2002, P DRM 01, P76
   Firozabadi BS, 2002, THIRD INTERNATION WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P210, DOI 10.1109/POLICY.2002.1011310
   *GAR POT DAT PERS, 2003, PRIV POL
   Giorgini P, 2005, LECT NOTES COMPUT SC, V3655, P237
   Gomi H., 2005, Proceedings of the Workshop on Digital Identity Management (Fairfax, VA, USA, November 11-11, 2005) DIM '05 ACM, New York, NY, P94
   Gordijn J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P129
   GROSS H, NEW YORK U LAW REV, P42
   He Q., 2003, Proc. of REFSQ, V3, P137
   Hilpinen Risto., 2001, The Blackwell Guide to Philosophic Logic, P159
   Hilty M, 2005, LECT NOTES COMPUT SC, V3679, P98
   Hogben G., 2002, P W3C WORKSH FUT P3P
   Indrakshi RAY., 2004, Proceedings of the ninth ACM symposium on Access control models and technologies, SACMAT '04, P115, DOI DOI 10.1145/990036.990054
   Inness J.C., 1992, PRIVACY INTIMACY ISO
   *ISO IEC, 2005, ISOIEC177992005
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jajodia S, 2001, ACM T DATABASE SYST, V26, P214, DOI 10.1145/383891.383894
   JENDRICKE U, 2002, P UBICOMP 02
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Kaindl H, 2000, IEEE T SYST MAN CY A, V30, P537, DOI 10.1109/3468.867861
   Karjoth G, 2003, IEEE 4TH INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P135, DOI 10.1109/POLICY.2003.1206967
   Karjoth G, 2003, LECT NOTES COMPUT SC, V2482, P69
   Karjoth G, 2002, P IEEE CSFW, P271, DOI 10.1109/CSFW.2002.1021821
   KAVAKLI E, INTERNET RES, V16
   KENNY S, 2002, J INFORM LAW TECHNOL, V4
   Kerr OS, 2004, MICH LAW REV, V102, P801, DOI 10.2307/4141982
   LeFevre K., 2004, Proceedings of the Thirtieth International Conference on Very Large Data Bases, P108
   Li N, 2006, COMPUT SYST SCI ENG, V21, P339
   Li N., 2005, SACMAT, P102, DOI DOI 10.1145/1063979.1063998
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   MASSACCI F, 2004, LNCS, V3957, P179
   Massacci F, 2007, INT J SOFTW ENG KNOW, V17, P265, DOI 10.1142/S0218194007003239
   Massacci F, 2006, VLDB J, V15, P370, DOI 10.1007/s00778-006-0009-y
   MAZZOLENI P, 2008, TISSEC, V11, P1
   MOFFETT J, 1999, P POLICY 99
   Murphy RS, 1996, GEORGETOWN LAW J, V84, P2381
   Mylopoulos J, 2001, IEEE SOFTWARE, V18, P92, DOI 10.1109/52.903174
   MYLOPOULOS J, 1993, P NGITS 93
   Nagaratnam N., 1998, Distributed Systems Engineering, V5, P168, DOI 10.1088/0967-1846/5/4/004
   Neumann G., 2002, P 7 ACM S ACC CONTR, P33, DOI DOI 10.1145/507711.507717
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   *OASIS, 2005, EXTENSIBLE ACC CONTR
   PARDOLESI R., 2003, DIRITTO RISERVATEZZA
   Park J., 2004, ACM Transactions on Information and Systems Security, V7, P128, DOI 10.1145/984334.984339
   POTTS AIC, 1998, P ICSE 98, P157
   Regan P. M., 1995, Legislating Privacy: Technology, Social Values, and Public Policy
   Room S., 2007, DATA PROTECTION COMP
   Rotenberg M, 2002, MINN LAW REV, V86, P1115
   ROTENBERG M, 2000, PRIVACY LAW SOURCEBO
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Samuelson P, 2000, STANFORD LAW REV, V52, P1125, DOI 10.2307/1229511
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   SCHUMER M, 2002, P W3C WORKSH FUT P3P
   Shorr S, 1995, CORNELL LAW REV, V80, P1756
   SILVERMAN E, LOSS PROTECTED PATIE
   Sklansky DA, 2000, COLUMBIA LAW REV, V100, P1739, DOI 10.2307/1123590
   SMITH J, 1993, COMMUN ACM, V36, P105
   SMITH RE, 1993, PRIVACY J, P50
   Solove Daniel., 2006, Information Privacy Law
   Solove DJ, 2001, STANFORD LAW REV, V53, P1393, DOI 10.2307/1229546
   Stallings W., 1999, CRYPTOGRAPHY NETWORK, Vsecond
   STRANDBURG KJ, RUTGERS LAW REV, V57
   Tumer A., 2003, P ESSW 03
   U.S. Federal Trade Commission, 1998, PRIV ONL REP C
   *US DEP COMM, 2000, SAF HARB PRIV PRINC
   *US DEP HLTH ED WE, 1973, COD FAIR INF PRACT
   WIJESEKERA D, 2003, TODS, V28, P209
   Yu T., 2004, P 22 SEV LOC STORMS, P1
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
   Zhang L., 2003, ACM Transactions on Information and Systems Security, V6, P404, DOI 10.1145/937527.937530
   Zheng PF, 2003, ACM SIGCOMM COMP COM, V33, P103, DOI 10.1145/956981.956991
NR 117
TC 57
Z9 59
U1 0
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 337
EP 350
DI 10.1016/j.infsof.2008.04.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 386YX
UT WOS:000261919900008
DA 2024-07-18
ER

PT J
AU Jung, HW
   Goldenson, DR
AF Jung, Ho-Won
   Goldenson, Dennis R.
TI Evaluating the relationship between process improvement and schedule
   deviation in software maintenance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE CMMI; Maintenance process; Moderator; Negative binomial regression;
   SW-CMM
ID MODERATED MULTIPLE-REGRESSION; MATURITY MODEL; COUNT DATA; QUALITY;
   CONSISTENCY; MANAGEMENT; ADOPTION; SYSTEMS; TESTS
AB A basic proposition of process assessment models is that higher process maturity is associated with improved project performance and product quality. This study provides empirical evidence to support this proposition by testing the hypothesis that higher process maturity is negatively associated with schedule deviation in software maintenance. Next, the present study investigates whether two process context factors (organizational size and geographical region) modify the relationship between process maturity and schedule deviation by using a moderator testing method. Our results show that organizational size does not influence the relationship. while geographical region is deemed to be an independent variable. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Jung, Ho-Won] Korea Univ, Sch Business, Seoul 136701, South Korea.
   [Goldenson, Dennis R.] Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
C3 Korea University; Carnegie Mellon University; Software Engineering
   Institute
RP Jung, HW (corresponding author), Korea Univ, Sch Business, Anam Dong 5Ka, Seoul 136701, South Korea.
EM hwjung@korea.ac.kr; dg@sei.cmu.edu
FU U.S. Department of Defense; Korea University Foundation Grant (2006)
FX The SEI is a Federally Funded Research and Development Center sponsored
   by the U.S. Department of Defense and operated by Carnegie Mellon
   University. The research was supported by a Korea University Foundation
   Grant (2006). This support is gratefully acknowledged.
CR Aguinis H, 1997, J APPL PSYCHOL, V82, P192, DOI 10.1037/0021-9010.82.1.192
   Aguinis H., 2004, Regression analysis for categorical moderators
   Aguinis H, 1999, ORGAN RES METHODS, V2, P315, DOI 10.1177/109442819924001
   AIKEN L, 1991, SAGE U PAPER SERIES
   Alkhatib G., 1992, Journal of Software Maintenance: Research and Practice, V4, P83, DOI 10.1002/smr.4360040203
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1998, REGRESSION ANAL COUN
   [Anonymous], 1990, 6101990 IEEE
   [Anonymous], ELEMENTS SOFTWARE PR
   [Anonymous], 1994, The Capability Maturity Model: Guidelines for Improving the Software Process
   April A, 2005, J SOFTW MAINT EVOL-R, V17, P197, DOI 10.1002/smr.3
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   BRODMAN JG, 1994, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.1994.296795
   Cameron AC, 1996, J BUS ECON STAT, V14, P209, DOI 10.2307/1392433
   CHOW GC, 1960, ECONOMETRICA, V28, P591, DOI 10.2307/1910133
   Chrissis M., 2006, CMMI: Guidelines for Process Integration and Product Improvement
   Clark BK, 2000, IEEE SOFTWARE, V17, P65, DOI 10.1109/52.895170
   Cohen J, 2003, APPL MULTIPLE REGRES, DOI DOI 10.4324/9780203774441
   Cohen J., 1988, STAT POWER ANAL BEHA
   Deephouse C., 1995, Journal of Management Information Systems, V12, P187
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   DREW D, 1992, P C SOFTW MAINT 1992, P137
   EDELSTEIN D, 1993, ACM SIGSOFT SOFTWARE, V18, P94
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   El Emam K, 2000, J SYST SOFTWARE, V51, P119, DOI 10.1016/S0164-1212(99)00117-X
   El Emam K, 2001, J SYST SOFTWARE, V59, P23, DOI 10.1016/S0164-1212(01)00046-2
   El Emam K., 2007, SoftwareTech, V10, P24
   ELEMAM K, 1999, BETTER SOFTWARE PRAC, P177
   ELEMAM K, 1995, P 2 IEEE INT SOFTW E, P84
   Fayad ME, 1997, COMMUN ACM, V40, P125, DOI 10.1145/265684.265701
   Fichman RG, 1997, MANAGE SCI, V43, P1345, DOI 10.1287/mnsc.43.10.1345
   Galin D, 2006, IEEE SOFTWARE, V23, P81, DOI 10.1109/MS.2006.149
   Gelman Andrew, 2006, Data analysis using regression and multilevel/hierarchical models, DOI 10.1017/CBO9780511790942
   Gibson D.L., 2006, Performance results of CMMI-based process improvement
   GOLDENSON D, 1995, CMUISEI95TR009
   GOLDENSON D, 2003, CMUSEI2003009
   GOURIEROUX C, 1984, ECONOMETRICA, V52, P701, DOI 10.2307/1913472
   Greene W. H., 2018, ECONOMETRIC ANAL
   Haley TJ, 1996, IEEE SOFTWARE, V13, P33, DOI 10.1109/52.542292
   Hall T, 2001, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSM.2001.972755
   Harter DE, 2003, MANAGE SCI, V49, P784, DOI 10.1287/mnsc.49.6.784.16023
   HAUSMAN J, 1984, ECONOMETRICA, V52, P909, DOI 10.2307/1911191
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   HUNTER R, 2000, P 2 WORLD C SOFTW QU
   Isacsson P., 2001, Software Process Improvement and Practice, V6, P23, DOI 10.1002/spip.133
   Jaccard J., 1990, Sage University paper series on quantitative applications in the social sciences, 07-072
   JONES C, 2006, EC SOFTWARE MA UNPUB
   Jung HW, 2008, EMPIR SOFTW ENG, V13, P125, DOI 10.1007/s10664-007-9049-1
   JUNG HW, 2003, CMUSEI2003TN015
   JUNG HW, 2001, SOFTWARE PROCESS IMP, V6, P205
   Kajko-Mattsson M, 2002, J SOFTW MAINT EVOL-R, V14, P197, DOI 10.1002/smr.252
   Kang SM, 2005, APPL PSYCH MEAS, V29, P87, DOI 10.1177/0146621604272737
   Keeni G, 2000, IEEE SOFTWARE, V17, P79, DOI 10.1109/52.854073
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   KIM EH, 1986, INFORM MANAGE, V11, P87, DOI 10.1016/0378-7206(86)90038-8
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kotrlik J. W., 2003, Information Technology, Learning, and Performance Journal, V21, P1
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Kuilboer JP, 2000, INFORM SOFTWARE TECH, V42, P27, DOI 10.1016/S0950-5849(99)00054-3
   LAWLIS P, 1996, SOFTWARE PROCESS NEW, V7, P1
   Le SA, 2006, J BUS RES, V59, P278, DOI 10.1016/j.jbusres.2005.04.003
   Lee G, 2006, INFORM MANAGE-AMSTER, V43, P975, DOI 10.1016/j.im.2006.09.003
   Liu A., 2007, SoftwareTechnology, V10, P18
   Long J.S., 2011, Regression models for categorical and limited dependent variables
   Lunneborg C.E., 2000, DATA ANAL RESAMPLING
   Montgomery D.C., 1998, ENG STAT
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Niessink F, 2000, J SOFTW MAINT-RES PR, V12, P103, DOI 10.1002/(SICI)1096-908X(200003/04)12:2<103::AID-SMR205>3.0.CO;2-S
   Nunnally J. C, 1979, PSYCHOMETRIC THEORY, DOI DOI 10.1016/J.IJPSYCHO.2016.11.012
   PAULISH DJ, 1994, COMPUTER, V27, P50, DOI 10.1109/2.312039
   Pitterman B, 2000, IEEE SOFTWARE, V17, P89, DOI 10.1109/52.854074
   Rai A, 1997, DECISION SCI, V28, P939, DOI 10.1111/j.1540-5915.1997.tb01337.x
   Ravichandran T, 2000, MIS QUART, V24, P381, DOI 10.2307/3250967
   Rosenberg M., 1968, LOGIC SURVEY ANAL
   Russwurm W., 2000, Software Process Improvement and Practice, V5, P231, DOI 10.1002/1099-1670(200012)5:4<231::AID-SPIP128>3.0.CO;2-#
   Sanders M., 1998, SPIRE HDB BETTER FAS
   SAPP M, 2007, SOFTWARETECH, V10, P10
   *SAS, 2006, GLIMMIX PROC
   *SEI, 2006, PROC MAT PROF SOFTW
   SHARMA S, 1981, J MARKETING RES, V18, P291, DOI 10.2307/3150970
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Stevens S., 1951, HDB EXPT PSYCHOL, P1
   STRAUB DW, 1988, MISRCWP8901 U MINN I
   Swanson E.B., 1989, MAINTAINING INFORM S
   Tomatzky L., 1990, PROCESS TECHNOLOGICA
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   VELDEN M, 1996, SOFTW QUAL J, V5, P87
   VELLEMAN PF, 1993, AM STAT, V47, P65, DOI 10.2307/2684788
   Venables WN., 2002, MODERN APPL STAT S
   VUONG QH, 1989, ECONOMETRICA, V57, P307, DOI 10.2307/1912557
   Wang YX, 1999, PROC IEEE SOFTW ENGN, P16, DOI 10.1109/SESS.1999.766574
   WOHLWEND H, 1994, IEEE T SOFTWARE ENG, V20, P833, DOI 10.1109/32.368125
   Yamamura G, 1999, IEEE SOFTWARE, V16, P83, DOI 10.1109/52.795105
NR 94
TC 9
Z9 10
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 351
EP 361
DI 10.1016/j.infsof.2008.04.005
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 386YX
UT WOS:000261919900009
DA 2024-07-18
ER

PT J
AU Sharp, H
   Baddoo, N
   Beecham, S
   Hall, T
   Robinson, H
AF Sharp, Helen
   Baddoo, Nathan
   Beecham, Sarah
   Hall, Tracy
   Robinson, Hugh
TI Models of motivation in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Motivation; Project management; Human factors; Systematic literature
   review
ID DEVELOPERS
AB Motivation in software engineering is recognized as a key success factor for software projects, but although there are many papers written about motivation in software engineering, the field lacks a comprehensive overview of the area. In particular, several models of motivation have been proposed, but they either rely heavily on one particular model (the job characteristics model), or are quite disparate and difficult to combine. Using the results from our previous systematic literature review (SUR), we constructed a new model of motivation in software engineering. We then compared this new model with existing models and refined it based on this comparison. This paper summarises the SLR results. presents the important existing models found in the literature and explains the development Of Our new model of motivation in software engineering. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Sharp, Helen; Robinson, Hugh] Open Univ, Fac Math Comp & Technol, Milton Keynes MK7 6AA, Bucks, England.
   [Baddoo, Nathan] Univ Hertfordshire, Sch Comp Sci, Hatfield AL10 9AB, Herts, England.
   [Beecham, Sarah; Hall, Tracy] Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
C3 Open University - UK; University of Hertfordshire; Brunel University
RP Sharp, H (corresponding author), Open Univ, Fac Math Comp & Technol, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM h.c.sharp@open.ac.uk; n.baddoo@herts.ac.uk; s.beecham@herts.ac.uk;
   tracy.hall@brunel.ac.uk; h.m.robinson@open.ac.uk
RI Beecham, Simon C/M-1544-2016
OI Sharp, Helen/0000-0003-4376-1734; Hall, Tracy/0000-0002-2728-9014
FU UK's Engineering & Physical Sciences Research Council [EP/D057272/1];
   EPSRC [EP/D057272/1] Funding Source: UKRI
FX This work was supported by the UK's Engineering & Physical Sciences
   Research Council under grant number EP/D057272/1.
CR [Anonymous], P 28 HAW INT C SYST
   [Anonymous], COMPUTER PERSONNEL
   [Anonymous], COMMUNICATIONS ACM
   BEECHAM S, 2006, 452 U HERTF FAC ENG
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Boehm BW., 1981, Software Engineering Economics
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   COUGER D, 1980, MOTIVATING MANAGING
   COUGER DJ, 1978, J MANAGEMENT INFORM, V4, P82
   Couger J. D., 1992, International Information Systems, V1, P16
   COUGER JD, 1990, INFORM MANAGE, V18, P41, DOI 10.1016/0378-7206(90)90062-M
   DARCY DP, 2005, P 38 ANN HAW INT C S, pA314
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Ferrat T.W., 2004, P 2004 ACM SIGMIS C, P25
   FERRATT TW, 2003, P ACM SIGMIS CPR C A, V8, P168
   Frangos SA, 1998, MICROPROCESS MICROSY, V21, P605, DOI 10.1016/S0141-9331(98)00062-3
   Gambill SE, 2000, INFORM MANAGE-AMSTER, V37, P217, DOI 10.1016/S0378-7206(99)00053-1
   GARZA AI, 2003, P ANN M DEC SCI I, P1067
   GOLDSTEIN DK, 1984, MIS QUART, V8, P103, DOI 10.2307/249347
   GOLDSTEIN DK, 1988, P ACM SIGCPR C MAN I, P148, DOI DOI 10.1145/57216.57237
   Hackman J.R. e., 1976, Motivation Through the Design of Work: Test of a Theory, Organizational Behavior and Human Performance, n
   HALL T, ACM T SOFTW IN PRESS
   Hall T, 2008, SIGMIS CPR 2008: PROCEEDINGS OF THE 2008 ACM SIGMIS CPR CONFERENCE, P30
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Herzberg F., 1959, MOTIVATION WORK
   Igbaria M, 1995, J STRATEGIC INF SYST, V4, P319, DOI 10.1016/0963-8687(95)80002-8
   Khalil O. E. M., 1997, Proceedings of the 1997 ACM SIGCPR Conference, P187, DOI 10.1145/268820.268884
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   KLENKE K, 1992, ORG COMMITMENT TURNO, P171
   Lee P. C. B., 2002, P 2002 ACM SIGCPR C, P145, DOI DOI 10.1145/512360.512393
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   LI Y, 2006, P 2006 ACM SIGMIS CP, P34
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   LOCKE EA, 1968, ORGAN BEHAV HUM PERF, V3, P157, DOI 10.1016/0030-5073(68)90004-4
   Mak BL, 2001, INFORM MANAGE-AMSTER, V38, P265, DOI 10.1016/S0378-7206(00)00055-0
   MCCONNELL S, 1998, IEEE SOFTWARE, V15, P126
   Mowday R.T., 1982, EMPLOYEE ORG LINKAGE
   Myers Isabel Briggs, 1998, MBTI Manual: A Guide to the Development and Use of the Myers-Briggs Type Indicator
   MYERS ME, 1991, SIGCPR COMPUT PERS, V13, P44
   Pidd M, 1999, INTERFACES, V29, P118, DOI 10.1287/inte.29.2.118
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   *PROJECTLINK, MOT HOUS
   RAMACHANDRAN S, 2006, P 2006 ACM SIGMIS CP, P198
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Rashid A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P199, DOI 10.1109/ICRE.2002.1048526
   RIDINGS CM, 1999, SIGCPR COMPUT PERS, V20, P7
   ROBERT HJ, 1967, PERS PSYCHOL, V67, P369
   ROBERTS J, 2004, UNDERSTANDING MOTIVA
   SANTANA M, 1995, SIGCPR COMPUT PERS, V16, P20
   Smits S. J., 1997, Proceedings of the 1997 ACM SIGCPR Conference, P36, DOI 10.1145/268820.268865
   *STAND GROUP CHAOS, 1995, STAND GROUP CHAOS RE
   Tanner FR, 2003, IEMC-2003: MANAGING TECHNOLOGICALLY DRIVEN ORGANIZATIONS: THE HUMAN SIDE OF INNOVATION AND CHANGE, PROCEEDINGS, P214, DOI 10.1109/IEMC.2003.1252263
   Thatcher J.B., 2002, Proceedings of the Association for Computer Machinery Special Interest Group on Computer Personnel Research, P25
   Vroom V. H., 1964, Work and motivation
NR 55
TC 84
Z9 93
U1 0
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 219
EP 233
DI 10.1016/j.infsof.2008.05.009
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 389FU
UT WOS:000262077500019
DA 2024-07-18
ER

PT J
AU Pendharkar, PC
   Rodger, JA
   Subramanian, GH
AF Pendharkar, Parag C.
   Rodger, James A.
   Subramanian, Girish H.
TI An empirical study of the Cobb-Douglas production function properties of
   software development effort
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cost models; Forecasting; Project management
ID SCALE ECONOMIES; COST; MODELS
AB In this paper we study whether software development effort exhibits Cobb-Douglas functional form with respect to team size and software size. We empirically test this relationship using real-world software engineering data set containing over 500 software projects. The results of our experiments indicate that the hypothesized Cobb-Douglas function form for software development effort with respect to team size and software size is true. We also find increasing returns to scale relationship between software size and team size with software development effort. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Pendharkar, Parag C.; Subramanian, Girish H.] Penn State Harrisburg, Sch Business Adm, Dept Informat Syst, Middletown, PA 17057 USA.
   [Rodger, James A.] Indiana Univ Penn, Eberly Coll Business & Informat Technol, Dept MIS & Decis Sci, Indiana, PA 15705 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State System of Higher
   Education (PASSHE); Indiana University of Pennsylvania
RP Pendharkar, PC (corresponding author), Penn State Harrisburg, Sch Business Adm, Dept Informat Syst, 777 W Harrisburg Pike, Middletown, PA 17057 USA.
EM pxp19@psu.edu; jrodger@iup.edu; ghs2@psu.edu
RI Rodger, James A./C-8313-2019
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   ABDELHAMID TK, 1990, J SYST SOFTWARE, V13, P71, DOI 10.1016/0164-1212(90)90035-K
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1995, ANN SOFTW ENG
   BANKER RD, 1994, INFORM SOFTWARE TECH, V36, P275, DOI 10.1016/0950-5849(94)90083-3
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Bhattacharyya S, 1998, DECISION SCI, V29, P871, DOI 10.1111/j.1540-5915.1998.tb00880.x
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Brooks Fred, 1975, The Mythical Man-Month
   Chiang AC, 2005, FUNDAMENTAL METHODS
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Fairley R. E., 1992, International Conference on Software Engineering, P382, DOI 10.1145/143062.143155
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Fried L., 1991, Journal of Information Systems Management, V8, P27, DOI 10.1080/07399019108964994
   Hu Q, 1997, IEEE T SOFTWARE ENG, V23, P379, DOI 10.1109/32.601078
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   Pendharkar PC, 2007, INFORM TECHNOL MANAG, V8, P253, DOI 10.1007/s10799-006-0005-3
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pendharkar PC, 2002, J COMPUT INFORM SYST, V43, P7
   PENDHARKAR PC, COMMUNICATI IN PRESS
   Pickard L, 1999, IEEE T SOFTWARE ENG, V25, P282, DOI 10.1109/32.761451
   PUTMAN LH, 1982, EC INFORM PROCESSING
   Qing Hu, 1998, Journal of Management Information Systems, V15, P143
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   WALSTON CE, 1977, IBM SYST J, V16, P54, DOI 10.1147/sj.161.0054
NR 27
TC 26
Z9 33
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2008
VL 50
IS 12
BP 1181
EP 1188
DI 10.1016/j.infsof.2007.10.019
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 358CS
UT WOS:000259894800001
DA 2024-07-18
ER

PT J
AU Al Dallal, J
   Sorenson, P
AF Al Dallal, Jehad
   Sorenson, Paul
TI Estimating the coverage of the framework application reusable
   cluster-based test cases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE case study; cluster testing; framework interface classes; Hooks;
   object-oriented framework; object-oriented framework application;
   reusable test cases
AB Object-oriented frameworks support both software code and design reusability. In addition, it is found that providing class-based tests with the framework reduces considerably the class-based testing time and effort of the applications developed using the frameworks. Similarly, reusable cluster-based test cases can be generated using the framework hooks, and they, too, can be provided with the framework to reduce the cluster testing time and effort of the framework applications.
   In this paper, we introduce a methodology to estimate the possible coverage of the cluster-based reusable test cases for framework applications prior to suggesting and applying a specific technique to produce the test cases. An experimental case study is conducted to demonstrate the practical issues in applying the introduced methodology and to give insights on the possible coverage of the framework reusable cluster-based test cases. The results of applying the methodology on five framework applications show that, on average, the reusable cluster-based test cases cover at least one-third of the cluster testing areas of the interface classes created during the framework application engineering stage. (C) 2007 Elsevier B.V. All rights reserved.
C1 Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
   Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2H1, Canada.
C3 Kuwait University; University of Alberta
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM jehad@cfw.kuniv.edu; sorenson@cs.ualberta.ca
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
CR Al Dallal J, 2005, J SOFTW MAINT EVOL-R, V17, P169, DOI 10.1002/smr.308
   ALDALLAL J, 2008, IN PRESS KUWAIT J SC, P35
   ALDALLAL J, 2003, THESIS U ALBERTA
   ALDALLAL J, 2006, T ENG COMPUTING TECH, V16, P90
   ALDALLAL J, 2006, T ENG COMPUTING TECH, V16, P103
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], CMUSEI2001TR022
   BECK K, 1994, P ECOOP 94, P139
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   BRIAND L, 1999, IEEE INT C SOFT MAIN
   Chen HY, 2001, ACM T SOFTW ENG METH, V10, P56, DOI 10.1145/366378.366380
   COHEN MB, 2006, P INT S SOFTW TEST A
   Dallal JA, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P231, DOI 10.1109/ASE.2002.1115018
   Froehlich G, 1997, PROC INT CONF SOFTW, P491, DOI 10.1145/253228.253432
   FROEHLICH G, 2002, THESIS U ALBERTA
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   HARROLD MJ, 2001, P ACM C OBJ OR PROGR, P312
   HORNSTEIN J, 2002, COMP BAS SOFTW ENG W
   Jaaksi A, 2002, IEEE SOFTWARE, V19, P73, DOI 10.1109/MS.2002.1020290
   JIN Z, 1998, J SOFTWARE TESTING V, V8, P133, DOI DOI 10.1002/(SICI)1099-1689(1998090)8:3<133::AID-STVR162>3.0.CO;2-M
   KAUPPINEN R, 2004, P INT WORKSH SOFTW P
   *LOCC, 2007, LOCC SOFTW INF
   MCGREGOR J, 2000, BUILDING REUSABLE TE
   Rothermel G, 2000, SOFTW TEST VERIF REL, V10, P77, DOI 10.1002/1099-1689(200006)10:2<77::AID-STVR197>3.0.CO;2-E
   Saleh K, 2001, INFORM SOFTWARE TECH, V43, P973, DOI 10.1016/S0950-5849(01)00199-9
   TEVANLINNA A, 2004, ACM SIGSOFT SOFTWARE, V29, P12, DOI DOI 10.1145/979743.979766
   TSAI W, 1999, 23 ANN INT COMP SOFT
   WANG Y, 2000, ACM COMPUT SURV, V32, P7
   WILKIN S, 2002, P 2002 PAC NW SOFTW, P71
   ZHENG J, 2006, P 28 INT C SOFTW ENG
   ZHENG J, 2005, P 20 IEEE ACM INT C
NR 31
TC 2
Z9 2
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2008
VL 50
IS 6
BP 595
EP 604
DI 10.1016/j.infsof.2007.07.006
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 295WY
UT WOS:000255506100008
DA 2024-07-18
ER

PT J
AU Shin, SJ
   Lee, WS
AF Shin, Se Jung
   Lee, Won Suk
TI On-line generation association rules over data streams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE data streams; data mining; association rules; prefix-tree lattice
AB 5In order to efficiently trace the changes of association rules over an online data stream, this paper proposes a method of generating association rules directly over the changing set of currently frequent itemsets. While all of the currently frequent itemsets in an online data stream are monitored by the estDec method, all the association rules of every frequent itemset in the prefix tree of the estDec method are generated by the proposed method in this paper. For this purpose, a traversal stack is introduced to efficiently enumerate all association rules in the prefix tree. This online implementation can avoid the drawbacks of the conventional two-step approach. In addition, the prefix tree itself can be utilized as an index structure for finding the current support of the antecedent of an association rule. Finally, the performance of the proposed method is analyzed by a series of experiments to identify its various characteristics. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Shin, Se Jung; Lee, Won Suk] Yonsei Univ, Dept Comp Sci, Seoul 120749, South Korea.
C3 Yonsei University
RP Shin, SJ (corresponding author), Yonsei Univ, Dept Comp Sci, 134 Shinchon Dong, Seoul 120749, South Korea.
EM starofu@database.yonsei.ac.kr; leewo@database.yonsei.ac.kr
CR Aggarwal CC, 2001, IEEE T KNOWL DATA EN, V13, P527, DOI 10.1109/69.940730
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Aumann Y, 1999, J INTELL INF SYST, V12, P61, DOI 10.1023/A:1026482903537
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Chang J.H., 2003, 9 ACM C KNOWL DISC D, P487, DOI [10.1145/956750.956807, DOI 10.1145/956750.956807]
   Chi Y, 2004, FOURTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P59, DOI 10.1109/ICDM.2004.10084
   Ganti V., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P439, DOI 10.1109/ICDE.2000.839443
   Lee D., 2005, P 5 IEEE INT C DAT M
   Manku G.S., 2002, P 13RD INT C VERY LA, P346
   METWALLY A, 2005, P 31 INT C VER LARG
   Savasere A., 1995, P 21TH INT C VERY LA, P432
   TENG WG, 2003, P 29 INT C VER LARG
   [No title captured]
NR 14
TC 2
Z9 3
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2008
VL 50
IS 6
BP 569
EP 578
DI 10.1016/j.infsof.2007.06.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 295WY
UT WOS:000255506100006
DA 2024-07-18
ER

PT J
AU Ferrari, RN
   Madhavji, NH
AF Ferrari, Remo N.
   Madhavji, Nazim H.
TI Architecting-problems rooted in requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE International Requirements Engineering Conference/12th
   International Workshop on Requirements Engineering - Foundation for
   Software Quality
CY 2006
CL Luxembourg, LUXEMBOURG
SP IEEE
DE requirements engineering; software architecture; software quality;
   process improvement; empirical study
AB Requirements permeate many parts of the software development process outside the requirements engineering (RE) process. It is thus important to determine whether software developers in these other areas of software development face any requirements-oriented (RO) problems in carrying out their tasks. Feedback so obtained can be invaluable for improving both requirements and RE technologies. In this paper, we describe an exploratory case study of requirements-oriented problems experienced by 16 architecting teams designing the same banking application. The study found that there were several different types of RO problems, of varying severity, which the architects faced in using the given requirements; those architects with RE background also faced RO problems; and about a third of all problems were RO problems. There was much concurrence of our findings with software-expert opinion from a large insurance company. There were also areas where there were relatively few RO problems. The paper also describes some implications of the findings for the RE field, particularly in the areas of. expression of quality requirements for different stakeholders; empirical studies on quality scenarios; tighter integration of RE and software architecting processes; and requirements to architecture mapping. There are opportunities for further research based on two emergent hypotheses which are also described in this paper. Crown copyright (c) 2007 Published by Elsevier B.V. All rights reserved.
C1 [Ferrari, Remo N.; Madhavji, Nazim H.] Univ Western Ontario, Dept Comp Sci, London, ON N6A 5B7, Canada.
C3 Western University (University of Western Ontario)
RP Madhavji, NH (corresponding author), Univ Western Ontario, Dept Comp Sci, London, ON N6A 5B7, Canada.
EM rnferrar@csd.uwo.ca; madhavji@csd.uwo.ca
OI Madhavji, Nazim/0009-0006-5207-3203
CR [Anonymous], 1997, Requirements engineering: a good practice guide
   Barbacci M., 2003, QUALITY ATTRIBUTE WO, VThird
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Berander P., 2004, Proceedings of the 7th International Conference on Empirical Assessment Evaluation in Software Engineering, P95
   BRANDOZZI M, STRAW WORKSH 2003
   CREWELL JW, 2003, 1000 OAKS
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   EGYED A, STRAW WORKSHOP 2001
   FERRARI R, 2007, 6 WORK IEEE IFIP C S
   Finkelstein A., 2000, ICSE 2000 P
   GRAHAM D, 2006, 14 REQ ENG C RE06
   Guion L.A., 2002, EDIS, V2002
   Hancock B., 2002, An introduction to qualitative research
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   IN H, STRAW WORKSH 2001
   KAZMAN R, 2000, ATAM METHODS ARCHITE
   Kuwana E., 1993, P IEEE INT S REQUIRE, P273
   LIU D, STRAW WORKSH 2003
   MADHAVJI NH, 2004, CASCON WORKSH TOR 5
   Mason J., 1996, QUALITATIVE RES, P9
   METZE L, 2001, TECHNICAL REPORT REL
   Nixon B., 1993, Proceedings of IEEE International Symposium on Requirements Engineering, P42
   NORD RL, STRAW WORKSH 2003
   NUSEIBEH B, 2001, STRAW WORKSH
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rapanotti L, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P80
   Runeson P, 2003, P 7 INT C EMP ASS EV
   SILVA T, STRAW WORKSH 2003
   *STRAW, 2001, ICSE WORKSH
   Thelin T, 2004, PROC INT CONF SOFTW, P263, DOI 10.1109/ICSE.2004.1317448
   WENQIAN L, STRAW WORKSH 2003
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
NR 34
TC 8
Z9 13
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 53
EP 66
DI 10.1016/j.infsof.2007.10.012
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 248ZT
UT WOS:000252196700008
DA 2024-07-18
ER

PT J
AU Ali, S
   Briand, LC
   Rehman, MJ
   Asghar, H
   Iqbal, MZZ
   Nadeem, A
AF Ali, Shaukat
   Briand, Lionel C.
   Rehman, Muhammad Jaffar-ur
   Asghar, Hajra
   Iqbal, Muhammad Zohaib Z.
   Nadeem, Aamer
TI A state-based approach to integration testing based on UML models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML based testing; automated testing; object-oriented systems
ID MUTATION
AB Correct functioning of object-oriented software depends upon the successful integration of classes. While individual classes may function correctly, several new faults can arise when these classes are integrated together. In this paper, we present a technique to enhance testing of interactions among modal classes. The technique combines UML collaboration diagrams and statecharts to automatically generate an intermediate test model, called SCOTEM (State Collaboration TEst Model). The SCOTEM is then used to generate valid test paths. We also define various coverage criteria to generate test paths from the SCOTEM model. In order to assess our technique, we have developed a tool and applied it to a case study to investigate its fault detection capability. The results show that the proposed technique effectively detects all the seeded integration faults when complying with the most demanding adequacy criterion and still achieves reasonably good results for less expensive adequacy criteria. (C) 2006 Elsevier B.V. All rights reserved.
C1 Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
   Mohammad Ali Jinnah Univ, Ctr Software Dependabil, Islamabad, Pakistan.
C3 Carleton University; Mohammad Ali Jinnah University
RP Briand, LC (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
EM shaukat@jinnah.edu.pk; briand@sce.carleton.ca; hajra@jinnah.edu.pk;
   zouhaib@jinnah.edu.pk; anadeem@jinnah.edu.pk
RI Ali, Shaukat/H-4121-2013; Nadeem, Aamer/F-7509-2011
OI Murtaza, Hajra/0000-0002-9516-9110; Iqbal, Muhammad Zohaib
   Z/0000-0001-8190-5327; Nadeem, Aamer/0000-0002-8641-8795; Ali,
   Shaukat/0000-0002-9979-3519
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   ALI S, SCE0502 CARL U
   Ammann P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P99, DOI 10.1109/ISSRE.2003.1251034
   Andre Joa��oMaria., 2005, El problema del conocimiento en Nicolas de Cusa: genealogia y proyeccion; Primer Congreso Internacional Cusano de Latinoamerica (Buenos Aires, 1-4 de junio de 2004), P15
   [Anonymous], 1990, Software testing techniques {
   BADRI M, LECT NOTES COMPUTER, P223
   BALDINI A, 2004, INT J SOFTW TOOLS TE, V7, P326
   Basanieri Francesca, 2001, P ESCOM SCOPE LOND E, P387
   BERTOLINO A, 2004, P INT WORKSH TEST AN, P85
   Bertolino A., 2000, P SOFTW QUAL WEEK QW
   Binder R.V., 2000, AW OBJ TECHNOL S
   BOGDANOV K, 2000, THESIS U SHEFFIELD
   Briand L.C., 2001, P 4 INT C UNIFIED MO, P194, DOI DOI 10.5555/647245.719446
   Briand LC, 2003, LECT NOTES COMPUT SC, V2863, P249
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC, 2002, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2002.1167775
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   BURTON S, 1999, 319 YCS U YORK DEP C
   Cavalli A, 2005, ELECTRON NOTES THEOR, V116, P133, DOI 10.1016/j.entcs.2004.02.072
   Chevalley P, 2001, P INT COMP SOFTW APP, P205, DOI 10.1109/CMPSAC.2001.960618
   Christenson D. M., 2000, AMPHITRUO, P39
   de Souza SDS, 1999, SOFTWARE QUAL J, V8, P285, DOI 10.1023/A:1008978021407
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   Fraikin F, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P261, DOI 10.1109/ASE.2002.1115026
   Fröhlich P, 2000, LECT NOTES COMPUT SC, V1850, P472
   GALLAGHER L, 2006, J SOFTWARE TESTING V
   Gnesi S, 2004, IEEE INT C ENG COMP, P75, DOI 10.1109/ICECCS.2004.1310906
   HARTMAN A, P INT S SOFTW TEST A, P129
   HARTMANN J, 2000, P INT S SOFTW TEST A, P60
   KANSOMKEAT S, 2003, P SAICSIT 2003 ACM, P296
   Kim SK, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P100
   KIM YG, 1999, IEEE SOFTWARE, V146, P146
   Kung DC, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P158, DOI 10.1109/HASE.1998.731608
   KUNG DC, 1994, P 17 ANN INT COMP SO
   Le Hanh V., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P381
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Li Liuying, 1999, Proceedings Technology of Object-Oriented Languages and Systems (Cat. No.PR00393), P273, DOI 10.1109/TOOLS.1999.796494
   Li SH, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P122, DOI 10.1109/ASE.2004.1342730
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Martena V, 2002, IEEE INT C ENG COMP, P135, DOI 10.1109/ICECCS.2002.1181506
   Myers Glenford J., 2011, The Art of Software Testing
   NILAWAR M, 2003, THESIS U NEVADA RENO
   NORI A, 2001, TECHNIQUE MODEL BASE
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Ostrand T., 1988, P 6 ANN PAC NW SOFTW, P233
   Pelliccione P, 2005, LECT NOTES COMPUT SC, V3489, P267
   Pickin S, 2002, LECT NOTES COMPUT SC, V2529, P97
   Pilskalns O, 2003, LECT NOTES COMPUT SC, V2863, P234
   Riebisch M, 2003, LECT NOTES COMPUT SC, V2591, P394
   Sajeev ASM., 2003, ELECT NOTES THEORETI, V82, P1, DOI [10.1016/S1571-0661(04)81037-5, DOI 10.1016/S1571-0661(04)81037-5]
   Scheetz M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P250, DOI 10.1109/ISSRE.1999.809330
   SOKENOU D, 2004, 200410 TU
   TSE TH, 1995, TR9505 HKU CSIS
   Vieira ME, 2000, P WORKSH AUT PROGR A
   Wang LZ, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P284, DOI 10.1109/APSEC.2004.55
   Wittevrongel J, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P303
   WU Y, ISETR0207
NR 59
TC 55
Z9 62
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2007
VL 49
IS 11-12
BP 1087
EP 1106
DI 10.1016/j.infsof.2006.11.002
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 227RS
UT WOS:000250676100002
DA 2024-07-18
ER

PT J
AU Gorschek, T
   Svahnberg, M
   Borg, A
   Loconsole, A
   Börstler, J
   Sandahl, K
   Eriksson, M
AF Gorschek, Tony
   Svahnberg, Mikael
   Borg, Andreas
   Loconsole, AnnaBella
   Borstler, Jurgen
   Sandahl, Kristian
   Eriksson, Magnus
TI A controlled empirical evaluation of a requirements abstraction model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements engineering; requirements abstraction; empirical
   evaluation; requirements abstraction model; pre-pilot validation
AB Requirement engineers in industry are faced with the complexity of handling large amounts of requirements as development moves from traditional bespoke projects towards market-driven development. There is a need for usable and useful models that recognize this reality and support the engineers in a continuous effort of choosing which requirements to accept and which to dismiss off hand using the goals and product strategies put forward by management. This paper presents an evaluation of such a model that is built based on needs identified in industry. The evaluation's primary goal is to test the model's usability and usefulness in a lab environment prior to large scale industry piloting, and is a part of a large technology transfer effort. The evaluation uses 179 subjects from three different Swedish Universities, which is a large portion of the university students educated in requirements engineering in Sweden during 2004 and 2005. The results provide a strong indication that the model is indeed both useful and usable and ready for industry trials. (c) 2006 Elsevier B.V. All rights reserved.
C1 Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, S-37225 Ronneby, Sweden.
   Linkoping Univ, Dept Comp & Informat Sci, S-58183 Linkoping, Sweden.
   Umea Univ, Dept Comp Sci, S-90187 Umea, Sweden.
   Land Syst Hagglunds AB, S-89182 Ornskoldsvik, Sweden.
C3 Blekinge Institute Technology; Linkoping University; Umea University
RP Gorschek, T (corresponding author), Blekinge Inst Technol, Sch Engn, Dept Syst & Software Engn, POB 520, S-37225 Ronneby, Sweden.
EM tony.gorschek@bth.se; mikael.svahnberg@bth.se; andbo@ida.liu.se;
   bella@cs.umu.se; jubo@cs.umu.se; krs@ida.liu.se;
   magnus.eriksson@baesystems.se
RI Börstler, Jürgen/IWE-4001-2023; Gorschek, Tony/E-3445-2013; Loconsole,
   Annabella/G-4728-2014
OI Börstler, Jürgen/0000-0003-0639-4234; 
CR [Anonymous], PRODUCT MANAGEMENT
   [Anonymous], P 8 INT WORKSH REQ E
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Butscher SA, 2000, MARK MANAG, V9, P48
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2004, SOFTWARE PRACT EXPER, V34, P1311, DOI 10.1002/spe.615
   GORSCHEK T, 2003, P EUR SOFTW PROC IMP
   Higgins SA, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1159026
   Kavakli E, 1996, IEEE SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P308, DOI 10.1109/ECBS.1996.494543
   Kotler P.Armstrong G., 2001, PRINCIPLES MARKETING
   Kotonya G., 1998, Requirements engineering: processes and techniques
   LAUESEN S, 2000, SOFTWARE REQUIREMENT
   Mintzberg H., 2009, STRATEGY SAFARI GUID, V2nd
   Potts C, 1997, ANN SOFTW ENG, V3, P23, DOI 10.1023/A:1018994106507
   Potts C, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P102, DOI 10.1109/ISRE.1997.566847
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Robson C., 2002, Real World Research, V2nd
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Sommerville I, 2001, Software Engineering
   Weber M, 2003, IEEE SOFTWARE, V20, P16, DOI 10.1109/MS.2003.1159025
   Wiegers K., 1999, SOFTWARE REQUIREMENT
   Wieringa R, 2004, IEEE SOFTWARE, V21, P16, DOI 10.1109/MS.2004.1270756
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 25
TC 14
Z9 14
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2007
VL 49
IS 7
BP 790
EP 805
DI 10.1016/j.infsof.2006.09.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 179MV
UT WOS:000247294900006
DA 2024-07-18
ER

PT J
AU Sutton, A
   Maletic, JI
AF Sutton, Andrew
   Maletic, Jonathan I.
TI Recovering UML class models from C++: A detailed explanation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Annual Meeting of the
   American-Association-of-Directors-of-Psychiatric-Residency-Training
CY MAR 12, 2005
CL Tucson, AZ
SP Amer Assoc Directors Psychiat Residency Training
DE software engineering; reverse engineering; design recovery; program
   comprehension; UML class models
ID CODE
AB An approach to recovering design-level UML class models from C++ source code to support program comprehension is presented. A set of mappings are given that focus on accurately identifying such elements as relationship types, multiplicities, and aggregation semantics. These mappings are based on domain knowledge of the C++ language and common programming conventions and idioms. Additionally, formal concept analysis is used to detect design-level attributes of UML classes. An application implementing these mappings is used to reverse engineer a moderately sized, open-source application and the resultant class model is compared against those produced by other UML reverse engineering tools. This comparison shows that the presented mapping rules effectively produce meaningful and semantically accurate UML models. (c) 2006 Elsevier B.V. All rights reserved.
C1 Kent State Univ, Dept Comp Sci, Kent, OH 44242 USA.
C3 University System of Ohio; Kent State University; Kent State University
   Kent; Kent State University Salem
RP Maletic, JI (corresponding author), Kent State Univ, Dept Comp Sci, Kent, OH 44242 USA.
EM asutton@cs.kent.edu; jmaletic@cs.kent.edu
CR [Anonymous], BRIEF GUIDE STANDARD
   Anquetil N, 2000, PROG COMPREHEN, P231, DOI 10.1109/WPC.2000.852497
   Barowski LA, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P309, DOI 10.1109/WCRE.2002.1173088
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Canfora G, 1999, PROG COMPREHEN, P136, DOI 10.1109/WPC.1999.777752
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   COLE R, 2003, P 15 INT C SOFTW ENG, P726
   Collard M.L., 2002, DocEng '02, P34
   Collard ML, 2003, PROG COMPREHEN, P134
   Dekel U, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P353, DOI 10.1109/WCRE.2003.1287267
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenbarth T, 2001, PROC IEEE INT CONF S, P602, DOI 10.1109/ICSM.2001.972777
   GODIN R, 1993, P 8 ANN C OBJ OR PRO, P394
   GODIN R, 1998, INT J KNOWLEDGE ENG, V5, P119
   Gogolla Martin., 2000, Proc. 7th Reengineering Forum, P41
   GUEHENEUC YG, 2004, P 19 C OBJ OR PROGR, P301
   Holt RC, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P162, DOI 10.1109/WCRE.2000.891463
   Jackson D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P194, DOI 10.1109/ICSE.1999.841009
   Jiang JJ, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P389
   KESCHENAU M, 2004, P COMP 19 ANN ACM SI, P326
   Kollmann R, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/WCRE.2002.1173061
   Kollmann R, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/WCRE.2001.957812
   Kraft NA, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P196
   KRONE M, 1994, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.1994.296765
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   Maletic JI, 2002, PROG COMPREHEN, P289, DOI 10.1109/WPC.2002.1021351
   Malton AJ, 2005, WCRE: 12th Working Conference on Reverse Engineering 2005, Proceedings, P187
   Matzko S, 2002, P 40 INT C TOOLS PAC, P13
   NELTING G, 2000, P 4 EUR C SOFTW MAIN
   *OMG, 2003, UN MOF LANG 1 5
   *OMG, 2002, MET OBJ FAC MOF 1 4
   SAHRAOUI HA, 1997, P INT C AUT SOFTW EN
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   Snelting G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P3, DOI 10.1109/CSMR.2000.827299
   SNELTING G, 1998, P ACM SIGSOFT S FDN, P99, DOI DOI 10.1145/288195.288273
   Storey MAD, 1997, PROC INT CONF SOFTW, P606, DOI 10.1145/253228.253496
   SUTTON A, 2005, THESIS KENT STATE U
   Sutton AJ, 2005, PUBLICATION BIAS IN META-ANALYSIS: PREVENTION, ASSESSMENT AND ADJUSTMENTS, P175
   TILLEY T, 2003, P 1 ITN C FORM CONC
   Tonella P, 2001, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSM.2001.972750
   Tonella P, 2002, PROC IEEE INT CONF S, P54, DOI 10.1109/ICSM.2002.1167747
   Tonella P, 2003, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSM.2003.1235418
   Tonella P., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P230, DOI 10.1109/ICSM.1999.792619
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   WONG K, 1995, IEEE SOFTWARE, V12, P46, DOI 10.1109/52.363166
NR 45
TC 21
Z9 34
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2007
VL 49
IS 3
BP 212
EP 229
DI 10.1016/j.infsof.2006.10.011
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 139AA
UT WOS:000244403200002
DA 2024-07-18
ER

PT J
AU Ma, ZM
   Yan, L
AF Ma, Z. M.
   Yan, Li
TI Generalization of strategies for fuzzy query translation in classical
   relational databases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE classical relational databases; fuzzy set; fuzzy query; SQL; translation
ID LANGUAGE
AB Users of information systems would like to express flexible queries over the data possibly retrieving imperfect items when the perfect ones, which exactly match the selection conditions, are not available. Most commercial DBMSs are still based on the SQL for querying. Therefore, providing some flexibility to SQL can help users to improve their interaction with the systems without requiring them to learn a completely novel language. Based on the fuzzy set theory and the a-cut operation of fuzzy number, this paper presents the generic fuzzy queries against classical relational databases and develops the translation of the fuzzy queries. The generic fuzzy queries mean that the query condition consists of complex fuzzy terms as the operands and complex fuzzy relations as the operators in a fuzzy query. With different thresholds that the user chooses for the fuzzy query, the user's fuzzy queries can be translated into precise queries for classical relational databases. (c) 2006 Elsevier B.V. All rights reserved.
C1 NE Univ, Coll Informat Sci & Engn, Shenyang 110004, Liaoning, Peoples R China.
C3 Northeastern University - China
RP Ma, ZM (corresponding author), NE Univ, Coll Informat Sci & Engn, Shenyang 110004, Liaoning, Peoples R China.
EM mazongmin@ise.neu.edu.cn
OI Ma, Zongmin/0000-0001-7780-6473
CR [Anonymous], P 2005 ACM S APPL CO
   BOSC P, 1995, IEEE T FUZZY SYST, V3, P1, DOI 10.1109/91.366566
   BOSC P, 1988, FUZZY SET SYST, V28, P333, DOI 10.1016/0165-0114(88)90039-5
   Bosc P., 1997, FUZZY INFORM ENG GUI, P233
   CHANG SK, 1978, IEEE T SOFTWARE ENG, V4, P31, DOI 10.1109/TSE.1978.231464
   CHANG SK, 1979, IEEE T PATTERN ANAL, V1, P281, DOI 10.1109/TPAMI.1979.4766924
   Chen SM, 1997, IEEE T SYST MAN CY B, V27, P714, DOI 10.1109/3477.604117
   Galindo J., 2005, FUZZY DATABASES MODE
   Goncalves M, 2001, 10TH IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOLS 1-3, P477, DOI 10.1109/FUZZ.2001.1007352
   Goncalves M, 2001, 10TH IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOLS 1-3, P473, DOI 10.1109/FUZZ.2001.1007351
   Ma ZM, 2002, INT J INTELL SYST, V17, P925, DOI 10.1002/int.10057
   NAKAJIMA H, 1993, SECOND IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOLS 1 AND 2, P477, DOI 10.1109/FUZZY.1993.327514
   Petry FE, 2003, FUZZY SET SYST, V140, P51, DOI 10.1016/S0165-0114(03)00027-7
   STEIMANN F, 1994, P 12 EUR M CYB SYST, P271
   TAHANI V, 1977, INFORM PROCESS MANAG, V13, P289, DOI 10.1016/0306-4573(77)90018-8
   TAKAHASHI Y, 1991, IEEE T SYST MAN CYB, V21, P1576, DOI 10.1109/21.135699
   WONG MH, 1990, INFORM SYST, V15, P583, DOI 10.1016/0306-4379(90)90030-S
   YAO XB, IN PRESS ENV URBAN S
   Yazici A, 1997, FUZZY SET SYST, V89, P1, DOI 10.1016/S0165-0114(96)00080-2
   Zadeh L., 1972, J CYBERNETICS, V2, P4, DOI DOI 10.1080/01969727208542910
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
NR 21
TC 31
Z9 40
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 172
EP 180
DI 10.1016/j.infsof.2006.05.002
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 118EY
UT WOS:000242926300007
DA 2024-07-18
ER

PT J
AU Huang, H
   Tsai, WT
   Chen, YN
AF Huang, Hai
   Tsai, Wei-Tek
   Chen, Yinong
TI Binary analysis and automated hot patching for Web-based applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE patching; binary code instrumentation; reasoning
AB Patching technologies are commonly applied to improve the dependability of software after release. This paper reports the design of an automated hot patching (AHP) framework that fully automates reasoning for the causes of failures and patching the binary code of Web-based applications. AHP admits the hardness for rooting out all faults before product release, and autonomously patches problems of application programs. By directly operating on binary code, AHP is universal to virtually all applications. A promising application of AHP is to shortcut a function of the remote maintenance center (RMC) and hence to reduce the turn around time for patches. (C) 2006 Published by Elsevier B.V.
C1 Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85281 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Chen, YN (corresponding author), Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85281 USA.
EM hai@asu.edu; wtsai@asu.edu; yinong@asu.edu
OI Chen, Yinong/0000-0002-8780-3994
CR Clarke E., 2002, MODEL CHECKING
   COEHN F, 2003, TESTING WEB SERVICES
   DE B, 2003, WEB SERVICES CHALLEN
   Demsky B., 2003, P 18 C OBJ OR PROGR
   Garlan David., 2003, ARCHITECTING DEPENDA
   GEORGIADIS I, 2002, P ACM SOGSOFT WORKSH
   Henzinger ThomasA., 2002, Proc. of the Symposium on Principles of Programming Languages. POPL, P58
   HUANG H, 2004, TR200410 AR STAT U S
   Kearns Michael J., 1987, P 19 ANN ACM S THEOR, P285, DOI [10.1145/28395.28426, DOI 10.1145/28395.28426]
   Kiriansky V., 2002, USENIX SEC S
   KUMAR N, 2004, P ACM SIGSOFT WORKSH
   *MICR, 2004, PHOEN PROJ
   *MICR, 2004, COMM ENG CRIT 2005
   Singh MunindarP., 2005, SERVICE ORIENTED COM
   Tsai W. T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P554, DOI 10.1109/CMPSAC.2004.1342894
   Tsai WT, 2005, P INT COMP SOFTW APP, P101
   Tsai WT, 2005, ISADS 2005: INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS,PROCEEDINGS, P43, DOI 10.1109/ISADS.2005.1452016
   VALIANT LG, 1984, COMMUN ACM, V27, P1134, DOI 10.1145/1968.1972
NR 18
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2006
VL 48
IS 12
BP 1148
EP 1158
DI 10.1016/j.infsof.2006.06.004
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115XY
UT WOS:000242768300003
DA 2024-07-18
ER

PT J
AU Li, JJ
   Weiss, D
   Yee, H
AF Li, J. Jenny
   Weiss, David
   Yee, Howell
TI Code-coverage guided prioritized test generation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID SYSTEM
AB Most automatic test generation research focuses on generation of test data from pre-selected program paths or input domains or program specifications. This paper presents a methodology for a full solution to code-coverage-based test case generation, which includes code coverage-based path selection, test data generation and actual test case representation in program's original languages. We implemented this method in an automatic testing framework, eXVantage. Experimental results and industrial trials show that the framework is able to generate tests to achieve program line coverage from 20% to 98% with reduced overall testing effort. Our major contributions include an innovative coverage-based program prioritization algorithm, a novel path selection algorithm that takes into consideration program priority and functional calling relationship, and a constraint solver for test data generation that derives constraints from byte-code and solves complex constraints involving strings and dynamic objects. (C) 2006 Elsevier B.V. All rights reserved.
C1 Avaya Labs Res, Software Technol Res, Basking Ridge, NJ 07920 USA.
   MIT, Lincoln Lab, Lexington, MA 02420 USA.
C3 Avaya; Lincoln Laboratory; Massachusetts Institute of Technology (MIT)
RP Li, JJ (corresponding author), Avaya Labs Res, Software Technol Res, 233 Mt Airy Rd, Basking Ridge, NJ 07920 USA.
EM jjli@research.avayalabs.com; weiss@research.avayalabs.com;
   hyee@ll.mit.edu
OI Li, J. Jenny/0000-0001-6297-9160
CR Agrawal H, 1998, COMPUTER, V31, P64, DOI 10.1109/2.689678
   [Anonymous], P 4 SDL FOR LOSB POR
   BEYDEDA S, 2003, COMP SOFTW APPL C CO
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cormen, INTRO ALGORITHMS
   Edvardsson Jon., 1999, Proceedings of the 2nd Conference on Computer Science and Engineering, P21
   Gupta N, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P219, DOI 10.1109/ASE.2000.873666
   HARTMANN J, 2000, P INT S SOFTW TEST A, P60
   HOWDEN WE, 1977, IEEE T SOFTWARE ENG, V3, P266, DOI 10.1109/TSE.1977.231144
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   LI JJ, 2005, P INT S SOFTW REL EN
   LI JJ, 2002, P 5 IEEE INT S OBJ O
   MAYRHAUSER A, 1999, P 23 ANN INT COMP SO, P110
   Michael C, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P136, DOI 10.1109/ASE.1998.732605
   Michael CC, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P307, DOI 10.1109/ASE.1997.632858
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   PETRENKO A, 1994, P 7 IWTCS, P193
   Ramamoorthy C. V., 1976, IEEE Transactions on Software Engineering, VSE-2, P293, DOI 10.1109/TSE.1976.233835
   Sy NT, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P13, DOI 10.1109/ASE.2001.989786
   TSAI WT, 2002, OMGS 3 WORKSH UML EN
   ZENG Z, 2001, P 11 IFIP VLSI SOC C, P375
NR 22
TC 23
Z9 29
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2006
VL 48
IS 12
BP 1187
EP 1198
DI 10.1016/j.infsof.2006.06.007
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115XY
UT WOS:000242768300006
DA 2024-07-18
ER

PT J
AU Andrade, J
   Ares, J
   García, R
   Pazos, J
   Rodríguez, S
   Silva, A
AF Andrade, J.
   Ares, J.
   Garcia, R.
   Pazos, J.
   Rodriguez, S.
   Silva, A.
TI Definition of a problem-sensitive conceptual modelling language::
   foundations and application to software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE conceptual model; conceptual modelling language; problem sensitivity;
   software engineering
ID METHODOLOGICAL FRAMEWORK
AB A conceptual modelling language should provide constructors that can be used to represent the conceptualisation of a problem considering the problem domain. However, software engineering has traditionally focused on implementation concepts.
   This paper considers the appropriate generic conceptualisation theoretical aspects to identify the conceptual elements for which constructors have to be provided in a problem-sensitive conceptual modelling language. These elements match the formal definition of any conceptualisation and are derived from natural language. By looking at these elements, we have defined a conceptual modelling language that has been successfully applied in knowledge engineering and software engineering. (C) 2005 Elsevier B.V. All rights reserved.
C1 Univ A Coruna, La Coruna 15071, Spain.
   Tech Univ Madrid, Madrid 28660, Spain.
C3 Universidade da Coruna; Universidad Politecnica de Madrid
RP Andrade, J (corresponding author), Univ A Coruna, Campus Elvina S-N, La Coruna 15071, Spain.
EM jag@udc.es; juanar@udc.es; rafael@udc.es; jpazos@fi.upm.es;
   santi@udc.es; asilva@fi.upm.es
RI Andrade-Garda, Javier/U-8124-2018; Silva, Andres/D-4373-2012; Garcia
   Vazquez, Rafael/G-2099-2016; Ares Casal, Juan/G-2140-2016;
   Rodriguez-Yanez, Santiago/E-3038-2014
OI Andrade-Garda, Javier/0000-0002-9630-2534; Silva,
   Andres/0000-0002-7273-0526; Garcia Vazquez, Rafael/0000-0003-2775-2010;
   Ares Casal, Juan/0000-0002-4497-2114; Rodriguez-Yanez,
   Santiago/0000-0002-6781-7838
CR Andrade J, 2004, INFORM SOFTWARE TECH, V46, P635, DOI 10.1016/j.infsof.2003.11.003
   Andrade J, 2004, IEEE T SOFTWARE ENG, V30, P282, DOI 10.1109/TSE.2004.1
   [Anonymous], LNCS
   [Anonymous], 1981, SYSTEMS THINKING
   [Anonymous], PROGRAMMING NEW ERA
   [Anonymous], 1991, Artificial intelligence
   [Anonymous], CONCEPTUAL MODELLING
   [Anonymous], 1973, How to solve it
   Ares J, 1998, KNOWL-BASED SYST, V11, P87, DOI 10.1016/S0950-7051(98)00048-3
   Buchanan B.G., 1983, BUILDING EXPERT SYST, V1, P127
   Cook WalterAnthony., 1989, Case Grammar Theory
   Davis AM, 1997, ANN SOFTW ENG, V3, P63, DOI 10.1023/A:1018902408324
   DeMarco T., 1979, STRUCTURED ANAL SYST
   Descartes Ren#233;., 1969, OEUVRES DESCARTES
   Diez J., 1997, Fundamentos de filosofia de la ciencia
   Einstein A., 1949, ALBERT EINSTEIN PHIL, P2
   Feather M. S., 1997, Automated Software Engineering, V4, P419, DOI 10.1023/A:1008680612960
   GENESERETH M, 1986, LOGICAL FDN ARTIFICI
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Gómez A, 2000, DATA KNOWL ENG, V33, P169, DOI 10.1016/S0169-023X(99)00050-6
   Gomez A., 1997, INGENIERIA CONOCIMIE
   HINTIKKA J, METHOD ANAL ITS GEOM
   Hoppenbrouwers J, 1997, DATA KNOWL ENG, V23, P79, DOI 10.1016/S0169-023X(97)00011-6
   Jackson D, 1996, SOFTWARE ENG J, V11, P19, DOI 10.1049/sej.1996.0003
   Jackson D., 2000, FUTURE SOFTWARE ENG, P133
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jackson M., 2001, PROBLEM FRAMES ANAL
   JACKSON M, 2000, P 2000 NATO SUMM SCH, P3
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   MARTINEZ P, 1998, THESIS TU MADRID MAD
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nissen HW, 1996, IEEE SOFTWARE, V13, P37, DOI 10.1109/52.506461
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   OLLE TW, 1982, INFORMATION SYSTEMS, P1
   *RAE, 1994, GRAM LENG ESP
   REIF F, 1985, COGNITIVE STRUCTURE, P133
   REIFER DJ, 1993, SOFTWARE MANAGEMENT, P2
   Roberts E., 1986, THINKING RECURSIVELY
   SEEMANN O, 1958, MITOLOGIA CLASICA IL
   VERHEIJEN GMA, 1982, INFORMATION SYSTEMS, P537
   WAND Y, 1995, DECIS SUPPORT SYST, V15, P285, DOI 10.1016/0167-9236(94)00043-6
NR 42
TC 1
Z9 2
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 517
EP 531
DI 10.1016/j.infsof.2005.05.009
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900007
DA 2024-07-18
ER

PT J
AU Bagchi, A
AF Bagchi, A
TI A study on managing the performance requirements of a distributed
   service delivery software system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE management of performance requirements; qualitative performance
   measures; non-functional requirement; functional requirement;
   distributed software system
AB Like other non-functional requirements (NFR), performance requirements can have global impact on a system. This article presents a preliminary study on the management of performance requirements of a distributed service delivery (DSD) system using the 'Performance Requirement Framework (PeRF)' developed by Nixon [B.A. Nixon, Management of performance requirements for information systems, IEEE Transactions on Software Engineering 20 (12), (2000)]. Various steps in the framework are explained in the context of the DSD system, and the effects of some design decisions on the performance have been evaluated. PeRF was originally developed for information systems. The article shows how the framework can be adapted to a distributed system. However, additional studies on a number of distributed systems need to be carried out in order to develop a full framework for performance requirements for distributed systems, or perhaps for different categories of such systems. (c) 2004 Elsevier B.V. All rights reserved.
C1 Concordia Univ, Dept Bldg Civil & Environm Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Concordia Univ, Dept Bldg Civil & Environm Engn, 1455 Maisonneuve Blvd W,BE-341, Montreal, PQ H3G 1M8, Canada.
EM abagchi@bcee.concordia.ca
CR BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Chung L., 2000, Non-functional Requirements in Software Engineering
   CZERWINSKI SE, 1999, 5 ANN INT C MOB COMP, P24
   *EAGLES, 1995, EAGEWGPR2
   EDWARDS WK, 2002, CORE JINI
   HILDRUM K, 2002, P 14 ACM S PAR ALG A
   NIXON BA, 2000, IEEE T SOFTWARE ENG, V20
   OAKS S, 2000, JINI NUTSHELL
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
NR 9
TC 3
Z9 3
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2005
VL 47
IS 11
BP 735
EP 746
DI 10.1016/j.infsof.2004.12.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 954ZR
UT WOS:000231194700003
DA 2024-07-18
ER

PT J
AU Zowghi, D
   Gervasi, V
AF Zowghi, D
   Gervasi, V
TI On the interplay between consistency, completeness, and correctness in
   requirements evolution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th International Workshop on Requirements Engineering-Foundation for
   Software Quality (REFSQ 02)
CY SEP 09-10, 2002
CL ESSEN, GERMANY
DE software requirements; consistency; completeness; evolutionary
   correctness assurance
ID SOFTWARE REQUIREMENTS
AB The initial expression of requirements for a computer-based system is often informal and possibly vague. Requirements engineers need to examine this often incomplete and inconsistent brief expression of needs. Based on the available knowledge and expertise, assumptions are made and conclusions are deduced to transform this 'rough sketch' into more complete, consistent, and hence correct requirements. This paper addresses the question of how to characterize these properties in an evolutionary framework, and what relationships link these properties to a customer's view of correctness. Moreover, we describe in rigorous terms the different kinds of validation checks that must be performed on different parts of a requirements specification in order to ensure that errors (i.e. cases of inconsistency and incompleteness) are detected and marked as such, leading to better quality requirements. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Technol Sydney, Fac Informat Technol, Sydney, NSW 2007, Australia.
   Univ Pisa, Dipartimento Informat, I-56100 Pisa, Italy.
C3 University of Technology Sydney; University of Pisa
RP Univ Technol Sydney, Fac Informat Technol, Sydney, NSW 2007, Australia.
EM didar@it.uts.edu.au; gervasi@di.unipi.it
RI Zowghi, Didar/AAF-2345-2019
OI Zowghi, Didar/0000-0002-6051-0155; Gervasi, Vincenzo/0000-0002-8567-9328
CR [Anonymous], 1993, Software Requirements-objects, Functions and States
   BALZER R, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P158, DOI 10.1109/ICSE.1991.130638
   BJORNER D, 1997, P 1 WORKSH FORM METH
   BOEHM BW, 1984, IEEE SOFTWARE, V1, P75, DOI 10.1109/MS.1984.233702
   BORGIDA A, 1985, IEEE COMPUT, P82
   Bouhoula A, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ASE.2000.873659
   CORDES DW, 1989, INFORM SOFTWARE TECH, V31, P181, DOI 10.1016/0950-5849(89)90036-0
   Cugola G., 1996, ACM Transactions on Software Engineering and Methodology, V5, P191, DOI 10.1145/234426.234427
   DUBOIS E, 1992, P CAISE, P327
   Easterbrook S, 1996, SOFTWARE ENG J, V11, P31, DOI 10.1049/sej.1996.0004
   Easterbrook S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P48, DOI 10.1109/ISRE.1995.512545
   Easterbrook S.M., 1993, CSCW, P1
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Gervasi V, 2002, SOFTWARE PRACT EXPER, V32, P113, DOI 10.1002/spc.430
   HAGENSEN TM, 1992, P ACM SIFSOFT S SOFT, V17, P58
   Heimdahl MPE, 1996, IEEE T SOFTWARE ENG, V22, P363, DOI 10.1109/32.508311
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Hunter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P335, DOI 10.1145/292182.292187
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   Jackson M., 1993, PROC IEEE 1 INT S RE, P56
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jackson M., 2001, PROBLEM FRAMES ANAL
   JAFFE MS, 1991, IEEE T SOFTWARE ENG, V17, P241, DOI 10.1109/32.75414
   Kaiya H, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICRE.2002.1048501
   KATSUNO H, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P387
   Kowalski Robert, 1979, Logic for Problem Solving
   LETIER E, 2002, P 10 ACM SIGSOFT S F, P119
   LEVESON N, 2000, P 3 WORKSH FORM METH, P75
   LOTT CM, ACM SOFTWARE ENG NOT, V15
   LUTZ RR, 1993, P 1 IEEE INT S REQ E, P35
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Nuseibeh B., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P164, DOI 10.1109/IWSSD.1996.501161
   REUBENSTEIN HB, 1991, IEEE T SOFTWARE ENG, V17, P226, DOI 10.1109/32.75413
   Robinson WN, 1997, PROC INT CONF SOFTW, P140, DOI 10.1145/253228.253255
   Sheldon FT, 2001, 2001 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P311, DOI 10.1109/PRDC.2001.992714
   Sommerville I, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P74, DOI 10.1109/ICRE.1998.667811
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Woodside M, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P22, DOI 10.1109/ICSE.2002.1007953
   Yue K., 1987, Proceedings of the Fourth International Workshop on Software Specification and Design (Cat. No.TH0181-8), P42
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zowghi D, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P133, DOI 10.1109/APSEC.2001.991469
   Zowghi D, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P247, DOI 10.1109/ISRE.1997.566875
   Zowghi D., 2003, P 11 IEEE JOINT INT
NR 44
TC 64
Z9 72
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2003
VL 45
IS 14
BP 993
EP 1009
DI 10.1016/S0950-5849(03)00100-9
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 732QT
UT WOS:000185957600006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maamar, Z
AF Maamar, Z
TI Design of a simulation environment based on software agents and the high
   level architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE simulation; software agents; the high level architecture; influence
AB We present the SSAHLA project, standing for Simulation based on Software Agents and the High Level Architecture. This project aims at designing a simulation environment for training scenarios, using software agents and the High Level Architecture (HLA). Software agents are considered due to their relevant features to simulation, such as autonomy, adaptability, and collaboration. The HLA is considered as a communication middleware between the participants who take part to the training sessions. Each participant is associated with different types of agents that work for him and thus, perform operations on his behalf. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Zayed Univ, Coll Informat Syst, Software Agents Res Grp, Dubai, U Arab Emirates.
C3 Zayed University
RP Maamar, Z (corresponding author), Zayed Univ, Coll Informat Syst, Software Agents Res Grp, POB 19282, Dubai, U Arab Emirates.
CR CASTELFRANCHI C, 1996, FDN DISTRIBUTED ARTI, P527
   *DMSO, 2001, HIGH LEV ARCH
   ELHADOUAJ S, 2000, 2 WORKSH MULT BAS SI
   Franklin S., 1996, P 3 INT WORKSH AG TH
   Jennings N. R., 1998, Autonomous agents and multi-agent systems, P7, DOI DOI 10.1023/A:1010090405266
   MALERUD S, N220 FFI NORW DEF RE
   PECHOUCEK M, 2002, IEEE INTELLIGENT MAY
   TAMBE M, 1997, J ARTIFICIAL INTELLI
   2000, MULT SYST AG BAS SIM
   2001, INT COMM CONTR RES T
   2000, SIM INT WORKSH
NR 11
TC 4
Z9 5
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2003
VL 45
IS 3
BP 137
EP 148
AR PII S0950-5849(02)00192-1
DI 10.1016/S0950-5849(02)00192-1
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 643KW
UT WOS:000180861300003
DA 2024-07-18
ER

PT J
AU Fujiwara, H
   Kusumoto, S
   Inoue, K
   Suzuki, A
   Ootsubo, T
   Yuura, K
AF Fujiwara, H
   Kusumoto, S
   Inoue, K
   Suzuki, A
   Ootsubo, T
   Yuura, K
TI Case studies to evaluate a domain specific application framework based
   on complexity and functionality metrics
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE case study; framework; reuse; metrics; object-oriented software
ID OBJECT-ORIENTED DESIGN
AB An object-oriented framework is the reusable design or a system or subsystem implemented through a collection of concrete and abstract classes and their collaboration. It provides a generic solution to a set of similar problems in an application domain. However, it is difficult to introduce it to the organization that has been using a traditional reuse method. For effective technology transfer, the usefulness of the framework should be evaluated and shown to the organization. This paper evaluates the usefulness of a domain specific business application framework from a viewpoint of saving cost and quality of the software in a company. Here, we conducted two case studies. In the case studies, four kinds of applications are developed. Each of them is developed in two ways: using framework-based reuse and conventional module-based reuse. Then, we evaluate the difference among them using the several functionality and complexity metrics. As the results, the framework-based reuse would be more efficient than the module-based reuse in the company. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Osaka Univ, Grad Sch Informat Sci & Technol, Dept Comp Sci, Osaka 5608531, Japan.
   Hitachi Ltd, Business Solut Syst Div, Kawasaki, Kanagawa 2128567, Japan.
C3 Osaka University; Hitachi Limited
RP Kusumoto, S (corresponding author), Osaka Univ, Grad Sch Informat Sci & Technol, Dept Comp Sci, 1-3 Machkaneyama Toyonaka, Osaka 5608531, Japan.
EM kusumoto@ist.osaka-u.ac.jp
CR Albrecht A., 1994, ENCY SOFTWARE ENG, V1, P518
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1992, P ICSE, V14, P370
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Briand LC, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P334, DOI 10.1109/ISSRE.1998.730898
   Caldiera G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P167, DOI 10.1109/METRIC.1998.731242
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   *IFPUG, 2000, FUNCT POINT COUNT PR
   ISODA S, 1992, P ICSE, V14, P320
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   JENG JJ, 2001, P SSR, P58
   Kamiya T, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P253, DOI 10.1109/ISORC.1999.776386
   Kamiya T, 1999, INFORM SOFTWARE TECH, V41, P297, DOI 10.1016/S0950-5849(99)00005-1
   Keepence B, 1999, IEEE SOFTWARE, V16, P102, DOI 10.1109/52.776957
   Lokan C. J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P200, DOI 10.1109/METRIC.1999.809741
   MCARTHUR K, 2002, INFORMATION SOFTWARE, V44, P331
   REUSE CB, 1994, ENCY SOFTWARE ENG, V2, P1055
   Zamir Saba., 1999, Handbook of object technology
NR 19
TC 2
Z9 2
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2003
VL 45
IS 1
BP 43
EP 49
AR PII S0950-5849(02)00161-1
DI 10.1016/S0950-5849(02)00161-1
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 633RD
UT WOS:000180295500006
DA 2024-07-18
ER

PT J
AU Petalotis, C
   Krumpak, L
   Floroiu, MS
   Ahmad, LF
   Athreya, S
   Malavolta, I
AF Petalotis, Christos
   Krumpak, Luka
   Floroiu, Maximilian Stefan
   Ahmad, Lardb Fatima
   Athreya, Shashank
   Malavolta, Ivano
TI An empirical study on the performance and energy costs of ads and
   analytics in mobile web apps
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mobile web; Empirical study; Controlled experiment; Energy efficiency;
   Performance
AB Context: As the use of mobile devices has increased immensely through the years, the presence of analytics and advertisements on web and native applications has become prevalent. However, serving ads and analytics comes with costs, as they are associated with additional code and network requests to execute properly. Subsequently, more computing resources are used, having an impact on the energy consumption and the performance of web applications. Previous work has focused only on native Android applications, has used different metrics for performance, or has focused on other aspects of web applications. Goal: This paper aims to investigate the costs of including advertisements and analytics in web applications. This is done in terms of energy consumption and performance. For energy, the consumption is measured in Joules. For performance, the following metrics are used: first contentful paint and full page load time. The results of this study could influence the decisions of web developers and web browser vendors related to ads and analytics usage, while providing the foundation for further research on this topic. Method: To collect reliable and population-representative results, the research focused on 9 popular web applications included in the Tranco list. Energy consumption and performance metrics were gathered for 3 versions of each web application - original version with ads and analytics, without ads, and without analytics. A cross-over paired comparison design is conducted. Multiple executions of each run were performed in random order to ascertain rigorous measures. The experiment is carried out on an Android tablet using two browsers, Google Chrome and Opera. Results: Ads significantly impact the energy consumption of mobile web apps for both browsers, with a large effect size; analytics have a significant impact on the energy consumption of Chrome (with a medium effect size), but not on Opera. In terms of performance, both ads and analytics do not significantly impact the first contentful paint metric on both browsers; differently, both ads and analytics significantly impact the full page load time of the mobile web apps on both browsers, but with a small effect size. Conclusions: This study provides evidence that both ads and analytics can have a significant impact on the energy consumption and performance of mobile web apps loaded either on Opera or Chrome. Depending on the requirements of the mobile web app, it is advisable to limit both ads and analytics in a mobile web app in order to reduce its energy consumption and improve its full page load time. Special attention should be paid to the presence of ads since they resulted to be the most impactful in terms of energy consumption.
C1 [Petalotis, Christos; Krumpak, Luka; Floroiu, Maximilian Stefan; Ahmad, Lardb Fatima; Athreya, Shashank; Malavolta, Ivano] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Malavolta, I (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.
EM c.petalotis@student.vu.nl; l.krumpak@student.vu.nl;
   m.floroiu@student.vu.nl; l.f.ahmad@student.vu.nl;
   s.m.athreya@student.vu.nl; i.malavolta@vu.nl
RI Malavolta, Ivano/E-9018-2017
OI Malavolta, Ivano/0000-0001-5773-8346
CR Aversano L., 2004, 37 ANN HAW INT C SYS, DOI [10.1109/HICSS.2004.1265061, DOI 10.1109/HICSS.2004.1265061]
   Briscoe B, 2016, IEEE COMMUN SURV TUT, V18, P2149, DOI 10.1109/COMST.2014.2375213
   Cook T. D., 1979, QUASIEXPERIMENTATION
   D'Ambrosio S, 2016, SUSTAIN COMPUT-INFOR, V11, P63, DOI 10.1016/j.suscom.2016.02.003
   de Munk O, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106944
   Dornauer B, 2023, 2023 IEEE/ACM 10TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT, P75, DOI 10.1109/MOBILSoft59058.2023.00017
   Englehardt S., 2016, P P 2016 ACM SIGSAC, P1388, DOI [10.1145/2976749.2978313, DOI 10.1145/2976749.2978313]
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heitmann N, 2020, 21ST ACM SIGPLAN/SIGBED CONFERENCE ON LANGUAGES, COMPILERS, AND TOOLS FOR EMBEDDED SYSTEMS (LCTES '20), P146, DOI 10.1145/3372799.3394372
   Huber Stefan, 2023, Web Engineering: 23rd International Conference, ICWE 2023, Proceedings. Lecture Notes in Computer Science (13893), P247, DOI 10.1007/978-3-031-34444-2_18
   Jiaping Gui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2016.009
   Le Pochat V, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23386
   Malavolta I, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P61, DOI 10.1145/3417113.3422184
   Malavolta I, 2016, MOBILE!'16: PROCEEDINGS OF THE 1ST INTERNATIONAL WORKSHOP ON MOBILE DEVELOPMENT, P1, DOI 10.1145/3001854.3001863
   Mao ZM, 2016, IEEE INTERNET COMPUT, V20, P66, DOI 10.1109/MIC.2016.1
   Narayanan A., 2017, 2017 INT WORKSH PRIV
   Papadogiannakis E, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P2130, DOI 10.1145/3442381.3450056
   Papadopoulos P, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1479, DOI 10.1145/3178876.3186060
   Sengupta J, 2024, Arxiv, DOI arXiv:2308.06409
   Simons R., 2010, CTIT Technical Report Series
   Taylor CR, 2021, J MARKET THEORY PRAC, V29, P51, DOI 10.1080/10696679.2020.1860681
   Varvello M, 2021, Traffic Monitoring and Analysis
   Vehovar V., 2016, The SAGE Handbook of Survey Methodology, V329, P345, DOI DOI 10.4135/9781473957893.N22
   Wagner J., 2016, Web Performance in Action: Building Fast Web Pages
NR 25
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 166
AR 107370
DI 10.1016/j.infsof.2023.107370
EA NOV 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX8T7
UT WOS:001128630600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Venters, CC
   Capilla, R
   Nakagawa, EY
   Betz, S
   Penzenstadler, B
   Crick, T
   Brooks, I
AF Venters, Colin C.
   Capilla, Rafael
   Nakagawa, Elisa Yumi
   Betz, Stefanie
   Penzenstadler, Birgit
   Crick, Tom
   Brooks, Ian
TI Sustainable software engineering: Reflections on advances in research
   and practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Architectural debt; Architectural smells; Code smells; Education and
   training; Reference architectures; Software architecture; Software
   engineering; Software metrics; Software sustainability; Sustainability;
   Sustainable software; Technical debt
ID ARCHITECTURE; MODEL; QUALITY
AB Context: Modern societies are highly dependent on complex, large-scale, software-intensive systems increasingly operate within an environment of continuous availability, which are challenging to maintain, and evolve in response to changes in stakeholder requirements of the system. Software architectures the foundation of any software system and provide a mechanism for reasoning about core software quality requirements. Their sustainability - the capacity to endure in changing environments - is a critical concern for software architecture research and practice. Objective: The objective of the paper is to re-examine our previous assumptions and arguments in of advances in the field. This reflection paper provides an opportunity to obtain new insights into trends in software sustainability in both academia and industry, from a software architecture perspective specifically and software engineering more broadly. Given advances in research in the field, the increasing introduction of academic courses on different sustainability topics, and the engagement of companies to with sustainability goals, we reflect on advances and maturity about the role sustainability in general in today's society. More specifically, we revisit the trends, open issues and research challenges identified years ago in our previous paper on software sustainability research and practice from a software architecture viewpoint, which aimed to provide a foundation and roadmap of emerging research themes in the area sustainable software architectures in order to consider how this paper influenced and motivated research the intervening years. Method: The forward snowballing method was used to establish the methodological basis for our reflection on the state of the art. A total of 234 studies were identified between April 2018 and June 2023 and studies were found to be relevant according to the selection criteria. A further subset was mapped to primary themes of the original paper including definitions and concepts, reference architectures, measures and metrics, and education. Vision: The vision of this reflection paper is to provide a new foundation and road map of emerging research themes in the area of sustainable software engineering highlighting recent trends, and open issues and research challenges.
C1 [Venters, Colin C.] Univ Huddersfield, Ctr Sustainable Comp, Huddersfield, England.
   [Venters, Colin C.] European Org Nucl Res CERN, Geneva, Switzerland.
   [Capilla, Rafael] Rey Juan Carlos Univ, Madrid, Spain.
   [Nakagawa, Elisa Yumi] Univ Sao Paulo, Sao Carlos, Brazil.
   [Betz, Stefanie] Hsch Furtwangen Univ, Furtwangen, Germany.
   [Penzenstadler, Birgit] Chalmers Univ Technol, Gothenburg, Sweden.
   [Capilla, Rafael; Nakagawa, Elisa Yumi; Betz, Stefanie; Penzenstadler, Birgit] Lappeenranta Univ Technol, Lappeenranta, Finland.
   [Crick, Tom] Swansea Univ, Swansea, Wales.
   [Brooks, Ian] Univ West England, Bristol, England.
C3 University of Huddersfield; European Organization for Nuclear Research
   (CERN); Universidad Rey Juan Carlos; Universidade de Sao Paulo; Chalmers
   University of Technology; Lappeenranta-Lahti University of Technology
   LUT; Swansea University; University of West England
RP Venters, CC (corresponding author), European Org Nucl Res CERN, Geneva, Switzerland.
EM c.venters@cern.ch; rafael.capilla@urjc.es; elisa@icmc.usp.br;
   stefanie.betz@hs-furtwangen.de; birgitp@chalmers.se;
   thomas.crick@swansea.ac.uk; Ian.Brooks@uwe.ac.uk
RI Venters, Colin/T-9541-2019; Penzenstadler, Birgit S/B-1582-2015; Brooks,
   Ian/C-5471-2019; Betz, Stefanie/AGI-1451-2022; Crick, Tom/C-8481-2011
OI Venters, Colin/0000-0001-8664-9107; Penzenstadler, Birgit
   S/0000-0002-5771-0455; Brooks, Ian/0000-0002-6227-327X; Betz,
   Stefanie/0000-0002-3613-5893; Crick, Tom/0000-0001-5196-9389; Capilla,
   Rafael/0000-0002-6943-1285
FU CNPq [313245/2021-5]; FAPESP [2015/24144-7]
FX This work was partially supported by CNPq (313245/2021-5) and FAPESP
   (2015/24144-7) .
CR García-Mireles GA, 2018, INFORM SOFTWARE TECH, V95, P108, DOI 10.1016/j.infsof.2017.10.002
   Alharthi AD, 2018, INT REQUIR ENG CONF, P500, DOI 10.1109/RE.2018.00072
   Ali N, 2018, EMPIR SOFTW ENG, V23, P224, DOI 10.1007/s10664-017-9515-3
   Amri R, 2014, 2014 FOURTH INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING AND COMMUNICATIONS (ICACC), P231, DOI 10.1109/ICACC.2014.62
   Andrikopoulos Vasilios, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P426, DOI 10.1109/SEAA56994.2022.00073
   Andrikopoulos V., 2021, NEXT GEN DIGITAL SER, P35
   [Anonymous], 2023, Oxford English dictionary
   [Anonymous], 2011, The Wall Street Journal
   [Anonymous], 2022, Google Environmental Report 2022, P1
   Atkins T., 2013, A dictionary of mechanical engineering
   Autosar, 2023, AUTOSAR
   Avgeriou P, 2013, IEEE SOFTWARE, V30, P40, DOI 10.1109/MS.2013.120
   AWS, 2022, SUSTAINABILITY PILLA, P1
   AXMEDIS, 2023, AXMEDIS
   Azadi U, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P88, DOI 10.1109/TechDebt.2019.00027
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Becker C., 2014, KARLSKRONA MANIFESTO
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Betz S., 2015, CEUR WORKSHOP P, V1416, P55
   Betz S., 2022, SUSAF WORKBOOK 60, DOI [10.5281/zenodo.7342575, DOI 10.5281/ZENODO.7342575]
   Bijen J., 2003, DURABILITY ENG STRUC
   Bischoff Y, 2022, PROGR IS, P17, DOI 10.1007/978-3-030-88063-7_2
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Booch G, 2006, IEEE SOFTWARE, V23, P9, DOI 10.1109/MS.2006.86
   Brown NCC, 2014, ACM T COMPUT EDUC, V14, DOI 10.1145/2602484
   Cai Y, 2010, SIGCSE 10: PROCEEDINGS OF THE 41ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P524
   Calero C, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P46, DOI 10.1109/GREENS.2013.6606421
   Capilla R, 2017, IEEE SOFTWARE, V34, P108, DOI 10.1109/MS.2017.54
   Carrillo C., 2020, IEEE ACCESS, V8
   Carrillo C, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241446
   Cervantes H., 2016, Designing software architectures: a practical approach
   Cohen J, 2021, IEEE SOFTWARE, V38, P97, DOI 10.1109/MS.2020.2973362
   Condori-Fernandez N., 2018, 4 INT WORKSHOP MEASU, V2286, P7
   Condori-Fernandez N, 2018, J SYST SOFTWARE, V137, P289, DOI 10.1016/j.jss.2017.12.005
   Creswell J.W., 2012, ED RES PLANNING COND, DOI DOI 10.1017/CBO9781107415324.004
   Crick Tom, 2020, UKICER '20: Proceedings of the United Kingdom & Ireland Computing Education Research Conference, P31, DOI 10.1145/3416465.3416472
   Crick T., 2017, J OPEN RES STW, V5, P1
   Crick T., 2022, COMPUTING ED PRACTIC
   Crick T., 2023, 28 ANN C INNOVATION
   Crick T., 2022, 53 ACM TECHNICAL S C
   Crick T., 2020, 4 C COMPUTING ED PRA, P1
   Crick T, 2022, PROCEEDINGS OF THE 27TH ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, ITICSE 2022, VOL 1, P519, DOI 10.1145/3502718.3524764
   Crick T, 2022, PROCEEDINGS OF THE 53RD ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE 2022), VOL 2, P1142, DOI 10.1145/3478432.3499134
   Crick T, 2022, PROCEEDINGS OF THE 53RD ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE 2022), VOL 2, P1116, DOI 10.1145/3478432.3499129
   Crick Tom, 2021, ITNOW, V63, P1, DOI DOI 10.1093/ITNOW/BWAB005
   Crouch S, 2013, COMPUT SCI ENG, V15, P74, DOI 10.1109/MCSE.2013.133
   Cutts Q., 2023, 28 ANN C INNOVATION
   Davenport JH, 2020, IEEE GLOB ENG EDUC C, P1400, DOI 10.1109/EDUCON45650.2020.9125272
   Davenport JH, 2016, INT CONF TEACH LEARN, P115, DOI 10.1109/LaTiCE.2016.38
   Duboc L, 2019, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2019.00013
   Le DM, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P178, DOI 10.1109/WICSA.2016.15
   Durdik Z, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P517, DOI 10.1109/ICSM.2012.6405316
   Dwivedi YK, 2023, INT J INFORM MANAGE, V71, DOI 10.1016/j.ijinfomgt.2023.102642
   Dwivedi YK, 2021, INT J INFORM MANAGE, V57, DOI 10.1016/j.ijinfomgt.2019.08.002
   EPSRC, 2023, SOFTWARE RES COMMUNI
   EPSRC, 2023, RES SOFTWARE ENG FEL
   Eveleens JL, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2009.154
   Farley David, 2021, Modern Software Engineering: Doing What Works to Build Better Software Faster
   Fatima I., 2023, 2023 IEEE 20 INT C S
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Fisher DH, 2016, IEEE INTELL SYST, V31, P93, DOI 10.1109/MIS.2016.76
   Forsberg K., 1991, INCOSE INT S, V1, P57, DOI [10.1002/j-2334-5837.1991.tb01484.x,o.1, DOI 10.1002/J-2334-5837.1991.TB01484.X,O.1, 10.1002/j.2334-5837.1991.tb01484.x, DOI 10.1002/J.2334-5837.1991.TB01484.X]
   Frezza ST, 2019, PROC FRONT EDUC CONF
   Funke M., 2023, 2023 IEEE 20 INT C S
   Future Generations Commissioner for Wales, 2015, WELL BEING FUTURE GE
   Garcés L, 2021, J SYST SOFTWARE, V179, DOI 10.1016/j.jss.2021.111004
   García-Berná JA, 2022, LECT NOTE NETW SYST, V468, P498, DOI 10.1007/978-3-031-04826-5_50
   Garcia-Mireles G.A., 2018, INT C SOFTWARE PROCE, P61
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Gharbi M., 2019, SOFTWARE ARCHITECTUR
   Giray G, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su13137309
   Glavic P, 2007, J CLEAN PROD, V15, P1875, DOI 10.1016/j.jclepro.2006.12.006
   Goble C, 2014, IEEE INTERNET COMPUT, V18, P4, DOI 10.1109/MIC.2014.88
   Gradisnik M, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10134624
   Groher I, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P350, DOI 10.1109/SEAA.2017.70
   Grua E.M., 2020, EUR C SOFTW ARCH, P195
   Guaman D., 2021, Information Systems Development: Crossing Boundaries Between Development and Operations (DevOps) in Information Systems
   Gupta S, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C), P31, DOI 10.1109/ICSA-C52384.2021.00012
   Hähner UR, 2019, J PHYS CONF SER, V1290, DOI 10.1088/1742-6596/1290/1/012017
   Hardman J, 2022, S AFR J HIGH EDUC, V36, P1, DOI [10.20853/36-1-4844, 10.20853/36-1 -4844]
   Heldal R., 2023, WORKING PAPER
   Hintemann R., 2019, 6 INT C ICT SUSTAINA, V2382, P1
   I. Standish Group International, 2020, TECHNICAL REPORT
   Ioannidis Y, 2023, COMMUN ACM, V66, P5, DOI 10.1145/3578649
   Irons A., 2021, 52 ACM TECHNICAL S C
   Irons A., 2022, Higher Education in a Post-COVID World: New Approaches and Technologies for Teaching and Learning, P231, DOI DOI 10.1108/978-1-80382-193-120221011
   ISO/IEC/IEEE, 2017, ISO/IEC/IEEE 24765:2017(E)
   Jacobson I, 2018, 40 INT C SOFTWARE EN
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jansen A, 2008, J SYST SOFTWARE, V81, P536, DOI 10.1016/j.jss.2007.08.025
   Johnson J, 2021, TECHNICAL REPORT
   Kakamoukas G, 2021, TELECOM, V2, P52, DOI 10.3390/telecom2010005
   Karanikiotis T, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su132212848
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koedijk L., 2022, 8 INT C ICT SUSTAINA, P1
   Koziolek H., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P253, DOI 10.1109/WICSA-ECSA.212.40
   Koziolek H., 2011, P JOINT ACM SIGSOFT, P3, DOI DOI 10.1145/2000259.2000263
   Koziolek H, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2013.101
   KPIT Technologies Ltd, 2022, ELECT CONVENTIONAL P, P1
   Lachney M, 2021, ACM T COMPUT EDUC, V21, DOI 10.1145/3477981
   Lago P., 2013, ACM SIGSOFT Softw. Eng. Not., V38, P31, DOI 10.1145/2413038.2413062
   Lago P., 2020, INT C INFORMATICS EN
   Lago P., 2022, ENVIROINFO 2022, P199
   Lautenschutz D., 2018, EPiC Ser. Comput, V52, P153, DOI [10.29007/5hgz, DOI 10.29007/5HGZ]
   Lilienthal C., 2019, Sustainable Software Architecture: Analyze and Reduce Technical Debt
   Mancebo J, 2021, SUSTAIN COMPUT-INFOR, V30, DOI 10.1016/j.suscom.2021.100558
   Mancebo J, 2021, SOFTWARE QUAL J, V29, P101, DOI 10.1007/s11219-020-09536-9
   Martin R., 2017, Clean architecture: A craftsman's guide to software structure and design
   McGaughey F, 2022, HIGH EDUC RES DEV, V41, P2231, DOI 10.1080/07294360.2021.1973384
   McGuire S, 2023, Arxiv, DOI arXiv:2301.11129
   Microsoft, 2022, Microsoft azure well-architected framework-azure architecture center | Microsoft Docs
   Mirakhorli M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P595, DOI 10.1109/SANER.2015.7081885
   Moises AC, 2018, 2018 NINTH INTERNATIONAL GREEN AND SUSTAINABLE COMPUTING CONFERENCE (IGSC)
   Moller F, 2018, J COMPUT EDUC, V5, P415, DOI 10.1007/s40692-018-0117-x
   Mourao BC, 2015, PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS), P121, DOI 10.1145/3275245.3275258
   Murphy Ellen, 2017, The Art, Science, and Engineering of Programming, V1, P2, DOI [DOI 10.22152/PROGRAMMINGJOURNAL.ORG/2017/1/18, 10.22152/programming-journal.org/2017/1/18, 10.22152/programming-journal.org/2017/1/18/, DOI 10.22152/PROGRAMMING-JOURNAL.ORG/2017/1/18]
   Nakagawa E., 2023, REFERENCE ARCHITECTU, Vfirst
   Nakagawa EY, 2021, COMPUT IND ENG, V156, DOI 10.1016/j.cie.2021.107241
   Nakagawa EY, 2011, LECT NOTES COMPUT SC, V6903, P207, DOI 10.1007/978-3-642-23798-0_22
   Naumann S, 2011, SUSTAIN COMPUT-INFOR, V1, P294, DOI 10.1016/j.suscom.2011.06.004
   Nazir S., 2020, INT J ADV SCI ENG IN, V10, P676
   Northrop L, 2018, 40 INT C SOFTWARE EN
   NSF, 2023, DESIGN SUSTAINABILIT
   Ojameruaye B, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P543, DOI 10.1145/2889160.2889218
   Ousterhout J, 2021, PHILOS SOFTWARE DESI
   Oyedeji S., 2018, 4 INT WORKSHOP MEASU, P19
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Paulauskaite-Taraseviciene A, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su14031702
   Penzenstadler B, 2013, 28 ANN ACM S APPL CO, P1183
   Penzenstadler B., 2014, 18 INT C EVALUATION
   Peters AK, 2023, Arxiv, DOI arXiv:2305.10369
   Prickett T., 2023, CYBERSECURITY TEACHI, P1
   Prickett Tom, 2020, P 2020 ACM C INN TEC, P19
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Sdoukopoulos A, 2019, TRANSPORT RES D-TR E, V67, P316, DOI 10.1016/j.trd.2018.11.020
   Seacord RC, 2003, PROC IEEE INT CONF S, P450, DOI 10.1109/ICSM.2003.1235455
   SEI, 2023, SOFTWARE ENG I
   Sentance S., 2022, UK IRELAND COMPUTING
   Seyff N, 2022, ENASE: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P417, DOI 10.5220/0011063200003176
   Seyff N, 2018, INT REQUIR ENG CONF, P370, DOI 10.1109/RE.2018.00-23
   Sharma T, 2020, EMPIR SOFTW ENG, V25, P4020, DOI 10.1007/s10664-020-09847-2
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Shaw M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P3
   Siegel A., 2021, 2021 WORKING GROUP R, P1
   Simon, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P852, DOI 10.1145/3159450.3159547
   Smith AM, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.86
   SRSE, 2023, SOC RES SOFTWARE ENG
   SSI, 2023, SOFTWARE SUSTAINABIL
   Sufi S., 2018, F1000RESEARCH, V7
   Sverdrup H, 2004, SYSTEMS APPROACHES AND THEIR APPLICATION: EXAMPLES FROM SWEDEN, P143
   Swacha J, 2021, SUSTAINABILITY-BASEL, V13, DOI 10.3390/su13084244
   Tamburri DA, 2018, EMPIR SOFTW ENG, V23, P1457, DOI 10.1007/s10664-017-9543-z
   Tanveer B, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P267, DOI 10.1109/ASEW52652.2021.00059
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Thomas C., 2016, Complex Systems, Sustainability and Innovation
   Tryfonas T, 2015, TECHNICAL REPORT
   US Department of Transportation, 2022, ARCHITECTURE REFEREN
   Venters C., 2023, DISCUSS 17 FEB
   Venters C.C., 2014, J. Open Res. Softw., V2, P8, DOI DOI 10.5334/JORS.AO
   Venters CC, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON BODY OF KNOWLEDGE FOR SOFTWARE SUSTAINABILITY (BOKSS 2021), P3, DOI 10.1109/BoKSS52540.2021.00009
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Voas J, 2017, COMPUTER, V50, P88, DOI 10.1109/MC.2017.144
   Volpato T, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P245, DOI 10.1145/3344948.3344979
   Volpato T, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P188, DOI 10.1145/3129790.3129815
   Wang Z., 2019, 22 INT C ELECT MACHI, P1
   Ward R, 2023, J INTERACT MEDIA EDU, DOI 10.5334/jime.807
   Ward R, 2021, IEEE GLOB ENG EDUC C, P350, DOI 10.1109/EDUCON46332.2021.9453883
   Watermeyer R, 2022, INT J ACAD DEV, V27, P148, DOI 10.1080/1360144X.2021.1990064
   Watermeyer R, 2021, BRIT J SOCIOL EDUC, V42, P651, DOI 10.1080/01425692.2021.1937058
   Watermeyer R, 2021, HIGH EDUC, V81, P623, DOI 10.1007/s10734-020-00561-y
   Wilson Greg, 2014, F1000Res, V3, P62, DOI 10.12688/f1000research.3-62.v2
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Wohlin C, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106908
   Wood E., 2022, SOFTWARE ARCHITECTUR, P143
   Pham YD, 2021, INT REQUIR ENG CONF, P117, DOI 10.1109/RE51729.2021.00018
   Pham YD, 2020, INT REQUIR ENG CONF, P358, DOI 10.1109/RE48521.2020.00048
   Santana EFZ, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3124391
NR 179
TC 6
Z9 6
U1 4
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107316
DI 10.1016/j.infsof.2023.107316
EA SEP 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S4DX9
UT WOS:001070701500001
DA 2024-07-18
ER

PT J
AU Heinonen, A
   Lehtelä, B
   Hellas, A
   Fagerholm, F
AF Heinonen, Ava
   Lehtela, Bettina
   Hellas, Arto
   Fagerholm, Fabian
TI Synthesizing research on programmers' mental models of programs, tasks
   and concepts-A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Mental model; Mental representation; Human factors; Program
   comprehension; Psychology of programming; Programmer; Software
   developer; Software development; Systematic literature review; Empirical
   software engineering
ID OBJECT-ORIENTED PROGRAMMERS; COMPREHENSION STRATEGIES; SOFTWARE
   COMPREHENSION; ABSTRACT CATEGORIES; KNOWLEDGE; REPRESENTATIONS; NOVICE;
   MAINTENANCE; PERFORMANCE; EXPERIENCE
AB Context: Programmers' mental models represent their knowledge and understanding of programs, programming concepts, and programming in general. They guide programmers' work and influence their task performance. Understanding mental models is important for designing work systems and practices that support programmers.Objective: Although the importance of programmers' mental models is widely acknowledged, research on mental models has decreased over the years. The results are scattered and do not take into account recent developments in software engineering. In this article, we analyze the state of research on programmers' mental models and provide an overview of existing research. We connect results on mental models from different strands of research to form a more unified knowledge base on the topic.Method: We conducted a systematic literature review on programmers' mental models. We analyzed literature addressing mental models in different contexts, including mental models of programs, programming tasks, and programming concepts. Using nine search engines, we found 3678 articles (excluding duplicates). Of these, 84 were selected for further analysis. Using the snowballing technique, starting from these 84, we obtained a final result set containing 187 articles.Results: We show that the literature shares a kernel of shared understanding of mental models. By collating and connecting results on mental models from different fields of research, we provide a comprehensive synthesis of results related to programmers' mental models.Conclusion: The research field on programmers' mental models faces many challenges arising from a lack of a shared knowledge base and poorly defined constructs. By creating a unified knowledge base on the topic, this work provides a basis for future work on mental models. We also point to directions for future studies. In particular, we call for studies that examine programmers working with modern practices and tools.
C1 [Heinonen, Ava; Lehtela, Bettina; Hellas, Arto; Fagerholm, Fabian] Aalto Univ, Dept Comp Sci, POB 15400, FI-00076 Helsinki, Finland.
C3 Aalto University
RP Heinonen, A (corresponding author), Aalto Univ, Dept Comp Sci, POB 15400, FI-00076 Helsinki, Finland.
EM ava.heinonen@aalto.fi
RI Fagerholm, Fabian/B-1952-2015
OI Fagerholm, Fabian/0000-0002-7298-3021; Heinonen, Ava/0000-0001-7967-5331
CR Abid NJ, 2019, ETRA 2019: 2019 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS, DOI 10.1145/3314111.3319834
   ADELSON B, 1981, MEM COGNITION, V9, P422, DOI 10.3758/BF03197568
   ADELSON B, 1984, J EXP PSYCHOL LEARN, V10, P483, DOI 10.1037/0278-7393.10.3.483
   ADELSON B, 1985, COGNITIVE SCI, V9, P417, DOI 10.1207/s15516709cog0904_3
   ADELSON B, 1985, IEEE T SOFTWARE ENG, V11, P1351, DOI 10.1109/TSE.1985.231883
   Altmann EM, 1999, COGNITIVE SCI, V23, P117, DOI 10.1016/S0364-0213(99)00002-6
   [Anonymous], 2004, PPIG
   [Anonymous], 1983, MENTAL MODELS
   [Anonymous], 1981, Cognitive Skills and their Acquisition
   [Anonymous], 2008, Proceedings of the 8th International Conference on Computing Education Research, Koli'08, (New York, NY, USA)
   [Anonymous], 2013, Information Systems Development: Reflections, Challenges and New Directions
   [Anonymous], 1985, Human-Computer Interaction
   [Anonymous], 2012, SIGCSE'12, ACM
   [Anonymous], 2011, P 3 ACM SIGPLAN WORK
   [Anonymous], 1983, Proceedings of CHI 1983
   [Anonymous], 2001, Psicologica
   Armstrong DJ, 2008, INF RESOUR MANAG J, V21, P63, DOI 10.4018/irmj.2008040104
   Armstrong DJ, 2007, MIS QUART, V31, P453
   Avidan E, 2017, INT C PROGRAM COMPRE, P55, DOI 10.1109/ICPC.2017.27
   Aziz Khairul Azman, 2014, International Journal of Business Information Systems, V15, P123, DOI 10.1504/IJBIS.2014.059249
   Balijepally V., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5442, DOI 10.1109/HICSS.2012.9
   Balijepally V, 2015, COMMUN ASSOC INF SYS, V36, P53
   BARFIELD W, 1986, BEHAV INFORM TECHNOL, V5, P15, DOI 10.1080/01449298608914495
   Barfield W, 1997, PERCEPT MOTOR SKILL, V85, P1471, DOI 10.2466/pms.1997.85.3f.1471
   Bassil S, 2001, PROG COMPREHEN, P7, DOI 10.1109/WPC.2001.921708
   BATESON AG, 1987, INT J MAN MACH STUD, V26, P649, DOI 10.1016/S0020-7373(87)80058-5
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   BAYMAN P, 1983, COMMUN ACM, V26, P677, DOI 10.1145/358172.358408
   Benvenuti L, 2015, PROC FRONT EDUC CONF, P2383
   BHUIYAN SH, 1991, PROGRAM OF THE THIRTEENTH ANNUAL CONFERENCE OF THE COGNITIVE SCIENCE SOCIETY, P120
   Bhuiyan Shawkat H., 1989, INT C KNOWL BAS COMP, P133
   Bidlake L, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110565
   Bieringer L., 2022, P SOUPS, P97
   Binkhorst V, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P3433
   Bisant D. B., 1993, International Journal of Human-Computer Interaction, V5, P189, DOI 10.1080/10447319309526064
   BOEHMDAVIS DA, 1992, INT J MAN MACH STUD, V36, P21, DOI 10.1016/0020-7373(92)90051-L
   BoehmDavis DA, 1996, EMPIRICAL STUDIES OF PROGRAMMERS: SIXTH WORKSHOP, P3
   Bornat R., 2008, P 10 C AUSTR COMP ED, V78, P53
   Bradley NC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P993, DOI 10.1145/3180155.3180238
   Bratthall L., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P356
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brooks R., 1978, 3rd International Conference on Software Engineering, P196
   Buckley J., 2005, Proceedings Twelfth International Workshop on Software Technology and Engineering Practice
   Burgos Carlos L., 2007, Information.Knowledge.Systems Management, V6, P215
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Burkhardt J.-M., 1995, Human-Computer Interaction. Interact '95, P133
   Burkhardt JM, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P339
   Caspersen ME, 2007, ITICSE 2007: 12TH ANNUAL CONFERENCE ON INNOVATION & TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P206, DOI 10.1145/1269900.1268845
   Chao J, 2018, J LEARN SCI, V27, P431, DOI 10.1080/10508406.2017.1392309
   Chatel S., 1994, PROCEEDINGS
   COOKE NJ, 1988, INT J MAN MACH STUD, V29, P407, DOI 10.1016/S0020-7373(88)80003-8
   Corritore C. L., 1991, International Journal of Human-Computer Interaction, V3, P199, DOI 10.1080/10447319109526004
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   Corritore CL, 2000, PROG COMPREHEN, P139, DOI 10.1109/WPC.2000.852488
   Craik K.J.W., 1943, The Nature of Explanation, DOI DOI 10.2307/2018933
   Crosby Martha E., 2002, PPIG, P5
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dasgupta C, 2010, PROCEEDINGS OF THE 48TH ANNUAL SOUTHEAST REGIONAL CONFERENCE (ACM SE 10), P453, DOI 10.1145/1900008.1900142
   DAVIES SP, 1995, HUM-COMPUT INTERACT, V10, P227, DOI 10.1207/s15327051hci1002&3_3
   DAVIES SP, 1991, COGNITIVE SCI, V15, P547, DOI 10.1207/s15516709cog1504_3
   DAVIES SP, 1990, BEHAV INFORM TECHNOL, V9, P201, DOI 10.1080/01449299008924237
   Detienne F, 2002, PRACT SER, P75
   Detienne F, 2002, PRACT SER, P105
   DETIENNE F, 1990, INT J MAN MACH STUD, V33, P323, DOI 10.1016/S0020-7373(05)80122-1
   Detienne F., 1990, Psychology of programming, P205
   Detienne Francoise, 1990, chapter Program Understanding and Knowledge Organization: The Influence of Acquired Schemata, P245
   Detienne Francoise, 2001, Software design cognitive aspects.
   Eberts Ray E., 1990, ADV PSYCHOL, V65, P389
   Ehrlich K., 1984, HUMAN FACTORS COMPUT, P113
   El-Attar M, 2019, SOFTW SYST MODEL, V18, P3283, DOI 10.1007/s10270-019-00720-5
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fekete A, 2020, ANN MATH INFORM, V51, P103, DOI 10.33039/ami.2020.07.007
   FIX V, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P74
   Fleming SD, 2008, INT C PROGRAM COMPRE, P23, DOI 10.1109/ICPC.2008.40
   Fritz T, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P7, DOI 10.1145/2635868.2635905
   Gellenbeck E. M., 1991, Empirical Studies of Programmers: Fourth Workshop, P65
   GILMORE DJ, 1988, Q J EXP PSYCHOL-A, V40, P423, DOI 10.1080/02724988843000005
   Gotschi T., 2003, SIGCSE Bulletin, V35, P346, DOI 10.1145/792548.612004
   Green T. R. G., 1995, Human-Computer Interaction. Interact '95, P139
   Guest G., 2011, sage publications
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Herman GL, 2017, PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH (ICER 17), P173, DOI 10.1145/3105726.3106172
   Hoc Jean-Michel, 1990, Psychology of Programming, Computers and People Series, P139
   HOC JM, 1977, INT J MAN MACH STUD, V9, P87, DOI 10.1016/S0020-7373(77)80044-8
   Hofmeister J, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P217, DOI 10.1109/SANER.2017.7884623
   Hubwieser Peter, 2011, P 16 ANN JOINT C INN, P377
   Ikutani Y, 2021, ENEURO, V8, DOI 10.1523/ENEURO.0405-20.2020
   Jeffries Robin, 1982, P AERA ANN M
   Johnson-Laird PN, 2005, PSYCHOLOGY OF REASONING: THEORETICAL AND HISTORICAL PERSPECTIVES, P179
   Jones NA, 2011, ECOL SOC, V16
   Kang H, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P737, DOI 10.1145/3126594.3126632
   KANT E, 1984, INFORM PROCESS MANAG, V20, P97, DOI 10.1016/0306-4573(84)90042-6
   Karahasanovic A, 2007, J SYST SOFTWARE, V80, P1541, DOI 10.1016/j.jss.2006.10.041
   Kessler C., 1986, HUM-COMPUT INTERACT, V2, P135, DOI DOI 10.1207/S15327051HCI0202_2
   Khazaei B, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P19, DOI 10.1109/HCC.2002.1046336
   Kim Jinwoo, 1995, ACM Transactions on Computer-Human Interaction (TOCHI), V2, P357
   Ko AJ, 2003, PROG COMPREHEN, P175
   Koenemann J., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P125, DOI 10.1145/108844.108863
   Koubek Richard J., 1988, P HUMAN FACTORS SOC, V32, P386
   KOUBEK RJ, 1989, ERGONOMICS, V32, P1419, DOI 10.1080/00140138908966915
   KOUBEK RJ, 1991, ERGONOMICS, V34, P1095, DOI 10.1080/00140139108964849
   Kulkarni N, 2017, SOFTWARE QUAL J, V25, P307, DOI 10.1007/s11219-015-9303-5
   LaToza Thomas D., 2007, P ESECFSE 2007 DUBR, P361, DOI [DOI 10.1145/1287624.1287675, 10.1145/1287624.1287675]
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   Levy O, 2019, INT C PROGRAM COMPRE, P283, DOI 10.1109/ICPC.2019.00047
   Ma LX, 2007, SIGCSE 2007: PROCEEDINGS OF THE THIRTY-EIGHTH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P499, DOI 10.1145/1227504.1227481
   Masmoudi S, 2001, LECT NOTES ARTIF INT, V2120, P58
   MCKEITHEN KB, 1981, COGNITIVE PSYCHOL, V13, P307, DOI 10.1016/0010-0285(81)90012-8
   MOLZBERGER P, 1987, LECT NOTES COMPUT SC, V253, P120
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Navarro-Prieto R, 2001, INT J HUM-COMPUT ST, V54, P799, DOI 10.1006/ijhc.2000.0465
   Navarro-Prieto Raquel, 1999, PPIG, P2
   O'Brien MP, 2004, J SOFTW MAINT EVOL-R, V16, P427, DOI 10.1002/smr.307
   Parkin P, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P221, DOI 10.1109/ASWEC.2004.1290475
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Petre M., 1997, Empirical Studies of Programmers: Seventh Workshop. Papers presented at the Seventh Workshop on Empirical Studies of Programmers, P109, DOI 10.1145/266399.266409
   Petre M, 1999, INT J HUM-COMPUT ST, V51, P7, DOI 10.1006/ijhc.1999.0267
   Pieterse Vreda, 2018, P 7 COMPUTER SCI ED, P51, DOI [10.1145/3289406.3289413, DOI 10.1145/3289406.3289413]
   Poruban Jaroslav, 2015, 2015 13 INT C ENG MO, P1
   Ramalingam V., 1997, Empirical Studies of Programmers: Seventh Workshop. Papers presented at the Seventh Workshop on Empirical Studies of Programmers, P124, DOI 10.1145/266399.266411
   Rickheit G., 2005, MENTAL MODELS DISCOU, P9, DOI 10.1016/S0166-4115(99)80045-4
   Rist R. S., 1991, Human-Computer Interaction, V6, P1, DOI 10.1207/s15327051hci0601_1
   RIST RS, 1989, COGNITIVE SCI, V13, P389, DOI 10.1207/s15516709cog1303_3
   Robertson Scott P., 1990, J WASH ACAD SCI, P116
   ROBERTSON SP, 1990, INT J MAN MACH STUD, V33, P343, DOI 10.1016/S0020-7373(05)80123-3
   Romero P, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P223, DOI 10.1109/VLHCC.2004.50
   Romero P, 2001, INT J HUM-COMPUT ST, V54, P211, DOI 10.1006/ijhc.2000.0408
   Rook L, 2013, LEARN ORGAN, V20, P38, DOI 10.1108/09696471311288519
   Rornes Kristin Marie, 2019, NORSK IKT KONFERANSE
   Sajaniemi J, 2005, PROG COMPREHEN, P55, DOI 10.1109/WPC.2005.8
   Sajaniemi Jorma, 2008, Journal on Educational Resources in Computing (JERIC), V7, P1
   Sanders I, 2012, AFR J RES MATH SCI T, V16, P348, DOI 10.1080/10288457.2012.10740750
   Sanders K, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P332, DOI 10.1145/1352322.1352251
   Schauer R, 2008, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2008.57
   Scholtz T, 2010, ITICSE 2010: PROCEEDINGS OF THE 2010 ACM SIGCSE ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P103
   Schomann Munira, 1994, COGNITION COMPUTER P, P193
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Seel NM, 2006, ADV PSYCHOL, V138, P85
   Shaft TM, 2006, MIS QUART, V30, P29
   Shaft TM, 1996, EMPIRICAL STUDIES OF PROGRAMMERS: SIXTH WORKSHOP, P277
   SHAFT TM, 1995, INFORM SYST RES, V6, P286, DOI 10.1287/isre.6.3.286
   Shargabi Amal, 2015, 2015 International Conference on Computer, Communications and Control Technology (I4CT), P211, DOI 10.1109/I4CT.2015.7219568
   Sharpe S, 1997, J COMPUT INFORM SYST, V38, P86
   Sheetz SD, 2002, J SYST SOFTWARE, V64, P23, DOI 10.1016/S0164-1212(02)00019-5
   Siddiqi J., 1988, Proceedings COMPSAC 88: The Twelfth International Computer Software and Applications Conference (Cat. No.88CH2611-2), P141, DOI 10.1109/CMPSAC.1988.17164
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Soloway E., 1988, The nature of expertise, P129
   Sorva J., 2007, P 7 BALT SEA C COMP, V88, P127, DOI 10.5555/2449323.2449337
   Staffs Keele, 2007, Tech. Rep.
   STAGGERS N, 1993, INT J MAN MACH STUD, V38, P587, DOI 10.1006/imms.1993.1028
   Stol KJ, 2015, IEEE-ACM INT WKSP CO, P47, DOI 10.1109/CESI.2015.15
   Storey MAD, 2000, SCI COMPUT PROGRAM, V36, P183, DOI 10.1016/S0167-6423(99)00036-2
   Strömback F, 2019, ICER '19 - PROCEEDINGS OF THE 2019 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH, P229, DOI 10.1145/3291279.3339415
   Sulír M, 2016, COMPUT LANG SYST STR, V46, P44, DOI 10.1016/j.cl.2016.07.003
   SUTCLIFFE AG, 1992, INT J MAN MACH STUD, V36, P719, DOI 10.1016/0020-7373(92)90038-M
   Szabo C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P276, DOI 10.1109/ICSE.2015.341
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   TEASLEY BE, 1994, INT J HUM-COMPUT ST, V40, P757, DOI 10.1006/ijhc.1994.1036
   Torchiano M, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P184, DOI 10.1109/CSMR.2004.1281419
   Treur J, 2021, COGN SYST RES, V69, P83, DOI 10.1016/j.cogsys.2021.06.001
   Vainio V, 2007, ITICSE 2007: 12TH ANNUAL CONFERENCE ON INNOVATION & TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P236, DOI 10.1145/1269900.1268853
   Van Ments L, 2021, COGN SYST RES, V70, P1, DOI 10.1016/j.cogsys.2021.06.004
   Voigt Janina, 2009, 6 INT C INFORM TECHN, P83
   von Mayrhauser A., 1994, Proceedings. IEEE Third Workshop on Program Comprehension (Cat. No.94TH06767), P74, DOI 10.1109/WPC.1994.341253
   Von Mayrhauser Anneliese., 1998, P IFIP WORLD COMPUTI
   von Mayrhauser Anneliese., 1995, ADV COMPUT, P1
   VONMAYRHAUSER A, 1995, SOFTWARE ENG J, V10, P171, DOI 10.1049/sej.1995.0023
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   vonMayrhauser A, 1997, P INT COMP SOFTW APP, P630, DOI 10.1109/CMPSAC.1997.625084
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   VONMAYRHAUSER A, 1994, PROC INT CONF SOFTW, P39, DOI 10.1109/ICSE.1994.296764
   vonMayrhauser A, 1996, 1996 IEEE AEROSPACE APPLICATIONS CONFERENCE, PROCEEDINGS, VOL 2, P253, DOI 10.1109/AERO.1996.495930
   VONMAYRHAUSER A, 1993, PROCEEDINGS OF THE SIXTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING - CASE 93, P230, DOI 10.1109/CASE.1993.634824
   Votipka D, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1875
   Whalley Jacqueline, 2014, Proceedings of the 2014 Conference on Innovation Technology in Computer Science Education, ITiCSE '14, P279, DOI DOI 10.1145/2591708.2591762
   WIEDENBECK S, 1991, INT J MAN MACH STUD, V35, P517, DOI 10.1016/S0020-7373(05)80090-2
   WIEDENBECK S, 1986, J AM SOC INFORM SCI, V37, P294
   Wiedenbeck S, 1996, EMPIRICAL STUDIES OF PROGRAMMERS: SIXTH WORKSHOP, P233
   WIEDENBECK S, 1993, INT J MAN MACH STUD, V39, P793, DOI 10.1006/imms.1993.1084
   Wiedenbeck S, 1999, INT J HUM-COMPUT ST, V51, P71, DOI 10.1006/ijhc.1999.0269
   Xu SC, 2005, Third ACIS International Conference on Software Engineering Research, Managment and Applications, Proceedings, P392
   Yates R, 2020, EMPIR SOFTW ENG, V25, P940, DOI 10.1007/s10664-019-09741-6
   Ye N, 1996, ERGONOMICS, V39, P461, DOI 10.1080/00140139608964475
   Yu C.-C., 1988, P SIGCHI C HUMAN FAC, P251
NR 189
TC 2
Z9 2
U1 2
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107300
DI 10.1016/j.infsof.2023.107300
EA AUG 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P7KQ0
UT WOS:001052429900001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Bauer, A
   Coppola, R
   Alégroth, E
   Gorschek, T
AF Bauer, Andreas
   Coppola, Riccardo
   Alegroth, Emil
   Gorschek, Tony
TI Code review guidelines for GUI-based testing artifacts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE GUI testing; GUI-based testing; Software testing; Code review; Modern
   code review; Guidelines; Practices
ID INDUSTRIAL PRACTICE; INSPECTIONS
AB Context: Review of software artifacts, such as source or test code, is a common practice in industrial practice. However, although review guidelines are available for source and low-level test code, for GUI-based testing artifacts, such guidelines are missing. Objective: The goal of this work is to define a set of guidelines from literature about production and test code, that can be mapped to GUI-based testing artifacts. Method: A systematic literature review is conducted, using white and gray literature to identify guidelines for source and test code. These synthesized guidelines are then mapped, through examples, to create actionable, and applicable, guidelines for GUI-based testing artifacts. Results: The results of the study are 33 guidelines, summarized in nine guideline categories, that are successfully mapped as applicable to GUI-based testing artifacts. Of the collected literature, only 10 sources contained test-specific code review guidelines. These guideline categories are: perform automated checks, use checklists, provide context information, utilize metrics, ensure readability, visualize changes, reduce complexity, check conformity with the requirements and follow design principles and patterns. Conclusion: This pivotal set of guidelines provides an industrial contribution in filling the gap of general guidelines for review of GUI-based testing artifacts. Additionally, this work highlights, from an academic perspective, the need for future research in this area to also develop guidelines for other specific aspects of GUI-based testing practice, and to take into account other facets of the review process not covered by this work, such as reviewer selection.
C1 [Bauer, Andreas; Alegroth, Emil; Gorschek, Tony] Blekinge Inst Technol, Software Engn Res Lab SERL, S-37179 Karlskrona, Sweden.
   [Coppola, Riccardo] Politecn Torino, Dept Control & Comp Engn, Turin, Italy.
   [Gorschek, Tony] Fortiss, Munich, Germany.
C3 Blekinge Institute Technology; Polytechnic University of Turin; fortiss
RP Bauer, A (corresponding author), Blekinge Inst Technol, Software Engn Res Lab SERL, S-37179 Karlskrona, Sweden.
EM andreas.bauer@bth.se; riccardo.coppola@polito.it; emil.alegroth@bth.se;
   tony.gorschek@bth.se
RI Bauer, Andreas/IZQ-4804-2023
OI Bauer, Andreas/0000-0002-2916-4020
FU KKS foundation [2018/010]
FX We would like to acknowledge that this work was supported by the KKS
   foundation through the S.E.R.T. Research Profile project (research
   profile grant 2018/010) at Blekinge Institute of Technology. Further, we
   thank Michael Dorner for valuable discussions.
CR Ackerman A. F., 1984, Software Validation, Inspection - Testing - Verification - Alternatives. Proceedings of the Symposium, P13
   ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Adams RJ, 2017, INT J MANAG REV, V19, P432, DOI 10.1111/ijmr.12102
   Alami A, 2019, PROC INT CONF SOFTW, P1073, DOI 10.1109/ICSE.2019.00111
   Alégroth E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10145-2
   Alégroth E, 2021, IEEE INT CONF SOFTW, P340, DOI 10.1109/ICST49551.2021.00046
   Alégroth E, 2018, IEEE INT CONF SOFTW, P172, DOI 10.1109/ICST.2018.00026
   Alégroth E, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P404, DOI 10.1109/SEAA.2017.65
   Alégroth E, 2017, EMPIR SOFTW ENG, V22, P2937, DOI 10.1007/s10664-016-9497-6
   Alégroth E, 2015, EMPIR SOFTW ENG, V20, P694, DOI 10.1007/s10664-013-9293-5
   An L, 2018, ASIA PAC SOFWR ENG, P396, DOI 10.1109/APSEC.2018.00054
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2013, Human and machine thinking
   Atlassian, 2022, BITB GIT SOL TEAMS U
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Baum T, 2016, LECT NOTES COMPUT SC, V10027, P301, DOI 10.1007/978-3-319-49094-6_19
   Baum T, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P74, DOI 10.1109/QRS.2016.19
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chueshev A, 2020, PROC IEEE INT CONF S, P499, DOI 10.1109/ICSME46990.2020.00054
   Cobertura, 2022, COD COV UT JAV
   Cohen J., 2010, Making Software, P329
   Coppola R, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107062
   Czerwonka J, 2019, COMMUN ACM, V62, P36, DOI 10.1145/3287289
   Davila N, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110951
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Dong LM, 2021, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC53868.2021.00055
   Ebert C, 2009, IEEE SOFTWARE, V26, P88, DOI 10.1109/MS.2009.144
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Etikan I., 2016, AM J THEORETICAL APP, V5, P1, DOI [DOI 10.11648/J.AJTAS.20160501.11, 10.11648/j.atas.20160501.1]
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fatima-tuz-Zahra, 2019, 2019 13TH INTERNATIONAL CONFERENCE ON MATHEMATICS, ACTUARIAL SCIENCE, COMPUTER SCIENCE AND STATISTICS (MACS-13), DOI 10.1109/macs48846.2019.9024821
   Fu Q, 2017, Arxiv, DOI [arXiv:1706.02062, 10.48550/ARXIV.1706.02062, DOI 10.48550/ARXIV.1706.02062]
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Gerrit, 2022, GERR COD REV
   GitHub Inc, 2022, GITHUB WORLD BUILDS
   GitLab B.V, 2022, US
   GitLab B.V, 2022, COD REV GUID
   Google, 2022, GOOGL ENG PRACT DOC
   GraphWalker, 2022, GRAPHWALKER OP SOURC
   Guion LA., 2011, EDIS 2011, DOI DOI 10.32473/EDIS-FY394-2011
   Hanam Q, 2019, PROC IEEE INT CONF S, P202, DOI 10.1109/ICSME.2019.00031
   Kitchenham B., 2007, 2007001 EBSE
   Leotta M, 2013, IEEE ICST WORKSHOP, P108, DOI 10.1109/ICSTW.2013.19
   Thai MTT, 2012, QUAL REP, V17
   Martin Robert C., 2000, Object Mentor, V34, P597
   Menzies T, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P51, DOI 10.1109/SEW.2002.1199449
   Mountainminds GmbH & Co. KG, 2022, JAV COD COV ECL
   Nass Michel, 2020, SCOUT REVISED APPROA, P2
   Nedyalkova Stanislava, 2013, P INT C C COMPUTER S, P117
   NET Foundation, 2022, XUNIT NET
   Pan S.Q., 1996, Progress in Tourism and Hospitality Research, V2, P27, DOI [DOI 10.1002/(SICI)1099-1603(199603)2:1ANDLT;27::AID-PTH29ANDGT;3.0.CO;2-P, 10.1002/(SICI)1099-1603(199603)2:1%26lt;27::AIDPTH29%26gt;3.0.CO;2-P, DOI 10.1002/(SICI)1099-1603(199603)2:1<27::AIDPTH)26GT;3.0.CO;2-P, 10.1002/(SICI)1099-1603(199603)2:13.0.CO;2-P, DOI 10.1002/(SICI)1099-1603(199603)2:13.0.CO;2-P]
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Phabricator Inc, 2022, PHABR DISC PLAN COD
   Randel AE, 2003, ACAD MANAGE J, V46, P763, DOI [10.2307/30040667, 10.5465/30040667]
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rong GP, 2012, CONF SOFTW ENG EDUC, P120, DOI 10.1109/CSEET.2012.22
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Schopfel, 2010, GREY LIT LIB INFORM, DOI [10.1515/9783598441493, DOI 10.1515/9783598441493]
   Shull F, 2008, IEEE SOFTWARE, V25, P88, DOI 10.1109/MS.2008.7
   Silistre A, 2020, 2020 TURKISH NATIONAL SOFTWARE ENGINEERING SYMPOSIUM (UYMS), P171, DOI 10.1109/uyms50627.2020.9247072
   Smirnov Anton, 2022, BEST PRACT COD REV T
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   STRUTZEL E, 1968, NURS RES, V17, P364
   Sutherland A, 2009, PROC INT CONF SOFTW, P259, DOI 10.1109/ICSE-COMPANION.2009.5070996
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
NR 75
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107299
DI 10.1016/j.infsof.2023.107299
EA JUL 2023
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P5VT3
UT WOS:001051358500001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Gomes, J
   Esteves, I
   Neto, VVG
   David, JMN
   Braga, R
   Arbex, W
   Kassab, M
   de Oliveira, RF
AF Gomes, Jonas
   Esteves, Izaque
   Neto, Valdemar Vicente Graciano
   David, Jose Maria N.
   Braga, Regina
   Arbex, Wagner
   Kassab, Mohamad
   de Oliveira, Roberto Felicio
TI A scientific software architecture for the livestock domain
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Compost barn; Livestock; Software ecosystem; Experiments; Dairy cattle;
   Self-adaptive systems; Sensors data
ID PRINCIPLES; DESIGN
AB Context: In the livestock domain, technologies are developed to sustainably raise animal production. However, the domain is critical, since animals are very sensitive to variables such as temperature and humidity, which can cause diseases and consequent production losses and discomfort. Livestock production systems then demand monitoring, reasoning, and acting on the environment so that the levels of those variables are preserved in pre-established intervals and undesired conditions are predicted, avoided, and mitigated with automated actions. Objective: The main contribution of this article is presenting E-SECO, a software ecosystem platform, and its evolution that encapsulates a new self-adaptive component to tackle animal production decisions, named e-Livestock architecture. Method: Two case studies were conducted involving a real system derived from the E-SECO platform encompassing a Compost Barn production system, i.e., the environment and surrounding technology where bovine milk production takes place. Results: Results showed the effectiveness of E-SECO to (i) abstract disruptive technologies based on the Internet of Things (IoT) and Artificial Intelligence and accommodate them in a single architecture for that specific domain, (ii) support reuse and derivation of a self-adaptive architecture to support engineering a complex system for a livestock sub-domain (milk production), and (iii) support empirical studies in a real smart farm towards a future transfer of technology to industry. Conclusion: The results showed that the E-SECO platform, which encompasses e-livestock architecture, can support monitoring, reasoning, prediction, and automated actions in a milk production/Compost Barn environment.
C1 [Gomes, Jonas; Esteves, Izaque; David, Jose Maria N.; Braga, Regina; Arbex, Wagner] Univ Fed Juiz de Fora, Juiz De Fora, MG, Brazil.
   [Neto, Valdemar Vicente Graciano] Univ Fed Goias, Goiania, GO, Brazil.
   [Arbex, Wagner] Embrapa Dairy Cattle, Juiz De Fora, MG, Brazil.
   [Kassab, Mohamad] Penn State Univ, Malvern, PA USA.
   [de Oliveira, Roberto Felicio] Goias State Univ, Posse, GO, Brazil.
C3 Universidade Federal de Juiz de Fora; Universidade Federal de Goias;
   Empresa Brasileira de Pesquisa Agropecuaria (EMBRAPA); Pennsylvania
   Commonwealth System of Higher Education (PCSHE); Pennsylvania State
   University
RP Neto, VVG (corresponding author), Univ Fed Goias, Goiania, GO, Brazil.
EM valdemarneto@ufg.br
RI David, José Maria/AAY-8694-2020
OI David, José Maria/0000-0002-3378-015X
FU Brazilian Agricultural Research Corporation (Embrapa/Brazil);
   CNPq/Brazil [311595/2019-7]; FAPEMIG/Brazil [APQ-02685-17,
   APQ-02194-18]; UFJF/Brazil; CAPES/Brazil; FUNAPE-UFG/Brazil [01/2022]
FX We thank the researchers who participated in the evaluation of this
   proposal, as well as the Brazilian Agricultural Research Corporation
   (Embrapa/Brazil). This work was partially funded by UFJF/Brazil,
   CAPES/Brazil, CNPq/Brazil (grant: 311595/2019-7), and FAPEMIG/Brazil
   (grant: APQ-02685-17), (grant: APQ-02194-18) . We also thank
   FUNAPE-UFG/Brazil via grant 01/2022 for partially funding this research.
CR Ambrósio L, 2021, J GRID COMPUT, V19, DOI 10.1007/s10723-021-09583-x
   Anbananthen Kalaiarasi Sonai Muthu, 2021, F1000Res, V10, P1143, DOI 10.12688/f1000research.73009.1
   Anderson C., 2008, END THEORY DATA DELU, DOI DOI 10.1180/MINMAG.2008.072.1.7
   Bosch J, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1961
   Bosch J, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P254, DOI 10.1109/WICSA.2016.18
   Cao B, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P348, DOI 10.1109/SERVICES-I.2009.54
   Chen JY, 2021, MACH LEARN, V110, P1813, DOI 10.1007/s10994-021-05997-6
   Classe T, 2017, J GRID COMPUT, V15, P475, DOI 10.1007/s10723-017-9401-7
   Valle PHD, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1399, DOI 10.1145/3412841.3442015
   Farooq MS, 2019, IEEE ACCESS, V7, P156237, DOI 10.1109/ACCESS.2019.2949703
   Fernandes J, 2021, PROCEEDINGS OF THE 20TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, SBOS 2021, DOI 10.1145/3493244.3493275
   Ferreira FH, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P54, DOI 10.1109/SEAA53835.2021.00016
   Gomes J., IN PRESS, V3
   Gomes J, 2022, 10TH IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND SOFTWARE ECOSYSTEMS (SESOS 2022), P1, DOI 10.1145/3528229.3529386
   Graciano Neto V.V., 2017, SOFTWARE ECOSYSTEMS, P1
   Graciano Neto V.V., 2017, J BRAZ COMPUT SOC, V23, P1
   Graciano Neto V.V., 2022, COMPUTER, V56, P1
   Neto VVG, 2019, 2019 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 13TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS (SESOS-WDES 2019), P58, DOI 10.1109/SESoS/WDES.2019.00016
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Gualdi F., 2021, P 54 HAWAII INT C SY, P2297
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Janssen S, 2009, ENVIRON SCI POLICY, V12, P573, DOI 10.1016/j.envsci.2009.01.007
   Jonquet C, 2018, COMPUT ELECTRON AGR, V144, P126, DOI 10.1016/j.compag.2017.10.012
   Kamilaris A, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P442, DOI 10.1109/WF-IoT.2016.7845467
   Lopes V., 2021, PROC 13 BRAZILIAN C, P320, DOI [10.5753/ sbiagro.2021.18404, DOI 10.5753/SBIAGRO.2021.18404]
   Lopes V.C., 2022, INT J COMPUT APPL T, VX, P1
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Neto V. V. G., 2017, ANAIS 8 WORKSHOP ASP, P1
   Newlands N., 2019, DEEP LEARNING IMPROV
   Parrott L, 2003, COMPUT ELECTRON AGR, V38, P79, DOI 10.1016/S0168-1699(02)00139-4
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos R., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P206, DOI 10.1109/SBES.2012.24
   da Cruz SMS, 2018, LECT NOTES COMPUT SC, V11017, P257, DOI 10.1007/978-3-319-98379-0_31
   da Cruz SMS, 2019, COMPUT ELECTRON AGR, V161, P14, DOI 10.1016/j.compag.2019.01.044
   Uschold M, 1996, KNOWL ENG REV, V11, P93, DOI 10.1017/S0269888900007797
   Vadlamudi S., 2019, ASIA PAC J ENERGY EN, V6, P91
   Wang WJ, 2018, IOP CONF SER-MAT SCI, V324, DOI 10.1088/1757-899X/324/1/012049
   Weyns D, 2020, An introduction to self-adaptive systems: a contemporary software engineering perspective
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
   YIN RK, 1981, ADMIN SCI QUART, V26, P58, DOI 10.2307/2392599
   Zhai ZY, 2020, COMPUT ELECTRON AGR, V170, DOI 10.1016/j.compag.2020.105256
NR 41
TC 2
Z9 2
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107240
DI 10.1016/j.infsof.2023.107240
EA APR 2023
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G7IK2
UT WOS:000990849200001
DA 2024-07-18
ER

PT J
AU Zain, ZM
   Sakri, S
   Ismail, NHA
AF Zain, Zuhaira Muhammad
   Sakri, Sapiah
   Ismail, Nurul Halimatul Asmak
TI Application of Deep Learning in Software Defect Prediction: Systematic
   Literature Review and Meta-analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Deep Learning; Software Defect Prediction; Systematic Literature Review;
   Meta-Analysis
ID MEAN SQUARED ERROR; QUALITY
AB Context: Despite recent attention given to Software Defect Prediction (SDP), the lack of any systematic effort to assess existing empirical evidence on the application of Deep Learning (DL) in SDP indicates that it is still relatively under-researched.Objective: To synthesize literature on SDP using DL, pertaining to measurements, models, techniques, datasets, and achievements; to obtain a full understanding of current SDP-related methodologies using DL; and to compare the DL models' performances with those of Machine Learning (ML) models in classifying software defects.Method: We completed a thorough review of the literature in this domain. To answer the research issues, results from primary investigations were synthesized. The preliminary findings for DL vs. ML in SDP were verified by using meta-analysis (MA).Result: We discovered 63 primary studies that passed the systematic literature review quality evaluation. However, only 19 primary studies passed the MA quality evaluation. The five most popular performance mea-surements employed in SDP were f-measure, recall, accuracy, precision, and Area Under the Curve (AUC). The top five DL techniques used in building SDP models were Convolutional Neural Network (CNN), Deep Neural Network (DNN), Long Short-Term Memory (LSTM), Deep Belief Network (DBN), and Stacked Denoising Autoencoder (SDAE). PROMISE and NASA datasets were found to be used more frequently to train and test DL models in SDP. The MA results show that DL was favored over ML in terms of study and dataset across accuracy, f-measure, and AUC.Conclusion: The application of DL in SDP remains a challenge, but it has the potential to achieve better predictive performance when the performance-influencing parameters are optimized. We provide a reference point for future research which could be used to improve research quality in this domain.
C1 [Zain, Zuhaira Muhammad; Sakri, Sapiah] Princess Nourah Bint Abdulrahman Univ, Coll Comp & Informat Sci, Informat Syst Dept, Riyadh, Saudi Arabia.
   [Ismail, Nurul Halimatul Asmak] Princess Nourah Bint Abdulrahman Univ, Appl Coll, Dept Comp Sci & Informat Technol, Riyadh, Saudi Arabia.
C3 Princess Nourah bint Abdulrahman University; Princess Nourah bint
   Abdulrahman University
RP Zain, ZM (corresponding author), Princess Nourah Bint Abdulrahman Univ, Coll Comp & Informat Sci, Informat Syst Dept, Riyadh, Saudi Arabia.
EM zmzain@pnu.edu.sa
RI Sakri, Sapiah/GRJ-1190-2022; Sakri, Sapiah/R-3478-2016; Zain, Zuhaira
   Muhammad/ABA-4917-2020
OI Zain, Zuhaira Muhammad/0000-0002-5973-387X
CR Akers J., 2009, Systematic reviews: CRD's guidance for undertaking reviews in health care
   Akimova EN, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9111180
   Alexander DLJ, 2015, J CHEM INF MODEL, V55, P1316, DOI 10.1021/acs.jcim.5b00206
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bahaa A, 2021, J COMPUT SCI-NETH, V17, P490, DOI [DOI 10.3844/JCSSP.2021.490.510, 10.3844/ jcssp. 2021.490.510]
   Bengio Yoshua, 2012, Neural Networks: Tricks of the Trade. Second Edition: LNCS 7700, P437, DOI 10.1007/978-3-642-35289-8_26
   Cao QM, 2015, PROCEEDINGS OF THE 2015 FIRST INTERNATIONAL CONFERENCE ON RELIABILITY SYSTEMS ENGINEERING 2015 ICRSE
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cohen J, 1990, COMPUT ENVIRON URBAN, V14
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   Feng Changyong, 2014, Shanghai Arch Psychiatry, V26, P105, DOI 10.3969/j.issn.1002-0829.2014.02.009
   Field AP, 2010, BRIT J MATH STAT PSY, V63, P665, DOI 10.1348/000711010X502733
   Figueroa-López JE, 2019, J ECONOMETRICS, V208, P179, DOI 10.1016/j.jeconom.2018.09.011
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hosseini S., 2016, SYSTEMATIC LIT REV M
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jureczko M, 2010, ACM INT C P SERIES, DOI [10.1145/1868328.1868342, DOI 10.1145/1868328.1868342]
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kotsiantis SB, 2006, PROC WRLD ACAD SCI E, V12, P278
   KVALSETH TO, 1985, AM STAT, V39, P279, DOI 10.2307/2683704
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Libralon Giampaolo Luiz, 2009, Journal of the Brazilian Computer Society, V15, P3, DOI 10.1007/BF03192573
   Lyu M.R., 1996, J ORGAN BEHAV, DOI [10.1002/(sici)1099-1689(199703)7:13.3.co;2-x, DOI 10.1002/(SICI)1099-1689(199703)7:13.3.CO;2-X]
   Majd A, 2019, J COMPUT LANG, V53, P38, DOI 10.1016/j.cola.2019.03.006
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Meiliana M., 2018, 2017 IEEE INT C CYBE, DOI [10.1109/CYBERNETICSCOM.2017.8311708, DOI 10.1109/CYBERNETICSCOM.2017.8311708]
   Moulis G, 2016, AUTOIMMUN REV, V15, P203, DOI 10.1016/j.autrev.2015.11.001
   Murillo-Morera J., 2015, CIBSE 2015 18 IB AM
   Omri S, 2020, P IEEE ACM 42 INT C, P209, DOI 10.1145/3387940.3391463
   Özakinci R, 2018, J SYST SOFTWARE, V144, P216, DOI 10.1016/j.jss.2018.06.025
   Ozakinci R, 2016, COMM COM INF SC, V609, P287, DOI 10.1007/978-3-319-38980-6_21
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Schneider A, 2010, DTSCH ARZTEBL INT, V107, P776, DOI [10.3238/arztebl.2010.0776, 10.3238/arztebl.2010.0799]
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Singh PK, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P1793
   Steorts RC, 2013, STAT SINICA, V23, P749, DOI 10.5705/ss.2012.053
   Torabi M, 2013, J MULTIVARIATE ANAL, V117, P76, DOI 10.1016/j.jmva.2013.02.008
   Tóth Z, 2016, LECT NOTES COMPUT SC, V9789, P625, DOI 10.1007/978-3-319-42089-9_44
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wang Z, 2009, IEEE SIGNAL PROC MAG, V26, P98, DOI 10.1109/MSP.2008.930649
   Witten I. H., 2016, Data mining: Practical machine learning tools and techniques, DOI [DOI 10.1016/C2009-0-19715-5, 10.1016/c2009-0-19715-5]
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wu GC, 2016, AUTOIMMUN REV, V15, P22, DOI 10.1016/j.autrev.2015.10.002
   Zain Zuhaira Muhammad, 2022, Mendeley Data, V2, DOI 10.17632/KY63CWKF4H.2
NR 57
TC 9
Z9 9
U1 13
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107175
DI 10.1016/j.infsof.2023.107175
EA FEB 2023
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0A0HY
UT WOS:000951512500001
DA 2024-07-18
ER

PT J
AU Ishimoto, Y
   Kondo, M
   Ubayashi, N
   Kamei, Y
AF Ishimoto, Yuta
   Kondo, Masanari
   Ubayashi, Naoyasu
   Kamei, Yasutaka
TI PAFL: Probabilistic Automaton-based Fault Localization for Recurrent
   Neural Networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault localization; Faults; Recurrent neural networks; Probabilistic
   finite automata
AB Context: If deep learning models in safety-critical systems misbehave, serious accidents may occur. Previous studies have proposed approaches to overcome such misbehavior by detecting and modifying the responsible faulty parts in deep learning models. For example, fault localization has been applied to deep neural networks to detect neurons that cause misbehavior.Objective: However, such approaches are not applicable to deep learning models that have internal states, which change dynamically based on the input data samples (e.g., recurrent neural networks (RNNs)). Hence, we propose a new fault localization approach to be applied to RNNs.Methods: We propose probabilistic automaton-based fault localization (PAFL). PAFL enables developers to detect faulty parts even in RNNs by computing suspiciousness scores with fault localization using n-grams. We convert RNNs into probabilistic finite automata (PFAs) and localize faulty sequences of state transitions on PFAs. To consider various sequences and to detect faulty ones more precisely, we use n-grams inspired by natural language processing. Additionally, we distinguish data samples related to the misbehavior to evaluate PAFL. We also propose a novel suspiciousness score, average n-gram suspiciousness (ANS) score, based on n-grams to distinguish data samples. We evaluate PAFL and ANS scores on eight publicly available datasets on three RNN variants: simple recurrent neural network, gated recurrent units, and long short-term memory.Results: The experiment demonstrates that ANS scores identify faulty parts of RNNs when n is greater than one. Moreover, PAFL is statistically significantly better and has large effect sizes compared to state-of-the-art fault localization in terms of distinguishing data samples related to the misbehavior. Specifically, PAFL is better in 66.74% of the experimental settings.Conclusion: The results demonstrate that PAFL can be used to detect faulty parts in RNNs. Hence, in future studies, PAFL can be used as a baseline for fault localization in RNNs.
C1 [Ishimoto, Yuta; Kondo, Masanari; Ubayashi, Naoyasu; Kamei, Yasutaka] Kyushu Univ, Fukuoka, Japan.
C3 Kyushu University
RP Ishimoto, Y (corresponding author), Kyushu Univ, Fukuoka, Japan.
EM ishimoto@posl.ait.kyushu-u.ac.jp; kondo@ait.kyushu-u.ac.jp;
   ubayashi@ait.kyushu-u.ac.jp; kamei@ait.kyushu-u.ac.jp
FU JSPS KAKENHI Japan;  [JP18H04097];  [JP21H04877];  [JP22K17874]; 
   [JP20H04167]
FX Acknowledgments This research was partially supported by JSPS KAKENHI
   Japan (Grant Numbers: JP18H04097, JP21H04877, JP22K17874, JP20H04167) .
   We would like to thank Editage ( www.editage.com ) for English language
   editing.
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   [Anonymous], 2020, VIDEO SHOWS TESLA AU
   [Anonymous], Toxic comment classification challenge
   [Anonymous], 2021, 2 DEAD TESLA CRASH C
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Dallmeier V., 2005, P 6 INT S AUT AN DRI, P99, DOI DOI 10.1145/1085130.1085143
   Dong GL, 2020, IEEE INT CONF AUTOM, P499, DOI 10.1145/3324884.3416592
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   ELMAN JL, 1990, COGNITIVE SCI, V14, P179, DOI 10.1207/s15516709cog1402_1
   Eniser HF, 2019, LECT NOTES COMPUT SC, V11424, P171, DOI 10.1007/978-3-030-16722-6_10
   Feng D, 2021, IEEE T INTELL TRANSP, V22, P1341, DOI 10.1109/TITS.2020.2972974
   Gatys LA, 2016, PROC CVPR IEEE, P2414, DOI 10.1109/CVPR.2016.265
   Gopinath D, 2018, Arxiv, DOI arXiv:1807.10439
   Grigorescu S, 2020, J FIELD ROBOT, V37, P362, DOI 10.1002/rob.21918
   Hesamian MH, 2019, J DIGIT IMAGING, V32, P582, DOI 10.1007/s10278-019-00227-x
   Hou BJ, 2020, IEEE T NEUR NET LEAR, V31, P2267, DOI 10.1109/TNNLS.2020.2967051
   Hua Mao, 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P111, DOI 10.1109/QEST.2011.21
   Huang W, 2022, IEEE T RELIAB, V71, P1191, DOI 10.1109/TR.2021.3080664
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Jin Wei., 2013, P 2013 INT S SOFTWAR, P213, DOI DOI 10.1145/2483760.2483763
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Karbab EB, 2018, DIGIT INVEST, V24, pS48, DOI 10.1016/j.diin.2018.01.007
   Kennedy J., 1995, 1995 IEEE International Conference on Neural Networks Proceedings (Cat. No.95CH35828), P1942, DOI 10.1109/ICNN.1995.488968
   Kennedy R Eberhart J., 1995, Particle swarm optimization, V4, P1942
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kim T, 2019, IEEE T INF FOREN SEC, V14, P773, DOI 10.1109/TIFS.2018.2866319
   Kuma T, 2020, INT C PROGRAM COMPRE, P376, DOI 10.1145/3387904.3389290
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Litjens G, 2017, MED IMAGE ANAL, V42, P60, DOI 10.1016/j.media.2017.07.005
   Luan FJ, 2017, PROC CVPR IEEE, P6997, DOI 10.1109/CVPR.2017.740
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Maas Andrew, 2011, P 49 ANN M ASS COMP
   MacQueen J., 1967, P 5 BERK S MATH STAT, P281
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Odena A, 2019, PR MACH LEARN RES, V97
   Pang B., 2005, P 43 ANN M ASS COMP, DOI DOI 10.3115/1219840.1219855
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   PyTorch, RES PROD
   RABIN MO, 1963, INFORM CONTROL, V6, P230, DOI 10.1016/S0019-9958(63)90290-0
   Romano Jeanine, 2006, ANN M FLOR ASS I RES, V177, P34
   Sak H, 2014, Arxiv, DOI arXiv:1402.1128
   Shen DG, 2017, ANNU REV BIOMED ENG, V19, P221, DOI [10.1146/annurev-bioeng-071516044442, 10.1146/annurev-bioeng-071516-044442]
   Sohn J, 2022, Arxiv, DOI arXiv:1912.12463
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tobiyama S, 2016, P INT COMP SOFTW APP, P577, DOI 10.1109/COMPSAC.2016.151
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Weiss G, 2018, PR MACH LEARN RES, V80
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xie Xiaofei, 2021, P INT C MACHINE LEAR, P11383
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Yoo J, 2019, IEEE I CONF COMP VIS, P9035, DOI 10.1109/ICCV.2019.00913
   Yu B, 2022, IEEE T RELIAB, V71, P1401, DOI 10.1109/TR.2021.3096332
   Yuan ZL, 2014, SIGCOMM'14: PROCEEDINGS OF THE 2014 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P371, DOI [10.1145/2619239.2631434, 10.1145/2740070.2631434]
   Zhang H, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P376, DOI 10.1109/ASE.2019.00043
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang XY, 2021, AAAI CONF ARTIF INTE, V35, P11699
NR 68
TC 6
Z9 6
U1 2
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107117
DI 10.1016/j.infsof.2022.107117
EA DEC 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200007
OA hybrid
DA 2024-07-18
ER

PT J
AU Leinonen, A
   Roto, V
AF Leinonen, Aarne
   Roto, Virpi
TI Service Design Handover to user experience design-a systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Knowledge transfer; Service Design Handover; Systematic literature
   review; UX design; Agile UX; Design process
ID KNOWLEDGE TRANSFER; CENTERED DESIGN; OPEN INNOVATION; AGILE; USABILITY;
   SUPPORT; IMPACT
AB Context: Knowledge transfer plays an important role in digital Service Creation Projects where information should flow through service design, Agile UX, and software implementation phases. One context for these handovers exists in projects where the service designers participate in the early phases of exploring and scoping the service, while agile user experience specialists take over the digital parts of service design and programmers the software implementation.Objective: The purpose of this study is to summarise scientific knowledge into best practices for effective information flow in real world Service Creation Projects. Special attention is paid on an important and understudied project phase, knowledge handover from service design to software implementation, which is referred as Service Design Handover in this study.Method: A systematic literature review was conducted to analyse the current scientific knowledge on knowledge transfer in digital Service Creation Projects. PRISMA 2020 statement was used for reporting the review, which also influenced planning and execution of the systematic review process. SCOPUS search brought up 773 publications, and the full content analysis was done for the 41 most relevant publications.Results: Based on the literature analysis, the best practices for effective knowledge transfer are related to communication quality and quantity, circumventing the need for communication, and verifying successful communication. To provide an overview of effective knowledge transfer, frameworks of Service Creation Project information flow and Service Design Handover are proposed. Conclusion: The existing knowledge transfer literature is voluminous, but this literature review is the first to study knowledge transfer in Service Creation Project context. The framework, best practices, and list of potential problem sources in knowledge transfer provide new knowledge for managing the information flow in service creation. The research gaps found in this literature review show the need for future research, such as empirical studies on service creation practice.
C1 [Leinonen, Aarne; Roto, Virpi] Aalto Univ, POB 11000,Otakaari 1B, FI-00076 Espoo, Finland.
C3 Aalto University
RP Leinonen, A (corresponding author), Aalto Univ, POB 11000,Otakaari 1B, FI-00076 Espoo, Finland.
EM aarne.leinonen@aalto.fi; virpi.roto@aalto.fi
RI Roto, Virpi/G-2403-2013
OI Roto, Virpi/0000-0002-6880-5636; Leinonen, Aarne/0000-0002-6257-9981
FU Business Finland [81/31/2020]
FX This research was funded by Business Finland 81/31/2020.
CR Anderson, 2020, MOST IN DEMAND HARD
   [Anonymous], 2016, SERVICE DESIGN GEOGR
   [Anonymous], 2013, MANAGEMENT FUZZY FRO
   [Anonymous], 2003, Observing the user experience: A practitioner's guide to user research
   [Anonymous], 2009, BMJ, DOI DOI 10.1016/j.ijsu.2010.02.007
   [Anonymous], 2013, CHI 13 EXTENDED ABST, DOI DOI 10.1145/2468356.2468758
   Bacon E, 2019, INT J INFORM MANAGE, V49, P377, DOI 10.1016/j.ijinfomgt.2019.07.012
   Bacon E, 2019, LECT NOTES COMPUT SC, V11701, P747, DOI 10.1007/978-3-030-29374-1_61
   Bagheri S, 2019, INT J INFORM MANAGE, V47, P198, DOI 10.1016/j.ijinfomgt.2018.12.019
   Bauer T, 2019, J HOSP TOUR MANAG, V41, P197, DOI 10.1016/j.jhtm.2019.10.005
   Becker J, 2013, IEEE T ENG MANAGE, V60, P468, DOI 10.1109/TEM.2012.2214770
   Beyhl T., 2014, Design thinking research, P153, DOI [10.1007/978-3-319-01303-9_11, DOI 10.1007/978-3-319-01303-9_11]
   Beyhl T, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P1, DOI 10.1109/TEFSE.2013.6620146
   Bhattarai R, 2016, LECT NOTES COMPUT SC, V9750, P103, DOI 10.1007/978-3-319-39381-0_10
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Brown D., 2013, Agile user experience design: a Practitioner's guide to making it work, V1st
   Caballero L, 2016, INT J SOFTW ENG KNOW, V26, P1175, DOI 10.1142/S0218194016500418
   Chakraborty S, 2010, J ASSOC INF SYST, V11, P212
   Daghfous A, 2018, INFORM TECHNOL PEOPL, V31, P428, DOI 10.1108/ITP-10-2016-0222
   Daghfous A, 2015, IND MANAGE DATA SYST, V115, P158, DOI 10.1108/IMDS-07-2014-0202
   Dayton D, 2009, TECH COMMUN-STC, V56, P219
   Dennehy D, 2019, J DECIS SYST, V28, P224, DOI 10.1080/12460125.2019.1642081
   Detweiler M., 2007, Interactions, V14, P40, DOI 10.1145/1242421.1242447
   Eckert CM, 2001, DESIGN MANAGEMENT - PROCESS AND INFORMATION ISSUES, P43
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Erichsen J.A.B., 2016, IEEE, P1, DOI [10.1109/SYSCON.2016.7490586,iSSN:Null, DOI 10.1109/SYSCON.2016.7490586,ISSN:NULL]
   Erichsen JAB, 2016, PROC CIRP, V54, P233, DOI 10.1016/j.procir.2016.04.099
   Faccin K, 2019, J KNOWL MANAG, V23, P439, DOI 10.1108/JKM-04-2018-0233
   Frey J., 2013, SMART INNOVATION SYS, P19, DOI [10.1007/978-3-642-34219-6_3, DOI 10.1007/978-3-642-34219-6_3]
   Freyens Benoit, 2007, Journal of European Industrial Training, V31, P680, DOI 10.1108/03090590710846666
   Gassmann Oliver., 2014, Management of the Fuzzy Front End of Innovation, P3, DOI DOI 10.1007/978-3-319-01056-4
   Gaubinger Kurt., 2014, Management of the Fuzzy Front End of Innovation, P15, DOI DOI 10.1007/978-3-319-01056-4_2
   Gernez E., 2014, ENABLING SERVICE DES, P39
   Guentert M., 2014, DESIGN THINKING RES, P203, DOI [10.1007/978-3-319-01303-9_13, DOI 10.1007/978-3-319-01303-9_13]
   Halttunen H.-R.M., 2014, DS 81 P NORDDESIGN 2, P356
   Hodgetts P, 2005, AGILE 2005, Proceedings, P235, DOI 10.1109/ADC.2005.24
   Isbister K., 2008, Game usability: Advice from the experts for advancing the player experience, V1st, DOI [10.1201/b14580, DOI 10.1201/B14580]
   Janssen D, 2020, ADV INTELL SYST, V972, P445, DOI 10.1007/978-3-030-19135-1_43
   Jones N.B., 2018, KNOWLEDGE TRANSFER I, DOI [10.4324/9781315200163, DOI 10.4324/9781315200163]
   Jurca G, 2014, 2014 AGILE CONFERENCE (AGILE), P24, DOI 10.1109/AGILE.2014.17
   KIEFFER S, 2019, P 14 INT JOINT C COM, P74, DOI DOI 10.5220/0007693600740085
   Kim B, 2020, ADV INTELL SYST COMP, V955, P3, DOI 10.1007/978-3-030-20227-9_1
   Lee J, 2014, INFORM TECHNOL PEOPL, V27, P366, DOI 10.1108/ITP-10-2012-0115
   Santos-Vijande ML, 2016, J ACAD MARKET SCI, V44, P350, DOI 10.1007/s11747-015-0447-4
   MADEYSKI L, 2022, IEEE T SOFTWARE ENG, P1, DOI DOI 10.1109/TSE.2022.3174092
   Maguire Martin, 2013, Universal Access in Human-Computer Interaction. Design Methods, Tools, and Interaction Techniques for eInclusion. 7th International Conference, UAHCI 2013 Held as Part of HCI International 2013. Proceedings. LNCS 8009, P185, DOI 10.1007/978-3-642-39188-0_20
   Martin C.R., 1993, International Journal of Service Industry Management, V4, P49, DOI [10.1108/09564239310024985, DOI 10.1108/09564239310024985]
   Matz A, 2016, LECT NOTES COMPUT SC, V9753, P48, DOI 10.1007/978-3-319-39483-1_5
   Norman D., 1995, CHI 95 MOSAIC CREATI, P1
   Obrist M., 2012, P WORKSHOP DESIGNING, P811, DOI [10.1145/2317956.2318086, DOI 10.1145/2317956.2318086]
   Ooms K, 2019, CARTOGR GEOGR INF SC, V46, P456, DOI 10.1080/15230406.2018.1535331
   Pfister RA, 2012, J KNOWL MANAG, V16, P372, DOI 10.1108/13673271211218924
   Przybilla L., 2018, COMBINING DESIGN THI
   Rajala T, 2019, J KNOWL ECON, V10, P104, DOI 10.1007/s13132-016-0445-x
   Rejab MM, 2015, LECT NOTES BUS INF P, V212, P141, DOI 10.1007/978-3-319-18612-2_12
   Rejab MM, 2014, 2014 AGILE CONFERENCE (AGILE), P33, DOI 10.1109/AGILE.2014.16
   Rothstein HR, 2005, PUBLICATION BIAS IN META-ANALYSIS: PREVENTION, ASSESSMENT AND ADJUSTMENTS, P1, DOI 10.1002/0470870168
   Roto V, 2021, PROCEEDINGS OF THE 2021 ACM DESIGNING INTERACTIVE SYSTEMS CONFERENCE (DIS 2021), P1915, DOI 10.1145/3461778.3462058
   Sabariah MK, 2019, PROCEEDINGS OF THE 2019 2ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND INFORMATION MANAGEMENT (ICSIM 2019) / 2019 2ND INTERNATIONAL CONFERENCE ON BIG DATA AND SMART COMPUTING (ICBDSC 2019), P129, DOI 10.1145/3305160.3305195
   Schulz J., 2017, STRIKE WHILE IRON IS, P349, DOI [10.1007/978-3-319-49542-2_21, DOI 10.1007/978-3-319-49542-2_21]
   Schweitzer F., 2014, Management of the Fuzzy Front End of Innovation
   Secundo G, 2020, J BUS RES, V119, P272, DOI 10.1016/j.jbusres.2019.02.072
   Secundo G, 2019, BUS PROCESS MANAG J, V25, P144, DOI 10.1108/BPMJ-06-2017-0173
   Seeber I, 2013, P ANN HICSS, P559, DOI 10.1109/HICSS.2013.116
   Sensuse DI, 2017, INT C INF TECH SYST, P297, DOI 10.1109/ICITSI.2017.8267960
   Simeone L, 2019, CODESIGN, V15, P361, DOI 10.1080/15710882.2018.1546320
   Sloan D., 2009, USER RES SCI SOFTWAR, DOI [10.14236/ewic/HCI2009.53, DOI 10.14236/EWIC/HCI2009.53]
   Smeenk W, 2019, CODESIGN, V15, P308, DOI 10.1080/15710882.2018.1484490
   Stickdorn Marc., 2011, This is Service Design Thinking
   Stompff G, 2011, INT CONF ENG DES, V1, P79
   Uchihira N., 2014, PROGRESSIVE TRENDS K, P258, DOI [10.4018/978-1-4666-4663-6, DOI 10.4018/978-1-4666-4663-6]
   Van der Linden V, 2019, DESIGN STUD, V63, P65, DOI 10.1016/j.destud.2019.02.004
   Veselaj S, 2019, INT J INNOV MANAG, V23, DOI 10.1142/S1363919619500555
   Wang ZN, 2012, EXPERT SYST APPL, V39, P8899, DOI 10.1016/j.eswa.2012.02.017
   Williams Elliott M., 2017, Proceedings of the Human Factors and Ergonomics Society Annual Meeting, V61, P351, DOI 10.1177/1541931213601570
   Xiong Y., 2010, 2 INT C INF SCI ENG, P1, DOI [10.1109/ICISE.2010.5690032, DOI 10.1109/ICISE.2010]
   Yap CEL, 2021, LECT NOTES COMPUT SC, V12933, P259, DOI 10.1007/978-3-030-85616-8_16
   Zeithaml V.A., 1990, DELIVERING QUALITY S
NR 78
TC 5
Z9 5
U1 15
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107087
DI 10.1016/j.infsof.2022.107087
EA OCT 2022
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6D6JH
UT WOS:000882793900002
OA hybrid
DA 2024-07-18
ER

PT J
AU Hameed, S
   Elsheikh, Y
   Azzeh, M
AF Hameed, Shaima
   Elsheikh, Yousef
   Azzeh, Mohammad
TI An optimized case-based software project effort estimation using genetic
   algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation (SEE); Case-based reasoning (CBR); Genetic
   algorithm (GA); Machine learning (ML)
ID COST ESTIMATION; ANALOGY; SELECTION
AB Software development companies have long suffered from inaccurate estimation of their software projects. This in turn led to huge losses, especially in the financial resources available for the project as well as the time required to complete it. As a result of this, the research community has developed different methods for esti-mating effort in software projects in the hope of achieving high levels of accuracy and efficiency in the use of available resources. Among those methods that have proven to be accurate in estimating the effort of software projects is the use of machine learning (ML) techniques, especially the case-based reasoning technique (CBR). This technique is based on adapting previously successful solutions for similar software projects. However, the CBR technique suffers from a problem which is its multiple parameters that are difficult to be tuned. This justifies the importance of the adaptation and adjustment process as an essential part of CBR to produce accurate and efficient results with least absolute estimation error. In this paper, one of the most efficient multi-objective evolutionary techniques, the Genetic Algorithm (GA), are used to help find the best set of classical CBR pa-rameters (feature selection, feature weighting, similarity measures, and k number of nearest neighbors) to produce the most accurate effort estimates for software projects. The proposed CBR-GA model showed the effectiveness of using the GA algorithm to search for the best combination of CBR parameters and thus improve its accuracy. This in turn is beneficial for project managers in the early financial planning phase for effort estimation and thus project cost control. To validate the proposed CBR-GA model, we used a set of public benchmark datasets available on PROMISE data repository, in addition we used a set of reliable evaluation metrics. The obtained results are promising in terms of accuracy and significance tests. This implies the importance of search-based techniques for tuning effort estimation methods.
C1 [Hameed, Shaima; Elsheikh, Yousef] Appl Sci Private Univ, Dept Comp Sci, Amman, Jordan.
   [Azzeh, Mohammad] Princess Sumaya Univ Technol, Dept Data Sci, Amman, Jordan.
C3 Princess Sumaya University for Technology
RP Elsheikh, Y (corresponding author), Appl Sci Private Univ, Dept Comp Sci, Amman, Jordan.
EM y_elsheikh@asu.edu.jo
RI Azzeh, Mohammad/G-5472-2017
OI Azzeh, Mohammad/0000-0002-0323-6452
CR Abnane I, 2018, FED CONF COMPUT SCI, P1015, DOI 10.15439/2018F95
   Ali W, 2020, IEEE ACCESS, V8, P116766, DOI 10.1109/ACCESS.2020.3003569
   Almuzaini HA, 2022, EXPERT SYST APPL, V203, DOI 10.1016/j.eswa.2022.117384
   Alqasrawi Y, 2022, SCI COMPUT PROGRAM, V214, DOI 10.1016/j.scico.2021.102744
   Ardiansyah A., 2018, INT J ADV INTELL INF, V4, P251, DOI DOI 10.26555/IJAIN.V4I3.266
   Azzeh M, LEARNING BEST K ANAL, P7
   Azzeh M, 2022, SCI COMPUT PROGRAM, V219, DOI 10.1016/j.scico.2022.102819
   Azzeh M, 2016, APPL SOFT COMPUT, V49, P981, DOI 10.1016/j.asoc.2016.05.008
   Azzeh M, 2016, NEURAL COMPUT APPL, V27, P2241, DOI 10.1007/s00521-015-2004-y
   Azzeh M, 2014, INT J ADV COMPUT SC, V5, P6
   Azzeh M, 2012, EMPIR SOFTW ENG, V17, P90, DOI 10.1007/s10664-011-9176-6
   Carr J., INTRO GENETIC ALGORI, P40
   Chandrashekar G, 2014, COMPUT ELECTR ENG, V40, P16, DOI 10.1016/j.compeleceng.2013.11.024
   Chen SJ, 2022, OPT QUANT ELECTRON, V54, DOI 10.1007/s11082-022-03584-0
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Cuadrado-Gallego Juan J., 2010, Proceedings of the 11th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD 2010), P269, DOI 10.1109/SNPD.2010.47
   Das A.K., 2020, COMPUTATIONAL INTELL, P999
   Fadhil AA, 2020, IEEE ACCESS, V8, P75279, DOI 10.1109/ACCESS.2020.2988867
   Fernández-Diego M, 2020, IEEE ACCESS, V8, P166768, DOI 10.1109/ACCESS.2020.3021664
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Hammi MT, 2018, IEEE WCNC, DOI 10.1109/ICTON.2018.8473771
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Jones Capers, 2013, Software Engineering Notes, V38, P1, DOI 10.1145/2492248.2492268
   Karner G., RESOURCE ESTIMATION, P9
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Menzies Tim., 2012, PROMISE REPOSITORY E
   Milios D, 2011, IFIP ADV INF COMM TE, V364, P350
   Misra Santanu Kumar, 2022, Advanced Computational Paradigms and Hybrid Intelligent Computing: Proceedings of ICACCP 2021. Advances in Intelligent Systems and Computing (1373), P467, DOI 10.1007/978-981-16-4369-9_46
   Mohri M., 2012, Foundations of Machine Learning
   Pal SankarK., 2004, FDN SOFT CASE BASED
   Peixoto C.E.L., 2010, P 2010 ICSE WORKSHOP, P13, DOI [10.1145/1808981.1808983, DOI 10.1145/1808981.1808983]
   Phannachitta P, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106330
   Phannachitta P, 2017, I C SOFTWARE KNOWL I
   Shalev-Shwartz S., 2014, UNDERSTANDING MACHIN
   Silhavy P, 2019, IEEE ACCESS, V7, P9618, DOI 10.1109/ACCESS.2019.2891878
   Singh J., 2020, JOURNEY BIOINSPIRED, V185
   Sivanandam S., 2008, Introduction to genetic algorithms, DOI [10.1007/978-3-540-73190-0_7, DOI 10.1007/978-3-540-73190-0]
   Subriadi Apol Pribadi, 2018, 2018 International Seminar on Research of Information Technology and Intelligent Systems (ISRITI), P204, DOI 10.1109/ISRITI.2018.8864481
   Thamarai I., 2016, INDIAN J SCI TECHNOL, V9, DOI [10.17485/ijst/2016/v9i21/95286, DOI 10.1748/ijst/2016/v9i21/95286]
   Trendowicz A., 2014, Software project effort estimation: Foundations and best practice guidelines for success, DOI DOI 10.1007/978-3-319-03629-8
   Trendowicz and Jeffery, 2014, TRENDOWICZ JEFFERY 2
   Wu L, COMP SOFTWARE COST E, P1
   Xu SF, 2022, APPL SOFT COMPUT, V115, DOI 10.1016/j.asoc.2021.108241
   Zhang Ruihong, 2022, INT J AMBIENT ENERGY, V43, P1036
   Yinhuan,, 2009, ICCSSE 2009: PROCEEDINGS OF 2009 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE & EDUCATION, P941, DOI 10.1109/ICCSE.2009.5228317
NR 46
TC 11
Z9 12
U1 4
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107088
DI 10.1016/j.infsof.2022.107088
EA OCT 2022
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5W0BW
UT WOS:000877588300001
OA Bronze
DA 2024-07-18
ER

PT J
AU Khatri, Y
   Singh, SK
AF Khatri, Yogita
   Singh, Sandeep Kumar
TI Towards building a pragmatic cross-project defect prediction model
   combining non-effort based and effort-based performance measures for a
   balanced evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cross-project defect prediction; Transfer boosting; Effort based
   measures; Non-effort based measures
ID STATIC CODE ATTRIBUTES; SOFTWARE; METRICS; VALIDATION; MACHINE
AB Context: Recent years have witnessed the growing trend in cross-project defect prediction (CPDP), where the training and the testing data come from different projects having different data distributions. Several CPDP methods have been presented in the literature to overcome differences in their distributions, but the majority of the existing approaches have been evaluated considering the availability of unlimited inspection effort, which is practically impossible, thus leading to fallacious conclusions. Further, they focused more on improving Recall over Precision leading to a high probability of false alarm (PF), causing significant wastage of developer's efforts and time.
   Objective: Addressing these issues, we propose a Two-Phase Transfer Boosting (TPTB) model, which aims at improving the performance not only in terms of non-effort based measures (NEBMs) (making a balance between Recall and PF) but also in terms of effort based measures (EBMs), considering the availability of limited inspection effort.
   Method: To mitigate the distribution differences, the first phase assigns initial weights to the training modules based on the feature distribution and feature importance. The second phase applies the Dynamic Transfer AdaBoost algorithm to build an ensemble classifier to lessen the impact of contradictory training modules. In addition, a sorting strategy is designed to prioritize the modules for further inspection.
   Results: Statistical results on 62 datasets revealed a better-balanced performance of our TPTB model holistically over NN-filter, ManualDown, EASC, and Cruz model with performance comparable to WPDP (Within-project defect prediction) considering NEBMs. Besides, when considering EBMs together, TPTB showed statistically and practically more balanced performance as compared to ManualUP and Cruz with overall performance comparable to EASC.
   Conclusions: Our results demonstrate the efficacy of the TPTB model in a practical setting empowering the quality assurance team to predict and prioritize the defective modules allocating limited inspection effort by optimally focusing on highly defective modules.
C1 [Khatri, Yogita; Singh, Sandeep Kumar] Jaypee Inst Informat Technol, Dept Comp Sci Engn & Informat Technol, Noida, India.
C3 Jaypee Institute of Information Technology (JIIT)
RP Khatri, Y (corresponding author), Jaypee Inst Informat Technol, Dept Comp Sci Engn & Informat Technol, Noida, India.
EM 19403019@mail.jiit.ac.in; sandeepk.singh@jiit.ac.in
RI Khatri, Yogita/W-1528-2018; SINGH, SANDEEP/ABI-3719-2020
OI Khatri, Yogita/0000-0001-8789-5932; 
CR Al-Stouhi S, 2011, LECT NOTES ARTIF INT, V6911, P60, DOI 10.1007/978-3-642-23780-5_14
   Albanese D, 2013, BIOINFORMATICS, V29, P407, DOI 10.1093/bioinformatics/bts707
   [Anonymous], 2007, P ICSE 2007 WORK 3 I, DOI DOI 10.1109/PROMISE.2007.10
   arxiv, 2019, TRANSFER LEARNING OR
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Feng Changyong, 2014, Shanghai Arch Psychiatry, V26, P105, DOI 10.3969/j.issn.1002-0829.2014.02.009
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herbold S, 2019, IEEE T SOFTWARE ENG, V45, P632, DOI 10.1109/TSE.2018.2790413
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P39, DOI 10.1109/ICSE.2015.133
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jaiswal A, 2018, INT J SYST ASSUR ENG, V9, P230, DOI 10.1007/s13198-016-0543-y
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Khatri Y, 2022, INNOV SYST SOFTW ENG, V18, P263, DOI 10.1007/s11334-020-00380-5
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Malhotra R, 2019, NEUROCOMPUTING, V343, P120, DOI 10.1016/j.neucom.2018.04.090
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pelayo L, 2012, IEEE T RELIAB, V61, P516, DOI 10.1109/TR.2012.2183912
   Peng LZ, 2009, INFORM SCIENCES, V179, P809, DOI 10.1016/j.ins.2008.11.007
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Qiu SJ, 2018, IET SOFTW, V12, P345, DOI 10.1049/iet-sen.2017.0111
   Reshef DN, 2011, SCIENCE, V334, P1518, DOI 10.1126/science.1205438
   Romano Jeanine, 2006, ANN M FLOR ASS I RES, V177, P34
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Singh P, 2017, IEEE T SYST MAN CY-S, V47, P826, DOI 10.1109/TSMC.2016.2521840
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Turabieh H, 2019, EXPERT SYST APPL, V122, P27, DOI 10.1016/j.eswa.2018.12.033
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xu Z, 2019, J COMPUT SCI TECH-CH, V34, P1039, DOI 10.1007/s11390-019-1959-z
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Xu Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P370, DOI 10.1109/SANER.2016.34
   Yu X, 2017, P 29 INT C SOFTW ENG, P392, DOI DOI 10.18293/SEKE2017-043
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 65
TC 6
Z9 6
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106980
DI 10.1016/j.infsof.2022.106980
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100001
DA 2024-07-18
ER

PT J
AU Kapitsaki, GM
   Tselikas, ND
   Kyriakou, KID
   Papoutsoglou, M
AF Kapitsaki, Georgia M.
   Tselikas, Nikolaos D.
   Kyriakou, Kyriakos-Ioannis D.
   Papoutsoglou, Maria
TI Help me with this: A categorization of open source software problems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Free and Open Source Software; Q&A sites; Stack Exchange
ID USAGE
AB Context: Free and Open Source Software is widely used in the research community and the software industry. In this context, developers come across various issues they need to handle in order to use and create software responsibly and without causing legal violations. For instance, using open source software that carries a specific license or how contributions to open source software should be handled are among the issues that need to be considered.Objective: As practitioners turn primarily to Q&A sites to seek help, it is important to understand which specific open source software issues they face. In this research, our main objective is to provide a categorization of open source software problems present in the user questions of the Open Source Stack Exchange site and perform a meta-analysis on the encountered questions.Method: We have performed a qualitative study analyzing manually 1,500 most popular posts in the Open Source Stack Exchange site and have mapped them to categories and more generic clusters. The coding task was performed in iterations with the participation of three of the authors. Agreement was calculated and cases of disagreement were resolved. Meta-analysis on questions and answers was also performed for discussion purposes.Results: We have created 26 categories of problems discussed in the Open Source Stack Exchange site, and grouped them into 6 clusters. Our results show that posts on license texts/conditions and license/copyright notices are more common, whereas posts on license differences are the most popular in terms of views by other users.Conclusion: The results can assist any participant of the open source software community to understand on which basic issues she should focus on to gain a good understanding of open source software. They are also useful for improving education on open source software and community support using the implications presented for each category.
C1 [Kapitsaki, Georgia M.; Papoutsoglou, Maria] Univ Cyprus, Dept Comp Sci, Nicosia, Cyprus.
   [Tselikas, Nikolaos D.; Kyriakou, Kyriakos-Ioannis D.] Univ Peloponnese, Dept Informat & Telecommun, Tripoli, Greece.
C3 University of Cyprus; University of Peloponnese
RP Tselikas, ND (corresponding author), Univ Peloponnese, Dept Informat & Telecommun, Tripoli, Greece.
EM ntsel@uop.gr
OI Tselikas, Nikolaos/0000-0001-5799-3558
CR Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Almeida DA, 2019, EMPIR SOFTW ENG, V24, P211, DOI 10.1007/s10664-018-9614-9
   Altman DG, 1991, PRACTICAL STAT MED R
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Claes M, 2018, IEEE WORK CONF MIN S, P437, DOI 10.1145/3196398.3196447
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   del Bianco V, 2011, IEEE SOFTWARE, V28, P67, DOI 10.1109/MS.2011.93
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   Forbes C, 2012, PROC INT CONF SOFTW, P1447, DOI 10.1109/ICSE.2012.6227071
   Furtado LB, 2021, IEEE SOFTWARE, V38, P58, DOI 10.1109/MS.2020.3044020
   Gamalielsson Jonas, 2017, P 13 INT S OP COLL, P1
   Gambardella A, 2006, RES POLICY, V35, P875, DOI 10.1016/j.respol.2006.04.004
   German DM, 2012, IEEE SOFTWARE, V29, P58, DOI 10.1109/MS.2012.50
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Ihara A, 2014, INT WORKSH EMPIR ENG, P55, DOI 10.1109/IWESEP.2014.12
   Kapitsaki G., 2019, IEEE T SOFTWARE ENG
   Kapitsaki Georgia M., 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P90, DOI 10.1007/978-3-319-14130-5_7
   Kapitsaki GM, 2020, EUROMICRO CONF PROC, P72, DOI 10.1109/SEAA51224.2020.00022
   Kapitsaki GM, 2017, ASIA PAC SOFWR ENG, P540, DOI 10.1109/APSEC.2017.62
   Kapitsaki GM, 2017, J SYST SOFTWARE, V131, P386, DOI 10.1016/j.jss.2016.06.064
   Kapitsaki GM, 2016, ASIA PAC SOFWR ENG, P1, DOI [10.1109/APSEC.2016.012, 10.1109/APSEC.2016.20]
   Kapitsaki GM, 2015, J SYST SOFTWARE, V102, P72, DOI 10.1016/j.jss.2014.12.050
   Kenett RS, 2014, P INT COMP SOFTW APP, P171, DOI 10.1109/COMPSAC.2014.25
   Koski HA, 2005, REV EC RES COPYRIGHT, V2, P111
   Kyriakou KLD, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110395
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lenarduzzi V, 2019, IFIP ADV INF COMM TE, V556, P104, DOI 10.1007/978-3-030-20883-7_10
   Mathur A, 2012, IEEE ANNU SOFTW ENG, P168, DOI 10.1109/SEW.2012.24
   Meloca R, 2018, IEEE WORK CONF MIN S, P270, DOI 10.1145/3196398.3196427
   Michlmayr M., 2005, P 1 INT C OP SOURC S, P24
   Molnar A.-J., 2020, P 14 ACM IEEE INT S, P1, DOI DOI 10.1145/3382494.3410673
   Moraes JP, 2020, Arxiv, DOI arXiv:2012.05016
   Moraes JP, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09936-2
   Ocariza Frolin  Jr., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P55, DOI 10.1109/ESEM.2013.18
   Papoutsoglou M, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111113
   Paschalides D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1047, DOI 10.1145/2950290.2983939
   Payne C, 2002, INFORM SYST J, V12, P61, DOI 10.1046/j.1365-2575.2002.00118.x
   Ponzanelli L, 2016, EMPIR SOFTW ENG, V21, P2190, DOI 10.1007/s10664-015-9397-1
   Rubei R, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106367
   Ruffin M, 2004, IEEE SOFTWARE, V21, P82, DOI 10.1109/MS.2004.1259227
   Schöttle H, 2019, COMPUTER, V52, P63, DOI 10.1109/MC.2019.2915690
   Sen R, 2011, DECIS SUPPORT SYST, V52, P199, DOI 10.1016/j.dss.2011.07.004
   Sridhar V., 2019, EMERGING ICT POLICIES AND REGULATIONS
   Stanik C, 2018, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSME.2018.00027
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Stewart K., 2010, International Free and Open Source Software Law Review, V2, P191
   Streiner DL., 2015, HLTH MEASUREMENT SCA, DOI DOI 10.1093/MED/9780199685219.001.0001
   Tinsley H.E. A., 2000, Handbook of Applied Multivariate Statistics and Mathematical Modeling, P95, DOI 10.1016/B978-012691360-6/50005-7
   Tuunanen T, 2009, AUTOMAT SOFTW ENG, V16, P455, DOI 10.1007/s10515-009-0054-z
   Vendome C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P268, DOI 10.1145/3180155.3180221
   Vendome C, 2017, PROC INT CONF SOFTW, P118, DOI 10.1109/ICSE.2017.19
   Vendome C, 2017, EMPIR SOFTW ENG, V22, P1537, DOI 10.1007/s10664-016-9438-4
   Vendome C, 2015, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSM.2015.7332449
   Wen SF, 2019, PROCEEDINGS OF THE 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2019), P863, DOI 10.1145/3341161.3343520
   Wu YH, 2017, EMPIR SOFTW ENG, V22, P1194, DOI 10.1007/s10664-016-9487-8
   Zhang H., ARE COMMENTS STACK O
NR 59
TC 2
Z9 2
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2022
VL 152
AR 107034
DI 10.1016/j.infsof.2022.107034
EA AUG 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4E9SM
UT WOS:000848158300002
DA 2024-07-18
ER

PT J
AU Li, YH
   Shen, WJ
   Wu, TC
   Chen, L
   Wu, D
   Zhou, YM
   Xu, BW
AF Li, Yanhui
   Shen, Weijun
   Wu, Tengchao
   Chen, Lin
   Wu, Di
   Zhou, Yuming
   Xu, Baowen
TI How higher order mutant testing performs for deep learning models: A
   fine-grained evaluation of test effectiveness and efficiency improved
   from second-order mutant-classification tuples
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep learning; Mutation testing; Higher order; Strongly subsuming;
   Mutant-classification tuple; Test case selection
ID MUTATION OPERATORS; NEURAL-NETWORKS; TEST SUITE
AB Context: Given the prevalence of Deep Learning (DL) models in daily life, it is crucial to guarantee their reliability by DL testing. Recently, researchers have adapted mutation testing into DL testing to measure the test power of test sets. The bottleneck of DL mutation testing is the expensive costs of generating a large number of mutants.
   Objective: We want to study whether the traditional ideology of "Higher Order" and "Strongly Subsuming" in Higher Order Mutant Testing is still applicable for DL mutation testing, i.e., whether they can be used to optimize DL mutation testing by reducing the number of mutants.
   Method: We propose a new mutation testing framework supporting a fine-grained evaluation of test power, called mutant-classification tuples which consist of mutants and classification categories. Based on mutant-classification tuples, we construct First Order (FOTs) and Higher (Second) Order Tuples (HOTs) by applying mutation operators twice, and search for "Strongly Subsuming" HOTs (SSHOTs) from HOTs.
   Results: The experimental results conducted on four widely used datasets and five DL model structures tell us that (1) we can find a considerable number of SSHOTs (from 720 to 25,840 in five models) which can greatly reduce the original set of FOTs (with the reduction ratio from 28.69% to 91.97% in our studied DL models). (2) The reduced tuples by SSHOTs can perform very well in test case selection, since the selected test set is almost the same effective (i.e., with almost the same mutation score) and much more efficient (i.e., with a smaller test size, which is more than 50% reduced) for most studied DL models.
   Conclusions: Our study shows that "Higher Order" and "Strongly Subsuming" are useful to optimize DL mutation testing, i.e., SSHOTs can be introduced to reduce the number of mutants and test cases.
C1 [Li, Yanhui; Shen, Weijun; Wu, Tengchao; Chen, Lin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Li, Yanhui; Wu, Tengchao; Chen, Lin; Zhou, Yuming; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
   [Shen, Weijun] Nanjing Univ, Software Inst, Nanjing 210023, Peoples R China.
   [Wu, Di] Momenta, Nantiancheng Rd, Suzhou, Peoples R China.
C3 Nanjing University; Nanjing University; Nanjing University
RP Chen, L (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM lchen@nju.edu.cn
RI su, hang/KEH-2976-2024; Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296; Li, Yanhui/0000-0003-2282-7175
FU National Natural Science Foundation of China [62172202, 61872177,
   62172205, 61832009]
FX The work is supported by the National Natural Science Foundation of
   China (Grant No. 62172202, 61872177, 62172205, 61832009).
CR Abdel-Hamid O, 2014, IEEE-ACM T AUDIO SPE, V22, P1533, DOI 10.1109/TASLP.2014.2339736
   AbouTrab MS, 2012, P INT COMP SOFTW APP, P660, DOI 10.1109/COMPSAC.2012.93
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], 2019, DISCOVER CURRENT STA
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Changbin Ji, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P422
   Changbing Ji, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P556, DOI 10.1109/COMPSAC.2009.192
   Dan C.C., 2011, INT JOINT C IJCAI
   Delamaro ME, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/ISSRE.1996.558719
   Delgado-Pérez P, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1728
   Delgado-Pérez P, 2018, INFORM SOFTWARE TECH, V104, P130, DOI 10.1016/j.infsof.2018.07.011
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Deng L, 2017, INFORM SOFTWARE TECH, V81, P154, DOI 10.1016/j.infsof.2016.04.012
   Derezinska A, 2014, IEEE ICST WORKSHOP, P156, DOI 10.1109/ICSTW.2014.24
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Gerasimou S, 2020, PROC INT CONF SOFTW, P702, DOI 10.1145/3377811.3380391
   Girshick R, 2014, PROC CVPR IEEE, P580, DOI 10.1109/CVPR.2014.81
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Harman M., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P397
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Hong S, 2017, INFORM SOFTWARE TECH, V82, P80, DOI 10.1016/j.infsof.2016.10.002
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Jahangirova G, 2020, IEEE INT CONF SOFTW, P74, DOI 10.1109/ICST46399.2020.00018
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Krizhevsky N., 2020, CIFAR10 DATASET
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lecun Y., 2019, The mnist database of handwritten digits
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Lindström B, 2017, INFORM SOFTWARE TECH, V81, P112, DOI 10.1016/j.infsof.2016.04.007
   Lipton R.J., 1971, FAULT DIAGNOSIS COMP
   López J, 2018, INFORM SOFTWARE TECH, V103, P138, DOI 10.1016/j.infsof.2018.06.013
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Marijan D, 2020, AAAI CONF ARTIF INTE, V34, P13576
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Netzer Y., 2011, NIPS WORKSH DEEP LEA
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sahinoglu M., 1990, Approving Software Products. Proceedings of the IFIP WG 5.4 Working Conference (ASP-90), P43
   Shen EJ, 2020, IEEE INT CONF AUTOM, P410, DOI 10.1145/3324884.3416621
   Shen WJ, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106413
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Stallkamp J, 2012, NEURAL NETWORKS, V32, P323, DOI 10.1016/j.neunet.2012.02.016
   Sun YC, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358233
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   Wen M, 2019, PROC INT CONF SOFTW, P866, DOI 10.1109/ICSE.2019.00093
   Wu F, 2017, INFORM SOFTWARE TECH, V81, P97, DOI 10.1016/j.infsof.2016.03.002
   Xie T, 2009, IEEE ICST WORKSHOP, P177, DOI 10.1109/ICSTW.2009.43
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
   Zhang J, 2020, INT J BEHAV MED, V27, P400, DOI [10.1007/s40684-020-00268-6, 10.1007/s12529-020-09863-y]
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
   Zhang P, 2020, IEEE TEXAS SYMP WIRE, DOI [10.1109/wmcs49442.2020.9172407, 10.1111/puar.13184]
   Zhang ZY, 2011, EAST 2011: EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES, P10
NR 64
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106954
DI 10.1016/j.infsof.2022.106954
EA JUN 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100004
DA 2024-07-18
ER

PT J
AU Kotusev, S
   Kurnia, S
   Dilnutt, R
AF Kotusev, Svyatoslav
   Kurnia, Sherah
   Dilnutt, Rod
TI The practical roles of enterprise architecture artifacts: A
   classification and relationship
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Enterprise architecture (EA); Artifacts; Roles; Usage; CSVLOD taxonomy;
   Grounded theory
ID MANAGEMENT; ALIGNMENT; BUSINESS; FRAMEWORK; BENEFITS; MODELS
AB Context: Enterprise architecture (EA) is a description of an enterprise from an integrated business and IT perspective. EA is typically defined as a comprehensive blueprint of an organization covering its business, data, applications and technology domains and consisting of diverse EA artifacts. EA has numerous potential stake-holders and usage scenarios in organizations. However, the existing EA literature does not offer any consistent theories explaining the practical roles of individual EA artifacts and fails to explain how exactly different types of EA artifacts are used in practice.Objective: This study intends to explore the roles of different EA artifacts in organizations and develop a generic descriptive theory explaining these roles. The theory purports to cover various properties of EA artifacts as well as the relationships between them. Method: The research method of this study follows two consecutive phases: theory construction and theory validation. First, theory construction is based on the qualitative in-depth analysis of five case organizations with established EA practices. Next, theory validation includes confirmatory interviews with ten EA experts. Results: This study develops a descriptive theory explaining the roles of different EA artifacts in an EA practice. The resulting theory defines six general types of EA artifacts (Considerations, Standards, Visions, Landscapes, Outlines and Designs, CSVLOD) and explains their type-specific practical roles, including their informational contents, typical usage, ensuing organizational benefits and interrelationships with each other.Conclusions: This study presents the first systematic theory describing the usage of EA artifacts in organizations. Our theory facilitates better theoretical understanding of the concept of EA and also provides evidence-based solutions to the commonly reported practical problems with EA. This study suggests that the EA research community should focus on studying individual EA artifacts instead of studying EA in general and calls for further research on EA artifacts and their usage as part of EA practices.
C1 [Kotusev, Svyatoslav] HSE Univ, Moscow, Russia.
   [Kurnia, Sherah; Dilnutt, Rod] Univ Melbourne, Melbourne, Vic, Australia.
C3 HSE University (National Research University Higher School of
   Economics); University of Melbourne
RP Kotusev, S (corresponding author), HSE Univ, Moscow, Russia.
EM kotusev@kotusev.com
OI Dilnutt, Rod/0000-0003-4617-3743
CR Abrahamsen R., 2013, Conflict security in Africa, P1
   Ahlemann F., 2012, Strategic enterprise architecture management: Challenges, best practices, and future developments, P265
   Ahlemann F, 2021, INFORM MANAGE-AMSTER, V58, DOI 10.1016/j.im.2020.103266
   Alaeddini M, 2017, INFORM TECHNOL MANAG, V18, P55, DOI 10.1007/s10799-016-0256-6
   Alaeddini M, 2013, INFORM SYST FRONT, V15, P67, DOI 10.1007/s10796-011-9332-y
   [Anonymous], 2014, FORBES
   [Anonymous], P 20 AM C INF SYST
   [Anonymous], 1999, FED ENT ARCH FRAM VE
   [Anonymous], 2006, J ENTERPRISE ARCHITE
   [Anonymous], 2013, P 21 EUROPEAN C INFO
   [Anonymous], 2011, J ENTERPRISE ARCHITE
   [Anonymous], 2010, SIM GUIDE ENTERPRISE
   [Anonymous], 2006, P 39 HAW INT C SYST
   [Anonymous], 2013, P 11 INT C WIRTSCHAF
   [Anonymous], 2009, ORACLE ENTERPRISE AR
   [Anonymous], 2009, J ENTERPRISE ARCHITE
   [Anonymous], 2010, SIM GUIDE ENTERPRISE
   [Anonymous], 2010, MODELLING ENTERPRISE
   [Anonymous], 2001, PRACT GUID FED ENT A
   [Anonymous], 2007, HDB ENTERPRISE SYSTE
   [Anonymous], 2012, STRATEGIC ENTERPRISE
   [Anonymous], 2013, PSYCHOL SEX, DOI DOI 10.1080/19419899.2013.764921
   [Anonymous], 2010, DR DOBBS J
   [Anonymous], 2010, WHY DOESNT FEDERAL E
   [Anonymous], 2010, P 16 AM C INF SYST A
   [Anonymous], 2008, QUALITY SOFTWARE ARC
   [Anonymous], 2007, P 13 AMERICAS C INFO
   Banavathu, 2016, P IEEE NAT C COMM NC, P1
   Basten D., 2012, STRATEGIC ENTERPRISE
   Bernard S.A., 2020, An Introduction to Holistic Enterprise Architecture, V4th
   Bischoff S., 2018, ARCHITECTURAL COORDI
   Bischoff S, 2014, CONF BUS INFORM, P133, DOI 10.1109/CBI.2014.56
   Blumenthal A., 2007, GOVT EXECUTIVE, V39, P63
   Boh WF, 2006, J MANAGE INFORM SYST, V23, P163, DOI 10.2753/MIS0742-1222230307
   Bondel G, 2018, IEEE INT ENTERP, P125, DOI 10.1109/EDOCW.2018.00027
   Bradley RV, 2012, INFORM SYST J, V22, P97, DOI [10.1111/j.1365-2575.2011.00379.x, 10.1111/J.1365-2575.2011.00379.x]
   Broadbent M, 1997, SLOAN MANAGE REV, V38, P77
   Broadbent Marianne., 2005, The new CIO leader : Setting the agenda and delivering results
   Buckl Sabine., 2009, State of the Art in Enterprise Architecture Management, P1
   Burton B., 2009, 13 WORST ENTERPRISE
   C4ISR, 1997, C4ISR ARCH FRAM VERS
   Carr D., 2018, Enterp Arch Prof J, V6, P1
   Chau DCK, 2020, MIS QUART, V44, P1679, DOI 10.25300/MISQ/2020/12165
   Chuang C.-.H., 2010, P 43 HAW INT C SYST, p1?10
   Connor D.A., 1988, COMPUTER SYSTEMS DEV
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Dang D.D., 2016, P 2016 18 EUROPEAN C, P1, DOI DOI 10.1109/EPE.2016.7695604
   DAVENPORT TH, 1989, HARVARD BUS REV, V67, P130
   DoDAF, 2007, DOD ARCH FRAM VERS 1, V2
   DoDAF, 2007, DOD ARCH FRAM VERS 1
   Downes G., 2008, J ENTERPRISE ARCHIT, V4, P41
   EACOE, 2015, ENT FRAM
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fallmyr T, 2014, P ANN HICSS, P3788, DOI 10.1109/HICSS.2014.471
   Fernandez W., 2011, J INFORM TECHNOLOGY, V13, P4, DOI DOI 10.1080/15228053.2011.10856199
   Fernandez W.D., 2004, INFORM SYSTEMS FDN W, V1, P43
   Foorthuis R. M., 2007, P 2 TRENDS ENT ARCH, P51
   Frank U., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P1258, DOI 10.1109/HICSS.2002.993989
   GAO, 2013, DOD BUS SYST MOD FUR
   Gerow JE, 2014, MIS QUART, V38, P1159
   Gong YW, 2019, INT J INFORM MANAGE, V46, P1, DOI 10.1016/j.ijinfomgt.2018.11.006
   Greefhorst D, 2011, ENTERP ENG SER, P1, DOI 10.1007/978-3-642-20279-7
   Gregor S, 2006, MIS QUART, V30, P611
   Haki K, 2021, J ASSOC INF SYST, V22, P1334, DOI 10.17705/1jais.00696
   Haki M.K., 2012, P 20 EUR C INF SYST, p1?12
   Jacobson I., 2007, ENTERPRISE ARCHITECT
   Janssen M, 2012, SOC SCI COMPUT REV, V30, P24, DOI 10.1177/0894439310392187
   Johnson P, 2007, INFORM SYST FRONT, V9, P163, DOI 10.1007/s10796-007-9030-y
   Jonkers H, 2004, INT J COOP INF SYST, V13, P257, DOI 10.1142/S0218843004000985
   Kaisler S.H., 2005, HICSS'05, p224b, DOI DOI 10.1109/HICSS.2005.241
   Keller W., 2015, BUSINESS ARCHITECTUR
   Kemp Peter, 2009, IT Now, V51, P20, DOI 10.1093/itnow/bwp032
   Khosroshahi PA, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P4603
   KIM YG, 1994, INFORM MANAGE, V26, P1, DOI 10.1016/0378-7206(94)90002-7
   King B.W. R., 1978, MIS Quarterly, V2, P27, DOI [DOI 10.2307/249104, 10.2307/249104]
   Koenig I, 2019, DIAGRAMMING ARCHITEC
   Korhonen JJ, 2016, CONF BUS INFORM, P272, DOI 10.1109/CBI.2016.38
   Kotusev de S., 2015, P 23 EUR C INF SYST, P1
   Kotusev S., J INF TECHNOL-UK, V36, P275
   Kotusev S., 2016, Journal of Enterprise Architecture, V12, P29
   Kotusev S, 2021, COMP TOP 4 ENTERPRIS
   Kotusev S., 2018, TOGAF IS NOT EA FRAM
   Kotusev S, 2023, KNOWL MAN RES PRACT, V21, P594, DOI 10.1080/14778238.2021.1999183
   Kotusev S, 2020, IT PROF, V22, P47, DOI 10.1109/MITP.2019.2912136
   Kotusev S, 2018, COMMUN ASSOC INF SYS, V43, P321, DOI 10.17705/1CAIS.04320
   Kotusev S, 2019, J INF TECHNOL-UK, V34, P102, DOI 10.1177/0268396218816273
   Kotusev S, 2018, PAC ASIA J ASSOC INF, V10, P1, DOI 10.17705/1PAIS.10401
   Kotusev S, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017300029
   Kotusev S, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017300017
   Kurnia S., 2020, P 53 HAW INT C SYST, P5583
   Kurnia S, 2021, COMMUN ASSOC INF SYS, V49, P668, DOI 10.17705/1CAIS.04936
   Lagerstrom R., 2011, 44th Hawaii International Conference on System Sciences, P1, DOI [10.1109/hicss.2011.187, DOI 10.1109/HICSS.2011.187]
   Lagerström R, 2010, J SYST SOFTWARE, V83, P1387, DOI 10.1016/j.jss.2010.02.019
   Lange M, 2016, EUR J INFORM SYST, V25, P411, DOI 10.1057/ejis.2014.39
   Lankhorst M., 2017, Enterprise Architecture at Work
   Levy M., 2014, P 20 AM C INF SYST A, P1
   Löhe J, 2014, INF SYST E-BUS MANAG, V12, P101, DOI 10.1007/s10257-012-0211-y
   MINTZBERG H, 1979, ADMIN SCI QUART, V24, P582, DOI 10.2307/2392364
   MODAF, 2005, MOD ARCH FRAM TECHN
   Molnar WA, 2013, LECT NOTES BUS INF P, V151, P76
   Murer S, 2011, MANAGED EVOLUTION: A STRATEGY FOR VERY LARGE INFORMATION SYSTEMS, P1, DOI 10.1007/978-3-642-01633-2
   NAF, 2018, NATO ARCH FRAM VERS
   Närman P, 2013, J STRATEGIC INF SYST, V22, P70, DOI 10.1016/j.jsis.2012.10.002
   Närman P, 2012, J SYST SOFTWARE, V85, P1953, DOI 10.1016/j.jss.2012.02.035
   Närman P, 2011, ENTERP INF SYST-UK, V5, P37, DOI 10.1080/17517575.2010.507878
   Niemi E, 2020, BUS INFORM SYST ENG+, V62, P585, DOI 10.1007/s12599-019-00605-3
   Niemi E, 2017, ENTERP INF SYST-UK, V11, P313, DOI 10.1080/17517575.2015.1048831
   Niemi EI, 2016, DATA BASE ADV INF SY, V47, P55, DOI 10.1145/2980783.2980787
   PRISM, 1986, PRISM DISP INT APPR
   Radeke F., 2011, P 10 INT C WIRTSCH W, P497
   Raderius J., 2008, P 3 TRENDS ENTERPRIS, P351
   Rahimi F, 2017, COMMUN ASSOC INF SYS, V40
   RICHARDSON GL, 1990, MIS QUART, V14, P385, DOI 10.2307/249787
   Roeleven S., 2010, Why Two Thirds of Enterprise Architecture Projects Fail
   Rohloff M., 2005, P 13 EUROPEAN C INFO, P1659
   Ross, 2004, ENTERPRISE ARCHITECT
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Schekkerman J., 2006, Extended Enterprise Architecture Maturity Model Support Guide
   Schekkerman J., 2005, Trends in Enterprise Architecture 2005: How are Organizations Progressing
   Schmidt C, 2011, EUR J INFORM SYST, V20, P168, DOI 10.1057/ejis.2010.68
   Scott J., 2009, ARCHITECTURE GOVERNA, V5, P1
   Seddon PB, 2012, EUR J INFORM SYST, V21, P6, DOI 10.1057/ejis.2011.9
   Segars AH, 1996, LONG RANGE PLANN, V29, P381, DOI 10.1016/0024-6301(96)00024-6
   Seppanen Ville, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P114, DOI 10.1109/CEC.2009.70
   Shanks G, 2018, J STRATEGIC INF SYST, V27, P139, DOI 10.1016/j.jsis.2018.03.001
   Simon D, 2014, INF SYST E-BUS MANAG, V12, P5, DOI 10.1007/s10257-013-0213-4
   Simonsson M., 2005, P 7 INT C ENT INF SY, P130
   Smith HA, 2012, MIS Q EXEC, V11, P75
   Smolander K, 2008, EUR J INFORM SYST, V17, P575, DOI 10.1057/ejis.2008.48
   Sousa Sergio, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P81, DOI 10.1109/EDOC.2013.18
   SOWA JF, 1992, IBM SYST J, V31, P590, DOI 10.1147/sj.313.0590
   Spewak S.H., 1992, ENTERPRISE ARCHITECT
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   STRUTZEL E, 1968, NURS RES, V17, P364
   Suetake H., 2007, J ENTERPRISE ARCHIT, V3, P19
   Swindell A., 2014, ARCHITECTURE GOVERNA, V10, P3
   TAFIM, 1996, DOD STAND BAS ARCH P, V4
   Tamm T, 2015, MIS Q EXEC, V14, P181
   Tamm T, 2011, COMMUN ASSOC INF SYS, V28, P141
   TEAF, 2000, TREAS ENT ARCH FRAM
   Thomas R., 2000, P 5 INT COMMAND CONT, P1
   TOGAF, 2018, TOGAF VERS 92
   Valorinta M, 2011, J INF TECHNOL-UK, V26, P46, DOI 10.1057/jit.2010.28
   van der Raadt B, 2010, J SYST SOFTWARE, V83, P1954, DOI 10.1016/j.jss.2010.05.076
   Vanauer M, 2015, P ANN HICSS, P908, DOI 10.1109/HICSS.2015.113
   Wardle C., 1984, P 5 INT C INF SYST A, P205
   Weill P., 1998, Leveraging the New Infrastructure. How Market Leaders Capitalize on Information Technology
   Wierda G., 2017, MASTERING ARCHIMATE
   Winter R., 2006, P IEEE INT ENTERPRIS, DOI [DOI 10.1109/EDOCW.2006.33, 10.1109/EDOCW.2006.33]
   Wout J., 2010, The Integrated Architecture Framework Explained
   Yin R.K., 2017, Case Study Research and Applications: Design and Methods
   ZACHMAN JA, 1987, IBM SYST J, V26, P276, DOI 10.1147/sj.263.0276
NR 153
TC 6
Z9 6
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106897
DI 10.1016/j.infsof.2022.106897
EA APR 2022
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 1D0NX
UT WOS:000793508100001
DA 2024-07-18
ER

PT J
AU Favero, EMD
   Casanova, D
   Pimentel, AR
AF De Bortoli Favero, Eliane Maria
   Casanova, Dalcimar
   Pimentel, Andrey Ricardo
TI SE<SUP>3</SUP>M: A model for software effort estimation using
   pre-trained embedding models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Pre-trained model; Context-less embedding;
   Contextualized embedding; Domain-specific model; BERT
ID FUNCTIONAL SIZE; APPROXIMATION
AB Context: Software effort estimation from requirements texts, presents many challenges, mainly in getting viable features to infer effort. The most recent Natural Language Processing (NLP) initiatives for this purpose apply context-less embedding models, which are often not sufficient to adequately discriminate each analyzed sentence. Contextualized pre-trained embedding models have emerged quite recently and have been shown to be far more effective than context-less models in representing textual features.
   Objective: This paper proposes evaluating the effectiveness of pre-trained embedding models, to explore a more effective technique for representing textual requirements, which are used to infer effort estimates by analogy.
   Method: Generic pre-trained models went through a fine-tuning process for both approaches - context-less and contextualized. The generated models were used as input in the applied deep learning architecture, with linear output. The results were very promising, realizing that contextualized pre-trained embedding models can be used to estimate software effort based only on requirements texts.
   Results: We highlight the results obtained to apply the contextualized pre-trained model BERT with fine-tuning, applied in a single repository containing different projects, whose Mean Absolute Error (MAE) value is 4.25 and the standard deviation is only 0.17. This represents a result very positive when compared to similar works.
   Conclusion: The main advantages of the proposed estimation method are reliability, the possibility of generalization, speed, and low computational cost. Such advantages are provided by the fine-tuning process, enabling to infer effort estimation for new or existing requirements.
C1 [De Bortoli Favero, Eliane Maria; Casanova, Dalcimar] Via Conhecimento S-N,Km 01, BR-85503390 Pato Branco, Parana, Brazil.
   [Pimentel, Andrey Ricardo] Rua Evaristo FF da Costa 418, Curitiba, Parana, Brazil.
RP Favero, EMD (corresponding author), Via Conhecimento S-N,Km 01, BR-85503390 Pato Branco, Parana, Brazil.
EM elianedb@utfpr.edu.br; dalcimar@utfpr.edu.br; andrey@inf.ufpr.br
RI Casanova, Dalcimar/J-1588-2012; De Bortoli Fávero, Eliane
   Maria/JGM-7580-2023
OI Casanova, Dalcimar/0000-0002-1905-4602; 
CR Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   Alammar J., 2018, ILLUSTRATED BERT ELM
   [Anonymous], 2016, P 20 SIGNLL C COMP N, DOI 10.18653/v1/K16-1006
   Ayyildiz TE, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P108, DOI 10.1109/SEAA.2016.13
   Azzeh M, 2011, LECT NOTES COMPUT SC, V6882, P315, DOI 10.1007/978-3-642-23863-5_32
   Bardsiri VK, 2013, ENG APPL ARTIF INTEL, V26, P2624, DOI 10.1016/j.engappai.2013.08.005
   Beltagy Iz, 2019, P 2019 C EMP METH NA, P3606
   BENGIO Y, 1994, IEEE T NEURAL NETWOR, V5, P157, DOI 10.1109/72.279181
   Bengio Y, 2014, Arxiv, DOI [arXiv:1206.5538, 10.48550/arXiv.1206.5538, DOI 10.48550/ARXIV.1206.5538]
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Choi S, 2012, EXPERT SYST APPL, V39, P406, DOI 10.1016/j.eswa.2011.07.029
   Clark K, 2018, Arxiv, DOI arXiv:1809.08370
   Cohn M., 2005, RC MARTIN SERIES
   Dai AM, 2015, ADV NEUR IN, V28
   Devlin J, 2019, P 2019 C N AM CHAPT, P4171
   Fellbaum C., 2012, The encyclopedia of applied linguistics, DOI 10.1002/9781405198431.wbeal1285/abstract
   Graves A, 2012, STUD COMPUT INTELL, V385, P5
   Haj-Yahia Z, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P371
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hochreiter S., 1991, Technische Universitat Munchen
   Howard J, 2018, Arxiv, DOI [arXiv:1801.06146, DOI 10.48550/ARXIV.1801.06146, 10.48550/arXiv.1801.06146]
   Hussain I, 2013, DATA KNOWL ENG, V85, P2, DOI 10.1016/j.datak.2012.06.005
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2016, J SYST SOFTWARE, V117, P595, DOI 10.1016/j.jss.2016.04.058
   Ionescu VS, 2017, INT C INTELL COMP CO, P197, DOI 10.1109/ICCP.2017.8117004
   Kazemifard M, 2011, APPL SOFT COMPUT, V11, P2260, DOI 10.1016/j.asoc.2010.08.006
   Kingma D. P., 2014, arXiv
   Kocaguneli E, 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P321, DOI DOI 10.1145/1858996.1859061
   Lan ZZ, 2020, Arxiv, DOI arXiv:1909.11942
   Lee J, 2020, BIOINFORMATICS, V36, P1234, DOI 10.1093/bioinformatics/btz682
   Lev G, 2015, LECT NOTES COMPUT SC, V9103, P35, DOI 10.1007/978-3-319-19581-0_3
   Manikavelan D., 2014, INT C INF COMM EMB S
   McCann B., 2017, NIPS, V30, P6297
   Menzies Tim, 2014, Sharing data and models in software engineering
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Moharreri K, 2016, P INT COMP SOFTW APP, P135, DOI 10.1109/COMPSAC.2016.85
   Ochodek M, 2016, INFORM SOFTWARE TECH, V80, P73, DOI 10.1016/j.infsof.2016.08.007
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Porru S., 2016, PROC 12 INT C PREDIC, P1
   Pressman R., 2016, Engenharia de Software - 8a Edicao
   Radford A, Improving language understanding by generative pre-training
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Raschka S., 2015, Python Machine Learning: Unlock Deeper Insights Into Machine Learning with this Vital Guide to Cutting-edge Predictive Analytics
   Sak H, 2014, INTERSPEECH, P338
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Scott T C., 2014, MacTutor History of Mathematics
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shivhare J, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590767
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vaswani A, 2017, ADV NEUR IN, V30
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Zhang C, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P112, DOI 10.1145/2993717.2993733
   Zhu YK, 2015, IEEE I CONF COMP VIS, P19, DOI 10.1109/ICCV.2015.11
   Zwillinger D., 1999, CRC Standard Probability and Statistics Tables and Formulae
NR 60
TC 2
Z9 2
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106886
DI 10.1016/j.infsof.2022.106886
EA MAR 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700005
DA 2024-07-18
ER

PT J
AU Lapeña, R
   Pérez, F
   Pastor, O
   Cetina, C
AF Lapena, Raul
   Perez, Francisca
   Pastor, Oscar
   Cetina, Carlos
TI Leveraging execution traces to enhance traceability links recovery in
   BPMN models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Traceability links recovery; BPMN models; Model-driven engineering
ID NATURAL-LANGUAGE SPECIFICATIONS; FEATURE LOCATION; REQUIREMENTS; CODE;
   TESTS
AB Context: Traceability Links Recovery has been a topic of interest for many years, resulting in techniques that perform traceability based on the linguistic clues of the software artifacts under study. However, BPMN models tend to present an overall lack of linguistic clues when compared to code-based artifacts or code generation models. Hence, TLR becomes a harder task when performed among requirements and BPMN models.Objective: This paper proposes a novel approach, called METRA, that leverages the execution traces of BPMN to expand the BPMN models. The expansion of the BPMN models enhances their linguistic clues, bridging the language between BPMN models and other software artifacts, and improving the TLR process between requirements and BPMN models.Methods: The proposed approach is evaluated through a real-world industrial case study, comparing its outcomes against two state-of-the-art baselines, TLR and LORE. The paper also evaluates the combination of METRA with LORE against the rest of the approaches, including standalone METRA. The evaluation process generates a report of measurements (precision, recall, f-measure, and MCC), over which a statistical analysis is conducted.Results: Results show that approaches based on METRA maintain the excellent precision results obtained by baseline approaches (74.2% for METRA, 78.8% for METRA+LORE), whilst also improving the recall results from the unacceptable values obtained by the baselines to good values (72.4% for METRA, 73.9% for METRA+LORE). Moreover, according to the statistical analysis, the differences in the results obtained by the evaluated approaches are statistically significant. Conclusions: This paper opens a novel field of work in TLR by analyzing the improvement of the TLR process through the inclusion of linguistic clues present in execution traces, and discusses ideas for further research that can delve into this promising direction explored by our work.
C1 [Lapena, Raul; Perez, Francisca; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
   [Pastor, Oscar] Univ Politecn Valencia, PROS Res Ctr, Cami Vera S-N, Valencia 46022, Spain.
C3 Universidad San Jorge; Universitat Politecnica de Valencia
RP Lapeña, R (corresponding author), Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
EM rlapena@usj.es; mfperez@usj.es; opastor@pros.upv.es; ccetina@usj.es
RI Pérez, Francisca/KPH-0503-2024; Cetina, Carlos/P-8682-2017; Pastor
   Lopez, Oscar/S-4216-2016
OI Lapena, Raul/0000-0003-2660-3080; Cetina, Carlos/0000-0001-8542-5515;
   Perez, Francisca/0000-0001-6371-915X; Pastor Lopez,
   Oscar/0000-0002-1320-8471
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R+D+i Plan; ERDF funds [RTI2018-096411-B-I0]; Gobierno de
   Aragon (Spain);  [RTI2018-096411-B-I00]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R+D+i Plan and
   ERDF funds under the project ALPS (RTI2018-096411-B-I00) and in part by
   the Gobierno de Aragon (Spain) (Research Group S05_20D) .
CR [Anonymous], 2017, EFFICIENT JAVA MATRI
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Apache, 2017, OPENNLP TOOLK PROC N
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arora C, 2015, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2015.7320403
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Capobianco G, 2009, INT C PROGRAM COMPRE, P148, DOI 10.1109/ICPC.2009.5090038
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Conover WJ, 1998, PRACTICAL NONPARAMET, V350
   De Lucia A, 2004, PROC IEEE INT CONF S, P306, DOI 10.1109/ICSM.2004.1357816
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Eaddy M., 2007, 1 INT WORKSHOP ASSES, P2, DOI [10.1109/ACOM.2007.4, DOI 10.1109/ACOM.2007.4]
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Eder S, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P27, DOI 10.1109/RET.2015.13
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Ghazarian A., 2010, IEEE RELIABILITY SOC
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   Hulth A, 2003, PROCEEDINGS OF THE 2003 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P216
   Klinkmuller Christopher, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P211, DOI 10.1007/978-3-642-40176-3_17
   Krüger J, 2019, J SYST SOFTWARE, V152, P239, DOI 10.1016/j.jss.2019.01.057
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lapeña R, 2022, REQUIR ENG, V27, P135, DOI 10.1007/s00766-021-00365-1
   Lapeña R, 2019, LECT NOTES COMPUT SC, V11483, P261, DOI 10.1007/978-3-030-21290-2_17
   Lapeña R, 2018, LECT NOTES COMPUT SC, V10816, P359, DOI 10.1007/978-3-319-91563-0_22
   Leopold H, 2014, IEEE T SOFTWARE ENG, V40, P818, DOI 10.1109/TSE.2014.2327044
   Loniewski G, 2010, LECT NOTES COMPUT SC, V6395, P213, DOI 10.1007/978-3-642-16129-2_16
   Lopez Hugo A., 2021, Intelligent Information Systems. CAiSE Forum 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 424), P109, DOI 10.1007/978-3-030-79108-7_13
   López HA, 2019, IEEE INT ENTERP, P96, DOI 10.1109/EDOCW.2019.00027
   Lopez HugoA., 2018, P DISSERTATION AWARD, V2196, P66
   Macaulay L.A, 2012, REQUIR ENG
   Marcén AC, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110519
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Martinez J, 2018, INFORM SOFTWARE TECH, V104, P46, DOI 10.1016/j.infsof.2018.07.005
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Mendling J., 2019, CEUR WORKSHOP PROC, V2376
   Meziane F, 2008, REQUIR ENG, V13, P1, DOI [10.1007/s00766-007-0054-0, 10.1007/S00766-007-0054-0]
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Parizi RM, 2014, IEEE T RELIAB, V63, P913, DOI 10.1109/TR.2014.2338254
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Quishpi L., 2020, INT C PROC MIN, P149
   Quishpi L, 2020, LECT NOTES COMPUT SC, V12168, P184, DOI 10.1007/978-3-030-58666-9_11
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Salton G., 1971, SMART RETRIEVAL SYST
   Salton G, 1986, Introduction to Modern Information Retrieval
   Sànchez-Ferreres J, 2021, SOFTW SYST MODEL, V20, P2131, DOI 10.1007/s10270-021-00886-x
   Sànchez-Ferreres J, 2018, DATA KNOWL ENG, V118, P25, DOI 10.1016/j.datak.2018.09.001
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   Sultanov H., 2010, 18 IEEE INT REQ ENG
   Vale T., 2018, EMPIR SOFTW ENG, P1
   van der Aa H, 2018, INFORM SYST, V78, P83, DOI 10.1016/j.is.2018.01.007
   van der Aa H, 2017, INFORM SYST, V64, P447, DOI 10.1016/j.is.2016.07.010
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wisniewski P, 2017, ITM WEB CONF, V15, DOI 10.1051/itmconf/20171501002
   Wohlin C., 2012, Experimentation in Software Engineering
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zhang Y, 2008, IET SOFTW, V2, P185, DOI 10.1049/iet-sen:20070062
   Zisman A, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P448
NR 67
TC 0
Z9 0
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106873
DI 10.1016/j.infsof.2022.106873
EA FEB 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700008
DA 2024-07-18
ER

PT J
AU Wang, J
   Zhang, XF
   Chen, L
   Xie, XY
AF Wang, Jun
   Zhang, Xiaofang
   Chen, Lin
   Xie, Xiaoyuan
TI Personalizing label prediction for GitHub issues
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep learning; Issue labeling; Data analysis; Language model
ID TAG RECOMMENDATION
AB Context: Automated label prediction tools can help developers manage and categorize issues on GitHub. However, different open-source projects use various forms of labels with the same meaning. Previous label prediction methods mainly solve the problem of the synonymous labels by manual preprocessing rules, but these preprocessing rules can only identify synonyms with the same prefix or suffix.Objective: These factors inspire us to propose a method to identify these synonymous labels automatically and recommend personalized labels for different open-source projects.Method: In this paper, we propose a Personalizing Label Prediction framework for Issues named PLPI. PLPI identifies labels with similar meanings by representing labels as semantic vectors and applying clustering methods. PLPI can predict personalized labels from the existing labels in the open-source project.Result: We conduct a comprehensive study to compare seven commonly adopted labeling models with our approach. The experimental results demonstrate the advantages of our approach. Finally, we show some representative examples and discuss the visualization results of synonyms clustering by dimension reduction. Conclusion: The experimental results show that our method PLPI can improve label prediction performance and provide personalized label recommendation results for different open-source projects.
C1 [Wang, Jun; Zhang, Xiaofang] Soochow Univ, Sch Comp Sci & Technol, Suzhou, Peoples R China.
   [Chen, Lin] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Xie, Xiaoyuan] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
C3 Soochow University - China; Nanjing University; Wuhan University
RP Zhang, XF (corresponding author), Soochow Univ, Sch Comp Sci & Technol, Suzhou, Peoples R China.
EM 20194227028@stu.suda.edu.cn; xfzhang@suda.edu.cn; lchen@nju.edu.cn;
   xxie@whu.edu.cn
OI Wang, Jun/0009-0001-5491-0443; Zhang, Xiaofang/0000-0002-8667-0456
FU National Natural Science Foundation of China [61772263, 61872177];
   Collaborative Innovation Center of Novel Software Technology and
   Industrialization; Priority Academic Program Development of Jiangsu
   Higher Education Institutions
FX Acknowledgments This work is partially supported by the National Natural
   Science Foundation of China (61772263, 61872177) , Collaborative
   Innovation Center of Novel Software Technology and Industrialization,
   and the Priority Academic Program Development of Jiangsu Higher
   Education Institutions.
CR Al-Kofahi J., 2010, Proc. Int'l Conf. Software Maintenance (ICSM 10), P1
   Alqahtani SS, 2017, INT SYMP EMP SOFTWAR, P169, DOI 10.1109/ESEM.2017.25
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Devlin J., 2018, BERT PRE TRAINING DE
   Diab Mona., 2009, Proceedings of the Workshop on Multiword Expressions: Identification, Interpretation, Disambiguation and Applications, P17
   Gao NN, 2016, FRONT COMPUT SCI-CHI, V10, P845, DOI 10.1007/s11704-016-5421-x
   Guzman E., 2014, Association for Computing Machinery, P352
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Kallis R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2020.102598
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Li C, 2019, LECT NOTES ARTIF INT, V11776, P11, DOI [10.1007/978-3-030-29563-9_2, 10.1109/civemsa45640.2019.9071616]
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Mikolov T., 2013, P 2013 C N AM CHAPTE, P746
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Read J, 2011, MACH LEARN, V85, P333, DOI 10.1007/s10994-011-5256-5
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Schroff F, 2015, PROC CVPR IEEE, P815, DOI 10.1109/CVPR.2015.7298682
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Shani G, 2011, RECOMMENDER SYSTEMS HANDBOOK, P257, DOI 10.1007/978-0-387-85820-3_8
   Shutova Ekaterina., 2010, P 23 INT C COMP LING, P1002
   Sun L, 2019, FRONT COMPUT SCI-CHI, V13, P1243, DOI 10.1007/s11704-018-7452-y
   Sun YP, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9294-7
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
   Tsoumakas G., 2007, INT J DATA WAREHOUS, V3, P1, DOI DOI 10.4018/JDWM.2007070101
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wu Yonghui., 2016, arXiv preprint arXiv:1609.08144, P1, DOI DOI 10.1109/ICASI.2016.7539822
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xie XY, 2022, IEEE T RELIAB, V71, P250, DOI 10.1109/TR.2021.3074512
   Yang D, 2014, WWW'14 COMPANION: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P407, DOI 10.1145/2567948.2577285
   Zhang ML, 2018, FRONT COMPUT SCI-CHI, V12, P191, DOI 10.1007/s11704-017-7031-7
   Zhang ML, 2014, IEEE T KNOWL DATA EN, V26, P1819, DOI 10.1109/TKDE.2013.39
   Zhou PY, 2019, INFORM SOFTWARE TECH, V109, P1, DOI 10.1016/j.infsof.2019.01.002
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
NR 44
TC 6
Z9 7
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106845
DI 10.1016/j.infsof.2022.106845
EA JAN 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J9PR
UT WOS:000780430800011
DA 2024-07-18
ER

PT J
AU Wlodarski, R
   Poniszewska-Maranda, A
   Falleri, JR
AF Wlodarski, Rafal
   Poniszewska-Maranda, Aneta
   Falleri, Jean-Remy
TI Impact of software development processes on the outcomes of student
   computing projects: A tale of two universities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Comparative study; Capstone project; Student
   projects; Education; Computer science education
ID AGILE METHODS; QUALITY
AB Context: Project-based courses are more and more commonly used as an opportunity to teach students structured methods of developing software. Two well-known approaches in this area - traditional and Agile - have been successfully applied to drive academic projects. However too often the default is still to have no organizational process at all. While a large variety of software development life-cycle models exists, little guidance is available on which one to choose to fit the context of working with students. Objective: This paper assesses the impact of iterative, sequential and "hands-off'' development approaches on the success of student computing projects. A structured, metric-based assessment scheme was applied to investigate team productivity, teamwork and the quality of the final product. Method: Empirical evidence was collected during a controlled experiment carried out at two engineering schools in Europe. More than 100 students at Bachelor's and Master's levels participated in the research, with varied software development and teamwork skill sets. Results: Similar patterns were observed among both sets of subjects, with iterative teams demonstrating the highest productivity and superior team cohesion but a decline in the quality of the final product. Sequential development led to a considerable improvement in the external quality characteristics of the software produced, owing to the method's stress on design activities. Conclusion: The findings of this study will be of use to educators interested in applying software development processes to student groupwork. A set of guidelines is provided for applying a structured way of working in a project-based course.
C1 [Wlodarski, Rafal; Poniszewska-Maranda, Aneta] Lodz Univ Technol, Inst Informat Technol, Lodz, Poland.
   [Falleri, Jean-Remy] Univ Bordeaux, CNRS, LaBRI, UMR,ENSEIRB,MATMECA Bordeaux INP Talence, Bordeaux, France.
   [Falleri, Jean-Remy] Inst Univ France, Paris, France.
C3 Lodz University of Technology; Universite de Bordeaux; Centre National
   de la Recherche Scientifique (CNRS); Institut Universitaire de France
RP Poniszewska-Maranda, A (corresponding author), Lodz Univ Technol, Inst Informat Technol, Lodz, Poland.
EM aneta.poniszewska-maranda@p.lodz.pl
RI Wlodarski, Rafal/HTM-2799-2023; Poniszewska-Maranda, Aneta/H-1667-2017
OI Poniszewska-Maranda, Aneta/0000-0001-7596-0813; Wlodarski,
   Rafal/0000-0002-0520-9597
CR [Anonymous], 2006, P 28 INT C SOFTW ENG, DOI DOI 10.1145/1134285.1134383
   [Anonymous], 2007, PROJ MANAG J
   [Anonymous], 2003, LEARNING TEACH HIGHE
   [Anonymous], 2011, ISO/IEC 25010
   [Anonymous], 2012, EXPT SOFTWARE ENG
   [Anonymous], 2012, BLACKSUN SOFTWARE MO
   [Anonymous], 2016, ART AGILE PRACTICE C
   Baird A., 2012, J INFORM SYST ED, V23
   Benediktsson O, 2006, IEE P-SOFTW, V153, P87, DOI 10.1049/ip-sen:20050061
   Bijlsma D, 2012, SOFTWARE QUAL J, V20, P265, DOI 10.1007/s11219-011-9140-0
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Bull CN, 2014, CONF SOFTW ENG EDUC, P74, DOI 10.1109/CSEET.2014.6816784
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Carron A., FITNESS INFORM TECHN, P200
   Carron AV, 2000, SMALL GR RES, V31, P89, DOI 10.1177/104649640003100105
   Carter A.S., 2011, J COMPUTING SCI COLL, V27, P105
   Cockburn A, 2000, IEEE SOFTWARE, V17, P64, DOI 10.1109/52.854070
   David K, 2004, STUD HIGH EDUC, V29, P165, DOI 10.1080/0307507042000190778
   European comission, 2015, ECTS US GUID 2015
   Garousi V, 2020, IEEE SOFTWARE, V37, P68, DOI 10.1109/MS.2018.2880823
   Germain É, 2005, J SYST SOFTWARE, V75, P17, DOI 10.1016/j.jss.2004.02.022
   Hayes B.E., 1998, MEASURING CUSTOMER S
   Hirsch M, 2005, PROC INT CONF SOFTW, P38, DOI 10.1145/1062455.1062472
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Ju A, 2018, ITICSE'18: PROCEEDINGS OF THE 23RD ANNUAL ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P123, DOI 10.1145/3197091.3197107
   Kuhrmann M, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P30, DOI 10.1145/3084100.3084104
   Licorish S, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P66, DOI 10.1109/CHASE.2009.5071413
   Mahnic V, 2012, IEEE T EDUC, V55, P99, DOI 10.1109/TE.2011.2142311
   Masood Z, 2018, J SYST SOFTWARE, V144, P501, DOI 10.1016/j.jss.2018.07.011
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   MELONE NP, 1990, MANAGE SCI, V36, P76, DOI 10.1287/mnsc.36.1.76
   Missiroli M, 2017, 2017 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING CURRICULA FOR MILLENNIALS (SECM), P47, DOI 10.1109/SECM.2017.7
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Orehovacki T, 2013, J SYST SOFTWARE, V86, P3039, DOI 10.1016/j.jss.2013.05.071
   Ramasubbu N, 2015, MIS QUART, V39, P787, DOI 10.25300/MISQ/2015/39.4.3
   Rodríguez G, 2016, IEEE T EDUC, V59, P202, DOI 10.1109/TE.2015.2506624
   Rogers E.M., 2003, DIFFUSION INNOVATION
   Royce Winston, 1970, Managing the development of large software systems, P1
   Salas E, 2015, HUM FACTORS, V57, P365, DOI 10.1177/0018720815578267
   Scharf A, 2013, CONF SOFTW ENG EDUC, P159, DOI 10.1109/CSEET.2013.6595247
   Schwaber KenJeff Sutherland., 2017, The Scrum Guide
   Tosun A, 2017, EMPIR SOFTW ENG, V22, P2763, DOI 10.1007/s10664-016-9490-0
   Umphress DA, 2002, IEEE SOFTWARE, V19, P78, DOI 10.1109/MS.2002.1032858
   Wellington C.A., 2005, P 35 ANN C FRONT ED
   Whitworth E, 2007, LECT NOTES COMPUT SC, V4536, P62
   Williams L., 2007, SURVEY AGILE DEV MET
   Wlodarski R, 2020, INT CONF SOFTW, P234, DOI 10.23919/softcom50211.2020.9238196
   Wlodarski R, 2017, FED CONF COMPUT SCI, P1207, DOI 10.15439/2017F295
NR 49
TC 4
Z9 5
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106787
DI 10.1016/j.infsof.2021.106787
EA DEC 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YK3DU
UT WOS:000745098800003
OA hybrid
DA 2024-07-18
ER

PT J
AU Tan, J
   Feitosa, D
   Avgeriou, P
AF Tan, Jie
   Feitosa, Daniel
   Avgeriou, Paris
TI Does it matter who pays back Technical Debt? An empirical study of
   self-fixed TD
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical Debt; Self-fixed issues; Python; Human factors; Static
   analysis
ID CODE SMELLS
AB Context: Technical Debt (TD) can be paid back either by those that incurred it or by others. We call the former self-fixed TD, and it can be particularly effective, as developers are experts in their own code and are well-suited to fix the corresponding TD issues. Objective: The goal of our study is to investigate self-fixed technical debt, especially the extent in which TD is self-fixed, which types of TD are more likely to be self-fixed, whether the remediation time of self-fixed TD is shorter than non-self-fixed TD and how development behaviors are related to self-fixed TD. Method: We report on an empirical study that analyzes the self-fixed issues of five types of TD (i.e., Code, Defect, Design, Documentation and Test), captured via static analysis, in more than 44,000 commits obtained from 20 Python and 16 Java projects of the Apache Software Foundation. Results: The results show that about half of the fixed issues are self-fixed and that the likelihood of contained TD issues being self-fixed is negatively correlated with project size, the number of developers and total issues. Moreover, there is no significant difference of the survival time between self-fixed and non-self-fixed issues. Furthermore, developers are more keen to pay back their own TD when it is related to lower code level issues, e.g., Defect Debt and Code Debt. Finally, developers who are more dedicated to or knowledgeable about the project contribute to a higher chance of self-fixing TD. Conclusions: These results can benefit both researchers and practitioners by aiding the prioritization of TD remediation activities and refining strategies within development teams, and by informing the development of TD management tools.
C1 [Tan, Jie; Feitosa, Daniel; Avgeriou, Paris] Univ Groningen, Fac Sci & Engn, Groningen, Netherlands.
   [Feitosa, Daniel] Univ Groningen, Campus Fryslan, Groningen, Netherlands.
C3 University of Groningen; University of Groningen
RP Tan, J (corresponding author), Univ Groningen, Fac Sci & Engn, Groningen, Netherlands.
EM j.tan@rug.nl; d.feitosa@rug.nl; p.avgeriou@rug.nl
RI Feitosa, Daniel/M-8700-2014
OI Feitosa, Daniel/0000-0001-9371-232X; Avgeriou,
   Paris/0000-0002-7101-0754; Tan, Jie/0000-0003-1868-0123
FU ITEA3 [17038 VISDOM]; RVO [17038 VISDOM]
FX This work was supported by ITEA3 and RVO under grant agreement No. 17038
   VISDOM (https://visdom-project.github.io/website/).
CR Alfayez R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P1, DOI 10.1145/3194164.3194165
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Amanatidis T., 2017, P XP2017 SCI WORKSHO, P1, DOI [DOI 10.1145/3120459.3120464, 10.1145/3120459.3120464]
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   Armstrong RA, 2014, OPHTHAL PHYSL OPT, V34, P502, DOI 10.1111/opo.12131
   Bates D., 2007, The lme4 package, DOI DOI 10.18637/JSS.V067.I01
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Besker T, 2017, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2017.42
   Campbell G., 2013, SONARQUBE IN ACTION
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chen ZF, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9153-3
   Cliff N., 2014, ORDINAL METHODS BEHA
   Cochran WilliamGemmell., 1999, Sampling techniques, V3d
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Dale M.R., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P37
   Digkas G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P153, DOI 10.1109/SANER.2018.8330205
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Eyolfson J, 2014, EMPIR SOFTW ENG, V19, P1009, DOI 10.1007/s10664-013-9245-0
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Fontana F.A., 2016, Proceedings of the 31st Annual ACM Symposium on Applied Computing, Pisa, Italy, P1347
   Gilson F, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P51, DOI 10.1145/3387906.3388624
   Harrell Jr F.E., 2019, CRAN2018, V2019, P235
   Iammarino M, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110976
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Krippendorff K, 2011, COMPUTING KRIPPENDOR
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lu Y, 2016, ASIA PAC SOFWR ENG, P49, DOI [10.1109/APSEC.2016.44, 10.1109/APSEC.2016.018]
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   McCulloch C. E., 2005, Encyclopedia of biostatistics, V4, DOI [https://doi.org/10.1002/9781118445112.stat07540, DOI 10.1002/9781118445112.STAT07540, 10.1002/0470013192.bsa251, DOI 10.1002/0470011815.B2A10021]
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Saarimäki N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P98, DOI 10.1109/TechDebt.2019.00028
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Tan J, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P11, DOI 10.1145/3387906.3388621
   Tan J, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2319
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tratt L, 2009, ADV COMPUT, V77, P149, DOI 10.1016/S0065-2458(09)01205-4
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Wang B, 2015, Soc. Sci. Res, P134
   Wen FC, 2020, INT C PROGRAM COMPRE, P60, DOI 10.1145/3387904.3389266
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
NR 53
TC 6
Z9 6
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106738
DI 10.1016/j.infsof.2021.106738
EA NOV 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XA3SJ
UT WOS:000720570800001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Weber, D
   Wiesner, P
   Fischer, J
AF Weber, Dorian
   Wiesner, Paula
   Fischer, Joachim
TI A closer look at process-based simulation with stackless coroutines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Discrete-event simulation; Benchmark; Process; Coroutine; RUST; SLX; C
   plus
AB Context Validating discrete-event computer simulations for a particular problem domain often involves the help of a domain expert. This means that a certain structural closeness between the simulator's inner workings and the modeled system is needed in order to allow the expert to follow the implementation in analogy. Process-based simulation imposes an object-oriented view onto a modeled system which allows for a high degree of structural closeness in most cases. In comparison, event-based simulation requires a procedural definition with a relatively low degree of structural closeness for many cases, but outperforms the process-based approach both in terms of performance and portability. Recent advances in compiler technology have introduced a portable way of rewriting thread-based code into event-based code, effectively providing the means to implement portable green-threads in compiled system languages.
   Objective This work aims to cover the historical, mechanical, and implementation specific aspects as well as practical measurements of runtime performance of a library based solution to process-based discrete-event simulation in comparison to alternative solutions.
   Method We explain how to use the stackless coroutines introduced into the Rust programming language to implement a minimal simulator core and discuss aesthetic as well as performance implications through systematic benchmarking using the three simulation scenarios Barbershop, Car Ferry and Dining Philosophers by comparing their implementations to equivalent ones in the simulation language SLX and the C++ library ODEMx.
   Results Our results indicate that stackless coroutines enable structurally equivalent formulations to pure process-based simulations while still delivering close to equivalent or - depending on the use-case - even superior performance and portability compared to the aforementioned solutions.
   Conclusion We show that stackless coroutines can be used to bridge the gap between process- and event-based simulators, affording modelers a level of abstraction close to the former approach while delivering the performance and portability of the latter one.
C1 [Weber, Dorian; Wiesner, Paula; Fischer, Joachim] Humboldt Univ, Unter Linden 6, D-10117 Berlin, Germany.
C3 Humboldt University of Berlin
RP Weber, D (corresponding author), Humboldt Univ, Unter Linden 6, D-10117 Berlin, Germany.
EM weber@informatik.hu-berlin.de; wiesnerp@informatik.hu-berlin.de;
   fischer@informatik.hu-berlin.de
CR AHRENS K, 1988, SYST ANAL MODEL SIM, V5, P215
   CONWAY ME, 1963, COMMUN ACM, V6, P396, DOI 10.1145/366663.366704
   Dahl O.-J., 1970, The Simula 67 common base language
   DAHL OJ, 1966, COMMUN ACM, V9, P671, DOI 10.1145/365813.365819
   Darzentas J, 1996, J OPER RES SOC, V47, P203, DOI 10.2307/2584342
   Fischer J., 2021, 2 INT C PERS TECHN, V1401, P67
   Fischer J., 1996, OBJEKTORIENTIERTE PR
   Gerstenberger R., 2003, THESIS HUMBOLDT U BE
   Hansen T.L., 1990, C ANSWER BOOK
   Henriksen JO, 2000, PROCEEDINGS OF THE 2000 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P183
   HENRIKSEN JO, 1993, 1993 WINTER SIMULATION CONFERENCE PROCEEDINGS, P263
   HINDLEY R, 1969, T AM MATH SOC, V146, P29, DOI 10.2307/1995158
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   HOLBAEKHANSSEN E, 1975, SYSTEM DESCRIPTION D
   Levine John., 2009, FLEX BISON TEXT PROC, V1st
   LOMOW G, 1989, 1989 WINTER SIMULATION CONFERENCE PROCEEDINGS, P140, DOI 10.1145/76738.76754
   Lomow G., 1982, 1982 Winter Simulation Conference, P77
   Madsen O. Lehrmann, 1993, Object Oriented Programming in the BETA Programming Language
   Matsakis N. D., 2014, P 2014 ACM SIGADA AN, V34, P103, DOI [DOI 10.1145/2663171.2663188, 10.1145/2663171.2663188]
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   Schriber T. J., 1974, Simulation using GPSS
   Sim R.J.W., 1975, CADSIM USERS GUIDE R
   Stroustrup B, 1984, SET C CLASSES COROUT
   Tatham S., 2000, Coroutines in C
   Weatherly RM, 2004, PROCEEDINGS OF THE 2004 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P1437
NR 25
TC 1
Z9 1
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2022
VL 141
AR 106695
DI 10.1016/j.infsof.2021.106695
EA AUG 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ1RK
UT WOS:000701988700010
DA 2024-07-18
ER

PT J
AU Shamsujjoha, M
   Grundy, J
   Li, L
   Khalajzadeh, H
   Lu, QH
AF Shamsujjoha, Md.
   Grundy, John
   Li, Li
   Khalajzadeh, Hourieh
   Lu, Qinghua
TI Developing Mobile Applications Via Model Driven Development: A
   Systematic Literature Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic Literature Review; Model Driven Development; Mobile App;
   Tools and Techniques
AB Context: Mobile applications (known as "apps") usage continues to rapidly increase, with many new apps being developed and deployed. However, developing a mobile app is challenging due to its dependencies on devices, technologies, platforms, and deadlines to reach the market. One potential approach is to use Model Driven Development (MDD) techniques that simplify the app development process, reduce complexity, increase abstraction level, help achieve scalable solutions and maximize cost-effectiveness and productivity. Objective: This paper systematically investigates what MDD techniques and methodologies have been used to date to support mobile app development and how these techniques have been employed, to identify key benefits, limitations, gaps and future research potential. Method: A Systematic Literature Review approach was used for this study based on a formal protocol. The rigorous search protocol identified a total of 1,042 peer-reviewed academic research papers from four major software engineering databases. These papers were subsequently filtered, and 55 high quality relevant studies were selected for analysis, synthesis, and reporting. Results: We identified the popularity of different applied MDD approaches, supporting tools, artifacts, and evaluation techniques. Our analysis found that architecture, domain model, and code generation are the most crucial purposes in MDD-based app development. Three qualities - productivity, scalability and reliability - can benefit from these modeling strategies. We then summarize the key collective strengths, limitations, gaps from the studies and made several future recommendations. Conclusion: There has been a steady interest in MDD approaches applied to mobile app development over the years. This paper guides future researchers, developers, and stakeholders to improve app development techniques, ultimately that will help end-users in having more effective apps, especially when some recommendations are addressed, e.g., taking into account more human-centric aspects in app development.
C1 [Shamsujjoha, Md.; Grundy, John; Li, Li; Khalajzadeh, Hourieh] Monash Univ, Dept Software Syst & Cybersecur, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lu, Qinghua] CSIRO, Data61, Sydney, NSW, Australia.
C3 Monash University; Commonwealth Scientific & Industrial Research
   Organisation (CSIRO)
RP Shamsujjoha, M (corresponding author), Monash Univ, Dept Software Syst & Cybersecur, Fac Informat Technol, Melbourne, Vic, Australia.
EM md.shamsujjoha@monash.edu; john.grundy@monash.edu; li.li@monash.edu;
   hourieh.khalajzadeh@monash.edu; qinghua.lu@data61.csiro.au
RI Li, Li/AAR-3316-2020; Lu, Qinghua/AAG-3378-2021; Khalajzadeh,
   Hourieh/AAR-6188-2020; Shamsujjoha, Md./U-8430-2017; Grundy,
   John/I-6681-2012
OI Khalajzadeh, Hourieh/0000-0001-9958-0102; Shamsujjoha,
   Md./0000-0002-9459-5281; Grundy, John/0000-0003-4928-7076; Li,
   Li/0000-0003-2990-1614
FU Monash International Tuition Scholarship (MITS), RTP Stipend; CSIRO
   Data61 Top-up Scholarship; Australian Research Council (ARC)
   [FL190100035, DE200100016, DP200100020]; Australian Research Council
   [DE200100016, DP200100020] Funding Source: Australian Research Council
FX Md. Shamsujjoha is supported by Monash International Tuition Scholarship
   (MITS), RTP Stipend and CSIRO Data61 Top-up Scholarship for his Ph.D.
   study at Monash University, Melbourne, Australia. This work was also
   supported by the Australian Research Council (ARC) under a Laureate
   Fellowship project FL190100035, a Discovery Early Career Researcher
   Award (DECRA) project DE200100016, and a Discovery project DP200100020.
CR Barnett S, 2019, J COMPUT LANG, V51, P88, DOI 10.1016/j.cola.2019.02.001
   Barnett S, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P305, DOI 10.1109/VLHCC.2015.7357239
   Brambilla Marco, 2017, Modeldriven software engineering in practice, DOI 10.Engineeringin1007/978-3-031-02549-5
   Brown AlanW., 2004, SOFTWARE SYSTEM MODE, V3, P314, DOI [DOI 10.1007/S10270-004-0061-2, 10.1007/s10270-004-0061-2]
   Clement J., 2019, Tech. Rep
   Derakhshandi M, AUTOM SOFTW ENG J
   Felgoise S., 2019, IRONSOURRCE TECH REP
   Fowler M., 2010, Domain-specific languages
   Grundy J, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P219, DOI [10.1145/3197231.3197262, 10.1145/3197231.3197263]
   Heitkotter Henning, 2013, P 28 ANN ACM S APPL, P526
   Hidellaarachchi D, 2022, IEEE T SOFTWARE ENG, V48, P2105, DOI 10.1109/TSE.2021.3051898
   Holst A., 2019, SMARTPHONE USERS WOR
   Hudli A, 2015, P 3 MOBILEDELI, DOI [10.1145/2846661.2846678, DOI 10.1145/2846661.2846678]
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kitchenham B., 2007, 2007001 EBSE
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Lano K, 2021, P 14 INNOVATIONS SOF, P1, DOI [10.1145/3452383.3452409, DOI 10.1145/3452383.3452409]
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Liddle SW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P17
   Lo SK, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3450288
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Rahmani C, 2009, 18 INT C SOFTW ENG D, P105
   Sahay A, 2020, EUROMICRO CONF PROC, P171, DOI 10.1109/SEAA51224.2020.00036
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Shamsujjoha M, 2021, INT C PROGRAM COMPRE, P422, DOI 10.1109/ICPC52881.2021.00050
   Shamsujjoha M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P506, DOI 10.1109/SANER50967.2021.00055
   Stahl Tom., MODEL DRIVEN SOFTWAR
   Staron M, 2006, LECT NOTES COMPUT SC, V4199, P57
   Tufail H, 2018, 2018 IEEE 9TH ANNUAL INFORMATION TECHNOLOGY, ELECTRONICS AND MOBILE COMMUNICATION CONFERENCE (IEMCON), P1165, DOI 10.1109/IEMCON.2018.8614821
   Umuhoza E, 2016, LECT NOTES COMPUT SC, V9847, P93, DOI 10.1007/978-3-319-44215-0_8
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Willocx M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P38, DOI [10.1145/2897073.2897092, 10.1109/MobileSoft.2016.028]
   Wolber D, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P601
NR 33
TC 8
Z9 9
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106693
DI 10.1016/j.infsof.2021.106693
EA AUG 2021
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600012
DA 2024-07-18
ER

PT J
AU da Silva, LLN
   Kohwalter, TC
   Plastino, A
   Murta, LGP
AF Nunes da Silva, Luiz Laerte
   Kohwalter, Troy Costa
   Plastino, Alexandre
   Paulino Murta, Leonardo Gresta
TI Sequential coding patterns: How to use them effectively in code
   recommendation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Sequential code patterns; Data mining; Recommendation system; Version
   control system
AB Context: Some programming constructs frequently appear together in different parts of the code, representing sequential coding patterns throughout the project. These sequential coding patterns can be mined from the project repository and, whenever the code a developer is writing coincides with the beginning of a sequential pattern, the remainder of this pattern can be suggested to the developer. This is equivalent to the usual Code Completion, which suggests syntactic structures based on the line being programmed. However, instead of providing syntactic suggestions for completing the current line, such feature suggests code snippets containing multiple lines. Objective: This paper contributes with an in-depth study on how code pattern recommendation can be used effectively. Method: We answer three research questions through a quantitative study using a robust experimental infrastructure with a corpus of five open-source projects: (1) "In a code recommendation, how many frequent coding patterns should be presented?'', (2) "What is the impact of filtering sequential patterns by their confidence?", and (3) "Does the effectiveness of the sequential coding patterns degrade over time?''. Results: Our study shows that it is possible to achieve correctness above 80% when using suggestions with the highest confidence values and that a threshold confidence of 30% generally provides better outcomes. Furthermore, it shows that frequent code pattern completion effectiveness tends to degrade 50 commits after the patterns have been mined. Conclusion: We could observe that: (1) the top five ranked suggestions are the ones that deliver the best results; (2) the code recommendations that deliver the best results are the ones with the highest confidence values; and (3) the code recommendation performance degrades as the source code evolves because patterns become outdated.
C1 [Nunes da Silva, Luiz Laerte; Kohwalter, Troy Costa; Plastino, Alexandre; Paulino Murta, Leonardo Gresta] Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
C3 Universidade Federal Fluminense
RP Kohwalter, TC (corresponding author), Univ Fed Fluminense, Inst Comp, Niteroi, RJ, Brazil.
EM luiznunes@id.uff.br; troy@ic.uff.br; plastino@ic.uff.br;
   leomurta@ic.uff.br
RI Kohwalter, Troy/AAV-8068-2020
OI Kohwalter, Troy/0000-0002-5183-473X
FU CNPq, Brazil [306137/2017-8, 310444/2018-7]; FAPERJ, Brazil
   [E26/010.101250/2018]; CAPES, Brazil
FX This work was supported by CNPq, Brazil [grant numbers: 306137/2017-8
   and 310444/2018-7], FAPERJ, Brazil [grant number: E26/010.101250/2018],
   and CAPES, Brazil.
CR Nguyen AT, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P323, DOI 10.1109/SANER.2018.8330220
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Bruch M., 2012, ECLIPSE CODE RECOMME
   Gamma Erich., 1994, DESIGN PATTERNS
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Han J, 2012, MOR KAUF D, P1
   Hill R, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P228, DOI 10.1109/ASE.2004.1342740
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Jacobellis J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P584, DOI 10.1145/2591062.2591076
   Kinnen T., 2013, THESIS TU MUNICH MUN
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Nguyen T.T., 2013, P 2013 9 JOINT M FDN, P532, DOI DOI 10.1145/2491411.2491458
   da Silva LL, 2014, J UNIVERS COMPUT SCI, V20, P797
   Pressman R., 2009, Software Engineering: A Practitioner's Approach, V7th
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Robbes Romain, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P317, DOI 10.1109/ASE.2008.42
   Sahavechaphan N, 2006, ACM SIGPLAN NOTICES, V41, P413, DOI 10.1145/1167515.1167508
   Silva Junior L. L. N., 2012, 2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2012), P81, DOI 10.1109/SBCARS.2012.22
NR 21
TC 3
Z9 3
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106690
DI 10.1016/j.infsof.2021.106690
EA JUL 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600015
DA 2024-07-18
ER

PT J
AU Laverdière, MA
   Julien, K
   Merlo, E
AF Laverdiere, Marc-Andre
   Julien, Karl
   Merlo, Ettore
TI RBAC protection-impacting changes identification: A case study of the
   security evolution of two PHP applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program analysis; Software evolution; Role-base access control; Software
   security
ID EXTRACTION; ERRORS; MODELS
AB Web applications often use Role-Based Access Control (RBAC) to restrict operations and protect security sensitive information and resources. Context: Web applications' RBAC security may be affected by source code changes between releases. Developers should re-validate their application prior to release, but this may be labor and resource-intensive. Objective: Among all changes between two versions during software evolution, we define Protection-Impacting Changes (PICs) as changed statements that potentially alter privilege protection of other statement(s). PICs may focus the attention of developers towards root cause candidates for security protection changes, especially when these protection changes are unexpected. Method: The proposed automated static analysis identifies PICs between two versions of an application. It is based on the interprocedural flow graph reachability analysis of security checks and statements. Results: We examined the software evolution of two PHP web applications. We examined 210 versions of WordPress, and 192 versions of MediaWiki. Additional experiments have been performed on 19 fix commits corresponding to Common Vulnerabilities and Exposures CVEs from WordPress. They are presented and discussed in this paper and show that PICs contain 98.2% of the CVE oracle root causes. Conclusion: PICs represent overall only 8% and 2% of total code changes, respectively for WordPress and MediaWiki. PICs may help developers to focus onto a smaller number of candidate security-related problems, during software evolution. Consequently, developers may re-validate application security and perform repairs more efficiently.
C1 [Laverdiere, Marc-Andre; Julien, Karl; Merlo, Ettore] Polytech Montreal, Dept Comp & Software Engn, CP 6079,Succ Ctr Ville, Montreal, PQ H3C 3A7, Canada.
   [Laverdiere, Marc-Andre] Tata Consultancy, TCS Res, Serv Deccan Pk,Plot 1,Survey 64-2, Hyderabad 500081, Telangana, India.
C3 Universite de Montreal; Polytechnique Montreal
RP Merlo, E (corresponding author), Polytech Montreal, Dept Comp & Software Engn, CP 6079,Succ Ctr Ville, Montreal, PQ H3C 3A7, Canada.
EM marc-andre.laverdiere-papineau@polymtl.ca; karl.julien@polymtl.ca;
   ettore.merlo@polymtl.ca
RI dbs, hunzla/HZL-0324-2023
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [RGPIN-2017-05700]
FX The authors wish to thank the revievers for their constructive com-ments
   and suggestions. They also wish to thank the Natural Sciences and
   Engineering Research Council of Canada (NSERC) for the obtained funding
   RGPIN-2017-05700 under the Discovery Grants Program.
CR Alalfi Manar H., 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P121, DOI 10.1007/978-3-642-31753-8_9
   [Anonymous], 2019, ROLES CAP WORDPRESS
   [Anonymous], 2012, CERT GUIDE INSIDER T
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   [Anonymous], 2013, eXtensible Access Control Markup language (XACML) version 3.0
   [Anonymous], 2017, MANUAL USER RIGHTS W
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Baca D, 2008, PLAS'08: PROCEEDINGS OF THE ACM SIGPLAN THIRD WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P79, DOI 10.1145/1375696.1375707
   Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Barrak A., 2018, Proceedings of the 28th Annual International Conference on Computer Science and Software Engineering, P178
   Boren R, 2017, CHANGESET 15097
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Chen H., 2002, P 9 ACM C COMPUTER C, P235
   Davidsen MK, 2010, INFORM SOFTWARE TECH, V52, P707, DOI 10.1016/j.infsof.2010.03.003
   Do LNQ, 2022, IEEE T SOFTWARE ENG, V48, P835, DOI 10.1109/TSE.2020.3004525
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Felderer M, 2015, INT J SOFTW TOOLS TE, V17, P305, DOI 10.1007/s10009-015-0365-2
   Fisler K, 2005, PROC INT CONF SOFTW, P196
   Gail-Joon Ahn, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P137, DOI 10.1109/COMPSAC.2010.20
   Gauthier F., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P44, DOI 10.1109/SCAM.2012.19
   Gauthier F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P247, DOI 10.1109/WCRE.2012.34
   Gauthier F, 2011, ANN CONF PRIV SECUR, P44
   Gauthier F, 2014, PROC IEEE INT CONF S, P506, DOI 10.1109/ICSME.2014.83
   Gauthier F, 2012, EUR CON SFTWR MTNCE, P397, DOI 10.1109/CSMR.2012.50
   Groce A, 2005, ELECTRON NOTES THEOR, V119, P67, DOI 10.1016/j.entcs.2004.12.023
   Hooimeijer Pieter, 2011, 20 USENIX SEC S SAN
   Huang C, 2009, LECT NOTES COMPUT SC, V5576, P70, DOI 10.1007/978-3-642-02617-1_8
   Hwang J, 2014, PROC INT SYMP SOFTW, P245, DOI 10.1109/ISSRE.2014.36
   Hwang JH, 2012, IEEE INT CONF AUTOM, P266, DOI 10.1145/2351676.2351719
   ISO/IEC/IEEE International Standard for Software Engineering-Software Life Cycle Processes-Maintenance, 2006, 147642006 ISOIEC, DOI [10.1109/IEEESTD.2006.235774, DOI 10.1109/IEEESTD.2006.235774]
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Karp A.H., 2009, HPL200930
   Khedker U., 2009, Data Flow Analysis: Theory and Practice, V1st
   Landwehr C.E., 1994, A taxonomy of computer program security flaws, with examples
   Laverdière MA, 2017, ANN CONF PRIV SECUR, P349, DOI 10.1109/PST.2017.00048
   Laverdière MA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P434, DOI 10.1109/SANER.2018.8330230
   Laverdière MA, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P240, DOI 10.1109/SANER.2017.7884625
   Laverdiere-Papineau M.-A, 2018, THESIS ECOLE POLYTEC
   Le Traon Yves, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P238
   Lee M.-G., 2005, 21 IEEE INT C SOFTW, DOI [10.1109/icsm.2005.19, DOI 10.1109/ICSM.2005.19]
   Letarte D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P289, DOI 10.1109/ICST.2011.36
   Letarte D, 2009, WORK CONF REVERSE EN, P187, DOI 10.1109/WCRE.2009.32
   Lhoták O, 2004, ACM SIGPLAN NOTICES, V39, P158, DOI 10.1145/996893.996861
   Li D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P661, DOI 10.1145/2786805.2786879
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   McGraw G., 2006, Software security: building security in
   Montrieux L., 2011, P 12 INT WORKSH PRIN, P116
   Mouelhi T, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P171, DOI 10.1109/ICST.2009.49
   OWASP Foundation, 2020, OWASP TEST GUID V4 1
   Peine H, 2008, IEEE HI ASS SYS ENGR, P9, DOI 10.1109/HASE.2008.57
   Preston-Werner Tom., 2013, Semantic Versioning 2.0.0
   Pretschner Alexander, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P338, DOI 10.1109/ICST.2008.44
   Qamar N., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P734, DOI 10.1109/ARES.2011.112
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shirey R., 2007, INTERNET SECURITY GL, P355, DOI DOI 10.17487/RFC4949
   Sinha VibhaSinghal., 2010, Proc. of 3rd India Software Engineering Conf, P3
   Smith J, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P221
   Son S., 2013, P 20 NETW DISTR SYST
   Son S, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P1069
   The Open Web Application Security Project, 2013, OWASP TOP 10 2013
   The Open Web Application Security Project, 2015, OWASP APPL SEC VER S
   Thompson H. H., 2003, IEEE Security & Privacy, V1, P83, DOI 10.1109/MSECP.2003.1219078
   Votipka D, 2018, P IEEE S SECUR PRIV, P374, DOI 10.1109/SP.2018.00003
   Wang Q., 2003, SoftVis '03: Proceedings of the 2003 ACM Symposium on Software Visualization, P37
NR 66
TC 1
Z9 1
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106630
DI 10.1016/j.infsof.2021.106630
EA JUN 2021
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300005
DA 2024-07-18
ER

PT J
AU van Dinter, R
   Tekinerdogan, B
   Catal, C
AF van Dinter, Raymon
   Tekinerdogan, Bedir
   Catal, Cagatay
TI Automation of systematic literature reviews: A systematic literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature review (SLR); Automation; Review; Text mining;
   Machine learning; Natural language processing
ID DATA EXTRACTION; FULL-TEXT; SUPPORT; WORKLOAD; ERRORS; TOOLS
AB Context: Systematic Literature Review (SLR) studies aim to identify relevant primary papers, extract the required data, analyze, and synthesize results to gain further and broader insight into the investigated domain. Multiple SLR studies have been conducted in several domains, such as software engineering, medicine, and pharmacy. Conducting an SLR is a time-consuming, laborious, and costly effort. As such, several researchers developed different techniques to automate the SLR process. However, a systematic overview of the current state-of-the-art in SLR automation seems to be lacking.
   Objective: This study aims to collect and synthesize the studies that focus on the automation of SLR to pave the way for further research. Method: A systematic literature review is conducted on published primary studies on the automation of SLR studies, in which 41 primary studies have been analyzed. Results: This SLR identifies the objectives of automation studies, application domains, automated steps of the SLR, automation techniques, and challenges and solution directions.
   Conclusion: According to our study, the leading automated step is the Selection of Primary Studies. Although many studies have provided automation approaches for systematic literature reviews, no study has been found to apply automation techniques in the planning and reporting phase. Further research is needed to support the automation of the other activities of the SLR process.
C1 [van Dinter, Raymon; Tekinerdogan, Bedir] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
   [Catal, Cagatay] Qatar Univ, Dept Comp Sci & Engn, Doha, Qatar.
C3 Wageningen University & Research; Qatar University
RP Catal, C (corresponding author), Qatar Univ, Dept Comp Sci & Engn, Doha, Qatar.
EM raymon.vandinter@wur.nl; bedir.tekinerdogan@wur.nl; ccatal@qu.edu.qa
RI van+Dinter, Raymon/ABD-7476-2021; Catal, Cagatay/AAF-3929-2019;
   Tekinerdogan, Bedir/K-3639-2019
OI Catal, Cagatay/0000-0003-0959-2930; Tekinerdogan,
   Bedir/0000-0002-8538-7261; Dinter, van, Raymon/0000-0002-1811-8803
CR Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Aliyu MB, 2018, 2018 FIFTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P264, DOI 10.1109/SNAMS.2018.8554896
   Almeida H, 2016, IEEE T NANOBIOSCI, V15, P354, DOI 10.1109/TNB.2016.2565481
   [Anonymous], 2019, 20 POPULAR MACHINE 1
   Balatsko M, 2019, TEXT PREPROCESSING S
   Bannach-Brown A, 2019, SYST REV-LONDON, V8, DOI 10.1186/s13643-019-0942-7
   Bartholomew M, 2002, POSTGRAD MED J, V78, P695, DOI 10.1136/pmj.78.925.695
   Bekhuis T, 2012, ARTIF INTELL MED, V55, P197, DOI 10.1016/j.artmed.2012.05.002
   Beller E, 2018, SYST REV-LONDON, V7, DOI 10.1186/s13643-018-0740-7
   Biolchini J., 2005, Systematic review in software engineering(05)
   Blake C, 2015, J BIOMED INFORM, V56, P42, DOI 10.1016/j.jbi.2015.05.004
   Bui DDA, 2016, J BIOMED INFORM, V64, P265, DOI 10.1016/j.jbi.2016.10.014
   Bui DDA, 2015, J BIOMED INFORM, V57, P436, DOI 10.1016/j.jbi.2015.09.003
   Cawley M, 2020, ENVIRON INT, V134, DOI 10.1016/j.envint.2019.105228
   Chowdhury GG, 2003, ANNU REV INFORM SCI, V37, P51, DOI 10.1002/aris.1440370103
   Clark J, 2020, J CLIN EPIDEMIOL, V121, P81, DOI 10.1016/j.jclinepi.2020.01.008
   Cohen AM, 2009, J AM MED INFORM ASSN, V16, P690, DOI 10.1197/jamia.M3162
   Cohen AM, 2006, J AM MED INFORM ASSN, V13, P206, DOI 10.1197/jamia.M1929
   Cohen KB, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-492
   Davydova O., 2018, Text preprocessing in Python: Steps, Tools, and Examples
   De Rubira Tomas Tinoco, 2016, 2016 Power Systems Computation Conference (PSCC), P1, DOI 10.1109/PSCC.2016.7540930
   Dias AM, 2011, ASIAN J PSYCHIATR, V4, P107, DOI 10.1016/j.ajp.2011.03.003
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Bui DDA, 2016, J BIOMED INFORM, V61, P141, DOI 10.1016/j.jbi.2016.03.026
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   E.P. Office, 2007, WHY RES SHOULD CAR P
   Elamin MB, 2009, J CLIN EPIDEMIOL, V62, P506, DOI 10.1016/j.jclinepi.2008.10.016
   Elliott JH, 2014, PLOS MED, V11, DOI 10.1371/journal.pmed.1001603
   Elsevier, CONTENT FEATURES
   Elsevier, 2020, YEAR IMPACT FACTOR R
   Felizardo K., 2014, International Conference on Evaluation and Assessment in Software Engineering (EASE), P1
   Felizardo K. R., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P174, DOI 10.1109/SBES.2011.9
   Felizardo KR, 2012, INFORM SOFTWARE TECH, V54, P1079, DOI 10.1016/j.infsof.2012.04.003
   Felizardo KR, 2011, INT SYMP EMP SOFTWAR, P77, DOI 10.1109/ESEM.2011.16
   Feng LY, 2017, ASIA PAC SOFWR ENG, P41, DOI 10.1109/APSEC.2017.10
   Frunza O, 2010, P 23 INT C COMP LING, P303
   Frunza O, 2011, ARTIF INTELL MED, V51, P17, DOI 10.1016/j.artmed.2010.10.005
   Adeva JJG, 2014, EXPERT SYST APPL, V41, P1498, DOI 10.1016/j.eswa.2013.08.047
   González-Toral S, 2019, 2019 XLV LATIN AMERICAN COMPUTING CONFERENCE (CLEI 2019), DOI 10.1109/CLEI47609.2019.235079
   Gotzsche PC, 2007, JAMA-J AM MED ASSOC, V298, P430, DOI 10.1001/jama.298.4.430
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Hashimoto K, 2016, J BIOMED INFORM, V62, P59, DOI 10.1016/j.jbi.2016.06.001
   Jaspers S., 2018, EFSA Supporting Publications, V15, p1427E, DOI 10.2903/sp.efsa.2018.en-1427
   Jones AP, 2005, J CLIN EPIDEMIOL, V58, P741, DOI 10.1016/j.jclinepi.2004.11.024
   Jonnalagadda SR, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0066-7
   Kana M, 2019, REPRESENTING TEXT NA
   Karami A, 2020, IEEE ACCESS, V8, P67698, DOI 10.1109/ACCESS.2020.2983656
   Karimi Sarvnaz, 2009, P 3 INT WORKSH DAT T, P89, DOI DOI 10.1145/1651318.1651338
   Kim S, 2014, J BIOMED INFORM, V47, P153, DOI 10.1016/j.jbi.2013.10.005
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B., 2007, 2007001 EBSE
   Kontonatsios G., 2020, EXPERT SYST APPL
   Kontonatsios G, 2017, J BIOMED INFORM, V72, P67, DOI 10.1016/j.jbi.2017.06.018
   Langlois A, 2018, RES SYNTH METHODS, V9, P587, DOI 10.1002/jrsm.1317
   Malheiros Viviane, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P245
   Marshall C, 2016, COCHRANE DB SYST REV, V10, P34
   Marshall IJ, 2019, SYST REV-LONDON, V8, DOI 10.1186/s13643-019-1074-9
   McGowan J, 2005, J MED LIBR ASSOC, V93, P74
   Mergel GD, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1594, DOI 10.1145/2695664.2695902
   Michelson M, 2019, CONT CLIN TRIAL COMM, V16, DOI 10.1016/j.conctc.2019.100443
   Microsoft, 2019, MACH LEARN TASKS ML
   Miwa M, 2014, J BIOMED INFORM, V51, P242, DOI 10.1016/j.jbi.2014.06.005
   Mutuvi S., 2019, Introduction to Machine Learning Model Evaluation
   O'Connor AM, 2019, SYST REV-LONDON, V8, DOI 10.1186/s13643-019-1062-0
   O'Mara-Eves A, 2015, SYST REV-LONDON, V4, DOI 10.1186/2046-4053-4-5
   Olorisade B. K, 2016, P 20 INT C EV ASS SO, P1, DOI [10.1145/2915970.2915982, DOI 10.1145/2915970.2915982]
   Olorisade BK, 2019, J BIOMED INFORM, V94, DOI 10.1016/j.jbi.2019.103202
   Ouhbi B., 2016, iiWAS'16, P106
   Paynter R., 2016, METHODS EXPLORATION
   Reeves S, 2002, MED TEACH, V24, P358, DOI 10.1080/01421590220145707
   Riaz M., 2010, 14 INT C EV ASS SOFT, P1
   Ros Rasmus, 2017, P 21 INT C EV ASS SO, P118, DOI [10.1145/3084226.3084243, DOI 10.1145/3084226.3084243]
   Scells H, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1071, DOI 10.1145/3366423.3380185
   Scells H, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1646, DOI 10.1145/3308558.3313544
   Sellak H., 2015, P 17 INT C INF INT W, P43
   Shakeel Y, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SCIENCE (SE4SCIENCE), P20, DOI 10.1145/3194747.3194748
   Shemilt I, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0315-4
   Shojania KG, 2007, ANN INTERN MED, V147, P224, DOI 10.7326/0003-4819-147-4-200708210-00179
   Thomas J, 2011, RES SYNTH METHODS, V2, P1, DOI 10.1002/jrsm.27
   Timsina P, 2016, INFORM SYST FRONT, V18, P237, DOI 10.1007/s10796-015-9589-7
   Tomassetti Federico, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P31, DOI 10.1049/ic.2011.0004
   Tsafnat G, 2018, SYST REV-LONDON, V7, DOI 10.1186/s13643-018-0724-7
   Tsafnat G, 2014, SYST REV-LONDON, V3, DOI 10.1186/2046-4053-3-74
   Tummers J, 2019, COMPUT ELECTRON AGR, V157, P189, DOI 10.1016/j.compag.2018.12.044
   van Altena AJ, 2019, RES SYNTH METHODS, V10, P72, DOI 10.1002/jrsm.1335
   Verma U, 2014, TEXT PREPROCESSING N
   Wallace BC, 2016, J MACH LEARN RES, V17
   Wallace BC, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-55
   Wallace Byron C., 2010, P 16 ACM SIGKDD INT, P173, DOI DOI 10.1145/1835804.1835829
   Weisser T, 2020, METHODSX, V7, DOI 10.1016/j.mex.2020.100831
   Zdravevski E, 2019, LECT NOTES COMPUT SC, V11369, P1, DOI 10.1007/978-3-030-10752-9_1
NR 91
TC 75
Z9 78
U1 49
U2 274
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106589
DI 10.1016/j.infsof.2021.106589
EA APR 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900011
OA Green Published
DA 2024-07-18
ER

PT J
AU Gheyi, R
   Ribeiro, M
   Souza, B
   Guimaraes, M
   Fernandes, L
   d'Amorim, M
   Alves, V
   Teixeira, L
   Fonseca, B
AF Gheyi, Rohit
   Ribeiro, Marcio
   Souza, Beatriz
   Guimaraes, Marcio
   Fernandes, Leo
   d'Amorim, Marcelo
   Alves, Vander
   Teixeira, Leopoldo
   Fonseca, Baldoino
TI Identifying method-level mutation subsumption relations using Z3
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation analysis; Redundant mutants; Theorem proving
AB Context: Mutation analysis is a popular but costly approach to assess the quality of test suites. One recent promising direction in reducing costs of mutation analysis is to identify redundant mutations, i.e., mutations that are subsumed by some other mutations. A previous approach found redundant mutants manually through truth tables but it cannot be applied to all mutations. Another work derives them using automatic test suite generators but it is a time consuming task to generate mutants and tests, and to execute tests.
   Objective: This article proposes an approach to discover redundant mutants by proving subsumption relations among method-level mutation operators using weak mutation testing.
   Method: We conceive and encode a theory of subsumption relations in the Z3 theorem prover for 37 mutation targets (mutations of an expression or statement). Results: We automatically identify and prove a number of subsumption relations using Z3, and reduce the number of mutations in a number of mutation targets. To evaluate our approach, we modified MuJava to include the results of 24 mutation targets and evaluate our approach in 125 classes of 5 large open source popular projects used in prior work. Our approach correctly discards mutations in 75.93% of the cases, and reduces the number of mutations by 71.38%.
   Conclusions: Our approach offers a good balance between the effort required to derive subsumption relations and the effectiveness for the targets considered in our evaluation in the context of strong mutation testing.
C1 [Gheyi, Rohit; Souza, Beatriz] Univ Fed Campina Grande, Dept Comp & Syst, Campina Grande, Paraiba, Brazil.
   [Ribeiro, Marcio; Guimaraes, Marcio; Fonseca, Baldoino] Univ Fed Alagoas, Comp Inst, Maceio, Alagoas, Brazil.
   [Fernandes, Leo] IFAL, Maceio, Alagoas, Brazil.
   [d'Amorim, Marcelo; Teixeira, Leopoldo] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
   [Alves, Vander] Univ Brasilia, Comp Sci Dept, Brasilia, DF, Brazil.
C3 Universidade Federal de Campina Grande; Universidade Federal de Alagoas;
   Instituto Federal de Alagoas (IFAL); Universidade Federal de Pernambuco;
   Universidade de Brasilia
RP Gheyi, R (corresponding author), Univ Fed Campina Grande, Dept Comp & Syst, Campina Grande, Paraiba, Brazil.
EM rohit@dsc.ufcg.edu.br; marcio@ic.ufal.br; beatriz.souza@ccc.ufcg.edu.br;
   masg@ic.ufal.br; leonardo.oliveira@ifal.edu.br; damorim@cin.ufpe.br;
   valves@unb.br; lmt@cin.ufpe.br; baldoino@ic.ufal.br
RI Teixeira, Leopoldo M/G-5937-2016; Fonseca, Baldoino/JUV-2819-2023;
   Ribeiro, Marcio/C-8356-2017
OI Fonseca, Baldoino/0000-0002-0730-0319; Fernandes,
   Leonardo/0000-0001-9090-2232; Ribeiro, Marcio/0000-0002-4293-4261
FU CNPq [465614/2014-0, 426005/2018-0, 421306/2018-1, 309844/2018-5,
   311442/2019-6, 427787/2018-1]; CAPES [117875, 175956, 88887]; FACEPE
   [APQ-0570-1.03/14, PRONEX-APQ-0388-1.03/14, APQ-0399-1.03/17]; FAPEAL
   [60030.0000000462/2020]
FX We would like to thank the anonymous reviewers for their insightful
   suggestions. This work was partially supported by CNPq (465614/2014-0,
   426005/2018-0, 421306/2018-1, 309844/2018-5, 311442/2019-6,
   427787/2018-1), CAPES (117875, 175956, and 88887), FACEPE
   (APQ-0570-1.03/14, PRONEX-APQ-0388-1.03/14, and APQ-0399-1.03/17), and
   FAPEAL (60030.0000000462/2020) grants.
CR Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Baldwin D, 1979, HEURISTICS DETERMINI
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Changbin Ji, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P422
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delgado-Pérez P, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1630
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gheyi R., 2020, P INT C SOFTW TEST, P98
   Gheyi R., 2020, IDENTIFYING METHOD L
   Gopinath R, 2017, IEEE T RELIAB, V66, P854, DOI 10.1109/TR.2017.2705662
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Hussain S, 2008, THESIS KINGS COLL LO
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P284, DOI 10.1145/3092703.3092732
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Just R, 2015, SOFTW TEST VERIF REL, V25, P490, DOI 10.1002/stvr.1561
   Kaminski G., 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P57, DOI [10.1145/1982595.1982608, DOI 10.1145/1982595.1982608]
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kurtz B, 2014, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2014.20
   Langdon WB, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P21, DOI 10.1109/TAICPART.2009.18
   Lindström B, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1667
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Owre S, 1999, LECT NOTES COMPUT SC, V1641, P338
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Petrovic G, 2018, IEEE ICST WORKSHOP, P47, DOI 10.1109/ICSTW.2018.00027
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Voas J., 1997, SOFTWARE FAULT INJEC
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
NR 56
TC 11
Z9 11
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106496
DI 10.1016/j.infsof.2020.106496
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900004
DA 2024-07-18
ER

PT J
AU Rindell, K
   Ruohonen, J
   Holvitie, J
   Hyrynsalmi, S
   Leppänen, V
AF Rindell, Kalle
   Ruohonen, Jukka
   Holvitie, Johannes
   Hyrynsalmi, Sami
   Leppanen, Ville
TI Security in agile software development: A practitioner survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Survey; Security engineering; Agile software development; Software
   security; Security standards; Security assurance
AB Context: Software security engineering provides the means to define, implement and verify security in software products. Software security engineering is performed by following a software security development life cycle model or a security capability maturity model. However, agile software development methods and processes, dominant in the software industry, are viewed to be in conflict with these security practices and the security requirements.
   Objective: Empirically verify the use and impact of software security engineering activities in the context of agile software development, as practiced by software developer professionals. Method: A survey (N = 61) was performed among software practitioners in Finland regarding their use of 40 common security engineering practices and their perceived security impact, in conjunction with the use of 16 agile software development items and activities.
   Results: The use of agile items and activities had a measurable effect on the selection of security engineering practices. Perceived impact of the security practices was lower than the rate of use would imply: This was taken to indicate a selection bias, caused by e.g. developers' awareness of only certain security engineering practices, or by difficulties in applying the security engineering practices into an iterative software development workflow. Security practices deemed to have most impact were proactive and took place in the early phases of software development.
   Conclusion: Systematic use of agile practices conformed, and was observed to take place in conjunction with the use of security practices. Security activities were most common in the requirement and implementation phases. In general, the activities taking place early in the life cycle were also considered most impactful. A discrepancy between the level of use and the perceived security impact of many security activities was observed. This prompts research and methodological development for better integration of security engineering activities into software development processes, methods, and tools.
C1 [Rindell, Kalle; Ruohonen, Jukka; Holvitie, Johannes; Leppanen, Ville] Univ Turku, Dept Future Technol, FI-20014 Turun, Finland.
   [Hyrynsalmi, Sami] Tampere Univ, Unit Comp Sci, POB 300, FI-28101 Pori, Finland.
   [Hyrynsalmi, Sami] Lappeenranta Lahti Univ Technol LUT, Software Engn, Mukkulankatu 19, FI-15210 Lahti, Finland.
C3 University of Turku; Tampere University; Lappeenranta-Lahti University
   of Technology LUT
RP Rindell, K (corresponding author), Univ Turku, Dept Future Technol, FI-20014 Turun, Finland.
EM kakrind@utu.fi
RI Hyrynsalmi, Sami/U-6315-2017; Ruohonen, Jukka/AFB-9028-2022
OI Hyrynsalmi, Sami/0000-0002-5073-3750; Ruohonen,
   Jukka/0000-0001-5147-3084; Leppanen, Ville/0000-0001-5296-677X
CR Anderson R., 2008, Security engineering, V2nd
   [Anonymous], 2018, 15472018 IEEE
   [Anonymous], 2011, 2703412011 ISOIEC
   [Anonymous], 2014, ISO/IEC 15408-1:2009
   [Anonymous], 2012, 1502642012 ISOIEC
   [Anonymous], 2006, PROC COMPANION 21 AC, DOI [10.1145/1176617.1176727, DOI 10.1145/1176617.1176727]
   [Anonymous], 2017, BUILD SEC MAT MOD
   [Anonymous], DOI, DOI [10.1145/1176617.1176727., DOI 10.1145/1176617.1176727]
   [Anonymous], 2016, 2016 AS PAC SOFTW EN
   [Anonymous], 2016, Recommended practice: Improving industrial control system cybersecurity with defense-in-depth strategies
   [Anonymous], 2008, 218272008 ISOIEC
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Ayalew T, 2013, LECT NOTES COMPUT SC, V8208, P139, DOI 10.1007/978-3-642-41488-6_10
   Baca D., 2011, ICSSP, V11, P149
   Bartsch S., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P479, DOI 10.1109/ARES.2011.82
   Beck K., 2000, EXTREME PROGRAMMING
   Beck K., 2001, The Agile Alliance, 2009December, P2006
   Bell L., 2017, Agile Application Security: Enabling Securityin a Continuous Delivery Pipeline
   Bellomo S., 2014, Cutter IT Journal, V27, P12
   ben Othmane L, 2014, IEEE T DEPEND SECURE, V11, P497, DOI 10.1109/TDSC.2014.2298011
   Beznosov K., 2004, NEW SECURITY PARADIG, P47
   Bostrom G., 2006, P 2006 INT WORKSH SO, P11
   Chivers H, 2005, LECT NOTES COMPUT SC, V3556, P57
   Cockburn Alistair., 2000, EXTREME PROGRAMMING, P223
   Conboy K, 2005, INT FED INFO PROC, V180, P35
   Doucet Guillaume, CELL HOST AMP MICROB, V266, P84, DOI [10.1016/j.jneumeth.2016.03.009, DOI 10.1016/J.CHOM.2016.03.009]
   Drury-Grogan ML, 2017, J SYST SOFTWARE, V131, P248, DOI 10.1016/j.jss.2017.06.003
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Ge XC, 2007, LECT NOTES COMPUT SC, V4536, P226
   Geer D, 2010, COMPUTER, V43, P12, DOI 10.1109/MC.2010.159
   Grawitch M.J., 2004, UNDERSTANDING STAT, V3, P231, DOI DOI 10.1207/S15328031US0304_2
   Hamid B, 2018, COMPUT SECUR, V77, P315, DOI 10.1016/j.cose.2018.03.016
   Heeager LT, 2018, INFORM SOFTWARE TECH, V103, P22, DOI 10.1016/j.infsof.2018.06.004
   Holvitie J, 2018, INFORM SOFTWARE TECH, V96, P141, DOI 10.1016/j.infsof.2017.11.015
   Howard M., 2006, The security development lifecycle, V8
   Kasauli R, 2018, EUROMICRO CONF PROC, P470, DOI 10.1109/SEAA.2018.00082
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Kuhn R, 2018, COMPUTER, V51, P82, DOI 10.1109/MC.2018.3011039
   Laukkarinen T, 2018, INFORM SOFTWARE TECH, V97, P176, DOI 10.1016/j.infsof.2018.01.011
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McDermott J., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P55, DOI 10.1109/CSAC.1999.816013
   McDermott J, 2001, 17TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P366, DOI 10.1109/ACSAC.2001.991553
   McGraw G., 2006, Software security: building security in
   Mesquida, 2018, J SOFTW
   Microsoft, 2019, AGIL DEV US MICR SEC
   Middleton A, 2014, J COMMUN GENET, V5, P291, DOI 10.1007/s12687-014-0184-2
   Mitropoulos D, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.136
   Morrison P, 2018, INFORM SOFTWARE TECH, V102, P146, DOI 10.1016/j.infsof.2018.05.011
   Nembhard FD, 2019, EURASIP J INF SECUR, DOI 10.1186/s13635-019-0092-4
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   NIST, 2018, SOURC COD SEC AN
   Nurdiani I, 2019, J SYST SOFTWARE, V156, P1, DOI 10.1016/j.jss.2019.05.035
   Oueslati Hela, 2016, International Journal of Secure Software Engineering, V7, P17, DOI 10.4018/IJSSE.2016010102
   OWASP, 2018, OW TOP 10 APPL SEC R
   OWASP SAMM, 2019, SOFTW ASS MAT MOD
   Oyetoyan TD, 2018, LECT NOTES BUS INF P, V314, P86, DOI 10.1007/978-3-319-91602-6_6
   Oyetoyan TD, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P548, DOI 10.1109/ARES.2016.103
   Phillips DM, 2018, INFORM SOFTWARE TECH, V94, P150, DOI 10.1016/j.infsof.2017.10.006
   Rahikkala J., 2015, SPLST, P61
   Rice T., 2018, FUNDAMENTAL PRACTICE, P38
   Rindell Kalle, 2017, International Journal of Secure Software Engineering, V8, P43, DOI 10.4018/IJSSE.2017010103
   RINDELL K, 2018, P 13 INT C AV REL SE, DOI DOI 10.1145/3230833.3233274
   Rindell K, 2017, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2017), DOI 10.1145/3098954.3103170
   SANS, 2011, CWE SANS TOP 25 MOST
   Scandariato R, 2015, REQUIR ENG, V20, P163, DOI 10.1007/s00766-013-0195-2
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Schweigert T, 2014, J SOFTW-EVOL PROC, V26, P513, DOI 10.1002/smr.1617
   Séguin N, 2012, LECT NOTES BUS INF P, V111, P1
   Silva FS, 2015, INFORM SOFTWARE TECH, V58, P20, DOI 10.1016/j.infsof.2014.09.012
   Smiderle Rodrigo, 2020, NANOSCALE RES LETT, V7, DOI [10.1186/s40561-019-0098-x, DOI 10.1186/S11671-019-3002-2]
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Such JM, 2016, COMPUT SECUR, V60, P117, DOI 10.1016/j.cose.2016.03.009
   Theisen C, 2018, INFORM SOFTWARE TECH, V104, P94, DOI 10.1016/j.infsof.2018.07.008
   Tondel IA, 2008, IEEE SOFTWARE, V25, P20, DOI 10.1109/MS.2008.19
   Tsipenyuk K, 2005, IEEE SECUR PRIV, V3, P81, DOI 10.1109/MSP.2005.159
   Turner R., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P153
   Turpe S., 2017, SECSK ESORICS, P34
   VAHTI, 2015, VAHTI OHJ
   VersionOne, 2018, 12 ANN STAT AG SURV
   Viega J., 2002, BUILDING SECURE SOFT
   Wäyrynen J, 2004, LECT NOTES COMPUT SC, V3134, P117
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L, 2018, IEEE SOFTWARE, V35, P76, DOI 10.1109/MS.2018.290110854
   Younas M, 2018, INFORM SOFTWARE TECH, V103, P142, DOI 10.1016/j.infsof.2018.06.014
   CAREER DEV TRANSIT E
NR 86
TC 21
Z9 22
U1 6
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106488
DI 10.1016/j.infsof.2020.106488
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000002
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Melegati, J
   Guerra, E
   Wang, XF
AF Melegati, Jorge
   Guerra, Eduardo
   Wang, Xiaofeng
TI Understanding Hypotheses Engineering in Software Startups through a Gray
   Literature Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE hypotheses engineering; software startups; gray literature review
ID MULTI-VOCAL LITERATURE; EXPERIMENTATION; GUIDELINES; DESIGN; MODEL
AB Context: The higher availability of software usage data and the influence of the Lean Startup led to the rise of experimentation in software engineering, a new approach for development based on experiments to understand the user needs. In the models proposed to guide this approach, the first step is generally to identify, prioritize, and specify the hypotheses that will be tested through experimentation. However, although practitioners have proposed several techniques to handle hypotheses, the scientific literature is still scarce.
   Objective: The goal of this study is to understand what activities, as proposed in industry, are entailed to handle hypotheses, facilitating the comparison, creation, and evaluation of relevant techniques.
   Methods: We performed a gray literature review (GLR) on the practices proposed by practitioners to handle hypotheses in the context of software startups. We analyzed the identified documents using thematic synthesis.
   Results: The analysis revealed that techniques proposed for software startups in practice compress five different activities: elicitation, prioritization, specification, analysis, and management. It also showed that practitioners often classify hypotheses in types and which qualities they aim for these statements.
   Conclusion: Our results represent the first description for hypotheses engineering grounded in practice data. This mapping of the state-of-practice indicates how research could go forward in investigating hypotheses for experimentation in the context of software startups. For practitioners, they represent a catalog of available practices to be used in this context.
C1 [Melegati, Jorge; Guerra, Eduardo; Wang, Xiaofeng] Free Univ Bozen Bolzano, Piazza Domenicani 3, Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Melegati, J (corresponding author), Free Univ Bozen Bolzano, Piazza Domenicani 3, Bolzano, Italy.
EM jmelegatigoncalves@unibz.it; eduardo.guerra@unibz.it;
   xiaofeng.wang@unibz.it
RI Wang, Xiaofeng/E-5077-2016; Guerra, Eduardo/G-2476-2012; Melegati,
   Jorge/AAG-3925-2021; Harrison, Dylan/AFP-8142-2022
OI Guerra, Eduardo/0000-0001-5555-3487; Melegati,
   Jorge/0000-0003-1303-4173; 
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   [Anonymous], 2013, BUSINESS MODEL GENER
   Auer F, 2018, EUROMICRO CONF PROC, P335, DOI 10.1109/SEAA.2018.00062
   Bajwa SS, 2017, EMPIR SOFTW ENG, V22, P2373, DOI 10.1007/s10664-016-9458-0
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Beck K., 2011, MANIFESTO AGILE SOFT
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Blank S., 2012, The Startup Owner's Manual The Step-by-Step Guide for Building a Great Company
   Bortolini RF, 2021, MANAGE DECIS, V59, P1765, DOI 10.1108/MD-07-2017-0663
   Bosch J., 2018, SIBW, P177
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dalpiaz F, 2019, INFORM SOFTWARE TECH, V110, P3, DOI 10.1016/j.infsof.2018.12.007
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   Fabijan A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2113
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Ferrari A, 2016, REQUIR ENG, V21, P333, DOI 10.1007/s00766-016-0249-3
   Franch X, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P411, DOI 10.1109/REW.2017.85
   Frederiksen DL, 2017, INT ENTREP MANAG J, V13, P169, DOI 10.1007/s11365-016-0411-x
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Gottschalk S, 2020, LECT NOTES BUS INF P, V391, P276, DOI 10.1007/978-3-030-52306-0_18
   Gutbrod M., 2018, SIBW, P245
   Gutbrod M, 2018, INT ICE CONF ENG
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Kerr WR, 2014, J ECON PERSPECT, V28, P25, DOI 10.1257/jep.28.3.25
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maalem Sourour, 2016, Journal of Innovation in Digital Ecosystems, V3, P15, DOI 10.1016/j.jides.2016.05.001
   Maurya Ash., 2012, RUNNING LEAN ITERATE
   Melegati J., 2020, HYPOTHESES ELICITATI, P211, DOI [10.1007/978-3-030-49392-9_14, DOI 10.1007/978-3-030-49392-9_14]
   Melegati J, 2019, PROCEEDINGS OF THE 2ND ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE-INTENSIVE BUSINESS: START-UPS, PLATFORMS, AND ECOSYSTEMS (IWSIB '19), P13, DOI 10.1145/3340481.3342732
   Melegati J, 2019, 2019 IEEE/ACM JOINT 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING AND 1ST INTERNATIONAL WORKSHOP ON DATA-DRIVEN DECISIONS, EXPERIMENTATION AND EVOLUTION (RCOSE-DDREE 2019), P16, DOI 10.1109/RCoSE/DDrEE.2019.00011
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Olsson HH, 2015, LECT NOTES BUS INF P, V210, P154, DOI 10.1007/978-3-319-19593-3_13
   Olsson HH, 2014, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2014.75
   Osterwalder A., 2014, VALUE PROPOSITION DE
   Osterwalder A, 2005, COMMUN ASSOC INF SYS, V16
   Pantiuchina J, 2017, LECT NOTES BUS INF P, V283, P167, DOI 10.1007/978-3-319-57633-6_11
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Power K., 2019, THESIS NUI GALWAY
   Ries E, 2011, The Lean Startup
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salomo S, 2007, J PROD INNOVAT MANAG, V24, P285, DOI 10.1111/j.1540-5885.2007.00252.x
   Schermann G, 2018, INFORM SOFTWARE TECH, V99, P41, DOI 10.1016/j.infsof.2018.02.010
   Sommerville I, 2005, IEEE SOFTWARE, V22, P16, DOI 10.1109/MS.2005.13
   Sutcliffe A, 2013, S VIS LANG HUM CEN C, P92, DOI 10.1109/RE.2013.6636709
   Thomke SH, 1998, MANAGE SCI, V44, P743, DOI 10.1287/mnsc.44.6.743
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Wautelet Y, 2014, LECT NOTES COMPUT SC, V8484, P211, DOI 10.1007/978-3-319-07881-6_15
   Wohlin C., 2012, Experimentation in Software Engineering
   Yaman SG, 2016, LECT NOTES COMPUT SC, V10027, P344, DOI 10.1007/978-3-319-49094-6_22
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 60
TC 8
Z9 8
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106465
DI 10.1016/j.infsof.2020.106465
EA FEB 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA QL2TC
UT WOS:000620932900001
DA 2024-07-18
ER

PT J
AU Valderas, P
   Torres, V
   Pelechano, V
AF Valderas, Pedro
   Torres, Victoria
   Pelechano, Vicente
TI A microservice composition approach based on the choreography of BPMN
   fragments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Microservices; Composition; Choreography; BPMN
ID DESIGN; ORCHESTRATION
AB Context: Microservices must be composed to provide users with complex and elaborated functionalities. It seems that the decentralized nature of microservices makes a choreography style more appropriate to achieve such cooperation, where lighter solutions based on asynchronous events are generally used. However, a microservice composition based on choreography distributes the flow logic of the composition among microservices making further analysis and updating difficult, i.e. there is not a big picture of the composition that facilitates these tasks. Business Process Model and Notation (BPMN) is the OMG standard developed to represent Business Processes (BPs), being widely used to define the big picture of such compositions. However, BPMN is usually considered in orchestration-based solutions, and orchestration can be a drawback to achieve the decoupling pursued by a microservice architecture.
   Objective: Defining a microservice composition approach that allows us to create a composition in a BPMN model, which facilitates further analysis for taking engineering decisions, and execute them through an event-based choreography to have a high degree of decoupling and independence among microservices.
   Method: We followed a research methodology for information systems that consists of a 5-step process: awareness of the problem, suggestion, development, evaluation, and conclusion.
   Results: We presented a microservice composition approach based on the choreography of BPMN fragments. On the one hand, we propose to describe the big picture of the composition with a BPMN model, providing a valuable mechanism to analyse it when engineering decisions need to be taken. On the other hand, this model is split into fragments in order to be executed through an event-based choreography form, providing the high degree of decoupling among microservices demanded in this type of architecture. This composition approach is supported by a microservice architecture defined to achieve that both descriptions of a composition (big picture and split one) coexist. A realization of this architecture in Java/Spring technology is also presented.
   Conclusions: The evaluation that is done to our work allows us to conclude that the proposed approach for composing microservices is more efficient than solutions based on ad-hoc development.
C1 [Valderas, Pedro; Torres, Victoria; Pelechano, Vicente] Univ Politecn Valencia, PROS Res Ctr, Cami Vera S-N, E-46022 Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Valderas, P (corresponding author), Univ Politecn Valencia, PROS Res Ctr, Cami Vera S-N, E-46022 Valencia, Spain.
EM pvalderas@pros.upv.es; vtorres@pros.upv.es; pele@pros.upv.es
RI Valderas, Pedro/X-3605-2018; Torres, Victoria/B-3828-2017
OI Valderas, Pedro/0000-0002-4156-0675; Torres,
   Victoria/0000-0002-2039-2174
FU Spanish State Research Agency [TIN2017-84094-R]; ERDF
FX This work has been developed with the financial support of the Spanish
   State Research Agency under the project TIN2017-84094-R and co-financed
   with ERDF.
CR Alpers S, 2015, IEEE INT ENTERP, P71, DOI 10.1109/EDOCW.2015.32
   [Anonymous], 2011, BUS PROC MOD NOT BPM
   Autili M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P391, DOI 10.1109/CSMR-WCRE.2014.6747202
   Azkaban, 2019, OP SOURC WORKF MAN
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basu S, 2012, ACM SIGPLAN NOTICES, V47, P191, DOI 10.1145/2103621.2103680
   Bocciarelli P., 2012, P 2012 WINT SIM C WS, P227
   Bocciarelli P, 2018, P 50 COMP SIM C, P24
   Bocciarelli P, 2014, SOFTW SYST MODEL, V13, P573, DOI 10.1007/s10270-013-0345-5
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P187, DOI 10.1109/ICSA-C.2019.00041
   Bravetti M, 2007, LECT NOTES COMPUT SC, V4829, P34
   Busi N, 2006, LECT NOTES COMPUT SC, V4038, P63
   Butzin B, 2016, IEEE INT C EMERG
   Carbone M, 2013, ACM SIGPLAN NOTICES, V48, P263, DOI 10.1145/2480359.2429101
   Chandramouli R., 2019, 800204 NIST SP
   Chor, 2014, CHOR PROGR LANG
   Collina M, 2012, 2012 IEEE 23RD INTERNATIONAL SYMPOSIUM ON PERSONAL INDOOR AND MOBILE RADIO COMMUNICATIONS (PIMRC), P36, DOI 10.1109/PIMRC.2012.6362813
   Croxford M., 2006, P 10 AUSTR WORKSH SA, P43
   Debois S, 2017, RIV PUBL SER AUTOMAT, P99
   Decker G., 2008, ADV INFORM SYSTEMS E, P5074
   Dräxler S, 2017, IEEE INT CONF COMM, P973, DOI 10.1109/ICCW.2017.7962785
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Ebrahimifard A., 2016, Journal of E-Technology, V7, P1
   Fowler M., 2015, **NON-TRADITIONAL**
   Gabbrielli M., 2018, A language-based approach for interoperability of IoT platforms
   Giallorenzo S, 2018, LECT NOTES COMPUT SC, V11230, P22, DOI 10.1007/978-3-030-02671-4_2
   Guidi C., Present and Ulterior Software Engineering, DOI 10.1007/978-3-319-67425-4_13
   Gutierrez-Fernandez A.M., 2016, P INT C BUS PROC MAN, P252
   Harmon P., 2011, BUS PROCESS TRENDS, V36, P1
   Hull R, 2011, LECT NOTES COMPUT SC, V6551, P1, DOI 10.1007/978-3-642-19589-1_1
   Indrasiri K., 2018, Integrating Microservices, P167
   ING Baker, 2019, ORCH MICR BAS PROC F
   Jayawardana Y, 2018, INT CONF ADV ICT, P78, DOI 10.1109/ICTER.2018.8615473
   Kazhamiakin R, 2006, LECT NOTES COMPUT SC, V4184, P227
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kouchaksaraei HR, 2018, 2018 4TH IEEE CONFERENCE ON NETWORK SOFTWARIZATION AND WORKSHOPS (NETSOFT), P344, DOI 10.1109/NETSOFT.2018.8460134
   Leopold H, 2016, IEEE SOFTWARE, V33, P26, DOI 10.1109/MS.2015.81
   Leshob A., 2019, P C COMPL INT SOFTW, P123
   Lewis James, 2014, Microservices
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Monteiro D, 2018, LECT NOTES COMPUT SC, V11048, P191, DOI 10.1007/978-3-030-00761-4_13
   Montesi Fabrizio., 2014, Choreographic Programming
   Netflix Conductor, 2019, WORKFLOW ORCHESTRATI
   Newman S., 2015, BUILDING MICROSERVIC
   Nie HC, 2014, ENTERP INF SYST-UK, V8, P512, DOI 10.1080/17517575.2014.880131
   Nikaj A, 2019, SOFTW SYST MODEL, V18, P1195, DOI 10.1007/s10270-017-0653-2
   Nysetvold A.G., 2006, ADV TOPICS DATABASE, V5, P79, DOI DOI 10.4018/978-1-59140-935-9.CH005
   Oberhauser R, 2016, P 6 INT S BUS MOD SO, V1, P134, DOI [10.5220/0006223001340143, DOI 10.5220/0006223001340143.INSTICC]
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Pesic M, 2007, IEEE INT ENTERP DIST, P287, DOI 10.1109/EDOC.2007.14
   Petrasch R, 2017, INT JOINT CONF COMP
   Pininterest Pinball, 2019, SCALABLE WORKFLOW MA
   Port D., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P128, DOI 10.1109/APSEC.1999.809593
   Preda M.D., 2016, ARXIVPREPRINTARXIV16
   Rajasekar A., 2012, CHALLENGES SOLUTIONS, P74
   Rudrabhatla CK, 2018, INT J ADV COMPUT SC, V9, P18
   Safina L, 2016, INT CON ADV INFO NET, P430, DOI 10.1109/AINA.2016.95
   Salaün G, 2008, SEFM 2008: SIXTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P313, DOI 10.1109/SEFM.2008.42
   Slaats Tijs, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P339, DOI 10.1007/978-3-642-40176-3_28
   Su Jianwen., 2007, Web Services and Formal Methods, P1
   Uber Cadence, 2019, FAULT OBLIVIOUS STAT
   Vaishnavi V., 2017, Design Science Research in Information Systems
   van der Aalst W., 2006, DAGST SEM P SCH DAGS
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Wohlin C., 2012, Experimentation in Software Engineering
   Yahia EB, 2016, LECT NOTES COMPUT SC, V9671, P3, DOI 10.1007/978-3-319-38791-8_1
   Zeebe, 2019, WORKFL ENG MICR ORCH
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 68
TC 23
Z9 25
U1 0
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106370
DI 10.1016/j.infsof.2020.106370
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700004
OA Green Published
DA 2024-07-18
ER

PT J
AU Perticas, CF
   Indurkhya, B
AF Perticas, Catalin F.
   Indurkhya, Bipin
TI Neural networks learn to detect and emulate sorting algorithms from
   images of their execution traces
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Computer program traces; Program behavior; Program induction;
   Algorithms; Neural networks; Program visualization; Data representation
AB Context: Recent advancements in the applicability of neural networks across a variety of fields, such as computer vision, natural language processing and others, have re-sparked an interest in program induction methods. (Kitzelman [1], Gulwani et al. [2] or Kant [3].)
   Problem: When performing a program induction task, it is not feasible to search across all possible programs that map an input to an output because the number of possible combinations or sequences of instructions is too high: at least an exponential growth based on the generated program length. Moreover, there does not exist a general framework to formulate such program induction tasks and current computational limitations do not allow a very wide range of machine learning applications in the field of computer programs generation.
   Objective: In this study, we analyze the effectiveness of execution traces as learning representations for neural network models in a program induction set-up. Our goal is to generate visualizations of program execution dynamics, specifically of sorting algorithms, and to apply machine learning techniques on them to capture their semantics and emulate their behavior using neural networks.
   Method: We begin by classifying images of execution traces for algorithms working on a finite array of numbers, such as various sorting and data structures algorithms. Next we experiment with detecting sub-program patterns inside the trace sequence of a larger program. The last step is to predict future steps in the execution of various sorting algorithms. More specifically, we try to emulate their behavior by observing their execution traces. We also discuss generalizations to other classes of programs, such as 1-D cellular automata.
   Results: Our experiments show that neural networks are capable of modeling the mechanisms underlying simple algorithms if enough execution traces are provided as data. We compare the performance of our program induction model with other similar experimental results from Graves et al. [4] and Vinyals et al. [5]. We were also able to demonstrate that sorting algorithms can be treated both as images displaying spatial patterns, as well as sequential instructions in a domain specific language, such as swapping two elements. We tested our approach on three types of increasingly harder tasks: detection, recognition and emulation.
   Conclusions: We demonstrate that simple algorithms can be modelled using neural networks and provide a method for representing specific classes of programs as either images or sequences of instructions in a domain-specific language, such that a neural network can learn their behavior. We consider the complexity of various set-ups to arrive at some improvements based on the data representation type. The insights from our experiments can be applied for designing better models of program induction.
C1 [Perticas, Catalin F.] Babes Bolyai Univ Cluj Napoca, Cluj Napoca, Romania.
   [Indurkhya, Bipin] Jagiellonian Univ, Cognit Sci Dept, Krakow, Poland.
C3 Babes Bolyai University from Cluj; Jagiellonian University
RP Indurkhya, B (corresponding author), Inst Filozofii UJ, Ul Grodzka 52, PL-31044 Krakow, Poland.
EM perticascatalin@gmail.com; bipin.indurkhya@uj.edu.pl
RI Indurkhya, Bipin/Q-7115-2017
OI Indurkhya, Bipin/0000-0002-3798-9209
FU European Regional Development Fund; Romanian Government through the
   Competitiveness Operational Programme [P_37_679, 103319, 157/16.12.2016]
FX This work was supported by the European Regional Development Fund and
   the Romanian Government through the Competitiveness Operational
   Programme 2014-2020, project ID P_37_679, MySMIS code 103319, contract
   no. 157/16.12.2016.
CR [Anonymous], 2014, NEURAL TURING MACHIN
   Devlin J., 2017, 31 C NEUR INF PROC S
   Devlin J, 2017, PR MACH LEARN RES, V70
   Diosan L., 2017, EUR C APPL EV COMP
   Fittkau F, 2015, INT C PROGRAM COMPRE, P266, DOI 10.1109/ICPC.2015.37
   Gatys L. A., 2015, J VISUAL-JAPAN
   Graves A., 2014, Generating sequences with recurrent neural networks, P1
   Graves A, 2016, NATURE, V538, P471, DOI 10.1038/nature20101
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Guzmán H, 2014, UKSIM-AMSS EIGHTH EUROPEAN MODELLING SYMPOSIUM ON COMPUTER MODELLING AND SIMULATION (EMS 2014), P126, DOI 10.1109/EMS.2014.40
   Huang HN, 2017, PROC IEEE INT CONF S, P623, DOI 10.1109/ICSME.2017.23
   Hudson D.A., 2018, 6 INT C LEARN REPR I
   Jaeger H., 2014, 31 JAC U
   Kant N., 2018, RECENT ADV NEURAL PR
   Kitzelman E., 2009, INT WORKSH APPR APPL
   Kraska T, 2018, INT CONF MANAGE DATA, P489, DOI 10.1145/3183713.3196909
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Ling W., 2017, Program induction by rationale generation: Learning to solve and explain algebraic word problems
   Nowozin Sebastian, 2017, INT C LEARN REPR
   Parisotto Emilio, 2017, 5 INT C LEARN REPR I
   Pascanu R, 2015, INT CONF ACOUST SPEE, P1916, DOI 10.1109/ICASSP.2015.7178304
   Perez J., 2019, 7 INT C LEARN REPR I
   Perticas C.F., 2017, P PSYCH PROGR
   Rawat K., 2011, INT J VEH TECHNOL
   Santoro A, 2017, SIMPLE NEURAL NETWOR
   Shah M. D., 2016, IEEE WORK C SOFTW VI
   Socher R., 2012, JOINT C EMP METH NAT
   Vinyals O., 2016, 4 INT C LEARN REPR I
   Vinyals O., 2016, POINTER NETWORKS
   WOLFRAM S, 1983, REV MOD PHYS, V55, P601, DOI 10.1103/RevModPhys.55.601
NR 30
TC 2
Z9 2
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106350
DI 10.1016/j.infsof.2020.106350
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800001
DA 2024-07-18
ER

PT J
AU Sabor, KK
   Hamdaqa, M
   Hamou-Lhadj, A
AF Sabor, Korosh Koochekian
   Hamdaqa, Mohammad
   Hamou-Lhadj, Abdelwahab
TI Automatic prediction of the severity of bugs using stack traces and
   categorical features
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug severity; Stack traces; Machine learning mining software
   repositories; Software maintenance
AB Context: The severity of a bug is often used as an indicator of how a bug negatively affects system functionality. It is used by developers to prioritize bugs which need to be fixed. The problem is that, for various reasons, bug submitters often enter the incorrect severity level, delaying the bug resolution process. Techniques that can automatically predict the severity of a bug can significantly reduce the bug triaging overhead. In our previous work, we showed that the accuracy of description-based severity prediction techniques could be significantly improved by using stack traces as a source of information.
   Objective: In this study, we expand our previous work by exploring the effect of using categorical features, in addition to stack traces, to predict the severity of bugs. These categorical features include faulty product, faulty component, and operating system. We experimented with other features and observed that they do not improve the severity prediction accuracy. A Software system is composed of many products; each has a set of components. Components interact with each to provide the functionality of the product. The operating system field refers to the operating system on which the software was running on during the crash.
   Method: The proposed approach uses a linear combination of stack trace and categorical features similarity to predict the severity. We adopted a cost sensitive K Nearest Neighbor approach to overcome the unbalance label distribution problem and improve the classifier accuracy.
   Results: Our experiments on bug reports of Eclipse submitted between 2001 and 2015 and Gnome submitted between 1999 and 2015 show that the accuracy of our severity prediction approach can be improved from 5% to 20% by considering categorical features, in addition to stack traces.
   Conclusion: The accuracy of predicting the severity of bugs is higher when combining stack traces and three categorical features, product, component, and operating system.
C1 [Sabor, Korosh Koochekian; Hamou-Lhadj, Abdelwahab] Concordia Univ, Dept Elect & Comp Engn, Software Behav Anal SBA Res Lab, Montreal, PQ, Canada.
   [Hamdaqa, Mohammad] Reykjavik Univ, Sch Comp Sci, Reykjavik, Iceland.
C3 Concordia University - Canada; Reykjavik University
RP Sabor, KK (corresponding author), Concordia Univ, Dept Elect & Comp Engn, Software Behav Anal SBA Res Lab, Montreal, PQ, Canada.
EM k_kooche@ece.concordia.ca; mhamdaqa@ru.is; abdelw@ece.concordia.ca
RI Hamdaqa, Mohammad/AAE-5007-2020
OI Hamdaqa, Mohammad/0000-0003-4927-2755; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
CR [Anonymous], [No title captured]
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Davidson JL, 2011, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2011.6070386
   Gou J., 2012, J. Inf. Comput. Sci, V9, P1429
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2013, EUR CON SFTWR MTNCE, P327, DOI 10.1109/CSMR.2013.42
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Lerch J, 2013, EUR CON SFTWR MTNCE, P69, DOI 10.1109/CSMR.2013.17
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Maiga A, 2015, PROC IEEE INT CONF S, P342, DOI 10.1109/ICSM.2015.7332485
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Sabor KK., 2016, Proceedings of the 26th Annual International Conference on Computer Science and Software Engineering, P96
   Sabor KK, 2018, IEEE INT SYMP SOFTW, P232, DOI [10.1109/1SSREW.2018.00011, 10.1109/ISSREW.2018.00011]
   Sabor KK, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P240, DOI 10.1109/QRS.2017.35
   Sharma G, 2015, PROCEDIA COMPUT SCI, V70, P632, DOI 10.1016/j.procs.2015.10.059
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Witten IH, 2011, MOR KAUF D, P1
   Yang CZ, 2014, 2014 5TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND SERVICE SCIENCE (ICSESS), P216, DOI 10.1109/ICSESS.2014.6933548
   Yang CZ, 2012, ASIA PAC SOFWR ENG, P240, DOI 10.1109/APSEC.2012.144
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zhang J., 2003, KNN APPROACH UNBALAN
   Zhang T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1553, DOI 10.1145/2695664.2695872
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhenxing Qin, 2013, Knowledge Science, Engineering and Management. 6th International Conference, KSEM 2013. Proceedings. LNCS 8041, P112, DOI 10.1007/978-3-642-39787-5_10
NR 30
TC 25
Z9 25
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106205
DI 10.1016/j.infsof.2019.106205
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200005
DA 2024-07-18
ER

PT J
AU Lee, J
   Kang, S
   Jung, P
AF Lee, Jihyun
   Kang, Sungwon
   Jung, Pilsu
TI Test coverage criteria for software product line testing: Systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product line; Software product line testing; Test coverage;
   Test coverage criteria
AB Context: In software product line testing (SPLT), test coverage criterion is an important concept, as it provides a means of measuring the extent to which domain testing has been performed and redundant application testing can be avoided based on the test coverage level achieved in domain testing. However, no previous literature reviews on SPLT have addressed test coverage criterion in SPLT.
   Objective: The objectives of this paper are as follows: (1) to clarify the notions of test basis and test coverage criterion for SPLT; (2) to identify the test coverage criteria currently used for SPLT; (3) to investigate how various SPLT aspects, such as the SPLT method, variability implementation mechanism, and variability management approach, affect the choice of test coverage criterion for SPLT; and (4) to analyze the limitations of test coverage criteria currently used for SPLT.
   Method: This paper conducts a systematic review of test coverage criteria in SPLT with 78 selected studies.
   Results: We have several findings that can guide the future research on SPLT. One important finding is that choice of test coverage criterion in SPLT is independent from variability implementation mechanism, variability management, SPL approach, and binding time but is dependent on the variability representation used in development artifacts. Another that is easily overlooked is that SPL test coverage criteria with the same test coverage criterion names of single system testing neither adequately convey what should be covered by the test methods applying them, nor can they be more generally regarded as extensions or generalizations for SPLT of their corresponding test coverage criteria of single system testing.
   Conclusion: This study showed that SPL test coverage criteria should be defined or redefined so that they can clearly deliver the target properties to be satisfied by SPLT.
C1 [Lee, Jihyun] Jeonbuk Natl Univ, Dept Software Engn, 567 Baekje Daero, Jeonju Si, South Korea.
   [Kang, Sungwon; Jung, Pilsu] Korea Adv Inst Sci & Technol, Sch Comp, 291 Daehak Ro, Daejeon, South Korea.
C3 Jeonbuk National University; Korea Advanced Institute of Science &
   Technology (KAIST)
RP Kang, S (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, 291 Daehak Ro, Daejeon, South Korea.
EM jihyun30@jbnu.ac.kr; sungwon.kang@kaist.ac.kr; psjung@kaist.ac.kr
RI , sungwon/C-1765-2011
OI , sungwon/0000-0001-7947-8741; Lee, Jihyun/0000-0003-4512-806X
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Education [2017R1D1A3B03028609];
   NextGeneration Information Computing Development Program through the
   National Research Foundation of Korea (NRF) - Ministry of Science, ICT
   [NRF-2017M3C4A7066210]
FX This research was supported by the Basic Science Research Program
   through the National Research Foundation of Korea (NRF), funded by the
   Ministry of Education (2017R1D1A3B03028609); and by the NextGeneration
   Information Computing Development Program through the National Research
   Foundation of Korea (NRF), funded by the Ministry of Science, ICT
   (NRF-2017M3C4A7066210).
CR Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   [Anonymous], 2911912013 ISOIECIEE
   [Anonymous], CMUSEI2001TR022
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2004, SIGSOFT SOFTWARE ENG
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], P 5 WORKSH PROD FAM, DOI [10.1007/978-3-540-24667-1\15, DOI 10.1007/978-3-540-24667-1]
   Capilla R., 2013, SYSTEMS SOFTWARE VAR
   Cohen A, 2006, MOUVEMENT SOC, P53
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Jorgensen P., 2014, SOFTWARE TESTING CRA
   KAMSTIES E, 2003, LNCS, V3014, P5
   Kamsties E., 2003, 7 WORLD C INT DES PR
   Kauppinen R., 2004, P INT WORKSH SOFTW P, P7
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lee J., 2012, P 16 INT SOFTW PROD, P52
   Lity S, 2019, J SYST SOFTWARE, V147, P46, DOI 10.1016/j.jss.2018.09.090
   Lochau M, 2014, J SYST SOFTWARE, V91, P63, DOI 10.1016/j.jss.2013.11.1096
   Lochau M, 2012, SOFTWARE QUAL J, V20, P567, DOI 10.1007/s11219-011-9165-4
   Machado I.C., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2382756.2382783
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Mcgregor J.D., 2007, LECT NOTES COMPUTER, V6153, P104
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Naik K., 2008, SOFTWARE TESTING QUA
   Lamancha BP, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P23
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Reis S, 2007, LECT NOTES COMPUT SC, V4422, P321
   Reuys A., 2010, SOFTWARE PRODUCT LIN
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   WEYUKER EJ, 1988, COMMUN ACM, V31, P668, DOI 10.1145/62959.62963
NR 39
TC 14
Z9 16
U1 3
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106272
DI 10.1016/j.infsof.2020.106272
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800002
DA 2024-07-18
ER

PT J
AU Molléri, JS
   Petersen, K
   Mendes, E
AF Molleri, Jefferson Seide
   Petersen, Kai
   Mendes, Emilia
TI An empirically evaluated checklist for surveys in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Checklist; Assessment; Survey; Methodology
AB Context: Over the past decade Software Engineering research has seen a steady increase in survey-based studies, and there are several guidelines providing support for those willing to carry out surveys. The need for auditing survey research has been raised in the literature. Checklists have been used both to conduct and to assess different types of empirical studies, such as experiments and case studies.
   Objective: To operationalize the assessment of survey studies by means of a checklist. To fulfill such goal, we aim to derive a checklist from standards for survey research and further evaluate the appropriateness of the checklist in the context of software engineering research.
   Method: We systematically aggregated knowledge from 12 methodological studies supporting survey-based research in software engineering. We identified the key stages of the survey process and its recommended practices through thematic analysis and vote counting. We evaluated the checklist by applying it to existing surveys and analyzed the results. Thereafter, we gathered the feedback of experts (the surveys' authors) on our analysis and used the feedback to improve the survey checklist.
   Results: The evaluation provided insights regarding limitations of the checklist in relation to its understanding and objectivity. In particular, 19 of the 38 checklist items were improved according to the feedback received from experts.
   Conclusion: The proposed checklist is appropriate for auditing survey reports as well as a support tool to guide ongoing research with regard to the survey design process. A discussion on how to use the checklist and what its implications are for research practice is also provided.
C1 [Molleri, Jefferson Seide; Petersen, Kai; Mendes, Emilia] BTH, Valhallavagen 1, S-37141 Karlskrona, Sweden.
   [Molleri, Jefferson Seide] Simula Metropolitan Ctr Digital Engn, Pilestredet 52, N-0167 Oslo, Norway.
   [Petersen, Kai] Hsch Flensburg, D-24943 Flensburg, Germany.
C3 Blekinge Institute Technology
RP Molléri, JS (corresponding author), BTH, Valhallavagen 1, S-37141 Karlskrona, Sweden.; Molléri, JS (corresponding author), Simula Metropolitan Ctr Digital Engn, Pilestredet 52, N-0167 Oslo, Norway.
EM jefferson@simula.no
RI Molleri, Jefferson/AAY-3288-2020; Mendes, Maria E/B-4207-2015
OI Molleri, Jefferson/0000-0001-5629-5256; Mendes,
   Emilia/0000-0003-0449-5322; Petersen, Kai/0000-0002-1532-8223
FU Science Without Borders program; CNPq (National Council for Scientific
   and Technological Development - Brazil)
FX The work of Jefferson Seide Moiled is supported by the Science Without
   Borders program, funded by CNPq (National Council for Scientific and
   Technological Development - Brazil).
CR Akbar R., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P914, DOI 10.1109/ICCISci.2012.6297156
   Alreck P., 1994, SURVEY RES HDB
   [Anonymous], P 2 INT WORKSH COND
   [Anonymous], 2014, 8 ACM IEEE ESEM
   [Anonymous], 2015, EVIDENCE BASED SOFTW
   [Anonymous], 2005, Technical Report
   [Anonymous], 2014, P 8 ACMIEEE INT S EM, DOI DOI 10.1145/2652524.2652566
   [Anonymous], 2015, CLIN PHYTOSCIENCE, DOI DOI 10.1186/S40816-015-0013-0
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], 2003, SURVEY HDB
   [Anonymous], P 12 WORKSH EXPT SOF
   [Anonymous], P 10 ACM IEEE INT S
   [Anonymous], EASE
   Babbie E.R., 1973, Survey research methods
   Cater-Steel A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P197, DOI 10.1109/ISESE.2005.1541829
   Ciolkowski M., 2003, PracticalExperiences in the Design and Conduct of Surveys in Empirical SoftwareEngineering
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Conradi R., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Contreras RB, 2011, NEWSLETTER, V2011, P2
   Converse Jean., 2017, Survey research in the United States: Roots and emergence 1890-1960
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dawson C.W., 2005, Projects in computing and information systems: A student's guide
   de Mello Rafael M., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P279, DOI 10.1109/ESEM.2013.33
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Fowler F. J., 2013, Survey research methods
   Friese S., 2012, ATLAS TI 7 USER MANU
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Ji JZ, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P168
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., 2010, P INT S EMP SOFTW EN
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Lavrakas P.J., 2008, Self-Administered Questionnaire
   Linaker J., 2015, 5366801 LUND U SWEDE
   Malhotra MK, 1998, J OPER MANAG, V16, P407, DOI 10.1016/S0272-6963(98)00021-7
   Moher D, 2010, BMJ-BRIT MED J, V340, DOI [10.1136/bmj.c869, 10.1136/bmj.c332, 10.4103/0976-500X.72352, 10.1016/j.jclinepi.2010.02.005, 10.1186/1741-7015-8-18, 10.1016/j.ijsu.2011.09.004]
   Molleri JS, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962619
   Molléri JS, 2019, INFORM SOFTWARE TECH, V105, P117, DOI 10.1016/j.infsof.2018.08.008
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Pinsonneault A., 1993, Journal of Management Information Systems, V10, P75
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   SHAPIRO BS, 1995, PAIN, V61, P139, DOI 10.1016/0304-3959(94)00164-A
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Tong A, 2007, INT J QUAL HEALTH C, V19, P349, DOI 10.1093/intqhc/mzm042
   Torchiano M, 2017, IEEE-ACM INT WKSP CO, P33, DOI 10.1109/CESI.2017.5
   Torchiano M, 2013, IEEE-ACM INT WKSP CO, P21, DOI 10.1109/CESI.2013.6618465
   Wieringa Roel, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P161, DOI 10.1049/ic.2012.0020
   Wieringa R, 2012, INT SYMP EMP SOFTWAR, P157, DOI 10.1145/2372251.2372279
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2016, LECT NOTES BUS INF P, V240, P1, DOI 10.1007/978-3-319-40515-5_1
   Yang C, 2016, J SYST SOFTWARE, V113, P362, DOI 10.1016/j.jss.2015.12.016
NR 59
TC 26
Z9 27
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106240
DI 10.1016/j.infsof.2019.106240
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, YH
   Tao, JB
   Wotawa, F
AF Li, Yihao
   Tao, Jianbo
   Wotawa, Franz
TI Ontology-based test generation for automated and autonomous driving
   functions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Combinatorial testing; Ontologies; Test case generation; Autonomous
   driving; Input models
AB Context Ontologies are known as a formal and explicit conceptualization of entities, their interfaces, behaviors, and relationships. They have been applied in various application domains such as autonomous driving where ontologies are used for decision making, traffic description, auto-pilot etc. It has always been a challenge to test the corresponding safety-critical software systems in autonomous driving that have been playing an increasingly important role in our daily routines.
   Objective: Failures in these systems potentially not only cause great financial loss but also the loss of lives. Therefore, it is vital to obtain and cover as many as critical driving scenarios during auto drive testing to ensure that the system can always reach a fail-safe state under different circumstances.
   Method: We outline a general framework for testing, verification, and validation for automated and autonomous driving functions. The introduced method makes use of ontologies for describing the environment of autonomous vehicles and convert them to input models for combinatorial testing. The combinatorial test suite comprises abstract test cases that are mapped to concrete test cases that can be executed using simulation environments.
   Results: We discuss in detail on how to automatically convert ontologies to the corresponding combinatorial testing input models. Specifically, we present two conversion algorithms and compare their applicability using ontologies with different sizes. We also carried out a case study to further demonstrate the practical value of applying ontology-based test generation in industrial settings.
   Conclusion The proposed approach for testing autonomous driving takes ontologies describing the environment of autonomous vehicles, and automatically converts it to test cases that are used in a simulation environment to verify automated driving functions. The conversion relies on combinatorial testing. The first experimental results relying on an example from the automotive industry indicates that the approach can be used in practice.
C1 [Li, Yihao; Wotawa, Franz] Graz Univ Technol, Inst Software Technol, Inffeldgasse 16b, A-8010 Graz, Austria.
   [Tao, Jianbo] AVL List GmbH, Hans List Pl 1, A-8020 Graz, Austria.
   [Wotawa, Franz] Graz Univ Technol, Inst Software Technol, CD Lab Qual Assurance Methodol Autonomous Cyber P, Inffeldgasse 16b, A-8010 Graz, Austria.
C3 Graz University of Technology; Anstalt fur Verbrennungskraftmaschinen
   List; Graz University of Technology
RP Wotawa, F (corresponding author), Graz Univ Technol, Inst Software Technol, CD Lab Qual Assurance Methodol Autonomous Cyber P, Inffeldgasse 16b, A-8010 Graz, Austria.
EM yihao.li@ist.tugraz.at; wotawa@ist.tugraz.at
RI li, yihao/AAS-2033-2020
OI li, yihao/0000-0001-9874-0338; Wotawa, Franz/0000-0002-0462-2283
FU ECSEL JU [737469]; Austrian Federal Ministry of Transport, Innovation
   and Technology (BMVIT) under the program "ICT of the Future" between May
   2017 and April 2020; Austrian Federal Ministry for Digital and Economic
   Affairs; National Foundation for Research, Technology and Development
FX The research was supported by ECSEL JU under the project H2020 737469
   AutoDrive - Advancing fail-aware, fail-safe, and fail-operational
   electronic components, systems, and architectures for fully automated
   driving to make future mobility safer, affordable, and end-user
   acceptable. AutoDrive is funded by the Austrian Federal Ministry of
   Transport, Innovation and Technology (BMVIT) under the program "ICT of
   the Future" between May 2017 and April 2020. More information can be
   retrieved from https://iktderzukunft.atien/bmvit. The financial support
   by the Austrian Federal Ministry for Digital and Economic Affairs and
   the National Foundation for Research, Technology and Development is
   gratefully acknowledged.
CR Armand A, 2014, IEEE INT VEH SYM, P227, DOI 10.1109/IVS.2014.6856509
   Bagschik G., 2017, CORR
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Blomqvist Eva, 2012, Knowledge Engineering and Knowledge Management. 18th International Conference, EKAW 2012. Proceedings, P216, DOI 10.1007/978-3-642-33876-2_20
   Chen T., 2017, SAE TECH PAPER 2017, DOI [10.4271/2017-01-1992, DOI 10.4271/2017-01-1992]
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   Feilmayr C, 2016, DATA KNOWL ENG, V101, P1, DOI 10.1016/j.datak.2015.11.003
   Geyer S, 2014, IET INTELL TRANSP SY, V8, P183, DOI 10.1049/iet-its.2012.0188
   Grindal M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P255, DOI 10.1109/ASWEC.2007.27
   Grochtmann M., 1994, P STAR, V94, P93
   Hülsen M, 2011, IEEE INT VEH SYM, P993, DOI 10.1109/IVS.2011.5940415
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Kluck F., 2018, P 29 IEEE INT S SOFT
   Koopman P, 2016, SAE INT J TRANSP SAF, V4, P15, DOI 10.4271/2016-01-0128
   Kuhn R, 2009, COMPUTER, V42, P94, DOI 10.1109/MC.2009.253
   Li H, 2011, INT J COMPUT APPL T, V42, P213, DOI 10.1504/IJCAT.2011.045407
   Menzel T, 2018, IEEE INT VEH SYM, P1821, DOI 10.1109/IVS.2018.8500406
   Moser T, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P478
   N. Euro, 2017, AVT PROT V2 0 2
   N. Euro, 2017, TEST PROT SYST
   Naseer H., 2012, 15 INT MULT C
   Nasser V.H., 2007, THESIS
   Nguyen C.D., 2008, P 7 INT C AUTONOMOUS, V3, P1315
   OAMTC, EV 2 HIGHW ACC IS RE
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Preeti S, 2017, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2017.42
   Regele R, 2008, FOURTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS (ICAS 2008), P94, DOI 10.1109/ICAS.2008.10
   Satish P, 2014, IEEE ICST WORKSHOP, P88, DOI 10.1109/ICSTW.2014.11
   Satish P, 2013, IEEE ICST WORKSHOP, P331, DOI 10.1109/ICSTW.2013.44
   Schlenoff C, 2003, KNOWL ENG REV, V18, P243, DOI 10.1017/S0269888904000050
   Schuldt F., 2018, Automotive Systems Engineering II, P147
   Souza EF, 2013, IEEE INT ENTERP, P21, DOI 10.1109/EDOCW.2013.10
   SOUZA Edilson Alves de, 2014, THESIS, P179
   Spichkova M, 2015, INT C PAR DISTRIB SY, P847, DOI 10.1109/ICPADS.2015.115
   VanDerHorst R., 1994, P 6 ICTCT WORKSH SAL
   Vasanthapriyan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P472, DOI 10.1109/QRS-C.2017.82
   Vogel K, 2003, ACCIDENT ANAL PREV, V35, P427, DOI 10.1016/S0001-4575(02)00022-2
   Wotawa F, 2018, LECT NOTES COMPUT SC, V11146, P155, DOI 10.1007/978-3-319-99927-2_14
   Wotawa F, 2017, AUTOMATED DRIVING: SAFER AND MORE EFFICIENT FUTURE DRIVING, P519, DOI 10.1007/978-3-319-31895-0_22
   Xiong Z., 2013, ONTOLOGY SCENARIO OR, DOI [10.1061/9780784413036.210, DOI 10.1061/9780784413036.210]
   Xiong ZT, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P13, DOI 10.1109/ITSC.2016.7795524
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P370, DOI 10.1109/ICST.2013.52
NR 43
TC 50
Z9 54
U1 13
U2 72
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2020
VL 117
AR 106200
DI 10.1016/j.infsof.2019.106200
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JN4MX
UT WOS:000496874400006
DA 2024-07-18
ER

PT J
AU Trkman, M
   Mendling, J
   Trkman, P
   Krisper, M
AF Trkman, Marina
   Mendling, Jan
   Trkman, Peter
   Krisper, Marjan
TI Impact of the conceptual model's representation format on identifying
   and understanding user stories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID EMPIRICAL-EVALUATION; COGNITIVE FIT; SOURCE-CODE; MANAGEMENT; FRAMEWORK;
   QUALITY; FAMILY
AB Context Eliciting user stories is a major challenge for agile development approaches. Conceptual models are used to support the identification of user stories and increase their understanding. In many companies, existing model documentation stored as either use cases or BPMN models is available. However, these two types of business process models might not be equally effective for elicitation tasks due to their formats.
   Objective: We address the effectiveness of different elicitation tasks when supported either with visual or textual conceptual model. Since the agile literature shows little attention to reusing existing BPMN documentation, we propose several hypotheses to compare it to the use of textual use case models.
   Method: We conducted an experiment to compare the effectiveness of the two business process formats: textual use cases and visual BPMN models. We studied their effects on three elicitation tasks: identifying user stories and understanding their execution-order and integration dependencies.
   Results: The subjects better understood execution-order dependencies when visual input in the form of BPMN models was provided. The performance of the other two tasks showed no statistical differences.
   Conclusion: We addressed an important problem of user story elicitation: which informationally equivalent model (visual BPMN or textual use case) is more effective when identifying and understanding user stories.
C1 [Trkman, Marina] Jozef Stefan Inst, Jamova Cesta 39, Ljubljana 1000, Slovenia.
   [Mendling, Jan] Wirtschaftsuniv Wien WU Vienna, Inst Informat Business, Bldg D2,Entrance C,3rd Floor,Welthandelspl 1, A-1020 Vienna, Austria.
   [Trkman, Peter] Univ Ljubljana, Sch Econ & Business, Kardeljeva Ploscad 17, Ljubljana 1000, Slovenia.
   [Krisper, Marjan] Univ Ljubljana, Fac Comp & Informat Sci, Vecna Pot 113, Ljubljana 1000, Slovenia.
C3 Slovenian Academy of Sciences & Arts (SASA); Jozef Stefan Institute;
   University of Ljubljana; University of Ljubljana
RP Trkman, M (corresponding author), Jozef Stefan Inst, Jamova Cesta 39, Ljubljana 1000, Slovenia.
EM marina.trkman@gmail.com
RI Trkman, Marina/G-3517-2010; Trkman, Peter/A-7626-2010
OI Trkman, Peter/0000-0002-1664-8026; Trkman, Marina/0000-0003-0277-5822;
   Mendling, Jan/0000-0002-7260-524X
CR Abrahao S, 2011, INFORM SCIENCES, V181, P3356, DOI 10.1016/j.ins.2011.04.005
   Adams WJ, 2006, IEEE IPCCC, P143, DOI 10.1109/.2006.1629401
   Agarwal R., 1996, Journal of Management Information Systems, V13, P137
   Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   Anaya V, 2010, COMPUT IND, V61, P99, DOI 10.1016/j.compind.2009.10.013
   [Anonymous], 2009, MULT LEARN 2 ED
   [Anonymous], ADV INFORM SYST ENG
   [Anonymous], INT C ADV COMP ENG A
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], INT C SOFTW ENG APPL
   [Anonymous], 2014, ADV INFORM SYSTEMS E, DOI DOI 10.1007/978-3-319-07881-6_15
   [Anonymous], 1 INT C APPL DIG INF
   [Anonymous], 2008, BUSINESS PROCESS DRI
   BATRA D, 1990, COMMUN ACM, V33, P126, DOI 10.1145/75577.75579
   Bernárdez B, 2004, J RES PRACT INF TECH, V36, P247
   Cockburn A., 2001, Writing effective use cases
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Compeau D, 2012, INFORM SYST RES, V23, P1093, DOI 10.1287/isre.1120.0423
   Croson R, 2006, MANAGE SCI, V52, P323, DOI 10.1287/mnsc.1050.0436
   Fernández-Sáez AM, 2016, EMPIR SOFTW ENG, V21, P212, DOI 10.1007/s10664-014-9354-4
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Gemino A, 2004, REQUIR ENG, V9, P248, DOI 10.1007/s00766-004-0204-6
   Giraldo FD, 2019, SOFTWARE QUAL J, V27, P1239, DOI 10.1007/s11219-018-9434-6
   Giraldo FD, 2018, INFORM SYST, V77, P48, DOI 10.1016/j.is.2018.06.002
   Gregor S, 2006, MIS QUART, V30, P611
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   Juristo N., 2013, BASICS SOFTWARE ENG
   Klun M, 2018, BUS PROCESS MANAG J, V24, P786, DOI 10.1108/BPMJ-11-2016-0226
   Kovacic A., 2005, Management poslovnih procesov: Prenova in informatizacija poslovanja
   Krogstie J, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P305, DOI 10.1007/978-3-540-72677-7_19
   Kulshreshtha V, 2012, INT J COMPUT APPL T, V45, P28, DOI 10.1504/IJCAT.2012.050130
   Kummer TF, 2016, DECIS SUPPORT SYST, V87, P1, DOI 10.1016/j.dss.2016.04.004
   La Rosa M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430547
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Leffingwell D., 2011, Agile software requirements: Lean requirements practices for teams, programs, and the enterprise
   Leopold H, 2016, IEEE SOFTWARE, V33, P26, DOI 10.1109/MS.2015.81
   Lin JY, 2014, ASIAPAC SIGN INFO PR
   Lucassen G, 2018, LECT NOTES COMPUT SC, V10753, P227, DOI 10.1007/978-3-319-77243-1_14
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Martakis A, 2013, INT CONF RES CHAL
   Mendling Jan, 2019, Information Systems Frontiers, V21, P1111, DOI 10.1007/s10796-017-9823-6
   Mendling J, 2008, LECT NOTES BUS INF P, V7, P142
   Mendling J, 2012, DECIS SUPPORT SYST, V53, P195, DOI 10.1016/j.dss.2011.12.013
   Milicic Ana, 2014, International Journal of Product Lifecycle Management, V7, P3, DOI 10.1504/IJPLM.2014.065456
   Narayanan A, 2015, PROD OPER MANAG, V24, P1216, DOI 10.1111/poms.12343
   Nolte A, 2016, DECIS SUPPORT SYST, V88, P98, DOI 10.1016/j.dss.2016.06.002
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Patton J., 2014, USER STORY MAPPING D
   Recker J, 2011, MIS QUART, V35, P57
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Silva TR, 2020, COGN TECHNOL WORK, V22, P437, DOI 10.1007/s10111-019-00566-3
   Rosenthal R., 1966, Experimenter effects in behavioral research
   Sabegh MAJ, 2017, J DATABASE MANAGE, V28, P56, DOI 10.4018/JDM.2017040103
   Saghafi A, 2014, P ANN HICSS, P4609, DOI 10.1109/HICSS.2014.567
   Sandkuhl K, 2016, LECT NOTES BUS INF P, V267, P225, DOI 10.1007/978-3-319-48393-1_16
   Scanniello G, 2018, EMPIR SOFTW ENG, V23, P2695, DOI 10.1007/s10664-017-9591-4
   SWELLER J, 1989, J EDUC PSYCHOL, V81, P457, DOI 10.1037/0022-0663.81.4.457
   Trkman M, 2016, INFORM SOFTWARE TECH, V71, P58, DOI 10.1016/j.infsof.2015.10.006
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Vessey I, 1991, INFORM SYST RES, V2, P63, DOI 10.1287/isre.2.1.63
   Vom Brocke J., 2017, BUSINESS PROCESS MAN
   Wautelet Y, 2016, LECT NOTES COMPUT SC, V9975, P127, DOI 10.1007/978-3-319-47717-6_11
   Wautelet Y, 2016, INT CONF RES CHAL, P477
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yan ZQ, 2012, INFORM SOFTWARE TECH, V54, P380, DOI 10.1016/j.infsof.2011.11.005
NR 73
TC 11
Z9 12
U1 5
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2019
VL 116
AR 106169
DI 10.1016/j.infsof.2019.08.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JM6SN
UT WOS:000496342000003
OA Green Published
DA 2024-07-18
ER

PT J
AU Gomes, LAF
   Torres, RD
   Côrtes, ML
AF Ferreira Gomes, Luiz Alberto
   Torres, Ricardo da Silva
   Cortes, Mario Lticio
TI Bug report severity level prediction in open source software: A survey
   and research opportunities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software maintenance; Bug tracking systems; Bug reports; Severity level
   prediction; Software repositories; Systematic mapping; Machine learning
ID CHALLENGES; SMOTE
AB Context: The severity level attribute of a bug report is considered one of the most critical variables for planning evolution and maintenance in Free/Libre Open Source Software. This variable measures the impact the bug has on the successful execution of the software system and how soon a bug needs to be addressed by the development team. Both business and academic community have made an extensive investigation towards the proposal methods to automate the bug report severity prediction.
   Objective: This paper aims to provide a comprehensive mapping study review of recent research efforts on automatically bug report severity prediction. To the best of our knowledge, this is the first review to categorize quantitatively more than ten aspects of the experiments reported in several papers on bug report severity prediction.
   Method: The mapping study review was performed by searching four electronic databases. Studies published until December 2017 were considered. The initial resulting comprised of 54 papers. From this set, a total of 18 papers were selected. After performing snowballing, more nine papers were selected.
   Results: From the mapping study, we identified 27 studies addressing bug report severity prediction on Free/Libre Open Source Software. The gathered data confirm the relevance of this topic, reflects the scientific maturity of the research area, as well as, identify gaps, which can motivate new research initiatives.
   Conclusion: The message drawn from this review is that unstructured text features along with traditional machine learning algorithms and text mining methods have been playing a central role in the most proposed methods in literature to predict bug severity level. This scenario suggests that there is room for improving prediction results using state-of-the-art machine learning and text mining algorithms and techniques.
C1 [Ferreira Gomes, Luiz Alberto] Pontificia Univ Catolica Minas Gerais, Inst Exact Sci & Informat ICEI, Pocos De Caldas, Brazil.
   [Torres, Ricardo da Silva; Cortes, Mario Lticio] Univ Estadual Campinas, UNICAMP, Inst Comp, Campinas, SP, Brazil.
C3 Pontificia Universidade Catolica de Minas Gerais; Universidade Estadual
   de Campinas
RP Gomes, LAF (corresponding author), Pontificia Univ Catolica Minas Gerais, Inst Exact Sci & Informat ICEI, Pocos De Caldas, Brazil.
EM luizgomes@pucpcaldas.br; rtorres@ic.unicamp.br; cortes@ic.unicamp.br
RI Torres, Ricardo da S./C-4526-2012
OI cortes, mario/0000-0002-3891-1593; Ferreira Gomes, Luiz
   Alberto/0000-0001-5430-1632
FU CAPES [88881.145912/2017-01]; CNPq [307560/2016-3]; FAPESP
   [2014/12236-1, 2015/24494-8, 2016/50250-1, 2017/20945-0];
   FAPESP-Microsoft Virtual Institute [2013/50155-0, 2013/50169-1,
   2014/50715-9]; Pontifical Catholic University of Minas Gerais;
   Coordenacito de Aperfeicoamento de Pessoal de Nivel Superior -Brasil
   (CAPES) [001]; Fundacao de Amparo a Pesquisa do Estado de Sao Paulo
   (FAPESP) [14/50715-9, 14/12236-1, 17/20945-0, 16/50250-1, 13/50155-0]
   Funding Source: FAPESP
FX Authors are grateful to CAPES (grant #88881.145912/2017-01), CNPq (grant
   #307560/2016-3), FAPESP (grants #2014/12236-1, #2015/24494-8,
   #2016/50250-1, and #2017/20945-0), the FAPESP-Microsoft Virtual
   Institute (grants #2013/50155-0, #2013/50169-1, and #2014/50715-9) and
   The Pontifical Catholic University of Minas Gerais by support to the
   first author through the Permanent Program For Professor Qualification
   (PPCD). This study was financed in part by the Coordenacito de
   Aperfeicoamento de Pessoal de Nivel Superior -Brasil (CAPES) -Finance
   Code 001.
CR Al-Hawari F., 2019, J KING SAUD U
   Ben-David A, 2008, EXPERT SYST APPL, V34, P825, DOI 10.1016/j.eswa.2006.10.022
   Beyer K, 1999, LECT NOTES COMPUT SC, V1540, P217
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Cavalcanti YC, 2014, J SOFTW-EVOL PROC, V26, P620, DOI 10.1002/smr.1639
   Chaturvedi K. K., 2012, International Journal of Open Source Software and Processes, V4, P32, DOI 10.4018/jossp.2013040103
   Chaturvedi KK, 2013, PROCEEDINGS OF THE 2013 13TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA 2013), P89, DOI 10.1109/ICCSA.2013.22
   Chawla NV, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P875, DOI 10.1007/978-0-387-09823-4_45
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen Z., 2016, SYNTH LECT ARTIF INT, V10, P1, DOI DOI 10.2200/S00737ED1V01Y201610AIM033
   Choeikiwong Teerawit, 2016, P INT MULTICONFERENC, V1
   Christianini N., 2000, INTRO SUPPORT VECTOR, V18
   de Souza EF, 2015, INFORM SOFTWARE TECH, V57, P378, DOI 10.1016/j.infsof.2014.05.016
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Facelli K., 2015, INTELIGENCIA ARTIFIC
   Feldman R., 2006, TEXT MINING HDB ADV
   Fernández A, 2018, J ARTIF INTELL RES, V61, P863, DOI 10.1613/jair.1.11192
   Flach P., 2012, MACHINE LEARNING ART, DOI [10.1017/CBO9780511973000, DOI 10.1017/CBO9780511973000]
   Gomaa WH., 2013, international journal of Computer Applications, V68, P13, DOI 10.5120/11638-7118
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gujral S, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON FUTURISTIC TRENDS ON COMPUTATIONAL ANALYSIS AND KNOWLEDGE MANAGEMENT (ABLAZE), P599, DOI 10.1109/ABLAZE.2015.7154933
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Haykin S, 1998, Neural Networks: A Comprehensive Foundation
   Heidarian A, 2016, PROCEEDINGS 2016 IEEE SECOND INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING SERVICE AND APPLICATIONS (BIGDATASERVICE 2016), P142, DOI 10.1109/BigDataService.2016.14
   Japkowicz N., 2011, EVALUATING LEARNING, DOI [10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803]
   Jeni LA, 2013, INT CONF AFFECT, P245, DOI 10.1109/ACII.2013.47
   Jin K., 2016, INFORMATION, V19, P651
   Jin K., 2016, CONT ENG SCI, V9, P933, DOI [10.12988/ces.2016.6695, DOI 10.12988/CES.2016.6695]
   Jin K., 2016, ADV SCI TECH LETT, V129, P19, DOI [10.14257/astl.2016.129.05, DOI 10.14257/AST1.2016.129.05]
   Kibriya E., 2005, AI 2004: Advances in artificial intelligence, P488
   Kim SB, 2006, IEEE T KNOWL DATA EN, V18, P1457, DOI 10.1109/TKDE.2006.180
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Krippendorff K., 2011, DEPARTAMENTAL PAPERS
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Lewis J, 2013, GLOBAL MEDIA APOCALYPSE: PLEASURE, VIOLENCE AND THE CULTURAL IMAGININGS OF DOOM, P100
   Lex A, 2014, IEEE T VIS COMPUT GR, V20, P1983, DOI 10.1109/TVCG.2014.2346248
   Luo G, 2016, NETW MODEL ANAL HLTH, V5, DOI 10.1007/s13721-016-0125-6
   Marsland, 2014, MACHINE LEARNING ALG, DOI DOI 10.1201/B17476
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Murphy KP, 2012, MACHINE LEARNING: A PROBABILISTIC PERSPECTIVE, P1
   Nigam A., 2012, Proceedings of the 2012 International Conference on Pattern Recognition, Informatics and Medical Engineering (PRIME), P393, DOI 10.1109/ICPRIME.2012.6208378
   Otoom AF, 2016, INT CONF INFORM COMM, P92, DOI 10.1109/IACS.2016.7476092
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Probst P., 2018, ARXIV180209596, VarXiv:180209596
   Pushpalatha M. N., 2016, 2016 INT C CIRC CONT, P1, DOI [10.1109/CIMCA.2016.8053276, DOI 10.1109/CIMCA.2016.8053276.]
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Roy NKS, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P426, DOI 10.1109/SEAA.2017.71
   Roy NKS, 2014, EUROMICRO CONF PROC, P269, DOI 10.1109/SEAA.2014.51
   Russell S. J., 2010, ARXIV10111669V3
   Sabor KK., 2016, Proceedings of the 26th Annual International Conference on Computer Science and Software Engineering, P96
   Saha RK, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P258, DOI 10.1109/MSR.2015.31
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Salles T, 2016, J ASSOC INF SCI TECH, V67, P1639, DOI 10.1002/asi.23452
   Sharma G, 2015, PROCEDIA COMPUT SCI, V70, P632, DOI 10.1016/j.procs.2015.10.059
   Sharma M, 2014, LECT NOTES COMPUT SC, V8583, P227, DOI 10.1007/978-3-319-09156-3_17
   Singh VB, 2017, J INF KNOWL MANAG, V16, DOI 10.1142/S0219649217500058
   Sommerville I., 2011, Software Engineering (Ninth), DOI DOI 10.1111/J.1365-2362.2005.01463.X
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Uddin J, 2017, ARTIF INTELL REV, V47, P145, DOI 10.1007/s10462-016-9478-6
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wang GY, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P2321
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Williams G, 2011, USE R, P3, DOI 10.1007/978-1-4419-9890-3
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Yang CZ, 2014, 2014 5TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND SERVICE SCIENCE (ICSESS), P216, DOI 10.1109/ICSESS.2014.6933548
   Yang CZ, 2012, ASIA PAC SOFWR ENG, P240, DOI 10.1109/APSEC.2012.144
   Yang G., 2017, P S APPL COMP SAC 17, P1280, DOI DOI 10.1145/3019612.3019788
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Yang Y., 1997, ICML, V97, P412
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zhang T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1553, DOI 10.1145/2695664.2695872
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zheng Z., 2004, ACM Sigkdd Explorations Newsletter, V6, P80, DOI DOI 10.1145/1007730.1007741
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 80
TC 35
Z9 35
U1 0
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 58
EP 78
DI 10.1016/j.infsof.2019.07.009
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700006
DA 2024-07-18
ER

PT J
AU Souza, LBL
   Campos, EC
   Madeira, F
   Paixao, K
   Rocha, AM
   Maia, MD
AF Souza, Lucas B. L.
   Campos, Eduardo C.
   Madeira, Fernanda
   Paixao, Klerisson
   Rocha, Adriano M.
   Maia, Marcelo de Almeida
TI Bootstrapping cookbooks for APIs from crowd knowledge on Stack Overflow
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE API documentation; Crowd knowledge; Stack Overflow; Cookbook
AB Context: Well established libraries typically have API documentation. However, they frequently lack examples and explanations, possibly making difficult their effective reuse. Stack Overflow is a question-and-answer web site oriented to issues related to software development. Despite the increasing adoption of Stack Overflow, the information related to a particular topic (e.g., an API) is spread across the website. Thus, Stack Overflow still lacks organization of the crowd knowledge available on it.
   Objective: Our target goal is to address the problem of the poor quality documentation for APIs by providing an alternative artifact to document them based on the crowd knowledge available on Stack Overflow, called crowd cookbook. A cookbook is a recipe-oriented book, and we refer to our cookbook as crowd cookbook since it contains content generated by a crowd. The cookbooks are meant to be used through an exploration process, i.e. browsing.
   Method: In this paper, we present a semi-automatic approach that organizes the crowd knowledge available on Stack Overflow to build cookbooks for APIs. We have generated cookbooks for three APIs widely used by the software development community: SWT, LINQ and QT. We have also defined desired properties that crowd cookbooks must meet, and we conducted an evaluation of the cookbooks against these properties with human subjects.
   Results: The results showed that the cookbooks built using our approach, in general, meet those properties. As a highlight, most of the recipes were considered appropriate to be in the cookbooks and have self-contained information.
   Conclusion: We concluded that our approach is capable to produce adequate cookbooks automatically, which can be as useful as manually produced cookbooks. This opens an opportunity for API designers to enrich existent cookbooks with the different points of view from the crowd, or even to generate initial versions of new cookbooks.
C1 [Souza, Lucas B. L.; Campos, Eduardo C.; Madeira, Fernanda; Paixao, Klerisson; Rocha, Adriano M.; Maia, Marcelo de Almeida] Univ Fed Uberlandia, Fac Comp, Uberlandia, MG, Brazil.
C3 Universidade Federal de Uberlandia
RP Maia, MD (corresponding author), Univ Fed Uberlandia, Fac Comp, Uberlandia, MG, Brazil.
EM eccampos@ufu.br; fernanda.madeiral@ufu.br; klerisson@ufu.br;
   marcelo.maia@ufu.br
RI Maia, Marcelo/F-3090-2017; Paixao, Klerisson/C-9941-2015
OI Maia, Marcelo/0000-0003-3578-1380; Paixao, Klerisson/0000-0002-8257-5865
FU CAPES; CNPq; FAPEMIG
FX We acknowledge CAPES, CNPq, and FAPEMIG for partial funding. We
   acknowledge the students and professionals who participated on this
   study.
CR Agrawal A., 2018, INF SOFTW TECHNOL
   [Anonymous], 2012, TECHNICAL REPORT
   [Anonymous], 2014, AUTOMATIC CATEGORIZA
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   [Anonymous], 2009, CHI 09 EXTENDED ABST, DOI [10.1145/1520340.1520678, DOI 10.1145/1520340.1520678]
   [Anonymous], 2007, P 16 INT C WORLD WID
   Arthur J. D., 1992, Journal of Software Maintenance: Research and Practice, V4, P129, DOI 10.1002/smr.4360040303
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Barzilay O., FACILITATING CROWD S, P289
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brooks Frederick P., 1995, The mythical man-month
   Campos EC, 2016, J SOFTW-EVOL PROC, V28, P863, DOI 10.1002/smr.1800
   Chang W., 2018, R Graphics Cookbook: Practical Recipes for Visualizing Data, V2nd ed.
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dalip DH, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P543
   Darwin I.F., 2001, Java Cookbook, V2nd
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   de Souza LBL, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P21, DOI 10.1109/SBES.2014.15
   Delfim Fernanda, 2016, J BRAZ COMPUT SOC, V29, P1
   Dellavalle RP, 2003, SCIENCE, V302, P787, DOI 10.1126/science.1088234
   Gundecha U., 2012, SELENIUM TESTINGS TO
   Kim J, 2009, IEEE INT CONF AUTOM, P540, DOI 10.1109/ASE.2009.39
   Kuc Rafal., 2013, Apache Solr 4 Cookbook
   Lahtinen E., 2005, SIGCSE Bulletin, V37, P14, DOI 10.1145/1151954.1067453
   Laurent S., 2010, jQuery Cookbook
   Martelli A., 2002, PYTHON COOKBOOK
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Montandon JE, 2013, WORK CONF REVERSE EN, P401, DOI 10.1109/WCRE.2013.6671315
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Olston C., 2003, ACM Transactions on Computer-Human Interaction, V10, P177, DOI 10.1145/937549.937550
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Polukhin A., 2013, BOOST C PLUS PLUS AP
   Ponzanelli L, 2013, EUR CON SFTWR MTNCE, P57, DOI 10.1109/CSMR.2013.16
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sadun E., 2013, CORE IOS 6 DEV COOKB
   Smart K. L., 2002, ACM Journal of Computer Documentation, V26, P130, DOI 10.1145/604228.604236
   Stephens D., 2006, C PLUS PLUS COOKBOOK
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Treude C, 2018, 2018 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P19, DOI 10.1145/3194793.3194796
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Wallach H.M., 2009, P 26 ANN INT C MACH, P1105, DOI DOI 10.1145/1553374.1553515
   WOLFF D, 2011, OPEN GL 4 0 SHADING, P3
   2012, ICSE12, P793
NR 48
TC 13
Z9 13
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 37
EP 49
DI 10.1016/j.infsof.2019.03.009
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schipor, OA
   Vatavu, RD
   Vanderdonckt, J
AF Schipor, Ovidiu-Andrei
   Vatavu, Radu-Daniel
   Vanderdonckt, Jean
TI Euphoria: A Scalable, event-driven architecture for designing
   interactions across heterogeneous devices in smart environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Context-aware computing; Mobile computing; Wearable computing;
   Multi-device interaction; Smart environments; Smart spaces; Software
   architecture
ID WIRELESS SENSOR; FRAMEWORK; SERVICES; INTERNET
AB Context From personal mobile and wearable devices to public ambient displays, our digital ecosystem has been growing with a large variety of smart sensors and devices that can capture and deliver insightful data to connected applications, creating thus the need for new software architectures to enable fluent and flexible interactions in such smart environments.
   Objective: We introduce EUPHORIA, a new software architecture design and implementation that enables easy prototyping, deployment, and evaluation of adaptable and flexible interactions across heterogeneous devices in smart environments.
   Method: We designed EUPHORIA by following the requirements of the ISO/IEC 25010:2011 standard on Software Quality Requirements and Evaluation applied to the specific context of smart environments.
   Results: To demonstrate the adaptability and flexibility of EUPHORIA, we describe three application scenarios for contexts of use involving multiple users, multiple input/output devices, and various types of smart environments, as follows: (1) wearable user interfaces and whole-body gesture input for interacting with public ambient displays, (2) multi-device interactions in physical-digital spaces, and (3) interactions on smartwatches for a connected car application scenario. We also perform a technical evaluation of EUPHORIA regarding the main factors responsible for the magnitudes of the request-response times for producing, broadcasting, and consuming messages inside the architecture. We deliver the source code of EUPHORIA free to download and use for research purposes.
   Conclusion: By introducing EUPHORIA and discussing its applicability, we hope to foster advances and developments in new software architecture initiatives for our increasingly complex smart environments, but also to readily support implementations of novel interactive systems and applications for smart environments of all kinds.
C1 [Schipor, Ovidiu-Andrei; Vatavu, Radu-Daniel] Univ Stefan Cel Mare Suceava, MANSiD Res Ctr, MintViz Lab, 13 Univ, Suceava 720229, Romania.
   [Vanderdonckt, Jean] Catholic Univ Louvain, Louvain Sch Management, B-1348 Louvain La Neuve, Belgium.
C3 Stefan cel Mare University of Suceava; Universite Catholique Louvain
RP Vatavu, RD (corresponding author), Univ Stefan Cel Mare Suceava, MANSiD Res Ctr, MintViz Lab, 13 Univ, Suceava 720229, Romania.
EM schipor@eed.usv.ro; radu.vatavu@usm.ro; jean.vanderdonckt@uclouvain.be
RI Vatavu, Radu-Daniel/AAA-3282-2022; Schipor, Ovidiu-Andrei/ABD-1755-2020;
   Vanderdonckt, Jean/Q-5854-2018; Schipor, Ovidiu-Andrei/CAF-1234-2022;
   Vatavu, Radu-Daniel/F-1820-2017
OI Vanderdonckt, Jean/0000-0003-3275-3333; Schipor,
   Ovidiu-Andrei/0000-0003-1614-2196; Vatavu,
   Radu-Daniel/0000-0002-7631-6445
FU Romanian Ministry of Research and Innovation, CCCDI-UEFISCDI within
   PNCDI III, project P2, "Efficient communications based on smart devices
   for in-car augmented reality interactive applications"
   [PN-III-P1-1.2-PCCDI-2017-0917, 21PCCDI/2018]; project "Integrated
   center for research, development and innovation in Advanced Materials,
   Nanotechnologies, and Distributed Systems for fabrication and control",
   Sectoral Operational Program for Increase of the Economic
   Competitiveness [671/09.04.2015]; European Regional Development Fund
FX This work was supported by a grant of the Romanian Ministry of Research
   and Innovation, CCCDI-UEFISCDI, project number
   PN-III-P1-1.2-PCCDI-2017-0917, contract no. 21PCCDI/2018, within PNCDI
   III, project P<INF>2</INF>, "Efficient communications based on smart
   devices for in-car augmented reality interactive applications." Research
   was conducted in the Machine Intelligence and Information Visualization
   Lab (MintViz) of the MANSiD Research Center. The infrastructure was
   provided by the University of Suceava and was partially supported from
   the project "Integrated center for research, development and innovation
   in Advanced Materials, Nanotechnologies, and Distributed Systems for
   fabrication and control", No. 671/09.04.2015, Sectoral Operational
   Program for Increase of the Economic Competitiveness, co-funded from the
   European Regional Development Fund.
CR Aarts E., 2002, INVISIBLE FUTURE SEA, P235
   Abid MR, 2015, IEEE T INSTRUM MEAS, V64, P596, DOI 10.1109/TIM.2014.2351331
   Aiello F, 2011, COMPUT J, V54, P439, DOI 10.1093/comjnl/bxq019
   [Anonymous], 2013, P 7 IEEE INT C RES C, DOI DOI 10.1109/RCIS.2013.6577709
   [Anonymous], 2005, Spatial Augmented Reality: Merging Real and Virtual Worlds
   [Anonymous], 2005, IEC 25000 SOFTW SYST
   [Anonymous], 2006, EVERYWARE DAWNING AG
   Asai Y., 2017, 8 AUGM HUM INT C AH, DOI 10.1145/3041164.3041188
   Bahreini K, 2016, INTERACT LEARN ENVIR, V24, P590, DOI 10.1080/10494820.2014.908927
   Bailly Gilles, 2012, P SIGCHI C HUMAN FAC, P1239
   Baudisch Patrick, 2013, P 26 ANN ACM S USER, P405, DOI [DOI 10.1145/2501988, 10.1145/2501988.2502012]
   Bellifemine F, 2011, SOFTWARE PRACT EXPER, V41, P237, DOI 10.1002/spe.998
   Brown B., 2009, CHI 09 HUM FACT COMP, P4755, DOI [10.1145/1520340.1520733, DOI 10.1145/1520340.1520733]
   Broy M., 2002, SOFTWARE PIONEERS CO, P411, DOI [10.1007/978-3-642-59412-Q26, DOI 10.1007/978-3-642-59412-Q26]
   Bruza P.D., 1993, Proceedings of the International Conference on Management of Data, P66
   Buxton W., 1983, Computer Graphics, V17, P31, DOI 10.1145/988584.988586
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   Camuñas-Mesa LA, 2014, FRONT NEUROSCI-SWITZ, V8, DOI 10.3389/fnins.2014.00048
   Chandy K. M., 2006, GARTNER APPL INTEGR, V2006
   Chatzopoulos D, 2017, IEEE ACCESS, V5, P6917, DOI 10.1109/ACCESS.2017.2698164
   Chen W.-H., 2015, Proceedings of the 33rd Annual ACM Conference Extended Abstracts on Human Factors in Computing Systems, CHI EA '15, P103, DOI 10.1145/2702613.2726961
   Chen X, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P159, DOI 10.1145/2556288.2556955
   Clements P., 2002, DOCUMENTING SOFTWARE
   Cook D., 2004, SMART ENV TECHNOLOGY, DOI [10.1002/047168659X, DOI 10.1002/047168659X]
   Cook DJ, 2013, IEEE T CYBERNETICS, V43, P820, DOI 10.1109/TSMCB.2012.2216873
   Coppola R, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2971482
   Deen MJ, 2015, PERS UBIQUIT COMPUT, V19, P573, DOI 10.1007/s00779-015-0856-x
   DiLena P., 2017, SMARTOBJECT 17, P7, DOI [10.1145/3038450.3038455, DOI 10.1145/3038450.3038455]
   Esteves A, 2015, UIST'15: PROCEEDINGS OF THE 28TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P457, DOI 10.1145/2807442.2807499
   Fortino G, 2012, J NETW COMPUT APPL, V35, P1934, DOI 10.1016/j.jnca.2012.07.016
   Fortino G, 2014, INTERNET THINGS-TECH, P1, DOI 10.1007/978-3-319-00491-4_1
   Fortino G, 2014, FUTURE GENER COMP SY, V35, P62, DOI 10.1016/j.future.2013.12.015
   Funk Markus, 2014, CHI 14 HUM FACT COMP, P2305, DOI DOI 10.1145/2559206.2581143
   Gable TM, 2014, ADJ P 6 INT C AUT US, P1, DOI [10.1145/2667239.2667298, DOI 10.1145/2667239.2667298]
   Garcia M, 2015, 2015 IEEE FIRST INTERNATIONAL SMART CITIES CONFERENCE (ISC2)
   Garlan D., 1993, Advances in software engineering and knowledge engineering, P1
   Gheran BF, 2018, DIS 2018: PROCEEDINGS OF THE 2018 DESIGNING INTERACTIVE SYSTEMS CONFERENCE, P623, DOI 10.1145/3196709.3196741
   Goumopoulos C., 2009, INT J MULTIMED UBIQU, V4
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Gustafson Sean, 2010, P 23ND ANN ACM S USE, P3, DOI DOI 10.1145/1866029.1866033
   Hilbert DM, 2000, ACM COMPUT SURV, V32, P384, DOI 10.1145/371578.371593
   Hill J, 2000, ACM SIGPLAN NOTICES, V35, P93, DOI 10.1145/384264.379006
   Hill R. D., 1987, SIGCHI Bulletin, P241, DOI 10.1145/1165387.275637
   Ilyas M., 2016, SMART DUST SENSOR NE
   Korzun D, 2016, COMM COM INF SC, V615, P181, DOI 10.1007/978-3-319-40180-5_13
   Korzun D, 2014, PROC CONF OPEN INNOV, P60, DOI 10.1109/FRUCT.2014.6872437
   Krumeich J, 2014, BUS PROCESS MANAG J, V20, P615, DOI 10.1108/BPMJ-07-2013-0092
   Kuniaysky M., 2010, SMART THINGS UBIQUIT, DOI [10.1016/C2009-0-20057-2, DOI 10.1016/C2009-0-20057-2]
   Lawson JYL, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3188465
   Le MK, 2016, 2016 INTERNATIONAL COMPUTER SYMPOSIUM (ICS), P182, DOI [10.1109/ICS.2016.43, 10.1109/ICS.2016.0044]
   Ledo D., 2015, Proceedings of the 17th International Conference on Human-Computer Interaction with Mobile Devices and Services, P187
   Li LL, 2014, IET CONTROL THEORY A, V8, P830, DOI 10.1049/iet-cta.2013.0761
   Lou YH, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-1014-7
   Lui M, 2014, TECHNOL PEDAGOG EDUC, V23, P57, DOI 10.1080/1475939X.2013.838452
   Marquardt Nicolai, 2011, Proceedings of the 24th annual ACM symposium on User interface software and technology-UIST'11, P315, DOI 10.1145/2047196.2047238
   May K, 2016, AUTOMOTIVEUI 2016: 8TH INTERNATIONAL CONFERENCE ON AUTOMOTIVE USER INTERFACES AND INTERACTIVE VEHICULAR APPLICATIONS, P69, DOI 10.1145/3004323.3004330
   May KR, 2017, AUTOMOTIVEUI 2017: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON AUTOMOTIVE USER INTERFACES AND INTERACTIVE VEHICULAR APPLICATIONS, P74, DOI 10.1145/3122986.3123015
   Merolla PA, 2014, SCIENCE, V345, P668, DOI 10.1126/science.1254642
   Michelson B. M, 2006, EVENT DRIVEN ARCHITE, V2
   Mocanu I., 2017, 13 ELEARNING SOFTW E, V2, P487, DOI 10.12753/2066-026x-17-154
   Moxey Catherine., 2010, A conceptual model for event processing systems
   Nebeling Michael, 2014, P 2014 ACM SIGCHI S, P65, DOI [10.1145/2607023.2607024, DOI 10.1145/2607023.2607024]
   Patti E, 2016, IEEE SYST J, V10, P1137, DOI 10.1109/JSYST.2014.2302750
   Perrault ST, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P299, DOI 10.1145/2702123.2702126
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pfister Alexandra, 2014, Journal of Medical Engineering & Technology, V38, P274, DOI 10.3109/03091902.2014.909540
   Poslad S., 2011, UBIQUITOUS COMPUTING, DOI [10.1002/9780470779446, DOI 10.1002/9780470779446]
   Pourmirza S, 2017, INFORM SYST, V66, P43, DOI 10.1016/j.is.2017.01.007
   Rahman M. A., 2016, ICOST 2016, V9677, P461, DOI [10.1007/978-3-119-39601-9_42, DOI 10.1007/978-3-119-39601-9_42]
   Raun N. F., 2016, 2016 IEEE 7 ANN INF, P1, DOI [10.1109/IEMCON.2016.7746313, DOI 10.1109/IEMCON.2016.7746313]
   Rautaray SS, 2015, ARTIF INTELL REV, V43, P1, DOI 10.1007/s10462-012-9356-9
   Roda C, 2016, ADV INTELL SYST, V473, P311, DOI 10.1007/978-3-319-40159-1_26
   Schipor OA, 2011, ELEKTRON ELEKTROTECH, P101, DOI 10.5755/j01.eee.109.3.181
   Schipor OA, 2014, ELEARN SOFTW EDUC, P101
   Schipor OA, 2017, ADV ELECTR COMPUT EN, V17, P17, DOI 10.4316/AECE.2017.02003
   Schneider F, 2013, PROCEDIA COMPUT SCI, V16, P796, DOI 10.1016/j.procs.2013.01.083
   Skvorc D, 2014, 2014 37TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1003, DOI 10.1109/MIPRO.2014.6859715
   Svangren MK, 2017, PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI '17), DOI 10.1145/3098279.3098535
   Taylor Hugh., 2009, EVENT DRIVEN ARCHITE, V1st
   ThalmicLabs, 2018, MYO GEST CONTR ARMB
   The UIMS, 1992, SIGCHI B, V24, P32, DOI DOI 10.1145/142394.142401
   Vatavu Radu-Daniel, 2012, Ambient Intelligence. Third International Joint Conference (AML 2012). Proceedings, P161, DOI 10.1007/978-3-642-34898-3_11
   Vatavu R.-D., 2018, IUI 18 COMPANION, DOI 10.1145/3180308.3180369
   Vatavu RD, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI'16), P217, DOI 10.1145/2935334.2935364
   Vatavu RD, 2017, INT J HUM-COMPUT ST, V103, P1, DOI 10.1016/j.ijhcs.2017.01.005
   Vatavu RD, 2012, J AMB INTEL SMART EN, V4, P79, DOI 10.3233/AIS-2012-0137
   Vermesan O, 2013, RIVER PUBL SER COMM, P1
   Villari M., 2014, SMART COMP WORKSH SM, P9, DOI 10.1109/SMARTCOMP-W.2014.7046676
   Volpentesta AP, 2015, COMPUT HUM BEHAV, V50, P177, DOI 10.1016/j.chb.2015.04.003
   Wang V., 2013, The Definitive Guide to HTML5 WebSocket, P1
   Wang WY, 2011, COMPUT NETW, V55, P3604, DOI 10.1016/j.comnet.2011.07.010
   Weiser M, 1999, IBM SYST J, V38, P693, DOI 10.1147/sj.384.0693
   Wilson A.D., 2010, Proc. UIST, P273
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang CH, 2013, IEEE T IND INFORM, V9, P1423, DOI 10.1109/TII.2013.2256791
   Ye CP, 2015, 2015 INTERNATIONAL CONFERENCE ON IDENTIFICATION, INFORMATION, AND KNOWLEDGE IN THE INTERNET OF THINGS (IIKI), P288, DOI 10.1109/IIKI.2015.69
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zahariadis T, 2014, INT CONF UTIL CLOUD, P792, DOI 10.1109/UCC.2014.129
   Zao JK, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT ENVIRONMENTS (IE), P374, DOI 10.1109/IE.2014.54
NR 99
TC 30
Z9 30
U1 3
U2 21
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 43
EP 59
DI 10.1016/j.infsof.2019.01.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HQ0SX
UT WOS:000462106400005
DA 2024-07-18
ER

PT J
AU Sbai, N
   Lenarduzzi, V
   Taibi, D
   Ben Sassi, S
   Ben Ghezala, HH
AF Sbai, Nesrine
   Lenarduzzi, Valentina
   Taibi, Davide
   Ben Sassi, Sihem
   Ben Ghezala, Henda Hajjami
TI Exploring information from OSS repositories and platforms to support OSS
   selection decisions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context: Individuals and organizations are increasingly adopting Open Source
   Software (OSS) for the benefits it provides. Although the OSS evaluation process and the information it requires are nowadays well known, users still have problems finding the right information and are not supported by any decision support system.
   Objective: The aim of this study is to bridge the gap between OSS adoption models, especially with the aim of supporting users in evaluating the OSS they are planning to select.
   Method: To reach this aim, we studied the processes and the information considered by the major OSS assessment models. Then we carried out a case study to identify which information can be automatically retrieved from the main OSS platforms, namely GitHub, SonarCloud, and StackExchange. Finally, we characterized the maturity of the projects available on these three platforms.
   Results: Projects available on the three platforms are commonly old, stable, and mature ones. Moreover, thanks to the API provided, we were able to extract most of the information not commonly accessible from the main website.
   Conclusions: Our results confirm that it is possible to develop a decision support system based on these three platforms, and that is also possible to evaluate both the quality and the maturity of the projects available there.
C1 [Sbai, Nesrine; Ben Sassi, Sihem; Ben Ghezala, Henda Hajjami] Manouba Univ, RIADI Lab, La Manouba 2010, Tunisia.
   [Lenarduzzi, Valentina; Taibi, Davide] Tampere Univ Technol, Tampere, Finland.
   [Ben Sassi, Sihem] Taibah Univ, Coll Business Adm, MIS Dept, Al Madinah, Saudi Arabia.
C3 Universite de la Manouba; Tampere University; Taibah University
RP Taibi, D (corresponding author), Korkeakoulunkatu 10, Tampere, Finland.
EM nesrine.sbai@ensi.rnu.tn; valentina.lenarduzzi@tut.fi; davide@taibi.it;
   sihem.bensassi@gmail.com; hhbg.hhbg@gmail.com
RI Ben Ghezala, Henda Hajjami/AAK-7052-2021; Taibi, Davide/E-4935-2015
OI Ben Ghezala, Henda Hajjami/0000-0002-6874-1388; Taibi,
   Davide/0000-0002-3210-3990; sbai, nesrine/0000-0003-0290-6634;
   Lenarduzzi, Valentina/0000-0003-0511-5133; Ben Sassi,
   Sihem/0000-0002-1925-4989
CR [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Basilico G, 2011, INT C WEB INF SYST T
   del Bianco V, 2011, IEEE SOFTWARE, V28, P67, DOI 10.1109/MS.2011.93
   Duijnhouwer W. C., 2003, CAPGEMINI EXP LETT
   Gall H., 2014, SCHLOSS DAGSTUHL LEI, V4
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Samoladas I., 2008, SQO OSS QUALITY MODE
   Sbai N., 2018, MENDELEY DATA, DOI [10.17632/dblan2xdct9.1, DOI 10.17632/DBLAN2XDCT9.1]
   Soto M., 2009, QUALOSS OPEN SOURCE
   Taibi D., 2015, SOFTW ENG ADV 10 INT
   Taibi D, 2007, INT FED INFO PROC, V234, P173
   Wasserman A., 2006, EFOSS WORKSH COM IT
   Wasserman A. I., 2017, OSSPAL FINDING EVALU
NR 13
TC 9
Z9 9
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 104
EP 108
DI 10.1016/j.infsof.2018.07.009
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900007
DA 2024-07-18
ER

PT J
AU Hujainah, F
   Abu Bakar, RB
   Al-Haimi, B
   Abdulgabber, MA
AF Hujainah, Fadhl
   Abu Bakar, Rohani Binti
   Al-haimi, Basheer
   Abdulgabber, Mansoor Abdullateef
TI Stakeholder quantification and prioritisation research: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Stakeholders quantification; Stakeholders prioritisation; Systematic
   review
ID REQUIREMENTS; IDENTIFICATION; MANAGEMENT; PROJECTS
AB Context: Stakeholder quantification and prioritisation (SQP) is executed to quantify and prioritise stakeholders of the system based on their impacts. Selecting and involving the appropriate stakeholders are considered one of the major factors for producing a successful system.
   Objective: The objectives of this paper is to provide precise investigation regarding the SQP domain with respect to its impact on prioritising requirements, identifying SQP attributes, critically investigating the existing techniques, and presenting the challenges and recommended future works.
   Method: The systematic literature review (SLR) guidelines proposed by Kitchenham are adopted to guide the review process. The identified related studies underwent a rigorous study selection process. Thus, 31 out of 210 identified studies were selected as primary studies to address adequately the formulated research questions.
   Results: Findings demonstrate that SQP is a crucial process in requirement prioritisation (RP) because of its ability to identify stakeholders' impact on the systems requirements that lead to the production of a correctly prioritised list of requirements. Seventeen SQP attributes are revealed along with their description, usage impact, and degree of importance. Furthermore, nine techniques that focus on quantification and prioritisation of the stakeholders are identified and critically analysed in terms of their description, SQP process involved, SQP attributes used, types, and limitations. The findings reveal that these techniques face some challenges with respect to the lack of low-level implementation details, lack of automation and intelligence level, and heavy reliance on the involvement of experts.
   Conclusion: SQP has been extensively discussed in stakeholder analysis and requirement prioritisation domains. Based on the findings, a new intelligent solution is suggested to minimise the need for expert participation in conducting the SQP process along with proposing measurement criteria for the attributes used to evaluate the stakeholders. The deficiency of research works regarding the selection of SQP techniques is also observe d.
C1 [Hujainah, Fadhl; Abu Bakar, Rohani Binti; Abdulgabber, Mansoor Abdullateef] Univ Malaysia Pahang, Fac Comp Syst & Software Engn, Kuantan, Pahang, Malaysia.
   [Al-haimi, Basheer] Univ Malaysia Pahang, Fac Ind Management, Kuantan, Pahang, Malaysia.
C3 Universiti Malaysia Pahang Al-Sultan Abdullah (UMPSA); Universiti
   Malaysia Pahang Al-Sultan Abdullah (UMPSA)
RP Hujainah, F (corresponding author), Univ Malaysia Pahang, Fac Comp Syst & Software Engn, Kuantan, Pahang, Malaysia.
EM fadelhogina@gmail.com
RI Abdulhak, Mansoor Abdullateef/M-5420-2016; Al-haimi,
   Basheer/JPK-9400-2023; Al-haimi, Basheer/AAP-1010-2021; Hujainah,
   Fadhl/T-4573-2019
OI Abdulhak, Mansoor Abdullateef/0000-0002-4825-1015; Al-haimi,
   Basheer/0000-0001-5660-7977; Al-haimi, Basheer/0000-0001-5660-7977;
   Hujainah, Fadhl/0000-0002-8853-5231
FU Ministry of Higher Education Yemen; University Malaysia Pahang (UMP);
   UMP Grant [RDU170102, PGRS170393]
FX The authors appreciate the efforts of Ministry of Higher Education Yemen
   and University Malaysia Pahang (UMP) for supporting this research. This
   work is supported in part by UMP under Grant Nos. RDU170102, and
   PGRS170393.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Ahmad S, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P683, DOI 10.1109/ASWEC.2008.66
   Alexander I, 2004, IEEE SOFTWARE, V21, P23, DOI 10.1109/MS.2004.1259199
   Alves V., 2010, INF SOFTW TECHNOL, V52, P8, DOI DOI 10.1016/J.INFS0F.2010.03.014
   [Anonymous], 2001, BLACKWELL HDB STRATE, DOI 10.1111/b.9780631218616.2006.00007.x
   [Anonymous], 2012, INT J SEIJ
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume
   Babar Muhammad Imran, 2015, Journal of Theoretical and Applied Information Technology, V76, P373
   Babar Muhammad Imran, 2013, Journal of Theoretical and Applied Information Technology, V55, P359
   Babar MI, 2015, KNOWL-BASED SYST, V84, P179, DOI 10.1016/j.knosys.2015.04.010
   Babar MI, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0121344
   Babar MI, 2014, FRONT ARTIF INTEL AP, V265, P295, DOI 10.3233/978-1-61499-434-3-295
   Babar MI, 2014, IET SOFTW, V8, P219, DOI 10.1049/iet-sen.2013.0216
   Ballejos LC, 2011, REQUIR ENG, V16, P281, DOI 10.1007/s00766-011-0123-2
   Bendjenna Hakim, 2012, Journal of Systems and Information Technology, V14, P264, DOI 10.1108/13287261211255365
   Benestad HC, 2012, INT SYMP EMP SOFTWAR, P261, DOI 10.1145/2372251.2372300
   Berander P., 2004, THESIS
   Brito I., 2003, P EARL ASP WORKSH AO, P1
   Damian D, 2007, IEEE SOFTWARE, V24, P21, DOI 10.1109/MS.2007.55
   de Vivero J. L. S., 2007, EXERCISE STAKEHOLDER
   Dearden R. S., 2002, TOOLS DEV ROYAUME UN
   Gaur V, 2010, 2010 IEEE 2ND INTERNATIONAL ADVANCE COMPUTING CONFERENCE, P449, DOI 10.1109/IADCC.2010.5422878
   Gilb T, 2005, COMPETITIVE ENGINEERING: A HANDBOOK FOR SYSTEMS ENGINEERING, REQUIREMENTS ENGINEERING, AND SOFTWARE ENGINEERING USING PLANGUAGE, P1, DOI 10.1016/B978-075066507-0/50005-2
   Glinz M, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.42
   Hull E, 2011, REQUIREMENTS ENGINEERING, THIRD EDITION, P1, DOI 10.1007/978-1-84996-405-0
   Jepsen AL, 2009, INT J PROJ MANAG, V27, P335, DOI 10.1016/j.ijproman.2008.04.002
   Kakar AK, 2015, INFORM SOFTWARE TECH, V65, P56, DOI 10.1016/j.infsof.2015.04.004
   Kauppinen M, 2004, INFORM SOFTWARE TECH, V46, P937, DOI 10.1016/j.infsof.2004.04.002
   Kiduk Y., 2006, P ASIST ANN M, V43, DOI DOI 10.1002/MEET.14504301185
   Kitchenham B., 2007, ENGINEERING, V45, P1051
   Levine-Clark M, 2008, J BUS FINANC LIBR, V14, P32, DOI 10.1080/08963560802176348
   Lim S., 2012, P AL ENT SYST SOFTW, P118
   Lim SL, 2012, IEEE T SOFTWARE ENG, V38, P707, DOI 10.1109/TSE.2011.36
   Lim SL, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1022, DOI 10.1145/1985793.1985983
   Lindblom A., 2011, STAKEHOLDERS INFLUEN
   Majumdar S. I., 2013, IOSR J COMPUT ENG IO, V15, P73
   Marstein E., 2003, INFLUENCE STAKEHOLDE
   Mayers J., 2005, STAKEHOLDER POWER AN, P24
   McManus J., 2004, 2004 IEEE International Engineering Management Conference (IEEE Cat. No.04CH37574), P880
   Mitchell RK, 1997, ACAD MANAGE REV, V22, P853, DOI 10.2307/259247
   Mok KY, 2015, INT J PROJ MANAG, V33, P446, DOI 10.1016/j.ijproman.2014.08.007
   Nuseibeh B., 2010, ICSE 00 P C FUT SOFT, P35
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Pacheco C, 2012, J SYST SOFTWARE, V85, P2171, DOI 10.1016/j.jss.2012.04.075
   Parent MM, 2007, J BUS ETHICS, V75, P1, DOI 10.1007/s10551-007-9533-y
   Power K., 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P87, DOI 10.1109/AGILE.2010.17
   Preiss O, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P194, DOI 10.1109/APAQS.2001.990019
   Pressman R. S., 2009, SOFTWARE ENG PRACTIT, DOI [10.1017/CB09781107415324.004, DOI 10.1017/CB09781107415324.004]
   Rawlins B. L. B., 2006, PRIORITIZING STAKEHO, P14
   Razali Rozilawati, 2011, Journal of Theoretical and Applied Information Technology, V33, P250
   Seale J., 2003, RES LEARN TECHNOL, V11, P2
   Sommerville I., 2013, SOFTWARE ENG
   Standish Group, 2015, MOD RES ALL SOFTW PR
   Standish Group, 2014, CHAOS REP
   Standish Group, 2015, CHAOS REP 2015
   Standish Group, 2008, CHAOS REP
   Thakurta R, 2013, SOFTWARE QUAL J, V21, P573, DOI 10.1007/s11219-012-9188-5
   Varvasovszky Z, 2000, HEALTH POLICY PLANN, V15, P338, DOI 10.1093/heapol/15.3.338
   Voola P, 2012, ADV INTEL SOFT COMPU, V132, P915
   Young SM, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P199
   Zhang H, 2010, 2011 INTERNATIONAL CONFERENCE ON COMPUTERS, COMMUNICATIONS, CONTROL AND AUTOMATION (CCCA 2011), VOL I, P1
NR 61
TC 23
Z9 23
U1 4
U2 52
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 85
EP 99
DI 10.1016/j.infsof.2018.05.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400006
DA 2024-07-18
ER

PT J
AU Alshakhouri, M
   Buchan, J
   MacDonell, SG
AF Alshakhouri, Mujtaba
   Buchan, Jim
   MacDonell, Stephen G.
TI Synchronised visualisation of software process and product artefacts:
   Concept, design and prototype implementation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software visualisation; Conceptual visualisation; Software process;
   Conceptual design; Feature location; Traceability, locality
AB Context: Most prior software visualisation (SV) research has focused primarily on making aspects of intangible software product artefacts more evident. While undoubtedly useful, this focus has meant that software process visualisation has received far less attention.
   Objective: This paper presents Conceptual Visualisation, a novel SV approach that builds on the well-known CodeCity metaphor by situating software code artefacts alongside their software development processes, in order to link and synchronise these typically separate components.
   Method: While the majority of prior SV research has focused on re-presenting what is already available in the code (i.e., the implementation) or information derived from it (i.e., various metrics), the presented approach instead makes the design concepts and original developers' intentions - both significant sources of information in terms of software development and maintenance - readily and contextually available in a visualisation environment that tightly integrates the code artefacts with their original functional requirements and development activity.
   Results: Our approach has been implemented in a prototype tool called ScrumCity with the proof of concept being demonstrated using six real-world open source systems. A preliminary case study has further been carried out with real world data.
   Conclusion: Conceptual Visualisation, as implemented in ScrumCity, shows early promise in enabling developers and managers (and potentially other stakeholders) to traverse and explore multiple aspects of software product and process artefacts in a synchronised manner, achieving traceability between the two.
C1 [Alshakhouri, Mujtaba; Buchan, Jim; MacDonell, Stephen G.] Auckland Univ Technol, Sch Engn Comp & Math Sci, SERL, Private Bag 92006, Auckland 1142, New Zealand.
C3 Auckland University of Technology
RP MacDonell, SG (corresponding author), Auckland Univ Technol, Sch Engn Comp & Math Sci, SERL, Private Bag 92006, Auckland 1142, New Zealand.
EM malshakh@aut.ac.nz; jim.buchan@aut.ac.nz; stephen.macdonell@aut.ac.nz
RI MacDonell, Stephen G./AAI-1579-2019
OI MacDonell, Stephen G./0000-0002-2231-6941; Alshakhouri,
   Mujtaba/0000-0002-1048-9909; Buchan, Jim/0000-0003-2777-931X
FU Government of the Kingdom of Saudi Arabia; Auckland University of
   Technology
FX The authors gratefully acknowledge the financial support provided to
   them by the Government of the Kingdom of Saudi Arabia and Auckland
   University of Technology. They would like to express their gratitude to
   Mona Rahimi and her collaborators for making available the Cassandra
   dataset, and for her kind support in answering their enquiries. They
   would also like to thank the developers who kindly participated in the
   preliminary evaluation of ScrumCity, and for the valuable feedback and
   comments that were received. Finally, they would like to acknowledge the
   effort of the editors and reviewers of the initial versions of this
   paper, and thank them for the insights and the important feedback they
   provided, and which has led to significant improvement of this paper.
CR [Anonymous], 2004, P AUSTR USER INTERFA
   [Anonymous], 2007, Software Visualization: Visualizing the Structure, Behavior, and Evolution of Software
   Bacchelli A., 2011, MANHATTAN 3D CITY VI
   Balzer M., 2004, VISSYM 2004 S VIS
   Balzer M, 2007, ASIA-PACIFIC SYMPOSIUM ON VISUALISATION 2007, PROCEEDINGS, P133
   Bohnet J., 2011, Proceedings of the 2nd Workshop on Managing Technical Debt, P9, DOI [DOI 10.1145/1985362.1985365, 10.1145/1985362.1985365]
   Caserta P., 2010, IEEE T VIS COMPUT GR, V17, P1
   Delater A., 2013, ESEM 2013 ACM IEEE I, P2534
   Delater A., 2012, ICSEA 2012, P274
   Fasano F., 2009, International Journal of Computers & Applications, V31, P145, DOI 10.2316/Journal.202.2009.3.202-2961
   Hattori L, 2013, INFORM SOFTWARE TECH, V55, P755, DOI 10.1016/j.infsof.2012.09.001
   Jaber K, 2016, J SYST SOFTWARE, V115, P1, DOI 10.1016/j.jss.2016.01.011
   Krebs R., 2012, VERA EXTENSIBLE ECLI
   Kuhn A, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P113
   Limberger D., 2017, REDUCING VISUAL COMP
   Lungu M, 2014, SCI COMPUT PROGRAM, V79, P204, DOI 10.1016/j.scico.2012.04.007
   Margaret-Anne D.Storey., 2005, SOFTVIS, P193, DOI DOI 10.1145/1056018.1056045
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Ogawa M, 2008, IEEE PACIFIC VISUALISATION SYMPOSIUM 2008, PROCEEDINGS, P191
   Ogawa M, 2009, IEEE T VIS COMPUT GR, V15, P1097, DOI 10.1109/TVCG.2009.123
   Petre M., 2006, AUTUMN 2006 PPIG NEW, P110
   Petre M., 2002, P 2 PROGR VIS WORK J, P213
   Rahimi M, 2016, PROC IEEE INT CONF S, P612, DOI 10.1109/ICSME.2016.42
   Rigotti F., 2011, VISUALIZING SOFTWARE
   Steinbrückner F, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P193
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   Teyseyre AR, 2009, IEEE T VIS COMPUT GR, V15, P87, DOI 10.1109/TVCG.2008.86
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wettel R., 2010, Technical Report
   Wettel R., 2010, SOFTWARE SYSTEMS CIT
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wettel R, 2007, INT C PROGRAM COMPRE, P231
   Xinrong Xie, 2006, 28th International Conference on Software Engineering Proceedings, P839
NR 33
TC 5
Z9 5
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 131
EP 145
DI 10.1016/j.infsof.2018.01.008
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD8LP
UT WOS:000430764200010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fernandez, A
   Berger, A
AF Fernandez, Alison
   Berger, Alexandre
TI A domain-specific language to visualize software evolution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Git; History visualization; Domain-specific language
ID QUESTIONS
AB Context: Accurately relating code authorship to commit frequency over multiple software revisions is a complex task. Most of the navigation tools found in common source code versioning clients are often too rigid to formulate specific queries and adequately present results of such queries. Questions related to evolution asked by software engineers are therefore challenging at answering using common Git clients.
   Objective: This paper explores the use of stacked adjacency matrices and a domain specific language to produce tailored interactive visualizations for software evolution exploration. We are able to support some classical software evolution tasks using short and concise scripts using our language.
   Method: We propose a domain-specific language to stack adjacency matrices and produce scalable and interactive visualizations. Our language and visualizations are evaluated using two independent controlled experiments and closely observing participants.
   Results: We made the following findings: (i) participants are able to express sophisticated queries using our domain-specific language and visualizations, (ii) participants perform better than GitHub's visualizations to answer a set of questions.
   Conclusion: Our visual and scripting environment performs better than GitHub's visualizations at extracting software evolution information.
C1 [Fernandez, Alison] Univ Mayor San Simon, Cochabamba, Bolivia.
   [Berger, Alexandre] Univ Chile, DCC, Pleiad Lab, Santiago, Chile.
C3 Universidad Mayor de San Simon; Universidad de Chile
RP Berger, A (corresponding author), Univ Chile, DCC, Pleiad Lab, Santiago, Chile.
EM abergel@dcc.uchile.cl
RI Fernandez, Alison/KPA-6324-2024
OI Fernandez, Alison/0000-0003-1784-814X
CR [Anonymous], 2013, 2013 1 IEEE WORKING
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   Bach B, 2015, COMPUT GRAPH FORUM, V34, P31, DOI 10.1111/cgf.12615
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Chis A., 2015, P COMP PUBL 2015 ACM, P15, DOI DOI 10.1145/2814189.2814194
   D'Ambros Marco., 2006, MINING SOFTWARE REPO, P26, DOI DOI 10.1145/1137983.1137992
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Hattori L, 2013, INFORM SOFTWARE TECH, V55, P755, DOI 10.1016/j.infsof.2012.09.001
   Huang CY, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P86
   Laval J, 2009, WORK CONF REVERSE EN, P113, DOI 10.1109/WCRE.2009.11
   Novais R, 2017, J SYST SOFTWARE, V128, P56, DOI 10.1016/j.jss.2017.03.006
   Pinzger Martin., 2005, SOFTVIS 05, P67
   Riva C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, DOI 10.1109/ICSE.2000.870509
   ROZENBERG D, 2016, P 13 INT C MIN SOFTW, P109, DOI DOI 10.1145/2901739.2901768
   Rufiange S, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P137, DOI 10.1109/VISSOFT.2014.30
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Schneider T, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P116, DOI 10.1109/VISSOFT.2016.17
   SERVANT F, 2012, P ACM SIGSOFT 20 INT
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Taylor CMB, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P43, DOI 10.1109/VISSOF.2002.1019793
   Voinea L., 2005, Proceedings of the ACM Symposium on Software Visualization, P47, DOI [10.1145/1056018.1056025, DOI 10.1145/1056018.1056025]
   WETTEL R, 2011, P 33 INT C SOFTW ENG, P551
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Wettel R, 2008, WORK CONF REVERSE EN, P219, DOI 10.1109/WCRE.2008.55
   Wu JW, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P80
NR 27
TC 5
Z9 6
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 118
EP 130
DI 10.1016/j.infsof.2018.01.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD8LP
UT WOS:000430764200009
DA 2024-07-18
ER

PT J
AU Zhang, PC
   Pelliccione, P
   Leung, H
   Li, XD
AF Zhang, Pengcheng
   Pelliccione, Patrizio
   Leung, Hareton
   Li, Xuandong
TI Automatic generation of predictive monitors from scenario-based
   specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Scenario-based specifications; Property sequence charts; Run-time
   monitor; Predictive monitor
ID INTERNET
AB Context: Unpredictability and uncertainty about future evolutions of both the system and its environment may easily compromise the behavior of the system. The subsequent software failures can have serious consequences. When dealing with open environments, run-time monitoring is one of the most promising techniques to detect software failures. Several monitoring approaches have been proposed in the last years; however, they suffer from two main limitations. First, they provide limited information to be exploited at run-time for early detecting and managing situations that most probably will lead to failures. Second, they mainly rely on logic-based specifications, whose intrinsic complexity may hamper the use of these monitoring approaches in industrial contexts.
   Objective: In order to address these two limitations, this paper proposes a novel approach, called PREDIMO (PREDIctive MOnitoring). The approach starts from scenario-based specifications, automatically generates predictive monitors called MAS (Multi-valued Automata), which take into account the actual status and also the possible evolution of both system and environment in the near future, and enables the definition of precise strategies to prevent failures. More specifically, the generated monitors evaluate the specified properties and return one of the seven different values representing the degree of controllability of the system and the distance of the potential incoming failure. The translation from scenario-based specifications to MAS preserves the semantics of the starting specification.
   Method: We use the design and creation research methodology to design an innovative approach that fills highlighted gaps of state-of-the-art approaches. The validation of the approach is performed through a large experimentation with OSGi (Open Service Gateway Initiative) applications.
   Results: We present a novel language to specify the properties to be monitored. Then, we present a novel approach to automatically generate predictive monitors from the specified properties.
   Conclusion: The overall approach is tool supported and a large experimentation demonstrates its feasibility and usability.
C1 [Zhang, Pengcheng] Hohai Univ, Coll Comp & Informat, Nanjing 211110, Jiangsu, Peoples R China.
   [Pelliccione, Patrizio] Univ Gothenburg, Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
   [Li, Xuandong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210046, Jiangsu, Peoples R China.
C3 Hohai University; University of Gothenburg; Chalmers University of
   Technology; Hong Kong Polytechnic University; Nanjing University
RP Pelliccione, P (corresponding author), Univ Gothenburg, Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
EM pchzhang@hhu.edu.cn; patrizio.pelliccione@gu.se;
   hareton.leung@polyu.edu.hk; lxd@nju.edu.cn
RI Pelliccione, Patrizio/A-4105-2008; Pelliccione, Patrizio/Q-5118-2019
OI Pelliccione, Patrizio/0000-0002-5438-2281; Pelliccione,
   Patrizio/0000-0002-5438-2281; Zhang, Pengcheng/0000-0003-3594-408X
FU National Natural Science Foundation of China [61572171, 61702159];
   Natural Science Foundation of Jiangsu Province [BK20170893]; Fundamental
   Research Funds for the Central Universities [B15020191]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 61572171, Grant 61702159, by the Natural
   Science Foundation of Jiangsu Province under Grant BK20170893, and by
   the Fundamental Research Funds for the Central Universities under Grant
   B15020191.
CR Allan C., 2005, OOPSLA, P264
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Autili M, 2007, AUTOMAT SOFTW ENG, V14, P293, DOI 10.1007/s10515-007-0012-6
   Autili M., 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, P488, DOI [DOI 10.1145/2025113, 10.1145/2025113.2025199, DOI 10.1145/2025113.2025199]
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Autili M, 2012, J INTERNET SERV APPL, V3, P15, DOI 10.1007/s13174-011-0048-5
   Barringer H, 2010, J LOGIC COMPUT, V20, P675, DOI 10.1093/logcom/exn076
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   CHAN M, 1995, SMART HOUSE AUTOMATI
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Chen Feng, 2005, JAVA MOP MONITORING, P546, DOI [10.1007/978-3-540-31980-1_36, DOI 10.1007/978-3-540-31980-1_36]
   Cheng B. H. C., 2014, USING MODELS RUNTIME, P101, DOI [DOI 10.1007/978-3-319-08915-7_4, 10.1007/978-3-319-08915-7_4]
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   de Alfaro Luca, 2004, ELECTRON NOTES THEOR, V97, P3
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Ehlers R., 2011, RV 2011, V2011, P427
   Erl T, 2005, SERVICE ORIENTED ARC
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Giannakopoulou D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P412, DOI 10.1109/ASE.2001.989841
   Harel D, 2012, J COMPUT SYST SCI, V78, P970, DOI 10.1016/j.jcss.2011.08.008
   Havelund K., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00253-1
   Holzmann G. J., 2002, Software Engineering Notes, V27, P81, DOI 10.1145/605466.605479
   *ITU, 1999, MESS SEQ CHART MSC
   Jin D, 2012, PROC INT CONF SOFTW, P1427, DOI 10.1109/ICSE.2012.6227231
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Krüger IH, 2007, LECT NOTES COMPUT SC, V4839, P63
   Kupferman O, 2008, LECT NOTES COMPUT SC, V4905, P5, DOI 10.1007/978-3-540-78163-9_3
   Lee EA, 2008, ISORC 2008: 11TH IEEE SYMPOSIUM ON OBJECT/COMPONENT/SERVICE-ORIENTED REAL-TIME DISTRIBUTED COMPUTING - PROCEEDINGS, P363, DOI 10.1109/ISORC.2008.25
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Li SH, 2010, FORM METHOD SYST DES, V37, P200, DOI 10.1007/s10703-010-0103-z
   McAffer J., 2010, OSGi and Equinox: Creating Highly Modular Java Systems
   Mei H, 2012, COMPUTER, V45, P26, DOI 10.1109/MC.2012.189
   Muccini H, 2007, LECT NOTES COMPUT SC, V4608, P124
   Pezze M., 2009, SESAS 2009, V2009, P223
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Sánchez P, 2011, J SYST SOFTWARE, V84, P1008, DOI 10.1016/j.jss.2011.01.052
   Xian Zhang, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P418, DOI 10.1007/978-3-642-28891-3_37
   Zhang P., 2017, INF SOFTW TECHNOL
   Zhang P., 2011, AUT SOFTW ENG ASE 20, P484
   Zhang PC, 2013, IEEE INT C ENG COMP, P264, DOI 10.1109/ICECCS.2013.47
   Zhang PC, 2013, IET SOFTW, V7, P222, DOI 10.1049/iet-sen.2012.0047
   Zhang PC, 2010, LECT NOTES COMPUT SC, V6418, P485, DOI 10.1007/978-3-642-16612-9_39
   Zhang PC, 2011, SOFTWARE PRACT EXPER, V41, P841, DOI 10.1002/spe.1038
NR 46
TC 2
Z9 2
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2018
VL 98
BP 5
EP 31
DI 10.1016/j.infsof.2018.01.014
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GD8LP
UT WOS:000430764200002
DA 2024-07-18
ER

PT J
AU Borges, M
   Barros, E
   Maia, PH
AF Borges, Marcos
   Barros, Erick
   Maia, Paulo Henrique
TI Cloud restriction solver: A refactoring-based approach to migrate
   applications to the cloud
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evolution; Cloud migration; Refactoring
ID SOFTWARE; ADOPTION
AB Context: The migration of legacy systems to the Platform as a Service (PaaS) model provides several benefits, but also brings new challenges, such as dealing with the restrictions imposed by the service provider. Furthermore, factors such as time, training and the extensive reengineering activities make the migration process time consuming and error prone. Although there exist several techniques for partial or total migration of legacy applications to the cloud, only a few specifically address the resolution of these constraints.
   Objective: This paper proposes a novel semi-automatic approach, called Cloud Restriction Solver (CRS), for migrating applications to a PaaS environment that avoids the cloud restrictions through user-defined refactorings.
   Methods: The approach is supported by two open and extensible tools. The first one, called CRSAnalyzer, identifies the pieces of code that violate the restrictions of the chosen PaaS platform, while the second one, CRSRefactor, changes those pieces by equivalent cloud-enabled services.
   Results: The applicability of the proposed approach is presented by showing its instantiation for Google App Engine as an Eclipse plugin and by migrating three Java applications to that PaaS successfully. In addition, an instantiation for IBM Bluemix has been created and used to compare the migration of the same application using the developed tools for both cloud providers.
   Conclusion: The proposed approach fosters software reuse, is cloud-independent, and facilitates the migration of applications to PaaS platforms.
C1 [Borges, Marcos; Barros, Erick; Maia, Paulo Henrique] Software Engn & Distributed Syst Res Grp, Fortaleza, Ceara, Brazil.
   [Borges, Marcos; Barros, Erick; Maia, Paulo Henrique] Univ Estadual Ceara, Fortaleza, Ceara, Brazil.
C3 Universidade Estadual do Ceara
RP Maia, PH (corresponding author), Univ Estadual Ceara, Fortaleza, Ceara, Brazil.
EM marcos.borges@aluno.uece.br; erick.barros@aluno.uece.br;
   pauloh.maia@uece.br
RI Maia, Paulo/KJL-0896-2024; de Freitas Borges, Marcos
   Vinicius/JAX-3832-2023; de Freitas Borges, Marcos Vinicius/AIE-6890-2022
OI Borges, Marcos Vinicius de Freitas/0000-0002-7058-3024
FU research funding agency CAPES
FX The authors would like to thank the research funding agency CAPES for
   the financial support.
CR Ahmad A, 2012, 7 INT C SOFTWARE PAR
   Andrikopoulos V., 2013, COMPUTING IN PRESS
   [Anonymous], 2008, GRID COMP ENV WORKSH
   Balis B, 2005, COMPONENT MODELS AND SYSTEMS FOR GRID APPLICATIONS, PROCEEDINGS, P57, DOI 10.1007/0-387-23352-0_4
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Carolan J., 2009, Introduction to cloud computing architecture, V1st edn
   Costa C. H., 2015, EUR C SERV OR CLOUD, P238
   Eclipse, 2006, ABSTR SYNT TREE
   Eugster P, 2006, ACM SIGPLAN NOTICES, V41, P139, DOI 10.1145/1167515.1167485
   Fehling C, 2013, IEEE INT CONF SERV, P9, DOI 10.1109/SOCA.2013.41
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fowler M., 2009, Refactoring: improving the design of existing code
   Fowler M., 2004, REFATORACAO APERFEIC
   Fowler M., 1999, COMPONENT SOFTWARE S
   Frey S., 2011, International Journal on Advances in Software, V4, P342
   Frey S, 2013, J SOFTW-EVOL PROC, V25, DOI 10.1002/smr.582
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gartner, 2016, GARTN SAYS WORLDW PU
   Santos MDI, 2016, COLECCION JURID, P1
   Jamshidi P, 2017, SOFTWARE PRACT EXPER, V47, P1159, DOI 10.1002/spe.2442
   Jamshidi P, 2013, IEEE T CLOUD COMPUT, V1, P142, DOI 10.1109/TCC.2013.10
   Khajeh-Hosseini A, 2012, SOFTWARE PRACT EXPER, V42, P447, DOI 10.1002/spe.1072
   Kwon YW, 2014, AUTOMAT SOFTW ENG, V21, P345, DOI 10.1007/s10515-013-0136-9
   Maenhaut PJ, 2016, SOFTWARE PRACT EXPER, V46, P31, DOI 10.1002/spe.2320
   Maenhaut PJ, 2013, 2013 IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2013), P900
   Marston S, 2011, DECIS SUPPORT SYST, V51, P176, DOI 10.1016/j.dss.2010.12.006
   Mendonça NC, 2014, COMPUTER, V47, P62, DOI 10.1109/MC.2014.203
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mohagheghi P., 2011, Proceedings of the 2011 IEEE World Congress on Services (SERVICES 2011), P507, DOI 10.1109/SERVICES.2011.26
   Moll P., 2011, NIST DEFINITION CLOU
   Newman S., 2015, BUILDING MICROSERVIC
   Prabhakaran P., 2014, THESIS
   Pressman R., 2016, Engenharia de Software - 8a Edicao
   Puthal D, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND NETWORKS (CINE), P116, DOI 10.1109/CINE.2015.31
   Quang Hieu Vu, 2012, 2012 IEEE Eighth World Congress on Services, P270, DOI 10.1109/SERVICES.2012.47
   Rai R, 2015, SPRINGERPLUS, V4, DOI 10.1186/s40064-015-0962-2
   Rimal Bhaskar Prasad, 2009, Proceedings of the 2009 Fifth International Joint Conference on INC, IMS and IDC, P44, DOI 10.1109/NCM.2009.218
   Saadeh E., 2009, P WARM WORKSHOP ACMI, P45
   Sanderson Dan., 2015, Programming google app engine with python: Build and run scalable python apps on google's infrastructure
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Sosinsky B., 2010, Cloud computing bible, V762
   Szake G., 2015, SOURC COD AN MAN SCA, P253
   Terra R, 2012, EUR CON SFTWR MTNCE, P335, DOI 10.1109/CSMR.2012.40
   Tilevich E, 2005, PROC IEEE INT CONF S, P91
   Tran V., 2011, Proceedings of the 2nd International Workshop on Software Engineering for Cloud Computing, P22, DOI [10.1145/1985500.1985505, DOI 10.1145/1985500.1985505]
   Vasconcelos M, 2015, LECT NOTES COMPUT SC, V9306, P181, DOI 10.1007/978-3-319-24072-5_13
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
   Zhao JF, 2014, INT J AUTOM COMPUT, V11, P143, DOI 10.1007/s11633-014-0776-7
NR 48
TC 8
Z9 8
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 346
EP 365
DI 10.1016/j.infsof.2017.11.014
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800026
DA 2024-07-18
ER

PT J
AU Hosseini, S
   Turhan, B
   Mäntyäa, M
AF Hosseini, Seyedrebvar
   Turhan, Burak
   Mantyla, Mika
TI A benchmark study on the effectiveness of search-based data selection
   and feature selection for cross project defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cross project defect prediction; Search based optimization; Genetic
   algorithms; Instance selection; Training data selection
ID EFFECT SIZE; SOFTWARE; METRICS; VALIDATION; COMPLEXITY; QUALITY
AB Context: Previous studies have shown that steered training data or dataset selection can lead to better performance for cross project defect prediction(CPDP). On the other hand, feature selection and data quality are issues to consider in CPDP.
   Objective: We aim at utilizing the Nearest Neighbor (NN)-Filter, embedded in genetic algorithm to produce validation sets for generating evolving training datasets to tackle CPDP while accounting for potential noise in defect labels. We also investigate the impact of using different feature sets.
   Method: We extend our proposed approach, Genetic Instance Selection (GIS), by incorporating feature selection in its setting. We use 41 releases of 11 multi-version projects to assess the performance GIS in comparison with benchmark CPDP (NN-filter and Naive-CPDP) and within project (Cross-Validation(CV) and Previous Releases(PR)). To assess the impact of feature sets, we use two sets of features, SCM+OO+LOC(all) and CK+LOC(ckloc) as well as iterative info-gain subsetting(IG) for feature selection.
   Results: GIS variant with info gain feature selection is significantly better than NN -Filter (all,ckloc,IG) in terms of F1 (p = values << 0.001, Cohen's d = {0.621, 0.845, 0.762)) and G (p = values << 0.001, Cohen's d = {0.899, 1.114, 1.0561), and Naive CPDP (all,ckloc,IG) in terms of Fl (p = values << 0.001, Cohen's d = {0.743, 0.865, 0.789}) and G (p = values 0.001, Cohen's d = {1.027,1.119,1.050}). Overall, the performance of GIS is comparable to that of within project defect prediction (WPDP) benchmarks, i.e. CV and PR. In terms of multiple comparisons test, all variants of GIS belong to the top ranking group of approaches.
   Conclusions: We conclude that datasets obtained from search based approaches combined with feature selection techniques is a promising way to tackle CPDP. Especially, the performance comparison with the within project scenario encourages further investigation of our approach. However, the performance of GIS is based on high recall in the expense of a loss in precision. Using different optimization goals, utilizing other validation datasets and other feature selection techniques are possible future directions to investigate. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Hosseini, Seyedrebvar; Mantyla, Mika] Univ Oulu, M3S, Fac Informat Technol & Elect Engn, Oulu 90014, Finland.
   [Turhan, Burak] Brunel Univ London, Dept Comp Sci, Uxbridge UB8 3PH, Middx, England.
C3 University of Oulu; Brunel University
RP Hosseini, S (corresponding author), Univ Oulu, M3S, Fac Informat Technol & Elect Engn, Oulu 90014, Finland.
EM rebvar@oulu.fi; burak.turhan@brunel.ac.uk; mika.mantyla@oulu.fi
RI Turhan, Burak/G-7400-2011
OI Turhan, Burak/0000-0003-1511-2163
CR [Anonymous], EMPIR SOFTW ENG
   [Anonymous], USING OBJECT ORIENTE
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He P., 2014, ARXIV14050773
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Hosseini S., 2016, P THE 12 INT C PREDI, P1, DOI DOI 10.1145/2972958.2972964
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M., 2010, P 6 INT C PRED MOD S, P9, DOI 10.1145/1868328.1868342
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liebchen G., 2016, P 12 INT C PRED MOD, DOI DOI 10.1145/2972958.2972967
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mizuno O, 2014, INT WORKSH EMPIR ENG, P43, DOI 10.1109/IWESEP.2014.9
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Ryu Duksan, 2015, Software Quality Journal, P1
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Solomon SR, 2009, J MOD APPL STAT METH, V8, P448, DOI 10.22237/jmasm/1257034080
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
   Uchigaki S., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P476, DOI 10.1109/SNPD.2012.34
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Wohlin C., 2012, Experimentation in Software Engineering
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yu LG, 2012, QUAL TECHNOL QUANT M, V9, P421, DOI 10.1080/16843703.2012.11673302
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 57
TC 71
Z9 76
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 296
EP 312
DI 10.1016/j.infsof.2017.06.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800022
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Gasparic, M
   Janes, A
   Ricci, F
   Murphy, GC
   Gurbanov, T
AF Gasparic, Marko
   Janes, Andrea
   Ricci, Francesco
   Murphy, Gail C.
   Gurbanov, Tural
TI A graphical user interface for presenting integrated development
   environment command recommendations: Design, evaluation, and
   implementation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Integrated development environment; User interface; Command;
   Functionality; Recommender system; Software development
ID SYSTEMS; SCIENCE
AB Context: A set of algorithms exist to generate integrated development environment (IDE) command recommendations. The recommendations are aimed at improving software developer's interaction with an IDE. Even though the interface is a critical element of every recommender system, we are not aware of any existing graphical user interface to present such recommendations.
   Objective: This paper describes and evaluates a novel design of a graphical user interface to recommend commands within an IDE. The interface contains a description of the suggested command, an explanation of why the command is recommended, and a command usage example.
   Method: The proposed design is based on the analysis of guidelines identified in the literature. Its acceptance and usability were evaluated through a user study with 36 software developers and semi-structured interviews with 11 software developers.
   Results: The results indicate that the suggested interface is well accepted, but it can be further improved. Through the interviews and the implementation of the interface, we identified a series of requirements important for the development of future IDE command recommender systems.
   Conclusions: This paper shows that a convenient graphical user interface is critical to achieve high acceptance of IDE command recommendations. Our work also illustrates steps useful for undertaking user studies related to IDE command recommendations in a practical setting without human intervention. A future step is to evaluate the interface within the business environment, where recommendations are generated and presented in an IDE used by practicing software developers as part of their normal workday. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Gasparic, Marko; Janes, Andrea; Ricci, Francesco; Gurbanov, Tural] Free Univ Bozen Bolzano, Dominikanerpl 3, I-39100 Bolzano, Italy.
   [Murphy, Gail C.] Univ British Columbia, 201-2366 Main Mall, Vancouver, BC V6T 1Z4, Canada.
C3 Free University of Bozen-Bolzano; University of British Columbia
RP Gasparic, M (corresponding author), Free Univ Bozen Bolzano, Dominikanerpl 3, I-39100 Bolzano, Italy.
EM marko.gasparic@stud-inf.unibz.it
RI Janes, Andrea/B-5388-2015; Janes, Andrea/IVV-0008-2023; Ricci,
   Francesco/H-3367-2012
OI Janes, Andrea/0000-0002-1423-6773; Janes, Andrea/0000-0002-1423-6773;
   Gurbanov, Tural/0000-0002-3748-4059; Ricci,
   Francesco/0000-0001-5931-5566
CR Ahmed A., 2011, Software Project Management: A Process-Driven Approach
   [Anonymous], WHY DO I NEED RES TH
   [Anonymous], P AWARE WORKSH
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Basili VR, 2014, Aligning Organizations Through Measurement-the GQM+Strategies Approach
   Bogner Alexander., 2002, Das Experteninterview - Theorie, Methode, Anwendung
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brooke John., 1996, CHAP SUSQUICK DIRTYU, P189
   Bryant A., 2019, The SAGE Handbook of Current Developments in Grounded Theory, DOI [10.4135/9781526485656, DOI 10.4135/9781848607941, DOI 10.4135/9781526485656]
   Campbell D., 2008, P WORKSH REF TOOLS
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dreyfus H. L., 1980, A five-stage model of mental activities involved in directed skill acquisition
   Fischer G, 2001, USER MODEL USER-ADAP, V11, P65, DOI 10.1023/A:1011145532042
   Flick, 2014, INTRO QUALITATIVE RE
   Gasparic M., 2017, P INT C INT US INT U
   Gasparic M., 2016, P INT C XP
   Gasparic M., 2017, GUI EVALUATION DATA
   Gasparic M., 2017, IEEE ACM INT C AUT S
   Gasparic M, 2017, J SYST SOFTWARE, V128, P200, DOI 10.1016/j.jss.2016.09.012
   Gedikli F, 2014, INT J HUM-COMPUT ST, V72, P367, DOI 10.1016/j.ijhcs.2013.12.007
   Grossman T., 2009, P SIGCHI C HUM FACT
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herlocker J. L., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P241, DOI 10.1145/358916.358995
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Jameson Anthony, 2014, Foundations and Trends in Human-Computer Interaction, V7, P1, DOI 10.1561/1100000028
   Khan M.A.A., 2015, P INT C INT US INT
   Linton F, 2000, USER MODEL USER-ADAP, V10, P181, DOI 10.1023/A:1026521931194
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   Matejka J., 2009, P ACM S US INT SOFTW
   Merriam S.B., 2009, JOSSEY BASS HIGHER A, V2nd
   MOLICH R, 1990, COMMUN ACM, V33, P338, DOI 10.1145/77481.77486
   Murphy-Hill E., 2012, P INT C SOFTW ENG
   Murphy-Hill E., 2012, P ACM SIGSOFT INT S
   Murphy-Hill E., 2014, Recommendation Systems in Software Engineering, P223, DOI DOI 10.1007/978-3-642-45135-59
   Nielsen J., 1990, P INT C HUM COMP INT
   Offermann P., 2010, P INT C GLOB PERSP D
   Ponzanelli L., 2016, P INT C SOFTW ENG
   Resnick P., 1997, P COMM ACM, V40
   Ricci F., 2014, ENCY SOCIAL NETWORK
   Ricci F, 2011, RECOMMENDER SYSTEMS HANDBOOK, P1, DOI 10.1007/978-0-387-85820-3_1
   SCACCHI W, 1991, INT J SOFTW ENG KNOW, V1, P293, DOI 10.1142/S0218194091000214
   Sefelin R., 2003, P EXT ABSTR HUM FACT
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Sinha R., 2002, P EXT ABSTR HUM FACT
   Sommerville I., 2011, INT COMPUTER SCI SER
   Strauss A., 1990, BASICS QUALITATIVE R
   Stuckemann S., 2015, VIGNELLI AUTOMATED D
   Tintarev Nava, 2015, Recommender systems handbook
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Viriyakattiyaporn P., 2010, P C CTR ADV STUD COL
   Walraet B., 2014, DISCIPLINE SOFTWARE
   Wang Y, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0026953
   Wiebe M., 2016, P INT C INT US INT
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zanker M., 2014, P INTRS WORKSH
   Zolaktaf S., 2015, P INT C MACH LEARN A
NR 56
TC 6
Z9 6
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 236
EP 255
DI 10.1016/j.infsof.2017.08.006
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200016
DA 2024-07-18
ER

PT J
AU Greene, GJ
   Esterhuizen, M
   Fischer, B
AF Greene, Gillian J.
   Esterhuizen, Marvin
   Fischer, Bernd
TI Visualizing and exploring software version control repositories using
   interactive tag clouds over formal concept lattices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal concept analysis; Tag clouds; Browsing software repositories;
   Interactive tag cloud visualization
AB Context: version control repositories contain a wealth of implicit information that can be used to answer many questions about a project's development process. However, this information is not directly accessible in the repositories and must be extracted and visualized.
   Objective: the main objective of this work is to develop a flexible and generic interactive visualization engine called ConceptCloud that supports exploratory search in version control repositories.
   Method: ConceptCloud is a flexible, interactive browser for SVN and Git repositories. Its main novelty is the combination of an intuitive tag cloud visualization with an underlying concept lattice that provides a formal structure for navigation. ConceptCloud supports concurrent navigation in multiple linked but individually customizable tag clouds, which allows for multi-faceted repository browsing, and scriptable construction of unique visualizations.
   Results: we describe the mathematical foundations and implementation of our approach and use ConceptCloud to quickly gain insight into the team structure and development process of three projects. We perform a user study to determine the usability of ConceptCloud. We show that untrained participants are able to answer historical questions about a software project better using ConceptCloud than using a linear list of commits.
   Conclusion: ConceptCloud can be used to answer many difficult questions such as "What has happened in this project while I was away?" and "Which developers collaborate?". Tag clouds generated from our approach provide a visualization in which version control data can be aggregated and explored interactively. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Greene, Gillian J.; Esterhuizen, Marvin; Fischer, Bernd] Stellenbosch Univ, Div Comp Sci, CSIR Meraka, CAIR, Stellenbosch, South Africa.
C3 Stellenbosch University
RP Greene, GJ (corresponding author), Stellenbosch Univ, Div Comp Sci, CSIR Meraka, CAIR, Stellenbosch, South Africa.
EM ggreene@cs.sun.ac.za; mhesterhuizen@cs.sun.ac.za; bfischer@cs.sun.ac.za
RI Esterhuizen, Martie/Q-7956-2018
OI Esterhuizen, Martie/0000-0003-3666-6659; Fischer,
   Bernd/0000-0002-1815-218X
FU STIAS Doctoral Scholarship; NRF Grant [93582]; CAIR; MIH Media Lab
FX This research is funded in part by a STIAS Doctoral Scholarship, NRF
   Grant 93582, CAIR, and the MIH Media Lab.
CR Alonso Omar., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories, P125
   [Anonymous], 2008, COMPANION 23 ACM SIG
   [Anonymous], P INT C SOFTW MAINT
   [Anonymous], An Introduction to Information Retrieval
   [Anonymous], 2007, P INT WORKSH PRINC S
   [Anonymous], P 3 ACM SIGMOD WORKS
   [Anonymous], 2000, AUTOMATED SOFTWARE E
   [Anonymous], IJCAI 95 WORKSH FORM
   [Anonymous], COLIBRI JAVA
   [Anonymous], P C CTR ADV STUD COL
   [Anonymous], 2015 30 IEEEACM INT
   [Anonymous], P CHI09 EXT ABSTR HU
   [Anonymous], 2013, 2013 1 IEEE WORKING
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Carpineto C, 1996, MACH LEARN, V24, P95
   Cottrell R, 2009, IEEE INT WORK VIS SO, P29, DOI 10.1109/VISSOF.2009.5336429
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Davey B. A., 2002, INTRO LATTICES ORDER, V2nd, DOI DOI 10.1017/CBO9780511809088
   Di Caro L, 2011, J VISUAL LANG COMPUT, V22, P120, DOI 10.1016/j.jvlc.2010.11.001
   Emerson J, 2013, IEEE AUS SOFT ENGR, P155, DOI 10.1109/ASWEC.2013.27
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Greene GJ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P759, DOI 10.1145/2635868.2661676
   Greene GJ, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P56, DOI 10.1109/VISSOFT.2015.7332415
   Hindle A., 2005, Proceedings of the 2005 international workshop on Mining Software Repositories, MSR, P1
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Lindig C., 2000, Working with Conceptual Structures-Contributions to ICCS 2000, P152
   Loeliger J, 2012, Version Control with Git
   Lohmann S, 2009, LECT NOTES COMPUT SC, V5726, P392, DOI 10.1007/978-3-642-03655-2_43
   Marchionini G, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1121949.1121979
   Mesnage C, 2009, 2ND INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING AND APPLICATIONS - SOSEA 2009, P29
   Murphy G. C., 1996, ACM Transactions on Software Engineering and Methodology, V5, P262, DOI 10.1145/234426.234441
   Navigli R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459355
   Pilato C.M., 2008, VERSION CONTROL SUBV
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Robles G., 2005, INT C SOFTW ENG P 20, P1, DOI DOI 10.1145/1082983.1083162
   Schrammel J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2037
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Sinclair J, 2008, J INF SCI, V34, P15, DOI 10.1177/0165551506078083
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Snelting G., 1998, Software Engineering Notes, V23, P99, DOI 10.1145/291252.288273
   Snelting G., 1996, ACM Transactions on Software Engineering and Methodology, V5, P146, DOI 10.1145/227607.227613
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   TUKEY JW, 1949, BIOMETRICS, V5, P99, DOI 10.2307/3001913
   Van Rijsbergen C. J., INFORM RETRIEVAL
   Vesperman Jennifer., 2006, Essential CVS
   WeiSSgerber Peter., 2007, MINING SOFTWARE REPO, P9
   White RW., 2009, SYNTHESIS LECT INFOR, DOI [10.2200/S00174ED1V01Y200901ICR003, DOI 10.2200/S00174ED1V01Y200901ICR003]
   Wille R, 2009, LECT NOTES ARTIF INT, V5548, P314
   Zaidman A., 2008, 2008 1st international conference on software testing, verification, and validation, P220
NR 56
TC 9
Z9 10
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 223
EP 241
DI 10.1016/j.infsof.2016.12.001
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300015
DA 2024-07-18
ER

PT J
AU Sun, CA
   Xue, FF
   Liu, H
   Zhang, XY
AF Sun, Chang-ai
   Xue, Feifei
   Liu, Huai
   Zhang, Xiangyu
TI A path-aware approach to mutant reduction in mutation testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Selective mutation testing; Control flow; Path depth
ID PROGRAMS; UNIT
AB Context: Mutation testing, which systematically generates a set of mutants by seeding various faults into the base program under test, is a popular technique for evaluating the effectiveness of a testing method. However, it normally requires the execution of a large amount of mutants and thus incurs a high cost.
   Objective: A common way to decrease the cost of mutation testing is mutant reduction, which selects a subset of representative mutants. In this paper, we propose a new mutant reduction approach from the perspective of program structure.
   Method: Our approach attempts to explore path information of the program under test, and select mutants that are as diverse as possible with respect to the paths they cover. We define two path-aware heuristic rules, namely module-depth and loop-depth rules, and combine them with statement- and operator-based mutation selection to develop four mutant reduction strategies.
   Results: We evaluated the cost-effectiveness of our mutant reduction strategies against random mutant selection on 11 real-life C programs with varying sizes and sampling ratios. Our empirical studies show that two of our mutant reduction strategies, which primarily rely on the path-aware heuristic rules, are more effective and systematic than pure random mutant selection strategy in terms of selecting more representative mutants. In addition, among all four strategies, the one giving loop-depth the highest priority has the highest effectiveness.
   Conclusion: In general, our path-aware approach can reduce the number of mutants without jeopardizing its effectiveness, and thus significantly enhance the overall cost-effectiveness of mutation testing. Our approach is particularly useful for the mutation testing on large-scale complex programs that normally involve a huge amount of mutants with diverse fault characteristics. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Sun, Chang-ai; Xue, Feifei] Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing, Peoples R China.
   [Liu, Huai] RMIT Univ, Australia India Res Ctr Automat Software Engn, Melbourne, Vic, Australia.
   [Zhang, Xiangyu] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 University of Science & Technology Beijing; Royal Melbourne Institute of
   Technology (RMIT); Purdue University System; Purdue University
RP Sun, CA (corresponding author), Univ Sci & Technol Beijing, Sch Comp & Commun Engn, Beijing, Peoples R China.
EM casun@ustb.edu.cn; 729045626@qq.com; huai.liu@rmit.edu.au;
   xyzhang@cs.purdue.edu
RI Liu, Huai/M-4871-2019; Zhang, Xiangyu/H-9255-2013
OI Liu, Huai/0000-0003-3125-4399; Zhang, Xiangyu/0000-0003-0876-6783
FU National Natural Science Foundation of China [61370061]; Beijing Natural
   Science Foundation of China [4162040]; Beijing Municipal Training
   Program for Excellent Talents [2012D009006000002]; Fundamental Research
   Funds for the Central Universities [FRF-SD-12-015A]
FX This research is supported by the National Natural Science Foundation of
   China under Grant No. 61370061, the Beijing Natural Science Foundation
   of China (Grant No. 4162040), the Beijing Municipal Training Program for
   Excellent Talents under Grant No. 2012D009006000002, and the Fundamental
   Research Funds for the Central Universities under Grant No.
   FRF-SD-12-015A. Thanks to the anonymous reviewers who provided useful
   suggestions on earlier version of this paper. All correspondence should
   be addressed to both Chang-ai Sun and Huai Liu.
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1980, THESIS
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P203, DOI 10.1109/ICST.2014.33
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harman M., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P397
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Hussain S., 2008, THESIS
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Ji C., 2009, Communications and Photonics Conference and Exhibition, Asia, P1
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Just R, 2015, SOFTW TEST VERIF REL, V25, P490, DOI 10.1002/stvr.1561
   Kintis M, 2015, SOFTW TEST VERIF REL, V25, P508, DOI 10.1002/stvr.1529
   Lin Zhiqiang., 2008, P 16 ACM SIGSOFT INT, P83
   Liu H, 2012, SOFTWARE PRACT EXPER, V42, P1055, DOI 10.1002/spe.1113
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   Mathur A.P., 1993, SOFTW TEST VERIFIC R, V4, P9
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt A.J., 2000, MUTATION TESTING NEW, P34
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Sun C., 2014, J COMPUT RES DEV, V51, P874
   Sun Chang-Ai, 2000, Journal of Beijing University of Aeronautics and Astronautics, V26, P705
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Vincenzi AMR, 2001, SOFTW TEST VERIF REL, V11, P249, DOI 10.1002/stvr.242
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang L., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, P331, DOI [10.1145/2338965.2336793, DOI 10.1145/2338965.2336793]
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 51
TC 24
Z9 30
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 65
EP 81
DI 10.1016/j.infsof.2016.02.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Marculescu, B
   Poulding, S
   Feldt, R
   Petersen, K
   Torkar, R
AF Marculescu, Bogdan
   Poulding, Simon
   Feldt, Robert
   Petersen, Kai
   Torkar, Richard
TI Tester interactivity makes a difference in search-based software
   testing: A controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based software testing; Interactive search-based software
   testing; Controlled experiment
ID EVOLUTIONARY COMPUTATION; OPTIMIZATION; SYSTEMS; DESIGN
AB Context: Search-based software testing promises to provide users with the ability to generate high quality test cases, and hence increase product quality, with a minimal increase in the time and effort required.
   The development of the Interactive Search-Based Software Testing (ISBST) system was motivated by a previous study to investigate the application of search-based software testing (SBST) in an industrial setting. ISBST allows users to interact with the underlying SBST system, guiding the search and assessing the results. An industrial evaluation indicated that the ISBST system could find test cases that are not created by testers employing manual techniques. The validity of the evaluation was threatened, however, by the low number of participants.
   Objective: This paper presents a follow-up study, to provide a more rigorous evaluation of the ISBST system.
   Method: To assess the ISBST system a two-way crossover controlled experiment was conducted with 58 students taking a Verification and Validation course. The NASA Task Load Index (NASA-TLX) is used to assess the workload experienced by the participants in the experiment.
   Results:The experimental results validated the hypothesis that the ISBST system generates test cases that are not found by the same participants employing manual testing techniques. A follow-up laboratory experiment also investigates the importance of interaction in obtaining the results.
   In addition to this main result, the subjective workload was assessed for each participant by means of the NASA-TLX tool. The evaluation showed that, while the ISBST system required more effort from the participants, they achieved the same performance.
   Conclusions: The paper provides evidence that the ISBST system develops test cases that are not found by manual techniques, and that interaction plays an important role in achieving that result. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Marculescu, Bogdan; Poulding, Simon; Feldt, Robert; Petersen, Kai] Blekinge Inst Technol, Karlskrona, Sweden.
   [Torkar, Richard] Chalmers, Gothenburg, Sweden.
   [Torkar, Richard] Univ Gothenburg, Gothenburg, Sweden.
C3 Blekinge Institute Technology; Chalmers University of Technology;
   University of Gothenburg
RP Marculescu, B (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM bogdan.marculescu@bth.se
OI Petersen, Kai/0000-0002-1532-8223
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   [Anonymous], 2015, CORR
   [Anonymous], 2011, P 13 ANN C GENETIC E
   [Anonymous], CORR
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P INT WORKSH SOFT CO
   [Anonymous], 3 SWED C SOFTW ENG R
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Avigad G, 2009, IEEE T SYST MAN CY B, V39, P1013, DOI 10.1109/TSMCB.2008.2011565
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Bentley PJ, 1998, SOFT COMPUTING IN ENGINEERING DESIGN AND MANUFACTURING, P231
   Bush BJ, 2011, IEEE T EVOLUT COMPUT, V15, P424, DOI 10.1109/TEVC.2010.2096539
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Deb K, 2010, IEEE T EVOLUT COMPUT, V14, P723, DOI 10.1109/TEVC.2010.2064323
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Haapalainen E, 2010, 12 INT C UBIQUITOUS, P301
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   HART S G, 1988, P139
   Hayashida N, 2000, IEEE IND ELEC, P2738, DOI 10.1109/IECON.2000.972431
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Kamalian R, 2006, IEEE INT CONF FUZZY, P678, DOI 10.1109/FUZZY.2006.1681784
   Liapis A., 2012, P AIIDE WORKSH HUM C
   Maesani A, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0086831
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marculescu Bogdan, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P273, DOI 10.1007/978-3-642-33119-0_21
   Marculescu B, 2015, APPL SOFT COMPUT, V29, P26, DOI 10.1016/j.asoc.2014.12.025
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Parmee IC, 2000, EVOL COMPUT, V8, P197, DOI 10.1162/106365600568176
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Simons CL, 2012, IEEE T SYST MAN CY C, V42, P1797, DOI 10.1109/TSMCC.2012.2225103
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Tonella P., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P57, DOI 10.1109/SSBSE.2010.17
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Walsh P., 2010, EVOLUTIONARY COMPUTA, P1
   WARD JH, 1963, J AM STAT ASSOC, V58, P236, DOI 10.2307/2282967
NR 38
TC 7
Z9 8
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2016
VL 78
BP 66
EP 82
DI 10.1016/j.infsof.2016.05.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DR0YZ
UT WOS:000379634100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fu, W
   Menzies, T
   Shen, XP
AF Fu, Wei
   Menzies, Tim
   Shen, Xipeng
TI Tuning for software analytics: Is it really necessary?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Defect prediction; CART; Random forest; Differential evolution;
   Search-based software engineering
ID DEFECT PREDICTION; DIFFERENTIAL EVOLUTION; SEARCH; OPTIMIZATION
AB Context Data miners have been widely used in software engineering to, say, generate defect predictors from static code measures. Such static code defect predictors perform well compared to manual methods, and they are easy to use and useful to use. But one of the "black arts" of data mining is setting the tunings that control the miner.
   Objective: We seek simple, automatic, and very effective method for finding those tunings.
   Method: For each experiment with different data sets (from open source JAVA systems), we ran differential evolution as an optimizer to explore the tuning space (as a first step) then tested the tunings using hold-out data.
   Results: Contrary to our prior expectations, we found these tunings were remarkably simple: it only required tens, not thousands, of attempts to obtain very good results. For example, when learning software defect predictors, this method can quickly find tunings that alter detection precision from 0% to 60%.
   Conclusion: Since (1) the improvements are so large, and (2) the tuning is so simple, we need to change standard methods in software analytics. At least for defect prediction, it is no longer enough to just run a data miner and present the result without conducting a tuning optimization study. The implication for other kinds of analytics is now an open and pressing issue. (c) 2016 Elsevier B.V. All rights reserved.
C1 [Fu, Wei; Menzies, Tim; Shen, Xipeng] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Fu, W (corresponding author), N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM wfu@ncsu.edu; tim.menzies@gmail.com; xshen5@ncsu.edu
RI Menzies, Tim/X-7680-2019; Fu, Wei/AAN-6829-2021; Fu, Wei/AAF-7120-2019
OI Menzies, Tim/0000-0002-5040-3196; Shen, Xipeng/0000-0003-3599-8010
FU National Science Foundation CISE CCF award [1506586]; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1506586] Funding Source: National Science Foundation
FX The work has partially funded by a National Science Foundation CISE CCF
   award #1506586.
CR Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], P RAISE 12
   [Anonymous], 1995, Empirical methods for artificial intelligence
   Arisholm E., 2006, ISESE 06
   BAKER DML, 2007, THESIS
   Beausoleil RP, 2006, EUR J OPER RES, V169, P426, DOI 10.1016/j.ejor.2004.08.008
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chiha I., 2012, IS-CCSP'12, P1
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   FAYYAD UM, 1993, IJCAI-93, VOLS 1 AND 2, P1022
   FEATHER M, 2002, IEEE JOINT C REQ ENG
   Fürnkranz J, 2005, MACH LEARN, V58, P39, DOI 10.1007/s10994-005-5011-x
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   GLOVER F, 1986, COMPUT OPER RES, V13, P563, DOI 10.1016/0305-0548(86)90050-X
   Goldberg A., 1979, COUR COMP SCI C NEW
   Green P, 2009, IEEE INT CONF AUTOM, P52, DOI 10.1109/ASE.2009.93
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hao Pan, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P78, DOI 10.1109/CSSE.2008.1057
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Jia Y., 2015, ICSE 15
   Jolliffe I.T., 1986, Principal component analysis, DOI DOI 10.1016/0169-7439(87)80084-9
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Krall J, 2016, IEEE T HUM-MACH SYST, V46, P221, DOI 10.1109/THMS.2015.2509980
   Krall J, 2015, IEEE T SOFTWARE ENG, V41, P1001, DOI 10.1109/TSE.2015.2432024
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Menzies T, 2003, IEEE T SOFTWARE ENG, V29, P474, DOI 10.1109/TSE.2003.1199076
   Menzies T., 2007, P 22 IEEE ACM INT C, P303, DOI [10.1145/1321631.1321676, DOI 10.1145/1321631.1321676]
   Menzies T., 2015, Sharing Data and Models in Software Engineering, P321, DOI DOI 10.1016/B978-0-12-417295-1.00024-2
   Menzies T., 2002, ASE 02
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Molina J, 2007, INFORMS J COMPUT, V19, P91, DOI 10.1287/ijoc.1050.0149
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nebro A.J., IEEE T EVOL COMP, V12
   Omran MGH, 2005, IEEE C EVOL COMPUTAT, P966
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rakitin StevenR., 2001, ART H COMP SCI LIBR, V2nd
   Robic T, 2005, LECT NOTES COMPUT SC, V3410, P520
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tosun A., 2010, AL BASED SOFTWARE DE
   Tosun A., 2009, PROMISE'09
   Vesterstrom J, 2004, IEEE C EVOL COMPUTAT, P1980
   Waibin Huang, 2010, Proceedings 2010 Sixth International Conference on Natural Computation (ICNC 2010), P2788, DOI 10.1109/ICNC.2010.5583335
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zuluaga M., 2013, INT C MACH LEARN ICM
NR 63
TC 126
Z9 142
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2016
VL 76
BP 135
EP 146
DI 10.1016/j.infsof.2016.04.017
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO6VZ
UT WOS:000377922900008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Noei, E
   Heydarnoori, A
AF Noei, Ehsan
   Heydarnoori, Abbas
TI EXAF: A search engine for sample applications of object-oriented
   framework-provided concepts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented application frameworks; Framework-provided concepts;
   Sample applications; Frameworks comprehension; Code search engines
ID USABILITY
AB Context: Object-oriented application frameworks, such as Java Swing, provide reusable code and design for implementing domain-specific concepts, such as Context Menu, in software applications. Hence, use of such frameworks not only can decrease the time and the cost of developing new software applications, but also can increase their maintainability. However, the main problems of using object-oriented application frameworks are their large and complex APIs, and often incomplete user manuals. To mitigate these problems, developers often try to learn how to implement their desired concepts from available sample applications. Nonetheless, this introduces another hard and time-consuming challenge which is finding proper sample applications.
   Objective: To address this difficulty, we introduce EXAF (EXample Applications Finder) that helps developers find sample applications which implement their desired framework-provided concepts.
   Method: The majority of existing framework comprehension approaches can only help programmers to get familiar with the usage of particular fine-grained API elements of the desired framework such as its classes and methods. Nevertheless, our approach is able to find sample applications that implement a particular framework-provided concept. To this end, EXAF benefits from the Latent Semantic Indexing (LSI) information retrieval technique. We evaluated the approach using 24 concepts on top of the Microsoft .Net, Qt, and Java Swing frameworks.
   Results: Based on our evaluations, the precision of EXAF is more than 79%. Besides, it can find some sample applications that could not be found by common code search engines such as the ones which are used in SourceForge and Google Code.
   Conclusions: The results of our evaluations indicate that EXAF is effective in practice, and yields better search results because it considers various artifacts of a project like user reviews and bug reports. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Noei, Ehsan; Heydarnoori, Abbas] Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran, Iran.
C3 Sharif University of Technology
RP Heydarnoori, A (corresponding author), Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran, Iran.
EM enoei@ce.sharif.edu; heydarnoori@sharif.edu
RI Heydarnoori, Abbas/ABB-2493-2020
OI Heydarnoori, Abbas/0000-0001-9785-2880
CR [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_4
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], 2016, EXAF REPLICATION PAC
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], 1998, WORDNET
   [Anonymous], P 17 ACM C INF KNOWL
   Blanchette J., 2006, C++ GUI Programming with Qt 4
   Izquierdo JLC, 2012, INFORM SOFTWARE TECH, V54, P257, DOI 10.1016/j.infsof.2011.09.006
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Dagenais B., 2008, FSE, P203
   Dagenais B., 2007, P 3 WORKSH LINK ASP
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   EDMUNDSON HP, 1969, J ACM, V16, P264, DOI 10.1145/321510.321519
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gamma E., 2004, CONTRIBUTING ECLIPSE
   Geary D.M., 1999, GRAPHIC JAVA 2 MASTE
   Heydarnoori A., 2009, THESIS U WATERLOO CA
   Heydarnoori A, 2012, IEEE T SOFTWARE ENG, V38, P1464, DOI 10.1109/TSE.2011.77
   Heydarnoori A, 2009, LECT NOTES COMPUT SC, V5653, P344, DOI 10.1007/978-3-642-03013-0_16
   Hoffmann R, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P13
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Jurgens D., 2010, Proceedings of the ACL 2010 System Demonstrations, P30
   Karambelkar H., 2014, Scaling apache solr
   Kelleher C, 2005, ACM COMPUT SURV, V37, P83, DOI 10.1145/1089733.1089734
   Keswani R, 2014, INT C ADV COMPUT COM, P159, DOI 10.1109/ACCT.2014.57
   Laliwala Z., 2013, WEB CRAWLING DATA MI
   Lemos O.A. L., 2007, COMPANION 22 ACM SIG, P917, DOI [10.1145/1297846.1297944, DOI 10.1145/1297846.1297944]
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Pedroni M, 2007, SIGCSE 2007: PROCEEDINGS OF THE THIRTY-EIGHTH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P454, DOI 10.1145/1227504.1227465
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Robertson S. E., 1999, Seventh Text REtrieval Conference (TREC-7) (NIST SP 500-242), P253
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sahavechaphan N, 2006, ACM SIGPLAN NOTICES, V41, P413, DOI 10.1145/1167515.1167508
   Scheller T, 2015, INFORM SOFTWARE TECH, V61, P145, DOI 10.1016/j.infsof.2015.01.009
   Sheard J, 2008, ITICSE '08: PROCEEDINGS OF THE 13TH ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P209
   Shi Z., 2014, Proc. InnoSWDev, P106
   Soloway E., 2013, Studying the novice programmer
   Stolee KT, 2016, J SYST SOFTWARE, V116, P35, DOI 10.1016/j.jss.2015.04.081
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Thai Thuan., 2003, NET FRAMEWORK ESSENT
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Tian Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P568, DOI 10.1145/2591062.2591071
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Tran D.H., 2015, KNOWLEDGE SYSTEMS EN, P143
   WILBUR WJ, 1992, J INF SCI, V18, P45, DOI 10.1177/016555159201800106
   Willett P, 2006, PROGRAM-ELECTRON LIB, V40, P219, DOI 10.1108/00330330610681295
   Ye Y., 2000, Software Engineering Notes, V25, P60, DOI 10.1145/357474.355053
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 56
TC 5
Z9 5
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 135
EP 147
DI 10.1016/j.infsof.2016.03.007
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100010
DA 2024-07-18
ER

PT J
AU Alégroth, E
   Feldt, R
   Kolström, P
AF Alegroth, Emil
   Feldt, Robert
   Kolstrom, Pirjo
TI Maintenance of automated test suites in industry: An empirical study on
   Visual GUI Testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Visual GUI Testing; Maintenance; Return on investment; Empirical;
   Industrial
ID TOOL
AB Context: Verification and validation (V&V) activities make up 20-50% of the total development costs of a software system in practice. Test automation is proposed to lower these V&V costs but available research only provides limited empirical data from industrial practice about the maintenance costs of automated tests and what factors affect these costs. In particular, these costs and factors are unknown for automated GUI-based testing.
   Objective: This paper addresses this lack of knowledge through analysis of the costs and factors associated with the maintenance of automated GUI-based tests in industrial practice.
   Method: An empirical study at two companies, Siemens and Saab, is reported where interviews about, and empirical work with, Visual GUI Testing is performed to acquire data about the technique's maintenance costs and feasibility.
   Results: 13 factors are observed that affect maintenance, e.g. tester knowledge/experience and test case complexity. Further, statistical analysis shows that developing new test scripts is costlier than maintenance but also that frequent maintenance is less costly than infrequent, big bang maintenance. In addition a cost model, based on previous work, is presented that estimates the time to positive return on investment (ROI) of test automation compared to manual testing.
   Conclusions: It is concluded that test automation can lower overall software development costs of a project while also having positive effects on software quality. However, maintenance costs can still be considerable and the less time a company currently spends on manual testing, the more time is required before positive, economic, ROI is reached after automation. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Alegroth, Emil] Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
   [Feldt, Robert] Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, SE-37179 Karlskrona, Sweden.
   [Kolstrom, Pirjo] Saab Sensis ATM Sweden, Ljungadalsgatan 2, S-35246 Vaxjo, Sweden.
C3 Chalmers University of Technology; Blekinge Institute Technology
RP Alégroth, E (corresponding author), Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
EM Emil.Alegroth@Chalmers.se; Robert.Feldt@gmail.com;
   Pirjo.Kolstrom@Saabgroup.com
CR Adams A, 2012, SPORT EDUC SOC, V17, P347, DOI 10.1080/13573322.2011.608938
   Afzal W., EXPT EFFECTIVENESS E
   Alegroth E., 2014, EMPIR SOFTW ENG, V20, P1
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P439, DOI 10.1109/ICST.2013.61
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P56, DOI 10.1109/ICST.2013.14
   Andersson J, 2004, LECT NOTES COMPUT SC, V3092, P1
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Borjesson E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P350, DOI 10.1109/ICST.2012.115
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Chang Liu, 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P713, DOI 10.1109/ICSE.2000.870477
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Cheon Y., 2006, ECOOP 2002Object-Oriented Programming, P1789
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Ellims M, 2006, EMPIR SOFTW ENG, V11, P5, DOI 10.1007/s10664-006-5964-9
   Ericson T., 1997, Software Testing, Verification and Reliability, V7, P229, DOI 10.1002/(SICI)1099-1689(199712)7:4<229::AID-STVR149>3.0.CO;2-M
   Fewster M., 1999, Software test automation: effective use of test execution tools
   Finsterwalder M., 2001, Proc. of the 2nd Int. Conf. on Extreme Prog, P114
   Gamma E, 1999, JAVA REP, V4, P27
   Gao Z., 2015, P 37 INT C SOFTW ENG
   Grechanik M, 2009, IEEE ICST WORKSHOP, P243, DOI 10.1109/ICSTW.2009.31
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   GUTIERREZ JJ, 2006, 4 WORKSH SYST TEST V
   Hackner DR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P959
   Hailpern B, 2002, IBM SYST J, V41, P4, DOI 10.1147/sj.411.0004
   Holmes A, 2006, AGILE 2006, Proceedings, P270, DOI 10.1109/AGILE.2006.19
   Horowitz E., 1993, S935 US CC
   Itkonen J., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Karhu Katja, 2009, 2009 2nd International Conference on Software Testing Verification and Validation (ICST 2009), P201, DOI 10.1109/ICST.2009.16
   Kornecki A, 2009, INNOV SYST SOFTW ENG, V5, P149, DOI 10.1007/s11334-009-0088-1
   Leitner A., 2007, SYST SCI 2007 HICSS, p261a, DOI [10.1109/HICSS.2007.462, DOI 10.1109/HICSS.2007.462]
   Leotta M, 2014, LECT NOTES COMPUT SC, V8541, P322, DOI 10.1007/978-3-319-08245-5_19
   Leotta M, 2013, WORK CONF REVERSE EN, P272, DOI 10.1109/WCRE.2013.6671302
   Memon AM, 2002, COMPUTER, V35, P87, DOI 10.1109/MC.2002.1023795
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Olan M., 2003, Journal of Computing Sciences in Colleges, V19, P319
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sjosten-Andersson E., 2006, SERPS06, P3
   Tanja EJ, 2015, INT J INF SYST MODEL, V6, P46, DOI 10.4018/IJISMD.2015070103
   Vizulis V, 2012, BALT J MOD COMPUT, V787, P27
   Wagner Stefan., 2006, Proceedings of the 2006 International Symposium on Software Testing and Analysis, ISSTA '06, P73
   Yeh T, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P183
   Zaraket F., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P747, DOI 10.1109/ICST.2012.168
NR 45
TC 39
Z9 42
U1 1
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 66
EP 80
DI 10.1016/j.infsof.2016.01.012
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bai, JJ
   Wang, YP
   Liu, HQ
   Hu, SM
AF Bai, Jia-Ju
   Wang, Yu-Ping
   Liu, Hu-Qiu
   Hu, Shi-Min
TI Mining and checking paired functions in device drivers using
   characteristic fault injection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Device drivers; Resource usage; Paired functions; Dynamic analysis;
   Fault injection
AB Context: Device drivers often call specific kernel interface functions in pairs to allocate and release resources, and these functions can be called as paired functions. But due to poor documentation and carelessness, developers sometimes misuse paired functions in drivers, which causes resource-usage violations.
   Objective: Many dynamic approaches have been proposed to mine API rules and check resource usage for user-mode applications, but they are rarely applied to kernel-mode device drivers due to their designs. Meanwhile, most existing dynamic approaches lack systematic mechanisms to cover error handling code, which limits their availability and scalability. Our goal is to improve dynamic analysis to solve these problems.
   Method: In this paper, we propose PairCheck, a novel approach for mining and checking paired functions in device drivers, using three techniques. Firstly, we design a characteristic fault injection framework to generate test cases, which simulates occasional errors and covers most error handling code with little effort. Secondly, complete runtime information is recorded through call interception during test-case execution. Thirdly, we mine and check paired functions based on collected runtime information, name patterns and statistical analysis.
   Result: To validate the availability of PairCheck, we evaluate it on 11 Linux Ethernet card drivers. PairCheck mines 37 and 43 real paired functions in Linux 3.1.1 and 3.17.2, respectively. With these mined paired functions, it finds 10 violations in Linux 3.1.1 which have been fixed in 3.17.2, and 35 new violations in 3.17.2. The replies from developers indicate the false positive rate is low. Compared to normal execution, code coverage increases by 8.3% on average.
   Conclusion: Our work shows that it is possible to precisely mine API rules of resource usage by using characteristic fault injection. The mined rules are useful for improving the reliability of device drivers. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Bai, Jia-Ju; Wang, Yu-Ping; Liu, Hu-Qiu; Hu, Shi-Min] Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
C3 Tsinghua University
RP Wang, YP (corresponding author), Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
EM bjj13@mails.tsinghua.edu.cn; wyp@mail.tsinghua.edu.cn;
   liuhq11@mails.tsinghua.edu.cn; shimin@tsinghua.edu.cn
RI Hu, Shi-Min/AAW-1952-2020
OI Wang, Yu-Ping/0000-0003-4129-7704
FU Tsinghua University Initiative Scientific Research Program [2014z09102]
FX We would like to express our gratitude to the developers of Linux device
   drivers, who have given us useful feedbacks. We also thank Ralph Martin
   for his valuable suggestions. This research is supported by Tsinghua
   University Initiative Scientific Research Program (2014z09102).
CR Anh Cuong Nguyen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P151, DOI 10.1109/MSR.2012.6224275
   Chabbi Milind., 2014, P ANN IEEEACM INT S, P76, DOI DOI 10.1145/2581122.2544164
   Corbet Jonathan, 2005, Linux device drivers, VThird
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Huxing Zhang, 2011, 2011 IEEE/IFIP 41st International Conference on Dependable Systems and Networks Workshops (DSN-W), P265, DOI 10.1109/DSNW.2011.5958824
   Jia-Ju Bai, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P407, DOI 10.1109/APSEC.2014.66
   Kadav A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P59
   Lawall JL, 2009, I C DEPEND SYS NETWO, P43, DOI 10.1109/DSN.2009.5270354
   Lee C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P591, DOI 10.1145/1985793.1985874
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Liu HQ, 2014, P INT COMP SOFTW APP, P33, DOI 10.1109/COMPSAC.2014.10
   Mendonça M, 2007, I C DEPEND SYS NETWO, P554, DOI 10.1109/DSN.2007.85
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Paul D.M., 2011, EFFICIENT TESTING RE, V29, P1
   Pradel M, 2012, PROC INT CONF SOFTW, P288, DOI 10.1109/ICSE.2012.6227185
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Qian Wu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P233, DOI 10.1109/ASE.2011.6100058
   SAHA S., 2013, P 43 INT C DEP SYST P 43 INT C DEP SYST, P1
   Saha S, 2011, LCTES 11: PROCEEDINGS OF THE ACM SIGPLAN/SIGBED 2011 CONFERENCE ON LANGUAGES, COMPILERS, TOOLS AND THEORY FOR EMBEDDED SYSTEMS, P41
   Swift MM, 2006, ACM T COMPUT SYST, V24, P333, DOI 10.1145/1189256.1189257
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Winter S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P51, DOI 10.1145/1985793.1985801
   Zhang PY, 2012, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2012.6227157
NR 28
TC 8
Z9 8
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 122
EP 133
DI 10.1016/j.infsof.2016.01.018
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400009
DA 2024-07-18
ER

PT J
AU Kintis, M
   Malevris, N
AF Kintis, Marinos
   Malevris, Nicos
TI MEDIC: A static analysis framework for equivalent mutant identification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Equivalent mutant detection; Stubborn mutant
   detection; Static analysis; Data flow analysis
ID DATA-FLOW; ALL-USES; MUTATION; DEPENDENCE
AB Context: The equivalent mutant problem is a well-known impediment to the adoption of mutation testing in practice. In consequence of its undecidable nature, a complete automated solution is unattainable. To worsen the situation, the manual analysis of the generated mutants of a program under test is prohibitive due to their vast number and the complexity of determining their equivalence.
   Objective: This paper focuses on the automated identification of equivalent and partially equivalent mutants, i.e. mutants that are equivalent to the original program for a specific subset of paths. To this end, the utilisation of a series of previously proposed data flow patterns is investigated. This study also examines the cross-language nature of these patterns and the killability of the detected partially equivalent mutants.
   Method: A tool, named MEDIC (Mutants' Equivalence DIsCovery), incorporating the aforementioned patterns was developed. Its efficiency and effectiveness were evaluated based on a set of manually analysed mutants from real-world programs, written in the Java programming language. Furthermore, MEDIC was employed to test subjects written in the JavaScript programming language.
   Results: MEDIC managed to detect 56% of the examined equivalent mutants in 125 s, providing strong evidence regarding both its effectiveness and efficiency. Additionally, MEDIC was able to identify equivalent mutants in the JavaScript test subjects, lending colour to the cross-language nature of the implemented patterns. Finally, the identified partially equivalent mutant set consisted largely of killable mutants, 16% of which were stubborn ones.
   Conclusion: It can be concluded that pattern-based equivalent mutant identification forms a viable approach for combating the equivalent mutant problem. MEDIC automatically detected a considerable number of the manually identified equivalent mutants and was successfully applied to test subjects in all examined programming languages. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Kintis, Marinos; Malevris, Nicos] Athens Univ Econ & Business, Dept Informat, Athens 10434, Greece.
C3 Athens University of Economics & Business
RP Kintis, M (corresponding author), Athens Univ Econ & Business, Dept Informat, 76 Patiss St, Athens 10434, Greece.
EM kintism@aueb.gr; ngm@aueb.gr
CR Alpern B., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P1, DOI 10.1145/73560.73561
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2015, 8 IEEE INT C SOFTWAR
   Baldwin Douglas., 1979, HEURISTICS DETERMINI
   Braun M, 2013, LECT NOTES COMPUT SC, V7791, P102, DOI 10.1007/978-3-642-37051-9_6
   Briggs P, 1998, SOFTWARE PRACT EXPER, V28, P859, DOI 10.1002/(SICI)1097-024X(19980710)28:8<859::AID-SPE188>3.0.CO;2-8
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Choi Jong-Deok, 1991, P 18 ACM SIGPLANSIGA, P55, DOI DOI 10.1145/99583.99594
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   DeMillo R. A., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P142, DOI 10.1109/WST.1988.5369
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harman M, 2001, KLUW INT S ADV DATA, V24, P5
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   IBM T.J, 2015, TJ WATS LIB AN
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Kintis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P701, DOI 10.1109/ICST.2012.160
   Kintis M, 2015, SOFTW TEST VERIF REL, V25, P508, DOI 10.1002/stvr.1529
   Kintis M, 2014, IEEE ICST WORKSHOP, P196, DOI 10.1109/ICSTW.2014.21
   Kintis M, 2013, ASIA PAC SOFWR ENG, P180, DOI 10.1109/APSEC.2013.34
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Maldonado JC, 2001, KLUW INT S ADV DATA, V24, P113
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   Neo Technology, NEO4J GRAPH DATABASE
   Nica S., 2012, Proceedings of the 2012 10th Workshop on Intelligent Solutions in Embedded Systems (WISES 2012), P57
   Nica S, 2012, ELECTRON PROC THEOR, P1
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   OFFUTT AJ, 1994, ISSETR94105 G MAS U
   Offutt J., MUJAVA HOME PAGE VER
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   Oracle Technology Network, JAV HOTSP PERF ENG A
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M., 2015, P 2015 INT IN PRESS
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Rosen B. K., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P12, DOI 10.1145/73560.73562
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Voas J.M., 1997, SOFTWARE FAULT INJEC
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
NR 57
TC 21
Z9 22
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2015
VL 68
BP 1
EP 17
DI 10.1016/j.infsof.2015.07.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT8OP
UT WOS:000363076200001
DA 2024-07-18
ER

PT J
AU Gamalielsson, J
   Lundell, B
   Feist, J
   Gustavsson, T
   Landqvist, F
AF Gamalielsson, Jonas
   Lundell, Bjorn
   Feist, Jonas
   Gustavsson, Tomas
   Landqvist, Fredric
TI On organisational influences in software standards and their open source
   implementations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Open standard; Open source; Organisational influence; Case study; RDFa;
   Drupal
ID DRUPAL; COMMUNITY
AB Context: It is widely acknowledged that standards implemented in open source software can reduce risks for lock-in, improve interoperability, and promote competition on the market. However, there is limited knowledge concerning the relationship between standards and their implementations in open source software. This paper reports from an investigation of organisational influences in software standards and open source software implementations of software standards. The study focuses on the RDFa standard and its implementation in the Drupal project.
   Objective: The overarching goal of the study is to establish organisational influences in software standards and their implementations in open source software. More specifically, our objective is to establish organisational influences in the RDFa standard and its implementation in the Drupal project.
   Method: By conduct of a case study of the RDFa standard and its implementation in the Drupal project we investigate organisational influences in software standards and their implementations in open source software. Specifically, the case study involved quantitative analyses of issue tracker data for different issue trackers for W3C RDFa and the Drupal implementation of RDFa.
   Results: The case study provides details on how and to what extent organisational influences occur in W3C RDFa and the Drupal implementation of RDFa, by specifically providing a characterisation of issues and results concerning contribution to issue raising and commenting, organisational involvement over time, and individual and organisational collaboration on issues.
   Conclusion: We find that widely deployed standards can benefit from contributions provided by a range of different individuals, organisations, and types of organisations either directly to a standardisation project or indirectly via an open source project implementing the standard. Further, we also find that open processes for standardisation adopted by W3C may also contribute to open source projects implementing specific standards. (C) 2015 The Authors. Published by Elsevier B.V.
C1 [Gamalielsson, Jonas; Lundell, Bjorn] Univ Skovde, SE-54128 Skovde, Sweden.
   [Feist, Jonas] RedBridge AB, SE-16474 Stockholm, Sweden.
   [Gustavsson, Tomas] PrimeKey Solut AB, SE-17154 Solna, Sweden.
   [Landqvist, Fredric] Findwise AB, SE-41140 Gothenburg, Sweden.
C3 University of Skovde
RP Gamalielsson, J (corresponding author), Univ Skovde, POB 408, SE-54128 Skovde, Sweden.
EM jonas.gamalielsson@his.se; bjorn.lundell@his.se; jfeist@redbridge.se;
   tomas@primekey.se; fredric.landqvist@findwise.com
FU Swedish Knowledge Foundation (KK-stiftelsen)
FX This research is financially supported by the Swedish Knowledge
   Foundation (KK-stiftelsen).
CR Behlendorf B., 2009, 5 IFIP WG 2 13 INT C
   Bizer C, 2013, LECT NOTES COMPUT SC, V8219, P17, DOI 10.1007/978-3-642-41338-4_2
   Bonaccorsi A., 2006, Knowledge Technology & Policy, V18, P40, DOI 10.1007/s12130-006-1003-9
   Brock A., 2013, P OPENFORUM EUR LTD
   Corlosquet S., 2009, P 5 WORKSH SCRIPT DE
   Corlosquet S, 2009, LECT NOTES COMPUT SC, V5823, P763, DOI 10.1007/978-3-642-04930-9_48
   Coughlan S., 2013, THOUGHTS OPEN INNOVA
   Crowston K, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008040101
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Drupal.org, 2015, DRUP OP SOURC CMS
   Drupal.org, 2015, DRUP COR MOD
   Drupal.org, 2012, MAK RDFA MARK UPW CO
   Egyedi TM, 2007, COMPUT STAND INTER, V29, P605, DOI 10.1016/j.csi.2007.04.001
   Egyedi TM, 2003, STANDARDIZATION AND INNOVATION IN INFORMATION TECHNOLOGY, PROCEEDINGS, P75
   EU, 2012, GUID PUBL PROC ICT G
   Europe Economics, 2012, GUID PUBL PROC ICT G
   Fitzgerald B, 2006, MIS QUART, V30, P587
   FRAND, 2012, EC WORKSH IMPL FRAND
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Friedman J, 2013, PHILOS STUD, V162, P165, DOI 10.1007/s11098-011-9753-y
   FRUCHTERMAN TMJ, 1991, SOFTWARE PRACT EXPER, V21, P1129, DOI 10.1002/spe.4380211102
   Gamalielsson J, 2013, IFIP ADV INFORM COMM, V404, P257
   Gamalielsson J., 2012, P FLOSSEDU 2012 FLOS, P13
   Gamalielsson J, 2011, IFIP ADV INF COMM TE, V365, P348
   Gamalielsson J, 2010, IFIP ADV INF COMM TE, V319, P85
   Garza A, 2009, LIBR HI TECH, V27, P252, DOI 10.1108/07378830910968209
   Ghanam Y, 2012, INFORM SOFTWARE TECH, V54, P968, DOI 10.1016/j.infsof.2012.03.005
   Ghosh R.A., 2005, OPEN STANDARDS INTER
   Gov.uk, 2012, OP STAND GOV IT REV
   Hubble A, 2011, INFORM TECHNOL LIBR, V30, P190, DOI 10.6017/ital.v30i4.1870
   JAKOBS K, 2014, P INT C ENG TECHN IN, P00001
   Krechmer K., 2007, J STANDARDS RES, V5, P59
   Krechmer K., 2002, P 2002 ACM S APPL CO, P1053
   Lin C., 2009, P WORLD C ED MULT HY, P4223
   Lings B, 2004, INFORMATION SYSTEMS RESEARCH: RELEVANT THEORY AND INFORMED PRACTICE, P535
   Lundell B., 2012, IFIP ADV INFORM COMM, V378, P383
   Lundell B., 2014, P 10 INT S OP COLL O, P3
   Lundell B., 2012, P 17 EURAS ANN STAND, P227
   Mika P., 2011, MICROFORMATS RDFA DE
   Mika P., 2012, CEUR WORKSHOP P, V937
   Miklos Z., 2005, WWW WORKSH INT WEB B, V143
   Openhub.net, 2015, DRUP COR OP SOURC PR
   Patel S.K., 2011, International Journal of Computer Applications, V21, P39, DOI [10.5120/2496-3373, DOI 10.5120/2496-3373]
   Simcoe Tim, 2006, OPEN INNOVATION RES
   W3.org, 2012, RDFA COR 1 1
   W3.org, 2012, RDFA LIT 1 1
   W3.org, 2012, HTML RDFA 1 1
   W3.org, 2008, RDFA XHTML SYNT PROC
   W3.org, 2004, XHTML AND RDF
   W3.org, 2012, RDFA WORK GROUP CHAR
   W3.org, 1999, RES DESCR FRAM RDF M
   W3.org, 2015, RDFA COR 1 1
   W3.org, 2004, RDF A SYNT COLL ATTR
   W3.org, 2013, RDFA COR 1 1
   West J, 2008, IND INNOV, V15, P145, DOI 10.1080/13662710801970142
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   [No title captured]
   [No title captured]
   [No title captured]
NR 59
TC 7
Z9 7
U1 0
U2 12
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 30
EP 43
DI 10.1016/j.infsof.2015.06.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Brandtner, M
   Giger, E
   Gall, H
AF Brandtner, Martin
   Giger, Emanuel
   Gall, Harald
TI SQA-Mashup: A mashup framework for continuous integration
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Continuous integration; Controlled user study; Software quality; Tool
   integration; Information needs
AB Context: Continuous Integration (Cl) has become an established best practice of modern software development. Its philosophy of regularly integrating the changes of individual developers with the master code base saves the entire development team from descending into Integration Hell, a term coined in the field of extreme programming. In practice, CI is supported by automated tools to cope with this repeated integration of source code through automated builds and testing. One of the main problems, however, is that relevant information about the quality and health of a software system is both scattered across those tools and across multiple views.
   Objective: This paper introduces a quality awareness framework for CI-data and its conceptional model used for the data integration and visualization. The framework called SQA-Mashup makes use of the service-based mashup paradigm and integrates information from the entire Cl-toolchain into a single service.
   Method: The research approach followed in our work consists out of (i) a conceptional model for data integration and visualization, (ii) a prototypical framework implementation based on tool requirements derived from literature, and (iii) a controlled user study to evaluate its usefulness.
   Results: The results of the controlled user study showed that SQA-Mashup's single point of access allows users to answer questions regarding the state of a system more quickly (57%) and accurately (21.6%) than with standalone CI-tools.
   Conclusions: The SQA-Mashup framework can serve as one-stop shop for software quality data monitoring in a software development project. It enables easy access to CI-data which otherwise is not integrated but scattered across multiple Cl-tools. Our dynamic visualization approach allows for a tailoring of integrated CI-data according to information needs of different stakeholders such as developers or testers. (c) 2014 Elsevier B.V. All rights reserved.
C1 [Brandtner, Martin; Giger, Emanuel; Gall, Harald] Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
C3 University of Zurich
RP Brandtner, M (corresponding author), Univ Zurich, Dept Informat, Binzmuehlestr 14, CH-8050 Zurich, Switzerland.
EM brandtner@ifi.uzh.ch
OI Gall, Harald/0000-0002-3874-5628
CR [Anonymous], 2010, Eval. Usability Program, DOI DOI 10.1145/1937117.1937125
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Brandtner M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P184, DOI 10.1109/CSMR-WCRE.2014.6747169
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Fowler M., CONTINUOUS INTEGRATI
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Li YX, 2011, INT J SPEECH TECHNOL, V14, P211, DOI 10.1007/s10772-011-9097-1
   Louridas P, 2005, IEEE SOFTWARE, V22, P12, DOI 10.1109/MS.2005.100
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mens T., 2005, Challenges in software evolution, P13
   Michaud J, 2001, PROC IEEE INT CONF S, P250, DOI 10.1109/ICSM.2001.972738
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Muller S.C., 2013, STAKEHOLDERS INFORMA
   Nierstrasz O., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [DOI 10.1145/1095430, 10.1145/1095430.1081707, DOI 10.1145/1095430.1081707]
   R Development Core Team, 2011, R LANG ENV STAT COMP
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Saff D., 2004, Software Engineering Notes, V29, P76, DOI 10.1145/1013886.1007523
   Singer J, 1997, EXAMINATION SOFTWARE, P21
   Storey MAD, 1997, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION, PROCEEDINGS, P38, DOI 10.1109/INFVIS.1997.636784
   WASSERMAN AI, 1990, LECT NOTES COMPUT SC, V467, P137
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
NR 25
TC 7
Z9 7
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2015
VL 65
BP 97
EP 113
DI 10.1016/j.infsof.2014.10.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CK3IP
UT WOS:000356110100007
DA 2024-07-18
ER

PT J
AU Tüzün, E
   Tekinerdogan, B
AF Tuzun, Eray
   Tekinerdogan, Bedir
TI Analyzing impact of experience curve on ROI in the software product line
   adoption process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Experience curve; Learning curve; Software product line engineering;
   Cost models; Productivity; Software reuse
ID LEARNING-CURVES; MODEL
AB Context: Experience curve is a well-known concept in management and education science, which explains the phenomenon of increased worker efficiency with repetitive production of a good or service. Objective: We aim to analyze the impact of the experience curve effect on the Return on Investment (ROI) in the software product line engineering (SPLE) process.
   Method: We first present the results of a systematic literature review (SLR) to explicitly depict the studies that have considered the impact of experience curve effect on software development in general. Subsequently, based on the results of the SLR, the experience curve effect models in the literature, and the SPLE cost models, we define an approach for extending the cost models with the experience curve effect. Finally, we discuss the application of the refined cost models in a real industrial context.
   Results: The SLR resulted in 15 primary studies which confirm the impact of experience curve effect on software development in general but the experience curve effect in the adoption of SPLE got less attention. The analytical discussion of the cost models and the application of the refined SPLE cost models in the industrial context showed a clear impact of the experience curve effect on the time-to-market, cost of development and ROI in the SPLE adoption process.
   Conclusions: The proposed analysis with the newly defined cost models for SPLE adoption provides a more precise analysis tool for the management, and as such helps to support a better decision making. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Tuzun, Eray] Havelsan AS, Informat & Secur Technol Div, Ankara, Turkey.
   [Tekinerdogan, Bedir] Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
C3 Havelsan AS; Ihsan Dogramaci Bilkent University
RP Tüzün, E (corresponding author), Havelsan AS, Informat & Secur Technol Div, Ankara, Turkey.
EM etuzun@havelsan.com.tr; bedir@cs.bilkent.edu.tr
RI Tuzun, Eray/AAD-7282-2021; Tekinerdogan, Bedir/K-3639-2019
OI Tuzun, Eray/0000-0002-5550-7816; Tekinerdogan, Bedir/0000-0002-8538-7261
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   Abu G., 2005, 38 HAW INT C SYST SC, V00, P1
   Ali MS, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P275, DOI 10.1109/SEAA.2009.89
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], [No title captured]
   [Anonymous], 2011, ENG EC
   [Anonymous], ICIS 2009 P
   Au YA, 2009, INFORM MANAGE-AMSTER, V46, P9, DOI 10.1016/j.im.2008.09.004
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Bühne S, 2004, LECT NOTES COMPUT SC, V3014, P19
   Clements P., 2001, SOFTWARE PRODUCT LIN, P608
   Clements Paul C., 2005, CMUSEI2005TR003
   Dorenbos D., 1993, MOT SOFTW ENG S
   Ebbinghaus H., 1913, CONTRIBUTION EXPT PS
   Eickelmann N., 2002, P 17 INT FOR COCOMO
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Hanakawa N, 1998, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.1998.671388
   Heradio R, 2012, EXPERT SYST APPL, V39, P7919, DOI 10.1016/j.eswa.2012.01.109
   Huntley CL, 2003, IEEE T ENG MANAGE, V50, P485, DOI 10.1109/TEM.2003.820136
   In HP, 2006, COMMUN ACM, V49, P85, DOI 10.1145/1183236.1183273
   Kapur PK, 2013, INT J SYST SCI, V44, P1639, DOI 10.1080/00207721.2012.669861
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Lim WC, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P41, DOI 10.1109/ICSR.1996.496112
   Madachy R., 2005, P 6 INT WORKSH SOFTW, P160
   Madachy R.J., 2008, SOFTWARE PROCESS DYN, P601
   Narayanan S, 2009, MANAGE SCI, V55, P1861, DOI 10.1287/mnsc.1090.1057
   Nolan Andy J., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P203, DOI 10.1109/SPLC.2011.44
   Nolan AJ, 2010, LECT NOTES COMPUT SC, V6287, P121, DOI 10.1007/978-3-642-15579-6_9
   Pendharkar PC, 2007, EUR J OPER RES, V183, P1086, DOI 10.1016/j.ejor.2005.07.029
   Plaza M, 2010, EUR J OPER RES, V200, P518, DOI 10.1016/j.ejor.2009.01.010
   Poulin J. S., 1997, INT J APPL SOFTWARE, V3, P20
   Raccoon L. B. S., 1996, SIGSOFT Software Engineering Notes, V21, P77, DOI 10.1145/381790.381805
   Rodney J.D.J., 1995, COST ESTIMATORS REFE, P744
   Schilling MA, 2003, MANAGE SCI, V49, P39, DOI 10.1287/mnsc.49.1.39.12750
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Sherdil K., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P145
   Van Der Linden F., 2007, SOFTWARE PRODUCT LIN, P334
   Wright TP, 1936, J. Astronaut. Sci., V3, P122, DOI [10.2514/8.155, DOI 10.2514/8.155]
   Zorgios Y., 2009, VINE
NR 41
TC 6
Z9 6
U1 2
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 136
EP 148
DI 10.1016/j.infsof.2014.09.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CB1ZT
UT WOS:000349427200008
DA 2024-07-18
ER

PT J
AU Barros, MD
   Farzat, FD
   Travassos, GH
AF Barros, Marcio de Oliveira
   Farzat, Fabio de Almeida
   Travassos, Guilherme Horta
TI Learning from optimization: A case study with Apache Ant
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Evaluation and Assessment in software
   Engineering
CY APR 14-16, 2013
CL Porto de Galinhas, BRAZIL
DE Apache Ant; Heuristic search; Software module clustering; Experimental
   Software Engineering
ID CODE SMELLS; SOFTWARE
AB Context: Software architecture degrades when changes violating the design-time architectural intents are imposed on the software throughout its life cycle. Such phenomenon is called architecture erosion. When changes are not controlled, erosion makes maintenance harder and negatively affects software evolution.
   Objective: To study the effects of architecture erosion on a large software project and determine whether search-based module clustering might reduce the conceptual distance between the current architecture and the design-time one.
   Method: To run an exploratory study with Apache Ant. First, we characterize Ant's evolution in terms of size, change dispersion, cohesion, and coupling metrics, highlighting the potential introduction of architecture and code-level problems that might affect the cost of changing the system. Then, we reorganize the distribution of Ant's classes using a heuristic search approach, intending to re-emerge its design-time architecture.
   Results: In characterizing the system, we observed that its original, simple design was lost due to maintenance and the addition of new features. In optimizing its architecture, we found that current models used to drive search-based software module clustering produce complex designs, which maximize the characteristics driving optimization while producing class distributions that would hardly be acceptable to developers maintaining Ant.
   Conclusion: The structural perspective promoted by the coupling and cohesion metrics precludes observing the adequate software module clustering from the perspective of software engineers when considering a large open source system. Our analysis adds evidence to the criticism of the dogma of driving design towards high cohesion and low coupling, at the same time observing the need for better models to drive design decisions. Apart from that, we see SBSE as a learning tool, allowing researchers to test Software Engineering models in extreme situations that would not be easily found in software projects. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Barros, Marcio de Oliveira] Univ Fed Estado Rio de Janeiro, PPGI, Postgrad Informat Syst Dept, Rio de Janeiro, RJ, Brazil.
   [Farzat, Fabio de Almeida; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, COPPE, Comp & Syst Engn Dept, Rio de Janeiro, RJ, Brazil.
C3 Universidade Federal do Estado do Rio de Janeiro; Universidade Federal
   do Rio de Janeiro
RP Barros, MD (corresponding author), Univ Fed Estado Rio de Janeiro, PPGI, Postgrad Informat Syst Dept, Av Pasteur 458, Rio de Janeiro, RJ, Brazil.
EM marcio.barros@uniriotec.br; ffarzat@cos.ufrj.br; ght@cos.ufrj.br
RI Travassos, Guilherme H/G-2842-2012; Barros, Marcio/AAD-2848-2022
OI Barros, Marcio/0000-0001-8136-9624
FU CNPq, the Brazilian research agency that promotes science in Brazil
FX The authors would like to thank CNPq, the Brazilian research agency that
   promotes science in Brazil, for their financial support to this project.
CR Abdeen H, 2013, WORK CONF REVERSE EN, P212, DOI 10.1109/WCRE.2013.6671296
   Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   Amoui M, 2006, INT J INFORM TECHNOL, V1, P235
   Anquetil N, 2009, WORK CONF REVERSE EN, P317, DOI 10.1109/WCRE.2009.53
   Anquetil N, 2011, EUR CON SFTWR MTNCE, P279, DOI 10.1109/CSMR.2011.34
   Barros M., 2013, P 5 INT S SEARCH BAS
   Barros M., 2012, P 21 GEN EV COMP C G
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Bourquin F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P149
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Briand L., 1999, IEEE T SOFTWARE ENG, V25
   Burke E, 2003, INT SER OPER RES MAN, V57, P457, DOI 10.1007/0-306-48056-5_16
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Doval D., 1999, STEP '99. Proceedings Ninth International Workshop Software Technology and Engineering Practice, P73, DOI 10.1109/STEP.1999.798481
   Elbaum S., 1998, P 14 INT C SOFTW MAI
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., CONTINUOUS INTEGRATI
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   GIBBS S, 1990, COMMUN ACM, V33, P90, DOI 10.1145/83880.84525
   Glorie M., 2009, TUDSERG2009002 DELFT
   Glorie M., 2008, P 12 EUR C SOFTW MAI
   Hall M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P472, DOI 10.1109/ICSM.2012.6405309
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, TR0903 KINGS COLL LO
   Harman M., 2005, P 14 GEN EV COMP C G
   Henderson-Sellers B., 1996, Software Metrics
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Koschke R., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P256, DOI 10.1109/WCRE.1999.806965
   Kuhn T. S., 1962, STRUCTURE SCI REVOLU
   Kumari A.C., 2013, International Journal of Applied Information Systems, V5, P12
   Lanza M., 2006, USING SOFTWARE METRI
   Larman C., 2002, APPL UML PATTERNS, V2nd
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lutz R, 2001, J SYST ARCHITECT, V47, P613, DOI 10.1016/S1383-7621(01)00019-4
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mandavi K., 2003, 19 IEEE INT C SOFTW, P22
   Mantyla M., 2003, THESIS HELSINKY U TE
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   McConnell Steve., 2004, Code Complete, V2nd ed
   Medvidovic Nenad, 2012, AOSD 12, P167
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   MITCHELL BS, 2002, THESIS DREXEL U PHIL
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   O'Keeffe M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1114
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   Olbrich S., 2009, P 3 INT S EMP SOFTW
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Parnas D.L., 1971, TECHNICAL REPORT
   Araujo MAP, 2012, INT SYMP EMP SOFTWAR, P281, DOI 10.1145/2372251.2372303
   Perepletchikov M, 2011, IEEE T SOFTWARE ENG, V37, P449, DOI 10.1109/TSE.2010.61
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Raiha O., 2007, D20091 U TAMP DEP CO
   Sangal N., 2005, J DEFENSE SOFTWARE E, P8
   Schwanke Robert W., 1991, INTELLIGENT TOOL REE, V10
   Shtern Mark, 2012, Advances in Software Engineering, DOI 10.1155/2012/792024
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Simons CL, 2012, IEEE T SYST MAN CY C, V42, P1797, DOI 10.1109/TSMCC.2012.2225103
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Taylor R.N., 2008, SOFTWARE ARCHITECTUR
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Tucker A, 2001, IEEE T SYST MAN CY B, V31, P235, DOI 10.1109/3477.915346
   Yamashita A., 2013, POSTD S 29 INT C SOF
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zazworka Nico., 2013, SOFTWARE QUAL J, V22, P1
NR 72
TC 19
Z9 21
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 684
EP 704
DI 10.1016/j.infsof.2014.07.015
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA AU9YI
UT WOS:000345947500039
DA 2024-07-18
ER

PT J
AU Vlietland, J
   van Vliet, H
AF Vlietland, Jan
   van Vliet, Hans
TI Towards a governance framework for chains of Scrum teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile; Chain of Scrum teams; Coordination; Priority; Alignment;
   Predictability
ID AGILE SOFTWARE-DEVELOPMENT; COORDINATION; COLLABORATION
AB Context: Large companies operating in the information intensive industries increasingly adopt Agile/Scrum to swiftly change IT functionality because of rapid changing business demands. IT functionality in large enterprises however is typically delivered by a portfolio of interdependent software applications involving a chain of Scrum teams. Usually, each application from the portfolio is allocated to a single Scrum team, which necessitates collaboration between the Scrum teams to jointly deliver functionality.
   Objective: Identify the collaboration related issues in chains of Scrum teams.
   Method: We used a qualitative approach with transcripted interviews from three case studies that were coded and analyzed to identify the issues.
   Results: We identified six issues in chains of codependent Scrum teams; coordination, prioritization, alignment, automation, predictability and visibility. The synthesis of these issues with existing theory resulted in nine propositions. These nine propositions have been combined into a conceptual model.
   Conclusion: We propose this conceptual model as a starting point for a governance framework to manage chains of Scrum teams that addresses the identified issues. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Vlietland, Jan] Search4Solut BV, Profess Serv, Utrecht, Netherlands.
   [van Vliet, Hans] Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP van Vliet, H (corresponding author), Vrije Univ Amsterdam, Dept Comp Sci, Amsterdam, Netherlands.
EM j.vlietland@Search4Solutions.nl; J.C.van.Vliet@vu.nl
RI Harrison, Dylan/AFP-8142-2022
CR AGERFALK PJ, 2005, P INT WORKSH DISTR S
   Andrei N., 2006, Studies in Informatics and Control, V15, P51
   [Anonymous], P 2009 ICSE WORKSH C
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 2007, PROC HICSS 2007
   [Anonymous], 2009, JUDGMENT MANAGERIAL
   [Anonymous], 1990, P 1990 ACM C COMP SU
   [Anonymous], AGILITY SCALE SURVEY
   Baltacioglu T, 2007, SERV IND J, V27, P105, DOI 10.1080/02642060601122629
   Bannerman P., 2012, P 45 HAW INT C SYST
   Batra D., 2010, COMMUN ASS INFORM SY, V27
   Beedle M., 2013, PRINCIPLES AGILE MAN
   Birks M., 2011, Grounded Theory: A Practical Guide
   Boonstra A, 2003, EUR J INFORM SYST, V12, P195, DOI 10.1057/palgrave.ejis.3000461
   Brown A. W., 2013, P 2013 INT C SOFTW E
   Brown AE, 2005, COMMUN ASSOC INF SYS, V15, P696, DOI 10.17705/1CAIS.01538
   Calvert Randall., 1995, CHAP 8 MODERN POLITI, P216, DOI DOI 10.1017/CBO9780511625725
   Candea G., 2010, P 1 ACM S CLOUD COMP
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Datta PP, 2011, INT J PROD RES, V49, P765, DOI 10.1080/00207540903460216
   DeSanctis G., 1994, Journal of Management Information Systems, V10, P85
   Dingsoyr Torgeir, 2013, Software Engineering Notes, V38, P33, DOI 10.1145/2507288.2507322
   Dingsoyr T., 2013, P 1 WORKSH RES CHALL
   Dorairaj S., 2012, UNDERSTANDING TEAM D, P47
   Dove R., 2014, FUNDAMENTALS AGILE 2
   Dul J., 2012, Case study methodology in business research
   EISENHARDT KM, 1992, STRATEGIC MANAGE J, V13, P17, DOI 10.1002/smj.4250130904
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Feitelson D., 2013, Development and Deployment at Facebook
   Fitzgerald B., 2014, P RCOSE 2014
   Freudenberg S, 2010, IEEE SOFTWARE, V27, P8, DOI 10.1109/MS.2010.129
   Funda SA, 2005, J OPER MANAG, V23, P579, DOI 10.1016/j.jom.2004.08.007
   Galbraith J., 1995, DESIGNING ORG EXECUT
   Garg A., 2009, DRDO SCI SPECTRUM
   Gibbert M, 2010, ORGAN RES METHODS, V13, P710, DOI 10.1177/1094428109351319
   GLASER S, 1967, DISCOVERY GROUNDED T
   Goffman Erving, 1959, The presentation of self in everyday life
   Green R., 2010, INT J INFORM TECHNOL, V6
   Gregory J.B., 2011, Consulting Psychology Journal: Practice and Research, V63, P26, DOI [DOI 10.1037/A0023398, 10.1037/a0023398]
   Hardion V., 2013, CONFIGURATION MANAGE
   Harland C.M, 1996, BLACKWELL ENCY DICT, P15
   HENNEMAN EA, 1995, J ADV NURS, V21, P103, DOI 10.1046/j.1365-2648.1995.21010103.x
   Hildenbrand T., 2008, P INT C COMPL INT SO
   Huberman AMichael., 1984, Innovation up close: How school improvement works
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jonker CM, 2011, Coordination, Organizations, Institutions, and Norms in Agent Systems VI, P132, DOI [10.1007/978-3-642-21268-0_8, DOI 10.1007/978-3-642-21268-0_8]
   Jyothi VE, 2011, INT J ADV COMPUT SC, V2, P41
   Kim S, 2008, P 2008 23 IEEE ACM I
   Kniberg H., 2012, Scaling agile @ spotify with tribes, squads, chapters guilds
   Knight R, 2001, IEEE INTELL SYST, V16, P70, DOI 10.1109/5254.956084
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   Larman C., 2013, CROSSTALK, V9
   Lee S, 2010, EMPIR SOFTW ENG, V15, P204, DOI 10.1007/s10664-009-9119-7
   Lehto I., 2009, P 2009 ICSE WORKSH S
   Lewis K, 2011, ORGAN SCI, V22, P1254, DOI 10.1287/orsc.1110.0647
   Locke A., 1990, THEORY GOAL SETTING
   Marshall MN, 1996, FAM PRACT, V13, P522, DOI 10.1093/fampra/13.6.522
   Mathieu JE, 2000, J APPL PSYCHOL, V85, P273, DOI 10.1037//0021-9010.85.2.273
   Mentzer J.T., 2001, J BUSINESS LOGISTICS, V22, P1, DOI [DOI 10.1002/J.2158-1592.2001.TB00001.X, 10.1002/j.2158-1592.2001.tb00001.x]
   Mentzer J.T., 1997, J BUS LOGIST, V18, P199
   Mishra D, 2011, J SOFTW MAINT EVOL-R, V23, P549, DOI 10.1002/smr.528
   Moe N.B., 2008, P 19 AUSTR C SOFTW E
   Muslu K., 2013, P 9 JOINT M EUR SOFT
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Olsson H.H., 2012, P 38 EUROMICRO C SOF
   Oppenheim D., 2011, P SRII GLOB C SRII 2
   Paasivaara M., 2012, P INT S EMP SOFTW EN
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Port D, 2009, EUR J INFORM SYST, V18, P317, DOI 10.1057/ejis.2009.19
   Rautiainen K., 2011, P 44 HAW INT C SYST
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Saddington P., 2012, P AGIL C
   Saladana J., 2012, The coding manual for qualitative researchers
   SANDELOWSKI M, 1995, RES NURS HEALTH, V18, P179, DOI 10.1002/nur.4770180211
   Saunders M., 2008, RES METHODS BUSINESS
   Scheerer A., 2014, P 47 HAW INT C SYST
   Schnitter J, 2011, COMM COM INF SC, V230, P209
   Schwaber K., 2011, ENTERPRISE SCRUM
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   SHARP H, 2010, 3 C S AGILE PRACTICE, P61, DOI DOI 10.1007/978-3-642-12575-1_4
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Soundararajan S., 2009, P 16 ANN IEEE INT C
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Sutherland J., 2005, P AGIL C
   Sutherland J., 2008, AGIL 2008 AGIL 08 C
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Talby D., 2009, P ICSE WORKSH SOFTW
   Vlietland J., 2014, J SOFTW EVOL PROCESS
   Vlietland J., 2014, 5 INT C SOFTW BUS CY
   Vlietland J., 2013, INFORM SHARING EFFEC
   Waardenburg G., 2012, INT SOFTW TECHNOL, V55, P2154
   Wegner D. M., 1987, THEORIES GROUP BEHAV, P185, DOI [10.1007/978-1-4612-4634-3_9, DOI 10.1007/978-1-4612-4634-3_9]
   Wei HL, 2010, EUR J INFORM SYST, V19, P238, DOI 10.1057/ejis.2010.10
   Wiener Norbert., 1965, Cybernetics or Control and Communication in the Animal and the Machine, V25
   Woodward E., 2010, A Practical Guide to Distributed Scrum (IBM.)
   Yin R.K., 2014, Applications of case study research, V2nd
   YIN RK, 1981, ADMIN SCI QUART, V26, P58, DOI 10.2307/2392599
NR 99
TC 24
Z9 28
U1 2
U2 60
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 52
EP 65
DI 10.1016/j.infsof.2014.08.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AU9YI
UT WOS:000345947500004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Paasivaara, M
   Lassenius, C
AF Paasivaara, Maria
   Lassenius, Casper
TI Communities of practice in a large distributed agile software
   development organization - Case Ericsson
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Communities of practice; Large-scale agile software development; Scaling
   agile
ID SCRUM
AB Context: Communities of practice groups of experts who share a common interest or topic and collectively want to deepen their knowledge can be an important part of a successful lean and agile adoption in particular in large organizations.
   Objective: In this paper, we present a study on how a large organization within Ericsson with 400 persons in 40 Scrum teams at three sites adopted the use of Communities of Practice (COP) as part of their transformation from a traditional plan-driven organization to lean and agile.
   Methods: We collected data by 52 semi-structured interviews on two sites, and longitudinal non-participant observation of the transformation during over 20 site visits over a period of two years.
   Results: The organization had over 20 CoPs, gathering weekly, hi-weekly or on a need basis. CoPs had several purposes including knowledge sharing and learning, coordination, technical work, and organizational development. Examples of CoPs include Feature Coordination CoPs to coordinate between teams working on the same feature, a Coaching CoP to discuss agile implementation challenges and successes and to help lead the organizational continuous improvement, an end-to-end CoP to remove bottlenecks from the flow, and Developers CoPs to share good development practices. Success factors of well-functioning CoPs include having a good topic, passionate leader, proper agenda, decision making authority, open community, supporting tools, suitable rhythm, and cross-site participation when needed. Organizational support include creating a supportive atmosphere and providing a suitable infrastructure for CoPs.
   Conclusions: In the case organization, CoPs were initially used to support the agile transformation, and as part of the distributed Scrum implementation. As the transformation progressed, the CoPs also took on the role of supporting continuous organizational improvements. CoPs became a central mechanism behind the success of the large-scale agile implementation in the case organization that helped mitigate some of the most pressing problems of the agile transformation. (c) 2014 The Authors. Published by Elsevier B.V.
C1 [Paasivaara, Maria; Lassenius, Casper] Aalto Univ, Dept Comp Sci & Engn, Aalto 00076, Finland.
C3 Aalto University
RP Paasivaara, M (corresponding author), Aalto Univ, Dept Comp Sci & Engn, POB 15400, Aalto 00076, Finland.
EM maria.paasivaara@aalto.fi; casper.lassenius@aalto.fi
RI Harrison, Dylan/AFP-8142-2022; Lassenius, Casper/A-4339-2013
OI Lassenius, Casper/0000-0003-4192-7024
FU Tekes as part of the Cloud Software Finland program of DIGILE (Finnish
   Strategic Centre for Science, Technology and Innovation in the field of
   ICT and digital business)
FX We would like to thank Oy LM Ericsson Ab for making this study possible
   and all the anonymous interviewees and persons who gave us feedback for
   providing valuable contributions to this research. This work was
   supported by Tekes as part of the Cloud Software Finland program of
   DIGILE (Finnish Strategic Centre for Science, Technology and Innovation
   in the field of ICT and digital business).
CR [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   [Anonymous], 2008, SCRUMBAN ESSAYS KANB
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   Benefield, 2008, Proceedings of the 41st Annual Hawaii International Conference on System Sciences (HICSS 2008), P461, DOI [10.1109/HICSS.2008.382, DOI 10.1109/HICSS.2008.382]
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   Chau T, 2004, LECT NOTES COMPUT SC, V3096, P98
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Corbin J., 2015, BASICS QUALITATIVE R
   Fry C, 2007, AGILE 2007, PROCEEDINGS, P136, DOI 10.1109/AGILE.2007.38
   Gongla P, 2001, IBM SYST J, V40, P842, DOI 10.1147/sj.404.0842
   Hallikainen M., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P119, DOI 10.1109/ICGSE.2011.20
   Heikkilä VT, 2013, LECT NOTES BUS INF P, V149, P195
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   JICK TD, 1979, ADMIN SCI QUART, V24, P602, DOI 10.2307/2392366
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Lee EC, 2008, AGILE 2008, PROCEEDINGS, P106, DOI 10.1109/Agile.2008.75
   Lesser EL, 2001, IBM SYST J, V40, P831, DOI 10.1147/sj.404.0831
   Lindvall M, 2004, COMPUTER, V37, P26, DOI 10.1109/MC.2004.231
   Mestad A., 2007, 40 ANN HAW INT C SYS
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Paasivaara M, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P134, DOI 10.1109/ICGSE.2013.25
   Paasivaara M, 2009, INT CONF GLOBAL SOFT, P195, DOI 10.1109/ICGSE.2009.27
   Poppendieck M, 2012, IEEE SOFTWARE, V29, P26, DOI 10.1109/MS.2012.107
   Schwaber K., 2007, The enterprise and Scrum
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   VersionOne Inc., 2011, 6 ANN STAT AG DEV SU
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   Wenger E., 2002, Cultivating Communities of Practice: A Guide to Managing Knowledge
   Wenger EC, 2000, HARVARD BUS REV, V78, P139
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 33
TC 85
Z9 93
U1 5
U2 115
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2014
VL 56
IS 12
SI SI
BP 1556
EP 1577
DI 10.1016/j.infsof.2014.06.008
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2LG
UT WOS:000341903100003
OA hybrid
DA 2024-07-18
ER

PT J
AU Manteli, C
   van den Hooff, B
   van Vliet, H
AF Manteli, Christina
   van den Hooff, Bart
   van Vliet, Hans
TI The effect of governance on global software development: An empirical
   research in transactive memory systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Distributed teams; Software governance;
   Transactive memory systems; Social network analysis
ID KNOWLEDGE; COMMUNICATION; PERFORMANCE; CENTRALITY; EXPERTISE
AB Context: The way global software development (GSD) activities are managed impacts knowledge transactions between team members. The first is captured in governance decisions, and the latter in a transactive memory system (TMS), a shared cognitive system for encoding, storing and retrieving knowledge between members of a group.
   Objective: We seek to identify how different governance decisions (such as business strategy, team configuration, task allocation) affect the structure of transactive memory systems as well as the processes developed within those systems.
   Method: We use both a quantitative and a qualitative approach. We collect quantitative data through an online survey to identify transactive memory systems. We analyze transactive memory structures using social network analysis techniques and we build a latent variable model to measure transactive memory processes. We further support and triangulate our results by means of interviews, which also help us examine the GSD governance modes of the participating projects. We analyze governance modes, as set of decisions based on three aspects; business strategy, team structure and composition, and task allocation.
   Results: Our results suggest that different governance decisions have a different impact on transactive memory systems. Offshore insourcing as a business strategy, for instance, creates tightly-connected clusters, which in turn leads to better developed transactive memory processes. We also find that within the composition and structure of GSD teams, there are boundary spanners (formal or informal) who have a better overview of the network's activities and become central members within their network. An interesting mapping between task allocation and the composition of the network core suggests that the way tasks are allocated among distributed teams is an indicator of where expertise resides.
   Conclusion: We present an analytical method to examine GSD governance decisions and their effect on transactive memory systems. Our method can be used from both practitioners and researchers as a "cause and effect" tool for improving collaboration of global software teams. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Manteli, Christina; van den Hooff, Bart; van Vliet, Hans] Vrije Univ Amsterdam, NL-1081 Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Manteli, C (corresponding author), Vrije Univ Amsterdam, Boelelaan, NL-1081 Amsterdam, Netherlands.
EM c.manteli@vu.nl
RI van den Hooff, Bart/HPD-5615-2023
OI van den Hooff, Bart/0000-0002-8880-3910
CR [Anonymous], 2007, Proceedings of the 2007 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '07, DOI DOI 10.1145/1321211.1321221
   [Anonymous], 2008, WORKSH SOFTW DEV GOV
   [Anonymous], 2002, NETDRAW GRAPH VISUAL
   [Anonymous], 2009, NETWORKS INTRO
   Austin JR, 2003, J APPL PSYCHOL, V88, P866, DOI 10.1037/0021-9010.88.5.866
   Bannerman PL, 2009, 2009 ICSE WORKSHOP ON SOFTWARE DEVELOPMENT GOVERNANCE, P3, DOI 10.1109/SDG.2009.5071329
   Boden A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P8, DOI 10.1109/CHASE.2009.5071402
   Borgatti SP, 2003, MANAGE SCI, V49, P432, DOI 10.1287/mnsc.49.4.432.14428
   Borgatti SP, 1999, SOC NETWORKS, V21, P375
   Borgatti Stephen P., UCINET WINDOWS SOFTW
   Carlile PR, 2004, ORGAN SCI, V15, P555, DOI 10.1287/orsc.1040.0094
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   Cataldo M., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P3081, DOI DOI 10.1145/2207676.2208722
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Chen X., 2012, INT J INF MANAGE
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Dingsoyr T, 2002, INT J SOFTW ENG KNOW, V12, P391, DOI 10.1142/S0218194002000962
   Dubinsky Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P6, DOI 10.1109/ICGSE.2011.28
   Ehrlich K, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P117
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Gewald H., 2006, SYST SCI 2006 P 39 A, V8, P194
   HANNEMAN R. A., 2005, Introduction to social network methods
   Hargadon AB, 2002, RES ORGAN BEHAV, V24, P41, DOI 10.1016/S0191-3085(02)24003-4
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hollingshead AB, 1998, J EXP SOC PSYCHOL, V34, P423, DOI 10.1006/jesp.1998.1358
   Jarvenpaa S.L., J COMPUT MED COMMUN, V3
   John A., 2008, FIE 2008 38 ANN FRON
   Kofman A, 2009, 2009 ICSE WORKSHOP ON SOFTWARE DEVELOPMENT GOVERNANCE, P9, DOI 10.1109/SDG.2009.5071330
   Lamersdorf A, 2009, INT CONF GLOBAL SOFT, P41, DOI 10.1109/ICGSE.2009.12
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Levina N., 2006, P INT C INF SYST
   Lewis K, 2003, J APPL PSYCHOL, V88, P587, DOI 10.1037/0021-9010.88.4.587
   Lewis K, 2011, ORGAN SCI, V22, P1254, DOI 10.1287/orsc.1110.0647
   Manteli C., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P40, DOI 10.1109/ICGSE.2011.16
   Milewski Allen E., 2008, Software Process: Improvement and Practice, V13, P477, DOI 10.1002/spip.403
   Miranda SM, 2005, J INF TECHNOL, V20, P152, DOI 10.1057/palgrave.jit.2000045
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Moon J.Y., 2002, DISTRIBUTED WORK, P381
   Moreland RL, 2000, ORGAN BEHAV HUM DEC, V82, P117, DOI 10.1006/obhd.2000.2891
   Newman MEJ, 2005, SOC NETWORKS, V27, P39, DOI 10.1016/j.socnet.2004.11.009
   Noordeloos R., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P31, DOI 10.1109/ICGSE.2012.11
   O'Leary MB, 2010, ORGAN SCI, V21, P115, DOI 10.1287/orsc.1090.0434
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Robinson M., 2004, Offshore Outsourcing: Business Models, ROI and Best Practices
   Smith Jr D. W., 2012, J EMPIR SOFTW ENG, P1
   Tiwana A, 2004, INFORM SOFTWARE TECH, V46, P899, DOI 10.1016/j.infsof.2004.03.006
   Wasserman S., 1994, Social network analysis: Methods and applications'
   Wegner D. M., 1987, THEORIES GROUP BEHAV, P185, DOI [10.1007/978-1-4612-4634-3_9, DOI 10.1007/978-1-4612-4634-3_9]
   Wegner D.M., 1985, COMPATIBLE INCOMPATI, P253, DOI DOI 10.1007/978-1-4612-5044-912
   Williams P, 2002, PUBLIC ADMIN, V80, P103, DOI 10.1111/1467-9299.00296
   Yang HL, 2004, INFORM MANAGE-AMSTER, V41, P335, DOI 10.1016/S0378-7206(03)00078-8
   Yoo Y, 2001, Internat. J. Organ. Anal., V9, P187, DOI DOI 10.1108/EB028933
   Yuan Y.C., 2006, Journal of Computer-Mediated Communication, V11, P1062, DOI DOI 10.1111/J.1083-6101.2006.00308.X
   Yuan YC, 2010, COMMUN RES, V37, P20, DOI 10.1177/0093650209351469
NR 60
TC 19
Z9 23
U1 2
U2 46
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1309
EP 1321
DI 10.1016/j.infsof.2014.04.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AN8JO
UT WOS:000340850700009
DA 2024-07-18
ER

PT J
AU Díaz, J
   Pérez, J
   Garbajosa, J
AF Diaz, Jessica
   Perez, Jennifer
   Garbajosa, Juan
TI Agile product-line architecting in practice: A case study in smart grids
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile product-line engineering; Agile product-line architecting;
   Product-line architectural knowledge; Change impact analysis; Case study
ID SOFTWARE ARCHITECTURE
AB Context: Software Product Line Engineering implies the upfront design of a Product-Line Architecture (PLA) from which individual product applications can be engineered. The big upfront design associated with PLAs is in conflict with the current need of "being open to change. To make the development of product-lines more flexible and adaptable to changes, several companies are adopting Agile Product Line Engineering. However, to put Agile Product Line Engineering into practice it is still necessary to make mechanisms available to assist and guide the agile construction and evolution of PLAs.
   Objective: This paper presents the validation of a process for "the agile construction and evolution of product-line architectures", called Agile Product-Line Architecting (APLA). The contribution of the APLA process is the integration of a set of models for describing, documenting, and tracing PLAs, as well as an algorithm for guiding the change decision-making process of PLAs. The APLA process is assessed to prove that assists Agile Product Line Engineering practitioners in the construction and evolution of PLAs.
   Method: Validation is performed through a case study by using both quantitative and qualitative analysis. Quantitative analysis was performed using statistics, whereas qualitative analysis was performed through interviews using constant comparison, triangulation, and supporting tools. This case study was conducted according to the guidelines of Runeson and Host in a software factory where three projects in the domain of Smart Grids were involved.
   Results: APLA is deployed through the Flexible-PLA modeling framework. This framework supported the successful development and evolution of the PLA of a family of power metering management applications for Smart Grids.
   Conclusions: APLA is a well-supported solution for the agile construction and evolution of PLAs. This case study illustrates that the proposed solution for the agile construction of PLAs is viable in an industry project on Smart Grids. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Diaz, Jessica; Perez, Jennifer; Garbajosa, Juan] UPM, Tech Univ Madrid, EU Informat, C1TSEM Ctra, E-28031 Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Díaz, J (corresponding author), UPM, Tech Univ Madrid, EU Informat, C1TSEM Ctra, Valencia Km 7, E-28031 Madrid, Spain.
EM yesica.diaz@upm.es; jenifer.perez@eui.upm.es; jgs@eui.upm.es
RI Garbajosa, Juan/B-5818-2012; Diaz, Jessica/J-9751-2012; PEREZ,
   JENIFER/M-2506-2014
OI Garbajosa, Juan/0000-0003-0161-3485; Diaz, Jessica/0000-0001-6738-9370;
   PEREZ, JENIFER/0000-0003-3192-7995
FU Spanish fund: INNOSEP [TIN2009-13849]; IMPONET [ITEA 2 09030,
   TSI-02400-2010-103]; i-SSF [IPT-430000-2010-038]; NEMOCODED [ITEA2
   08022, IDI-20110864]; ENERGOS [CEN-20091048]; UPM (Technical University
   of Madrid) under their Researcher Training program
FX The work reported in here has been partially sponsored by the Spanish
   fund: INNOSEP (TIN2009-13849), IMPONET (ITEA 2 09030,
   TSI-02400-2010-103), i-SSF (IPT-430000-2010-038), NEMO&CODED (ITEA2
   08022, IDI-20110864) and ENERGOS (CEN-20091048). Finally, it is also
   funded by the UPM (Technical University of Madrid) under their
   Researcher Training program.
CR Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Ali Babar M., 2009, Conference: Software Product Lines, 13th International Conference, SPLC 2009, San Francisco, California, USA, 24-28 August 2009, P171
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2009, AGILE PROJECT MANAGE
   [Anonymous], 2008, CASE STUDY RES
   ASSmann Uwe., 2003, INVASIVE SOFTWARE CO
   Barbosa EA, 2011, LECT NOTES COMPUT SC, V6903, P139, DOI 10.1007/978-3-642-23798-0_14
   Beck K., 2011, MANIFESTO AGILE SOFT
   Beydeda S., 2005, MODEL DRIVEN SOFTWAR
   Boeije H, 2002, QUAL QUANT, V36, P391, DOI 10.1023/A:1020909529486
   BOOCH G, 2010, IEEE SOFTW, V27, P96
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Bosch J., 2000, Software Architectures for Product Families. International Workshop IW-SAPF-3. Proceedings (Lecture Notes in Computer Science Vol.1951), P168
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Catal C., 2009, SIGSOFT Softw. Eng. Notes, V34, P1
   Cockburn A., 2006, AGILE SOFTWARE DEV, V2nd
   Cooper K., 2006, SPLC 06, P205
   Dashofy EM, 2002, LECT NOTES COMPUT SC, V2290, P330
   Díaz J, 2013, P ANN HICSS, P4780, DOI 10.1109/HICSS.2013.127
   Díaz J, 2011, LECT NOTES COMPUT SC, V7046, P612
   Díaz J, 2011, LECT NOTES COMPUT SC, V6903, P114, DOI 10.1007/978-3-642-23798-0_12
   Díaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dutta S., 2012, The global information technology report 2012: Living in a hyperconnected world
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   ERDOGMUS H, 2009, IEEE SOFTWARE, V26, P2
   Falessi D, 2010, IEEE SOFTWARE, V27, P23, DOI 10.1109/MS.2010.49
   Farenhorst R, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P21, DOI 10.1007/978-3-642-02374-3_2
   Filman R.E., 2004, PECT ORIENTED SOFTWA
   Galster M, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P171, DOI 10.1109/WICSA.2011.30
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Ghanam Y., 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P27, DOI 10.1109/AGILE.2010.6
   GHANAM Y, 2009, SIGSOFT SOFTWARE ENG, V34, P25
   Ghanam Y, 2011, SOFTWARE PRACT EXPER, V41, P867, DOI 10.1002/spe.1097
   Hanssen G., 2010, Workshop on Product Line Approaches in Software Engineering, International Conference on Software Engineering, P1
   Hochstein L, 2005, INFORM SOFTWARE TECH, V47, P643, DOI 10.1016/j.infsof.2004.11.005
   Jansen A, 2009, J SYST SOFTWARE, V82, P1232, DOI 10.1016/j.jss.2009.04.052
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Leffingwell D., 2007, The Agile Software Development Series, V1a
   Leffingwell D., 2010, Agile Software Requirements: Lean Requirements Practices for Teams, Programs, and the Enterprise
   Madison J, 2010, IEEE SOFTWARE, V27, P41, DOI 10.1109/MS.2010.35
   Martincevic J., 2010, SOFTWARE FACTORY MAG, P19
   Massoud Amin S., 2005, IEEE Power & Energy Magazine, V3, P34, DOI 10.1109/MPAE.2005.1507024
   McMahon P., 2005, CrossTalk, V18, P16
   Mens T., 2010, FUT RES CHALL SOFTW
   Mohan K, 2010, IEEE SOFTWARE, V27, P48, DOI 10.1109/MS.2010.31
   Nord RL, 2006, IEEE SOFTWARE, V23, P47, DOI 10.1109/MS.2006.54
   Pérez J, 2006, LECT NOTES COMPUT SC, V4063, P123
   Pérez J, 2010, LECT NOTES COMPUT SC, V6285, P102, DOI 10.1007/978-3-642-15114-9_10
   Pérez J, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P221, DOI 10.1109/WICSA.2009.5290808
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   Shore J., 2007, ART AGILE DEV
   Stake Robert E., 1995, The Art of Case Study Research
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   van der Hoek A., 2001, Software Engineering Notes, V26, P1, DOI 10.1145/503271.503211
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   van Heesch U, 2012, J SYST SOFTWARE, V85, P795, DOI 10.1016/j.jss.2011.10.017
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   van Vliet H, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P24, DOI 10.1109/ASWEC.2008.69
   Visser J., 2012, ERCIM NEWS 88
   Zimmermann O, 2009, J SYST SOFTWARE, V82, P1249, DOI 10.1016/j.jss.2009.01.039
NR 68
TC 27
Z9 29
U1 2
U2 38
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2014
VL 56
IS 7
BP 727
EP 748
DI 10.1016/j.infsof.2014.01.014
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH3FW
UT WOS:000336010100003
DA 2024-07-18
ER

PT J
AU Sulayman, M
   Mendes, E
   Urquhart, C
   Riaz, M
   Tempero, E
AF Sulayman, Muhammad
   Mendes, Emilia
   Urquhart, Cathy
   Riaz, Mehwish
   Tempero, Ewan
TI Towards a theoretical framework of SPI success factors for small and
   medium web companies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software process improvement; Success factors; Comparative analysis;
   Theoretical integration; Theoretical framework; Small and medium web
   companies
ID SOFTWARE PROCESS IMPROVEMENT; GROUNDED THEORY; ENTERPRISES
AB Context: The context of this research is software process improvement (SPI) success factors for small and medium Web companies.
   Objective: The primary objective of this paper is to propose a theoretical framework of SPI success factors for small and medium Web companies.
   Method: The theoretical framework presented in this study aggregated the results of three previous research phases by applying principles of theoretical integration and comparative analysis. Those three previous phases were all empirical in nature, and comprise: a systematic review of SPI in small and medium Web companies [1,2]; a replication study [3] and a grounded theory-based initial exploratory framework of factors in small and medium Web companies [4].
   Results: The theoretical framework includes 18 categories of SPI success factors, 148 properties of these categories and 25 corresponding relationships, which bind these categories together. With the help of these relationships, the categories and properties of SPI success factors can be directly translated into a set of guidelines, which can then be used by the practitioners of small and medium Web companies to improve the current state of SPI in their companies and achieve overall company success.
   Conclusion: The comprehensive theoretical framework of SPI success factors presented herein provides evidence regarding key factors for predicting SPI success for small and medium Web companies. The framework can be used as a baseline for a successful implementation of SPI initiatives in the mentioned domain. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Sulayman, Muhammad; Riaz, Mehwish; Tempero, Ewan] Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   [Mendes, Emilia] Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, Karlskrona, Sweden.
   [Urquhart, Cathy] Manchester Metropolitan Univ, MMU Business Sch, Ctr Business & Soc, Manchester M15 6BH, Lancs, England.
C3 University of Auckland; Blekinge Institute Technology; Manchester
   Metropolitan University
RP Sulayman, M (corresponding author), Bldg 303S,38 Princes St, Auckland 1010, New Zealand.
EM msul028@aucklanduni.ac.nz; emilia.mendes@bth.se; C.Urquhart@mmu.ac.uk;
   mria007@aucklanduni.ac.nz; e.tempero@auckland.ac.nz
RI Urquhart, Cathy/HLQ-1865-2023; Tempero, Ewan/D-2621-2009; Mendes, Maria
   E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322
CR Abrahamsson P., 2001, Scandinavian Journal of Information Systems, V13, P69
   Alexandre S, 2006, EUROMICRO CONF PROC, P328, DOI 10.1109/EUROMICRO.2006.48
   Anfara A.V., 2006, Theoretical Framework in Qualitative Research
   [Anonymous], 1998, Software process improvement
   [Anonymous], 2010, P 2010 ACM S APPL CO
   [Anonymous], ESEC SIGSOFT FSE
   [Anonymous], 2008, SOFTWARE PROCESS IMP, DOI DOI 10.1002/SPIP.380
   Azhar D., 2012, Proceedings ofthe 8th International Conference on Predictive Models in Software Engineering, PROMISE, V12, P49, DOI [10.1145/2365324.2365332, DOI 10.1145/2365324.2365332]
   Cater-Steel A, 2006, INFORM SOFTWARE TECH, V48, P323, DOI 10.1016/j.infsof.2005.09.012
   Cater-Steel AP, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P368, DOI 10.1109/ASWEC.2004.1290490
   Christodoulou S., 2000, ICSE, P75
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Cronbach L.J., 1988, TEST VALIDITY, P3
   Day B., 2010, ENTERPRISE INFORM SY, V13
   Deshpande Y., 2001, IEEE Multimedia, V8, P82, DOI 10.1109/93.917974
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Dyba T., 2003, Software Engineering Notes, V28, P148, DOI 10.1145/949952.940092
   El Emam K, 2000, J SYST SOFTWARE, V51, P119, DOI 10.1016/S0164-1212(99)00117-X
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   Florac W.A., 1997, PRACTIAL SOFTWARE ME
   Fraternali P, 2000, ACM T INFORM SYST, V18, P323, DOI 10.1145/358108.358110
   Glaser B. G., 1978, [No title captured]
   Goldenson D.R., 1995, SEI
   Grechenig T., 2004, QSIC 04
   Guerrero F, 2004, IEEE SOFTWARE, V21, P29, DOI 10.1109/MS.2004.3
   Habib Z., 2009, The Critical Success Factors in implementation of Software Process Improvement Efforts:CSFs, Motivators Obstacles
   Habra N, 2008, INFORM SOFTWARE TECH, V50, P763, DOI 10.1016/j.infsof.2007.08.004
   Hong N, 2010, ASIA PAC SOFWR ENG, P310, DOI 10.1109/APSEC.2010.43
   I. Standard, 2011, 29110512 IEC
   Khan SU, 2009, INT CONF GLOBAL SOFT, P207, DOI 10.1109/ICGSE.2009.28
   Malaivongs K., 2008, SOFTWARE PROCESS IMP
   McFeeley Bob., 1996, IDEALSM: A User's Guide for Software Process Improvement
   MENDES E, 2006, WEB ENG
   Molasso W., 2006, COLL CHARACT, V7, P9
   Montoni M, 2007, LECT NOTES COMPUT SC, V4764, P175
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Nikitina N, 2010, COMM COM INF SC, V99, P189
   O'Connor RV, 2011, COMM COM INF SC, V172, P225
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Pino FJ, 2010, J SYST SOFTWARE, V83, P1662, DOI 10.1016/j.jss.2010.03.077
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Saliou P., 2010, REQ ENG SMALL CO 201, P16
   Santos G, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P187, DOI 10.1109/QUATIC.2007.22
   Sulayman M., 2011, EMP ASS SOFTW ENG EA
   Sulayman M, 2012, INFORM SOFTWARE TECH, V54, P479, DOI 10.1016/j.infsof.2011.12.007
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Taylor MJ, 2002, INFORM SOFTWARE TECH, V44, P381, DOI 10.1016/S0950-5849(02)00024-1
   Union E., 2005, NEW SME DEF
   Urquhart C, 2010, INFORM SYST J, V20, P357, DOI 10.1111/j.1365-2575.2009.00328.x
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   Varkoi T, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P436, DOI 10.1109/QUATIC.2010.80
   Wilson DN, 2001, J SYST SOFTWARE, V59, P135, DOI 10.1016/S0164-1212(01)00057-7
NR 55
TC 25
Z9 30
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2014
VL 56
IS 7
BP 807
EP 820
DI 10.1016/j.infsof.2014.02.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH3FW
UT WOS:000336010100007
DA 2024-07-18
ER

PT J
AU Achimugu, P
   Selamat, A
   Ibrahim, R
   Mahrin, MN
AF Achimugu, Philip
   Selamat, Ali
   Ibrahim, Roliana
   Mahrin, Mohd Naz'ri
TI A systematic literature review of software requirements prioritization
   research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Stakeholders; Requirements; Prioritization; Software systems;
   Requirement engineering
ID PRODUCT VALUE
AB Context: During requirements engineering, prioritization is performed to grade or rank requirements in their order of importance and subsequent implementation releases. It is a major step taken in making crucial decisions so as to increase the economic value of a system.
   Objective: The purpose of this study is to identify and analyze existing prioritization techniques in the context of the formulated research questions.
   Method: Search terms with relevant keywords were used to identify primary studies that relate requirements prioritization classified under journal articles, conference papers, workshops, symposiums, book chapters and IEEE bulletins.
   Results: 73 Primary studies were selected from the search processes. Out of these studies; 13 were journal articles, 35 were conference papers and 8 were workshop papers. Furthermore, contributions from symposiums as well as IEEE bulletins were 2 each while the total number of book chapters amounted to 13.
   Conclusion: Prioritization has been significantly discussed in the requirements engineering domain. However, it was generally discovered that, existing prioritization techniques suffer from a number of limitations which includes: lack of scalability, methods of dealing with rank updates during requirements evolution, coordination among stakeholders and requirements dependency issues. Also, the applicability of existing techniques in complex and real setting has not been reported yet. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Achimugu, Philip; Selamat, Ali; Ibrahim, Roliana; Mahrin, Mohd Naz'ri] Univ Teknol Malaysia, Fac Comp, Utm Skudai 81310, Johor, Malaysia.
C3 Universiti Teknologi Malaysia
RP Achimugu, P (corresponding author), Univ Teknol Malaysia, Fac Comp, Utm Skudai 81310, Johor, Malaysia.
EM check4philo@gmail.com; aselamat@utm.my; roliana@utm.my; mdnazrim@utm.my
RI Selamat, Ali/E-9645-2011; Mahrin, Mohd Naz'ri/A-2711-2014
OI Selamat, Ali/0000-0001-9746-8459; Achimugu, Philip/0000-0002-7380-411X;
   Mahrin, Mohd Naz'ri/0000-0002-9604-9700
FU Ministry of Science, Technology and Innovation Malaysia (MOSTI) [Vat
   4S062]; Universiti Teknologi Malaysia (UTM)
FX The authors appreciate the efforts of the Ministry of Science,
   Technology and Innovation Malaysia (MOSTI) under Vat 4S062 and
   Universiti Teknologi Malaysia (UTM) for supporting this research.
CR Aasem M., INF EM TECHN ICIET 2, P1
   AHL V, 2005, THESIS SCH ENG SWEDE
   Ahmad A., 2011, 2011 IEEE International Conference on Computer Science and Automation Engineering (CSAE), P290, DOI 10.1109/CSAE.2011.5952853
   [Anonymous], 2008, P 2008 2 INT WORKSH
   [Anonymous], INT J SOFTWARE ENG
   Asghar MW, 2013, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2013.62
   Avesani P., 2004, P 16 INT C SOFTW ENG, P306
   Avesani P., RE 2005, P297
   Azar J, 2007, IEEE SOFTWARE, V24, P32, DOI 10.1109/MS.2007.30
   Babar M., COMP NETW INF TECHN, P319
   Bakalova Z, 2011, LECT NOTES COMPUT SC, V6606, P181, DOI 10.1007/978-3-642-19858-8_18
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Barney S, 2006, EUROMICRO CONF PROC, P274, DOI 10.1109/EUROMICRO.2006.51
   Bebensee T, 2010, LECT NOTES COMPUT SC, V6182, P67, DOI 10.1007/978-3-642-14192-8_8
   Beg MR, 2009, 2009 IEEE INTERNATIONAL ADVANCE COMPUTING CONFERENCE, VOLS 1-3, P340, DOI 10.1109/IADCC.2009.4809033
   Beg R., EM TRENDS ENG TECHN, P1216
   Benestad HC, 2012, INT SYMP EMP SOFTWAR, P261, DOI 10.1145/2372251.2372300
   Berander P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P69, DOI 10.1007/3-540-28244-0_4
   BERANDER P, 2006, P 6 C SOFTW ENG RES
   Berander P., 2004, BLEKINGE I TECHNOLOG, P12
   BERRY DM, 1995, J SYST SOFTWARE, V28, P179, DOI 10.1016/0164-1212(94)00054-Q
   Carod N., 2001, REQUIREMENTS PRIORIT
   Carod N., COGN INF ICCI 2010 9, P75
   Carod N., SOFTW ENG ADV ICSEA, P341
   Chatzipetrou P., SOFTW ENG ADV APPL S, P361
   Dabbagh M, 2013, 2013 14TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD 2013), P317, DOI 10.1109/SNPD.2013.9
   Danesh AS, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT AND ENGINEERING, PROCEEDINGS, P390, DOI 10.1109/ICIME.2009.37
   Daneva M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P240, DOI 10.1109/SEAA.2008.46
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   Duan C, 2009, REQUIR ENG, V14, P73, DOI 10.1007/s00766-009-0079-7
   Edwin D., 1992, INT ENG MAN C 92 EAT
   Ejnioui, 2012, P IEEE C OP SYST ICO, P1
   Fehlmann T., SOFTW PROD MAN 2008, P35
   Felfernig A., REC SYST SOFTW ENG R, P59
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Firesmith D., 2004, Journal of Object Technology, V3
   Fitsilis P, 2010, IEEE ENABL TECHNOL, P110, DOI 10.1109/WETICE.2010.24
   Forouzani S., 2012, Proceedings of the 2012 8th International Conference on Computing Technology and Information Management (NCM and ICNIT), P787
   Franceschini F., 1999, International Journal of Quality Reliability Management, V16, P85, DOI [DOI 10.1108/02656719910250881, 10.1108/02656719910250881]
   Gaur V., TRENDS COMPUTER SCI, P101
   Gaur V, 2010, 2010 IEEE 2ND INTERNATIONAL ADVANCE COMPUTING CONFERENCE, P449, DOI 10.1109/IADCC.2010.5422878
   Giesen J, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P206, DOI 10.1109/ICRE.2002.1048528
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Gruenbacher P., 2000, P 2 INT WORKSH REQ E
   Grunbacher P., SYST SCI 2003 P 36 A, P9
   Hatton S, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P517, DOI 10.1109/ASWEC.2008.22
   Herrmann A, 2009, EMPIR SOFTW ENG, V14, P644, DOI 10.1007/s10664-009-9105-0
   Herrmann A, 2008, INT REQUIR ENG CONF, P125, DOI 10.1109/RE.2008.48
   In HP, 2002, P INT COMP SOFTW APP, P887, DOI 10.1109/CMPSAC.2002.1045118
   Iqbal M., 2010 INT C DAT STOR
   Kaiya H, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICRE.2002.1048501
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Karlsson J., 1997, J REQUIR ENG, V2, P51
   Karlsson L., P EMP ASS SOFTW ENG
   Karlsson L, P 2006 ACM IEEE INT, P326
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   Kassel N. W., 2003, P 7 IASTED INT C SOF
   Kaur G., 2013, Int. J. Eng. Res. Technol, V2, P958
   KHAN KA, 2006, THESIS BLEKINGE I TE
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kobayashi A, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P171, DOI 10.1109/ECBS.2001.922419
   Kukreja N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1465, DOI 10.1109/ICSE.2013.6606746
   Kukreja N, 2013, PROCEDIA COMPUT SCI, V16, P806, DOI 10.1016/j.procs.2013.01.084
   Laurent P, 2007, INT REQUIR ENG CONF, P131, DOI 10.1109/RE.2007.63
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3009, P497
   Lima DC, 2011, LECT NOTES COMPUT SC, V6956, P64, DOI 10.1007/978-3-642-23716-4_8
   Liu X., 2001, INT J CONCURR ENG, V9, P1
   Liu XQ, 2006, J SYST SOFTWARE, V79, P1649, DOI 10.1016/j.jss.2006.03.012
   Liu XQF, 1998, J SYST SOFTWARE, V42, P105, DOI 10.1016/S0164-1212(98)10002-X
   Logue K., ENG COMP BAS SYST 20, P437
   Marjaie S., COMP INT SOFTW ENG C, P1
   Massey A. K., 2009, 2nd Int. Workshop on Requirements Engineering and Law (RELAW'09), P27
   Mead N., 2006, Requirements Prioritization Introduction
   Moisiadis F., P SYST ENG TEST EV C
   Olson H., COMPSAC 2002, P887
   Otero C., MATH AN MOD COMP SIM, P187
   Park J., SOFTW ENG C 1999 APS, P560
   Peng S, 2008, SAMPLE SELECTION ALG
   Pergher M., EMP REQ ENG EMPIRE 2, P40
   Perini Anna, 2007, 5th International Workshop on Comparative Evaluation in Requirements Engineering (CERE 2007), P23, DOI 10.1109/CERE.2007.1
   Perini A, 2013, IEEE T SOFTWARE ENG, V39, P445, DOI 10.1109/TSE.2012.52
   Perini A, 2009, INFORM SOFTWARE TECH, V51, P1021, DOI 10.1016/j.infsof.2008.12.001
   Pitangueira Antonio Mauricio, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P188, DOI 10.1007/978-3-642-39742-4_15
   Port D., P 2008 23 IEEE ACM I, P268
   Racheva Z., 2010, 2010 4 INT C RES CHA, P287, DOI [DOI 10.1109/RCIS.2010.5507388, 10.1109/RCIS.2010.5507388]
   Raharjo H, 2006, INT J PROD RES, V44, P5005, DOI 10.1080/00207540600547414
   Ramzan M., 2009, 2009 Fourth International Conference on Innovative Computing, Information and Control (ICICIC 2009), P1464, DOI 10.1109/ICICIC.2009.375
   Ramzan M, 2011, INT J INNOV COMPUT I, V7, P1017
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Ruhe G, 2003, INT J SOFTW ENG KNOW, V13, P345, DOI 10.1142/S0218194003001378
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Sadiq M., 2010, INT C DAT STOR DAT E
   Sivzittian S., REFSQ 2001
   Sommerville I, 1997, REQUIREMENTS ENG A G
   Svahnberg M., SOFTW PROD MAN IWSPM, P35
   Svensson RB, 2011, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2011.6051652
   Thakurta R, 2013, SOFTWARE QUAL J, V21, P573, DOI 10.1007/s11219-012-9188-5
   Tonella P., SEARCH BAS SOFTW ENG, P57
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Voola P, 2012, ADV INTEL SOFT COMPU, V132, P915
   Voola Persis., 2012, Software Engineering: An International Journal (SEIJ) Vol, V2, P37
   Wiegers K.E., 1999, 1 THINGS 1 PRIORITIZ, V7
   Xiaoqing Liu, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P410, DOI 10.1109/CMPSAC.2004.1342872
NR 107
TC 211
Z9 227
U1 2
U2 50
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2014
VL 56
IS 6
BP 568
EP 585
DI 10.1016/j.infsof.2014.02.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG5VH
UT WOS:000335486300003
DA 2024-07-18
ER

PT J
AU Chong, CY
   Lee, SP
   Ling, TC
AF Chong, Chun Yong
   Lee, Sai Peck
   Ling, Teck Chaw
TI Efficient software clustering technique using an adaptive and preventive
   dendrogram cutting approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Design recovery; Software clustering;
   Remodularization
ID ALGORITHMS
AB Context: Software clustering is a key technique that is used in reverse engineering to recover a high-level abstraction of the software in the case of limited resources. Very limited research has explicitly discussed the problem of finding the optimum set of clusters in the design and how to penalize for the formation of singleton clusters during clustering.
   Objective: This paper attempts to enhance the existing agglomerative clustering algorithms by introducing a complementary mechanism. To solve the architecture recovery problem, the proposed approach focuses on minimizing redundant effort and penalizing for the formation of singleton clusters during clustering while maintaining the integrity of the results.
   Method: An automated solution for cutting a dendrogram that is based on least-squares regression is presented in order to find the best cut level. A dendrogram is a tree diagram that shows the taxonomic relationships of clusters of software entities. Moreover, a factor to penalize clusters that will form singletons is introduced in this paper. Simulations were performed on two open-source projects. The proposed approach was compared against the exhaustive and highest gap dendrogram cutting methods, as well as two well-known cluster validity indices, namely, Dunn's index and the Davies-Bouldin index.
   Results: When comparing our clustering results against the original package diagram, our approach achieved an average accuracy rate of 90.07% from two simulations after the utility classes were removed. The utility classes in the source code affect the accuracy of the software clustering, owing to its omnipresent behavior. The proposed approach also successfully penalized the formation of singleton clusters during clustering.
   Conclusion: The evaluation indicates that the proposed approach can enhance the quality of the clustering results by guiding software maintainers through the cutting point selection process. The proposed approach can be used as a complementary mechanism to improve the effectiveness of existing clustering algorithms. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Chong, Chun Yong; Lee, Sai Peck] Univ Malaya, Fac Comp Sci & IT, Dept Software Engn, Kuala Lumpur 50603, Malaysia.
   [Ling, Teck Chaw] Univ Malaya, Fac Comp Sci & Informat Technol, Dept Comp Syst & Technol, Kuala Lumpur 50603, Malaysia.
C3 Universiti Malaya; Universiti Malaya
RP Chong, CY (corresponding author), Univ Malaya, Fac Comp Sci & IT, Dept Software Engn, Kuala Lumpur 50603, Malaysia.
EM cychong@um.edu.my; saipeck@um.edu.my; tchaw@um.edu.my
RI Chong, Chun Yong/G-5067-2015; LING, TECK CHAW/B-8873-2010; Lee, Sai
   Peck/B-8841-2010
OI Chong, Chun Yong/0000-0003-1164-0049; Lee, Sai Peck/0000-0002-4551-430X
FU Ministry of Education, Malaysia;  [UM.C/625/1/HIR/MOHE/FCSIT/13]
FX This work is carried out within the framework of the research project
   supported by High Impact Research Grant with reference
   UM.C/625/1/HIR/MOHE/FCSIT/13, funded by the Ministry of Education,
   Malaysia.
CR Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Anquetil N., 2003, IEE Proceedings-Software, V150, P185, DOI 10.1049/ip-sen:20030581
   Aull-Hyde R, 2006, EUR J OPER RES, V171, P290, DOI 10.1016/j.ejor.2004.06.037
   Chung-Horng L., 2008, GLOB TEL C 2008 IEEE, P1
   Davey J, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P268, DOI 10.1109/WCRE.2000.891478
   DAVIES DL, 1979, IEEE T PATTERN ANAL, V1, P224, DOI 10.1109/TPAMI.1979.4766909
   Doval D., 1999, STEP '99. Proceedings Ninth International Workshop Software Technology and Engineering Practice, P73, DOI 10.1109/STEP.1999.798481
   Dunn J. C., 1973, Journal of Cybernetics, V3, P32, DOI 10.1080/01969727308546046
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fokaefs M, 2009, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2009.5306332
   Greenacre M., 2012, A simple permutation test for clusteredness
   Gronau I, 2007, INFORM PROCESS LETT, V104, P205, DOI 10.1016/j.ipl.2007.07.002
   HUGHES MM, 1979, INT J BEHAV DEV, V2, P215, DOI 10.1177/016502547900200301
   Jain A. K., 1988, Algorithms for Clustering Data, P446
   Jingwei W., 2005, COMP CLUSTERING ALGO, P525
   Kang DZ, 2004, INT WKSHP FUT TR DIS, P222
   Lung C.-H., 1998, P 3 INT WORKSH SOFTW, P101
   Lung CH, 2004, J SYST SOFTWARE, V73, P227, DOI [10.1016/S0164-1212(03)00234-6, 10.1016/s0164-1212(03)00234-6]
   Lung CH, 2006, J SYST SOFTWARE, V79, P1261, DOI 10.1016/j.jss.2006.02.037
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mirkin B, 2004, J CLASSIF, V21, P279, DOI 10.1007/s00357-004-0020-2
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   MULLER HA, 1990, CONFERENCE ON SOFTWARE MAINTENANCE 1990, P12
   Nicolas A., 1999, EXPT CLUSTERING SOFT, P235
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Pirzadeh H, 2009, INT CONF QUAL SOFTW, P465, DOI 10.1109/QSIC.2009.69
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Sartipi K, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P103, DOI 10.1109/WCRE.2001.957814
   Sestoft P., 1999, Programs for biosequence analysis
   Shokoufandeh A, 2005, J SYST SOFTWARE, V77, P213, DOI 10.1016/j.jss.2004.03.032
   Sorensen T.A., 1948, BIOL SKRIFTER, V5, P1
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Warrens MJ, 2009, J CLASSIF, V26, P227, DOI [10.1007/s00357-009-9032-1, 10.1007/s00357-009932-1]
   Wen ZH, 2005, PROG COMPREHEN, P269
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wolberg J., 2006, Data analysis using the method of least squares
NR 38
TC 23
Z9 25
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1994
EP 2012
DI 10.1016/j.infsof.2013.07.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500009
DA 2024-07-18
ER

PT J
AU Díaz, G
   Bermejo, JR
AF Diaz, Gabriel
   Ramon Bermejo, Juan
TI Static analysis of source code security: Assessment of tools against
   SAMATE tests
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security tools; Vulnerability; Quality analysis and evaluation;
   Software/program verification; Security development lifecycle
AB Context: Static analysis tools are used to discover security vulnerabilities in source code. They suffer from false negatives and false positives. A false positive is a reported vulnerability in a program that is not really a security problem. A false negative is a vulnerability in the code which is not detected by the tool.
   Objective: The main goal of this article is to provide objective assessment results following a well-defined and repeatable methodology that analyzes the performance detecting security vulnerabilities of static analysis tools. The study compares the performance of nine tools (CBMC, K8-Insight, PC-lint, Prevent, Satabs, SCA, Goanna, Cx-enterprise, Codesonar), most of them commercials tools, having a different design.
   Method: We executed the static analysis tools against SAMATE Reference Dataset test suites 45 and 46 for C language. One includes test cases with known vulnerabilities and the other one is designed with specific vulnerabilities fixed. Afterwards, the results are analyzed by using a set of well known metrics.
   Results: Only SCA is designed to detect all vulnerabilities considered in SAMATE. None of the tools detect "cross-site scripting" vulnerabilities. The best results for F-measure metric are obtained by Prevent, SCA and K8-Insight. The average precision for analyzed tools is 0.7 and the average recall is 0.527. The differences between all tools are relevant, detecting different kinds of vulnerabilities.
   Conclusions: The results provide empirical evidences that support popular propositions not objectively demonstrated until now. The methodology is repeatable and allows ranking strictly the analyzed static analysis tools, in terms of vulnerabilities coverage and effectiveness for detecting the highest number of vulnerabilities having few false positives. Its use can help practitioners to select appropriate tools for a security review process of code. We propose some recommendations for improving the reliability and usefulness of static analysis tools and the process of benchmarking. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Diaz, Gabriel] Spanish Distance Univ, UNED, Elect Elect & Control Engn Dept, Madrid 28040, Spain.
   [Ramon Bermejo, Juan] Base Aerea Torrejon de Ardoz, Commun & Comp Squadron Core Command, Madrid 22800, Spain.
   [Ramon Bermejo, Juan] Base Aerea Torrejon de Ardoz, Control Grp Spanish Air Forces Air Def Syst, Madrid 22800, Spain.
C3 Universidad Nacional de Educacion a Distancia (UNED)
RP Bermejo, JR (corresponding author), Base Aerea Torrejon de Ardoz, Commun & Comp Squadron Core Command, Ctra N-2 Km, Madrid 22800, Spain.
EM gdiaz@ieec.uned.es; jrbermh@ea.mde.es
RI Higuera, Juan Ramon Bermejo/AAO-2990-2020; ORUETA, GABRIEL
   DIAZ/ABF-9707-2020
OI Higuera, Juan Ramon Bermejo/0000-0002-0197-8663; ORUETA, GABRIEL
   DIAZ/0000-0001-9246-351X
FU e-Madrid Project [S2009/TIC-1650]
FX The authors acknowledge the support provided by e-Madrid Project,
   S2009/TIC-1650, "Investigacion y Desarrollo de tecnologias para el
   e-learning en la Comunidad de Madrid."
CR Aggarwal A, 2006, P INT COMP SOFTW APP, P343
   Aiken A., 2006, SATURN PROGRAM ANAL
   [Anonymous], IEEE SOFTWARE
   [Anonymous], P INT S SOFTW REL EN
   [Anonymous], BUILT SEC SOURC COD
   [Anonymous], 7755 NIST
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 16 ANN C COMP SEC AP
   [Anonymous], LINUXJOURNAL
   [Anonymous], 6 WORLD C INT DES PR
   [Anonymous], 412 MITRE CWE
   [Anonymous], 2008, TECHNICAL REPORTS CO
   [Anonymous], P 4 ANN WORKSH CYB S
   [Anonymous], REQUIRE VULNERABILIT
   [Anonymous], ACM SIGSOFT SOFTWARE
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], OWASP APPSECEU08 BEL
   [Anonymous], BOOP TOOLK
   [Anonymous], 2010, NIST SP
   [Anonymous], SOFTW ASS METR TOOL
   [Anonymous], STTT
   [Anonymous], NIST SP
   [Anonymous], P 26 IEEE AIAA DIG A
   [Anonymous], COMM VULN E IN PRESS
   [Anonymous], SAMATE REF DAT
   [Anonymous], 65 BELL LAB
   [Anonymous], P 9 EUR SOFTW ENG C
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], ADDISON WESLEY SOFTW
   [Anonymous], THESIS HARVARD U
   [Anonymous], 2007, NIST SP
   [Anonymous], SIGADA ADA LETT
   [Anonymous], P INT WORKSH DEF LAR
   [Anonymous], GARTN MAG QUADR STAT
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Black PE, 2006, PROC IEEE INT CONF S, P70
   Chaki S, 2004, IEEE T SOFTWARE ENG, V30, P388, DOI 10.1109/TSE.2004.22
   Chandra P, 2006, IEEE SECUR PRIV, V4, P80, DOI 10.1109/MSP.2006.77
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   CIFUENTES C., 2008, Proceedings of the 2008 workshop on Static analysis, SAW'08, ACM, New York, NY, USA, P4, DOI DOI 10.1145/1394504.1394505
   Cifuentes Cristina, 2009, P 2 INT WORKSHOP DEF, P16, DOI DOI 10.1145/1555860.1555866
   Foster JS, 1999, ACM SIGPLAN NOTICES, V34, P192, DOI 10.1145/301631.301665
   Gigerenzer G., 2002, RECKONING RISK LEARN
   Gray Jim., 1993, The Benchmark Handbook
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Hofer T., 2010, Evaluating static source code analysis tools
   Hovemeyer D., 2005, ACM SIGSOFT Software Engineering Notes, P13
   Howard M., 2003, Writing Secure Code
   Howard MA, 2006, IEEE SECUR PRIV, V4, P74, DOI 10.1109/MSP.2006.84
   IEEE, 1990, IEEE STANDARD 610 12
   Kleidermacher DN, 2008, 2008 IEEE CONFERENCE ON TECHNOLOGIES FOR HOMELAND SECURITY, VOLS 1 AND 2, P367, DOI 10.1109/THS.2008.4534479
   McGraw G., 2006, ADDISON WESLEY SOFTW
   McGraw G, 2008, COMPUTER, V41, P107, DOI 10.1109/MC.2008.514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   NIST, 2009, NIST SP
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Wagner David., 2000, NETWORK DISTRIBUTED, P3
   WARE M.S., 2008, P 2008 WORKSHOP STAT, P12, DOI DOI 10.1145/1394504.1394506
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 59
TC 32
Z9 34
U1 1
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1462
EP 1476
DI 10.1016/j.infsof.2013.02.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200007
DA 2024-07-18
ER

PT J
AU Goldschmidt, T
   Uhl, A
AF Goldschmidt, Thomas
   Uhl, Axel
TI Retainment policies - A formal framework for change retainment for
   trace-based model transformations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-driven engineering; Model transformation; QVT; Change retainment
AB Context: Model-to-model (M2M) transformations play an important role within model-driven development. Modern M2M approaches support incremental updates to the target model according to changes in the source model(s). Bidirectional transformation approaches even allow to incrementally translate target model changes back to the source model.
   Objective: A model transformation's target model may need to be refined later on either manually or automatically. Therefore, modellers may want to specify that target model changes are not overwritten if the original transformation is re-executed. There is currently only weak support for this kind of retainment by transformation engines.
   Method: In many transformation engines a transformation trace is available which keeps record of a transformation's actions. In this paper, we exploit this information and define patterns which allow transformation engineers to trim transformations to facilitate the handling of target model changes.
   Results: We describe a formal framework which serves as basis for realizing the patterns as what we call retainment policies. Based on this framework we present an implementation of the retainment policy approach for QVT Relations.
   Conclusions: The retainment policies which allow a transformation developer to develop transformation rules that will retain manual changes to the target model. The implementation of the approach for QVT Relations shows that it is realisable in state-of-the art transformation techniques. However, being defined on a theoretical level, also other transformation approaches will benefit from our work. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Goldschmidt, Thomas] ABB Corp Res Germany, Ind Software Syst Program, D-68526 Ladenburg, Germany.
   [Uhl, Axel] SAP AG, D-69190 Walldorf, Germany.
C3 ABB; SAP
RP Goldschmidt, T (corresponding author), ABB Corp Res Germany, Ind Software Syst Program, Wallstadter Str 59, D-68526 Ladenburg, Germany.
EM thomas.goldschmidt@de.abb.com; axel.uhl@-sap.com
CR Amelunxen C., 2007, IET SOFTWARE J, V2, P204
   Anjorin A., 2010, ECEASST, V35, P1
   [Anonymous], MET FAC MOF 2 0 QUER
   Cicchetti A., 2010, 3 INT C SOFTW LANG E, P183
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K., 2009, 2 INT C THEOR PRACT, P250
   Eclipe foundation, 2011, IBM SVST
   Eclipse Foundation, 2011, ECL MOD PROJ
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Goldschmid T., 2011, 37 EUROMICRO C SOFTW, P91
   Goldschmidt T., 2010, THESIS KARLSRUHE I T
   Goldschmidt T., 2009, 5 EUR C MOD DRIV ARC, P100
   Goldschmidt T., 2008, 1 INT WORKSH MOD COE, P18
   Gorp P.V., 2003, ECEASST, P144
   Hearnden D., 2006, 1 INT C GRAPH TRANSF, P321
   Hearnden D., 2005, J OBJECT TECHNOL, P321
   Hettel T., 2010, THESIS QUEENSLAND U
   Hettel T., 2009, 2 INT C THEOR PRACT, P100
   Hettel T., 2008, 2 INT C THEOR PRACT, P31
   Hidaka S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P480, DOI 10.1109/ASE.2011.6100104
   Hidaka S, 2009, PROC INT CONF SOFTW, P235, DOI 10.1109/ICSE-COMPANION.2009.5070990
   Hu ZJ, 2011, SIGMOD REC, V40, P35, DOI 10.1145/2007206.2007217
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Paige RF, 2005, ELECTRON NOTES THEOR, V137, P151, DOI 10.1016/j.entcs.2005.04.029
   Tratt L, 2008, J OBJECT TECHNOL, V7, P107, DOI 10.5381/jot.2008.7.3.a3
   Xiong Y., 2009, 2 INT C THEOR PRACT, P213
NR 27
TC 2
Z9 2
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 1064
EP 1084
DI 10.1016/j.infsof.2012.07.013
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 139LS
UT WOS:000318584800010
DA 2024-07-18
ER

PT J
AU Khalafinejad, S
   Mirian-Hosseinabadi, SH
AF Khalafinejad, Saeed
   Mirian-Hosseinabadi, Seyed-Hassan
TI Translation of Z specifications to executable code: Application to the
   database domain
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Prototyping; Database; Formal methods; Software development; Graphical
   user interface
ID FORMAL METHODS; MODEL
AB Context: It is well-known that the use of formal methods in the software development process results in high-quality software products. Having specified the software requirements in a formal notation, the question is how they can be transformed into an implementation. There is typically a mismatch between the specification and the implementation, known as the specification-implementation gap.
   Objective: This paper introduces a set of translation functions to fill the specification-implementation gap in the domain of database applications. We only present the formal definition, not the implementation, of the translation functions.
   Method: We chose Z, SQL and Delphi languages to illustrate our methodology. Because the mathematical foundation of Z has many properties in common with SQL, the translation functions from Z to SQL are derived easily. For the translation of Z to Delphi, we extend Delphi libraries to support Z mathematical structures such as sets and tuples. Then, based on these libraries, we derive the translation functions from Z to Delphi. Therefore, we establish a formal relationship between Z specifications and Delphi/SQL code. To prove the soundness of the translation from a Z abstract schema to the Delphi/SQL code, we define a Z design-level schema. We investigate the consistency of the Z abstract schema with the Z design-level schema by using Z refinement rules. Then, by the use of the laws of Morgan refinement calculus, we prove that the Delphi/SQL code refines the Z design-level schema.
   Results: The proposed approach can be used to build the correct prototype of a database application from its specification. This prototype can be evolved, or may be used to validate the software requirements specification against user requirements.
   Conclusion: Therefore, the work presented in this paper reduces the overall cost of the development of database applications because early validation reveals requirement errors sooner in the software development cycle. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Khalafinejad, Saeed] Sharif Univ Technol, Sch Sci & Engn, Kish Isl, Iran.
   [Mirian-Hosseinabadi, Seyed-Hassan] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
C3 Sharif University of Technology; Sharif University of Technology
RP Khalafinejad, S (corresponding author), Sharif Univ Technol, Sch Sci & Engn, Int Campus, Kish Isl, Iran.
EM skhalafinejad@alum.sharif.edu; hmirian@-sharif.edu
RI Mirian-Hosseinabadi, Seyed-Hassan/AAE-9963-2021
CR Abdallah A. E., 2003, Book of Abstracts. ACS/IEEE International Conference on Computer Systems and Applications (Cat. No.03EX722)
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Alves TL, 2005, LECT NOTES COMPUT SC, V3582, P399
   [Anonymous], 1992, The Z Notation
   [Anonymous], ATELIER B USER MANUA
   [Anonymous], P CAN UNC RES INT PE
   [Anonymous], 2005, THESIS
   Beauvais JR, 1998, 1998 INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P52, DOI 10.1109/CSD.1998.657539
   Beckert B, 2006, IEEE INTELL SYST, V21, P71, DOI 10.1109/MIS.2006.117
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   Boiten E., 1998, PROCEEDINGS OF THE 3
   Bowen JP, 2006, COMPUTER, V39, P40, DOI 10.1109/MC.2006.35
   Brucker AD, 2003, J UNIVERS COMPUT SCI, V9, P152
   Chalin P., 2006, LECT NOTES COMPUTER, V4111, P280
   Changizi B., 2009, INTERNATIONAL JOURNA, V1, P21
   Chen ZB, 2009, SCI COMPUT PROGRAM, V74, P168, DOI 10.1016/j.scico.2008.08.003
   Cooper D., 2002, TECH REP YCS 2002 34
   Date C.J., 2004, An Introduction to Database Systems, V8th
   Derrick J, 2008, LECT NOTES COMPUT SC, V5238, P280
   Diepen M. J. V., 1990, PROCEEDINGS OF THE 3, P526
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Duke R., 1994, TECH REP 94 45
   Dupuy-Chessa S., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P242
   Faitelson D, 2007, ELECTRON NOTES THEOR, V184, P171, DOI 10.1016/j.entcs.2007.03.021
   Fitzgerald J, 2008, ACM SIGPLAN NOTICES, V43, P3, DOI 10.1145/1361213.1361214
   Freitas A., LECT NOTES COMPUTER, V4085, P115
   Fukagawa M., 1994, Proceedings. 1994 First Asia-Pacific Software Engineering Conference, P220, DOI 10.1109/APSEC.1994.465258
   Gunther T., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P351, DOI 10.1007/BFb0024656
   Hall A, 2005, LECT NOTES COMPUT SC, V3785, P1
   Hall A, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.976937
   Harel D, 2000, LECT NOTES COMPUT SC, V1783, P22
   Hayes I. J, 1992, SPECIFICATION CASE S, Vsecond
   HAYES IJ, 1989, SOFTWARE ENG J, V4, P330, DOI 10.1049/sej.1989.0045
   Hedin G, 2003, PROC INT CONF SOFTW, P586, DOI 10.1109/ICSE.2003.1201241
   Hinchey MG, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P339, DOI 10.1109/ECBS.2005.7
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jia XP, 1995, P INT COMP SOFTW APP, P108, DOI 10.1109/CMPSAC.1995.524767
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Kevin L., 1996, SPECIFICATION IN B A
   Khalafinejad Saeed, 2010, 2010 International Conference on Electronics and Information Engineering (ICEIE 2010), P209, DOI 10.1109/ICEIE.2010.5559891
   Khalafinejad S., 2011, PROCEEDINGS OF THE 1
   Khalafinejad S., 2010, THESIS
   Krishnamurthi S., 2008, ACM SIGSOFT INT S FD, P158
   Lin C.W., 1994, THESIS
   Liu XL, 2007, PROCEEDINGS OF THE 2007 1ST INTERNATIONAL SYMPOSIUM ON INFORMATION TECHNOLOGIES AND APPLICATIONS IN EDUCATION (ISITAE 2007), P153
   Mammar A, 2006, INFORM SOFTWARE TECH, V48, P253, DOI 10.1016/j.infsof.2005.05.002
   Martin A, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P28, DOI 10.1109/APSEC.2003.1254355
   MCAFFER J., 2005, ECLIPSE RICH CLIENT
   Morgan C., 1998, PROGRAMMING FROM SPE
   Oliveira J. N., 1990, Formal Aspects of Computing, V2, P1, DOI 10.1007/BF01888215
   Oliveira M, 2004, LECT NOTES COMPUT SC, V3308, P320
   Pacheco X., 2001, DELPHI 6 DEVELOPERS
   Qin SC, 2007, IEEE INT C ENG COMP, P185, DOI 10.1109/ICECCS.2007.27
   Raju V., 2003, PROCEEDINGS OF THE P
   Ramkarthik S., 2006, 5 IEEE ACIS INT C CO, P405, DOI DOI 10.1109/ICIS-COMSAR.2006.41
   Saaltink M., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P72, DOI 10.1007/BFb0027284
   Seshia SA, 1999, LECT NOTES COMPUT SC, V1709, P983
   Shi F., 1996, TECH REP
   Souto R., 1998, ELECT NOTES THEORETI, V14, P3, DOI DOI 10.1016/S1571-0661(05)80226-9
   Spivey J. M., COMPUTING SCIENCE CO, V34
   Stepney S, 1998, LECT NOTES COMPUT SC, V1493, P284, DOI 10.1007/BFb0056040
   Vickers T., 1990, P 5 AUSTR SOFTWARE E, P39
   Wea D., 1999, CONCURRENT PROGRAMMI
   Winikoff M, 1998, AUST COMP S, V20, P279
   Woodcock J., 2001, PROCEEDINGS OF THE 5
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Yang L, 2007, LECT NOTES COMPUT SC, V4355, P64
NR 67
TC 3
Z9 4
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2013
VL 55
IS 6
BP 1017
EP 1044
DI 10.1016/j.infsof.2012.12.007
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 139LS
UT WOS:000318584800007
DA 2024-07-18
ER

PT J
AU Li, ZY
   Liang, P
   Avgeriou, P
AF Li, Zengyang
   Liang, Peng
   Avgeriou, Paris
TI Application of knowledge-based approaches in software architecture: A
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software architecture; Architecting activity; Knowledge-based approach;
   Systematic mapping study
ID MANAGEMENT; DESIGN; MODEL
AB Context: Knowledge management technologies have been employed across software engineering activities for more than two decades. Knowledge-based approaches can be used to facilitate software architecting activities (e.g., architectural evaluation). However, there is no comprehensive understanding on how various knowledge-based approaches (e.g., knowledge reuse) are employed in software architecture.
   Objective: This work aims to collect studies on the application of knowledge-based approaches in software architecture and make a classification and thematic analysis on these studies, in order to identify the gaps in the existing application of knowledge-based approaches to various architecting activities, and promising research directions.
   Method: A systematic mapping study is conducted for identifying and analyzing the application of knowledge-based approaches in software architecture, covering the papers from major databases, journals, conferences, and workshops, published between January 2000 and March 2011.
   Results: Fifty-five studies were selected and classified according to the architecting activities they contribute to and the knowledge-based approaches employed. Knowledge capture and representation (e.g., using an ontology to describe architectural elements and their relationships) is the most popular approach employed in architecting activities. Knowledge recovery (e.g., documenting past architectural design decisions) is an ignored approach that is seldom used in software architecture. Knowledge-based approaches are mostly used in architectural evaluation, while receive the least attention in architecture impact analysis and architectural implementation.
   Conclusions: The study results show an increased interest in the application of knowledge-based approaches in software architecture in recent years. A number of knowledge-based approaches, including knowledge capture and representation, reuse, sharing, recovery, and reasoning, have been employed in a spectrum of architecting activities. Knowledge-based approaches have been applied to a wide range of application domains, among which "Embedded software" has received the most attention. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Li, Zengyang; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, NL-9747 AG Groningen, Netherlands.
   [Liang, Peng] Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
C3 University of Groningen; Wuhan University
RP Li, ZY (corresponding author), Univ Groningen, Dept Math & Comp Sci, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
EM zengyangli@gmail.com
RI peng, liang/HKE-0294-2023
OI Avgeriou, Paris/0000-0002-7101-0754; Liang, Peng/0000-0002-2056-5346
FU AFR-Luxembourg [895528]; NSFC [60903034]
FX This work is partially supported by AFR-Luxembourg under the Contract
   No. 895528, and the NSFC under the Grant No. 60903034, QuASAK: Quality
   Assurance in Software architecting process using Architectural
   Knowledge. We would like to thank Matthias Galster for his valuable
   input and the anonymous reviewers for their constructive comments on the
   earlier version of this paper.
CR Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], 2011, ISO/IEC TR 29110-5-1-2, DOI DOI 10.1109/IEEESTD.2011.6129467
   Aoyama M., 2002, P INT WORKSHOP PRINC, P103
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Chen Lianping, 2010, 14 INT C EVALUATION
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Farenhorst R, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P125, DOI 10.1109/WICSA.2008.20
   Farenhorst R, 2007, LECT NOTES COMPUT SC, V4758, P123
   Farenhorst R, 2009, 2009 ICSE WORKSHOP ON SHARING AND REUSING ARCHITECTURAL KNOWLEDGE, P17, DOI 10.1109/SHARK.2009.5069111
   Henttonen K, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P41, DOI 10.1109/WICSA.2009.5290790
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Hudlicka E, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P4, DOI 10.1109/ICRE.1996.491424
   IEEE, 2000, 14712000 IEEE, pi
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kiwelekar AW, 2010, LECT NOTES COMPUT SC, V6285, P417
   Kruchten P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.59
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Lago P., 2006, ACM SIGSOFT SOFTWARE, V31, P32
   Liang P, 2008, INT CONF QUAL SOFTW, P357, DOI 10.1109/QSIC.2008.20
   Liang P, 2011, J SYST SOFTWARE, V84, P786, DOI 10.1016/j.jss.2010.12.046
   Liang P, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P91, DOI 10.1007/978-3-642-02374-3_6
   Merali Y., 2001, Proceedings of the First International Conference on Knowledge Capture, P92, DOI 10.1145/500737.500754
   Nonaka I., 1995, The Knowledge-Creating Company How Japanese Companies Create the Dynamics of Information, DOI DOI 10.1016/0024-6301(96)81509-3
   Ong KW, 2007, IN C IND ENG ENG MAN, P2120
   Ovaska E, 2010, INFORM SOFTWARE TECH, V52, P577, DOI 10.1016/j.infsof.2009.11.008
   Riva C, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P42, DOI 10.1109/WCRE.2000.891451
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Shaw M, 2006, IEEE SOFTWARE, V23, P31, DOI 10.1109/MS.2006.58
   Standardization IOf, 2006, Environmental Management: Life Cycle Assessment; Principles and Framework
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tang A, 2009, IEEE SOFTWARE, V26, P43, DOI 10.1109/MS.2009.46
NR 41
TC 58
Z9 58
U1 1
U2 52
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2013
VL 55
IS 5
BP 777
EP 794
DI 10.1016/j.infsof.2012.11.005
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 122OI
UT WOS:000317327000001
OA Green Published
DA 2024-07-18
ER

PT J
AU Xu, J
   Zhang, ZY
   Chan, WK
   Tse, TH
   Li, SP
AF Xu, Jian
   Zhang, Zhenyu
   Chan, W. K.
   Tse, T. H.
   Li, Shanping
TI A general noise-reduction framework for fault localization of Java
   programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault localization; Key block chain; Noise reduction; Program debugging
AB Context: Existing fault-localization techniques combine various program features and similarity coefficients with the aim of precisely assessing the similarities among the dynamic spectra of these program features to predict the locations of faults. Many such techniques estimate the probability of a particular program feature causing the observed failures. They often ignore the noise introduced by other features on the same set of executions that may lead to the observed failures. It is unclear to what extent such noise can be alleviated.
   Objective: This paper aims to develop a framework that reduces the noise in fault-failure correlation measurements.
   Method: We develop a fault-localization framework that uses chains of key basic blocks as program features and a noise-reduction methodology to improve on the similarity coefficients of fault-localization techniques. We evaluate our framework on five base techniques using five real-life median-scaled programs in different application domains. We also conduct a case study on subjects with multiple faults.
   Results: The experimental result shows that the synthesized techniques are more effective than their base techniques by almost 10%. Moreover, their runtime overhead factors to collect the required feature values are practical. The case study also shows that the synthesized techniques work well on subjects with multiple faults.
   Conclusion: We conclude that the proposed framework has a significant and positive effect on improving the effectiveness of the corresponding base techniques. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Xu, Jian; Li, Shanping] Zhejiang Univ, Dept Commun Sci, Hangzhou 310003, Zhejiang, Peoples R China.
   [Zhang, Zhenyu] Chinese Acad Sci, State Key Lab Comp Sci, Inst Software, Beijing, Peoples R China.
   [Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
C3 Zhejiang University; Chinese Academy of Sciences; Institute of Software,
   CAS; City University of Hong Kong; University of Hong Kong
RP Zhang, ZY (corresponding author), Chinese Acad Sci, State Key Lab Comp Sci, Inst Software, Beijing, Peoples R China.
EM jxu@zju.edu.cn; zhangzy@ios.ac.cn; wkchan@cityu.edu.hk; thtse@cs.hku.hk;
   shan@zju.edu.cn
RI Tse, T.H./C-6590-2008; zhang, zhenyu/HOA-8440-2023; Chan, Wah
   Kheong/AGA-6636-2022
OI Tse, T.H./0000-0002-0460-8377; Chan, Wah Kheong/0000-0002-9105-5837;
   Chan, Wing Kwong/0000-0001-7726-6235
FU Natural Science Foundation of China [61003027]; General Research Fund of
   the Research Grants Council of Hong Kong [111410, 717811]; City
   University of Hong Kong [7002673]
FX This research is supported in part by a grant from the Natural Science
   Foundation of China (project no. 61003027), grants from the General
   Research Fund of the Research Grants Council of Hong Kong (project nos.
   111410 and 717811), and a strategy research grant of City University of
   Hong Kong (project no. 7002673).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   [Anonymous], 2008, ISSTA
   Artzi Shay., 2010, P 32 ACMIEEE INT C S, P265
   Baah GeorgeK., 2008, P 2008 INT S SOFTWAR, P189, DOI DOI 10.1145/1390630.1390654
   Bandyopadhyay A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P41, DOI 10.1109/ICST.2012.84
   Bandyopadhyay A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P479, DOI 10.1109/ICST.2012.130
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Cellier P, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P991
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   DiGiuseppe N., 2011, P 20 INT S SOFTW TES, P210, DOI DOI 10.1145/2001420.2001446
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Feng Min., 2010, P 9 ACM SIGPLAN SIGS, P81, DOI [10.1145/1806672.1806688, DOI 10.1145/1806672.1806688]
   Fu C, 2007, PROC INT CONF SOFTW, P230
   Jian Xu, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P11, DOI 10.1109/QSIC.2011.32
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jiang Lingxiao., 2007, International Conference on Automated Software Engineering, P184
   Jones J A., 2007, Debugging in parallel, P16
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Masri W., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P737, DOI 10.1109/ICST.2012.166
   Masri W, 2010, SOFTW TEST VERIF REL, V20, P121, DOI 10.1002/stvr.409
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nainar P.A., 2007, ISSTA, P5, DOI DOI 10.1145/1273463.1273467
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Park S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P645
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Vallee-Rai R., 1998, 19984 MCGILL U SABL
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Yilmaz C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P81, DOI 10.1145/1368088.1368100
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Yuan D, 2010, ACM SIGPLAN NOTICES, V45, P143, DOI 10.1145/1735971.1736038
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
   Zhang ZY, 2012, COMPUTER, V45, P64, DOI 10.1109/MC.2012.185
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
   Zhang ZY, 2011, J SYST SOFTWARE, V84, P885, DOI 10.1016/j.jss.2010.12.048
   Zhang ZY, 2010, J SYST SOFTWARE, V83, P174, DOI 10.1016/j.jss.2009.09.041
NR 45
TC 20
Z9 25
U1 0
U2 30
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2013
VL 55
IS 5
BP 880
EP 896
DI 10.1016/j.infsof.2012.08.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 122OI
UT WOS:000317327000007
OA Green Published
DA 2024-07-18
ER

PT J
AU Munoz, F
   Baudry, B
   Delamare, R
   Le Traon, Y
AF Munoz, Freddy
   Baudry, Benoit
   Delamare, Romain
   Le Traon, Yves
TI Usage and testability of AOP: An empirical study of AspectJ
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aspect-oriented programming; Metrics; Empirical analysis
ID METRICS
AB Context: Back in 2001, the MIT announced aspect-oriented programming as a key technology in the next 10 years. Nowadays, 10 years later, AOP is still not widely adopted.
   Objective: The objective of this work is to understand the current status of AOP practice through the analysis of open-source project which use AspectJ.
   Method: First we analyze different dimensions of AOP usage in 38 AspectJ projects. We investigate the degree of coupling between aspects and base programs, and the usage of the pointcut description language. A second part of our study focuses on testability as an indicator of maintainability. We also compare testability metrics on Java and AspectJ implementations of the HealthWatcher aspect-oriented benchmark.
   Results: The first part of the analysis reveals that the number of aspects does not increase with the size of the base program, that most aspects are woven in every places in the base program and that only a small portion of the pointcut language is used. The second part about testability reveals that Aspect! reduces the size of modules, increases their cohesion but also increases global coupling, thus introducing a negative impact on testability.
   Conclusion: These observations and measures reveal a major trend: AOP is currently used in a very cautious way. This cautious usage could come from a partial failure of AspectJ to deliver all promises of AOP, in particular an increased software maintainability. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Munoz, Freddy; Baudry, Benoit] INRIA IRISA, F-35042 Rennes, France.
   [Delamare, Romain] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Le Traon, Yves] Univ Luxembourg, Luxembourg, Luxembourg.
C3 Universite de Rennes; University of Alabama System; University of
   Alabama Tuscaloosa; University of Luxembourg
RP Baudry, B (corresponding author), INRIA IRISA, Campus Beaulieu, F-35042 Rennes, France.
EM freddy.munoz@inria.fr; benoit.baudry@inria.fr; rdelamare@cs.ua.edu;
   yves.letraon@uni.lu
RI LE TRAON, Yves/T-2911-2019
OI LE TRAON, Yves/0000-0002-1045-4861
FU EU; NESSOS Network of Excellence
FX This work was partially supported by the European Project DIVA (EU FP7
   STREP) and the NESSOS Network of Excellence.
CR Aldrich J., 2005, ECOOP 05, V3586, P734
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 2010, AOP
   [Anonymous], P 1 WORKSH ASP REV E
   Apel S, 2010, J OBJECT TECHNOL, V9, P117, DOI 10.5381/jot.2010.9.1.a2
   Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   BARBEY S, 1994, SOFTWARE QUALITY MANAGEMENT II, VOL 2: BUILDING QUALITY INTO SOFTWARE, P411
   Bartolomei T.T., 2006, 3 INT WORKSHOP SOFTW, P46
   Binder R., 1996, J SOFTWARE TESTING V, V6.3 and 6.4
   Boner J., 2004, PROC AOSD 2004, P5
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Bruntink M, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P136
   Bruntink M, 2006, J SYST SOFTWARE, V79, P1219, DOI 10.1016/j.jss.2006.02.036
   Burrows R., 2010, ISSRE 10
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Delamare R, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P376, DOI 10.1109/ICST.2009.41
   Djoko SD, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P135, DOI 10.1145/1328408.1328429
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Garcia A., 2005, AOSD 05, P3
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   GRUBBS FE, 1969, TECHNOMETRICS, V11, P1, DOI 10.2307/1266761
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   Katz S., 2004, FOAL 04
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienzle J., 2003, FOAL 03
   Koppen C., 2004, EUR INT WORKSH ASP S
   Kulesza U, 2006, PROC IEEE INT CONF S, P223
   Laddad R., 2003, ASPECTJ ACTION PRACT
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lopez-Herrejon RE, 2007, LECT NOTES COMPUT SC, V4422, P423
   MARIN M, 2004, WCRE 04, P132
   Marin M, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P31, DOI 10.1109/WCRE.2007.22
   Munoz F., 2009, 25 IEEE INT C SOFTW
   Munoz F, 2008, PROC IEEE INT CONF S, P77, DOI 10.1109/ICSM.2008.4658056
   Ostermann K., 2005, ECOOP 03
   Rashid A, 2010, COMPUTER, V43, P19, DOI 10.1109/MC.2010.30
   Rinard M., 2004, Software Engineering Notes, V29, P147, DOI 10.1145/1041685.1029917
   Soares S, 2006, SOFTWARE PRACT EXPER, V36, P711, DOI 10.1002/spe.715
   Steimann F., 2004, EIWAS 04
   Steimann Friedrich., 2006, P 21 ANN ACM SIGPLAN
   Sullivan Kevin., 2005, SIGSOFT SOFTW ENG NO, V30, P166
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   TOURWE T, 2003, SPLAT SOFTWARE ENG P
   van der Werff T.J., 2001, TECHNOLOGY REV
   Zhao J., 2004, METRICS 2004
NR 47
TC 6
Z9 8
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 252
EP 266
DI 10.1016/j.infsof.2012.08.003
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Staron, M
AF Staron, Miroslaw
TI Critical role of measures in decision processes: Managerial and
   technical measures in the context of large software development
   organizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Software metrics; Software measurement; ISO/IEC 15939;
   Decision support
ID MEASUREMENT PROGRAM; QUALITY; METRICS
AB Context: Today, many software development organizations struggle to establish measurement programs to monitor their projects, products and units. After overcoming the initial threshold of establishing the measurement program organizations stand before the questions of which measures should be collected in order to lead to actions or at least effectively trigger decision processes.
   Objective: The objective of this paper is to investigate how to use measures in an effective way in decision processes. This dependency is examined through a case study - Ericsson in Sweden. Two models of these dependencies are recognized a priori - metrics-push and metric-pull - and in the study the models are used to describe how measures affect decisions and vice versa.
   Method: The research method is a case study of the measurement program of one of the product development units of Ericsson in Sweden. The participants are carefully selected from the management teams at different levels of organizations. The objects are measures and decisions at these management levels. The instruments are interviews and observations. The results obtained at Ericsson are validated through interviews at another company - RUAG Space.
   Results: The results show that effective use of measures as evidence for decision processes does not require a large number of measures (ca. 20 at the top management level). It was found that there are four types of measures which are used in different ways in the context of decision formulation and implementation (which we call decision-measures dependency model). The critical aspects of effective measures in decision-making context are completeness, reliability and providing early warnings. It was also found that the time between the decision and when its results can be observed via measures (length of the feedback loop) is a crucial aspect determining at which organizational level a measure should be placed.
   Conclusions: After overcoming the initial threshold of establishing measurement programs the organizations demand non-functional properties from the measures. These non-functional properties like completeness, providing early-warning or trust determine whether decision processes are triggered by measures or not. (C) 2012 Elsevier B.V. All rights reserved.
C1 Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
RP Staron, M (corresponding author), Dept Comp Sci & Engn, Horselgangen 11, S-41296 Gothenburg, Sweden.
EM miroslaw.staron@ituniv.se
FU Software Architecture Quality Centre; RUAG Space
FX We would like to thank Software Architecture Quality Centre, the
   participants, and managers at Ericsson and RUAG Space for their support,
   dedication and input to our study.
CR Argyris C., 1981, ORG LEARNING, DOI DOI 10.5465/AMR.1985.4279103
   Argyris C., 2001, On organizational learning, V2nd
   Argyris C., 1990, Overcoming organizational defenses: Facilitating organizational learning
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Brockers A., 1996, METRICS IEEE, P31
   Davern MJ, 2008, DECIS SUPPORT SYST, V45, P123, DOI 10.1016/j.dss.2007.12.012
   De Panfilis S, 1997, INFORM SOFTWARE TECH, V39, P745, DOI 10.1016/S0950-5849(97)00033-5
   Deming W.E., 1982, QUALITY PRODUCTIVITY
   DEPANFILIS S, 1999, COMPUTER STANDARDS I, V21, P165
   Dewey J., 1998, WE THINK
   Díaz-Ley M, 2008, IET SOFTW, V2, P417, DOI 10.1049/iet-sen:20080026
   Elbashir Mohamed Z., 2008, International Journal of Accounting Information Systems, V9, P135, DOI 10.1016/j.accinf.2008.03.001
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   Gopal A, 2002, IEEE T SOFTWARE ENG, V28, P863, DOI 10.1109/TSE.2002.1033226
   Green GC, 2005, INFORM SOFTWARE TECH, V47, P543, DOI 10.1016/j.infsof.2004.10.004
   Harrison W, 2004, J SYST SOFTWARE, V72, P225, DOI 10.1016/S0164-1212(03)00092-X
   Horvitz E. J., 1988, International Journal of Approximate Reasoning, V2, P247, DOI 10.1016/0888-613X(88)90120-X
   ICHIISHI T, 1990, GAME THEORY APPL
   *INT STAND ORG INT, 2007, 15939 ISOIEC
   Iversen J., 2000, Proceedings of the 33rd Annual Hawaii International Conference on System Sciences
   Jeffrey D. R., 1980, Information and Management, V3, P89, DOI 10.1016/0378-7206(80)90007-5
   Kautz K, 1999, IEEE SOFTWARE, V16, P14, DOI 10.1109/52.754047
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Lawler J, 2003, IEEE SOFTWARE, V20, P68, DOI 10.1109/MS.2003.1196324
   Lee YW, 2002, INFORM MANAGE-AMSTER, V40, P133, DOI 10.1016/S0378-7206(02)00043-5
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   Meding W., 2009, NORD WORKSH MOD DRIV
   Mikroyannidis A, 2010, INT J INFORM MANAGE, V30, P559, DOI 10.1016/j.ijinfomgt.2009.10.002
   Milis K., 2004, International Journal of Project Management, V22, P87, DOI 10.1016/S0263-7863(03)00060-7
   Niessink F, 2001, INFORM SOFTWARE TECH, V43, P617, DOI 10.1016/S0950-5849(01)00168-9
   NIESSINK F, 1999, 6 INT SOFTW METR S, P31
   Panchapakesan S., 1997, Advances in Statistical Decision Theory and Applications
   Rubinstein A., 1990, Game theory in economics
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G., 2003, SOFTWARE ENG DECISIO
   Staron Miroslaw, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P3, DOI 10.1007/978-3-642-21843-9_3
   Staron M., 2010, J SOFTWARE MAINTENAN
   Staron M., 2010, E INFORM SOFTWARE EN, V4, P1
   Staron M., 2009, SOFTWARE PROCESS PRO
   Staron M, 2008, INFORM SOFTWARE TECH, V50, P782, DOI 10.1016/j.infsof.2007.10.001
   Staron M, 2010, INFORM SOFTWARE TECH, V52, P1069, DOI 10.1016/j.infsof.2010.05.005
   Staron M, 2009, LECT NOTES COMPUT SC, V5891, P1, DOI 10.1007/978-3-642-05415-0_1
   van Latum F, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.646887
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Visser J.K., 2007, PERFORMANCE MEASURES, P1
   Wade D., 2001, Corporate Performance Management: How to Build a Better Organization Through Measurement-Driven Strategic Alignment
   Williams S, 2007, BUSINESS INTELLIGENC
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
   Zuse Horst., 1998, A framework of software measurement
NR 52
TC 19
Z9 20
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2012
VL 54
IS 8
SI SI
BP 887
EP 899
DI 10.1016/j.infsof.2012.02.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 963DB
UT WOS:000305599200007
DA 2024-07-18
ER

PT J
AU Verner, JM
   Abdullah, LM
AF Verner, J. M.
   Abdullah, L. M.
TI Exploratory case study research: Outsourced project failure
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Outsourced software development; Project failure; Software development
   risk factors; Case study methodology; Risk framework
ID VALIDATING STRATEGIC ALIGNMENT; INFORMATION-TECHNOLOGY; DEVELOPMENT
   RISKS; SOFTWARE RISK; SYSTEMS; MANAGEMENT; PRINCIPLES; FRAMEWORK;
   OFFSHORE
AB Context: IT plays an increasingly strategic role in the business performance of organizations, however, the development of strategic IT systems involves a high degree of risk and outsourcing the development of such systems increases the risk.
   Objective: Using a case study approach we build on research that identifies risk factors leading to the failure of outsourced strategic IT development projects. We investigate the BSkyB project, a strategic development project, which was the subject of recent litigation in the British High Court. We wish to discover what factors led to the failure of such a high profile project; in particular we wish to identify which factors were under the control of the client. We also review the usefulness of the case study methodology when it is not possible to interview any of the people involved with a project.
   Method: Detailed-step-by-step guidelines designed for multiple industrial case studies are used to investigate the failure factors of the BSkyB project. We use transcripts of court proceedings and media reports to determine the failure factors. We compare the factors identified with those in a conceptual risk framework developed in prior research thus providing an initial validation of that framework.
   Results: The following factors were identified as problems in the BSkyB project: contract, requirements, project complexity, planning and control, execution, and team. A time and materials contract was a risk not originally included in the risk framework that we used.
   Conclusion: The BSkyB project failed because of problems that can be traced to both client and vendor. According to the judge's summing up the major fault was with the vendor, although some problems did emanate from the client side. We found that many sections in the case study methodology we used were unnecessary for a single case study based on court proceedings and media reports. The risk framework helped with risk identification. (C) 2011 Published by Elsevier B.V.
C1 [Verner, J. M.] Keele Univ, Sch Comp & Math, EPSAM, Keele ST5 5BG, Staffs, England.
   [Abdullah, L. M.] Int Islamic Univ, Dept Informat Syst, Kuala Lumpur 50728, Malaysia.
C3 Keele University; International Islamic University Malaysia
RP Verner, JM (corresponding author), Keele Univ, Sch Comp & Math, EPSAM, Keele ST5 5BG, Staffs, England.
EM june.verner@gmail.com
RI Abdullah, Lili Marziana/ABD-8420-2020
CR Abdullah L.M., 2008, SOFTWARE MEASUREMENT, P1
   Abdullah L.M., 2009, IEEE RES CHALLENGES, P309
   Ahonen JJ, 2010, J SYST SOFTWARE, V83, P2175, DOI 10.1016/j.jss.2010.06.023
   ALTER S, 1978, SLOAN MANAGE REV, V20, P23
   [Anonymous], 2008, BUSINESS WIRE   1107
   [Anonymous], HARVARD DESIGN SCH G
   [Anonymous], 2010, GLOBAL J COMPUTER SC
   Aubert B.A., 1999, P 32 ANN HAW INT C S, P2
   Aubert B.A., 2001, System Sciences, P1
   Aubert B.A., 2005, DATA BASE ADV INF SY, V36, P9, DOI DOI 10.1145/1104004.1104007
   Aubert B.A., 2001, Managing IT Outsourcing Risk: Lessons Learned, P1
   Aubert BA, 1998, P ANN HICSS, P685, DOI 10.1109/HICSS.1998.654830
   Baccarini D, 2004, IND MANAGE DATA SYST, V104, P286, DOI 10.1108/02635570410530702
   Bahli B, 2005, OMEGA-INT J MANAGE S, V33, P175, DOI 10.1016/j.omega.2004.04.003
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bensaou M, 1997, INFORM SYST RES, V8, P107, DOI 10.1287/isre.8.2.107
   BLEISTEIN S., 2005, 2005 ACM S APPL COMP, P1300, DOI [10.1145/1066677.1066972, DOI 10.1145/1066677.1066972]
   Bleistein SJ, 2006, J SYST SOFTWARE, V79, P362, DOI 10.1016/j.jss.2005.04.033
   Bleistein SJ, 2006, REQUIR ENG, V11, P4, DOI 10.1007/s00766-005-0012-7
   Bleistein SJ, 2006, INFORM SOFTWARE TECH, V48, P846, DOI 10.1016/j.infsof.2005.12.001
   Boehm B.W., 1989, TUTORIAL SOFTWARE RI
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Brereton P., 2008, Using a protocol template for case study planning
   Cerpa N, 2009, COMMUN ACM, V52, P130, DOI 10.1145/1610252.1610286
   Charette R.N., 1990, Applications Strategies for Risk Analysis
   Charette R. N., 1989, SOFTWARE ENG RISK AN
   Chatterjee A, 2008, 2008 IEEE REGION 5 CONFERENCE, P75
   Clemons E. K., 1990, Journal of Management Information Systems, V7, P9
   CLEMONS EK, 1991, COMMUN ACM, V34, P22, DOI 10.1145/99977.99985
   Collins T., 2008, COMPUTER WEEKLY 0926
   Connor V., 2010, EVERY DOG HAS HIS DA
   Creswell J. W., 2018, QUAL INQ
   Darke P, 1998, INFORM SYST J, V8, P273, DOI 10.1046/j.1365-2575.1998.00040.x
   de Weerd-Nederhof P.C., 2001, Management Decision, V39, P513, DOI DOI 10.1108/EUM0000000005805
   DeHondt G., 2009, P 15 AM C INF SYST A
   Dey PK, 2007, IND MANAGE DATA SYST, V107, P284, DOI 10.1108/02635570710723859
   Dubin R., 1978, THEORY BUILDING
   Earl MJ, 1996, SLOAN MANAGE REV, V37, P26
   EISENHARDT KM, 1991, ACAD MANAGE REV, V16, P620, DOI 10.2307/258921
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   GILBERT AL, 1988, PROCEEDINGS OF THE TWENTY-FIRST, ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, VOLS 1-4, P52, DOI 10.1109/HICSS.1988.11888
   Glass R.L, 2004, COMMUN ACM, V47, P85
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 1997, J SYST SOFTWARE, V36, P85, DOI 10.1016/0164-1212(95)00197-2
   Gonzalez R, 2005, IND MANAGE DATA SYST, V105, P45, DOI 10.1108/02635570510575180
   Han WM, 2007, J SYST SOFTWARE, V80, P42, DOI 10.1016/j.jss.2006.04.030
   Host M., 2008, CASE STUDIES SOFTWAR
   Huang SM, 2004, IND MANAGE DATA SYST, V104, P681, DOI 10.1108/02635570410561672
   Iacovou CL, 2008, COMMUN ACM, V51, P89, DOI 10.1145/1349026.1349044
   Jiang J, 2000, J SYST SOFTWARE, V52, P3, DOI 10.1016/S0164-1212(99)00128-4
   Jurison J, 1995, J INFORM TECHNOL, V10, P239, DOI 10.1057/jit.1995.27
   KAPLAN B, 1988, MIS QUART, V12, P571, DOI 10.2307/249133
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   KEMERER CF, 1991, INFORM SOFTWARE TECH, V33, P212, DOI 10.1016/0950-5849(91)90136-Y
   King L, 2007, CIO
   King L., 2000, CIO             1023
   King L, 2007, COMPUTERWORLDUK 1113
   King L, 2007, COMPUTERWORLDUK
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B. A., 1998, Software Engineering Notes, V23, P24, DOI 10.1145/272263.272268
   Kitchenham B. A., 1998, Software Engineering Notes, V23, P20, DOI 10.1145/279437.279445
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Klepper R., 1998, Outsourcing information technology, systems, and services
   Kliem R., 2004, EDPACS, V32, P12
   Kunitomo R, 1997, LONG RANGE PLANN, V30, P877, DOI 10.1016/S0024-6301(97)00073-3
   Land L.P.W., 2010, WHAT HAPPENS PROJECT
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   LEE AS, 1989, HUM RELAT, V42, P117, DOI 10.1177/001872678904200202
   Leedy P., 2005, HDB TEACHER RES DESI
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lincoln Y., 1990, Qualitative Studies in Education, V3
   Lyytinen K, 1998, INFORM SYST RES, V9, P233, DOI 10.1287/isre.9.3.233
   Lyytinen K., 1996, Scandinavian Journal of Information Systems, V8, P53
   Maimbo H, 2005, PACIFIC ASIA CONFERENCE ON INFORMATION SYSTEMS 2005, SECTIONS 1-8 AND POSTER SESSIONS 1-6, P1281
   Makin N., 1997, JPN ECHO, V44, P44
   McCue A., 2005, GLOBAL IT OUTSOURCIN
   McLeod L, 2009, J RES PRACT INF TECH, V41, P3
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Moynihan T, 1996, J INFORM TECHNOL, V11, P359, DOI 10.1057/jit.1996.9
   Natovich J., 2003, TECHNOL ANAL STRATEG, V15, P149
   Pare G, 1997, INFORMATION SYSTEMS AND QUALITATIVE RESEARCH, P542
   Pare G., 2004, COMMUN ASSOC INF SYS, V13, P233
   Paul Sonne, 2010, WALL STREET J
   Paul Sonne, 2010, WALL STREET J, P27
   Peel M., 2007, FINANC TIMES, P4
   PERRY DE, 2004, P 26 INT C SOFTW ENG
   Platt J., 1988, Studies in qualitative methodology, V1, P1
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Rapp W.V., 2002, Information Technology Strategies: How Leading Firms Use IT to Gain an Advantage, V1st
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saito H., 1997, 7 11 JAP GS18 STANF
   Savolainen P, 2010, LECT NOTES COMPUT SC, V6156, P351, DOI 10.1007/978-3-642-13792-1_27
   SCHEEPERS R, 2003, P 24 INT C INF SYST, P25
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Seaman, 1999, IEEE T SOFTWARE ENG, V25, P1
   Shahzad B, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION AND MULTIMEDIA TECHNOLOGY, PROCEEDINGS, P366, DOI 10.1109/ICIMT.2009.104
   SHANKS G, 2003, P EUR C INF SYST NAP
   Smith N.C., 1990, J INFORM TECHNOLOGY, V5, P13
   Songini M., 2008, COMPUTERWORLD    AUG
   Songini M.L., 2011, COMPUTERWORLD   0823, V38, P8
   Stake Robert E., 1995, The Art of Case Study Research
   Standards Australia's, 1999, 310002009 ASNZS ISO
   Sumner M, 2000, J INFORM TECHNOL, V15, P317, DOI 10.1080/02683960010009079
   Tafti MHA, 2005, IND MANAGE DATA SYST, V105, P549, DOI 10.1108/02635570510599940
   Tait N., 2007, FINANC TIMES, V22, P19
   Taylor H., 2005, P 2005 ACM SIGMIS CP, P149
   Taylor H., 2009, HDB RES INFORM MANAG
   Taylor H, 2007, J GLOB INF MANAG, V15, P1, DOI 10.4018/jgim.2007040101
   Taylor H, 2006, COMMUN ACM, V49, P75
   The Economist Newspaper Limited, 2001, E STRATEGY BRIEF 7 1
   Verner June, 2009, Ingenierie des systemes d'information, V14, P55, DOI 10.3166/ISI.14.4.55-75
   Verner J.M., 2009, IEEE RES CHALLENGES, P347
   Vessey I, 2002, J MANAGE INFORM SYST, V19, P129, DOI 10.1080/07421222.2002.11045721
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   Weill P., 2001, PLACE SPACE
   Weill Peter., 2005, It Savvy Pays Off: How Top Performers Match It Portfolios and Organizational Practices
   Willcocks LP, 1999, INFORM SYST J, V9, P163, DOI 10.1046/j.1365-2575.1999.00061.x
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
   Woodside AG, 2003, J BUS IND MARK, V18, P493, DOI 10.1108/08858620310492374
   Wright S., 2001, INFORM SYSTEM ASSURA
   Yin R. K., 2015, CASE STUDY RES DESIG
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zdnet, BSKYB BEATS HP OUTS
NR 126
TC 48
Z9 125
U1 1
U2 48
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2012
VL 54
IS 8
SI SI
BP 866
EP 886
DI 10.1016/j.infsof.2011.11.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 963DB
UT WOS:000305599200006
DA 2024-07-18
ER

PT J
AU Barney, S
   Petersen, K
   Svahnberg, M
   Aurum, A
   Barney, H
AF Barney, Sebastian
   Petersen, Kai
   Svahnberg, Mikael
   Aurum, Aybueke
   Barney, Hamish
TI Software quality trade-offs: A systematic map
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software engineering; Software quality; Trade-off approaches
ID ARCHITECTURE
AB Background: Software quality is complex with over investment, under investment and the interplay between aspects often being overlooked as many researchers aim to advance individual aspects of software quality.
   Aim: This paper aims to provide a consolidated overview the literature that addresses trade-offs between aspects of software product quality.
   Method: A systematic literature map is employed to provide an overview of software quality trade-off literature in general. Specific analysis is also done of empirical literature addressing the topic.
   Results: The results show a wide range of solution proposals being considered. However, there is insufficient empirical evidence to adequately evaluate and compare these proposals. Further a very large vocabulary has been found to describe software quality.
   Conclusion: Greater empirical research is required to sufficiently evaluate and compare the wide range of solution proposals. This will allow researchers to focus on the proposals showing greater signs of success and better support industrial practitioners. Crown Copyright (C) 2012 Published by Elsevier B.V. All rights reserved.
C1 [Barney, Sebastian; Aurum, Aybueke; Barney, Hamish] Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
   [Barney, Sebastian; Petersen, Kai; Svahnberg, Mikael] Blekinge Inst Technol, Kariskrona, Sweden.
C3 University of New South Wales Sydney; Blekinge Institute Technology
RP Barney, S (corresponding author), Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
EM s.barney@unsw.edu.au; kai.petersen@bth.se; mikael.svahnberg@bth.se;
   aybuke@unsw.edu.au; hamish@student.unsw.edu.au
OI Petersen, Kai/0000-0002-1532-8223; Aurum, Aybuke/0000-0003-2416-4555
FU Vinnova; Sony Ericsson Mobile Communications; Ericsson; ST-Ericsson;
   Axis Communications; Softhouse Consulting Baltic as part of the
   Industrial Excellence Center for Embedded Applications Software
   Engineering (EASE)
FX This work was partly funded by Vinnova, Sony Ericsson Mobile
   Communications, Ericsson, ST-Ericsson, Axis Communications and Softhouse
   Consulting Baltic as part of the Industrial Excellence Center for
   Embedded Applications Software Engineering (EASE).
CR [Anonymous], P 34 ANN HAW INT C S
   [Anonymous], 2001, ISO9126 1
   Barney S, 2009, INT SYMP EMP SOFTWAR, P258
   Bate I, 2008, J SYST SOFTWARE, V81, P1253, DOI 10.1016/j.jss.2007.10.032
   Biffl S., 2006, Value-Based Software Engineering
   Boehm B, 2006, VALUE-BASED SOFTWARE ENGINEERING, P15, DOI 10.1007/3-540-29263-2_2
   Boucké N, 2006, LECT NOTES COMPUT SC, V4214, P180
   Buyens Koen, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P554, DOI 10.1109/ESEM.2009.5315968
   Chan Y. E., 2002, MIS Quarterly Executive, V1, P97
   Chan YE, 2007, J INF TECHNOL, V22, P316, DOI 10.1057/palgrave.jit.2000111
   Chang CW, 2008, SOFTWARE QUAL J, V16, P263, DOI 10.1007/s11219-007-9035-2
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Cortellessa V, 2010, LECT NOTES COMPUT SC, V6150, P1, DOI 10.1007/978-3-642-13556-9_1
   Davoudi MR, 2009, INT CONF RES CHAL, P333, DOI 10.1109/RCIS.2009.5089297
   Del Rosso C, 2008, J SYST SOFTWARE, V81, P1, DOI 10.1016/j.jss.2007.07.006
   Díaz-Pace JA, 2007, LECT NOTES COMPUT SC, V4880, P33
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fogelström ND, 2009, LECT NOTES COMPUT SC, V5512, P1, DOI 10.1007/978-3-642-02050-6_1
   Gang Huang, 2007, International Journal of Simulation & Process Modelling, V3, P55, DOI 10.1504/IJSPM.2007.014715
   GARVIN DA, 1984, SLOAN MANAGE REV, V26, P25
   Grimán A, 2006, J SYST SOFTWARE, V79, P871, DOI 10.1016/j.jss.2005.12.015
   Herzwurm G, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P330
   Hoyer RW, 2001, QUAL PROG, V34, P53
   Huang G, 2006, J COMPUT SCI TECH-CH, V21, P565, DOI 10.1007/s11390-006-0565-z
   Ivarsson Martin, 2010, EMPIR SOFTW ENG, P1
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham Barbara, 2007, P 28 INT C SOFTW ENG
   Lacerda Rogerio T. O., 2009, Proceedings of the 33rd Annual IEEE Software Engineering Workshop SEW-33 2009, P45, DOI 10.1109/SEW.2009.14
   Lavesson N., 2006, P 21 NAT C ART INT B, V6, P395
   Linhares GBR, 2009, LECT NOTES COMPUT SC, V5784, P344, DOI 10.1007/978-3-642-04216-4_29
   Liu JF, 2010, IEEE INT CONF GROUP, P1, DOI 10.1109/GROUP4.2010.5643446
   Luo YS, 2008, HPCC 2008: 10TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P360, DOI 10.1109/HPCC.2008.17
   Ma HW, 2009, SNPD 2009: 10TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCES, NETWORKING AND PARALLEL DISTRIBUTED COMPUTING, PROCEEDINGS, P407, DOI 10.1109/SNPD.2009.57
   Mahananto F., 2010, 40 INT C COMP IND EN, p[1, Wibowo]
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Mead N.R., 2005, Software Engineering for Secure Systems (SESS), P1, DOI 10.1145/1082983.1083214
   Misailovic S., 2010, P INT C SOFTW ENG, V1
   Oliveira MFS, 2008, MOMPES 2008: PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P68, DOI 10.1109/MOMPES.2008.11
   Onut Semih, 2010, J INTELLIGENT FUZZY, V21
   Patankar V, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES (ICIW 2008), P620, DOI 10.1109/ICIW.2008.102
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Ramires J, 2005, LECT NOTES COMPUT SC, V3706, P308
   Ramirez A.J., 2010, CLUSTER COMPUTING
   Ramirez Andres J., 2010, ICAC
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Regnell B, 2007, LECT NOTES COMPUT SC, V4542, P277
   Riaz M., 2010, 14 INT C EV ASS SOFT
   Sibisi Mbusi, 2007, IEEE AFRICON C
   Sil A, 2009, WOR CONG NAT BIOL, P941
   Svahnberg M, 2005, EMPIR SOFTW ENG, V10, P149, DOI 10.1007/s10664-004-6190-y
   Svahnberg M, 2003, INT J SOFTW ENG KNOW, V13, P547, DOI 10.1142/S0218194003001421
   Svensson R. B., 2010, 2010 Fourth International Workshop on Software Product Management (IWSPM), P40, DOI 10.1109/IWSPM.2010.5623867
   Svensson R.B., 2008, Proceedings of 2nd International Workshop on Software Product Management, P18
   Svensson RB, 2010, EUROMICRO CONF PROC, P261, DOI 10.1109/SEAA.2010.55
   Svensson RB, 2009, LECT NOTES COMPUT SC, V5512, P218, DOI 10.1007/978-3-642-02050-6_19
   Tosun S, 2005, 6th International Symposium on Quality Electronic Design, Proceedings, P375, DOI 10.1109/ISQED.2005.104
   Trienekens JJM, 2010, SOFTWARE QUAL J, V18, P469, DOI 10.1007/s11219-010-9101-z
   Vanhanen Jari, 2009, 2009 Third International Workshop on Software Product Management (IWSPM 2009), P42, DOI 10.1109/IWSPM.2009.5
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yahaya JH, 2010, INT CONF COMP SCI, P197, DOI 10.1109/ICCSIT.2010.5564077
   Zenarosa Gabriel L., 2008, P 2008 RISE EFTS JOI, P55
   Zhang Q, 2006, P INT COMP SOFTW APP, P121
NR 63
TC 39
Z9 41
U1 2
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 651
EP 662
DI 10.1016/j.infsof.2012.01.008
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 946WG
UT WOS:000304387600001
DA 2024-07-18
ER

PT J
AU Esfahani, N
   Malek, S
AF Esfahani, Naeem
   Malek, Sam
TI Utilizing architectural styles to enhance the adaptation support of
   middleware platforms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Architectural style; Adaptation patterns;
   Middleware
ID COMPONENT MODEL; SYSTEMS
AB Context: Modern middleware platforms provide the applications deployed on top of them with facilities for their adaptation. However, the level of adaptation support provided by the state-of-the-art middleware solutions is often limited to dynamically loading and off-loading of software components. Therefore, it is left to the application developers to handle the details of change such that the system's consistency is not jeopardized.
   Objective: We aim to change the status quo by providing the middleware facilities necessary to ensure the consistency of software after adaptation. We would like these facilities to be reusable across different applications, such that the middleware can streamline the process of achieving safe adaptation.
   Method: Our approach addresses the current shortcomings by utilizing the information encoded in a software system's architectural style. This information drives the development of reusable adaptation patterns. The patterns specify both the exact sequence of changes and the time at which those changes need to occur. We use the patterns to provide advanced adaptation support on top of an existing architectural middleware platform.
   Results: Our experience shows the feasibility of deriving detailed adaptation patterns for several architectural styles. Applying the middleware to adapt two real-world software systems shows the approach is effective in consistently adapting these systems without jeopardizing their consistency. Conclusion: We conclude the approach is effective in alleviating the application developers from the responsibility of managing the adaptation process at the application-level. Moreover, we believe this study provides the foundation for changing the way adaptation support is realized in middleware solutions. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Esfahani, Naeem; Malek, Sam] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 George Mason University
RP Esfahani, N (corresponding author), George Mason Univ, Dept Comp Sci, 4400 Univ Dr,MS 4A5, Fairfax, VA 22030 USA.
EM nesfaha2@gmu.edu; smalek@gmu.edu
FU National Science Foundation [CCF-0820060, CCF-1217503]; Defense Advanced
   Research Projects Agency [N11AP20025]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1217503, 0820060] Funding Source: National Science Foundation
FX This work is partially supported by Grants CCF-0820060 and CCF-1217503
   from the National Science Foundation and Grant N11AP20025 from Defense
   Advanced Research Projects Agency. We would like to thank Ashirvad Naik
   and Michael Thimblin for their work on some of the preliminary
   adaptation patterns. We also would like to thank Hamid Bagheri for the
   constructive discussions that we had about this research.
CR Agrawala A., 1992, 1992 IEEE Symposium on Computer-Aided Control System Design (CACSD) (Cat. No.92TH0443-2), P110, DOI 10.1109/CACSD.1992.274442
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Ambler S W., 1998, Process patterns. Building large-scale systems using object technology
   AMBLER SW, 1999, MORE PROCESS PATTERN
   Baojian Li, 1999, Software Engineering Notes, V24, P59, DOI 10.1145/308769.308783
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Buschmann F., 2007, PATTERN ORIENTED SOF, V5
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Coulson G, 2004, THIRTEENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P291, DOI 10.1109/ENABL.2004.69
   Coulson G, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1328671.1328672
   Esfahani N, 2010, LECT NOTES COMPUT SC, V6285, P433, DOI 10.1007/978-3-642-15114-9_38
   Fielding Roy Thomas, 2000, Architectural styles and the design of network-based software architectures, Patent No. AAI9980887
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Fritsch S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P571, DOI 10.1145/1368088.1368166
   Gamma E., 1994, ANAL PATTERNS REUSAB
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Geihs K, 2009, SOFTWARE PRACT EXPER, V39, P385, DOI 10.1002/spe.900
   Giese H, 2006, LECT NOTES COMPUT SC, V4199, P543
   Gomaa H, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P79, DOI 10.1109/WICSA.2004.1310692
   HAYESROTH B, 1995, IEEE T SOFTWARE ENG, V21, P288, DOI 10.1109/32.385968
   Helm R., 2002, DESIGN PATTERNS
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Léger M, 2010, LECT NOTES COMPUT SC, V6092, P74, DOI 10.1007/978-3-642-13238-4_5
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Malek S, 2007, PROC INT CONF SOFTW, P591
   Mikalsen M., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P733, DOI 10.1145/1141277.1141444
   Monroe RT, 1997, IEEE SOFTWARE, V14, P43, DOI 10.1109/52.566427
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Ramirez A.J., 2010, P 2010WORKSHOP SOFTW, P49
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164, DOI 10.1007/978-3-642-02161-9_9
   Shaw M., 1996, PATTERN LANGUAGES PR, V2, P255
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Sousa J. P., 2002, Software Architecture. Systems Design, Development and Maintenance. IFIP 17th World Computer Congress - TC2 Stream/ 3rd Working IEEE/IFIP Conference on Software Architecture, P29
   Sriplakich Prawee, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1116, DOI 10.1109/COMPSAC.2008.39
   Taylor RN, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P226, DOI 10.1109/FOSE.2007.21
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   TAYLOR RN, 1995, PROC INT CONF SOFTW, P295, DOI 10.1145/225014.225042
   Tracz W., 1995, SIGSOFT Software Engineering Notes, V20, P49, DOI 10.1145/219308.219318
   Tyson G, 2009, LECT NOTES COMPUT SC, V5523, P30, DOI 10.1007/978-3-642-02164-0_3
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Waignier G, 2007, LECT NOTES COMPUT SC, V4758, P76
NR 45
TC 5
Z9 5
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 786
EP 801
DI 10.1016/j.infsof.2012.02.001
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 946WG
UT WOS:000304387600008
DA 2024-07-18
ER

PT J
AU Cruz-Lemus, JA
   Genero, M
   Caivano, D
   Abrahao, S
   Insfrán, E
   Carsí, JA
AF Cruz-Lemus, Jose A.
   Genero, Marcela
   Caivano, Danilo
   Abrahao, Silvia
   Insfran, Emilio
   Carsi, Jose A.
TI Assessing the influence of stereotypes on the comprehension of UML
   sequence diagrams: A family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Stereotypes; UML sequence diagrams; Comprehension; Family of
   experiments; Meta-analysis
ID MODELS
AB Context: The conventional wisdom states that stereotypes are used to clarify or extend the meaning of model elements and consequently should be helpful in comprehending the diagram semantics.
   Objective: The main goal of this work is to present a family of experiments that we have carried out to investigate whether the use of stereotypes improves the comprehension of UML sequence diagrams.
   Method: The family of experiments consists of an experiment and two replications carried out with 78, 29 and 36 undergraduate Computer Science students, respectively. The comprehension of UML sequence diagrams with and without stereotypes was analyzed from three different perspectives borrowed from the Cognitive Theory of Multimedia Learning (CTML): semantic comprehension, retention and transfer. in addition, we carried out a meta-analysis study to integrate the different data samples.
   Results: The statistical analysis and meta-analysis of the data obtained from each experiment separately indicates that the use of the proposed stereotypes helps improving the comprehension of the diagrams, especially when the subjects are not familiar with the domain.
   Conclusions: The set of stereotypes presented in this work seem to be helpful for a better comprehension of UML sequence diagrams, especially with not well-known domains. Although further research is necessary for strengthening these results, introducing these stereotypes both in academia and industry could be an interesting practice for checking the validity of the results. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Cruz-Lemus, Jose A.; Genero, Marcela] Univ Castilla La Mancha, ALARCOS Res Grp, Dept Technol & Informat Syst, E-13071 Ciudad Real, Spain.
   [Caivano, Danilo] Univ Bari, Dept Informat, I-70126 Bari, Italy.
   [Abrahao, Silvia; Insfran, Emilio; Carsi, Jose A.] Univ Politecn Valencia, ISSI Res Grp, Dept Informat Syst & Computat, Valencia 46022, Spain.
C3 Universidad de Castilla-La Mancha; Universita degli Studi di Bari Aldo
   Moro; Universitat Politecnica de Valencia
RP Cruz-Lemus, JA (corresponding author), Univ Castilla La Mancha, ALARCOS Res Grp, Dept Technol & Informat Syst, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM JoseAntonio.Cruz@uclm.es; Marcela.Gener-o@uclm.es; caivano@di.uniba.it;
   sabrahao@dsic.upv.es; einsfran@dsic.upv.es; pcarsi@dsic.upv.es
RI Carsí, Jose A./ABZ-9994-2022; GENERO, MARCELA/L-6480-2014; Abrahão,
   Silvia/AAK-6976-2020; Insfran, Emilio/O-6934-2015; Cruz-Lemus, Jose
   A./B-7299-2015
OI Carsí, Jose A./0000-0002-0277-8188; GENERO, MARCELA/0000-0002-6868-7465;
   Abrahão, Silvia/0000-0003-3580-2014; Insfran,
   Emilio/0000-0003-0855-5564; Caivano, Danilo/0000-0001-5719-7447;
   Cruz-Lemus, Jose A./0000-0002-0470-609X
FU CDTI [IDI-20090557, IDI-2010043(1-5)]; FEDER; MICINN [TRA2009_0074,
   TIN2009-13718, TIN2009-13838]; JCCM [PI12109-0075-8394,
   PEII11-0330-4414]; Generalitat Valenciana
FX This research is part of the following projects: "MEDUSAS
   (IDI-20090557)" and "Proyecto Integrado ORIGIN (IDI-2010043(1-5))"
   financed by CDTI and FEDER; "ECCOO (TRA2009_0074)", "MAGO/PEGASO
   (TIN2009-13718)" and "MULTIPLE (TIN2009-13838)" financed by MICINN;
   MECCA (PI12109-0075-8394) and IMPACTUM (PEII11-0330-4414) financed by
   JCCM and CALIMO funded by the Generalitat Valenciana.
CR [Anonymous], 1991, Statistical principles in experimental design
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], SPSS 12 0 SYNT REF G
   [Anonymous], COMPR MET V2
   [Anonymous], METHODS METAANALYSIS
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BERNER S, 1999, 2 INT C UN MOD LANG
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   Conallen J., 2000, BUILDING WEB APPL UM
   Cruz-Lemus JA, 2007, LECT NOTES COMPUT SC, V4802, P213
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Eriksson Hans-Erik., 1998, UML TOOLKIT
   Gemino A, 2005, DATA KNOWL ENG, V55, P301, DOI 10.1016/j.datak.2004.12.009
   GENERO M, 2008, LNCS, V5301
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Glass G.V., 1981, MetaAnalysis in Social Research
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   Hedges LV., 2014, STAT METHODS META AN
   Insfran E., 2002, Requirements Engineering, V7, P61, DOI 10.1007/s007660200005
   INSFRAN E, 2003, REQUIREMENTS ENG APP
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kirk R.E., 1995, EXPT DESIGN, V3rd
   LANGE CFJ, 2007, 15 IEEE INT C PROGR
   Larman C., 1998, Applying UML and Patterns
   Mayer R. E., 2020, Multimedia Learning, V3rd
   MAYER RE, 1989, REV EDUC RES, V59, P43, DOI 10.3102/00346543059001043
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   *OMG, 2009, UML 2 2 UN MOD LANG
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   PICKARD LM, 2004, COMBINING EMPIRICAL
   PURCHASE HC, 2002, 1 INT WORKSH VIS SOF
   PURCHASE HC, 2001, AUSTR S INF VIS SYDN
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rosenthal R., 1986, Meta-analytic procedures for social science research
   STARON M, 2005, 3 WOSQ
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wolf Wolf F. M F. M, Meta-analysis: Quantitative methods for research synthesis
   XIE S, 2007, 15 IEEE INT C PROGR
   Yusuf S., 2007, 15 IEEE INT C PROGR
NR 45
TC 20
Z9 20
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2011
VL 53
IS 12
BP 1391
EP 1403
DI 10.1016/j.infsof.2011.07.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 847QF
UT WOS:000296986900008
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, Magne
TI Contrasting ideal and realistic conditions as a means to improve
   judgment-based software development effort estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort estimation; Expert estimation; Human judgment
ID PREDICTIONS
AB Context: The effort estimates of software development work are on average too low. A possible reason for this tendency is that software developers, perhaps unconsciously, assume ideal conditions when they estimate the most likely use of effort. In this article, we propose and evaluate a two-step estimation process that may induce more awareness of the difference between idealistic and realistic conditions and as a consequence more realistic effort estimates. The proposed process differs from traditional judgment-based estimation processes in that it starts with an effort estimation that assumes ideal conditions before the most likely use of effort is estimated.
   Objective: The objective of the paper is to examine the potential of the proposed method to induce more realism in the judgment-based estimates of work effort.
   Method: Three experiments with software professionals as participants were completed. In all three experiments there was one group of participants which followed the proposed and another group which followed the traditional estimation process. In one of the experiments there was an additional group which started with a probabilistically defined estimate of minimum effort before estimating the most likely effort.
   Results: We found, in all three experiments, that estimation of most likely effort seems to assume rather idealistic assumptions and that the use of the proposed process seems to yield more realistic effort estimates. In contrast, starting with an estimate of the minimum effort, rather than an estimate based on ideal conditions, did not have the same positive effect on the subsequent estimate of the most likely effort.
   Conclusion: The empirical results from our studies together with similar results from other domains suggest that the proposed estimation process is promising for the improvement of the realism of software development effort estimates. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Jorgensen, Magne] Univ Oslo, Simula Res Lab, N-0316 Oslo, Norway.
   [Jorgensen, Magne] Univ Oslo, Inst Informat, N-0316 Oslo, Norway.
C3 University of Oslo; University of Oslo
RP Jorgensen, M (corresponding author), Univ Oslo, Simula Res Lab, N-0316 Oslo, Norway.
EM magnej@simula.no
RI Jorgensen, Magne/H-4402-2016
CR ARANDA J, 2005, SOFTWARE ENG NOTES, V30, P346, DOI DOI 10.1145/1095430.1081761
   Armor D.A., 2002, Heuristics and biases: The psychology of intuitive judgment, P334, DOI [10.1017/CBO9780511808098.021, DOI 10.1017/CBO9780511808098.021]
   BERGERON F, 1992, INFORM MANAGE, V22, P239, DOI 10.1016/0378-7206(92)90026-C
   BUSBY J., 1999, INT J PROJ MANAG, V17, P293
   Byram SJ, 1997, J EXP PSYCHOL-APPL, V3, P216, DOI 10.1037/1076-898X.3.3.216
   Cohn M, 2006, AGILE ESTIMATION PLA
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Festinger L., 1964, Conflict, decision, and dissonance, VS. vii
   GRAY A, 1999, INT SOFTW METR S BOC
   Hallahan M, 1996, BEHAV RES THER, V34, P489, DOI 10.1016/0005-7967(95)00082-8
   HARVEY N, 1992, COGNITION, V45, P141, DOI 10.1016/0010-0277(92)90027-F
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   HENRY RA, 1993, ORGAN BEHAV HUM DEC, V54, P104, DOI 10.1006/obhd.1993.1005
   JENKINS AM, 1984, INFORM MANAGE, V7, P73, DOI 10.1016/0378-7206(84)90012-0
   Jfrgensen M., IEEE T SOFT IN PRESS
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2008, IEEE SOFTWARE, V25, P78
   Jorgensen M, 2007, J SYST SOFTWARE, V80, P1472, DOI 10.1016/j.jss.2006.09.047
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   KAHNEMAN D, 1993, MANAGE SCI, V39, P17, DOI 10.1287/mnsc.39.1.17
   KONECNI VJ, 1976, J SOC PSYCHOL, V100, P45, DOI 10.1080/00224545.1976.9711905
   LANGER EJ, 1975, J PERS SOC PSYCHOL, V32, P311, DOI 10.1037/0022-3514.32.2.311
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Moder J.J., 1995, PROJECT MANAGEMENT C, V3rd
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Newby-Clark IR, 2000, J EXP PSYCHOL-APPL, V6, P171, DOI 10.1037/1076-898X.6.3.171
   Pezzo SP, 2006, J EXP SOC PSYCHOL, V42, P221, DOI 10.1016/j.jesp.2005.03.001
   Phan Dien., 1998, COMPUTERWORLD, V22, P95
   ROSENTHAL R, 1978, PSYCHOL BULL, V85, P185, DOI 10.1037/0033-2909.85.1.185
   Roy MM, 2008, J EXP PSYCHOL-APPL, V14, P266, DOI 10.1037/1076-898X.14.3.266
   Sauer Chris., 2003, STATE IT PROJECT MAN
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Tanner RJ, 2009, J CONSUM RES, V35, P810, DOI 10.1086/593690
   Tausworthe R. C., 1980, Journal of Systems and Software, V1, P181, DOI 10.1016/0164-1212(79)90018-9
   Whitlock MC, 2005, J EVOLUTION BIOL, V18, P1368, DOI 10.1111/j.1420-9101.2005.00917.x
   Yang D., 2008, ACM IEEE INT S EMP S
NR 38
TC 11
Z9 12
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2011
VL 53
IS 12
BP 1382
EP 1390
DI 10.1016/j.infsof.2011.07.001
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 847QF
UT WOS:000296986900007
DA 2024-07-18
ER

PT J
AU Simao, A
   Petrenko, A
AF Simao, Adenilso
   Petrenko, Alexandre
TI Generating asynchronous test cases from test purposes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Input/output transition system; Test purpose; Test case generation;
   Asynchronous testing; Distributed testing
ID SYSTEMS; INPUTS
AB Context: Input/output transition system (IOTS) models are commonly used when next input can arrive even before outputs are produced. The interaction between the tester and an implementation under test (IUT) is usually assumed to be synchronous. However, as the IUT can produce outputs at any moment, the tester should be prepared to accept all outputs from the IUT, or else be able to block (refuse) outputs of the implementation. Testing distributed, remote applications under the assumptions that communication is synchronous and actions can be blocked is unrealistic, since synchronous communication for such applications can only be achieved if special protocols are used. In this context, asynchronous tests can be more appropriate, reflecting the underlying test architecture which includes queues.
   Objective: In this paper, we investigate the problem of constructing test cases for given test purposes and specification input/output transition systems, when the communication between the tester and the implementation under test is assumed to be asynchronous, performed via multiple queues.
   Method: When issuing verdicts, asynchronous tests should take into account a distortion caused by the queues in the observed interactions. First, we investigate how the test purpose can be transformed to account for this distortion when there are a single input queue and a single output queue. Then, we consider a more general problem, when there may be multiple queues.
   Results: We propose an algorithm which constructs a sound test case, by transforming the test purpose prior to composing it with the specification without queues.
   Conclusion: The proposed algorithm mitigates the state explosion problem which usually occurs when queues are directly involved in the composition. Experimental results confirm the resulting state space reduction. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Simao, Adenilso] ICMC USP, Comp Syst Dept, BR-13560970 Sao Carlos, SP, Brazil.
   [Simao, Adenilso; Petrenko, Alexandre] Ctr Rech Informat Montreal, Montreal, PQ H3N 1M3, Canada.
RP Simao, A (corresponding author), ICMC USP, Comp Syst Dept, POB 668, BR-13560970 Sao Carlos, SP, Brazil.
EM adenilso@icmc.usp.br
RI Simao, Adenilso S/E-9620-2011; Isec, Inct/I-2409-2013
OI Petrenko, Alexandre/0000-0002-2938-1666; Simao,
   Adenilso/0000-0002-1454-2607
CR [Anonymous], 1989, CWI Q.
   Balemi S., 1994, Discrete Event Dynamic Systems: Theory & Applications, V4, P41, DOI 10.1007/BF01516010
   Bochmann GV, 2008, LECT NOTES COMPUT SC, V5047, P169, DOI 10.1007/978-3-540-68524-1_13
   Bourdonov IB, 2006, ELECTRON NOTES THEOR, V164, P83, DOI 10.1016/j.entcs.2006.09.008
   Brinksma E, 1998, TESTING OF COMMUNICATING SYSTEMS, P67
   Fernandez J.-C., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P348
   Gang Luo, 1993, IFIP Transactions C (Communication Systems), VC-19, P139
   Haar S, 2007, LECT NOTES COMPUT SC, V4581, P171
   Hierons RM, 2008, LECT NOTES COMPUT SC, V5047, P200, DOI 10.1007/978-3-540-68524-1_15
   Huo J, 2009, SOFTW TEST VERIF REL, V19, P55, DOI 10.1002/stvr.396
   ITU ISO/IEC JTC1/SC21 WG7, 1996, INF RETR TR IN PRESS
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Jard C, 1999, INT FED INFO PROC, V28, P25
   Le Huo J, 2004, LECT NOTES COMPUT SC, V2978, P76
   Li ZJ, 2004, LECT NOTES COMPUT SC, V2978, P95
   SARIKAYA B, 1984, IEEE T COMMUN, V32, P389, DOI 10.1109/TCOM.1984.1096074
   SCHIPER A, 1989, COMPUT J, V32, P267, DOI 10.1093/comjnl/32.3.267
   Simao Adenilso, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P1, DOI 10.1109/ICSTW.2010.32
   Tai KC, 1998, COMPUT NETWORKS ISDN, V30, P1111, DOI 10.1016/S0169-7552(98)00013-0
   TRETMANS J, 1992, IFIP TRANS C, V8, P131
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Tretmans J, 2003, 1 EUR C MOD DRIV SOF, P31
   Verhaard L., 1992, PROTOCOL TEST SYSTEM, P55
   Wischik L., 2004, UBLCS20041
   Wu WJ, 1998, COMPUT COMMUN, V21, P1177, DOI 10.1016/S0140-3664(98)00178-9
NR 26
TC 15
Z9 15
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2011
VL 53
IS 11
BP 1252
EP 1262
DI 10.1016/j.infsof.2011.06.006
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 820CQ
UT WOS:000294883500008
DA 2024-07-18
ER

PT J
AU Parizi, RM
   Ghani, AAA
   Abdullah, R
   Atan, R
AF Parizi, Reza Meimandi
   Ghani, Abdul Azim Abdul
   Abdullah, Rush
   Atan, Rodziah
TI Empirical evaluation of the fault detection effectiveness and test
   effort efficiency of the automated AOP testing approaches
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Aspect-oriented programming; Software testing; Automated testing; Aspect
   testing; Empirical study
ID TEST-DATA GENERATION; SOFTWARE TEST DATA; ALGORITHMS; MUTATION
AB Context: Testing process is a time-consuming, expensive, and labor-intensive activity in any software setting including aspect-oriented programming (ACIP). To reduce the testing costs, human effort, and to achieve the improvements in both quality and productivity of AOP, it is desirable to automate testing of aspect-oriented programs as much as possible.
   Objective: In recent past years, a lot of research effort has been devoted to testing aspect-oriented programs but less effort has been dedicated to the automated AOP testing. This denotes that the current research on automated AOP testing is not sufficient and is still in a stage of infancy. In order to advance the state of the research in this area and to provide testers of AOP-based projects with a comparison basis, a detailed evaluation of the current automated AOP testing approaches in a thorough and experimental manner is required. Thus, the objective of this paper is to provide such evaluation of the current approaches.
   Method: In this paper, we carry out an empirical study based on mutation analysis to examine four (namely Wrasp, Aspectra, Raspect, and EAT) existing automated AOP testing approaches, particularly their underlying test input generation and selection strategies, with regard to fault detection effectiveness. In addition, the approaches are compared in terms of required effort in detecting faults as part of efficiency evaluation.
   Results: The experimental results and comparison provided insights into the effectiveness and efficiency of automated AOP testing with their respective strengths and weaknesses. Results showed that EAT is more effective than the other automated AOP testing approaches but not significant for all approaches. EAT was found to be significantly better than Wrasp at 95% confidence level (i.e. p < 0.05), but not significantly better than Aspectra or Raspect. Concerning the test effort efficiency, Wrasp was significantly (p < 0.05) efficient with requiring the lowest amount of test effort compared to the other approaches. Whereas, EAT showed to be not very efficient by recording the highest amount of test effort.
   Conclusion: This implies that EAT can currently be the most effective automated AOP testing approach but perhaps less efficient. More generally, search-based testing (as underlying strategy of EAT approach) might achieve better effectiveness but at the cost of greater test effort compared to random testing (as underlying strategy of other approaches). (C) 2011 Elsevier B.V. All rights reserved.
C1 [Parizi, Reza Meimandi; Ghani, Abdul Azim Abdul; Abdullah, Rush; Atan, Rodziah] Univ Putra Malaysia, Dept Informat Syst, Fac Comp Sci & Informat Technol, Serdang 43400, KL, Malaysia.
C3 Universiti Putra Malaysia
RP Parizi, RM (corresponding author), Univ Putra Malaysia, Dept Informat Syst, Fac Comp Sci & Informat Technol, Serdang 43400, KL, Malaysia.
EM parizi@fsktm.upm.edu.my
RI Parizi, Reza/AAF-3813-2019; Abdullah, Rusli/AAT-7546-2020; Atan,
   Rodziah/IUQ-8446-2023
OI Abdullah, Rusli/0000-0002-3044-2614; Atan, Rodziah/0000-0003-2655-7280
FU Malaysian Ministry of Higher Education [FRGS/2/2010/SG/UPM/01/2]
FX The authors would like to thank Professor Barbara Kitchenham at the
   Keele University and three anonymous reviewers for providing their
   insightful and constructive comments and suggestions on earlier versions
   of this paper. The authors also acknowledge the support of the Malaysian
   Ministry of Higher Education for supporting this research (Fundamental
   Research Grant Scheme Phase 2/2010 (FRGS/2/2010/SG/UPM/01/2)).
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alexander Roger T., 2004, CS4105 COL STAT U
   ALEXANDER RT, 2002, P INT C SOFTW REL EN
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   AMAR M, 2008, THESIS SCH ENG RONNE
   ANBALAGAN P, 2008, P 19 INT S SOFTW REL, P239
   ANDREWS J.H., 2006, Proceedings of the 1st international workshop on Random testing, P36, DOI [10.1145/1145735.1145741, DOI 10.1145/1145735.1145741]
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], EC IMP IN INFR SOFTW
   [Anonymous], TR0903 KINGS COLL DE
   [Anonymous], 1994, Encyclopedia of software Engineering
   [Anonymous], 2007, P 2007 INT S SOFTW T, DOI DOI 10.1145/1273463.1273475
   [Anonymous], ACM SIGSOFT SOFTW EN
   Arcuri A, 2007, IEEE C EVOL COMPUTAT, P2048, DOI 10.1109/CEC.2007.4424725
   Arcuri A, 2008, INFORM SCIENCES, V178, P3075, DOI 10.1016/j.ins.2007.11.024
   Babu C., 2009, ACM SIGSOFT SOFTWARE, V34, P1
   Back T, 1998, GENETIC ALGORITHMST
   Baekken J.S., 2006, P 2 WORKSHOP TESTING, P1
   Bækken JS, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P169
   BAEKKEN JS, 2006, THESIS WASHINGTON ST
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Baharom S, 2011, INFORM SOFTWARE TECH, V53, P747, DOI 10.1016/j.infsof.2011.01.005
   Baresel Andre., 2002, Proceedings of the Genetic and Evolutionary Computation Conference, GECCO '02, P1329
   Bati H., 2007, P 33 INT C VER LARG, P1243
   Baudry B, 2005, SOFTW TEST VERIF REL, V15, P73, DOI 10.1002/stvr.313
   Bernardi ML, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P65
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1893
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   Briand LC, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1021
   Ceccato M., 2005, P 1 WORKSH TEST ASP
   Chan FT, 2004, P INT COMP SOFTW APP, P96, DOI 10.1109/ISIC.2004.1387665
   Chan KP, 2003, LECT NOTES COMPUT SC, V2655, P368
   Chan KP, 2002, LECT NOTES COMPUT SC, V2349, P321
   CHAN KP, 2004, P 9 AD EUR INT C REL, P200
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen TY, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P300
   Chen TY, 2006, LECT NOTES COMPUT SC, V4006, P155
   Chen T.Y., 2009, P 2009 ACM S APPL CO, P422
   Chen T. Y., 2006, P 1 INT WORKSH RAND, P64
   Chen TY, 2008, INT CONF QUAL SOFTW, P145, DOI 10.1109/QSIC.2008.23
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2009, IEEE T RELIAB, V58, P179, DOI 10.1109/TR.2008.2011687
   Chen TY, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P292, DOI 10.1109/APSEC.2004.17
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P1001, DOI 10.1016/j.infsof.2004.07.004
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P146
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Chen TY, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P4, DOI 10.1109/QSIC.2003.1319079
   CHEN TY, 2005, P 20 IEEE ACM INT C, P309
   Cheon Y, 2005, SERP '05: PROCEEDINGS OF THE 2005 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P290
   CHEON Y, 2007, P 2007 INT C SOFTW E, P385
   CIUPA I, 2006, P 1 INT WORKSH RAND, P55
   Ciupa I., 2007, P 2007 INT S SOFTWAR, P84, DOI [10.1145/1273463.1273476, DOI 10.1145/1273463.1273476]
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Claessen Koen., 2000, Proceedings of the fifth ACM SIGPLAN international conference on Functional programming - ICFP'00, P268, DOI [10.1145/351240.351266, DOI 10.1145/351240.351266]
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Colyer A, 2005, IBM SYST J, V44, P301, DOI 10.1147/sj.442.0301
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Dabóczi TL, 2003, IEEE IMTC P, P441
   Del Grosso C, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1037
   Delamare R, 2009, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2009.41
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Derderian K, 2006, COMPUT J, V49, P331, DOI [10.1093/comjnl/bxl003, 10.1093/comjnl/bx1003]
   DERDERIAN K, 2004, P 2004 C GEN EV COMP, P1429
   DEURSEN AV, 2005, SENR050 CENTR WISK I
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   EADDY M, 2007, P 6 INT C SOFTW COMP, P200
   FERRARI FC, 2009, P 3 LAT AM WORKSH AS, P1
   FERRARI FC, 2008, P 1 INT C SOFTW TEST, P52
   Forrester JE, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 4TH UNSENIX WINDOWS SYSTEMS SYMPOSIUM, P59
   Garousi V, 2008, J SYST SOFTWARE, V81, P161, DOI 10.1016/j.jss.2007.05.037
   Godefroid P., 2007, P 2 INT WORKSHOP RAN, P1, DOI [DOI 10.1145/1292414.1292416, 10.1145/1292414.1292416.]
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Guderlei R, 2007, INT J SOFTW ENG KNOW, V17, P757, DOI 10.1142/S0218194007003471
   Guo Q, 2005, IEE PROC-SOFTW, V152, P127, DOI 10.1049/ip-sen:20045001
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P185
   Hassoun Y, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P339, DOI 10.1109/CSMR.2004.1281436
   Hu P., 2006, Proc. of the 3rd International Workshop on Software Quality Assurance, P6
   Huai Liu, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P92, DOI 10.1109/QSIC.2010.61
   Jaygarl H, 2009, P INT COMP SOFTW APP, P148, DOI 10.1109/COMPSAC.2009.29
   JIA Y, 2010, IEEE T SOFTWARE ENG, P1
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   *JUNIT, TEST RES EXTR PROGR
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KICZALES G, 2002, Patent No. 6467086
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Kumar Mohit, 2009, 2009 IEEE Symposium on Industrial Electronics & Applications (ISIEA 2009), P996, DOI 10.1109/ISIEA.2009.5356308
   Kumar N, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P197
   Lakhotia K., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P101, DOI 10.1109/SSBSE.2010.21
   Lemos O.A. L., 2006, P 2 WORKSHOP TESTING, P33
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   LIN Y, 2009, P 24 IEEE ACM INT C, P16
   Liu H, 2009, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2009.16
   LOO PS, 1988, INFORM SOFTWARE TECH, V30, P402, DOI 10.1016/0950-5849(88)90037-7
   Lopez-Martinez C., 2005, Part I - Tutorial on Radar Polarimetry, P1
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   MAYER J, 2005, P 7 INT C FORM ENG M, P251
   MAYER J, 2006, P 3 INT WORKSH SOFTW, P22
   MAYER J, 2006, P 5 INT WORKSH FORM, P72
   Mayer J, 2006, INT CONF QUAL SOFTW, P85
   McEachen N., 2005, P 4 INT C ASPECT ORI, P192
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meyer B, 2007, LECT NOTES COMPUT SC, V4362, P114
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   MILLER BARTON., 1995, FUZZ revisited: A reexamination of the reliability of UNIX utilities and services
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   MILLER BP, 2007, ACM SIGOPS OPERATING, V41, P78
   MILLER BP, 2006, P 1 INT WORKSH RAND, P46
   Mitchell B.S., 2002, Proc. Genet. Evol. Comput. Conf, P1375
   Murphy C., 2007, P INT WORKSH RAND TE, P38
   Naqvi SAA, 2005, IEEE: 2005 International Conference on Emerging Technologies, Proceedings, P461
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Oriat C, 2005, LECT NOTES COMPUT SC, V3712, P242
   Osman I.H., 1996, METAHEURISTICS THEOR
   OUDINET J, 2007, P 2 INT WORKSH RAND, P26
   OWRE S, 2006, P WORKSH AUT FORM ME
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pacheco Carlos., 2008, International Symposium on Software Testing and Analysis (ISSTA), P87
   *PAR, PAR JTEST
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   PARIZI RM, 2007, P 5 INT C COMP SCI I, P78
   POULDING S, 2011, P 4 INT C SOFTW TEST
   Prasetya I. S. W. B., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P151
   Regehr J, 2005, P 5 ACM INT C EMB SO, P290
   RINARD M, 2004, P 12 ACM SIGSOFT INT, P147
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Sen Koushik., 2007, P 22 IEEEACM INT C A, P323, DOI DOI 10.1145/1321631.1321679
   Sihan Li, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P72, DOI 10.1109/QSIC.2010.15
   Slutz D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P618
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   TONELLA P, 2004, P INT S SOFTW TEST A, P119
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   WANG gang, 2005, P 1 WORKSH TEST ASP, P1
   Wappler S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1925
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Whitley D, 2001, INFORM SOFTWARE TECH, V43, P817, DOI 10.1016/S0950-5849(01)00188-4
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
   Xie T., 2006, AOSD '06, P190
   XIE T, 2007, P 3 WORKSH TEST ASP, P7
   XIE T, 2005, P 7 IEEE INT C CLUST, P1
   Xie T, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P179
   XU D, 2005, P 17 INT C SOFTW ENG, P366
   Xu DX, 2008, INT J SOFTW ENG KNOW, V18, P413, DOI 10.1142/S0218194008003672
   Xu G., 2008, P 7 INT C ASP OR SOF, P36
   Xu GQ, 2007, PROC INT CONF SOFTW, P65
   XU W, 2006, P 8 IASTED INT C SOF, P4
   Yamamoto Y, 2005, P AS PAC MICR C P DE, P1
   Yoonsik Cheon, 2007, 2007 International Conference on Software Engineering Theory and Practice (SEPT-07), P112
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
   Yu Liu, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P24, DOI 10.1109/SSIRI.2008.18
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
   Zhang S, 2007, P INT COMP SOFTW APP, P431
   Zhang YY, 2011, INFORM SOFTWARE TECH, V53, P761, DOI 10.1016/j.infsof.2011.02.001
   Zhao C., 2007, P 3 WORKSHOP TESTING, P23
   ZHAO C, 2007, P 3 WORKSH TEST ASP, P13
   Zhao J, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P188, DOI 10.1109/CMPSAC.2003.1245340
   J2SEG 0 NEW FEATURES
NR 174
TC 3
Z9 3
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1062
EP 1083
DI 10.1016/j.infsof.2011.05.004
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Patil, S
   Kobsa, A
   John, A
   Seligmann, D
AF Patil, Sameer
   Kobsa, Alfred
   John, Ajita
   Seligmann, Doree
TI Methodological reflections on a field study of a globally distributed
   software project
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Geographically distributed collaboration; Global software development;
   Methodology
ID COLLABORATION; KNOWLEDGE
AB Context: We describe the methodology of a field study of a globally distributed software development project in a multinational corporation. The project spanned four sites in the US and one in India, and is a representative example of the complexities and intricacies of global corporate software development.
   Objective: Our goal is to provide the rationale behind the methodological choices and derive insights to inform the methodology of future studies of global software engineering teams. The paper also aims to provide an illustrative case of a typical geographically distributed corporate software project, through an in-depth description that emerged by applying the methods.
   Method: We reflect upon the reasons for choosing each of our methods, viz., non-participant observation, site visits, interviews, and an online questionnaire. We then discuss what we learned from the experience of applying the methods.
   Results: During and after the study, the discussions surrounding our methodological choices yielded important insights. The dynamics of software engineering practice and the geographical distribution of the project impacted factors such as access, costs, and cultural and linguistic diversity, and influenced the choice of methods. Our experience makes a case for methodological breadth and plurality as a means to a broad understanding of a global project. This understanding could then be linked to the specific research questions under consideration.
   Conclusion: The in-depth contextual description of the project that emerged from our methods highlights the utility of our methodological approach and provides an illustration of the complex nature of these projects. Our systematic reflection also yielded several methodological insights and provides important implications for future empirical studies of global corporate software development. Our experience can serve as a useful resource in methodological choices for research on globally distributed software engineering teams, or collaborative knowledge work in general. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Patil, Sameer; Kobsa, Alfred] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
   [John, Ajita; Seligmann, Doree] Avaya Labs Res, Basking Ridge, NJ 07920 USA.
C3 University of California System; University of California Irvine; Avaya
RP Patil, S (corresponding author), Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
EM patil@uci.edu
OI Kobsa, Alfred/0000-0002-7691-4955
FU NSF [0205724, 0808783]; Direct For Computer & Info Scie & Enginr
   [0808783] Funding Source: National Science Foundation; Div Of
   Information & Intelligent Systems [0808783] Funding Source: National
   Science Foundation
FX We thank the participants of our study. We acknowledge the help of Lynne
   S. Brotman and the insights offered by Mihir Mahajan and Ram Kashi in
   helping us interpret our findings. Thanks are also due to Cleidson
   DeSouza, the guest editors, and the anonymous reviewers for their
   valuable comments on earlier versions of the paper. The research
   described in this article has been supported by NSF Grants Nos. 0205724
   and 0808783.
CR Acquisti A, 2006, PRIVACY AND TECHNOLOGIES OF IDENTITY: A CROSS-DISCIPLINARY CONVERSATION, P15, DOI 10.1007/0-387-28222-X_2
   [Anonymous], 2007, Proceedings of the 2007 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '07, DOI DOI 10.1145/1321211.1321221
   [Anonymous], CHI 91 C P ACM SIGCH
   [Anonymous], 1996, CSCW '96: Proceedings of the 1996 ACM conference on Computer supported cooperative work
   [Anonymous], 2003, P SIGCHI C HUM FACT, DOI DOI 10.1145/642611.642635
   Appelt W, 1999, LECT NOTES COMPUT SC, V1725, P66
   Birnholtz JP, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P51
   Boden A., 2008, Proceedings of the 2008 International Workshop on Cooperative and Human Aspects of Software Engineering - CHASE'08, P21, DOI [10.1145/1370114.1370120, DOI 10.1145/1370114.1370120]
   Boden A, 2012, J SOFTW-EVOL PROC, V24, P139, DOI 10.1002/smr.473
   Cheng L.-T., 2003, P 2003 OOPSLA WORKSH, P45, DOI [10.1145/965660.965670, DOI 10.1145/965660.965670]
   CHUA WF, 1986, ACCOUNT REV, V61, P601
   Damian DEH, 2000, IEEE SOFTWARE, V17, P28, DOI 10.1109/52.896247
   DAMIAN DEH, 2003, P 36 HAW INT C SYST, P19
   De Croon EM, 2005, ERGONOMICS, V48, P119, DOI 10.1080/00140130512331319409
   de Souza CRB, 2007, GROUP'07: PROCEEDINGS OF THE 2007 INTERNATIONAL ACM CONFERENCE ON SUPPORTING GROUP WORK, P147
   DESOUZA CRB, 2007, AN WORKSH DES DISTR, P91
   Dourish P., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P541, DOI 10.1145/142750.142982
   Dourish P, 2004, PERS UBIQUIT COMPUT, V8, P391, DOI 10.1007/s00779-004-0308-5
   Ellis JB, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P577
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Espinosa JA, 2003, J MANAGE INFORM SYST, V19, P157
   EXTON C, 2007, P 19 ANN PSYCH PROGR, P173
   Finholt TA, 1997, PSYCHOL SCI, V8, P28, DOI 10.1111/j.1467-9280.1997.tb00540.x
   Fowler F.J., 2008, Survey research methods, V4th
   Gaver W., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P27, DOI 10.1145/142750.142754
   Glaser B, 1967, Discovery of grounded theory strategies for qualitative research, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gonzalez V.M., 2004, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P113, DOI [DOI 10.1145/985692.985707, 10.1145/985692.985707]
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Haans A, 2007, EUR PSYCHOL, V12, P93, DOI 10.1027/1016-9040.12.2.93
   Halverson C.A., 2006, Proceedings of the Conference on Computer Supported Cooperative Work, CSCW '06, P39
   Hammersley Martyn, 2007, Ethnography: Principles in practice, DOI DOI 10.4324/9780203944769
   Handel M., 2002, P 2002 ACM C COMP SU, P1, DOI [10.1145/587078.587080, DOI 10.1145/587078.587080]
   Herbsleb J. D., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P319, DOI 10.1145/358916.359003
   Herbsleb J. D., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P171, DOI 10.1145/503376.503408
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   *IBM, 1999, IBM MULT CONS PRIV S
   Jarvenpaa S. L., 1998, Journal of Management Information Systems, V14, P29
   Kotlarsky J, 2005, EUR J INFORM SYST, V14, P37, DOI 10.1057/palgrave.ejis.3000520
   KUMARAGURU P, 2005, 33 RES C COMM INF IN
   Kvale S., 2008, INTERVIEWS LEARNING
   LANUBILE F, 2003, SIGSOFT SOFTWARE ENG, V28, P1
   Lau JTF, 2003, SEX TRANSM INFECT, V79, P325, DOI 10.1136/sti.79.4.325
   Lee A., 1997, GROUP '97. Proceedings of the International ACM SIGGROUP Conference on Supporting Group Work. The Integration Challenge, P385, DOI 10.1145/266838.267359
   Leinonen P., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P301, DOI 10.1007/s10606-005-9002-z
   MacGregor E., 2005, ACM SIGSOFT Software Engineering notes, V30, P1
   MATAVIRE R, 2008, SAICSIT 08, P139
   Mingers J, 2001, INFORM SYST RES, V12, P240, DOI 10.1287/isre.12.3.240.9709
   Olson G., 1996, ACM C COMPUTER SUPPO, P419
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Orlikowski WJ, 1991, INFORM SYST RES, V2, P1, DOI 10.1287/isre.2.1.1
   PATIL S, 2009, THESIS U CALIFORNIA
   Patil S, 2009, LECT NOTES COMPUT SC, V5727, P143, DOI 10.1007/978-3-642-03658-3_19
   Patil Sameer., 2010, ICIC 10 P 3 INT C IN, DOI [10.1145/1841853.1841875, DOI 10.1145/1841853.1841875]
   Ramasubbu Narayan., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P125
   Redmiles D, 2007, WIRTSCHAFTSINF, V49, P28
   RICHARDSON I, 2008, ICGSE 08, P13, DOI DOI 10.1109/ICGSE.2008.21
   ROTTER JB, 1967, J PERS, V35, P651, DOI 10.1111/j.1467-6494.1967.tb01454.x
   SHAMI NS, 2004, CASCON 2004, P255
   SIGFRIDSSON A, 2008, P ICGSE 2008 WORKSH
   SNYDER M, 1974, J PERS SOC PSYCHOL, V30, P526, DOI 10.1037/h0037039
   Strauss A., 1990, BASICS QUALITATIVE R
   Treinen JJ, 2006, IBM SYST J, V45, P773, DOI 10.1147/sj.454.0773
   Valetto G., 2007, P IEEE 4 INT WORKSH, P25
   Westin Alan, 1991, Harris-Equifax Consumer Privacy Survey
   Wolf Timo, 2008, Software Process: Improvement and Practice, V13, P493, DOI 10.1002/spip.401
NR 67
TC 8
Z9 8
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 969
EP 980
DI 10.1016/j.infsof.2011.01.013
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 795DC
UT WOS:000292950700007
DA 2024-07-18
ER

PT J
AU De Castro, V
   Marcos, E
   Vara, JM
AF De Castro, Valeria
   Marcos, Esperanza
   Manuel Vara, Juan
TI Applying CIM-to-PIM model transformations for the service-oriented
   development of information systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service-oriented engineering; Model-driven development; Business models;
   Information systems; Model transformations
ID LIFE-CYCLE; WEB
AB Context: Model-driven approaches deal with the provision of models, transformations between them and code generators to address software development. This approach has the advantage of defining a conceptual structure, where the models used by business managers and analysts can be mapped into more detailed models used by software developers. This alignment between high-level business specifications and the lower-level information technologies (ITs) models is crucial to the field of service-oriented development, where meaningful business services and process specifications are those relevant to real business scenarios.
   Objective: This paper presents a model-driven approach which, starting from high-level computational-independent business models (CIMs) - the business view - sets out guidelines for obtaining lower-level platform-independent behavioural models (PIMs) - the information system view. A key advantage of our approach is the use of real high-level business models, not just requirements models, which, by means of model transformations, helps software developers to make the most of the business knowledge for specifying and developing business services.
   Method: This proposal is framed in a method for service-oriented development of information systems whose main characteristic is the use of services as first-class objects. The method follows an MDA-based approach, proposing a set of models at different levels of abstraction and model transformations to connect them.
   Results: The paper present the complete set of CIM and PIM metamodels and the specification of the mappings between them, which clear advantage is the support for the alignment between high-level business view and ITs. The proposed model-driven process is being implemented in an MDA tool. A first prototype has been used to develop a travel agency case study that illustrates the proposal.
   Conclusion: This study shows how a model-driven approach helps to solve the alignment problem between the business view and the information system view that arises when adopting service-oriented approaches for software development. (c) 2010 Elsevier B.V. All rights reserved.
C1 [De Castro, Valeria; Marcos, Esperanza; Manuel Vara, Juan] Rey Juan Carlos Univ, Dept Comp Languages & Syst, Madrid 28933, Spain.
C3 Universidad Rey Juan Carlos
RP De Castro, V (corresponding author), Rey Juan Carlos Univ, Dept Comp Languages & Syst, Madrid 28933, Spain.
EM valeria.decastro@urjc.es; esperanza.marco-s@urjc.es;
   juanmanuel.vara@urjc.es
RI Martinez, Esperanza Marcos/AAS-8564-2021; de Castro, Maria
   Valeria/AAH-9809-2021; de Castro, Valeria V/N-4401-2013; Martinez,
   Esperanza Marcos/JCE-5935-2023; Vara, Juan Manuel/K-6774-2014
OI de Castro, Maria Valeria/0000-0003-2193-7807; Vara, Juan
   Manuel/0000-0002-8637-6580; Marcos, Esperanza/0000-0003-2666-9995
FU Spanish Ministry of Science and Technology [TIN2008-03582, CSD2007-0022]
FX This research is partially funded by the MODEL CAOS project financed by
   the Spanish Ministry of Science and Technology (Ref. TIN2008-03582) and
   Agreement Technologies (CONSOLIDER CSD2007-0022). We would like to thank
   Elisa Herrmann and Alvaro Jimenez for the implementation of the tool
   supporting SOD-M.
CR [Anonymous], 2008, ECLIPSE MODELING FRA
   ARSANJANI LA, 2008, IBM SYSTEM J, V47
   Baïna K, 2004, BIOMED SCI INSTRUM, V3084, P290
   BEZIVIN J, 2004, NOVATICA UPGRADE, V5, P21
   BEZIVIN J, 2006, P TRACKS MOD TRANSF, P1186
   Bezivin J, 2005, 4 WORKSH SOFTW MOD E
   Bieberstein N.B., 2005, SERVICE ORIENTED ARC
   Brown A, 2005, SOA DEV USING IBM RA
   CACERES P, 2006, P 2006 ACM S APPL CO, P1232
   de Castro V., 2006, International Journal of Web Engineering and Technology, V2, P335, DOI 10.1504/IJWET.2006.010419
   De Castro V, 2009, INT J COOP INF SYST, V18, P225, DOI 10.1142/S0218843009002038
   DECASTRO V, 2007, WORKSH P 7 INT C WEB, P284
   Del Fabro M. D., 2006, ECLIPSE MODELING S, P37
   Dias A, 2009, INT CONF RES CHAL, P409, DOI 10.1109/RCIS.2009.5089305
   Escalona MJ, 2007, ADV ENG SOFTW, V38, P267, DOI 10.1016/j.advengsoft.2006.07.006
   Gordijn J, 2006, IEEE SOFTWARE, V23, P26, DOI 10.1109/MS.2006.71
   Gordijn J., 2003, Requirements Engineering, V8, P114, DOI 10.1007/s00766-003-0169-x
   GRAMMEL B, 2010, P 6 ECMFA TRAC WORKS, P7, DOI DOI 10.1145/1814392.1814394
   Guttman M., 2006, REAL LIFE MDA SOLVIN
   HAHN C, 2010, P 4 WORKSH AG BAS TE, P13
   Harmon P., 2004, NEWSLETTER BUSINESS
   Hernandez JA, 2007, IEEE T INF TECHNOL B, V11, P87, DOI 10.1109/TITB.2006.879601
   HERRMANN E, 2009, P 5 JORN CIENT TECN, P211
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   KOCH N, 2008, EUROPEAN J INFORM PR, V9, P40
   KOCH N., 2004, Journal of Web Engineering, V3, P22
   MANTELL K, 2005, UML BPEL MODEL DRIVE
   Marcos E, 2003, LECT NOTES COMPUT SC, V2910, P17
   MARCOS E, 2006, LNCS, V4344, P27
   Mazón JN, 2007, LECT NOTES COMPUT SC, V4802, P255
   MILLER J, 2003, OMG20030601
   *OMG, 2009, AD20080804 OMG
   *OMG, 2002, PTC030802 OMG
   *OMG, 2008, FORMAL080403 OMG
   *OMG, 2008, BUS PROC MOD NOT VER
   PAPAZOGLOU M, 2008, WEB SERVICE PRINCIPL
   Papazoglou M.P., 2006, Service Oriented Computing (SOC)
   Papazoglou MP, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1290958.1290966
   PARIKH A, 2003, MODELING AUGMENTED W
   Pressman Roger., 2004, SOFTWARE ENG PRACTIT
   Rodríguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Schmid HA, 2004, IEEE INTERNET COMPUT, V8, P19
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   TONGRUNGROJANA R, 2004, J DIGITAL INFORM, V5, P5
   TROYER DE, 2003, P 3 INT WORKSH WEB O, P1
   VARA JM, 2009, P INT C MOD TRANSF I, P181
   VARA JM, 2009, THESIS RJ CARLOS U
   Verner L., 2004, Queue, V2, P82, DOI DOI 10.1145/984458.984503
   Watson Andrew, 2008, UPGRADE: The European Journal for the Informatics Professional, V9, P7
   White S, 2004, PROCESS MODELLING NO
   WIMMER M, 2007, P 7 OOPSLA WORKSH DO, P97
   Yang J, 2004, INFORM SYST, V29, P97, DOI 10.1016/S0306-4379(03)00051-6
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 55
TC 68
Z9 70
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2011
VL 53
IS 1
BP 87
EP 105
DI 10.1016/j.infsof.2010.09.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 692QV
UT WOS:000285171100008
DA 2024-07-18
ER

PT J
AU Khalgui, M
   Mosbahi, O
AF Khalgui, Mohamed
   Mosbahi, Olfa
TI Intelligent distributed control systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Embedded system; Control function block; Automatic reconfiguration;
   Multi-agent architecture; Reconfiguration protocol; Implementation
AB Context: The paper(2) deals with distributed reconfigurable embedded control systems following the component-based International Industrial Standard IEC61499 in which a Function Block (abbreviated by FB) is an event-triggered software component owning data and a control application is a distributed network of Function Blocks. Nowadays, limited related works have been proposed to address particular cases of reconfigurations without considering distributed architectures. Our first problem is to be able to handle all possible forms of reconfigurations that can be applied at run-time to distributed Function Blocks. In this case, a coordination between devices of the execution environment should be applied to guarantee safe and coherent distributed reconfigurations. A second problem is to find the sufficient solutions for the correct implementation of this reconfigurable distributed architecture.
   Objective: The paper defines an implementable multi-agent architecture for automatic and coherent reconfigurations of distributed Function Blocks.
   Method: To address all possible industrial forms, we classify the reconfiguration scenarios into three levels. The first level deals with additions-removals of Function Blocks to-from the system's implementation. The second deals with updates of compositions of blocks, and the third deals with updates of data. We define a Reconfiguration Agent for each device of the execution environment, and a unique Coordination Agent for coordinations between devices. Each Reconfiguration Agent to be modelled by nested state machines applies local reconfiguration scenarios in the corresponding device after coordinations with the Coordination Agent. We propose an Inter-Agents Communication Protocol to support correct and coherent reconfigurations of distributed devices. This protocol is based on Coordination Matrices to be handled by the Coordination Agent in order to define all reconfiguration scenarios that should be simultaneously applied in distributed devices. We propose XML-based implementations for both kinds of agents where XML code blocks are exchanged between devices to guarantee safety distributed reconfigurations. The contributions of the paper are applied to two Benchmark Production Systems available in our research laboratory.
   Results: The communication protocol is successfully applied to our platforms where simulations are executed to check distributed and coherent reconfiguration scenarios. The Reconfiguration and Coordination Agents are implemented in this platform by following the International Standard IEC61499. We show in addition XML-based successful interactions between devices when distributed reconfigurations are applied.
   Conclusion: The paper successfully defines a multi-agent architecture for IEC61499 distributed reconfigurable embedded systems where Coordination and Reconfiguration agents are proposed to allow feasible and coherent distributed reconfigurations by using a defined communication protocol. This architecture is implemented in XML and applied to real industrial platforms. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Khalgui, Mohamed; Mosbahi, Olfa] Univ Halle Wittenberg, Inst Informat, Res Lab Automat Technol, Halle, Germany.
C3 Martin Luther University Halle Wittenberg
RP Khalgui, M (corresponding author), Univ Halle Wittenberg, Inst Informat, Res Lab Automat Technol, Halle, Germany.
EM khalgui.mohamed@gmail.com
OI Al-Sugheir, Mohamed/0000-0002-8193-933X
FU Alexander Von Humboldt foundation [TUN1127196STP]
FX This work is done in the research laboratory of Prof. Dr. Hans-Michael
   Hanisch at Martin Luther University in Germany, and supported by the
   Alexander Von Humboldt foundation under the reference TUN1127196STP.
CR Al-Safi Y., 2007, 3 INT C IND APPL HOL
   Angelov C, 2005, LECT NOTES COMPUT SC, V3824, P152
   [Anonymous], 2004, IEC61499 IS
   [Anonymous], 2001, MODELLING CONTROL SY
   Armengaud E, 2008, IEEE T IND INFORM, V4, P146, DOI 10.1109/TII.2008.2002704
   Baruah S., 2004, Handbook of scheduling: Algorithms, models, and performance analysis, V3
   Brennan R. W., 2001, MULTIAGENT SYSTEMS A
   Crnkovic I., 2002, BUILDING RELIABLE CO
   Gehin A.-L., 2008, IEEE T SYSTEMS MACHI, V38
   GOESSLER G, 2002, LNCS, V2852, P443
   HSIEN YL, 2007, IND INF 2007 5 IEEE, V2, P1189
   KHALGUI M, 2008, 3 INT S IND EMB SYST
   KHALGUI M, 2007, EUROPEAN J AUTOMATED, V41
   Khalgui M, 2009, IEEE INT C EMERG
   Li ZW, 2006, IEEE T IND INFORM, V2, P313, DOI 10.1109/TII.2006.885185
   Marik V., 2007, LECT NOTES COMPUTER, V4659
   PANJAITAN S, 2007, INT J MANUFACTURING, V2
   Pratl G, 2007, IEEE T IND INFORM, V3, P21, DOI 10.1109/TII.2007.891308
   Rooker M.N., 2007, 3 INT C IND APPL HOL
   Theiss S, 2009, IEEE T IND INFORM, V5, P147, DOI 10.1109/TII.2009.2017739
   Thramboulidis K, 2004, SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P193, DOI 10.1109/ISORC.2004.1300345
   THRAMBOULIDIS K, INT J ADV MANUFACTUR
   Thramboulidis K, 2005, IEEE T IND INFORM, V1, P54, DOI 10.1109/TII.2005.844427
   Vyatkin V, 2003, J INTELL MANUF, V14, P123, DOI 10.1023/A:1022295414523
   Vyatkin V., 2009, IEEE T SYSTEMS MACHI
   Vyatkin V., 2007, BOOK ISA O3NEIDA SER
   Vyatkin VV, 2005, IEEE T IND INFORM, V1, P4, DOI 10.1109/TII.2005.843829
NR 27
TC 19
Z9 19
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2010
VL 52
IS 12
BP 1259
EP 1271
DI 10.1016/j.infsof.2010.06.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677DB
UT WOS:000283968200001
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Stamelos, I
AF Ampatzoglou, Apostolos
   Stamelos, Ioannis
TI Software engineering research for computer games: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software engineering; Computer games; Systematic review
AB Context: Currently, computer game development is one of the fastest growing industries in the worldwide economy. In addition to that, computer games are rapidly evolving in the sense that newer game versions arrive in a very short interval. Thus, software engineering techniques are needed for game development in order to achieve greater flexibility and maintainability, less cost and effort, better design, etc. In addition, games present several characteristics that differentiate their development from classical software development.
   Objective: This study aims to assess the state of the art on research concerning software engineering for computer games and discuss possible important areas for future research.
   Method: We employed a standard methodology for systematic literature reviews using four well known digital libraries.
   Results: Software engineering for computer games is a research domain that has doubled its research activity during the last 5 years. The dominant research topic has proven to be requirements engineering, while topics such as software verification and maintenance have been neglected up to now.
   Conclusion: The results of the study suggest that software engineering for computer games is a field that embraces many techniques and methods from conventional software engineering and adapts them so as to fit the specific requirements of game development. In addition to that, the study proposes the employment of more elaborate empirical methods, i.e. controlled experiments and case studies, in game software engineering research, which, have not been extensively used up to now. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Ampatzoglou, Apostolos; Stamelos, Ioannis] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Ampatzoglou, A (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Aristotle Univ Campus, Thessaloniki 54124, Greece.
EM apamp@csd.auth.gr; stamelos@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020; Ampatzoglou, Apostolos/AAC-3632-2020
CR Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BUDGEN D, 2008, P PPIG 2008 LANC U, P195
   Cai KY, 2008, J SYST SOFTWARE, V81, P1051, DOI 10.1016/j.jss.2007.08.028
   Crooks C. E., 2004, AWESOME 3D GAME DEV
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., PROCEDURES UNDERTAKI
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lewis M, 2002, COMMUN ACM, V45, P27
   McShaffry M., 2003, Game Coding Complete
   RHYNE TM, PAN INT C VIS VIS 00, P519
   SOWE SK, 2007, P INT C OP SOURC SYS, P147
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zyda M, 2007, COMMUN ACM, V50, P26, DOI 10.1145/1272516.1272535
NR 17
TC 60
Z9 62
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2010
VL 52
IS 9
BP 888
EP 901
DI 10.1016/j.infsof.2010.05.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 629QL
UT WOS:000280214700002
DA 2024-07-18
ER

PT J
AU Janik, A
   Zielinski, K
AF Janik, Arkadiusz
   Zielinski, Krzysztof
TI AAOP-based dynamically reconfigurable monitoring system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Adaptive software; Adaptive monitoring; Dynamic AOP; Aspect composition
AB A key aspect of resource management is efficient and effective deployment of available resources whenever needed. The issue typically covers two areas: monitoring of resources used by software systems and managing the consumption of resources. A key aspect of each monitoring system is its reconfigurability - the ability of a system to limit the number of resources monitored at a given time to those that are really necessary at any particular moment. The authors of this article propose a fully dynamic and reconfigurable monitoring system based on the concept of Adaptable Aspect-Oriented Programming (AAOP) in which a set of AOP aspects is used to run an application in a manner specified by the adaptability strategy. The model can be used to implement systems that are able to monitor an application and its execution environment and perform actions such as changing the current set of resource management constraints applied to an application if the application/environment conditions change. Any aspect that implements a predefined interface may be used by the AAOP-based monitoring system as a source of information. The system utilizes the concept of dynamic AOP, meaning that the aspects (which are sources of information) may be dynamically enabled/disabled. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Janik, Arkadiusz; Zielinski, Krzysztof] Krakow Univ Sci & Technol, Dept Comp Sci, Krakow, Poland.
C3 Cracow University of Technology
RP Janik, A (corresponding author), Krakow Univ Sci & Technol, Dept Comp Sci, Krakow, Poland.
EM arkadiusz.janik@agh.edu.pl
CR Cámara J, 2007, ELECTRON NOTES THEOR, V189, P21, DOI 10.1016/j.entcs.2007.03.026
   CZAJKOWSKI G, 2001, MULTITASKING COMPROM
   CZAJKOWSKI G, 2005, 5 IEEE INT S CLUST C
   CZAJKOWSKI G, 2000, APPL ISOLATION JAVA
   Danielsson K., KEY REQUIREMENTS EVE
   Heiss Janice J., 2005, MULTITASKING VIRTUAL
   HOLGER M, 2007, WORKSH MIDDL APPL IN
   *IBM TIV GROUP, 2005, AUT COMP POL LANG
   *IBM TIV GROUP, 2005, ARCH BLUEPR AUT COMP
   JANIK A, 2008, THESIS KRAKOW
   *JAV COMM PROC, JSR 121 APPL IS API
   Java Community Process, JSR 284 RES CONS MAN
   Kephart J.O., 2003, The Vision of Autonomic Computing
   LEHTIHET E, 2006, P 7 IEEE INT WORKSH
   MCKINLEY P, 2002, 6 INT S WEAR COMP IS
   MCKINLEY P, 2003, MSUCSE0322
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   Michelson BrendaM., 2006, EVENT DRIVEN ARCHITE
   MUGGE H, 2007, WORKSH MIDDL APPL IN
   NICOARA A, 2007, 569 ETH ZUR DEP COMP
   RASCHE A, 2005, ARM 05
   RHO T, 2004, IAITR20044 U BONN CO
   RUTHERFORD MJ, 2002, P 1 IFIP ACM WORK C
   Sadjadi S. M., 2004, P INT S DISTR OBJ AP
   SUVE D, AOSD 03, P21
   MLET APPL PROGRAMMIN
NR 26
TC 14
Z9 14
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2010
VL 52
IS 4
BP 380
EP 396
DI 10.1016/j.infsof.2009.10.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 576CL
UT WOS:000276121400002
DA 2024-07-18
ER

PT J
AU Svahnberg, M
   Gorschek, T
   Feldt, R
   Torkar, R
   Bin Saleem, S
   Shafique, MU
AF Svahnberg, Mikael
   Gorschek, Tony
   Feldt, Robert
   Torkar, Richard
   Bin Saleem, Saad
   Shafique, Muhammad Usman
TI A systematic review on strategic release planning models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Strategic release planning models; Systematic review; Road-mapping;
   Requirements selection factors
ID RETROSPECTIVE ANALYSIS
AB Context: Strategic release planning (sometimes referred to as road-mapping) is an important phase of the requirements engineering process performed at product level. It is concerned with selection and assignment of requirements in sequences of releases such that important technical and resource constraints are fulfilled.
   Objectives: In this study we investigate which strategic release planning models have been proposed, their degree of empirical validation, their factors for requirements selection, and whether they are intended for a bespoke or market-driven requirements engineering context.
   Methods: In this systematic review a number of article sources are used, including Compendex, Inspec, IEEE Xplore, ACM Digital Library, and Springer Link. Studies are selected after reading titles and abstracts to decide whether the articles are peer reviewed, and relevant to the subject.
   Results: Twenty four strategic release planning models are found and mapped in relation to each other, and a taxonomy of requirements selection factors is constructed.
   Conclusions: We conclude that many models are related to each other and use similar techniques to address the release planning problem. We also conclude that several requirement selection factors are covered in the different models, but that many methods fail to address factors such as stakeholder value or internal value. Moreover, we conclude that there is a need for further empirical validation of the models in full scale industry trials. (c) 2009 Elsevier B.V. All rights reserved.
C1 [Svahnberg, Mikael; Gorschek, Tony; Feldt, Robert; Torkar, Richard; Bin Saleem, Saad; Shafique, Muhammad Usman] Blekinge Inst Technol, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Svahnberg, M (corresponding author), Blekinge Inst Technol, POB 520, S-37225 Ronneby, Sweden.
EM Mikael.Svahnberg@bth.se; Tony.Gorschek@bth.se; Robert.Feldt@bth.se;
   Richard.Torkar@bth.se; Aveeator@gmail.com; Ushafique786@yahoo.com
RI Gorschek, Tony/E-3445-2013
OI Feldt, Robert/0000-0002-5179-4205
CR Al-Emran A, 2007, LECT NOTES COMPUT SC, V4589, P315
   AMANDEEP A, 2004, LECT NOTES COMPUTER, V1840, P248
   An NT, 2005, IEEE INT CONF FUZZY, P442
   Aurum A., 2005, Engineering and Managing Software Requirements
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   den Akker J. M. V., 2005, Proceedings of the CAiSE'05 FORUM. 17th Conference on Advanced Information Systems Engineering, P119
   DU G, 2006, LECT NOTES COMPUTER, V4034, P335
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson L, 2006, INT J SOFTW ENG KNOW, V16, P885, DOI 10.1142/S0218194006003014
   Karlsson L, 2006, LECT NOTES COMPUT SC, V4034, P19
   Kitchenham B., 2004, ARXIV
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lindgren M, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P320, DOI 10.1109/ASWEC.2008.32
   MAURICE S, 2006, DECISION SUPPORT VAL, P247
   MINGSHU L, 2006, P 28 INT C SOFTW ENG, P423
   Momoh J., 2006, Software Process Improvement and Practice, V11, P295, DOI 10.1002/spip.273
   Ngo-The A, 2005, ICCI 2005: FOURTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS - PROCEEDINGS, P301
   Ngo-The A, 2004, PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, P168, DOI 10.1109/COGINF.2004.1327472
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Pfahl Dietmar, 2007, Software Process: Improvement and Practice, V12, P475, DOI 10.1002/spip.336
   Regnell B, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P254
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Regnell B, 2007, LECT NOTES COMPUT SC, V4542, P277
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruhe G, 2003, INT J SOFTW ENG KNOW, V13, P345, DOI 10.1142/S0218194003001378
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   RUHE G, 2005, P 38 ANN HAW INT C S, pB313
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Saliu O, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P14, DOI 10.1109/SEW.2005.42
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   WOHLIN C, 2005, P INT S EMP SOFTW EN
   Ziemer S, 2007, LECT NOTES COMPUT SC, V4764, P106
NR 38
TC 93
Z9 100
U1 8
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2010
VL 52
IS 3
BP 237
EP 248
DI 10.1016/j.infsof.2009.11.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 571PF
UT WOS:000275765900001
DA 2024-07-18
ER

PT J
AU Kaczor, O
   Guéhéneuc, YG
   Hamel, S
AF Kaczor, Olivier
   Gueheneuc, Yann-Gael
   Hamel, Sylvie
TI Identification of design motifs with pattern matching algorithms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Design patterns; Design motifs; Identification of occurrences;
   Bit-vector; Automata simulation; Experimental validation
ID SEARCH
AB Design patterns are important in software maintenance because they help in understanding and re-engineering systems. They propose design motifs, solutions to recurring design problems. The identification of occurrences of design motifs in large systems consists of identifying classes whose structure and organization match exactly or approximately the structure and organization of classes as suggested by the motif. We adapt two classical approximate string matching algorithms based on automata simulation and bit-vector processing to efficiently identify exact and approximate occurrences of motifs. We then carry out two case studies to show the performance, precision, and recall of our algorithms. In the first case study, we assess the performance of our algorithms on seven medium-to-large systems. In the second case study, we compare our approach with three existing approaches (an explanation-based constraint approach, a metric-enhanced explanation-based constraint approach, and a similarity scoring approach) by applying the algorithms on three small-to-medium size systems, JHOTDRAW, JUZZLE, and QUICKUML. Our studies show that approximate string matching based on bit-vector processing provides efficient algorithms to identify design motifs. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Kaczor, Olivier; Gueheneuc, Yann-Gael; Hamel, Sylvie] Univ Montreal, DIRO, Montreal, PQ H3C 3J7, Canada.
C3 Universite de Montreal
RP Guéhéneuc, YG (corresponding author), Ecole Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
EM kaczorol@iro.umontreal.ca; guehene@iro.umontreal.ca;
   hamelsyi@iro.umontreal.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019
OI Hamel, Sylvie/0000-0002-8941-2284
FU FQRNT; NSERC
FX The authors are grateful to Jean-Yves Potvin for all the fruitful
   discussions. This work has been partially funded by FQRNT and NSERC.
CR Agerbo E, 1998, ACM SIGPLAN NOTICES, V33, P134, DOI 10.1145/286942.286952
   [Anonymous], 1961, Surveys, DOI [10.1070/RM1961v016n05ABEH004112, DOI 10.1070/RM1961V016N05ABEH004112]
   [Anonymous], P 1 ECOOP WORKSH BUI
   [Anonymous], 1997, ACM SIGACT NEWS
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   BAEZAYATES R, 1992, COMMUN ACM, V35, P74, DOI 10.1145/135239.135243
   Bergeron A., 2002, International Journal of Foundations of Computer Science, V13, P53, DOI 10.1142/S0129054102000947
   Beyer D, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P216, DOI 10.1109/WCRE.2003.1287252
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Ciupke O., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P18, DOI 10.1109/TOOLS.1999.787532
   Dantzig G. B., 2003, Linear Programming 2: Theory and Extensions
   EISELT HA, 1994, CRT960
   EPPSTEIN D, 1995, PROCEEDINGS OF THE SIXTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P632
   Gamma Erich., 1994, DESIGN PATTERNS
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   GUEHENEUC YG, 2001, P 1 IJCAI WORKSH MOD, P57
   GUEHENEUC YG, 2004, P 19 C OBJ OR PROGR, P301
   Holub J., 1997, Proceedings of the Prague Stringology Club Workshop '97, P39
   HOLUB J, 1998, P 3 INT WORKSH IMPL, P92
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   JAHNKE JH, P 6 EUR SOFTW ENG C, P193
   JUSSIEN N, 2001, 1 CP WORKSH US INT C
   Kaczor O, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P173
   Kampffmeyer H, 2007, LECT NOTES COMPUT SC, V4735, P211
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Koskinen Jussi, 2004, SOFTWARE MAINTENANCE
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   LIENTZ BP, 1981, COMMUN ACM, V24, P763, DOI 10.1145/358790.358796
   Mens K, 1999, TOOLS, V29, P33, DOI 10.1109/TOOLS.1999.778997
   Myers G, 1999, J ACM, V46, P395, DOI 10.1145/316542.316550
   NEEDLEMAN SB, 1970, J MOL BIOL, V48, P443, DOI 10.1016/0022-2836(70)90057-4
   Quilici A, 1997, J AUTOMATED SOFTWARE, V5, P347
   SCHEGLOV K, 2004, ECLIPSE PROFILER
   SMITH TF, 1981, J MOL BIOL, V147, P195, DOI 10.1016/0022-2836(81)90087-5
   Thimbleby H, 2003, SOFTWARE PRACT EXPER, V33, P1081, DOI 10.1002/spe.540
   THOMPSON K, 1968, COMMUN ACM, V11, P419, DOI 10.1145/363347.363387
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   UKKONEN E, 1985, J ALGORITHM, V6, P132, DOI 10.1016/0196-6774(85)90023-9
   WENDEHALS L, 2003, P 1 ICSE WORKSH DYN
   Wuyts R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P112, DOI 10.1109/TOOLS.1998.711007
NR 44
TC 11
Z9 13
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2010
VL 52
IS 2
BP 152
EP 168
DI 10.1016/j.infsof.2009.08.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 540WW
UT WOS:000273372400003
DA 2024-07-18
ER

PT J
AU Nugroho, A
AF Nugroho, Ariadi
TI Level of detail in UML models and its impact on model comprehension: A
   controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML model; Level of detail; Comprehension; Experiment; Model quality
AB Previous studies have shown that the style and rigor used in UML models vary widely across software projects [1-3]. However. notwithstanding the varying use of styles and rigor, little research has been conducted to investigate the drivers and effects of using different styles and rigor in modeling on software development. In this paper, we evaluate Level of Detail (LoD) in UML models as a form of style and rigor in UML modeling. Using a UML model of a library system, we experimentally investigate the impact of LoD on model comprehension. More specifically, we explore whether LoD in UML models affects the correctness and efficiency in comprehending UML models. Using two independent groups of graduate students majoring in computer science, we performed a controlled experiment. The results of the experiment confirm the significant effect of LoD in UML models on model comprehension. Nevertheless, replication of this study is necessary, especially in contexts that involve professional software engineers, to improve the generailizability of the results. (C) 2009 Elsevier B.V. All rights reserved.
C1 Leiden Univ, LIACS, NL-2333 CA Leiden, Netherlands.
C3 Leiden University - Excl LUMC; Leiden University
RP Nugroho, A (corresponding author), Leiden Univ, LIACS, Niels Bohrweg 1, NL-2333 CA Leiden, Netherlands.
EM anugroho@hacs.nl
FU STW (Stichting Technische Wetenschappen) The Netherlands
FX This work was accomplished under the FINESSE (des7015) project supported
   by the STW (Stichting Technische Wetenschappen) The Netherlands. I would
   like to thank the Students of Software Architecting 2007 at TU/e who
   have participated in the experiment. I also thank the editors of this
   Special Issue oil Quality in Modeling, as well as the anonymous
   reviewers for their constructive feedbacks that help improve this paper.
   Finally, I would like to express my appreciation to Dr. Michel R.V.
   Chaudron without whose valuable contribution this work Would not have
   been possible.
CR [Anonymous], EXPT SOFTWARE ENG
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   CRUZLEMUS J, ASSESSING UNDERSTAND
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Genero M, 2007, EMPIR SOFTW ENG, V12, P517, DOI 10.1007/s10664-007-9038-4
   Genero M, 2008, LECT NOTES COMPUT SC, V5301, P280, DOI 10.1007/978-3-540-87875-9_20
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   KRUS DJ, 1977, EDUC PSYCHOL MEAS, V37, P257, DOI 10.1177/001316447703700134
   Lange CFJ, 2006, IEEE SOFTWARE, V23, P40, DOI 10.1109/MS.2006.50
   Nugroho A, 2008, MODEL DRIVEN SOFTWAR, P1
   NUGROHO A, EXPT MAT
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   *OBJ MAN GROUP, UN MOD LANG
   Oppenheim A.N., 1996, QUESTIONNAIRE DESIGN
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Purchase HelenC., 2001, APVIS 01, P113
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   *SPSS, SPSS STAT AN TOOL
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Torchiano M, 2004, PROG COMPREHEN, P226, DOI 10.1109/WPC.2004.1311064
   WONG K, 2005, IWPC 05, P317
NR 24
TC 41
Z9 44
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2009
VL 51
IS 12
BP 1670
EP 1685
DI 10.1016/j.infsof.2009.04.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 510ZR
UT WOS:000271133600004
DA 2024-07-18
ER

PT J
AU Miranda, E
   Bourque, P
   Abran, A
AF Miranda, Eduardo
   Bourque, Pierre
   Abran, Alain
TI Sizing user stories using paired comparisons
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile estimation; Triangulation; Estimating by analogy; Paired
   comparisons; Software sizing; Expert estimation; Expert judgment;
   Project planning; Incomplete cyclic designs
AB Agile estimation approaches usually start by sizing the user stories to be developed by comparing them to one another. Various techniques, with varying degrees of formality, are used to perform the comparisons - plain contrasts, triangulation, planning poker, and voting. This article proposes the use of a modified paired comparison method in which a reduced number of comparisons is selected according to an incomplete cyclic design. Using two sets of data, the authors show that the proposed method produces good estimates, even when the number of comparisons is reduced by half those required by the original formulation of the method. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Miranda, Eduardo] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
   [Bourque, Pierre; Abran, Alain] Univ Quebec, Ecole Technol Super, Ste Foy, PQ G1V 2M3, Canada.
C3 Carnegie Mellon University; University of Quebec
RP Miranda, E (corresponding author), Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
EM mirandae@andrew.cmu.edu
RI Bourque, Pierre/AAO-4209-2020; Abran, Alain/I-2493-2016
OI Bourque, Pierre/0000-0002-3302-6392; Abran, Alain/0000-0003-2670-9061;
   Miranda, Eduardo/0000-0001-8195-7506
CR Aguarón J, 2003, EUR J OPER RES, V147, P137, DOI 10.1016/S0377-2217(02)00255-2
   [Anonymous], 1986, Software Engineering Metrics and Models
   BARZILAI J, 1987, OPERATIONS RES LETT, V6
   BOZOKI G, 1993, EXPERT JUDGMENT BASE
   BOZOKI G, 1991, ISPA 13 ANN C
   Burton M.L., 2003, FIELD METHOD, V15, P115, DOI [DOI 10.1177/1525822X03015002001, 10.1177/1525822X03015002001]
   COHN M, 2006, TUTORIAL AGILE ESTIM
   Cohn Mike, 2006, AGILE ESTIMATING PLA
   CRAWFORD G, 1985, J MATH PSYCHOL, V29, P387, DOI 10.1016/0022-2496(85)90002-1
   Dalkey N., 1969, DELPHI METHOD EXPT S
   DAVID H, 2007, ENCY STAT SCI
   Hihn J, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P140, DOI 10.1109/METRIC.2004.1357898
   Miranda E, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.903173
   MIRANDA E, 2000, 22 INT C SOFTW ENG, P597
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   Song QB, 2005, EMPIR SOFTW ENG, V10, P235, DOI 10.1007/s10664-004-6193-8
   Spence I., 1982, PROXIMITY PREFERENCE, P29
   SPENCE I, 1974, PSYCHOMETRIKA, V39
   *WIK, 2009, STOR POINTS
NR 20
TC 12
Z9 14
U1 2
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2009
VL 51
IS 9
BP 1327
EP 1337
DI 10.1016/j.infsof.2009.04.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 478BC
UT WOS:000268561700004
DA 2024-07-18
ER

PT J
AU Opdahl, AL
   Sindre, G
AF Opdahl, Andreas L.
   Sindre, Guttorm
TI Experimental comparison of attack trees and misuse cases for security
   threat identification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security requirements; Security modelling; Security threat
   identification; Misuse cases; Attack trees; Experiments
ID REQUIREMENTS
AB A number of methods have been proposed or adapted to include security in the requirements analysis stage, but the industrial take-up has been limited and there are few empirical and comparative evaluations. This paper reports on a pair of controlled experiments that compared two methods for early elicitation of security threats, namely attack trees and misuse cases. The 28 and 35 participants in the two experiments solved two threat identification tasks individually by means of the two techniques, using a Latin-Squares design to control for technique and task order. The dependent variables were effectiveness of the techniques measured as the number of threats found, coverage of the techniques measured in terms of the types of threats found and perceptions of the techniques measured through a post-task questionnaire based on the Technology Acceptance Model. The only difference was that, in the second experiment, the participants were given a pre-drawn use-case diagram to use as a starting point for solving the tasks. In the first experiment, no pre-drawn use-case diagram was provided. The main finding was that attack trees were more effective for finding threats, in particular when there was no pre-drawn use-case diagram. However, the participants had similar opinions of the two techniques, and perception of a technique was not correlated with performance with that technique. The study underlines the need for further comparisons in a broader range of settings involving additional techniques, and it suggests several concrete experiments and other paths for further work. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Opdahl, Andreas L.] Univ Bergen, Dept Informat Sci & Media Studies, N-5020 Bergen, Norway.
   [Sindre, Guttorm] Norwegian Univ Sci & Technol, IDI NTNU, Dept Comp & Informat Sci, N-7491 Trondheim, Norway.
C3 University of Bergen; Norwegian University of Science & Technology
   (NTNU)
RP Opdahl, AL (corresponding author), Univ Bergen, Dept Informat Sci & Media Studies, POB 7800, N-5020 Bergen, Norway.
EM Andreas.Opdahl@uib.no
RI Opdahl, Andreas Lothe/B-5508-2015
OI Opdahl, Andreas Lothe/0000-0002-3141-1385; Sindre,
   Guttorm/0000-0001-5739-8265
CR ALEXANDER IF, 2002, P 10 ANN IEEE JOINT
   Amoroso EG., 1994, Fundamentals of computer security technology
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2005, SECURITY PATTERNS IN
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   BOSWELL A, 1995, IEEE T SOFTWARE ENG, V21, P63, DOI 10.1109/32.345822
   BREIVIK GF, 2002, N5020 U BERG DEP INF
   Buyens K, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P1034
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   *CCIMB, 1999, CCIMB99031
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DIALLO MH, 2006, P REFSQ 06 LUX
   DIMITRAKOS T, 2003, P 2 IFIP C E COMM E, P159
   Easterbrook S, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P199, DOI 10.1109/RE.2005.23
   EKREMSVIK S, 2004, THESIS NTNU TRONDHEI
   Field A., 2003, How to Design and Report Experiments
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   GEGICK M, 2005, P SOFTW ENG SEC SYST
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   Giorgini P, 2003, LECT NOTES COMPUT SC, V2813, P263
   Hall A, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.976937
   Hopkins W.G., 2001, NEW VIEW STAT
   Jackson M., 2001, Problem Frames
   Jurjens Jan., 2002, LECT NOTES COMPUTER, V2460, P412, DOI DOI 10.1007/3-540-45800-X_
   Kewley DL, 2001, IEEE T SYST MAN CY A, V31, P331, DOI 10.1109/3468.935052
   Laleau R., 2006, Software Process Improvement and Practice, V11, P487, DOI 10.1002/spip.291
   Levin D, 2003, DARPA INFORMATION SURVIVABILITY CONFERENCE AND EXPOSITION, VOL I, PROCEEDINGS, P110, DOI 10.1109/DISCEX.2003.1194877
   Lin L., 2004, P 12 IEEE INT REQ EN
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   MAEHRE M, 2005, THESIS NTNU TRONDHEI
   Massacci F, 2005, COMPUT STAND INTER, V27, P445, DOI 10.1016/j.csi.2005.01.003
   MASSACCI F, 2006, SOCIAL MODELING REQU
   Matulevicius R, 2007, LECT NOTES COMPUT SC, V4542, P18
   Mayer N., 2007, P 1 INT C RES CHALL, P121
   McDermott J., 1999, P 15 ANN COMP SEC AP
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   NCUBE C, 2007, LECT NOTES COMPUTER, V4542
   PETIT M, 2004, KNOWLEDGE MAP RES IN, P278
   RODRIGUEZ A, 2006, LECT NOTES COMPUTER, V4231
   Rodriguez A., 2005, P 3 INT WORKSH SEC I, P287
   Schneier B., 2000, Secrets and Lies: Digital Security in a Networked World
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sindre G., 2002, P 2 S REQ ENG INF SE
   STALHANE T, 2007, ER 07 UNPUB
   STAMATIOU Y, 2003, P MED INF EUR MIE 20, P206
   VANLAMSWEERDE A, 2003, P RHAS 03, P49
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   [No title captured]
NR 49
TC 71
Z9 74
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2009
VL 51
IS 5
SI SI
BP 916
EP 932
DI 10.1016/j.infsof.2008.05.013
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425OY
UT WOS:000264648200008
DA 2024-07-18
ER

PT J
AU Arroyo, S
   Sicilia, MA
AF Arroyo, Sinuhe
   Sicilia, Miguel-Angel
TI SOPHIE: Use case and evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Semantic services; Choreography; Evaluation
ID ONTOLOGIES
AB Services communicate with each other by exchanging self-contained messages. Depending on the specific requirements of the business model they serve and the application domain for which services were deployed, a number of mismatches (i.e. sequence and cardinality of messages exchanges, structure and format of messages and content semantics), can occur which prevent interoperation among a priori compatible services. This paper presents the evaluation of SOPHIE, a conceptual framework for supporting the conceptualization of ontology-based services choreographies. In doing so a three fold approach is taken that considers formal, epistemological and technical aspects. The formal evaluation tries to prove the consistency, completeness and conciseness of ontological model used. The epistemological evaluation enumerates the improvements and differentiating aspect of SOPHIE with respect to existing related work and reviews a number of application areas where the work was successfully applied. Finally, the technical feasibility evaluation tries to demonstrate the viability of the approach from the point of view of the engineering process required to allow the interaction of heterogeneous Semantic Services. (c) 2008 Elsevier B. V. All rights reserved.
C1 [Arroyo, Sinuhe; Sicilia, Miguel-Angel] Univ Alcala, Polytech Sch, Dept Comp Sci, Madrid, Spain.
C3 Universidad de Alcala
RP Arroyo, S (corresponding author), Univ Alcala, Polytech Sch, Dept Comp Sci, Ctra Barcelona Km 33-6, Madrid, Spain.
EM sinuhe.arroyo@alu.uah.es; msicilia@uah.es
RI Sicilia, Miguel-Angel/F-5002-2012
OI Miguel Angel, Sicilia Urban/0000-0003-3067-4180
CR ARROYO S, 2005, J DIGITAL INFORM MAN, V3, P972
   ARROYO S, 2005, LEARNING OBJECTS LEA, V1
   ARROYO S, 2007, UBIQUITOUS PERVASIVE
   ARROYO S, 2008, J NETWORKS IN PRESS
   Arroyo S, 2007, COMPUT IND, V58, P487, DOI 10.1016/j.compind.2006.10.002
   Arroyo S, 2007, COMPUT STAND INTER, V29, P325, DOI 10.1016/j.csi.2006.05.004
   BARROS A, 2005, CRITICAL OVERVIEW WE
   BOOCH G, 1999, UNIFIED MODELLING LA
   Bussler C., 2003, B2B integration: Concepts and architecture
   Cimpian E., 2005, D13 7 V0 1 PROCESS M
   DEBRUIJN J, 2005, WSML FAMILY REPRESEN
   *DIP, DAT INF PROC SEM WEB
   DUKE A, D8 2 PLATFORM REQUIR
   Fensel D., 2001, Ontologies: Silver bullet for knowledge management and electronic commerce
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Maedche A, 2003, IEEE INTELL SYST, V18, P26, DOI 10.1109/MIS.2003.1193654
   ROMAN D, 2004, WEB SERVICE MODELING
   ROMAN D, 2005, D14V0 1 ONTOLOGY BAS
   *W3C REC, 2004, OWL WEB ONT LANG OV
   Wagner F., 2006, MODELING SOFTWARE FI
   WATKINS S, 2005, D8 3 WP 8 CASE STUDY
   *WSML, 2005, WSML VAL V1 2 D16 1V
   2003, OWL SERVICES
NR 24
TC 5
Z9 5
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2008
VL 50
IS 12
BP 1266
EP 1280
DI 10.1016/j.infsof.2008.01.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 358CS
UT WOS:000259894800006
DA 2024-07-18
ER

PT J
AU Castelli, G
   Mamei, M
   Zambonelli, F
AF Castelli, Gabriella
   Mamei, Marco
   Zambonelli, Franco
TI Engineering contextual knowledge for autonomic pervasive services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE context-awareness; autonomic services; W4 model; knowledge engineering;
   critical survey
AB In this paper, we identify the key software engineering challenges introduced by the need of accessing and exploiting huge amount of heterogeneous contextual information. Following, we survey the relevant proposals in the area of context-aware pervasive computing, data mining and granular computing discussing their potentials and limitations with regard to their adoption in the development of context-aware pervasive services. On these bases, we propose the W4 model for contextual data and show how it can represent a simple yet effective model to enable flexible general-purpose management of contextual knowledge by pervasive services. A summarizing discussion and the identification of current limitations and open research directions conclude the paper. (c) 2007 Elsevier B.V. All rights reserved.
C1 Univ Modena & Reggio Emilia, Dipartimento Sci Metodi Ingn, I-42100 Reggio Emilia, Italy.
C3 Universita di Modena e Reggio Emilia
RP Castelli, G (corresponding author), Univ Modena & Reggio Emilia, Dipartimento Sci Metodi Ingn, Via Amendola 2 Pad Morselli, I-42100 Reggio Emilia, Italy.
EM gabrielia.casteili@unimore.it; marco.mamei@unimore.it;
   franco.zambonelli@unimore.it
OI mamei, marco/0000-0003-3918-2107; Zambonelli, Franco/0000-0002-6837-8806
CR AHUJA S, 1986, COMPUTER, V19, P26, DOI 10.1109/MC.1986.1663305
   Al-Naymat G, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P393, DOI 10.1145/1244002.1244095
   [Anonymous], J NANCHANG I TECHNOL
   BARTOLINI I, 2003, P 11 IT S ADV DAT SY, P293
   BAUMGARTEN M, 2006, INT C SELF ORG MULT
   Bicocchi N, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P66
   Bontempi G., 2005, proceedings of 1st International Workshop on Data Mining in Sensor Networks as part of the SIAM International Conference on Data Mining, P3
   Bravo J, 2006, J UNIVERS COMPUT SCI, V12, P270
   Camossi E, 2006, INT J GEOGR INF SCI, V20, P511, DOI 10.1080/13658810600607451
   Castelli G, 2007, FIFTH ANNUAL IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P229, DOI 10.1109/PERCOM.2007.4
   Ceglar A, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1132956/1132958
   Chen H, 2004, PROCEEDINGS OF MOBIQUITOUS 2004, P258
   Chong CY, 2003, P IEEE, V91, P1247, DOI 10.1109/JPROC.2003.814918
   DEFENT I, 2005, P 13 IT S ADV DAT
   Dey A.K., 2000, WORKSH WHAT WHO WHER
   Dey AK, 2001, HUM-COMPUT INTERACT, V16, P97, DOI 10.1207/S15327051HCI16234_02
   Dourish P, 2004, PERS UBIQUIT COMPUT, V8, P19, DOI 10.1007/s00779-003-0253-8
   Estrin D., 2002, IEEE Pervasive Computing, V1, P59, DOI 10.1109/MPRV.2002.993145
   Fayyad U., 1996, Data mining to Knowledge Discovery in Databases
   GALLOWAY J, 2006, P 3 AS PAC C CONC MO
   Ganesan D, 2003, ACM SIGCOMM COMP COM, V33, P143, DOI 10.1145/774763.774786
   Gips J, 2006, PERCOM 2006: FOURTH ANNUAL IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P159
   Greenberg S, 2001, HUM-COMPUT INTERACT, V16, P257, DOI 10.1207/S15327051HCI16234_09
   Gu T, 2005, J NETW COMPUT APPL, V28, P1, DOI 10.1016/j.jnca.2004.06.002
   Henricksen K., 2006, Journal of Pervasive and Mobile Computing, V2, P37, DOI DOI 10.1109/MPRV.2003.1203753
   Hightower J, 2001, COMPUTER, V34, P57, DOI 10.1109/2.940014
   HONG J, 2002, EXT ABSTR 2002 C HUM
   Julien C, 2006, IEEE T SOFTWARE ENG, V32, P281, DOI 10.1109/TSE.2006.47
   Kulakov A., 2005, proceedings of 1st International Workshop on Data Mining in Sensor Networks as part of the SIAM International Conference on Data Mining, P10
   Lee D, 2007, FIFTH ANNUAL IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P419, DOI 10.1109/PERCOMW.2007.95
   Lehmann O, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P297, DOI 10.1109/PERCOM.2004.1276867
   Manzalini A, 2006, DIS 2006: IEEE WORKSHOP ON DISTRIBUTED INTELLIGENT SYSTEMS: COLLECTIVE INTELLIGENCE AND ITS APPLICATIONS, PROCEEDINGS, P383
   McConnell S., 2005, proceedings of 1st International Workshop on Data Mining in Sensor Networks as part of the SIAM International Conference on Data Mining, P28
   MOTTOLA G, 2006, P 3 INT MIDDL DOCT S, P6
   Newton R., 2004, Proceedings of the 1st International Workshop on Data Management for Sensor Networks, P78, DOI DOI 10.1145/1052199.1052213
   Patterson D, 2004, LECT NOTES COMPUTER, P433
   PATTERSON D, P IEEE INT S WEAR CO, P44
   Paulos Eric., 2004, C HUM FACT COMP SYST, P223, DOI [10.1145/985692.985721, DOI 10.1145/985692.985721]
   Pedrycz W., 2001, GRANULAR COMPUTING E
   Pentland A, 2005, PATTERN RECOGN LETT, V26, P503, DOI 10.1016/j.patrec.2004.08.012
   Philipose M, 2004, IEEE PERVAS COMPUT, V3, P50, DOI 10.1109/MPRV.2004.7
   RAMANATHAN N, 2006, P 5 INT C INF COMM T
   ROUSSAKI I, 2006, P 4 ANN IEEE INT C P
   Roussaki I, 2007, J NETW SYST MANAG, V15, P57, DOI 10.1007/s10922-006-9053-6
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   SCHMIDT A, 1999, P 1 INT S HANDH UB C, P187
   Sen K., 2005, P 10 EUROPEAN SOFTWA
   Verhein F, 2006, LECT NOTES COMPUT SC, V3882, P187
   Want R, 2006, IEEE PERVAS COMPUT, V5, P25, DOI 10.1109/MPRV.2006.2
   Ward JA, 2006, IEEE T PATTERN ANAL, V28, P1553, DOI 10.1109/TPAMI.2006.197
   Yao Y, 2006, 2006 BIOMETRICS SYMPOSIUM: SPECIAL SESSION ON RESEARCH AT THE BIOMETRIC CONSORTIUM CONFERENCE, P131
NR 51
TC 7
Z9 7
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 36
EP 50
DI 10.1016/j.infsof.2007.10.009
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 248ZT
UT WOS:000252196700006
DA 2024-07-18
ER

PT J
AU Snook, C
   Poppleton, M
   Johnson, I
AF Snook, Colin
   Poppleton, Michael
   Johnson, Ian
TI Rigorous engineering of product-line requirements: A case study in
   failure management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE International Requirements Engineering Conference/12th
   International Workshop on Requirements Engineering - Foundation for
   Software Quality
CY 2006
CL Luxembourg, LUXEMBOURG
SP IEEE
DE formal specification; generic requirements; product line; refinement;
   tools; UML-B; verification
ID FAMILIES
AB We consider the failure detection and management function for engine control systems as an application domain where product line engineering is indicated. The need to develop a generic requirement set - for subsequent system instantiation - is complicated by the addition of the high levels of verification demanded by this safety-critical domain, subject to avionics industry standards. We present our case study experience in this area as a candidate method for the engineering, validation and verification of generic requirements using domain engineering and Formal Methods techniques and tools. For a defined class of systems, the case study produces a generic requirement set in UML and an example system instance. Domain analysis and engineering produce a validated model which is integrated with the formal specification/verification method B by the use of our UML-B profile. The formal verification both of the generic requirement set, and of a simple system instance, is demonstrated using our U2B, ProB and prototype Requirements Manager tools. This work is a demonstrator for a tool-supported method which will be an output of EU project RODIN (This work is conducted in the setting of the EU funded Research Project: IST 511599 RODIN (Rigorous Open Development Environment for Complex Systems) http://rodin.cs.ncl.ac.uk/). The use of existing and prototype formal verification and support tools is discussed. The method, developed in application to this novel combination of product line, failure management and safety-critical engineering, is evaluated and considered to be applicable to a wide range of domains. (c) 2007 Elsevier B.V. All rights reserved.
C1 [Snook, Colin; Poppleton, Michael] Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
   [Johnson, Ian] AT Engine Controls, Portsmouth PO1 3AQ, Hants, England.
C3 University of Southampton
RP Poppleton, M (corresponding author), Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
EM cfs@ecs.soton.ac.uk; mrp@ecs.soton.ac.uk; I.Johnson@atenginecontrols.com
OI Snook, Colin/0000-0002-0210-0983
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   ABRIAL JR, 1998, CLEARSY
   Amey P, 2004, PRACTICAL ELEMENTS OF SAFETY, P3
   [Anonymous], 1997, Object-oriented software construction
   ARIEF B, 2005, IST511599RODIN EU
   BACK RJR, 1981, J COMPUT SYST SCI, V23, P49, DOI 10.1016/0022-0000(81)90005-2
   BACK RJR, 1988, ACTA INFORM, V25, P593, DOI 10.1007/BF00291051
   Batory D, 2004, LECT NOTES COMPUT SC, V3116, P3
   Belcastro CM, 2001, P AMER CONTR CONF, P2623, DOI 10.1109/ACC.2001.946268
   BOOCH G, 1998, UNIFIED MODELING LAN
   CANSELL D, 2004, B4FREE SET TOOLS B D
   Chen P., 1976, ENTITY RELATIONSHIP, V1
   *CONIPF PROJ, CONF IND PROD FAM
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   D'Souza D., 1998, OBJECTS COMPONENTS F
   Deelstra S, 2004, LECT NOTES COMPUT SC, V3154, P165
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   DEHBONEI B, 1995, APPL FORMAL METHODS, P227
   *EUROCAE ED12B, SOFTW CONS AIRB SYST
   Faulk SR, 2001, P 5 IEEE INT S REQ E
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   GOGOLLA M, 2006, UML BASED SPECIFICAT
   GOGOLLA M, 2003, LNCS, V2863
   HE CAR, 1986, LNCS, V213
   Lam W, 1997, J SYST SOFTWARE, V38, P197, DOI 10.1016/S0164-1212(96)00151-3
   LAM W, 1997, ACM SOFTW ENG NOTES, V22, P39
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   Lutz RR, 2003, J SYST SOFTWARE, V66, P253, DOI 10.1016/S0164-1212(02)00081-X
   Macala RR, 1996, IEEE SOFTWARE, V13, P57, DOI 10.1109/52.493021
   Mannion Mike, 2002, LNCS, V2379, P176
   Metayer C., 2005, IST511599RODIN EU
   PADMANABHAN P, 2005, AUTOMAT SOFTW ENG, V12, P447
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Prieto-Diaz R., 1990, SIGSOFT Software Engineering Notes, V15, P47, DOI 10.1145/382296.382703
   *RTCA, 178B RTCA DO
   SCHNEIDER S, 2001, B METHODS
   SNOOK C, 2004, UML B SPECIFICATION, pCH5
   SNOOK C, 2004, P 3 INT WORKSH CRIT, pCH5
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   TRACZ W, 1995, ACM SIGSOFT SOFTWARE, V20, P49
   *UK MIN DEF, 1997, DEF STAN 00 55 REQUI
   Wasowski A, 2004, LECT NOTES COMPUT SC, V3154, P73
   Zhang W, 2004, LECT NOTES COMPUT SC, V3308, P115
NR 44
TC 0
Z9 0
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 112
EP 129
DI 10.1016/j.infsof.2007.10.010
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 248ZT
UT WOS:000252196700012
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU McAvoy, J
   Butler, T
AF McAvoy, John
   Butler, Tom
TI The impact of the Abilene Paradox on double-loop learning in an agile
   team
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XP adoption; triple-loop learning; social factors; qualitative approach;
   participant observation
ID SOFTWARE-DEVELOPMENT; GROUPTHINK; MANAGEMENT
AB This paper presents a qualitative investigation of learning failures associated with the introduction of a new software development methodology by a project team. This paper illustrates that learning is more than the cognitive process of acquiring a new skill; learning also involves changes in behaviour and even beliefs. Extreme Programming (XP), like other software development methodologies, provides a set of values and guidelines as to how software should be developed. As these new values and guidelines involve behavioural changes, the study investigates the introduction of XP as a new learning experience. Researchers use the concepts of single and double-loop learning to illustrate how social actors learn to perform tasks effectively and to determine the best task to perform. The concept of triple-loop learning explains how this learning process can be ineffective, accordingly it is employed to examine why the introduction of XP was ineffective in the team studied. While XP should ideally foster double-loop learning, triple-loop learning can explain why this does not necessarily occur. Research illustrates how power factors influence learning among groups of individuals; this study focuses on one specific power factor - the power inherent in the desire to conform. The Abilene Paradox describes how groups can make ineffective decisions that are contrary to that which group members personally desire or believe. Ineffective decision-making occurs due to the desire to conform among group members; this was shown as the cause of ineffective learning in the software team studied. This desire to conform originated in how the project team cohered as a group, which was, in turn, influenced by the social values embraced by XP. (C) 2007 Elsevier B.V. All rights reserved.
C1 Univ Coll Cork, Cork, Ireland.
C3 University College Cork
RP McAvoy, J (corresponding author), Univ Coll Cork, Cork, Ireland.
EM j.mcavoy@ucc.ie
OI Butler, Tom/0000-0002-4053-183X; McAvoy, John/0000-0002-2628-5054
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Aguanno K., 2005, MANAGING AGILE PROJE
   [Anonymous], SOFTWARE DEV LEASH
   [Anonymous], 1971, The Psychology of Computer Programming
   ARGYRIS C, 1977, HARVARD BUS REV, V55, P115
   ARGYRIS C, 1976, ADMIN SCI QUART, V21, P363, DOI 10.2307/2391848
   ARGYRIS C, 1994, HARVARD BUS REV, V72, P77
   Argyris C., 1996, Organizational Learning II Theory, Method, and Practice
   Argyris C., 1995, Journal of Managerial Psychology, V10, P20, DOI [DOI 10.1108/02683949510093849, 10.1108/02683949510093849]
   Argyris C, 2002, ACAD MANAG LEARN EDU, V1, P206, DOI 10.5465/AMLE.2002.8509400
   ARONSON E, 1968, GROUP DYNAMICS RES T, P119
   Asch S., 1952, Social psychology
   ASCH SE, 1955, SCI AM, V193, P31, DOI 10.1038/scientificamerican1155-31
   BANERJEE A, 1992, Q J ECON, V52, P797
   BARON R, 1999, GROUP PROCESS GROUP
   Bateson G., 1972, STEPS ECOLOGY MIND C
   BENYONDAVIES P, 2004, J ENTERPRISE INFORM, V17, P276, DOI DOI 10.1108/17410390410548689
   Blackman D., 2004, LEARN ORGAN, V11, P11, DOI [https://doi.org/10.1108/09696470410515706, DOI 10.1108/09696470410515706, 10.1108/09696470410515706]
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B, 2003, LECT NOTES COMPUT SC, V2753, P1
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   BOJE DM, 1982, MANAGE SCI, V28, P1187, DOI 10.1287/mnsc.28.10.1187
   Bokeno RM, 2003, J ORGAN CHANGE MANAG, V16, P633, DOI 10.1108/09534810310502577
   CARLISLE A, 2001, ORGAN DYN, V17, P40
   Cartwright D., 1968, Group Dynamics: research and theory, P139
   Cartwright Roger., 2002, Mastering Team Leadership
   Clegg S., 2005, Managing and Organization: An Introduction to Theory and Practice
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   DENHARDT R, 2002, MANAGING BEHAV PUBLI
   Dumville JC, 1999, J MANAGE ENG, V15, P6
   Easterby-Smith M, 2003, ACAD MANAGE EXEC, V17, P51, DOI 10.5465/AME.2003.10025192
   Erickson J, 2005, J DATABASE MANAGE, V16, P88, DOI 10.4018/jdm.2005100105
   Erlandson D.A., 1993, DOING NATURALISTIC I
   EZEY P, 2003, QUALITATIVE RES, V3, P191
   FESTINGER L, 1959, CLASSIC CONT READING, P194
   Festinger Leon., 1968, GROUP DYNAMICS RES T, V3rd, P125
   FINNEGAN P, 2003, INFORM TECHNOLOGY PE, V16, P461, DOI DOI 10.1108/09593840310509662
   Fitzgerald B, 1997, INFORM SYST J, V7, P201, DOI 10.1046/j.1365-2575.1997.d01-18.x
   Flood R.L., 1996, DIVERSITY MANAGEMENT
   Fowler M., 2001, Software Development, V9, P28
   Griffin E., 1997, A first look at communication theory
   HARVEY JB, 1974, ORGAN DYN, V3, P63, DOI 10.1016/0090-2616(74)90005-9
   Harvey M, 2004, ORGAN DYN, V33, P215, DOI 10.1016/j.orgdyn.2004.01.008
   Harvey SC, 2001, J MOL NEUROSCI, V17, P35, DOI 10.1385/JMN:17:1:35
   Hazzan O, 2004, LECT NOTES COMPUT SC, V3092, P303
   Highsmith J. A., 2004, Agile Project Management: Creating Innovative Products
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Janis I. L., 1972, VICTIMS GROUPTHINK P
   JARVINEN P, 2002, EBUSINESS WORKPLACE, P155
   Jorgensen D.L., 1989, Participant Observation: A Methodology for Human Studies, p133 pp
   KANTER R, 2001, ORGAN DYN, V17, P37
   Kent M.V., 1994, Small group research: A handbook, P107
   Kim Y., 2001, Public Administration Quarterly, V25, P168
   LAPLANTE A, 1993, FORBES, V150, P44
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Larsen TJ, 2001, INT FED INFO PROC, V59, P35
   Lehaney B., 2004, KNOWLEDGE MANAGEMENT
   LINDVALL M, 2002, P EXTR PROGR AG METH, P197
   MARCH J, 1989, DECISION MAKING DESC, P33
   Mathiassen L, 2002, INFORM SYST J, V12, P81, DOI 10.1046/j.1365-2575.2002.00122.x
   McCauley C, 1998, ORGAN BEHAV HUM DEC, V73, P142, DOI 10.1006/obhd.1998.2759
   MILGRAM S, 1971, SMALL GROUPS, P157
   Moorhead G, 1998, ORGAN BEHAV HUM DEC, V73, P327, DOI 10.1006/obhd.1998.2765
   Morgan G., 1989, Creative organization theory: A resourcebook
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   RAINWATER J, 2002, HERDING CATS PRIMER
   RIEHLE D, 2001, EXTREME PROGRAMMING, P35
   ROBBINS H, 1998, WHY TEAMS DONT WORK
   Robinson H, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P12, DOI 10.1109/ADC.2003.1231448
   ROBINSON H, 2005, P 6 INT C EXTR PROGR, P100
   ROMME N, 1999, J ORGAN CHANGE MANAG, V13, P439
   SCHARFSTEIN DS, 1990, AM ECON REV, V80, P465
   Schatz B, 2005, IEEE SOFTWARE, V22, P36, DOI 10.1109/MS.2005.74
   SCHELLING T, 1989, DECISION MAKING DESC, P343
   SCHON DA, 1975, ORGAN DYN, V4, P2, DOI 10.1016/0090-2616(75)90001-7
   Schuh P., 2004, Integrating Agile Development in the Real World (Programming Series)
   Schwartzman H., 1993, ETHNOGRAPHY ORG
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Spradley J. P., 1980, Participant observation
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
   Sun PeterY. T., 2003, The Learning Organization, V10, P202
   TAYLOR D, 1971, SMALL GROUPS, P86
   Tedlock B., 2000, HDB QUALITATIVE RES, V2nd, P455
   THOMAS F, 1990, P 18 ANN ACM SIGUCCS, P399
   Volberda H.W., 1998, BUILDING FLEXIBLE FI
   Von Bergen C W Jr, 1978, Manage Rev, V67, P44
   VROOM V, 1974, ORG THEORY, P309
   Wang C.L., 2003, LEARN ORGAN, V10, P8, DOI DOI 10.1108/09696470310457469
   WARDHAUGH R, 2003, LEARNING DESIGN
   Yeo R., 2002, TEAM PERFORM MANAG, V8, P157
   YEOMANS L, 2000, J COMMUNICATION MANA, V5, P72
NR 92
TC 28
Z9 34
U1 1
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 552
EP 563
DI 10.1016/j.infsof.2007.02.012
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 169NU
UT WOS:000246599700003
DA 2024-07-18
ER

PT J
AU Bajec, M
   Vavpotic, D
   Krisper, M
AF Bajec, Marko
   Vavpotic, Damjan
   Krisper, Marjan
TI Practice-driven approach for creating project-specific software
   development methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE method engineering; process engineering; project-specific method
ID SYSTEMS-DEVELOPMENT METHODOLOGIES
AB Both practitioners and researchers agree that if software development methods were more adjustable to project-specific situations, this would increase their use in practice. Empirical investigations show that otherwise methods exist just on paper while in practice developers avoid them or do not follow them rigorously. In this paper we present an approach that deals with this problem. Process Configuration, as we named the approach, tells how to create a project-specific method from an existing one, taking into account the project circumstances. Compared to other approaches that deal with the creation of project-specific methods, our approach tends to be more flexible and easier to implement in practice as it introduces few simplifications. The proposed approach is practice-driven, i.e. it has been developed in cooperation with software development companies. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Ljubljana, Fac Comp & Informat Sci, Ljubljana 1000, Slovenia.
C3 University of Ljubljana
RP Bajec, M (corresponding author), Univ Ljubljana, Fac Comp & Informat Sci, Trzaska 25, Ljubljana 1000, Slovenia.
EM marko.bajec@fri.uni-lj.si; damjan.vavpotic@fri.uni-lj.si;
   marjan.krisper@fri.uni-lj.si
RI Vavpotic, Damjan/G-3527-2010
OI Vavpotic, Damjan/0000-0002-8039-7110
CR [Anonymous], 2002, Agile software development
   AVISON D, 1996, COMPUT J, V34, P98
   BAJEC M, 2004, P EUR C IS TURK FINL
   Ben Ayed M, 2004, KNOWL-BASED SYST, V17, P239, DOI 10.1016/j.knosys.2004.07.004
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   BRINKKEMPER S, 1996, INT C PRINC METH CON
   DAVIS GB, 1982, IBM SYST J, V21, P4, DOI 10.1147/sj.211.0004
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   Fitzgerald B, 1997, INFORM SYST J, V7, P201, DOI 10.1046/j.1365-2575.1997.d01-18.x
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Fitzgerald B., 2002, Information systems development : methods in action
   HARDY CJ, 1995, INFORM SOFTWARE TECH, V37, P467, DOI 10.1016/0950-5849(95)97291-F
   HARMSEN AF, 1994, IFIP TRANS A, V55, P169
   HARMSEN AF, 1997, THESIS MORET ERNEST
   Henderson-Sellers B, 2003, COMMUN ACM, V46, P73, DOI 10.1145/944217.944242
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   HUISMAN M, 2003, SYSTEMS DEV ADV METH, P87
   HUISMAN M, 2002, LECT NOTES COMPUTER, V2348, P134
   Intorna L.D., 1997, INFORM TECHNOL PEOPL, V10, P31
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   KARLSSON F, 2005, THESIS LINKOPING U L
   KUMAR K, 1992, CHALLENGES STRATEGIE
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   Middleton P, 1999, INFORM SOFTWARE TECH, V41, P473, DOI 10.1016/S0950-5849(99)00015-4
   RALYTE J, 2003, P 15 C ADV INF SYST, P16
   ROLLAND C, 1993, 3 EUR JAP SEM INF MO
   Rossi M., 2004, Journal of the Association for Information Systems, V5, P356
   VANDEHOEF R, 1995, P 6 WORKSH NEXT GEN
   VAVPOTIC D, 2004, ADV THEORY PRACTICE, P228
   WISTRAND W, 2004, P 16 INT C ADV INF S
NR 31
TC 53
Z9 57
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2007
VL 49
IS 4
BP 345
EP 365
DI 10.1016/j.infsof.2006.05.007
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 149TB
UT WOS:000245168500004
DA 2024-07-18
ER

PT J
AU Nikolik, B
AF Nikolik, Borislav
TI Test diversity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE testing tools; verification; theory; experimentation; conditional
   diversity; data diversity; standard deviation; diversity matrix; linear
   independence; orthogonality
ID RELIABILITY
AB This paper describes a novel method for measuring the degree to which a set of test cases executes a given program in diverse ways with respect to the two fundamental programming concepts: control and data. Test diversity is a method for measuring the variety of software control flow and data flow, comprising of four new measures: conditional diversity, data diversity, standard deviation of diversity, and test orthogonality. These closely related measures could be used to evaluate the test effectiveness and the test-effort distribution of a test suite.
   The Diversity Analyzer is a novel industrial-strength testing tool that can currently perform diversity analysis on software written in C/C++/C#/VB/Java in Windows and NET environments. The Diversity Analyzer is used to evaluate the fault-detection effectiveness of Test Diversity on various types of industrial projects. (C) 2006 Elsevier B.V. All rights reserved.
C1 Vidak Qual, Portland, OR 97229 USA.
RP Nikolik, B (corresponding author), Vidak Qual, 9226 NW Bartholomew Dr, Portland, OR 97229 USA.
EM boris@vidakquality.com
CR ANUP K, 2004, P 11 ANN NETW DISTR, P159
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   BAASE S, 1988, COMPUTER ALGORITHMS, P16
   BOWRING J, 2002, ACM SIGPLN SIGSOFT P, P2
   CHEN TY, 1998, 3 INT C QUAL SOFTW N
   DAVIS MD, 1983, INFORM CONTROL, V56, P52, DOI 10.1016/S0019-9958(83)80050-3
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1978, IEEE COMPUT
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Flowers B.H., 2000, An introduction to numerical methods in C++
   FOSSE T, 2003, 11 INT QUAL WEEK MAY, P4
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P202, DOI 10.1109/32.221133
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   HAMLET D, 1993, PROC INT CONF SOFTW, P118, DOI 10.1109/ICSE.1993.346051
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   HENNESEY JL, 1990, COMPUTER ARCHITECTUR, P251
   LASKI JW, 1983, IEEE T SOFTWARE ENG, V9, P347, DOI 10.1109/TSE.1983.236871
   Leveson N.G., 1995, Safeware: System Safety and Computers
   LIBLIT B, 2003, P ACM SIGPLAN 2003 C, P141
   NIKOLIK B, 1995, INFORM PROCESS LETT, V55, P143, DOI 10.1016/0020-0190(95)00092-Q
   NIKOLIK B, 2005, AADEBUG, P89
   NIKOLIK B, 2004, IEEE METRICS 2004
   NIKOLIK B, 2006, INFORM PROCESS LETT
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   RUWASE O, 2002, PRACTICAL DYNAMIC BU
   TSOUKALAS MZ, 1993, IEEE T SOFTWARE ENG, V19, P687, DOI 10.1109/32.238569
   WEISER MD, 1985, IEEE T SOFTWARE ENG, V11, P367
   Weiss S. N., 1989, SIGSOFT Software Engineering Notes, V14, P42, DOI 10.1145/70739.70742
   Weyuker E. J., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P100, DOI 10.1109/METRIC.1993.263796
   Weyuker E.J., 1991, TAV4, P1
   Wolfe M.J., 1989, Optimizing Supercompilers for Supercomputers
NR 33
TC 9
Z9 9
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1083
EP 1094
DI 10.1016/j.infsof.2006.02.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400009
DA 2024-07-18
ER

PT J
AU van Koten, C
   Gray, AR
AF van Koten, C.
   Gray, A. R.
TI Bayesian statistical effort prediction models for data-centred 4GL
   software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE effort prediction; 4GL; Bayesian statistics; regression; software
   metrics
ID SIZE; VALIDATION; NETWORKS; LINES; CODE
AB Constructing an accurate effort prediction model is a challenge in Software Engineering. This paper presents three Bayesian statistical software effort prediction models for database-oriented software systems, which are developed using a specific 4GL toolsuite. The models consist of specification-based software size metrics and development team's productivity metric. The models are constructed based on the subjective knowledge of human expert and calibrated using empirical data collected from 17 software systems developed in the target environment. The models' predictive accuracy is evaluated using subsets of the same data, which were not used for the models' calibration. The results show that the models have achieved very good predictive accuracy in terms of MMRE and pred measures. Hence, it is confirmed that the Bayesian statistical models can predict effort successfully in the target environment. In comparison with commonly used multiple linear regression models, the Bayesian statistical models' predictive accuracy is equivalent in general. However, when the number of software systems used for the models' calibration becomes smaller than five, the predictive accuracy of the best Bayesian statistical models are significantly better than the multiple linear regression model. This result suggests that the Bayesian statistical models would be a better choice when software organizations/practitioners do not posses sufficient empirical data for the models' calibration. The authors expect these findings to encourage more researchers to investigate the use of Bayesian statistical models for predicting software effort. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ Otago, Dept Informat Sci, Dunedin, New Zealand.
C3 University of Otago
RP van Koten, C (corresponding author), Univ Otago, Dept Informat Sci, POB 56, Dunedin, New Zealand.
EM ckoten@infoscience.otago.ac.nz
RI Gray, Andrew Robert/L-9161-2015
OI Gray, Andrew Robert/0000-0003-4299-2194
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2001, BAYESIAN STAT MODELL
   Baik J, 2002, IEEE T SOFTWARE ENG, V28, P1009, DOI 10.1109/TSE.2002.1049401
   Boehm BW., 1981, Software Engineering Economics
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cowell R. G., 1999, Probabilistic Networks and Expert Systems, V543
   Dolado JJ, 1997, J SYST SOFTWARE, V37, P161, DOI 10.1016/S0164-1212(96)00111-2
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Glass Robert L, 2001, IEEE software, V18, P112, DOI [DOI 10.1109/MS.2001.965816, 10.1109/MS.2001.922739, DOI 10.1109/MS.2001.922739]
   Green P., 2001, Complex Stochastic Systems, P1
   Jensen F. V., 2007, Bayesian networks and decision graphs
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   MacDonell SG, 1997, INFORM SOFTWARE TECH, V39, P35, DOI 10.1016/0950-5849(96)01125-1
   Neil M, 2000, KNOWL ENG REV, V15, P257, DOI 10.1017/S0269888900003039
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Stewart B, 2002, J SOFTW MAINT EVOL-R, V14, P161, DOI 10.1002/smr.250
   TATE G, 1991, INFORM SOFTWARE TECH, V33, P622, DOI 10.1016/0950-5849(91)90034-9
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   VERNER J, 1992, IEEE T SOFTWARE ENG, V18, P265, DOI 10.1109/32.129216
NR 26
TC 11
Z9 12
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1056
EP 1067
DI 10.1016/j.infsof.2006.01.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400006
DA 2024-07-18
ER

PT J
AU Bryce, RC
   Colbourn, CJ
AF Bryce, Renee C.
   Colbourn, Charles J.
TI Prioritized interaction testing for pair-wise coverage with seeding and
   constraints
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Workshop on Advances in Model-Based Software Testing
CY MAY 15-16, 2005
CL St.Louis, MO
SP ICSE
DE biased covering arrays; covering arrays; greedy algorithm; mixed-level
   covering arrays; pair-wise interaction coverage; software interaction
   testing; test prioritization
ID SYSTEM
AB Interaction testing is widely used in screening for faults. In software testing, it provides a natural mechanism for testing systems to be deployed on a variety of hardware and software configurations. In many applications where interaction testing is needed, the entire test suite is not run as a result of time or budget constraints. In these situations, it is essential to prioritize the tests. Here, we adapt a "one-test-at-a-time" greedy method to take importance of pairs into account. The method can be used to generate a set of tests in order, so that when run to completion all pair-wise interactions are tested, but when terminated after any intermediate number of tests, those deemed most important are tested. In addition, practical concerns of seeding and avoids are addressed. Computational results are reported. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Nevada, Dept Comp Sci, Las Vegas, NV 89154 USA.
   Arizona State Univ, Tempe, AZ 85287 USA.
C3 Nevada System of Higher Education (NSHE); University of Nevada Las
   Vegas; Arizona State University; Arizona State University-Tempe
RP Bryce, RC (corresponding author), Univ Nevada, Dept Comp Sci, Las Vegas, NV 89154 USA.
EM reneebryce@cs.unlv.edu; colbourn@asu.edu
CR [Anonymous], 2000, INTRO GRAPH THEORY
   [Anonymous], EC IMP IN INFR SOFTW
   Berling T, 2003, IEEE T SOFTWARE ENG, V29, P769, DOI 10.1109/TSE.2003.1232283
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   BRYCE RC, IN PRESS INT J SIMUL
   BRYCE RC, 2005, P 1 INT WORKSH ADV M, P1
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Colbourn C.J., 2004, PROC IASTED INT C SO, V41, P242
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Hartman A, 2005, GRAPH THEORY, COMBINATORICS AND ALGORITHMS: INTERDISCIPLINARY APPLICATIONS, P237
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Hnich B, 2005, LECT NOTES COMPUT SC, V3419, P172
   Hoskins D.S., 2005, P 5 INT WORKSHOP SOF
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   MACKWORTH AK, 1977, ARTIF INTELL, V8, P99, DOI 10.1016/0004-3702(77)90007-8
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Srivastava A., 2002, Software Engineering Notes, V27, P97, DOI 10.1145/566171.566187
   Whittaker J. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P93, DOI 10.1145/151299.151326
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   YILMAZ C, 2004, P INT S SOFTW TEST A, P45
NR 26
TC 124
Z9 142
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2006
VL 48
IS 10
BP 960
EP 970
DI 10.1016/j.infsof.2006.03.004
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 092ZM
UT WOS:000241136700003
DA 2024-07-18
ER

PT J
AU Leiwo, J
   Kwok, LF
   Maskell, DL
   Stankovic, N
AF Leiwo, Jussipekka
   Kwok, Lam-For
   Maskell, Douglas L.
   Stankovic, Nenad
TI A technique for expressing IT security objectives
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Common Criteria; security objective specification; secure;
   signature-creation device
AB At the specification phase, the developer of an IT security product identifies and documents applicable security objectives. Specifications are often intuitive and hard to assess and while being syntactically correct may still fail to appropriately capture the security problem addressed. A technique is proposed for expressing Common Criteria compliant security environments and security objectives for high assurance IT security products. The technique is validated by an analysis of the security specification for a device computing digital signatures within the European Union PKI framework. Modifications to the specification are proposed and the possibility of extending the CC treatment of security objectives is discussed. (C) 2005 Elsevier B.V. All rights reserved.
C1 Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
   City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
C3 Nanyang Technological University; City University of Hong Kong
RP Leiwo, J (corresponding author), Nanyang Technol Univ, Sch Comp Engn, Nanyang Ave,Block N4, Singapore 639798, Singapore.
EM asjleiwo@ntu.edu.sg; cslfkwok@cityu.edu.hk; asdouglas@ntu.edu.sg;
   nstankovic@ntu.edu.sg
RI Maskell, Douglas/A-3668-2011
OI KWOK, Lam-for/0000-0001-8208-9659
CR [Anonymous], 2003, Computer security: art and science
   BASKERVILLE R, 1994, INT J INFORM MANAGE, V14, P385, DOI 10.1016/0268-4012(94)90075-2
   *COMM CRIT PORT, COMM CRIT INTR
   *ESI, 2003, 002176 ETSI SR
   HELANDER EJ, 2004, THESIS CHALMERS U TE
   *ISO IEC, 1999, 154082 ISO IEC
   *ISO IEC, 1999, 154083 ISO IEC
   *ISO IEC, 1999, 154081 ISO IEC
   Jurjens J., 2003, SECURE SYSTEMS DEV U
   KRUGER R, 1997, P IFIP TC11 13 INT C, P197
   LEIWO J, IN PRESS INT J SOFTW
   LEIWO J, 1999, DATABASE EXPERT SYST, V1677, P416
   LEIWO J, 2004, P 9 NORD WORKSH SEC
   NEUMANN PG, 2003, PRINCIPLED ASSUREDLY
   Smith R. E., 2001, ACM Transactions on Information and Systems Security, V4, P72, DOI 10.1145/383775.383778
   VONSOLMS R, 2000, P IFIP TC11 16 ANN W, P29
   WETTERLING M, 2002, P 10 ACM SIGSOFT S F, P129
NR 17
TC 1
Z9 2
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 532
EP 539
DI 10.1016/j.infsof.2005.05.008
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900008
DA 2024-07-18
ER

PT J
AU Raffo, DM
AF Raffo, DM
TI Software project management using PROMPT: A hybrid metrics, modeling and
   utility framework
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software process modeling; project management; simulation; software
   measurement repositories; multi-criteria decision making; control limits
AB In this paper, we present a 'forward-looking' decision support framework that integrates up-to-date metrics data with simulation models of the software development process in order to support the software project management control function. This forward-looking approach (called the PROMPT method) provides predictions of project performance and the impact of various management decisions. Tradeoffs among performance measures are accomplished using outcome based control limits (OBCLs) and are augmented using multi-criteria utility functions and financial measures of performance to evaluate various process alternatives. The decision support framework enables the program manager to plan, manage and track current software development activities in the short term and to take corrective action as necessary to bring the project back on track. The model provides insight on potential performance impacts of the proposed corrective actions. A real world example utilizing a software process simulation model is presented. (c) 2005 Elsevier B.V. All rights reserved.
C1 Portland State Univ, Sch Business Adm, Portland, OR 97207 USA.
C3 Portland State University
RP Portland State Univ, Sch Business Adm, Portland, OR 97207 USA.
EM raffod@pdx.edu
CR Abdel-Hamid Tarek., 1991, PRENTICE HALL SOFTWA
   [Anonymous], CMMI SOFTW ENG VERS
   BASILI, 2001, P INT C SOFTW ENG KN
   Boehm BW., 1981, Software Engineering Economics
   Edwards DemingW., 1986, Out of the Crisis
   HARRISON W, 2000, P PAC NW SOFTW QUAL
   *IM THAT INC, EXT SIM SOFTW
   Keeney R. L., 1976, DECISION MULTIPLE OB
   KELLNER M, 1989, SEI TECHNICAL REV
   KELLNER M, 1989, 11 INT C SOFTW ENG P
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   KELLNER MI, 1990, 5 INT C SOFTW PROC K
   Raffo DM, 2000, J SYST SOFTWARE, V53, P31, DOI 10.1016/S0164-1212(00)00006-6
   RAFFO DM, 2000, INT J SOFTWARE PROCE, V5, P147
   RAFFO DM, 1999, J SYSTEMS SOFTWARE, V46
   RAFFO DM, 1996, P 1996 SOFTW ENG PRO
   RAFFO DM, 1996, THESIS UMI
   Summers D., 2000, QUALITY
NR 18
TC 9
Z9 12
U1 2
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2005
VL 47
IS 15
BP 1009
EP 1017
DI 10.1016/j.infsof.2005.09.004
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 998MH
UT WOS:000234322400006
DA 2024-07-18
ER

PT J
AU Jackson, M
AF Jackson, M
TI Problem frames and software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE problem frame; software; problems
AB A general account is given of the problem frames approach to the development of software-intensive systems, assuming that the reader is already familiar with its basic ideas. The approach is considered in the light of the long-standing aspiration of software developers to merit a place among practitioners of the established branches of engineering. Some of its principles are examined, and some comments offered on the range of its applicability. A view of the approach is suggested by an important account of engineering in the aeronautical industry: in particular, the problem classes captured by elementary problem frames are likened to those solved in established engineering branches by normal, rather than radical, design. The relative lack of specialisation in software development is identified as an important factor holding back the evolution of normal design practice in some areas. (c) 2005 Elsevier B.V. All rights reserved.
C1 Open Univ, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Open Univ, Milton Keynes MK7 6AA, Bucks, England.
EM m.jackson@open.ac.uk
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   BRAY IK, 2003, P 9 INT WORKSH REQ E
   BRIER J, 2004, P 1 INT WORKSH ADV A
   CAMERON J, 1989, JSP JSD JACKSON APPR
   CAYLEY G, 1810, NICHOLSONS J
   CONSTNT EW, 1980, ORIGINS TURBOJET REV
   DIJKSTRA EW, 1989, COMMUNICATIONS ACM, V32
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   HALL JG, 2002, P 2002 INT C REQ ENG
   HALL JG, 2003, P 11 JOINT INT C REQ
   Hayes IJ., 1987, SPECIFICATION CASE S
   Jackson M. A., 1976, ECI Conference 1976. Proceedings of the 1st Conference of the European Cooperation in Informatics, P236
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   Knuth D., 1968, The Art of Computer Programming
   Knuth D.E., 1972, The art of computer programming volume 3, sorting and searching, V3
   Knuth D. E., 1969, The Art of Computer Programming, Vol. 2, Seminumerical Algorithms, V2
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   LAI L, 1995, PRGTR1295 OXF U COMP
   LANEY R, 2004, P 2004 INT C REQ ENG
   LEVY M, 1994, WHY BUILDINGS FALL D
   MAIBAUM TSE, 1997, P 6 EUR C HELD JOINT
   NAUR P, 1969, NATO SCI COMM GARM G
   Polanyi M., 1958, Personal Knowledge
   Polya G., 1957, How to Solve It. A New Aspect of Mathematical Method, V2, DOI DOI 10.1515/9781400828678
   RAPANOTTI L, 2004, P 2004 INT C REQ ENG
   Rogers GFC., 1983, The nature of engineering: a philosophy of technology
   Vincenti WalterG., 1993, WHAT ENG KNOW THEY K
   2002, J STRUCTURAL ENG, V128
NR 30
TC 24
Z9 32
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2005
VL 47
IS 14
BP 903
EP 912
DI 10.1016/j.infsof.2005.08.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 995CB
UT WOS:000234076400002
DA 2024-07-18
ER

PT J
AU Fong, J
   Cheung, SK
AF Fong, J
   Cheung, SK
TI Translating relational schema into XML schema definition with data
   semantic preservation and XSD graph
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE relational schema; XML schema definition language; XSD graph; extended
   entity relationship model; XML conceptual schema; semantics
   transformation
ID TECHNOLOGY
AB Many legacy systems have been created by using relational database operating not for the Internet expression. Since the relational database is not an efficient way for data explosion, electronic transfer of data, and electronic business on the Web, we introduce a methodology in which a relational schema will be translated to an Extensible Markup Language (XML) schema definition for creating an XML database that is a simple and efficient format on the Web. We apply the Indirect Schema Translation Method that is a semantic-based methodology in this project. The mechanism is that the Relational Schema will be translated into the conceptual model, an Extended Entity Relationship (EER) Model using Reverse Engineering. Afterward, the EER model will be mapped to an XML Schema Definition Language (XSD) Graph as an XML conceptual schema using Semantic Transformation. Finally, the XSD Graph will be mapped into the XSD as an XML logical schema in the process of Forward Engineering, and the data semantics of participation, cardinality, generalization, aggregation, categorization, N-ary and U-ary relationship are preserved in the translated XML schema definition. © 2004 Elsevier B.V. All rights reserved.
C1 City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
C3 City University of Hong Kong
RP Fong, J (corresponding author), City Univ Hong Kong, Dept Comp Sci, Tat Chee Ave, Kowloon, Hong Kong, Peoples R China.
EM csjfong@cityu.edu.hk
CR ABITEBOUL S, 2000, DATA WEB RELATIONAL, P197
   Biancheri C, 2001, SIGMOD RECORD, V30, P5, DOI 10.1145/373626.373631
   BOOCH G, 1999, UNIFIED MODELING LAN, P239
   CAREY MJ, 2000, P 26 INT C VER LARG, P646
   CONRAD R, 2000, P 19 INT C CONC MOD
   Dahchour M., 2002, ICEIS 2002. Proceedings of the Fourth International Conference on Enterprise Information Systems, P580
   Fernández M, 2000, COMPUT NETW, V33, P723, DOI 10.1016/S1389-1286(00)00061-X
   Fong J, 2003, INT J SOFTW ENG KNOW, V13, P257, DOI 10.1142/S0218194003001287
   Fong J, 2003, INFORM SOFTWARE TECH, V45, P335, DOI 10.1016/S0950-5849(03)00026-0
   Funderburk JE, 2002, IBM SYST J, V41, P616, DOI 10.1147/sj.414.0616
   GENNIER J, 2003, ORACLE MAGAZINE  JAN, P85
   Khan L., 2001, P 3 INT WORKSHOP WEB, P31
   Kleiner C., 2001, WORKSH WEB DAT C GER
   NAVATHE S, 1983, ABSTRACTING RELATION, P223
   NICOLLE, 2003, J DATABASE MANAGEMEN, V14, P33
   PARE RC, 2002, 31 ACM SIGMOD
   Shanmugasundaram J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P302
   Shanmugasundaram Jayavel., 2000, P 26 INT C VERY LARG, P65
   Varlamis I., 2001, Proceedings of the ACM Symposium on Document Engineering (DocEng '01), P105, DOI 10.1145/502187.502203
   VINCENT MW, 2003, 5 APWEB C SPRING BER, P23
   VLIST EVD, 2001, USING W3C XML SCHEMA
   WILFRED N, 2002, 3 WAIM C SPRING BERL, P145
   WYKE R, 2002, XML SCHEMA ESSENTIAL, P3
   XIAO J, 2003, 5 APWEB C SPRING BER, P144
   Yoshikawa Masatoshi., 2001, ACM T INTERNET TECHN, V1, P110, DOI DOI 10.1145/383034.383038
   YUE K, 2003, 5 APWEB C SPRING BER, P47
   ZHOU A, 2001, P 27 VLDB C ROM IT, P646
NR 27
TC 23
Z9 25
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 15
PY 2005
VL 47
IS 7
BP 437
EP 462
DI 10.1016/j.infsof.2004.09.010
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 923AC
UT WOS:000228880000001
DA 2024-07-18
ER

PT J
AU Katsaros, D
   Nanopoulos, A
   Manolopoulos, Y
AF Katsaros, D
   Nanopoulos, A
   Manolopoulos, Y
TI Fast mining of frequent tree structures by hashing and indexing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE tree mining; hashing; sernistructured data; association rules
ID SUBSTRUCTURES; ASSOCIATION; ALGORITHM; PATTERNS; GRAPHS
AB Hierarchical semistructured data arise frequently in the Web, or in biological information processing applications. Semistructured objects describing the same type of information have similar but not identical structure. Usually they share some common 'schema'. Finding the common schema of a collection of semistructured objects is a very important task and due to the huge amount of such data encountered. data mining techniques have been employed.
   In this paper, we study the problem of discovering frequently occurring structures in semistructured objects using the notion of association rules. We identify that discovering the frequent structures in the early phases of the mining procedure is the dominant cost and we provide a fast algorithm addressing this issue. We present experimental results, which demonstrate the superiority of the proposed algorithm and also its efficiency in reducing dramatically the processing cost. (C) 2004 Elsevier B.V. All rights reserved.
C1 Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM dimitris@skyblue.csd.auth.gr; alex@skyblue.csd.auth.gr;
   manolopo@skyblue.csd.auth.gr
RI Manolopoulos, Yannis/AAI-7767-2020
CR ABE K, 2002, LNCS LNAI, V2431, P1
   Abiteboul S., 1999, DATA WEB RELATIONS S
   AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Asai T, 2003, LECT NOTES ARTIF INT, V2843, P47
   Asai T, 2002, SIAM PROC S, P158
   Cong G, 2002, SIAM PROC S, P175, DOI 10.1137/1.9781611972726.11
   Deutsch A, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P431, DOI 10.1145/304181.304220
   Garofalakis M, 2002, IEEE T KNOWL DATA EN, V14, P530, DOI 10.1109/TKDE.2002.1000341
   Goldman R, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P436
   Gray J., 1994, PROC ACM SIGMOD, P243, DOI DOI 10.1145/191839.191886
   Han J, 2000, P 2000 ACM SIGMOD IN, P1, DOI DOI 10.1145/342009.335372
   Huan J, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P549
   Inokuchi A, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P83, DOI 10.1109/ICDM.2003.1250906
   Inokuchi A, 2003, MACH LEARN, V50, P321, DOI 10.1023/A:1021726221443
   Inokuchi A, 2000, LECT NOTES COMPUT<D>, V1910, P13
   KATZENELSON J, 1992, ACM T PROGR LANG SYS, V14, P574, DOI 10.1145/133233.133247
   Kuramochi M, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P313, DOI 10.1109/ICDM.2001.989534
   McHugh J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P315
   MILO T, 1999, P 7 INT C DAT THEOR, P277
   Nanopoulos A, 2003, IEEE T KNOWL DATA EN, V15, P1155, DOI 10.1109/TKDE.2003.1232270
   Nestorov S, 1997, PROC INT CONF DATA, P79, DOI 10.1109/ICDE.1997.581741
   NESTOROV S, 1998, P ACM SIGMOD INT C M, P295, DOI DOI 10.1145/276304.276331
   PAPKONSTANTINOU Y, 1995, P 11 INT C DAT ENG T, P251
   Park JS, 1997, IEEE T KNOWL DATA EN, V9, P813, DOI 10.1109/69.634757
   Savasere A., 1995, P 21TH INT C VERY LA, P432
   Toivonen H, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P134
   Vanetik N, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P458, DOI 10.1109/ICDM.2002.1183988
   Wang K, 2000, IEEE T KNOWL DATA EN, V12, P353, DOI 10.1109/69.846290
   Wang QY, 2000, LECT NOTES COMPUT SC, V1777, P302
   Xiao YQ, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P379
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
   YANG LH, 2003, P 29 INT C VER LARG, P69, DOI DOI 10.1016/B978-012722442-8/50015-X
   ZAKI MJ, 2002, P 8 ACM SIGKDD INT C, P71, DOI DOI 10.1145/775047.775058
NR 34
TC 2
Z9 3
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2005
VL 47
IS 2
BP 129
EP 140
DI 10.1016/j.infsof.2004.06.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 886VD
UT WOS:000226260000005
DA 2024-07-18
ER

PT J
AU Henderson-Sellers, B
   Gonzalez-Perez, C
AF Henderson-Sellers, B
   Gonzalez-Perez, C
TI A comparison of four process metamodels and the creation of a new
   generic standard
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE metamodel; software development; methodology; standards
AB Software development processes and methodologies to date have frequently been described purely textually. However, more recently, a number of metamodels have been constructed to both underpin and begin to formalize these methodologies. We have critically examined four of these: the Object Management Group's Software Process Engineering Metamodel (SPEM), the OPEN Process Framework (OPF), the OOSPICE metamodel for capability assessment and the LiveNet approach for computer-supported collaborative work (CSCW). Based on this analysis, a new, combined metamodel, named Standard Metamodel for Software Development Methodologies (SMSDM) has been constructed which supports not only process but also products and capability assessment in the contexts of both software development and CSCW. As a proof of concept we conclude with a partial example to show how the SMSDM metamodel (and by inference the other metamodels) are used in practice by creating a simple yet usable methodology. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Technol Sydney, Sydney, NSW 2007, Australia.
C3 University of Technology Sydney
RP Univ Technol Sydney, Sydney, NSW 2007, Australia.
RI Gonzalez-Perez, Cesar A./B-8437-2009
OI Gonzalez-Perez, Cesar/0000-0002-3976-7589
CR Atkinson C, 2001, INT J SOFTW ENG KNOW, V11, P761, DOI 10.1142/S0218194001000724
   ATKINSON C, 2001, P 4 INT C UMLI TOR C
   Atkinson Colin, 2000, INT WORKSH MOD ENG 1, P1
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Duncan W.R., 1996, The Guide to the Project Management Body of Knowledge
   Firesmith D.G., 2002, OPEN PROCESS FRAMEWO
   GONZALEZPEREZ C, 2004, IN PRESS SOFTWARE QU
   GONZALEZPEREZ C, 2004, UNPUB SOFTWARE SYST
   Hawryszkiewycz I. T., 2003, Proceedings of the Second IASTED International Conference on Information and Knowledge Sharing, P83
   HAWRYSZKIEWYCZ IT, 2000, P WORK C ADV EL GOV, P59
   Henderson-Sellers B, 2001, INFORM SOFTWARE TECH, V43, P705, DOI 10.1016/S0950-5849(01)00180-X
   HENDERSONSELLER.B, 2004, J UNIVERSAL COMPUTER, V10
   Hull MEC, 2002, INFORM SOFTWARE TECH, V44, P1, DOI 10.1016/S0950-5849(01)00158-6
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   *OMG, 2002, SOFTW PROC ENG MET S
   *OMG, 2001, OMG UN MOD LANG SPEC
   SEROUR MK, 2003, THESIS U TECHNOLOGY
   *STAND AUSTR, STAND MET SOFTW DEV
NR 18
TC 35
Z9 38
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2005
VL 47
IS 1
BP 49
EP 65
DI 10.1016/j.infsof.2004.06.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 875MG
UT WOS:000225423900005
DA 2024-07-18
ER

PT J
AU Cai, KY
   Li, YC
   Liu, K
AF Cai, KY
   Li, YC
   Liu, K
TI Optimal and adaptive testing for software reliability assessment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software reliability assessment; optimal testing; adaptive testing;
   controlled Markov chain; adaptive control; software cybernetics
ID CONTEXT; MODEL
AB Optimal software testing is concerned with how to test software such that the underlying testing goal is achieved in an optimal manner. Our previous work shows that the optimal testing problem for software reliability growth can be treated as closed-loop or feedback control problem, where the software under test serves as a controlled object and the software testing strategy serves as the corresponding controller. More specifically, the software under test is modeled as controlled Markov chains (CMCs) and the control theory of Markov chains is used to synthesize the required optimal testing strategy. In this paper, we show that software reliability assessment can be treated as a feedback control problem and the CMC approach is also applicable to dealing with the optimal testing problem for software reliability assessment. In this problem, the code of the software under test is frozen and the software testing process is optimized in the sense that the variance of the software reliability estimator is minimized. An adaptive software testing strategy is proposed that uses the testing data collected on-line to estimate the required parameters and selects next test cases. Simulation results show that the proposed adaptive software testing strategy can really work in the sense that the resulting variance of the software reliability estimate is much smaller than that resulting from the random testing strategies. The work presented in this paper is a contribution to the new area of software cybernetics that explores the interplay between software and control. (C) 2004 Elsevier B.V. All rights reserved.
C1 Beijing Univ Aeronaut & Astronaut, Baihang Univ, Dept Automat Control, Beijing 100083, Peoples R China.
   Chinese Acad Sci, Acad Math & Syst Sci, Inst Appl Math, Beijing 100080, Peoples R China.
C3 Beihang University; Chinese Academy of Sciences; Academy of Mathematics
   & System Sciences, CAS
RP Beijing Univ Aeronaut & Astronaut, Baihang Univ, Dept Automat Control, Beijing 100083, Peoples R China.
EM kycai@buaa.edu.cn
CR [Anonymous], 1996, HDB SOFTWARE RELIABI
   Cai K. Y., 2005, EUR J OPER RES, V162, P262
   Cai Kai-Yuan., 1998, KLUW INT SER SOFTW E
   Cai KY, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P77
   Cai KY, 2003, SCI CHINA SER F, V46, P335, DOI 10.1360/02yf0168
   Cai KY, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/HASE.2002.1173129
   Cai KY, 2002, INFORM SOFTWARE TECH, V44, P841, DOI 10.1016/S0950-5849(02)00108-8
   CAI KY, 1991, RELIAB ENG SYST SAFE, V32, P357, DOI 10.1016/0951-8320(91)90009-V
   Cai KY, 2000, INFORM SCIENCES, V126, P137, DOI 10.1016/S0020-0255(00)00018-9
   CAI KY, 1995, CONCEPTS TOTAL SYSTE
   CAI KY, 2000, CONTROLLED MARKOV CH
   Cangussu JW, 2003, IEEE T SOFTWARE ENG, V29, P430, DOI 10.1109/TSE.2003.1199072
   Cangussu JW, 2002, IEEE T SOFTWARE ENG, V28, P782, DOI 10.1109/TSE.2002.1027800
   CHEN MH, 1995, IEEE T RELIAB, V44, P97, DOI 10.1109/24.376528
   Chen TY, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P4, DOI 10.1109/QSIC.2003.1319079
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Derman C, 1970, Finite State Markovian Decision Processes
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Hernandez-Lerma O, 2012, Discrete-time Markov control processes: basic optimality criteria, V30
   Hernandez-Lerma O., 1989, Adaptive Markov Control Processes
   Malaiya Y. K., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P186, DOI 10.1109/ISSRE.1994.341373
   NELSON E, 1978, MICROELECTRON RELIAB, V17, P67, DOI 10.1016/0026-2714(78)91139-3
   Xie M., 1991, SOFTWARE RELIABILITY
NR 24
TC 31
Z9 37
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2004
VL 46
IS 15
BP 989
EP 1000
DI 10.1016/j.infsof.2004.07.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 876GF
UT WOS:000225484000002
DA 2024-07-18
ER

PT J
AU Chou, SC
AF Chou, SC
TI Dynamic adaptation to object state change in an information flow control
   model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information flow control; role-based access control; information
   security; object-oriented systems
ID ACCESS-CONTROL; SECURITY
AB Dynamic adaptation to object state change is necessary for an information flow control model because object state may change in an unpredictable manner during runtime. To accomplish the adaptation, an information flow control model should offer the following features: (a) access rights can be dynamically changed according to object state change, (b) purpose-oriented method invocation can be achieved, and (c) information flows among variables can be controlled. According to our survey, no existing model offers the adaptation well. This paper proposes a solution to the adaptation, which is offered by the information flow control model object-oriented role-based access control. (C) 2004 Elsevier B.V. All rights reserved.
C1 Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien 974, Taiwan.
C3 National Dong Hwa University
RP Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien 974, Taiwan.
EM scchou@mail.ndhu.edu.tw
CR [Anonymous], 1976, TECH REP
   [Anonymous], 1999, P 26 ACM SIGPLAN SIG
   [Anonymous], 2000, P POPL 00
   Bertino E., 1998, ACM T INFORM SYST SE, V1, P26
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Brewer D. F. C., 1989, Proceedings 1989 IEEE Symposium on Security and Privacy (Cat. No.89CH2703-7), P206, DOI 10.1109/SECPRI.1989.36295
   CHOU SS, IN PRESS J SYSTEMS S
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   Ferrari E, 1997, P IEEE S SECUR PRIV, P130, DOI 10.1109/SECPRI.1997.601328
   Focardi R, 1997, IEEE T SOFTWARE ENG, V23, P550, DOI 10.1109/32.629493
   Foley S. N., 1989, Proceedings 1989 IEEE Symposium on Security and Privacy (Cat. No.89CH2703-7), P248, DOI 10.1109/SECPRI.1989.36299
   Ford W., 2001, Secure Electronic Commerce
   Giuri L, 1996, P IEEE CSFW, P136, DOI 10.1109/CSFW.1996.503698
   Graubart R., 1989, 12 NATL COMPUTER SEC, P296
   IKAKI K, 2001, P 8 INT C PAR DISTR, V8, P363
   Jajodia S., 1990, Proceedings. 1990 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.90CH2884-5), P76, DOI 10.1109/RISP.1990.63840
   McCollum C. J., 1990, Proceedings. 1990 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.90CH2884-5), P190, DOI 10.1109/RISP.1990.63850
   MCILROY MD, 1992, SOFTWARE PRACT EXPER, V22, P673, DOI 10.1002/spe.4380220805
   Myers A.C., 1997, P ACM S OPERATING SY, P129
   Myers AC, 2000, ACM T SOFTW ENG METH, V9, P410, DOI 10.1145/363516.363526
   Myers AC, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P186, DOI 10.1109/SECPRI.1998.674834
   NYANCHAMA M, 1994, DATABASE SECURITY, V8, P37
   NYANCHAMA M, 1995, DATABASE SECURITY, V9, P129
   Nyanchama M., 1999, ACM T INFORM SYSTEMS, V2, P3, DOI DOI 10.1145/300830.300832
   Osborn S., 2000, ACM Transactions on Information and Systems Security, V3, P85, DOI 10.1145/354876.354878
   Osborn S., 1997, Proc. of the 2nd ACM Wksp on RBAC, P31
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Samarati P, 1997, IEEE T KNOWL DATA EN, V9, P524, DOI 10.1109/69.617048
   SANDHU R., 1999, ACM T INFORM SYST SE, V2, P105, DOI [10.1145/300830.300839, DOI 10.1145/300830.300839]
   SANDHU R, 1996, P 4 EUR S RES COMP S, P65
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Smith EA, 1998, FEMS MICROBIOL ECOL, V25, P355, DOI 10.1016/S0168-6496(98)00004-X
   Tachikawa T., 1997, Transactions of the Information Processing Society of Japan, V38, P2362
   Tari Z., 1997, IEEE Internet Computing, V1, P24, DOI 10.1109/4236.623965
   THOMSEN DJ, 1991, DATABASE SECURITY, V4, P151
   Varadharajan V., 1990, Proceedings of the Sixth Annual Computer Security Applications Conference (Cat. No.90TH0351-7), P68, DOI 10.1109/CSAC.1990.143753
   YASUD AM, 1998, P 12 INT C INF NETW, P168
   YASUD AM, 1997, P 1997 INT C PAR DIS, P244
   ZDANCEWIC S, 2001, P 18 ACM S OP SYST P
   Zhang CN, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P24, DOI 10.1109/WICSA.2001.948401
NR 43
TC 5
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2004
VL 46
IS 11
BP 729
EP 737
DI 10.1016/j.infsof.2003.12.006
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827LP
UT WOS:000221901600003
DA 2024-07-18
ER

PT J
AU Becarevic, D
   Roantree, M
AF Becarevic, D
   Roantree, M
TI A metadata approach to multimedia database federations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE federated databases; metadata; multimedia
AB Recent research in federated database systems has advanced in the direction of federations of multimedia databases. However, in each project studied, there has been little emphasis placed on the subject of metamodels. Conversely, standard database systems (relational, object-relational and object-oriented) define metadata models that lack multimedia and federation features. In this paper, a specification of a metadata architecture for a multimedia database federation is presented. The architecture is based on a new object-oriented metamodel that has support for multimedia types and federated metadata. By using this metamodel, administrators and users of a multimedia federation can determine precisely how data is structured and the types of operations that are possible. (C) 2003 Elsevier B.V. All rights reserved.
C1 Dublin City Univ, Sch Comp, Interoperable Syst Grp, Dublin 9, Ireland.
C3 Dublin City University
RP Dublin City Univ, Sch Comp, Interoperable Syst Grp, Ballymun Rd, Dublin 9, Ireland.
EM damirb@computing.dcu.ie; mark@computing.dcu.ie
OI Roantree, Mark/0000-0002-1329-2570
CR BECAREVIC D, 2002, ISG0204, P1
   BERTHOLD H, 2001, P COOP INF SYST 9 IN, P301
   Carey M. J., 1995, Proceedings RIDE-DOM '95. Fifth International Workshop on Research Issues in Data Engineering-Distributed Object Management (Cat.No.95TH8039), P124, DOI 10.1109/RIDE.1995.378736
   CATELL R, 1999, 30 ODMG
   GULUTZAN P, 1999, SQL99 COMPLETE
   Habela P., 2002, Advances in Databases and Information Systems. 6th East European Conference, ADBIS 2002. Proceedings (Lecture Notes in Computer Science Vol.2435), P263
   JORDAN D, 1998, C OBJECT DATABASE PR
   KAMBUR D, 2002, ISG0202, P1
   KAMBUR D, 2003, P 7 E EUR C ADV DAT, P60
   KIRBY GNC, 1999, P 8 INT WORKSH PERS, P136
   LEE H, 2000, P RIAO 2000 CONT BAS, P1390
   MARTINEZ J, 2002, MPEG 7 OVERVIEW VERS
   OCONNOR G, 2002, ISG0214, P1
   *OR CORP, 2002, OR 9I SQL REF REL
   Ozsu MT, 1996, P SOC PHOTO-OPT INS, V2617, P24, DOI 10.1117/12.230408
   ROANTREE M, 2001, P 9 INT IFCIS C COOP, P150
   ROANTREE M, 2002, 1 INT MET INF S MIS, P132
   ROANTREE M, 2001, P 13 INT C ADV INF S, P299
   ROANTREE M, 2002, ISG0203, P1
   SHETH A, 1990, FEDERATED DATABASE S, V22, P183
   Wang DQ., 1997, TROMBICULID MITES CH, P1, DOI DOI 10.3347/KJP.2018.56.4.313
   Wang JC, 2002, CHINESE J ASTRON AST, V2, P1, DOI 10.1088/1009-9271/2/1/1
   Wong JW, 1997, IBM SYST J, V36, P489, DOI 10.1147/sj.364.0489
NR 23
TC 3
Z9 3
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2004
VL 46
IS 3
BP 195
EP 207
DI 10.1016/j.infsof.2003.07.005
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 764WQ
UT WOS:000188229300005
DA 2024-07-18
ER

PT J
AU Lee, JS
   Bae, DH
AF Lee, JS
   Bae, DH
TI An aspect-oriented framework for developing component-based software
   with the collaboration-based architectural style
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE component-based development; software architecture; aspect-oriented
   programming; collaboration-based design; non-functional requirements
AB Component-based development (CBD) technique for software has emerged to fulfill the demand on the reuse of existing artifacts. In comparison to traditional object-oriented techniques, CBD can provide more advanced abstraction concepts such as subsystem-level reusability, gross structure abstraction, and global control flow abstraction. Unfortunately, existing software development techniques are not mature enough to make it come true that components developed in the third party can be used in a highly flexible way. It is notable that there are certain kinds of software requirements, such as non-functional requirements, that must be implemented cross-cutting multiple classes, largely losing the modularity in object-oriented design and implementation code. Therefore, it is not easy that components are reused without consideration of their low-level implementation details.
   In this article, we propose Aspect-Oriented Development Framework (AODF) in which functional behaviors are encapsulated in each component and connector, and particular non-functional requirements are flexibly tuned separately in the course of software composition. To support the modularity for non-functional requirements in component-based software systems, we devise Aspectual Composition Rules (ACR) and Aspectual Collaborative Composition Rule (ACCR). Note that AODF makes component-based software built to provide both supports of modularity and manageability of non-functional requirements such as synchronization, performance, physical distribution, fault tolerance, atomic transaction, and so on. With the Collaboration-Based architectural style, AODF explicitly enables to deal with nonfunctional requirements at the intra-component and inter-component levels. (C) 2003 Elsevier B.V. All rights reserved.
C1 LG Elect Corp, Diznet Grp, Digital Media Res Lab, Seoul 137724, South Korea.
   Korea Adv Inst Sci & Technol, Dept Elect Engn & Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Lee, JS (corresponding author), LG Elect Corp, Diznet Grp, Digital Media Res Lab, 16 Woomyeon Dong, Seoul 137724, South Korea.
EM joon@se.kaist.ac.kr; bae@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
CR [Anonymous], 1997, COMPONENT SOFTWARE O
   [Anonymous], 1988, METALEVEL ARCHITECTU
   Bass Len, 2012, SEI S SOFTW
   Brown A W, 1996, COMPONENTBASED SOFTW, P7
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   D'Souza D., 1998, OBJECTS COMPONENTS F
   GALRAN D, 1995, IEEE T SOFTWARE ENG, V21, P269
   Gamma Erich., 1994, DESIGN PATTERNS
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   HELM G, 1990, ACM SIGPLAN NOTICES, V25, P303
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kiczales G, 1996, IEEE SOFTWARE, V13, P8, DOI 10.1109/52.476280
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Krishna C.M., 1997, REAL-TIME SYST
   Lee JS, 2002, SOFTWARE PRACT EXPER, V32, P1317, DOI 10.1002/spe.483
   Lee JS, 2000, IEICE T COMMUN, VE83B, P999
   Lieberherr K., 1996, ADAPTIVE OBJECT ORIE
   MEDVIDOVIC N, 1996, P SIGSOFT 96 4 S FDN, P16
   MEDVIDOVIC N, 1995, UCIICS9524 DEP INF C
   MEZINI M, 1998, P C OBJ OR PROGR SYS, P97
   Netinant P, 2001, COMMUN ACM, V44, P83, DOI 10.1145/383845.384200
   PERRY DE, 1992, SOFTWARE ENG NOTES, V17
   Rational Software Corp, 1997, OBJ CONSTR LANG SPEC
   ROGHERMEL G, 1994, P INT C SOFTW MAINT, P14
   Seiter LM, 1998, IEEE T SOFTWARE ENG, V24, P79, DOI 10.1109/32.663999
   SHAW M, 1993, P WORKSH STUD SOFTW
   SMARAGDAKIS Y, 1999, THESIS U TEXAS AUSTI
   SRIDHARAN P, 1997, JAVABEANS DEVELOPERS
   SZYPERSKI C, 1995, OBERON TRIBUNE, V1
   Tanenbaum Andrew S., 1995, Distributed Operating Systems
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   TATSUBORI M, 2000, LNCS, V1826
   TATSUBORI M, 1997, P JSSST INT S OBJ TE, P201
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   TOKUDA L, 1999, P INT C AUT SOFTW EN
   VanHilst Michael., 1996, P 11 ACM SIGPLAN C O, P359
   WEGNER P, 1992, COMPUTER, V25, P12, DOI 10.1109/2.161277
   WEGNER P, 1990, Q PUBLICATION SIGPLA, V1
NR 39
TC 12
Z9 15
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2004
VL 46
IS 2
BP 81
EP 97
DI 10.1016/S0950-5849(03)00111-3
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763PD
UT WOS:000188094000001
DA 2024-07-18
ER

PT J
AU Ould, MA
AF Ould, MA
TI Preconditions for putting processes back in the hands of their actors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE process architecture; process enactment system; enterprise solutions
AB Enterprises have now been crushed by 'enterprise solutions'. The enterprise's information is back in the hands of the IT department. Will the same happen to the enterprise's processes? Or can computer support of those processes be put into the hands of the people who carry out the processes, who need to change them, combine them, separate them, and spread them? What properties must our business process management methods and technology have to make this possible? This paper identifies four. (C) 2003 Elsevier B.V. All rights reserved.
C1 Venice Consulting Ltd, Old Sch, Bath BA2 7TJ, Avon, England.
RP Ould, MA (corresponding author), Venice Consulting Ltd, Old Sch, Hinton Charterhouse, Bath BA2 7TJ, Avon, England.
CR OULD MA, 1988, SOFTWARE ENG ENV
   Ould MA., 1995, BUSINESS PROCESSES
   OULD MA, 1997, BUSINESS PROCESS MAN, V3, P3
   Smith Howard., 2002, BUSINESS PROCESS MAN
   WARBOYS B, 1999, BUSINESS INFORMATION
NR 5
TC 7
Z9 7
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2003
VL 45
IS 15
BP 1071
EP 1074
DI 10.1016/S0950-5849(03)00136-8
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 737GZ
UT WOS:000186223200009
DA 2024-07-18
ER

PT J
AU Cotroneo, D
   Mazzeo, A
   Romano, L
   Russo, S
AF Cotroneo, D
   Mazzeo, A
   Romano, L
   Russo, S
TI An architecture for security-oriented perfective maintenance of legacy
   software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE security; perfective maintenance; legacy software; CORBA; replication
AB This work presents an implementation strategy which exploits the separation of concerns and reuse in a multi-tier architecture to improve the security (availability, integrity, and confidentiality) level of an existing application. Functional properties are guaranteed via wrapping of the existing software modules. Security mechanisms are handled by the business logic of the middle-tier: availability and integrity are achieved via replication of the functional modules and the confidentiality is obtained via cryptography. The technique is presented with regard to a case study application. We believe that our experience can be used as a guideline for software practitioners to solve similar problems. We thus describe the conceptual model behind the architecture, discuss implementation issues, and present technical solutions. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Univ Naples Federico II, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Romano, L (corresponding author), Univ Naples Federico II, Via Claudio 21, I-80125 Naples, Italy.
EM lrom@unina.it
RI Russo, Stefano/H-7723-2013
OI Russo, Stefano/0000-0002-8747-3446; Mazzeo, Antonino/0000-0002-4404-7738
CR [Anonymous], 1990, IEEE STAND COMP DICT
   [Anonymous], 2459 RFC
   Atkins D., 1997, INTERNET SECURITY PR
   Bakken DE, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P453, DOI 10.1109/DSN.2001.941429
   Birman K., 2000, DARPA INF SURV C EXP, V1, P149
   COTRONEO D, 2002, P INT C ADV INFR E B
   CUKIER M, 2003, IEEE T COMPUT, V52, P31
   DESWARTE Y, 1999, COMPUTER SECURITY DE
   FELBER P, 1998, THEORY PRACTISE OBJE
   Ford W., 1997, SECURE ELECT COMMERC
   GOSWAMI KK, 1993, P 23 ANN INT S FAULT
   Han R, 1999, MULTIMEDIA SYST, V7, P141, DOI 10.1007/s005300050117
   Howard J.D., 1997, ANAL SECURITY INCIDE
   *IONA TECHN PLC, 2000, ORB 2000 SSL TLS PRO
   Jiménez-Peris R, 2000, SYM REL DIST SYST, P164, DOI 10.1109/RELDI.2000.885404
   KALBARCZYK Z, 1999, IEEE T PARALLEL DIST, V10
   LAPRIE JC, 1985, P FTCS, V15, P2
   Moser L. E., 1999, Proceedings Third International Enterprise Distributed Object Computing. Conference (Cat. No.99EX366), P214, DOI 10.1109/EDOC.1999.792065
   Narasimhan P., 1997, Distributed Systems Engineering, V4, P139, DOI 10.1088/0967-1846/4/3/003
   National Institute of Standards and Technology, 1995, FED INF PROC STAND P
   RIVEST R, 1992, 1321 RFC MIT LCS RSA
   VAHALIA U, 1996, NEW FRONTIERS
   Zahavi R., 1999, ENTERPRISE APPL INTE, V1st
NR 23
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2003
VL 45
IS 9
BP 619
EP 631
DI 10.1016/S0950-5849(03)00049-1
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 699RL
UT WOS:000184069700007
DA 2024-07-18
ER

PT J
AU Coughlan, J
   Lycett, M
   Macredie, RD
AF Coughlan, J
   Lycett, M
   Macredie, RD
TI Communication issues in requirements elicitation: a content analysis of
   stakeholder experiences
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE communication; requirements elicitation; content analysis
ID DESIGN PROCESS; SOFTWARE; ACQUISITION; DEVELOPER
AB The gathering of stakeholder requirements comprises an early, but continuous and highly critical stage in system development. This phase in development is subject to a large degree of error, influenced by key factors rooted in communication problems. This pilot study builds upon an existing theory-based categorisation of these problems through presentation of a four-dimensional framework on communication. Its structure is validated through a content analysis of interview data, from which themes emerge, that can be assigned to the dimensional categories, highlighting any problematic areas. The paper concludes with a discussion on the utilisation of the framework for requirements elicitation exercises. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
EM jane-lisa.coughlan@brunel.ac.uk
RI ; Macredie, Robert/F-4928-2013
OI Lycett, Mark/0000-0001-6290-8258; Macredie, Robert/0000-0001-5066-425X
CR ALRAWAS A, 1996, P 1 WESTM C PROF AW, P47
   [Anonymous], P IEEE 1 INT S REQ E
   [Anonymous], ANAL DESIGN ACTIVITY
   [Anonymous], P 1 IEEE S REQ ENG U
   Beirne M, 1998, BEHAV INFORM TECHNOL, V17, P301, DOI 10.1080/014492998119373
   Bellotti V., 1988, P 4 C BRIT COMPUTER, P13
   BEYER HR, 1995, COMMUN ACM, V38, P45, DOI 10.1145/203356.203365
   BOLAND RJ, 1978, MANAGE SCI, V24, P887, DOI 10.1287/mnsc.24.9.887
   BOSTROM RP, 1989, INFORM MANAGE, V16, P279, DOI 10.1016/0378-7206(89)90005-0
   Brenner M., 1985, RES INTERVIEW USES A
   Button G., 1994, REQUIREMENTS ENG SOC, P217
   Chatzoglou PD, 1997, INFORM SOFTWARE TECH, V39, P627, DOI 10.1016/S0950-5849(97)00020-7
   Coughlan J., 2002, Requirements Engineering, V7, P47, DOI 10.1007/s007660200004
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damodaran L, 1996, BEHAV INFORM TECHNOL, V15, P363, DOI 10.1080/014492996120049
   Davis AM, 1998, IEEE SOFTWARE, V15, P6
   Dey I., 1998, QUALITATIVE DATA ANA
   Dube L., 1999, ACCOUNTING MANAGEMEN, V9, P223
   Dubinskas F. A., 1993, Journal of Engineering and Technology Management, V10, P129, DOI 10.1016/0923-4748(93)90061-M
   El Emam K., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P68, DOI 10.1109/ISRE.1995.512547
   Elmes M., 1988, PROJ MANAG J, V19, P54
   FITZGERALD B, 1997, INFORMATION SYSTEMS, V6, P3
   Garrity EJ, 2001, INFORM SYST FRONT, V3, P107, DOI 10.1023/A:1011457822609
   Goguen J.A., 1993, 1993 P IEEE INT S RE, P152, DOI DOI 10.1109/ISRE.1993.324822
   Hartwick J, 2001, IEEE T PROF COMMUN, V44, P21, DOI 10.1109/47.911130
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   HOFMANN HF, 2000, REQUIREMENTS ENG
   INTRONA LD, 1997, INFORMATION TECHNOLO, V19, P31
   KEIL M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203356.203363
   KENSING F, 1993, COMMUN ACM, V36, P78, DOI 10.1145/153571.163278
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   KRIPPENDORFF K, 1980, NTRO METHODOLOGY
   Longmate E, 2000, BCS CONFERENCE S, P103
   Low J, 1996, INFORM SOFTWARE TECH, V38, P77, DOI 10.1016/0950-5849(95)01046-7
   Marakas GM, 1998, INFORM SYST RES, V9, P37, DOI 10.1287/isre.9.1.37
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Morse JM, 2000, QUAL HEALTH RES, V10, P3, DOI 10.1177/104973200129118183
   Mostyn B., 1985, RES INTERVIEW, P115
   Nandhakumar J., 1999, Information Technology & People, V12, P176, DOI 10.1108/09593849910267224
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Pettigrew A.M., 1990, ORG CLIMATE CULTURE, V1st, P413
   Quinn R.E., 1985, ORG CULTURE, P315, DOI DOI 10.1016/S0065-2113(08)60255-2
   Sahay S., 1996, ACCOUNTING MANAGEMEN, V6, P255, DOI DOI 10.1016/S0959-8022(99)00017-X
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Schein E.H., 2010, ORG CULTURE LEADERSH, V2
   SCHOLZ C, 1987, LONG RANGE PLANN, V20, P78, DOI 10.1016/0024-6301(87)90158-0
   SILVERMAN D, 2000, DOING QUALITATICE RE
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Smith J.A., 1995, Rethinking methods in psychology, P9, DOI [10.4135/9781446221792.n2, DOI 10.4135/9781446221792.N2]
   Sonnenwald D. H., 1996, Design Studies, V17, P277, DOI 10.1016/0142-694X(96)00002-6
   Taylor-Cummings A, 1998, J INFORM TECHNOL, V13, P29, DOI 10.1080/026839698344945
   VITALARI NP, 1983, COMMUN ACM, V26, P948, DOI 10.1145/182.358458
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
NR 53
TC 55
Z9 62
U1 4
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2003
VL 45
IS 8
BP 525
EP 537
DI 10.1016/S0950-5849(03)00032-6
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 686WL
UT WOS:000183343900006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shu, WS
   Lee, S
AF Shu, WS
   Lee, S
TI Beyond productivity-productivity and the three types of efficiencies of
   information technology industries
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE information technology productivity; productive efficiency; information
   technology industry
ID STOCHASTIC PRODUCTION; TECHNICAL EFFICIENCY; PANEL DATA; FRONTIERS;
   PARADOX
AB The purpose of this paper is to analyze productivity and efficiency of information technology industries of fourteen OECD countries. IT productivity has been studied for years and most papers have confirmed the IT productivity. Some even proved that IT productivity is far better than other factors. The impact of IT to the economy depends not only on the productivity but also on the size of IT production. Thus, to analyze productivity and efficiency of IT industries is important. They are the drive for the economic growth in the new economy. Although productivity has been analyzed and discussed in the information systems field for years, little research has been done in efficiency of IT.
   This paper analyzes the productivity and productive efficiency of fourteen OECD countries and compared them to each other. The models we used in this paper follow Kumbhakar's 1989 models [Rev. Econ. Stat. (1989) 595] and some other econometric models in other productive efficiency studies. By using these models, we were allowed to estimate three different types of (in)efficiencies-technical, allocative and scale, and the percentage loss due to the inefficiency. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 San Diego State Univ, Informat & Decis Syst, San Diego, CA 92182 USA.
   Calif State Univ Long Beach, Long Beach, CA 90840 USA.
C3 California State University System; San Diego State University;
   California State University System; California State University Long
   Beach
RP Shu, WS (corresponding author), San Diego State Univ, Informat & Decis Syst, San Diego, CA 92182 USA.
CR Aigner D., 1977, Journal of Econometrics, V6, P21, DOI [10.1016/0304-4076(77)90052-5, DOI 10.1016/0304-4076(77)90052-5]
   BAKOS JY, 1995, ARE COMPUTERS BOOSTI
   Battese G.E., 1995, Empirical Economics, V20, P325, DOI DOI 10.1007/BF01205442
   Battese G.E., 1992, J PROD ANAL, V3, P153, DOI [10.1007/BF00158774, DOI 10.1007/BF00158774]
   BATTESE GE, 1988, J ECONOMETRICS, V38, P387, DOI 10.1016/0304-4076(88)90053-X
   BAUER PW, 1984, UNPUB ANAL MULTIPROD
   BERNDT ER, 1995, J ECONOMETRICS, V65, P9, DOI 10.1016/0304-4076(94)01596-R
   BERNDT ER, 1992, WORKING PAPER SERIES, V4010
   Brynjolfsson E, 1996, MANAGE SCI, V42, P541, DOI 10.1287/mnsc.42.4.541
   BRYNJOLFSSON E, 1993, COMMUN ACM, V36, P67, DOI 10.1145/163298.163309
   Brynjolfsson E., 1995, ECON INNOV NEW TECH, V3, P183, DOI [DOI 10.1080/10438599500000002, 10.1080/10438599500000002]
   DEWAN S, 1998, COMMUNICATION
   Dewan S., 2000, MANAGEMENT SCI, V46
   FARRELL MJ, 1957, J R STAT SOC SER A-G, V120, P253, DOI 10.2307/2343100
   FORSUND FR, 1980, J ECON, P13
   Hitt L., 1994, International Conference on Information Systems, P263
   Hitt LM, 1996, MIS QUART, V20, P121, DOI 10.2307/249475
   Jorgenson D., 2000, BROOKINGS PAP ECO AC, V1, P125
   KOPP RJ, 1981, Q J ECON, V96, P477, DOI 10.2307/1882683
   KUMBHAKAR SC, 1987, J ECONOMETRICS, V34, P335, DOI 10.1016/0304-4076(87)90016-9
   KUMBHAKAR SC, 1989, J BUS ECON STAT, V7, P253
   KUMBHAKAR SC, 1989, REV ECON STAT, V71, P595, DOI 10.2307/1928101
   KUMBHAKAR SC, 1995, J APPL ECONOM, V10, P33, DOI 10.1002/jae.3950100104
   Lichtenberg F.R., 1995, J EC INNOVATION NEW, V3, P201
   Lovell C.A.K., 1993, MEASUREMENT PRODUCTI
   *OECD, 1998, OECD STAN DAT IND AN
   Oliner SD, 2000, J ECON PERSPECT, V14, P3, DOI 10.1257/jep.14.4.3
   Organisation for Economic Co-Operation and Development (OECD), 1998, INT SECT DAT
   Schmidt P., 1979, J. Econ, V9, P343, DOI [DOI 10.1016/0304-4076(79)90078-2, 10.1016/0304-4076(79)90078-2]
   Schmidt P., 1984, J BUS ECON STAT, V2, P367, DOI [DOI 10.1080/07350015.1984.10509410, 10.1080/07350015.1984.10509410]
   Shao BBM, 2001, INFORM SOFTWARE TECH, V43, P447, DOI 10.1016/S0950-5849(01)00150-1
   SHU W, 2001, J ASS INFORMATION SY, V1
   STIROH KJ, 2001, INFORMATION TECHNOLO
   Varian H.R., 1992, MICROECONOMICS ANAL
NR 34
TC 16
Z9 17
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2003
VL 45
IS 8
BP 513
EP 524
DI 10.1016/S0950-5849(03)00030-2
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 686WL
UT WOS:000183343900005
DA 2024-07-18
ER

PT J
AU McBride, N
AF McBride, N
TI A viewpoint on software engineering and information systems: integrating
   the disciplines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID IMPROVISATION
C1 De Montfort Univ, Ctr IT Serv Management, Leicester LE1 9BH, Leics, England.
C3 De Montfort University
RP McBride, N (corresponding author), De Montfort Univ, Ctr IT Serv Management, Leicester LE1 9BH, Leics, England.
CR Avison D, 2001, INFORM SOFTWARE TECH, V43, P795, DOI 10.1016/S0950-5849(01)00186-0
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Birtwistle Sue., 1995, The Making of Pride and Prejudice
   Champion D, 2001, J INFORM TECHNOL, V16, P3, DOI 10.1080/02683960010028438
   Kamoche K, 2001, ORGAN STUD, V22, P733, DOI 10.1177/0170840601225001
   MCBRIDE NK, 1999, P 9 ANN BUS INF TECH
   Peppard J, 1999, J STRATEGIC INF SYST, V8, P29, DOI 10.1016/S0963-8687(99)00013-X
   Stowell F., 1994, CLIENT LED DESIGN SY
   Weick KE, 1998, ORGAN SCI, V9, P543, DOI 10.1287/orsc.9.5.543
NR 9
TC 2
Z9 2
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 1
PY 2003
VL 45
IS 5
BP 281
EP 287
DI 10.1016/S0950-5849(02)00213-6
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 668KQ
UT WOS:000182290200005
DA 2024-07-18
ER

PT J
AU Barry, C
   Lang, M
AF Barry, C
   Lang, M
TI A comparison of 'traditional' and multimedia information systems
   development practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE multimedia information systems; systems development practices;
   development methods; development techniques; development approaches
ID HYPERMEDIA DESIGN; METHODOLOGY; MODEL
AB As multimedia information systems begin to infiltrate organizations, there arises a need to capture and disseminate knowledge about how to develop them. Little is thus far known about the realities of multimedia systems development practice, or about how the development of multimedia systems compares to that of 'traditional' information systems. Herein are discussed the findings of a survey of multimedia developers in Ireland. Practitioners generally agree that systematic approaches are desirable in order to beneficially add structure to development processes, but they are predominantly using their own in-house methods rather than those prescribed in the literature. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Natl Univ Ireland Univ Coll Galway, Dept Accountancy & Finance, Galway, Ireland.
C3 Ollscoil na Gaillimhe-University of Galway
RP Lang, M (corresponding author), Natl Univ Ireland Univ Coll Galway, Dept Accountancy & Finance, Univ Rd, Galway, Ireland.
RI Lang, Michael/C-6217-2009
OI Lang, Michael/0000-0001-7961-2285
CR [Anonymous], MULTIMEDIA APPL DEV
   BAECKER R, 1996, P ACM C MULT BOST MA
   Balasubramanian V, 2001, INFORM SYST, V26, P295, DOI 10.1016/S0306-4379(01)00022-9
   Barry C., 2001, IEEE Multimedia, V8, P52, DOI 10.1109/93.917971
   Benbasat I, 1999, MIS QUART, V23, P3, DOI 10.2307/249403
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Britton C, 1997, INFORM SOFTWARE TECH, V39, P695, DOI 10.1016/S0950-5849(97)00031-1
   BROOKS FP, 1987, IEEE COMPUT, V20, P10, DOI DOI 10.1109/MC.1987.1663532
   Carstensen P. H., 2001, P 9 EUR C INF SYST B
   De Troyer O, 2001, INFORMATION MODELING IN THE NEW MILLENNIUM, P442
   DETROYER OMF, 1998, P 7 INT WORLD WID WE, P14
   DIAZ A, 1995, P 4 INT WORLD WID WE
   England E., 1996, Managing multimedia
   ENQUIST H, 1998, P 31 HAW INT C SYST
   Falconer D.J., 1999, P 10 AUSTR C INF SYS
   Fitzgerald B., 2000, Information Technology & People, V13, P174, DOI 10.1108/09593840010377617
   FITZGERALD B, 1996, INVESTIGATION USE SY
   FITZGERALD B, 1994, P 2 C INF SYST METH
   GALLAGHER S, 1997, P 5 EUR C INF SYST C
   Galliers R.D., 1992, INFORM SYSTEMS RES I, P144
   GARZOTTO F, 1995, COMMUN ACM, V38, P74, DOI 10.1145/208344.208349
   GARZOTTO F, 1993, ACM T INFORM SYST, V11, P1, DOI 10.1145/151480.151483
   HARDY CJ, 1995, INFORM SOFTWARE TECH, V37, P467, DOI 10.1016/0950-5849(95)97291-F
   Hatzopoulos M, 1993, EUR J INFORM SYST, V2, P91, DOI 10.1057/ejis.1993.18
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   Isakowitz T., 1997, P 30 HAW INT C SYST
   JENKINS AM, 1984, INFORM MANAGE, V7, P73, DOI 10.1016/0378-7206(84)90012-0
   Keen P., 1991, INFORM SYST RES, P27
   Koch N., 1997, ELECT MARKETS, V7, P8
   KRAEMER KL, 1991, INFORMATION SYSTEMS, P3
   Liu M., 1998, Journal o fResearch on Computing in Education, V30, P254
   LOWE D, 1999, HYPERMEDIA WEB ENG A
   Mengel SA, 1996, IEEE T EDUC, V39, P375, DOI 10.1109/13.538761
   MURUGESAN S, 1999, P INT C SOFTW ENG IC
   MURUGESAN S, 1999, P 1 ICSE WORKSH WEB
   NANARD J, 1995, COMMUN ACM, V38, P49, DOI 10.1145/208344.208347
   NARAYANAN NH, 1998, P ACM C HUM FACT COM
   NECCO CR, 1987, MIS QUART, V11, P461, DOI 10.2307/248975
   NEWMAN MW, 2000, P ACM S DES INT SYST
   Pinsonneault A., 1993, Journal of Management Information Systems, V10, P75
   Pressman RS, 1998, IEEE SOFTWARE, V15, P104, DOI 10.1109/MS.1998.714869
   Rossi G, 2001, INFORMATION MODELING IN THE NEW MILLENNIUM, P463
   Rowley J, 1998, J INFORM SCI, V24, P155, DOI 10.1177/016555159802400302
   RUSSO NL, 1999, METHODOLOGIES DEV MA
   SCARLATOS LL, 1997, P ACM C MULT
   SCHWABE D, 1995, COMMUN ACM, V38, P45, DOI 10.1145/208344.208354
   Schwabe D, 2002, IEEE INTERNET COMPUT, V6, P34, DOI 10.1109/4236.991441
   Taylor MJ, 2002, INFORM SOFTWARE TECH, V44, P381, DOI 10.1016/S0950-5849(02)00024-1
   THOMAS D, 1998, SOFTWARE DEV MAG OCT, P78
   VORA P, 1998, ACM INTERACTIONS, P13
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   WHITLEY EA, 1998, P 19 ANN INT C INF S
   ZULTNER RE, 1993, COMMUN ACM, V36, P79, DOI 10.1145/163430.163577
   [No title captured]
NR 54
TC 21
Z9 26
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2003
VL 45
IS 4
BP 217
EP 227
AR PII S0950-5849(02)00207-0
DI 10.1016/S0950-5849(02)00207-0
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 653FW
UT WOS:000181425400004
DA 2024-07-18
ER

EF