FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Poon, PL
   Yu, YT
AF Poon, Pak-Lok
   Yu, Yuen Tak
TI Investigating ERP systems procurement practice: Hong Kong and Australian
   experiences
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Enterprise resource planning; Software acquisition; Software
   procurement; Software requirements; Software selection
ID ENTERPRISE; IMPLEMENTATION; FRAMEWORK; SELECTION; SOFTWARE; ISSUES;
   MODEL
AB Context: Integration of information systems is now commonly recognized to be a powerful strategic weapon that sharpens the competitive edge of a firm in today's highly volatile business environment. Such integration can be achieved by replacing the disconnected and incompatible legacy applications by enterprise resource planning (ERP) systems. Along with the remarkable growth of the ERP market, we have seen a number of failure cases of ERP adoption. Such failure cases indicate that not all firms know how to adopt an ERP solution effectively.
   Objective: To explore and identify crucial practices from real experiences in the Asia-Pacific region that may explain a firm's success in ERP procurement, with an overt intention toward the formulation of useful lessons that inform practitioners and contribution to advances in software development practices in organizations.
   Method: A multiple-case design involving three Chinese firms based in Hong Kong and a local firm in Australia was employed. We collected, verified, and analyzed the information about the ERP procurement practice in each subject firm by means of semi-structured interviews, archive reviews, and member checks.
   Results: We summarized our results in the form of 10 lessons learned, together with observations of how culture seems to have played a part in shaping the practice.
   Conclusion: Our results offer practical guidelines originated from real cases that are of use for practitioners to improve the ERP procurement process. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Yu, Yuen Tak] City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
   [Poon, Pak-Lok] Hong Kong Polytech Univ, Sch Accounting & Finance, Hong Kong, Hong Kong, Peoples R China.
C3 City University of Hong Kong; Hong Kong Polytechnic University
RP Yu, YT (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, Hong Kong, Peoples R China.
EM afplpoon@inet.polyu.edu.hk; csytyu@cityu.edu.hk
RI Poon, Pak-Lok/ADQ-5493-2022
OI POON, Pak Lok/0000-0003-2840-2418
FU Hong Kong Polytechnic University [1-ZV2H]; Research Grants Council of
   the Hong Kong Special Administrative Region, China [123206]
FX The work described in this paper is supported in part by a general
   research fund (project number 1-ZV2H) from The Hong Kong Polytechnic
   University and a grant (RGC project number 123206) from the Research
   Grants Council of the Hong Kong Special Administrative Region, China.
CR *AB GROUP, 1997, VERT IND SOL BAAN LE
   Abdinnour-Helm S, 2003, EUR J OPER RES, V146, P258, DOI 10.1016/S0377-2217(02)00548-9
   Alleman G. B., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P70
   [Anonymous], 1999, SUCCESSFUL SAP R 3 I
   [Anonymous], E BUSINESS ERP RAPID
   BACKMAN M, 2007, BIG ASIA 30 STRATEGI
   Bingi P, 1999, INFORM SYST MANAGE, V16, P7, DOI 10.1201/1078/43197.16.3.19990601/31310.2
   *BORS CONS, 1999, APP TOPICS, V1, P1
   Botella P, 2003, LECT NOTES COMPUT SC, V2693, P225
   Chen IJ., 2001, BUS PROCESS MANAG J, V7, P374, DOI DOI 10.1108/14637150110406768
   Chou SW, 2008, DECIS SUPPORT SYST, V46, P149, DOI 10.1016/j.dss.2008.06.003
   Davenport TH, 1998, HARVARD BUS REV, V76, P121
   Davison R, 2002, COMMUN ACM, V45, P109
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P737, DOI 10.1016/j.infsof.2007.07.007
   Dreiling A, 2008, DECIS SUPPORT SYST, V45, P189, DOI 10.1016/j.dss.2007.02.007
   Esteves J., 2001, Communications of the AIS, V7, P1, DOI [10.17705/1CAIS.00708, DOI 10.17705/1CAIS.00708]
   FRANCH X, 2000, P ICSE WORKSH CONT C
   Gashi I, 2009, INFORM SOFTWARE TECH, V51, P497, DOI 10.1016/j.infsof.2008.06.003
   Hakkinen L, 2008, INFORM SYST J, V18, P73, DOI 10.1111/j.1365-2575.2007.00261.x
   Hammer M., 2003, REENGINEERING CORPOR
   HO V, 2009, ZDNET ASIAS NEW 0331
   Hofstede G., 2010, CULTURES ORG SOFTWAR
   Hoy W., 2008, ADM SOLVING PROBLEMS, V3rd
   JAYARAMAN MS, 1998, BUSINESS LINE   0503
   Karimi J, 2007, J MANAGE INFORM SYST, V24, P101, DOI 10.2753/MIS0742-1222240103
   Kerlinger F.N., 2000, Foundations of behavioral research, V4th
   Kumar K, 2000, COMMUN ACM, V43, P22, DOI 10.1145/332051.332063
   LAI DYH, 2004, P 5 AS PAC J ACC EC
   Land R, 2008, LECT NOTES COMPUT SC, V5030, P100, DOI 10.1007/978-3-540-68073-4_9
   Lawlis PK, 2001, COMPUTER, V34, P58, DOI 10.1109/2.920613
   Luo WH, 2004, IEEE T ENG MANAGE, V51, P322, DOI 10.1109/TEM.2004.830862
   Mabert VA, 2003, EUR J OPER RES, V146, P302, DOI 10.1016/S0377-2217(02)00551-9
   MAGNUSSON J, 2004, P 13 EUR C INF SYST
   Markus ML, 2000, J INFORM TECHNOL, V15, P245, DOI 10.1080/02683960010008944
   Martinsons MG, 2007, DECIS SUPPORT SYST, V43, P284, DOI 10.1016/j.dss.2006.10.005
   Nah F., 2001, BUS PROCESS MANAG J, V7, P285, DOI DOI 10.1108/14637150110392782
   Nandhakumar J, 2005, J STRATEGIC INF SYST, V14, P221, DOI 10.1016/j.jsis.2005.04.002
   NCUBE C, 2002, LNCS, V2255, P176
   Nicolaou A. I., 2006, International Journal of Accounting Information Systems, V7, P18, DOI 10.1016/j.accinf.2005.12.002
   PANAYIOTOU NA, 2005, P 3 INT WORKSH SUPPL
   PANG A, 2008, WORLDWIDE ERP APPL 2, P1
   Pollalis Y. A., 1993, Information Strategy: The Executive's Journal, V10, P24
   Poon P. L., 2006, P 28 INT C SOFTW ENG, P561
   RAZI MA, 2004, COMMUNICATIONS ICISA, V5, P26
   ROTH RA, 1989, J TEACH EDUC, V40, P31, DOI 10.1177/002248718904000206
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sánchez PJ, 2009, INFORM SCIENCES, V179, P2333, DOI 10.1016/j.ins.2008.12.020
   Schon D. A., 1983, The reflective practitioner: How professionals think in action
   Scott JE, 2002, COMMUN ACM, V45, P74, DOI 10.1145/505248.505249
   Sen CG, 2009, EXPERT SYST APPL, V36, P5272, DOI 10.1016/j.eswa.2008.06.070
   SHAKIR M, 2000, P 6 AM C INF SYST AM, P1033
   Soffer P, 2005, COMPUT IND, V56, P639, DOI 10.1016/j.compind.2005.03.002
   Soh C, 2000, COMMUN ACM, V43, P47, DOI 10.1145/332051.332070
   Stefanou CJ, 2001, EUR J INFORM SYST, V10, P204, DOI 10.1057/palgrave.ejis.3000407
   TAMOTIA G, 2003, ERP ENABLED BPR BPRE
   VERVILLE J, 2003, MANAGE DECIS, V40, P206
   Wang ETG, 2006, INFORM SOFTWARE TECH, V48, P235, DOI 10.1016/j.infsof.2005.04.006
   Ward J, 2005, J STRATEGIC INF SYST, V14, P97, DOI 10.1016/j.jsis.2005.04.005
   Weiss J.W., 2004, P 37 HAW INT C SYST
   Wu LC, 2008, J SYST SOFTWARE, V81, P1039, DOI 10.1016/j.jss.2007.10.004
   Xiao-Ping Chen, 2004, Asia Pacific Journal of Management, V21, P305, DOI 10.1023/B:APJM.0000036465.19102.d5
   Yin R.K., 2011, Qualitative research from start to finish
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
NR 63
TC 23
Z9 26
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2010
VL 52
IS 10
BP 1011
EP 1022
DI 10.1016/j.infsof.2010.04.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 638LF
UT WOS:000280895700001
DA 2024-07-18
ER

PT J
AU Popovic, M
   Basicevic, I
AF Popovic, M.
   Basicevic, I.
TI Test case generation for the task tree type of architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Massively parallel software; Statistical usage testing; Test case
   generation; Operational reliability
AB Context: Emerging multicores and clusters of multicores that may operate in parallel have set a new challenge - development of massively parallel software composed of thousands of loosely coupled or even completely independent threads/processes, such as MapReduce and Java 3.0 workers, or Erlang processes, respectively. Testing and verification is a critical phase in the development of such software products.
   Objective: Generating test cases based on operational profiles and certifying declared operational reliability figure of the given software product is a well-established process for the sequential type of software. This paper proposes an adaptation of that process for a class of massively parallel software - large-scale task trees.
   Method: The proposed method uses statistical usage testing and operational reliability estimation based on operational profiles and novel test suite quality indicators, namely the percentage of different task trees and the percentage of different paths.
   Results: As an example, the proposed method is applied to operational reliability certification of a parallel software infrastructure named the TaskTreeExecutor. The paper proposes an algorithm for generating random task trees to enable that application. Test runs in the experiments involved hundreds and thousands of Win32/Linux threads thus demonstrating scalability of the proposed approach. For practitioners, the most useful result presented is the method for determining the number of task trees and the number of paths, which are needed to certify the given operational reliability of a software product. The practitioners may also use the proposed coverage metrics to measure the quality of automatically generated test suite.
   Conclusion: This paper provides a useful solution for the test case generation that enables the operational reliability certification process for a class of massively parallel software called the large-scale task trees. The usefulness of this solution was demonstrated by a case study - operational reliability certification of the real parallel software product. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Popovic, M.; Basicevic, I.] Univ Novi Sad, Fac Tech Sci, Novi Sad 21000, Serbia.
C3 University of Novi Sad
RP Popovic, M (corresponding author), Univ Novi Sad, Fac Tech Sci, Fruskogorska 11, Novi Sad 21000, Serbia.
EM miroslav.popovic@rt-rk.com
OI Popovic, Miroslav/0000-0001-8385-149X
FU Serbian Ministry of Science and Technology [12004, 2008]
FX This work has been partly supported by the Serbian Ministry of Science
   and Technology, through the project Distributed processing of DMS
   algorithms on a cluster accessible over Internet, Grant No. 12004, 2008.
   The authors are grateful for the valuable comments provided by the
   anonymous reviewers.
CR [Anonymous], MAPREDUCE SIMPLIFIED
   [Anonymous], 1998, document MIL-HDBK-338B.
   Armstrong J., 2007, Programming Erlang: Software for a Concurrent World, V1st
   Azar D, 2009, INFORM SOFTWARE TECH, V51, P1365, DOI 10.1016/j.infsof.2009.05.003
   Basicevic I, 2009, 2009 1ST IEEE EASTERN EUROPEAN CONFERENCE ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, P42, DOI 10.1109/ECBS-EERC.2009.8
   BROAKMAN B, 2002, TESTING EMBEDDED SOF
   Chen T. Y., 2007, P 2 ACM INT WORKSH R, P2
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P1001, DOI 10.1016/j.infsof.2004.07.004
   GITTENS M, 2003, 14 IEEE INT S SOFTW
   Hübner M, 2003, 7TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL I, PROCEEDINGS, P290
   JIONG Y, 2003, P 3 INT C QUAL SOFTW, P343
   KAMAVARAM S, 2002, 13 IEEE INT S SOFTW
   Lei Y, 2007, SOFTW TEST VERIF REL, V17, P207, DOI 10.1002/stvr.369
   Lei Y, 2006, IEEE T SOFTWARE ENG, V32, P382, DOI 10.1109/TSE.2006.56
   Musa J. D., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P334, DOI 10.1109/ISSRE.1994.341399
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Pham H, 1995, SOFTWARE RELIABILITY
   Popova M, 2005, PHYTOMEDICINE, V12, P221, DOI 10.1016/j.phymed.2003.09.007
   Popovic M, 2001, J SOFTW MAINT EVOL-R, V13, P97, DOI 10.1002/smr.226
   Popovic M., 2006, COMMUNICATION PROTOC
   Popovic M, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P485
   Popovic M, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P377, DOI 10.1109/ECBS.2006.11
   Popovic M, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P41, DOI 10.1109/ECBS.2009.11
   POPSTOJANOVA KG, 2003, P 14 IEEE INT S SOFT, P307
   POPSTOJANOVA KG, 2004, 15 IEEE INT S HIGH A
   Prowell S.J., 1999, SEI S SOFTW
   Souza SRS, 2008, CONCURR COMP-PRACT E, V20, P1893, DOI 10.1002/cpe.1297
   WAIT DM, 1994, P 5 IEEE INT S SOFTW, P18
   WOIT D, 1993, P INT S SOFTW TEST A, P2
   WOIT DM, 1993, CRL263 MCMAST U
   WOIT DM, 1994, THESIS QUEENS U KING
   Wojcicki MA, 2007, EMPIR SOFTW ENG, V12, P617, DOI 10.1007/s10664-007-9044-6
NR 33
TC 6
Z9 7
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2010
VL 52
IS 6
BP 697
EP 706
DI 10.1016/j.infsof.2010.03.001
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 602PE
UT WOS:000278150500009
DA 2024-07-18
ER

PT J
AU Kim, Y
   Lee, J
   Han, H
   Choe, KM
AF Kim, Youil
   Lee, Jooyong
   Han, Hwansoo
   Choe, Kwang-Moo
TI Filtering false alarms of buffer overflow analysis using SMT solvers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Buffer overflow; Program analysis; False alarm; SMT solver
AB Buffer overflow detection using static analysis can provide a powerful tool for software programmers to find difficult bugs in C programs. Sound static analysis based on abstract interpretation, however, often suffers from false alarm problem. Although more precise abstraction can reduce the number of the false alarms in general, the cost to perform such analysis is often too high to be practical for large software. On the other hand, less precise abstraction is likely to be scalable in exchange for the increased false alarms. In order to attain both precision and scalability, we present a method that first applies less precise abstraction to find buffer overflow alarms fast, and selectively applies a more precise analysis only to the limited areas of code around the potential false alarms. In an attempt to develop the precise analysis of alarm filtering for large C programs, we perform a symbolic execution over the potential alarms found in the previous analysis, which is based on the abstract interpretation. Taking advantage of a state-of-art SMT solver, our precise analysis efficiently filters out a substantial number of false alarms. Our experiment with the test cases from three open source programs shows that our filtering method can reduce about 68% of false alarms on average. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Han, Hwansoo] Sungkyunkwan Univ, Dept Comp Engn, Suwon 440746, South Korea.
   [Kim, Youil; Choe, Kwang-Moo] Korea Adv Inst Sci & Technol, Dept Comp Sci, Seoul, South Korea.
   [Lee, Jooyong] Kansas State Univ, Dept Comp & Informat Sci, Manhattan, KS 66506 USA.
C3 Sungkyunkwan University (SKKU); Korea Advanced Institute of Science &
   Technology (KAIST); Kansas State University
RP Han, H (corresponding author), Sungkyunkwan Univ, Dept Comp Engn, 300 Cheoncheon Dong, Suwon 440746, South Korea.
EM youil.kim@arcs.kaist.ac.kr; jlee@cis.ksu.edu; hhan@skku.edu;
   choe@kaist.ac.kr
RI Yi, Jooyong/ACE-0654-2022; Choe, Kwang-Moo/C-1883-2011
OI Yi, Jooyong/0000-0002-7215-0855; 
FU Korean Government [KRF-2007-331-D00427]
FX This research was supported by the Korea Research Foundation Grant
   funded by the Korean Government (MEST, Basic Research Promotion Fund,
   KRF-2007-331-D00427).
CR Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   DAS M, 2000, UNIFICATION BASED PO, P35
   DOR N, 2003, CSSV REALISTIC TOOL, P155
   EREZ G, 2004, THESIS TEL AVIV U
   Evans D, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.976940
   Gulavani BS, 2006, LECT NOTES COMPUT SC, V3920, P474
   JUNG Y, 2005, TAMING FALSE ALARMS, P203
   Kim VN, 2005, MOL CELLS, V19, P1
   KREMENEK T, 2003, Z RANKING USING STAT, P295
   Miné A, 2001, LECT NOTES COMPUT SC, V2053, P155
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Rival X, 2005, LECT NOTES COMPUT SC, V3672, P303
   Venet A., 2004, P ACM SIGPLAN 2004 C, P231
   Wagner David., 2000, NETWORK DISTRIBUTED, P3
   Weiser Mark., 1981, Proceedings of the 5th International Conference on Software Engineering, P439
   Xie Y., P 9 EUROPEAN SOFTWAR, DOI DOI 10.1145/940071.940115
   Zitser M., 2004, Proceedings of the 12th ACM SIGSOFT Twelfth International Symposium on Foundations of Software Engineering, P97
NR 18
TC 24
Z9 27
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2010
VL 52
IS 2
BP 210
EP 219
DI 10.1016/j.infsof.2009.10.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 540WW
UT WOS:000273372400007
DA 2024-07-18
ER

PT J
AU Madeyski, L
AF Madeyski, Lech
TI The impact of Test-First programming on branch coverage and mutation
   score indicator of unit tests: An experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical study; Test-First programming; Test-driven development; Unit
   tests
ID TEST-DRIVEN DEVELOPMENT; LEVEL TEST AUTOMATION; DESIGN
AB Background: Test-First programming is regarded as one of the software development practices that can make unit tests to be more rigorous, thorough and effective in fault detection. Code coverage measures can be useful as indicators of the thoroughness of unit test suites, while mutation testing turned out to be effective at finding faults.
   Objective: This paper presents an experiment in which Test-First vs. Test-Last programming practices are examined with regard to branch coverage and mutation score indicator of unit tests.
   Method: Student subjects were randomly assigned to Test-First and Test-Last groups. In order to further reduce pre-existing differences among subjects, and to get a more sensitive measure of our experimental effect, multivariate analysis of covariance was performed.
   Results: Multivariate tests results indicate that there is no statistically significant difference between Test-First and Test-Last practices on the combined dependent variables, i.e. branch coverage and mutation score indicator, (F(2,9) = .52, p > .05), even if we control for the pre-test results, the subjects' experience, and when the subjects who showed deviations from the assigned programming technique are excluded from the analysis.
   Conclusion: According to the preliminary results presented in this paper. the benefits of the Test-First practice in this specific context can be considered minor.
   Limitation: It is probably the first-ever experimental evaluation of the impact of Test-First programming on mutation score indicator of unit tests and further experimentation is needed to establish evidence. (C) 2009 Elsevier B.V. All rights reserved.
C1 Wroclaw Univ Technol, Inst Informat, PL-50370 Wroclaw, Poland.
C3 Wroclaw University of Science & Technology
RP Madeyski, L (corresponding author), Wroclaw Univ Technol, Inst Informat, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Poland.
EM lech.madeyski@pwr.wroc.pl
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357
FU ActivitySensor plugin; Judy mutation testing tool
FX The author expresses his gratitude to the students participating in the
   experiment, as well as his MSc. students Adam Piechowiak (the lead
   developer of the ActivitySensor plugin), Lukasz Szala, Michal Glowacki,
   Piotr Papala, and especially Norbert Radyk (the lead developer of the
   Judy mutation testing tool) for their help in preparing the measurement
   instruments, collecting data and support.
CR ABRAHAMSSON P, 2005, IFIP INT FEDERATION, V180, P1
   AMBLER S, 2008, INTRO TEST DRIVEN DE
   American Psychological Association, 2001, Publication manual of the American Psychological Association, V5th, DOI 10.1037/emo0000296
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], SAC 03
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2007, ESEM 07 INT S EMP SO
   [Anonymous], ESEM 07
   [Anonymous], INT S EMP SOFTW ENG
   [Anonymous], ISESE 06
   *ANSI IEEE, 1987, 1008 ANSIIEEE
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   *ATL PTY LTD, 2008, CLOV PROJ
   Beck K., 2000, EXTREME PROGRAMMING
   Beck Kent L., 2003, Test Driven Development By Example
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Cook T. D., 1979, QUASIEXPERIMENTATION
   CORNETT S, 2007, CODE COVERAGE ANAL
   Damm LO, 2007, LECT NOTES COMPUT SC, V4764, P187
   Damm LO, 2006, J SYST SOFTWARE, V79, P1001, DOI 10.1016/j.jss.2005.10.015
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   EDWARDS SH, 2003, OOPSLA 03, P148
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Field A, 2018, Discovering Statistics Using IBM SPSS Statistics, Vfifth
   Flohr T, 2006, LECT NOTES COMPUT SC, V4034, P305
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   FOWLER M, 2007, NEW METHODOLOGY
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Hamill Paul, 2004, Unit Test Frameworks: Tools for High-quality Software Development
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Howitt D., 2008, INTRO SPSS PSYCHOL
   Huang L, 2009, INFORM SOFTWARE TECH, V51, P182, DOI 10.1016/j.infsof.2008.03.007
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Jeffries R., 2000, EXTREME PROGRAMMING
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KOSKELA L, 2007, PRACTICAL TDD ACCEPT
   Lipsey M. W., 2001, PRACTICAL METAANALYS, DOI DOI 10.1016/J.AUTNEU.2007.06.087
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   MA YS, 2006, ICSE 06, P869
   Madeyski L., 2005, Foundations of Computing and Decision Sciences, V30, P49
   MADEYSKI L, 2009, IMPACT TEST 1 PROGRA
   MADEYSKI L, 2009, 13209 WROCL U TECHN
   MADEYSKI L, 2008, Software Process: Improvement and Practice, V13, P281, DOI [10.1002/spip.382, DOI 10.1002/SPIP.382]
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4764, P200
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4589, P207
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4034, P278
   Madeyski L, 2005, FRONT ARTIF INTEL AP, V130, P113
   MARICK B, P 16 INT C TEST COMP
   Massol Vincent., 2003, JUNIT ACTION
   MATTU B, 2007, 1 ANN IEEE SYST C, P1
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Maxwell S.E., 2004, Designing experiments and analyzing data: A model comparison perspective, V2nd
   Melnik G, 2005, PROC INT CONF SOFTW, P481
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   MULLER MM, 2006, XP 06, P94
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   OFFUTT AJ, 2001, MUTATION TESTING NEW
   Pancur M, 2003, IEEE REGION 8 EUROCON 2003, VOL B, PROCEEDINGS, P83
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   RADYK N, 2009, JUDY MUTATION TESTIN
   Robson C., 2002, Real World Research, V2nd
   Rubin A., 2004, RES METHODS SOCIAL W, V5th
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   SESHADRI G, 1999, UNDERSTANDING JAVA S
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   SORUMGARD LS, 1997, THESIS NORWEGIAN U S
   Stevens JP., 2002, APPL MULTIVARIATE ST
   Tabachnick B.G., 2012, Using multivariate statistics, V6th
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   WALSH PJ, 1985, THESIS U NEW YORK
   Wang YH, 2004, LECT NOTES COMPUT SC, V3134, P32
   Williams Frances M K, 2004, BMC Cardiovasc Disord, V4, P20, DOI 10.1186/1471-2261-4-20
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ynchausti R. A., 2001, XP 2001, P84
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   2006, CACTUS PROJECT
NR 87
TC 41
Z9 44
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2010
VL 52
IS 2
BP 169
EP 184
DI 10.1016/j.infsof.2009.08.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 540WW
UT WOS:000273372400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Briand, LC
   Labiche, Y
   Bawar, Z
   Spido, NT
AF Briand, Lionel C.
   Labiche, Yvan
   Bawar, Zaheer
   Spido, Nadia Traldi
TI Using machine learning to refine Category-Partition test specifications
   and test suites
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Black box testing; Category-Partition; Machine learning; Test
   improvement
ID QUALITY-ASSURANCE
AB In the context of open source development or software evolution, developers often face test suites which have been developed with no apparent rationale and which may need to be augmented or refined to ensure sufficient dependability, or even reduced to meet tight deadlines. We refer to this process as the re-engineering of test suites. It is important to provide both methodological and tool support to help people understand the limitations of test suites and their possible redundancies, so as to be able to refine them in a cost effective manner. To address this problem in the case of black-box, Category-Partition testing, we propose a methodology and a tool based on machine learning that has shown promising results on a case study involving students as testers. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Labiche, Yvan; Bawar, Zaheer; Spido, Nadia Traldi] Carleton Univ, Squall Lab, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel C.] Simula Res Lab, Lysaker, Norway.
   [Briand, Lionel C.] Univ Oslo, Lysaker, Norway.
C3 Carleton University; University of Oslo
RP Labiche, Y (corresponding author), Carleton Univ, Squall Lab, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM briand@simula.no; labiche@sce.carleton.ca; zbawar3@scs.carleton.ca;
   nspido@scs.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
CR Ammann Paul, 2008, Introduction to software testing, V1st
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Baskiotis N, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2274
   Baudry B., 2006, P 28 INT C SOFTW ENG, P82, DOI DOI 10.1145/1134285.1134299
   BOWRING JF, 2004, P INT S SOFTW TEST A, P195
   BRIAND LC, 2008, P INT C QUAL SOFTW
   BRIAND LC, 2007, SCE0705 CARL U
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P887, DOI 10.1016/j.infsof.2004.03.005
   Chen TY, 2003, IEEE T SOFTWARE ENG, V29, P577, DOI 10.1109/TSE.2003.1214323
   Cohen WW, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P335
   Csallner C., 2006, P ISSTA 2006, P245, DOI DOI 10.1145/1146238.1146267
   Demeyer S., 2003, OBJECT ORIENTED REEN
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P312, DOI 10.1109/TSE.2005.50
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   FRANCIS P, 1920, P INT S SOFTW REL EN, P451
   GROCHTMANN M, 1993, VERIFICATION RELIABI, V3, P63, DOI DOI 10.1002/STVR.4370030203
   HARAN M, 2007, TSE, V33, P1
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   HARTMANN J, 2004, P WORKSH SOFTW TEST
   Hartmann J, 2005, INNOV SYST SOFTW ENG, V1, P12, DOI 10.1007/s11334-005-0006-0
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   Jorgensen PaulC., 1995, Software Testing: A Craftsman's Approach, V1st
   Ma Yu-Seung., 2006, Proceedings of the 28th international conference on Software engineering, P827
   Maki-Asiala P, 2006, P INT COMP SOFTW APP, P189
   Marick B., 1995, CRAFT SOFTWARE TESTI
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Michlmayr M., 2005, 1 INT C OPEN SOURCE, P24
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pasquini A, 1996, IEEE T RELIAB, V45, P531, DOI 10.1109/24.556576
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Singh H, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P81, DOI 10.1109/ICFEM.1997.630406
   Willcock C., 2005, An Introduction to TTCN-3
   Witten I. H., 2005, DATA MINING PRACTICA
   Zhao LY, 2003, J SYST SOFTWARE, V66, P65, DOI 10.1016/S0164-1212(02)00064-X
NR 37
TC 19
Z9 22
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1551
EP 1564
DI 10.1016/j.infsof.2009.06.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300007
DA 2024-07-18
ER

PT J
AU German, DM
   Hassan, AE
   Robles, G
AF German, Daniel M.
   Hassan, Ahmed E.
   Robles, Gregorio
TI Change impact graphs: Determining the impact of prior code changes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th IEEE International Working Conference on Source Code Analysis and
   Manipulation
CY SEP 28-29, 2008
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Semant Designs, SAP, Reengn Forum, Ctr Res Evolut Search & Testing
DE Change impact graph; Defect detection; Code changes; Software evolution
ID SOFTWARE-DEVELOPMENT
AB The source code of a software system is in constant change. The impact of these changes spreads out across the software system and may lead to the sudden manifestation of failures in unchanged parts. To help developers fix such failures, we propose a method that, in a pre-processing stage. analyzes prior code changes to determine what functions have been modified. Next, given a particular period of time in the past, the functions changed during that period are propagated throughout the rest of the system using the dependence graph of the system. This information is visualized using Change Impact Graphs (CIGs). Through a case study based on the Apache Web Server, we demonstrate the benefit of using CIGs to investigate several real defects. (C) 2009 Elsevier B.V. All rights reserved.
C1 [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC V8W 2Y2, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 University of Victoria; Queens University - Canada
RP German, DM (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC V8W 2Y2, Canada.
EM dmg@uvic.ca; ahmed@cs.queensu.ca; gregorio.robles@urjc.es
RI Ali, Ahmed/HOF-4672-2023; Robles, Gregorio/I-2507-2012; KHALIFA, AHMED
   khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019
OI Robles, Gregorio/0000-0002-1442-6761; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; 
CR Agrawal Hiralal, 1990, PLDI, P246, DOI 10.1145/93542.93576
   Arnold R. S., 1993, INT C SOFTW MAINT 19, P292
   Binkley D, 2003, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2003.1235405
   Binkley D, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1217295.1217297
   Binkley D, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1290520.1290523
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Chen A, 2001, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSM.2001.972749
   CLEVE H, 2005, 27 INT C SOFTW ENG I
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   GERMAN DM, 2006, 3 INT WORKSH MIN SOF
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2004, PROG COMPREHEN, P183, DOI 10.1109/WPC.2004.1311060
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   McNair A, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P130, DOI 10.1109/WCRE.2007.52
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Rajlich V, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P84, DOI 10.1109/ICSM.1997.624234
   Sliwerski Jacek., 2005, ESECFSE 13, P107
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   Weiser Mark., 1981, Proceedings of the 5th International Conference on Software Engineering, P439
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zhang XY, 2007, EMPIR SOFTW ENG, V12, P143, DOI 10.1007/s10664-006-9007-3
NR 28
TC 24
Z9 27
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2009
VL 51
IS 10
BP 1394
EP 1408
DI 10.1016/j.infsof.2009.04.018
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 481VN
UT WOS:000268840400003
DA 2024-07-18
ER

PT J
AU Lim, HI
   Park, H
   Choi, S
   Han, T
AF Lim, Hyun-il
   Park, Heewan
   Choi, Seokwoo
   Han, Taisook
TI A method for detecting the theft of Java programs through analysis of
   the control flow information
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software birthmark; Software copyright protection; Software theft
   detection; Java bytecode analysis
AB A software birthmark refers to the inherent characteristics of a program that can be used to identify the program. In this paper, a method for detecting the theft of Java programs through a static software birthmark is proposed that is based on the control flow information. The control flow information shows the structural characteristics and the possible behaviors during the execution of program. Flow paths (FP) and behaviors in Java programs are formally described here, and a set of behaviors of FPs is used as a software birthmark. The similarity is calculated by matching the pairs of similar behaviors from two birthmarks. Experiments centered on the proposed birthmark with respect to precision and recall. The performance was evaluated by analyzing the F-measure curves. The experimental results show that the proposed birthmark is a more effective measure compared to earlier approaches for detecting copied programs. even in cases where such programs are aggressively modified. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Lim, Hyun-il; Park, Heewan; Choi, Seokwoo; Han, Taisook] Korea Adv Inst Sci & Technol, Div Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Lim, HI (corresponding author), Korea Adv Inst Sci & Technol, Div Comp Sci, 335 Gwahangno, Taejon 305701, South Korea.
EM hilim@pllab.kaist.ac.kr; hwpark@pllab.kaist.ac.kr;
   swchoi@pllab.kaist.ac.kr; han@cs.kaist.ac.kr
RI Han, Taisook/C-2014-2011
FU Korea government (MEST) [R01-2008-000-11856-0]
FX This work was supported by the Korea Science and Engineering Foundation
   (KOSEF) grant funded by the Korea government (MEST)
   (R01-2008-000-11856-0).
CR [Anonymous], THESIS U ARIZONA
   [Anonymous], 2005, P 2005 ACM S APPL CO, DOI DOI 10.1145/1066677.1066753
   [Anonymous], 2004, INT S FUT SOFTW TECH
   Arboit Genevieve, 2002, A Method for Watermarking Java Programs via Opaque Predicates
   Baeza-Yates R., 1999, Modern information retrieval
   BOWYER KW, 1999, 29 ANN FRONT ED C, V3
   Brudno M, 2003, BIOINFORMATICS, V19, pi54, DOI 10.1093/bioinformatics/btg1005
   Burrows S, 2007, SOFTWARE PRACT EXPER, V37, P151, DOI 10.1002/spe.750
   *BUS SOFTW ALL, 2007, 5 ANN BSA IDC GLOB S
   COLLBERG C, 1998, PRINCIPLES PROGRAMMI
   Collberg C., 1999, PRINCIPLES PROGRAMMI
   Collberg CS, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1286821.1286826
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   COLLBERG CS, 2004, C PROGR LANG DES IMP
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   DAVIDSON RL, Patent No. 5664191
   Davis J., 2006, ICML 06
   GITCHELL D, 1999, P 30 SIGCSE TECHN S
   Gosling J., 2000, The Java Language Specification
   *JIK, JIK JAV COMP
   LIM H, CSTR2008292 KAIST DE
   Lim HI, 2008, IEICE T INF SYST, VE91D, P2323, DOI 10.1093/ietisy/e91-d.9.2323
   PARK H, 2008, LECT NOTES COMPUTER, V5312
   PARK H, 2008, 6 IEEE INT C IND INF
   PARK H, 2008, 6 IEEE INT C IND INF, V5312
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   PRECHELT L, 2000, 20001 U KARLSR FAK I, P44
   QU G, 2000, P 3 INT WORKSH INF H
   Robertson S, 2004, J DOC, V60, P503, DOI 10.1108/00220410410560582
   Salton G, 1986, Introduction to Modern Information Retrieval
   SCHLEIMER S, 2003, P 2003 ACM SIGMOD IN
   SCHULER D, 2006, DETECTING SOFTWARE T
   Schuler D., 2007, P 22 IEEE ACM INT C
   Tamada H, 2005, IEICE T INF SYST, VE88D, P2148, DOI 10.1093/ietisy/e88-d.9.2148
   TAMADA H, 2004, P IASTED INT C SOFTW
   Wilhelm R., 1995, Compiler Design
   WISE MJ, 1993, STRING SIMILARITY GR
   WISE MJ, 1996, P 27 SIGCSE TECHN S
   ZHAO J, 1999, P 16 C JAP SOC SOFTW
NR 39
TC 33
Z9 43
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2009
VL 51
IS 9
BP 1338
EP 1350
DI 10.1016/j.infsof.2009.04.011
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 478BC
UT WOS:000268561700005
DA 2024-07-18
ER

PT J
AU Amor, M
   Fuentes, L
AF Amor, Mercedes
   Fuentes, Lidia
TI Malaca: A component and aspect-oriented agent architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Software agent; Component-based software
   engineering; Aspect-oriented software development; Reuse
AB The production of maintainable and reusable agents depends largely on how well the agent architecture is modularized. Most commercial agent toolkits provide an Object-Oriented (00) framework, whose agent architecture does not facilitate separate (re)use of the domain-specific functionality of an agent from other concerns. This paper presents Malaca, an agent architecture that combines the use of Component-based Software Engineering and Aspect-Oriented Software Development, both of which promote better modularization of the agent architecture while increase at the architectural level. Malaca supports the separate (re)use of the domain-specific functionality of an agent from other communication concerns, providing explicit support for the design and configuration of agent architectures and allows the development of agent-based software so that it is easy to understand, maintain and reuse. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Amor, Mercedes; Fuentes, Lidia] Univ Malaga, Dpto Lenguajes & Ciencias Computac, ETSI Informat, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Amor, M (corresponding author), Univ Malaga, Dpto Lenguajes & Ciencias Computac, ETSI Informat, Blvd Louis Pasteur S-N,Campus Teatinos, E-29071 Malaga, Spain.
EM pinilla@lcc.uma.es; lff@lcc.uma.es
RI Pinilla, María Mercedes Amor/ABA-9149-2020; Fuentes, Lidia/M-5580-2014
OI Pinilla, María Mercedes Amor/0000-0001-7190-0581; Fuentes,
   Lidia/0000-0002-5677-7156
CR Amor M, 2008, LECT NOTES ARTIF INT, V4953, P505, DOI 10.1007/978-3-540-78582-8_51
   Amor M, 2005, LECT NOTES COMPUT SC, V3382, P93
   Amor M, 2004, LECT NOTES ARTIF INT, V3315, P32
   Amor M, 2004, INTEGR COMPUT-AID E, V11, P179
   Amor M, 2003, LECT NOTES ARTIF INT, V2782, P266
   Amor M, 2004, LECT NOTES COMPUT SC, V3040, P221
   AMOR M, 2007, EARLYASPECTS 07, P4
   AMOR M, 2006, MULTIAGENT SYSTEMS S, P136
   *AP PROJ, 2008, WSIF WEB SERV INV FR
   *ASPECTJ TEAM, 2008, ASP PROGR GUID
   *BBN TECHN, 2004, COGN AG ARCH COUG DE
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   *FIPA OS, 2004, EM
   Garcia AF, 2004, SOFTWARE PRACT EXPER, V34, P489, DOI 10.1002/spe.578
   Garcia A, 2008, COMMUN ACM, V51, P75, DOI 10.1145/1342327.1342341
   GSCHWIND T, 1999, ASA MA 99 IEEE COMP, P13
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   HORLING BC, 1998, REUSABLE COMPONENT A
   *JACK INT AG, 2008, AOS
   *JADE JAV AG DEV F, 2008, TILAB
   KENDALL EA, 1999, ASAMA 99, P204
   LUCK M, 2004, AGENT BASED SOFTWARE
   SANTANNA C, 2006, MULTIAGENT SYSTEMS S, P111
   *W3 CONS, 2008, OWL S SEM MARK WEB S
   WOOLDRIDGE MJ, 1995, LECT NOTES ARTIF INT, P890
   Zambonelli F, 2004, AUTON AGENT MULTI-AG, V9, P253, DOI 10.1023/B:AGNT.0000038028.66672.1e
   2008, AOSD ASPECT ORIENTED
NR 27
TC 15
Z9 15
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 1052
EP 1065
DI 10.1016/j.infsof.2008.12.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400007
DA 2024-07-18
ER

PT J
AU He, QF
   Antón, AI
AF He, Qingfeng
   Anton, Annie I.
TI Requirements-based Access Control Analysis and Policy Specification
   (ReCAPS)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements analysis; Security; Access control
ID PRIVACY
AB Access control (AC) is a mechanism for achieving confidentiality and integrity in software systems. Access control policies (ACPs) express rules concerning who can access what information, and under what conditions. ACP specification is not an explicit part of the software development process and is often isolated from requirements analysis activities, leaving systems vulnerable to security breaches because policies are specified without ensuring compliance with system requirements. In this paper, we present the Requirements-based Access Control Analysis and Policy Specification (ReCAPS) method for deriving and specifying ACPs, and discuss three validation efforts. The method integrates policy specification into the software development process, ensures consistency across software artifacts, and provides prescriptive guidance for how to specify ACPs. It also improves the quality of requirements specifications and system designs by clarifying ambiguities and resolving conflicts across these artifacts during the analysis, making a significant step towards ensuring that policies are enforced in a manner consistent with a system's requirements specifications. To date, the method has been applied within the context of four operational systems. Additionally, we have conducted an empirical study to evaluate its usefulness and effectiveness. A software tool, the Security and Privacy Requirements Analysis Tool (SPRAT), was developed to support ReCAPS analysis activities. (C) 2008 Elsevier B.V. All rights reserved.
C1 [He, Qingfeng] ABB Inc, US Corp Res, Raleigh, NC 27606 USA.
   [Anton, Annie I.] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 ABB; North Carolina State University
RP He, QF (corresponding author), ABB Inc, US Corp Res, 940 Main Campus Dr,Suite 300, Raleigh, NC 27606 USA.
EM heq@acm.org; aianton@ncsu.edu
FU NSF ITR [0325269]; Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [0325269] Funding Source:
   National Science Foundation
FX This work was supported by NSF ITR Grant #0325269. We thank Dr. Thomas
   Honeycutt and David Wright for allowing us to conduct the empirical
   study in their class; the NCSU Students who participated in the pilot
   and empirical studies; as well as Colin Potts, Calvin Powers, Jonathan
   Moffett, Ting Yu and the NCSU ThePrivacyPlace.Org reading group for
   their helpful comments to an early version of the paper.
CR Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   [Anonymous], 2000, P INT SCH FDN SEC AN
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   [Anonymous], 2005, Oasis extensible access control markup language (xacml)
   [Anonymous], PROCEEDINGS OF THE T
   Anton AI, 2004, IEEE SECUR PRIV, V2, P36, DOI 10.1109/MSECP.2004.1281243
   Bell D. E., 1976, MTR2997 MITRE CORP
   BELL DE, 1973, MTR2547 MITRE CORP, V1
   Bettini C., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P502
   Biba K. J, 1977, MTR3153 MITRE
   BREAUX TD, 2009, ACM T SOFTW IN PRESS
   Breaux TD, 2008, IEEE T SOFTWARE ENG, V34, P5, DOI 10.1109/TSE.2007.70746
   BROSE G, 2002, 6 INT C INT DES PROC
   CHANDRAMOULI R, 1998, P 21 NAT INF SYST SE
   COYNE EJ, 1996, P 1 ACM WORKSH ROL B, P15, DOI DOI 10.1145/270152.270159
   Crook R, 2003, INFORM SOFTWARE TECH, V45, P979, DOI 10.1016/S0950-5849(03)00097-1
   DAMIANOU NC, 2002, THESIS IMPERIAL COLL
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Denning D.E.R., 1982, CRYPTOGRAPHY DATA SE, V112, DOI [10.5555/539308, DOI 10.5555/539308]
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   FERNANDEZ EB, 1997, P 2 ACM WORKSH ROL B, P121
   Ferraiolo DF, 2003, ARTECH H COMP SEC LI
   FONTAINE PJ, 2001, THESIS U CATHOLIQUE
   FRANKE RH, 1978, AM SOCIOL REV, V43, P623, DOI 10.2307/2094540
   Fundulaki Irini., 2004, Proceedings 9th ACM Symposium on Access Control Models and Technologies, P61
   HARRISON MA, 1976, COMMUN ACM, V19, P461, DOI 10.1145/360303.360333
   He Q., 2003, Proc. of REFSQ, V3, P137
   HE Q, 2005, THESIS N CAROLINA ST
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   JAIN N, 2004, TR20047 NCSU COMP SC
   Jajodia S, 2001, ACM T DATABASE SYST, V26, P214, DOI 10.1145/383891.383894
   Jajodia S, 1997, P IEEE S SECUR PRIV, P31, DOI 10.1109/SECPRI.1997.601312
   Kalloniatis C, 2008, REQUIR ENG, V13, P241, DOI 10.1007/s00766-008-0067-3
   Lampson B. W., 1974, Operating Systems Review, V8, P18, DOI 10.1145/775265.775268
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   MOFFETT JD, 1993, IEEE J SEL AREA COMM, V11, P1404, DOI 10.1109/49.257932
   MOFFETT JD, 2004, 200423 OP U DEP COMP
   Neumann G., 2002, P 7 ACM S ACC CONTR, P33, DOI DOI 10.1145/507711.507717
   Pfleeger C. P., 2002, Security in computing
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   Ribeiro C., 2001, PROC NETWORK DISTRIB, P89
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   SCHAAD A., 2001, PROC 6 ACM S ACCESS, P3, DOI DOI 10.1145/373256.373257
   SCHIMPF G, 2000, P 16 ANN COMP SEC AP
   SIEGEL S, 1973, NONPARAMETRIC STAT B
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   Stufflebeam W, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P351
   Su S, 2005, INT J ELECTRON GOV R, V1, P1, DOI 10.4018/jegr.2005040101
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   YU E, 1993, P 1 IEEE INT S REQ E, P34
NR 50
TC 12
Z9 20
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 993
EP 1009
DI 10.1016/j.infsof.2008.11.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400003
DA 2024-07-18
ER

PT J
AU Behkamal, B
   Kahani, M
   Akbari, MK
AF Behkamal, Behshid
   Kahani, Mohsen
   Akbari, Mohammad Kazem
TI Customizing ISO 9126 quality model for evaluation of B2B applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality model; Software evaluation; Business to business application;
   Customizing method; ISO 9126
ID ANALYTIC HIERARCHY PROCESS; SELECTION; SOFTWARE
AB A software quality model acts as a framework for the evaluation of attributes of an application that contribute to the software quality. In this paper, a quality model is presented for evaluation of B2B applications. First, the most well-known quality models are studied, and reasons for using ISO 9126 quality model as the basis are discussed. This model, then, is customized in accordance with special characteristics of B2B applications. The customization is done by extracting the quality factors from web applications and B2B e-commerce applications, weighting these factors from the viewpoints of both developers and end users, and adding them to the model. Finally, as a case study, ISACO portal is evaluated by the proposed model. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Behkamal, Behshid; Kahani, Mohsen] Ferdowsi Univ Mashhad, Mashhad, Iran.
   [Akbari, Mohammad Kazem] Amirkabir Univ Technol, Tehran, Iran.
C3 Ferdowsi University Mashhad; Amirkabir University of Technology
RP Behkamal, B (corresponding author), Ferdowsi Univ Mashhad, Mashhad, Iran.
EM behkamal@gmail.com; kahani@um.ac.ir; akbari@ce.aut.ac.ir
RI Behkamal, Behshid/AAJ-4944-2020; Kahani, Mohsen/P-6849-2014
OI Behkamal, Behshid/0000-0003-3151-1885; Kahani,
   Mohsen/0000-0002-2603-6066
CR ALVARO A, 2007, P INF REUS INT C IEE, P134
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2001, 912612001 ISOIEC
   BARNES S, 2001, P 34 HICSS01
   Bertoa MF, 2006, J SYST SOFTWARE, V79, P427, DOI 10.1016/j.jss.2005.06.026
   BOTELLA P, 2004, P MPEC 04 ICSE 04
   CALETO C, 2005, P ICWE04
   Cochran JK, 2005, COMPUT OPER RES, V32, P153, DOI 10.1016/S0305-0548(03)00209-0
   DAVOLI P, 2005, J COMPUTER INFOR FAL, P44
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Dustin E., 2001, QUALITY WEB SYSTEMS
   Fitzpatrick R., 1996, Software quality: Definitions and strategic issues
   Georgiadou E, 2003, SOFTWARE QUAL J, V11, P313, DOI 10.1023/A:1025817312035
   Han D, 2004, EXPERT SYST APPL, V26, P519, DOI 10.1016/j.eswa.2003.10.010
   Hill MJ, 2005, ENVIRON MODELL SOFTW, V20, P955, DOI 10.1016/j.envsoft.2004.04.014
   Hower R., 1997, DBMS MAGAZINE
   KHORAMI B, 2005, STUDYING E BUSINESS
   KHOSRAVI K, 2004, 1249 U MONTR
   Kim J, 2002, BEHAV INFORM TECHNOL, V21, P185, DOI 10.1080/0144929021000009054
   KIMA JI, 2004, COMPUTERS IND J, V53, P153
   Liu C, 2000, INFORM MANAGE, V38, P23, DOI 10.1016/S0378-7206(00)00049-5
   MAHADEVAN B, 2002, INT C ADV INFR E BUS
   Malak G, 2004, LECT NOTES COMPUT SC, V3182, P316
   MEYERHOFF D, 2001, TESTING WEB BASED HO, P200
   Mikhailov L, 2004, APPL SOFT COMPUT, V5, P23, DOI 10.1016/j.asoc.2004.04.001
   MORISIO M, 2002, P SSEKE 02
   MURRAY E, 2002, ELECT J INFORM SYSTE, V10, P1
   Nguyen H.Q., 2001, TESTING APPL WEB TES
   Nielson J., 1993, USABILITY ENG
   Pekin Altug, 2006, 5 INT S INT MAN SYST
   Piattini M., 2005, ONLINE INFORM REV J, V29, P645
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   Rosqvist T, 2003, SOFTWARE QUAL J, V11, P39, DOI 10.1023/A:1023741528816
   RUDOLF A, 2000, P 1 AS PAC C QUAL SO
   Salo A, 2005, EUR J OPER RES, V163, P338, DOI 10.1016/j.ejor.2003.10.014
   SELZ D, 1997, ELECTRON MARK, V7, P46, DOI DOI 10.1080/10196789700000038
   Signore O., 2005, P ACM INT C POL
   STEFANI A, 2003, INT S VIRT ENV HUM C
   STEFANI A, 2004, P 1 IEEE INT C E BUS, P26
   Tiryaki F, 2005, APPL MATH COMPUT, V170, P144, DOI 10.1016/j.amc.2004.10.092
   Turban E., 2004, ELECT COMMERCE MANAG
   ZWASS V, 1996, INT J SOFTWARE QUALI, V1
NR 42
TC 76
Z9 85
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 599
EP 609
DI 10.1016/j.infsof.2008.08.001
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 400TM
UT WOS:000262891500005
DA 2024-07-18
ER

PT J
AU Ricca, F
   Torchiano, M
   Di Penta, M
   Ceccato, M
   Tonella, P
AF Ricca, Filippo
   Torchiano, Marco
   Di Penta, Massimiliano
   Ceccato, Mariano
   Tonella, Paolo
TI Using acceptance tests as a support for clarifying requirements: A
   series of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical studies; Acceptance testing; Requirements; Fit tables
AB One of the main reasons for the failure of many software projects is the late discovery of a mismatch between the customers' expectations and the pieces of functionality implemented in the delivered system. At the root of such a mismatch is often a set of poorly defined, incomplete, under-specified, and inconsistent requirements. Test driven development has recently been proposed as a way to clarify requirements during the initial elicitation phase, by means of acceptance tests that specify the desired behavior of the system.
   The goal of the work reported in this paper is to empirically characterize the contribution of acceptance tests to the clarification of the requirements coming from the customer. We focused on Fit tables, a way to express acceptance tests, which can be automatically translated into executable test cases. We ran two experiments with students from University of Trento and Politecnico of Torino, to assess the impact of Fit tables on the clarity of requirements. We considered whether Fit tables actually improve requirement understanding and whether this requires any additional comprehension effort. Experimental results show that Fit helps in the understanding of requirements without requiring a significant additional effort. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Ricca, Filippo] DISI, Unita CINI, Genoa, Italy.
   [Torchiano, Marco] Politecn Torino, Turin, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, RCOST, Benevento, Italy.
   [Ceccato, Mariano; Tonella, Paolo] Fdn Bruno Kessler IRST, Trento, Italy.
C3 Polytechnic University of Turin; University of Sannio; Fondazione Bruno
   Kessler; FBK-ICT - Center for Information & Communication Technology
RP Ricca, F (corresponding author), DISI, Unita CINI, Genoa, Italy.
EM filippo.ricca@disi.unige.it; marco.torchiano@polito.it;
   dipenta@unisannio.it; ceccato@fbk.eu; tonella@fbk.eu
RI Ceccato, Mariano/T-7139-2019; Ricca, Filippo/ABB-3276-2020; Di Penta,
   Massimiliano/AAF-9656-2021; Tonella, Paolo/C-1702-2015
OI Ceccato, Mariano/0000-0001-7325-0316; Tonella,
   Paolo/0000-0003-3088-0339; Di Penta, Massimiliano/0000-0002-0340-9747;
   Torchiano, Marco/0000-0001-5328-368X
FU META-MORPHOS; MiUR (Ministero dell'Universita e della Ricerca)
   [PRIN2006-2006098097]
FX The authors would like to thank all the students who participated in the
   experimentation. Without them, this work would not have been possible.
   Authors also acknowledge the anonymous referees for their detailed and
   constructive feedbacks. Massimiliano Di Penta and Marco Torchiano were
   partially supported by the project META-MORPHOS (MEthods and Tools for
   migrAting software systeMs towards web and service Oriented
   aRchitectures: exPerimental evaluation, usability, and tecHnOlogy
   tranSfer), funded by MiUR (Ministero dell'Universita e della Ricerca)
   under grant PRIN2006-2006098097.
CR AARNIALA J, 2006, ACCEPTANCE TESTING W
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Callan RobertE., 1994, Building Object-Oriented Systems: An introduction from concepts to implementation in C++
   DENG C, 2007, P 8 INT C AG PROC SO
   Devore J.L., 2007, Probability and Statistics for Engineering and the Sciences, V7th
   Edwards SH, 2003, INTERNATIONAL CONFERENCE ON EDUCATION AND INFORMATION SYSTEMS: TECHNOLOGIES AND APPLICATIONS, PROCEEDINGS, P421
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   *IEEE, 1986, 10121986 IEEE
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   Juristo N., 2013, BASICS SOFTWARE ENG
   KAUFMANN R, 2003, OOPSLA 03, P298, DOI DOI 10.1145/949344.949421
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Melnik G, 2004, LECT NOTES COMPUT SC, V3134, P60
   MEYER B, 1985, IEEE SOFTWARE    JAN
   Mugridge R., 2005, FIT DEVELOPING SOFTW
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   PANCUR M, 2003, EUROCON 2003 COMPUTE, V8, P83
   Read K, 2005, LECT NOTES COMPUT SC, V3556, P127
   Ricca F., 2007, P 3 INT ERCIM S SOFT, P83
   RICCA F, 2007, INT WORKSH PRINC SOF, P51
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   SATPATHY M, 2001, P IEEE IFIP JOINT WO, P133
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   TORCHIANO M, 2007, IEEE INT S EMP SOFTW, P464
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 30
TC 27
Z9 30
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 270
EP 283
DI 10.1016/j.infsof.2008.01.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900003
DA 2024-07-18
ER

PT J
AU Ahmed, F
   Capretz, LF
AF Ahmed, Faheem
   Capretz, Luiz Fernando
TI The software product line architecture: An empirical investigation of
   key process activities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID REUSE; MODEL; FORM
AB Software architecture has been a key area of concern in software industry due to its profound impact on the productivity and quality of software products. This is even more crucial in case of software product line, because it deals with the development of a line of products sharing common architecture and having controlled variability. The main contributions of this paper is to increase the understanding of the influence of key software product line architecture process activities on the overall performance of software product line by conducting a comprehensive empirical investigation covering a broad range of organizations currently involved in the business of software product lines. This is the first study to empirically investigate and demonstrate the relationships between some of the software product line architecture process activities and the overall software product line performance of an organization at the best of our knowledge. The result of this investigation provide empirical evidence that software product line architecture process activities play a significant role in successfully developing and managing a software product line.
C1 [Ahmed, Faheem] United Arab Emirates Univ, Coll Informat Technol, Al Ain, U Arab Emirates.
   [Capretz, Luiz Fernando] Univ Western Ontario, Fac Engn, Dept Elect & Comp Engn, London, ON N6A 5B9, Canada.
C3 United Arab Emirates University; Western University (University of
   Western Ontario)
RP Ahmed, F (corresponding author), United Arab Emirates Univ, Coll Informat Technol, POB 17555, Al Ain, U Arab Emirates.
EM f.ahmed@uaeu.ac.ae; lcapretz@eng.uwo.ca
RI Capretz, Luiz Fernando/K-5944-2013
OI Capretz, Luiz Fernando/0000-0001-6966-2369
CR America P, 2000, SPRINGER INT SER ENG, V576, P167
   [Anonymous], 1986, Applied multivariate statistics for the social sciences
   [Anonymous], J OFF STAT
   [Anonymous], 2000, SOFTWARE ARCHITECTUR
   [Anonymous], 1980, MEASURING ASSESSING
   [Anonymous], BIOMETRICS
   Atkinson C, 2000, KLUWER INT SER ENG C, V576, P289
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   CATTELL RB, 1966, MULTIVAR BEHAV RES, V1, P245, DOI 10.1207/s15327906mbr0102_10
   CHAN K, 2000, VARIANCE BASED METHO
   Clements P., 2002, Software product lines
   Clements PC, 2005, IEEE SOFTWARE, V22, P54, DOI 10.1109/MS.2005.133
   CLEMENTS PC, 2001, P 4 INT WORKSH SOFTW, P69
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cohen J., 1988, STAT POWER ANAL BEHA
   Comrey A. L., 1992, A first course in factor analysis, DOI DOI 10.4324/9781315827506-16
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Cronbach L.J., 1971, ED MEASUREMENT, DOI DOI 10.1037/14353-009
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   CUKIER RI, 1978, J COMPUT PHYS, V26, P1, DOI 10.1016/0021-9991(78)90097-9
   DELANGE F, 2004, P 5 INT WORKSH SOFTW, P445
   Dikel D, 1997, COMPUTER, V30, P49, DOI 10.1109/2.607064
   DOBRICA L, 2004, P 5 AUSTR WORKSH SOF, P44
   El Emam K., 1999, Empirical Software Engineering, V4, P113, DOI 10.1023/A:1009820201126
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   Etxeberria L, 2005, LECT NOTES COMPUT SC, V3714, P174
   Faden RR., 1986, HIST THEORY INFORM C
   FORNELL C, 1982, J MARKETING RES, V19, P440, DOI 10.2307/3151718
   Gannod G. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P548, DOI 10.1109/ICSE.2000.870447
   GARLAN D, 1995, IEEE T SOFTWARE ENG, V21, P269
   GOMMA H, 2002, P 8 IEEE INT C ENG C, P238
   Graaf B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P354, DOI 10.1109/CSMR.2005.28
   Joreskog K. G., 1982, Systems under indirect observation: Causality, structure, prediction, P263
   KAISER HF, 1970, PSYCHOMETRIKA, V35, P401, DOI 10.1007/BF02291817
   KAISER HF, 1960, EDUC PSYCHOL MEAS, V20, P141, DOI 10.1177/001316446002000116
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Katz J., 1972, EXPT HUMAN BEINGS, DOI DOI 10.2307/1227842
   Kim M, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P584
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Knauber P, 2000, IEEE SOFTWARE, V17, P88, DOI 10.1109/52.877873
   LAM W, 1997, ACM SOFTW ENG NOTES, V22, P39
   Lee HY, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P341, DOI 10.1109/APAQS.2001.990039
   Macala RR, 1996, IEEE SOFTWARE, V13, P57, DOI 10.1109/52.493021
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   MIKA K, 2004, J SYSTEMS ARCHITECTU, V50, P383
   Niemelä E, 2004, LECT NOTES COMPUT SC, V3154, P130
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   OSTERHOF A, 2001, CLASSROOM APPL ED ME
   Pronk BJ, 2000, KLUWER INT SER ENG C, V576, P331
   Saltelli A., 2000, PROBABILITY STAT SER
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sobol' I.M., 1993, MATH MODEL COMPUT EX, V1, P407, DOI 1061-7590/93/04407-008
   STRAUB DW, 1989, MIS QUART, V13, P147, DOI 10.2307/248922
   Thompson J. M., 2003, Requirements Engineering, V8, P42, DOI 10.1007/s00766-003-0166-0
   van der Bijl Pieter, 2004, Current Drug Delivery, V1, P129
   van der Hoek A, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P298, DOI 10.1109/METRIC.2003.1232476
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   van Ommering R, 2005, IEEE T SOFTWARE ENG, V31, P537, DOI 10.1109/TSE.2005.84
   Verlage M, 2005, PROC INT CONF SOFTW, P534
   Von Eye A., 2005, ANAL RATER AGREEMENT
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Zhang HY, 2003, LECT NOTES COMPUT SC, V2681, P681
   Zuo HL, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P499
NR 67
TC 20
Z9 22
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1098
EP 1113
DI 10.1016/j.infsof.2007.10.013
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 355LA
UT WOS:000259709200004
DA 2024-07-18
ER

PT J
AU Xia, W
   Capretz, LF
   Ho, D
   Ahmed, F
AF Xia, Wei
   Capretz, Luiz Fernando
   Ho, Danny
   Ahmed, Faheem
TI A new calibration for Function Point complexity weights
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE neural network; fuzzy logic; function point; function point analysis;
   software size estimation
ID FUZZY-LOGIC
AB Function Point (FP) is a useful software metric that was first proposed 25 years ago, since then, it has steadily evolved into a functional size metric consolidated in the well-accepted Standardized International Function Point Users Group (IFPUG) Counting Practices Manual - version 4.2. While software development industry has grown rapidly, the weight values assigned to count standard FP still remain same, which raise critical questions about the validity of the weight values. In this paper, we discuss the concepts of calibrating Function Point, whose aims are to estimate a more accurate software size that fits for specific software application, to reflect software industry trend, and to improve the cost estimation of software projects. A FP calibration model called Neuro-Fuzzy Function Point Calibration Model (NFFPCM) that integrates the learning ability from neural network and the ability to capture human knowledge from fuzzy logic is proposed. The empirical validation using international Software Benchmarking Standards Group (ISBSG) data repository release 8 shows a 22% accuracy improvement of mean magnitude relative error (MMRE) in software effort estimation after calibration. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Xia, Wei] HSBC Bank Canada, IT Dept, Vancouver, BC, Canada.
   [Capretz, Luiz Fernando] Univ Western Ontario, Dept Elect & Comp Engn, London, ON, Canada.
   [Ho, Danny] NFA Estimat Inc, London, ON, Canada.
   [Ahmed, Faheem] United Arab Emirates Univ, Coll Informat Technol, Al Ain, U Arab Emirates.
C3 HSBC Holdings; Western University (University of Western Ontario);
   United Arab Emirates University
RP Capretz, LF (corresponding author), Univ Sharjah, Dept Comp Sci, Sharjah, U Arab Emirates.
EM lcapretz@eng.uwo.ca
RI Capretz, Luiz Fernando/K-5944-2013
OI Capretz, Luiz Fernando/0000-0001-6966-2369
CR Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   Al-Hajri MA, 2005, J SYST SOFTWARE, V74, P195, DOI 10.1016/j.jss.2003.12.033
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], FUNCT POINT COUNT PR
   Antoniol G, 2003, EMPIR SOFTW ENG, V8, P225, DOI 10.1023/A:1024472727275
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   Cohen J., 1988, STAT POWER ANAL BEHA
   *COMM SOFTW MEAS I, 2003, COSMICFFP MEAS MAN
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   FINNIE GR, 1977, J SYST SOFTWARE, V39, P281
   Haykin S, 1998, Neural Networks: A Comprehensive Foundation
   Huang X, 2007, APPL SOFT COMPUT, V7, P29, DOI 10.1016/j.asoc.2005.06.007
   Hunter J.E., 1990, METHODS METAANALYSIS
   Idri A, 2002, PROCEEDINGS OF THE 2002 IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOL 1 & 2, P1162, DOI 10.1109/FUZZ.2002.1006668
   *INT SOFTW BENCHM, 2004, ISBSG
   *INT SOFTW BENCHM, 2004, GUID US ISBSG DAT
   Jang JSR., 1997, NEUROFUZZY SOFT COMP, V42, P1482
   JEFERY DR, 1996, EMPIR SOFTW ENG, V1, P11
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   Kralj T, 2005, J SYST SOFTWARE, V77, P81, DOI 10.1016/j.jss.2004.12.012
   Lima OD, 2003, SOFTWARE QUAL J, V11, P149, DOI 10.1023/A:1023716628585
   Lokan C. J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P200, DOI 10.1109/METRIC.1999.809741
   MacDonell SG, 2003, INFORM SOFTWARE TECH, V45, P389, DOI 10.1016/S0950-5849(03)00011-9
   MAMDANI EH, 1977, IEEE T COMPUT, V26, P1182, DOI 10.1109/TC.1977.1674779
   Musilek P., 2000, Applied Computing Review, V8, P24, DOI 10.1145/373975.373984
   Pedrycz W., 1998, An introduction to fuzzy sets: analysis and design
   PUTMAN LH, 2000, LINKING QSM PRODUCTI
   Putnam L., 1992, MEASURES EXCELLENCE
   Ross T. J., 2004, FUZZY LOGIC ENG APPL
   Shapiro S, 1997, IEEE ANN HIST COMPUT, V19, P20, DOI 10.1109/85.560729
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yau C, 1998, INFORM SOFTWARE TECH, V40, P59, DOI 10.1016/S0950-5849(98)00032-9
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   ZADEH LA, 1988, FUZZY LOGIC COMPUTER, P21
NR 38
TC 20
Z9 25
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 670
EP 683
DI 10.1016/j.infsof.2007.07.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Karlsson, L
   Dahstedt, ÅG
   Regnell, B
   Dag, JNO
   Persson, A
AF Karlsson, Lena
   Dahstedt, Asa G.
   Regnell, Bjorn
   Dag, Johan Natt och
   Persson, Anne
TI Requirements engineering challenges in market-driven software
   development -: An interview study with practitioners
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE market-driven software development; requirements engineering;
   qualitative research; semi-structured interview
ID PACKAGED SOFTWARE
AB Requirements engineering for market-driven software development entails special challenges. This paper presents results from an empirical study that investigates these challenges, taking a qualitative approach using interviews with fourteen employees at eight software companies and a focus group meeting with practitioners. The objective of the study is to increase the understanding of the area of market-driven requirements engineering and provide suggestions for future research by describing encountered challenges. A number of challenging issues were found, including bridging communication gaps between marketing and development, selecting the right level of process support, basing the release plan on uncertain estimates, and managing the constant flow of requirements. (C) 2007 Elsevier B.V. All rights reserved.
C1 Lund Univ, Dept Commun Syst, S-22100 Lund, Sweden.
   Univ Skovde, Sch Humanities & Informat, S-54128 Skovde, Sweden.
C3 Lund University; University of Skovde
RP Karlsson, L (corresponding author), Lund Univ, Dept Commun Syst, Box 118, S-22100 Lund, Sweden.
EM lena.karlsson@telecom.lth.se; asa.dahlstedt@his.se;
   bjorn.regnell@telecom.lth.se; johan.nattochdag@telecom.lth.se;
   anne.persson@his.se
RI Persson, Anne/I-7402-2012
OI Persson, Anne/0000-0003-0740-4123; Regnell, Bjorn/0000-0002-9380-6120
CR [Anonymous], P IEEE 1 INT S REQ E
   [Anonymous], 1997, Journal of Technology Education, DOI DOI 10.21061/JTE.V9I1.A.4
   [Anonymous], 6 INT WORKSH REQ ENG
   Breitman K. K., 1999, Journal of the Brazilian Computer Society, V6, DOI 10.1590/S0104-65001999000200003
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   CARLSHAMRE P, 2001, THESIS LINKOPING U S
   CARMEL E, 1995, IEEE T ENG MANAGE, V42, P50, DOI 10.1109/17.366403
   Chatzoglou PD, 1997, INFORM SOFTWARE TECH, V39, P627, DOI 10.1016/S0950-5849(97)00020-7
   Coffey A., 1996, MAKING SENSE QUALITA
   Cooper RobertG., 2001, Winning at New Products: Accelerating the Process from Idea to Launch, V3rd
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   DEIFEL B, 1999, P WORKSH REQ ENG PRO
   Easton KL, 2000, QUAL HEALTH RES, V10, P703, DOI 10.1177/104973200129118651
   El Emam K., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P68, DOI 10.1109/ISRE.1995.512547
   FOWLER M, 2000, UML DISTILLED BRIEF
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   HALL T, 2002, P C EMP ASS SOFTW EN, P1
   Higgins SA, 2003, IEEE SOFTWARE, V20, P26, DOI 10.1109/MS.2003.1159026
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   HONOUR E, 1995, P 5 ANN INT S NAT CO
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   KAMSTIES E, 1998, P C EUR IND REQ ENG
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   KARLSSON J, 1998, THESIS LINKOPING U
   KARLSSON L, 2002, P 8 INT WORKSH REQ E, P37
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   NIKULA U, 2000, 1 U TECHN TEL BUS RE
   NOVORITA R, 1996, P INT COUNC SYST ENG
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   Robson C., 2002, Real world research
   Sawyer P, 1999, VTT SYMP, V195, P222
   Sawyer S, 2000, EUR J INFORM SYST, V9, P47, DOI 10.1057/palgrave.ejis.3000345
NR 34
TC 101
Z9 112
U1 3
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 588
EP 604
DI 10.1016/j.infsof.2007.02.008
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 169NU
UT WOS:000246599700006
DA 2024-07-18
ER

PT J
AU Chang, JH
   Lee, WS
AF Chang, Joong Hyuk
   Lee, Won Suk
TI Finding frequent itemsets over online data streams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE data streams; frequent itemsets; data mining; lexicographic tree;
   delayed-insertion; itemset pruning
AB Conventional data mining methods for finding frequent itemsets require considerable computing time to produce their results from a large data set. Due to this reason, it is almost impossible to apply them to an analysis task in an online data stream where a new transaction is continuously generated at a rapid rate. An algorithm for finding frequent itemsets over an online data stream should support flexible trade-off between processing time and mining accuracy. Furthermore, the most up-to-date resulting set of frequent itemsets should be available quickly at any moment. To satisfy these requirements, this paper proposes a data mining method for finding frequent itemsets over an online data stream. The proposed method examines each transaction one-by-one without any candidate generation process. The count of an itemset that appears in each transaction is monitored by a lexicographic tree resided in main memory. The current set of monitored itemsets in an online data stream is minimized by two major operations: delayed- insertion and pruning. The former is delaying the insertion of a new itemset in recent transactions until the itemset becomes significant enough to be monitored. The latter is pruning a monitored itemset when the itemset turns out to be insignificant. The number of monitored itemsets can be flexibly controlled by the thresholds of these two operations. As the number of monitored itemsets is decreased, frequent itemsets in the online data stream are more rapidly traced while they are less accurate. The performance of the proposed method is analyzed through a series of experiments in order to identify its various characteristics. (C) 2005 Elsevier B.V. All rights reserved.
C1 Yonsei Univ, Dept Comp Sci, Seoul 120749, South Korea.
C3 Yonsei University
RP Chang, JH (corresponding author), Yonsei Univ, Dept Comp Sci, 134 Shinchon Dong, Seoul 120749, South Korea.
EM jhchang@amadeus.yonsei.ac.kr; leewo@amadeus.yonsei.ac.kr
CR Agarwal R. C., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P108, DOI 10.1145/347090.347114
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Aumann Y, 1999, J INTELL INF SYST, V12, P61, DOI 10.1023/A:1026482903537
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Chang JH, 2004, J INF SCI ENG, V20, P753
   Charikar M., 2002, P 29 INT C AUT LANG
   DATAR M, 2002, P 13 ANN ACM SIAM S
   Domingos P., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P71, DOI 10.1145/347090.347107
   Ganti V., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P439, DOI 10.1109/ICDE.2000.839443
   Guha S, 2002, PROC INT CONF DATA, P567, DOI 10.1109/ICDE.2002.994775
   Hidber C, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P145, DOI 10.1145/304181.304195
   Hulten G., 2002, P 7 ACM SIGKDD INT C, P97
   LAMBERT D, 2002, P 7 ACM SIGKDD INT C, P305
   Manku G. S., 2002, P 28 INT C VER LARG, P346
   Qiao L., 2002, Proceedings of the Eleventh International Conference on Information and Knowledge Management. CIKM 2002, P469, DOI 10.1145/584792.584870
   Savasere A., 1995, P 21TH INT C VERY LA, P432
   Wang JY, 2004, PROC INT CONF DATA, P79, DOI 10.1109/ICDE.2004.1319986
   [No title captured]
NR 18
TC 5
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 606
EP 618
DI 10.1016/j.infsof.2005.06.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900014
DA 2024-07-18
ER

PT J
AU Ryoo, J
   Saiedian, H
AF Ryoo, Jungwoo
   Saiedian, Hossein
TI A framework for classifying and developing extensible architectural
   views
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software architecture; views; specification; refinement; taxonomy;
   derivation
ID SOFTWARE; MODEL
AB Despite its widespread use in the software architecture community, architectural views and relationships among them are poorly defined. A solid taxonomy of views is a critical factor in tackling this problem since it must adopt an unambiguous definition of views and provide rigorous criteria for classification. Nevertheless, the existing taxonomies of views fail to eliminate vagueness surrounding the definitions of views and their inter-relationships mainly due to their informal nature. One of the most significant consequences of these failures is inability to systematically define new views in support of domain-specialization. This paper is an attempt to resolve these outstanding problems by proposing a sound framework for creating new, customized taxonomies of views in a repeatable manner, based on the formal concept of refinement. (C) 2005 Elsevier B.V. All rights reserved.
C1 Univ Kansas, Dept Elect Engn & Comp Sci, Lawrence, KS 66045 USA.
   Penn State Univ, Altoona, PA 16601 USA.
C3 University of Kansas; Pennsylvania Commonwealth System of Higher
   Education (PCSHE); Pennsylvania State University
RP Saiedian, H (corresponding author), Univ Kansas, Dept Elect Engn & Comp Sci, Lawrence, KS 66045 USA.
EM saiedian@eecs.ku.edu
RI Saiedian, Hossein/ACP-6828-2022; Saiedian, Hossein/C-5608-2014
OI Saiedian, Hossein/0000-0001-5060-6332; Ryoo, Jungwoo/0000-0002-5971-9859
CR Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   ALLEN RJ, 1998, THESIS CARNEGIE MELL
   [Anonymous], 2002, P 24 INT C SOFTW ENG
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   [Anonymous], 1999, APPL SOFTWARE ARCHIT
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   Bass Len, 2012, SEI S SOFTW
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Clements P., 2003, SEI S SOFTW
   Dashofy EM, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P103, DOI 10.1109/WICSA.2001.948416
   GARLAN D, 2000, ACTIVITY LANGUAGE AD
   GARLAN D, 1997, P CASCON 97 TOR ONT, P169
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Herzum P., 1999, BUSINESS COMPONENT F
   HOARE CAR, 1985, COMMUNICATINGD SEQUE
   *IEEE, 2000, 1471 IEEE
   JAAKSI A, 1998, TRIED TRUE OBJECT DE
   JACKY J, 1997, WAY Z
   KRUCHTEN P, 1997, RATIONAL UNIFIED PRO, P692
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 1997, PROC INT CONF SOFTW, P692, DOI [10.1145/253228.253838, 10.1145/258368.258421]
   *OBJ MAN GROUP, 2003, OMG UN MOD LANG SPEC
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Purhonen A, 2004, J SYST SOFTWARE, V69, P57, DOI 10.1016/S0164-1212(03)00050-5
   ROMAN E, 2001, MASTERING ENTERPRISE
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Soni D., 1995, P 17 INT C SOFTW ENG, P196
   *SUN MICR INC, 2003, JAV TM2 PLATF ENT ED
NR 33
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 456
EP 470
DI 10.1016/j.infsof.2005.05.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900003
DA 2024-07-18
ER

PT J
AU Tseng, VS
   Lin, KW
AF Tseng, Vincent S.
   Lin, Kawuu W.
TI Efficient mining and prediction of user behavior patterns in mobile web
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT International Workshop on Web and Mobile Information Systems
CY MAR, 2005
CL Taipei, TAIWAN
DE location-based services; location prediction; mobility prediction;
   mobile web system; data mining
ID ALLOCATION
AB The development of wireless and web technologies has allowed the mobile users to request various kinds of services by mobile devices at anytime and anywhere. Helping the users obtain needed information effectively is an important issue in the mobile web systems. Discovery of user behavior can highly benefit the enhancements on system performance and quality of services. Obviously, the mobile user's behavior patterns, in which the location and the service are inherently coexistent, become more complex than those of the traditional web systems. In this paper, we propose a novel data mining method, namely SMAP-Mine that can efficiently discover mobile users' sequential movement patterns associated with requested services. Moreover, the corresponding prediction strategies are also proposed. Through empirical evaluation under various simulation conditions. SMAP-Mine is shown to deliver excellent performance in terms of accuracy, execution efficiency and scalability. Meanwhile. the proposed prediction strategies are also verified to be effective in measurements of precision, hit ratio and applicability. (C) 2006 Elsevier B.V. All rights reserved.
C1 Natl Cheng Kung Univ, Inst Comp Sci & Informat Engn, Tainan 701, Taiwan.
C3 National Cheng Kung University
RP Tseng, VS (corresponding author), Natl Cheng Kung Univ, Inst Comp Sci & Informat Engn, 1 Tahsueh Rd, Tainan 701, Taiwan.
EM tsengsm@mail.ncku.edu.tw
CR AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Akyildiz IF, 1999, P IEEE, V87, P1347, DOI 10.1109/5.775420
   BORGES J, 1999, P WORKSH WEB US AN U, P31
   CHANG CY, 2002, P ACM 11 INT C INF K
   Chen EL, 2001, IEEE T SYST MAN CY B, V31, P864, DOI 10.1109/3477.969490
   Chen MS, 1998, IEEE T KNOWL DATA EN, V10, P209, DOI 10.1109/69.683753
   CHEN Z, 2003, P 2003 IEEE INT C IN
   HAN J, 2000, P ACM INT C MAN DAT
   HOOKER G, 2004, P WEBKDD 2004 KDD WO
   HUANG JL, 2003, P 12 INT C INF KNOWL, P161
   Kyriakakos M, 2003, 14TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P191, DOI 10.1109/DEXA.2003.1232022
   Lee AJT, 2003, INFORM SYST, V28, P929, DOI 10.1016/S0306-4379(02)00112-6
   LI GH, 2001, P INT WORKSH PAR DIS
   LIN KW, 2002, DATA GENERATOR MOBIL
   NANOPOULOS D, 2001, P WEBKDD 2001 KDD WO, P68
   PADMANABHAN V, 1996, ACM SIGCOMM COMPUT C, V26
   PALPANAS T, 1999, P 4 WEB CACH WORKSH
   Papoulis, 1991, PROBABILITY RANDOM V, V3rd
   PEI J, 2000, P PAC AS C KNOWL DIS, P396
   Peng WC, 2000, PROC INT CONF PARAL, P573, DOI 10.1109/ICPP.2000.876175
   PENG WC, 2002, P 3 INT C MOB DAT MA, P105
   PITKOW J, 1999, P USENIX S INT TECHN
   PRAMUDIONO T, 2002, P 3 INT C MOB DAT MA, P139
   Saygin Y, 2002, IEEE T KNOWL DATA EN, V14, P1387, DOI 10.1109/TKDE.2002.1047775
   Su Z, 2000, PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, VOL I, P214, DOI 10.1109/WISE.2000.882395
   TAN PN, 2001, P WEBKDD 2001 KDD WO, P145
   TSENG S, 2002, P INT WORKSH DAT SOF
   TSENG S, 2004, IEEE T SYST MAN CYBE, V34
   TSENG SM, 2003, P 18 ACM S APPL COMP, P455
   Wang YD, 2004, LECT NOTES COMPUT SC, V2973, P895
   Yang Q, 2004, DATA MIN KNOWL DISC, V8, P253, DOI 10.1023/B:DAMI.0000023675.04946.f1
NR 32
TC 63
Z9 70
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2006
VL 48
IS 6
BP 357
EP 369
DI 10.1016/j.infsof.2005.12.014
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 049QP
UT WOS:000238031800002
DA 2024-07-18
ER

PT J
AU Wang, LZ
   Xie, KQ
   Chen, T
   Ma, XL
AF Wang, LZ
   Xie, KQ
   Chen, T
   Ma, XL
TI Efficient discovery of multilevel spatial association rules using
   partitions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE multilevel spatial association rules; spatial predicates; frequent
   predicates; equivalence classes; equivalence partition trees
AB Spatial data mining has been identified as an important task for understanding and use of spatial data- and knowledge-bases. In this paper, we present a new approach to discover strong multilevel spatial association rules in spatial databases based on partitioning the set of rows with respect to the spatial relations denoted as relation table R. Meanwhile, the introduction of the equivalence partition tree makes the discovery of multilevel spatial association rules easy and efficient. Experiments show that the new algorithm is efficient. (c) 2004 Elsevier B.V. All rights reserved.
C1 Yunnan Univ, Sch Informat, Dept Comp Sci & Engn, Kunming 650091, Peoples R China.
   Peking Univ, Ctr Informat Sci, Natl Lab Machine Percept, Beijing 100871, Peoples R China.
C3 Yunnan University; Peking University
RP Wang, LZ (corresponding author), Yunnan Univ, Sch Informat, Dept Comp Sci & Engn, Kunming 650091, Peoples R China.
EM lzhwang@ynu.edu.cn
RI , lizhen wang/HKW-1838-2023
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], P 4 INT S LARG SPAT
   [Anonymous], P PYOC ACM SIGMOD IN
   Clementini E, 2000, DATA KNOWL ENG, V34, P251, DOI 10.1016/S0169-023X(00)00017-3
   Han J., 2006, DATA MINING CONCEPTS
   Han Y., 2021, Proceedings of the 21st International Conference on Very Large Data Bases. VLDB'95, P420
   Kamber M., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P207
   LU H, 1998, P 1998 SIGMOD WORKSH
   MALERBA D, 2001, P WORKSH MULT REL DA, P18
   MALERBA D, MINING SPATIAL ASS R, P541
   PASQUIER N, 2000, P 8 INT C CONC STRUC, P259
   RAO KS, 1998, KMEANS CLUSTERING CA
   Savasere A., 1995, P 21TH INT C VERY LA, P432
   Wang Li-Zhen, 2000, Chinese Journal of Computers, V23, P1114
   WANG LZ, 2002, J COMPUTER ENG APPL, V38, P70
   Yen SJ, 2001, IEEE T KNOWL DATA EN, V13, P839, DOI 10.1109/69.956106
   Zaki MJ, 2000, IEEE T KNOWL DATA EN, V12, P372, DOI 10.1109/69.846291
   ZAKI MJ, 1998, P 3 ACM SIGMOD WORKS, P1
   ZAYANE OR, 2000, P 2000 INT C DAT ENG, P461
NR 19
TC 20
Z9 24
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2005
VL 47
IS 13
BP 829
EP 840
DI 10.1016/j.infsof.2004.03.007
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 974GF
UT WOS:000232578600001
DA 2024-07-18
ER

PT J
AU Hochstein, L
   Lindvall, M
AF Hochstein, L
   Lindvall, M
TI Combating architectural degeneration: a survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software architecture; architecture recovery; architecture compliance
ID DESIGN
AB As software systems evolve over time, they invariably undergo changes that can lead to a degeneration of the architecture. Left unchecked, degeneration may reach a level where a complete redesign is necessary, a task that requires significant effort. In this paper, we present a survey of technologies developed by researchers that can be used to combat degeneration, that is, technologies that can be employed in identifying. treating and researching degeneration. We also discuss the various causes of degeneration and how it can be prevented. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Maryland, Fraunhofer Ctr Expt Software Engn, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Univ Maryland, Fraunhofer Ctr Expt Software Engn, 4321 Hartwick Rd,Suite 500, College Pk, MD 20742 USA.
EM mlindvall@fc-md.umd.edu
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   Antoniol G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P23, DOI 10.1109/METRIC.1998.731224
   ANTONIOL G, 1999, IEEE INT C SOFTW MAI, P211
   ANTONIOL G, 1997, INT C SOFTW MAINT
   ARMSTRONG MN, 1998, P 5 WORKING C REV EN
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Beck Kent L., 2003, Test Driven Development By Example
   BHANSALI S, 1992, P 7 KNOWL BAS SOFTW
   BISHOP AM, 2003, CXREF
   Blewitt A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P324, DOI 10.1109/ASE.2001.989821
   BOOCH G, 1998, UNIFIED MODELING LAN
   Bosch J, 1998, J OBJECT-ORIENT PROG, V11, P18
   BRESCIANI P, 2001, P 2 INT WORKSH AG OR
   Brooks Frederick P., 1995, The mythical man-month
   BRYANT A, 2002, 1 INT C ASP OR SOFTW
   CHASE MP, 1998, ACM SIGPLAN WORKSH P
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CIMITILE A, 1995, J SYST SOFTWARE, V28, P117, DOI 10.1016/0164-1212(94)00049-S
   Cimitile A., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P216, DOI 10.1109/ICSM.1993.366940
   CINNEIDE MO, 1999, INT C SOFTW MAINT
   CLEMENTS PC, 1996, 8 INT WORKSH SOFTW S
   CRISPEN R, 1994, P TRI AD 94
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   DONZELLI P, 2003, REQUIREMENTS ENG MAR
   EDEN AH, 2001, 12 IEEE INT AUT SOFT, P143
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Finnigan PJ, 1997, IBM SYST J, V36, P564, DOI 10.1147/sj.364.0564
   Fiutem R, 1998, PROC IEEE INT CONF S, P94, DOI 10.1109/ICSM.1998.738497
   FIUTEM R, 1996, INT C SOFTW MAINT
   Florijn G, 1997, LECT NOTES COMPUT SC, V1241, P472, DOI 10.1007/BFb0053391
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARLAN D, 1993, INTRO SOFTWARE ARCHI
   Girard JF, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P66, DOI 10.1109/WCRE.1997.624577
   GODFREY MW, 2000, P 2 S CONSTR SOFTW E
   Gustafsson J, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P108, DOI 10.1109/CSMR.2002.995795
   HANNEMANN J, 2002, 17 ACM C OBJ OR PROG
   HOLT RC, 1996, WORK C REV ENG
   Kazman R, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P290, DOI 10.1109/ICSR.1998.685754
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Krikhaar R., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P371, DOI 10.1109/ICSM.1999.792635
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   LEHMAN MM, 1996, EUR WORKSH SOFTW PRO
   Lindvall M, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P77, DOI 10.1109/METRIC.2002.1011327
   Lung C.H., 1998, PROC 3 INT SOFTWARE, P101, DOI DOI 10.1145/288408.288434
   MANCORIDIS S, 1999, IEEE INT C SOFTW MAI
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MENDONCA NC, 1996, SIGSOFT 96 WORKSH 2, P101
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   MULLER HA, 1994, 62 C ASS CAN FRANC A
   MURPHY GC, 1995, 3 ACM SIGSOFT S FDN
   NIERE J, 2002, PATTERN BASED DESIGN
   Opdyke W.F., 1992, Refactoring Object-Oriented Frameworks
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Roberts KC, 1997, MICROCIRCULATION-LON, V4, P253, DOI 10.3109/10739689709146788
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Sametinger J, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P134, DOI 10.1109/CSMR.2002.995798
   Schmidt D., 2000, Pattern-Oriented Software Architecture, Patterns for Concurrent and Networked Objects, V2
   SCHWANKE RW, 1991, 13 INT C SOFTW ENG
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   SYSTA T, 2000, 4 EUR C SOFTW MAINT, P199
   SYSTA T, 2000, THESIS U TAMPERE FIN
   Tonella P., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P230, DOI 10.1109/ICSM.1999.792619
   TRAVASSOS G, 1999, C OBJ OR PROGR SYST
   Tu Q, 2002, PROG COMPREHEN, P127, DOI 10.1109/WPC.2002.1021334
   Tvedt RT, 2002, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSM.2002.1167796
   TVEDT RT, 2004, ADV COMPUTERS
   TVEDT RT, 2003, ADV COMPUTERS
   Tzerpos V, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P76, DOI 10.1109/WCRE.1997.624578
   VANGURP J, 2002, J SYST SOFTW, V61
   WEINAND A, 1998, P C OBJ OR PROGR SYS, P46
   Yu E., 1997, P 3 IEEE INT S REQ E
   1996, PATTERN LANGUAGES PR, V2
   1997, PATTERN LANGUAGES PR, V3
   1995, PATTERN LANGUAGES PR
   1999, PATTERN LANGUAGES PR, V4
NR 83
TC 46
Z9 54
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2005
VL 47
IS 10
BP 643
EP 656
DI 10.1016/j.infsof.2004.11.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 948IL
UT WOS:000230709200001
DA 2024-07-18
ER

PT J
AU Chang, SC
   Chung, YC
AF Chang, SC
   Chung, YC
TI From timetabling to train regulation - a new train operation model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE genetic algorithm; train operation model
ID ROUTES
AB A new train operation model proposed here not only considers the flexibility of train regulation, or train rescheduling problem, but also the objectives of timetabling process. A genetic algorithm is applied to solve this problem efficiently. Thus no matter the problem is planning the timetable of trains, the unusual passenger flow occurrence or the incident caused delay, our model will make the train regulation as the same as the timetable construction. This will simplify the work of administration. Our model also shows that once the delay occurred, the waiting time of the passengers will be the cost to delay every train. If the delay is not large enough, the system can have some rooms for removing the influence of the delay through our model. (c) 2004 Elsevier B.V. All rights reserved.
C1 Inst Informat Ind, Taipei, Taiwan.
   Natl Cheng Kung Univ, Tainan 70101, Taiwan.
C3 National Cheng Kung University
RP Inst Informat Ind, 18 FA,333,Sec 2,Dun Hwe S Rd, Taipei, Taiwan.
EM scchang@iii.org.tw; justim@dblab.csie.ncku.edu.tw
CR Abkowitz M., 1984, TRANSPORT RES REC, V961, P1
   [Anonymous], 1993, Modern Heuristics Technics for Combinatorial Problems: Tabu Search pp
   BARBER F, 2003, INTERACTIVE TRAIN SC, V2, P379
   BRUCKER P, 1990, J COMPUT APPL MATH, V30, P173, DOI 10.1016/0377-0427(90)90026-V
   CAI X, 1994, COMPUT OPER RES, V21, P499, DOI 10.1016/0305-0548(94)90099-X
   Caprara A, 2001, P 34 ANN HAW INT C, P1057
   CAREY M, 1994, TRANSPORT RES B-METH, V28, P333, DOI 10.1016/0191-2615(94)90033-7
   Chang SC, 2002, J AIR TRANSP MANAG, V8, P249, DOI 10.1016/S0969-6997(02)00006-6
   Chiu C. K., 2002, Constraints, V7, P167, DOI 10.1023/A:1015109732002
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   GOODMAN CJ, 2003, RRUKB11
   Holland JH., 1975, Ann Arbor
   Isaai MT, 2001, IEEE T SYST MAN CY C, V31, P87, DOI 10.1109/5326.923271
   LARDINOIS C, 1992, COMPUT OPER RES, V19, P139, DOI 10.1016/0305-0548(92)90088-M
   LEE CK, 2000, SIM RES RAP TRANS RE
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   NACHTIGALL K, IN PRESS EUROPEAN J
   Nachtigall K, 1998, PERIODIC NETWORK OPT
   Radcliffe N.J., 1997, HDB EVOLUTIONARY COM, pB2.5
   YANG GL, 2000, THESIS NATL CHEN KUN
NR 20
TC 53
Z9 55
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2005
VL 47
IS 9
BP 575
EP 585
DI 10.1016/j.infsof.2004.10.008
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934GQ
UT WOS:000229695300001
DA 2024-07-18
ER

PT J
AU Sai-ngern, S
   Lursinsap, C
   Sophatsathit, P
AF Sai-ngern, S
   Lursinsap, C
   Sophatsathit, P
TI An address mapping approach for test data generation of dynamic linked
   structures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE test data generation; linked structure; software
AB Software testing is an important technique to assure the correctness of the software. One of the essential prerequisite tasks of software testing is test data generation. This paper proposes an approach to generate test data specifically for dynamic pointer structures. In our context, a pointer is considered and handled as a location in memory, represented by a dynamic linear array that expands and shrinks during execution. As such, pointer test data can be directly generated from this linear array. The proposed technique can also support any dynamic structures, as well as homogeneous and heterogeneous recursive structures. (C) 2004 Elsevier B.V. All rights reserved.
C1 Chulalongkorn Univ, Fac Sci, AVIC Res Ctr, Dept Math, Bangkok 10330, Thailand.
C3 Chulalongkorn University
RP Chulalongkorn Univ, Fac Sci, AVIC Res Ctr, Dept Math, Bangkok 10330, Thailand.
EM Sittisak.sa@student.chula.ac.th
OI Sophatsathit, Peraphon/0000-0002-0769-4936
CR BEIZER B, 1990, SOFTWASRE TESTING TE
   *DRIVE, 1992, V1051 DRIVE
   Edvardsson Jon., 1999, Proceedings of the 2nd Conference on Computer Science and Engineering, P21
   Gardiner Stewart, 1999, TESTING SAFETY RELAT
   GOTLIEB A, 1998, INT S SOFTW TEST ANA
   GUPTA N, 1998, 6 INT S FDN SOFTW EN, P231
   Hind M, 1999, ACM T PROGR LANG SYS, V21, P848, DOI 10.1145/325478.325519
   HUMMEL J, 1994, P ACM SIGPLAN 94 C P, P218
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   MICHEL DC, 2001, LNCS
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   OFFUTT J, 1996, J SYSTEMS INTEGRATIO, V1, P391
   PRATHER RE, 1987, IEEE T SOFTWARE ENG, V13, P761, DOI 10.1109/TSE.1987.233487
   Sagiv M, 1998, ACM T PROGR LANG SYS, V20, P1, DOI 10.1145/271510.271517
   Sommerville I., 1992, SOFTWARE ENG, V4th
   STEENSGARRD B, 1996, ACM S PRINCIPLES PRO
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   TSOUKALAS MZ, 1993, IEEE T SOFTWARE ENG, V19, P687, DOI 10.1109/32.238569
   VISWANATHAN S, 2002, 17 IEEE INT C AUT SO, P149
   WILHELM R, 2000, INT C COMPL CONSTR M
NR 20
TC 9
Z9 12
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2005
VL 47
IS 3
BP 199
EP 214
DI 10.1016/j.infsof.2004.08.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 896QV
UT WOS:000226949500006
DA 2024-07-18
ER

PT J
AU Sentas, P
   Angelis, L
   Stamelos, I
   Bleris, G
AF Sentas, P
   Angelis, L
   Stamelos, I
   Bleris, G
TI Software productivity and effort prediction with ordinal regression
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software cost estimation; interval prediction; ordinal regression
AB In the area of software cost estimation, various methods have been proposed to predict the effort or the productivity of a software project. Although most of the proposed methods produce point estimates, in practice it is more realistic and useful for a method to provide interval predictions. In this paper, we explore the possibility of using such a method, known as ordinal regression to model the probability of correctly classifying a new project to a cost category. The proposed method is applied to three data sets and is validated with respect to its fitting and predictive accuracy. (C) 2004 Elsevier B.V. All rights reserved.
C1 Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM psentas@csd.auth.gr; lef@csd.auth.gr; stamelos@csd.auth.gr;
   bleris@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020
CR Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 2002, Applied Statistics for Software Managers
   Boehm BW., 1981, Software Engineering Economics
   Charles J, 1996, IEEE SOFTWARE, V13, P104
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Clark B, 1998, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1998.671610
   Draper NR., 1981, APPL REGRESSION ANAL
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Hosmer D W., 2004, Applied Logistic Regression
   Host M, 1997, INFORM SOFTWARE TECH, V39, P755, DOI 10.1016/S0950-5849(97)00027-X
   Host M, 1998, PROC INT CONF SOFTW, P332, DOI 10.1109/ICSE.1998.671386
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   KITCHENHAM B, 1998, IEEE T SOFTW ENG, V24
   KITCHENHAM B, 1998, P FESMA, P17
   MAXWELL K, 2000, P 22 INT C SOFTW ENG, P377
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   PROCACCINO JD, 2002, THESIS DREXEL U
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   ISBSG DATA DISK RELE
NR 25
TC 70
Z9 75
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2005
VL 47
IS 1
BP 17
EP 29
DI 10.1016/j.infsof.2004.05.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 875MG
UT WOS:000225423900003
DA 2024-07-18
ER

PT J
AU Lin, JJ
   Lin, TE
AF Lin, JJ
   Lin, TE
TI Object-oriented conceptual modeling for commitment-based collaboration
   management in virtual enterprises
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE virtual enterprise; collaboration management; object-orientation;
   conceptual modeling; commitment-based model
AB For the rapid progress of internet technologies in recent years, Electronic Commerce (EC) has gained attention as a major theme for enterprises to keep their competitiveness. From the perspective of effective resources utilization, it becomes now an important goal for an enterprise to promote its performance and competitiveness through integrating itself and relevant suppliers and consumers as a virtual group to achieve the so-called Business-to-Business EC. In this paper, we propose an object-oriented modeling approach that addresses the management of collaboration on the Internet between enterprises. The approach divides those required mechanisms for collaboration management into three layers: commitment, role, and activity ones. With this architecture, two enterprises may collaborate via the establishment and maintenance of commitment, the collaboration and coordination between roles, and the interaction and coordination between activities. For specification, an object-oriented model is presented for each layer that describes the working details of that layer. To illustrate, these models are applied in a typical manufacturing supply chain application among various enterprises. (C) 2003 Elsevier B.V. All rights reserved.
C1 Chuan Univ, Dept Informat Management, Kwetshan, Taoyuan County, Taiwan.
   Chaoyang Univ Technol, Dept Informat Management, Wufeng, Taichung County, Taiwan.
C3 Chaoyang University of Technology
RP Lin, JJ (corresponding author), Chuan Univ, Dept Informat Management, Kwetshan, Taoyuan County, Taiwan.
EM jlin@mcu.edu.tw; linlingo@maii.cyut.edu.tw
CR Alonso G, 1999, RIDE-VE '99 - NINTH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES ON DATA ENGINEERING: INFORMATION TECHNOLOGY FOR VIRTUAL ENTERPRISES, PROCEEDINGS, P132, DOI 10.1109/RIDE.1999.758645
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], ANN SOFTWARE ENG
   Aparicio M, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P304, DOI 10.1109/HASE.1998.731634
   Baker D., 1999, Proceedings Fourth IFCIS International Conference on Cooperative Information Systems. CoopIS 99 (Cat. No.PR00384), P79, DOI 10.1109/COOPIS.1999.792160
   Georgakopoulos D, 1999, INFORM SYST, V24, P429, DOI 10.1016/S0306-4379(99)00026-5
   Geppert A, 1998, INT J COOP INF SYST, V7, P297, DOI 10.1142/S0218843098000143
   Hoffner Y, 1999, RIDE-VE '99 - NINTH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES ON DATA ENGINEERING: INFORMATION TECHNOLOGY FOR VIRTUAL ENTERPRISES, PROCEEDINGS, P64, DOI 10.1109/RIDE.1999.758602
   Jain AK, 1999, COMMUN ACM, V42, P62, DOI 10.1145/295685.295702
   JAIN K, 1997, P 4 ISPE INT C CONC, P469
   Klingemann J, 1999, RIDE-VE '99 - NINTH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES ON DATA ENGINEERING: INFORMATION TECHNOLOGY FOR VIRTUAL ENTERPRISES, PROCEEDINGS, P100, DOI 10.1109/RIDE.1999.758620
   NGU A, 1999, 9 IEEE INT WORKSH RE, P140
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Peterson J.L., 1977, ACM Comput. Surv, V9, P223
   SCHUSTER H, 2000, 16 INT C DAT ENG ICD, P677
   Tarhan A., 1999, Proceedings 25th EUROMICRO Conference. Informatics: Theory and Practice for the New Millennium, P210, DOI 10.1109/EURMIC.1999.794783
   YANG X, 2001, 3 INT S COOP DAT SYS, P159
   [No title captured]
   [No title captured]
NR 20
TC 14
Z9 20
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2004
VL 46
IS 4
BP 209
EP 217
DI 10.1016/S0950-5849(03)00046-6
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 776CX
UT WOS:000189098400001
DA 2024-07-18
ER

PT J
AU Piccinelli, G
   Finkelstein, A
   Costa, T
AF Piccinelli, G
   Finkelstein, A
   Costa, T
TI Flexible B2B processes: the answer is in the nodes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE B2B integration; B2B processes; RosettaNet
AB The time and costs involved in connecting the IT systems of two companies impact the actual formation of business relationships. A flexible infrastructure for process management is instrumental for rapid and cost-effective B2B integration. One dimension of flexibility that system integrators identify as critical is node-level interaction. In this paper, we discuss the findings of the Nile project on B2B process integration. In particular, we present the methodology defined in Nile for the semi-automatic reconciliation of node-level incompatibilities. (C) 2003 Elsevier B.V. All rights reserved.
C1 UCL, London WC1E 6BT, England.
   Hewlett Packard Labs, Bristol BS12 6QZ, Avon, England.
C3 University of London; University College London; Hewlett-Packard
RP Piccinelli, G (corresponding author), UCL, Mortimer St, London WC1E 6BT, England.
EM g.piccinelli@cs.ucl.ac.uk; a.finkelstein@cs.ucl.ac.uk;
   tomcos@hplb.hpl.hp.com
CR FARBEY B, 2001, P REQ ENG RE01
   FISHER L, 2002, WORKFLOW HDB
   HAUG H, 2001, SOFTWARE MANAGEMENT
   Kak R., 2002, IMPLEMENTING ROSETTA
   Kalakota R., 1996, FRONTIERS ELECT COMM
   Kaplan S., 1999, B2B E-Commerce Hubs: Towards a taxonomy of business models
   PICCINELLI G, 2002, P INT C SYST CYB INF
   REILLY B, 1997, NEXT GENERATION E CO
   Schwartz DG, 1995, Cooperating Heterogeneous Systems
   TIMMERS P., 1999, ELECT COMMERCE STRAT
   VALACICH J, 2000, ESSENTIALS SYSTEM AN
NR 11
TC 3
Z9 3
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2003
VL 45
IS 15
BP 1061
EP 1063
DI 10.1016/S0950-5849(03)00134-4
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 737GZ
UT WOS:000186223200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Crook, R
   Ince, D
   Nuseibeh, B
AF Crook, R
   Ince, D
   Nuseibeh, B
TI Modelling access policies using roles in requirements engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th International Workshop on Requirements Engineering-Foundation for
   Software Quality (REFSQ 02)
CY SEP 09-10, 2002
CL ESSEN, GERMANY
DE access policies; security requirements; roles
AB Pressures are increasing on organisations to take an early and more systematic approach to security. A key to enforcing security is to restrict access to valuable assets. We regard access policies as security requirements that specify such restrictions. Current requirements engineering methods are generally inadequate for eliciting and analysing these types of requirements, because they do not allow complex organisational structures and procedures that underlie policies to be represented adequately. This paper discusses roles and why they are important in the analysis of security. The paper relates roles to organisational theory and how they could be employed to define access policies. A framework is presented, based on these concepts, for analysing access policies. (C) 2003 Elsevier B.V. All rights reserved.
C1 Open Univ, Dept Comp, Secur Requirements Grp, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Crook, R (corresponding author), Open Univ, Dept Comp, Secur Requirements Grp, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM robert.crook@t-online.de; d.c.ince@open.ac.uk; b.a.nuseibeh@open.ac.uk
OI Nuseibeh, Bashar/0000-0002-3476-053X
CR Anton A.I., 1997, GOAL IDENTIFICATION
   ANTON AI, 2001, RECENT ADV SECURE PR
   BACON J, 2001, LNCS, P107
   BACON M, 2001, LNCS, P107
   Barka E, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P168, DOI 10.1109/ACSAC.2000.898870
   BELL D, 1973, 2547 MITRE, V2
   Bertino E., 2000, P 5 ACM WORKSH ROL B, P21, DOI DOI 10.1145/344287.344298
   *BRIT STAND I, 1999, BS7991 BRIT STAND I
   Chung L., 1993, Advanced Information Systems Engineering 5th International Conference. CAiSE '93 Proceedings, P234
   Clark D. D., 1987, Proceedings of the 1987 IEEE Symposium on Security and Privacy (Cat. No.87CH2416-6), P184
   COVINGTONMJ, 2001, P 6 ACM S ACC CONTR, P10
   CROOK R, 2002, P 8 INT WORKSH REQ E
   DAMIANOU N, 2000, DOC2001 IMP COLL
   DAMIANOU NC, 2002, THESIS IMPERIAL COLL, pCH2
   DARDENNE A, 1993, GOAL DIRECTED REQUIR, V20
   *DEP DEF, 1985, 520028STD DEP DEF
   FONTAINE PJ, 2001, THESIS U CATHOLIQUE
   Georgiadis ChristosK., 2001, ACM SACMAT, P21, DOI DOI 10.1145/373256.373259
   Handy CB., 1985, UNDERSTANDING ORG, V3rd
   Jajodia S, 1997, P IEEE S SECUR PRIV, P31, DOI 10.1109/SECPRI.1997.601312
   LUPU E, 1998, THESIS IMPERIAL COLL
   Mintzberg Henry., 1992, STRUCTURE 5 DESIGNIN
   Moffett J.D., 1998, PROC ACM WORK ROLE B, P63, DOI [10.1145/286884.286900, DOI 10.1145/286884.286900]
   NYANCHAMA M, 1995, P IFIP WG 11 3 9 ANN, P129
   Sandhu R., 2000, Symposium on Access Control Models and Technologies: Proceedings of the fifth ACM workshop on Role-based access control, V26, P47, DOI 10.1145/344287.344301
   Sandhu Ravi., 1998, P 3 ACM WORKSHOP ROL, P47, DOI DOI 10.1145/286884.286893
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   THOMAS RK, 1994, IEEE P COMP SEC FDN, V7, P66
   THOMAS RK, 1997, P 2 ACM WORKSH ROL B
   YAO W, 2001, SACMAT 01 CHANT VIRG
   YU E, 2000, P 3 WORKSH DEC FRAUD
   Yu E., 1995, MODELING STRATEGIC R
NR 32
TC 32
Z9 33
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2003
VL 45
IS 14
BP 979
EP 991
DI 10.1016/S0950-5849(03)00097-1
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 732QT
UT WOS:000185957600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kamsties, E
   von Knethen, A
   Reussner, R
AF Kamsties, E
   von Knethen, A
   Reussner, R
TI A controlled experiment to evaluate how styles affect the
   understandability of requirements specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th International Workshop on Requirements Engineering-Foundation for
   Software Quality (REFSQ 02)
CY SEP 09-10, 2002
CL ESSEN, GERMANY
DE experiment; specification style; understandability; unified modeling
   language; software cost reduction
AB This paper presents a controlled experiment in which two different requirements specification styles (white-box and black-box) were compared concerning the understandability of two requirements specifications from the viewpoint of a customer. The results of the experiment confirm the common belief that black-box requirements specifications (e.g., documented with SCR) are easier to understand from a customer point of view than white-box specifications (e.g., documented with UML). Questions about particular functions and behavior of the specified system were answered faster and more correctly by the participants. This result suggests that using a black-box specification style when communicating with customers is beneficial. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Duisburg Essen, D-45117 Essen, Germany.
   Fraunhofer Inst Expt Software Engn, D-67661 Kaiserslautern, Germany.
   Monash Univ, Distributed Syst Technol Ctr, Caulfield, Vic 3145, Australia.
C3 University of Duisburg Essen; Fraunhofer Gesellschaft; Monash University
RP Kamsties, E (corresponding author), Univ Duisburg Essen, Schutzenbahn 70, D-45117 Essen, Germany.
EM kamsties@sse.uni-essen.de; vknethen@iese.fhg.de; reussner@acm.org
OI Reussner, Ralf/0000-0002-9308-6290
CR [Anonymous], 1992, The Z Notation
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 2000, Kluwer international series in software engineering
   AWAD M, 1996, OBJECT ORIENTATED TE
   BERRY DM, 2000, WHAT NOT WHEN IS REA
   Bodart F, 2001, INFORM SYST RES, V12, P384, DOI 10.1287/isre.12.4.384.9702
   Booth G., 1998, UNIFIED SOFTWARE DEV
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Britton C, 1999, HUM-COMPUT INTERACT, V14, P191, DOI 10.1207/s15327051hci1401&2_6
   CURTIS B, 1989, J SYST SOFTWARE, V9, P167, DOI 10.1016/0164-1212(89)90019-8
   DAVIS A, 1993, REQUIREMENTS ENG OBJ
   Gause D.C., 1989, EXPLORING REQUIREMEN
   HEITMEYER C, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P109, DOI 10.1109/CMPASS.1995.521891
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   HENINGER KL, 1980, IEEE T SOFTWARE ENG, V6, P2, DOI 10.1109/TSE.1980.230208
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   KAMSTIES E, 2001, P 6 CAISE IFIP8 1 IN
   KAMSTIES E, EXPT MAT CONTROLLED
   Kovitz B.L, 1998, PRACTICAL SOFTWARE R
   MILLER J, 1994, EFOCS1594 U STRATHCL
   MILLS HD, 1988, STEPWISE REFINEMENT
   *RAT SOFTW CORP, 1999, OMG UN MOD LANG
   Spector P.E., 1981, RES DESIGNS QUANTITA
   VONKNETHEN A, 2002, THESIS FRAUNHOFER, V9
NR 25
TC 17
Z9 17
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2003
VL 45
IS 14
BP 955
EP 965
DI 10.1016/S0950-5849(03)00098-3
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 732QT
UT WOS:000185957600003
DA 2024-07-18
ER

PT J
AU Li, M
   Qi, M
AF Li, M
   Qi, M
TI MAPBOT: a Web based map information retrieval system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE user interface agent; agent interaction; scalable vector graphics
   visualization; information retrieval; interactive systems
AB Many types of information are geographically referenced and interactive maps provide a natural user interface to such data. However, map presentation in geographical information systems and on the Web is closed related to traditional cartography and provides a very limited interactive experience. In this paper, we present MAPBOT, an interactive Web based map information retrieval system in which Web users can easily and efficiently search geographical information with the assistance of a user interface agent (UIA). Each kind of map feature such as a building or a motorway works as an agent called a Maplet. Each Maplet has a user interface level to assist the user to find information of interest and a graphic display level that controls the presence and the appearance of the feature on the map. The semantic relationships of Maplets are defined in an Ontology Repository provided by the system which is used by the UIA to assist a user to semantically and efficiently search map information interested. An Ontology Editor with a graphic user interface has been implemented to update the Ontology Repository. Visualization on the client is based on Scalable Vector Graphics which provides a high quality Web map. (C) 2003 Elsevier B.V. All rights reserved.
C1 Brunel Univ, Dept Elect & Comp Engn, Uxbridge UB8 3PH, Middx, England.
   Univ Bath, Dept Comp Sci, Bath BA2 7AY, Avon, England.
C3 Brunel University; University of Bath
RP Li, M (corresponding author), Brunel Univ, Dept Elect & Comp Engn, Uxbridge UB8 3PH, Middx, England.
CR Alberts L.K., 1993, Ymir: An ontology for engineering design
   Balabanovic M., 1995, AAAI SPRING S INF GA
   Bates MJ, 1998, J AM SOC INFORM SCI, V49, P1185, DOI 10.1002/(SICI)1097-4571(1998110)49:13<1185::AID-ASI6>3.0.CO;2-V
   Batty M., 1999, MULTIAGENT SIMULATIO
   Bechhofer S., 1999, Proceedings User Interfaces to Data Intensive Systems, P158, DOI 10.1109/UIDIS.1999.791472
   BORGO S, 1997, P 1997 WORKSH QUAL R
   BULLOCK J, 1999, THESIS U MANCHESTER
   *CARN MELL U ROB I, 1998, RETSINA
   Chen L., 1998, P 2 INT C AUT AG MUL
   DALOISI D, 1995, INFO AGENT INTERFACE
   FRANKLIN S, 1996, 3 INT WORKSH AG THEO
   Grice H P., 1978, Syntax and semantics, V9
   GUARINO N, 0199 LABSEDCNR
   HONG JI, 2001, SITUATED INTERACTION, V5, P78
   Jennings N. R., 1998, Autonomous agents and multi-agent systems, P7, DOI DOI 10.1023/A:1010090405266
   Kandogan E., 1997, P SIGCHI C HUMAN FAC, P250
   KNOBLOCK C, 1994, P 2 INT C COOP INF S
   LANGTON C, SWARM SIMULATION SYS
   LIEBERMAN H, 1995, CHI RES S
   Maes Pattie, 1994, Artificial Life, V1, P135
   Nardi BA, 1998, COMMUN ACM, V41, P96, DOI 10.1145/272287.272331
   NWANA HS, 1996, KNOWL ENG REV, V11, P1
   OBRIEN P, 1999, P ACIS 99
   RESNICK P, 1994, 22 ANN TEL POL RES C
   RICH C, 1996, ACM S US INT SOFTW T
   TSOU MH, 1996, P 6 INT S SPAT DAT H
   INFOSLEUTH AGENT SYS
NR 27
TC 2
Z9 3
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 15
PY 2003
VL 45
IS 10
BP 691
EP 698
DI 10.1016/S0950-5849(03)00082-X
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715NN
UT WOS:000184978800006
DA 2024-07-18
ER

PT J
AU Liang, Y
AF Liang, Y
TI From use cases to classes: a way of building object model with UML
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object modelling; use case; use case's goal; class; UML
AB In a use case-driven process, classes in the class diagram need to be identified from use cases in the use case diagram. Current object modelling approaches identify classes either from use case descriptions, or using classic categories. Both ways are inefficient when use cases can be described with many scenarios in different words. This paper represents a new approach that identifies classes based on goals of use cases without descriptions. The approach produces use case-entity diagrams as a vehicle for deriving classes from use cases and to show the involvement of classes in use cases of a system. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Univ Paisley, Dept Comp & Informat Syst, Paisley PA1 2BE, Renfrew, Scotland.
C3 University of West Scotland
RP Liang, Y (corresponding author), Univ Paisley, Dept Comp & Informat Syst, Paisley PA1 2BE, Renfrew, Scotland.
CR Allen Paul., 1998, Component-based development for enterprise systems: Applying the SE- LECT Perspective
   ALUESEN S, 1998, IEEE SOFTWARE    MAR, P76
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], UNIFIED SOFTWARE DEV
   [Anonymous], USE CASE DRIVEN OBJE
   [Anonymous], USING UML SOFTWARE E
   Bennett S., 1999, OBJECT ORIENTED SYST
   BERRISFORD G, 1998, J OBJECT ORIENTE MAR, P6
   BOOCH G, 1999, UNIFIED MODELLING LA
   Booch G., 1994, Object-Oriented Design with Applications
   BRAY IK, 2002, INRO REQUIREMENTS EN
   GOSSAIN S, 1998, OBJECT MODELLING DES
   GRAHAM I, 1998, J OBJECT ORIENTE JAN, P76
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HENDERSONSELLER.B, 1998, J OBJECT ORIENTE NOV, P60
   JAAKSI A, 1998, J OBJECT ORIENTE JAN, P17
   Larman Craig., 2002, APPLYING UML PATTERN, V3nd
   Lethbridge T.C., 2001, Object-oriented Software Engineering: Practical Software Development Using UML and Java
   LIANG Y, 1994, P 4 INT C INF SYST D, P625
   LIANG Y, 2000, J OBJECT ORIENTE JUN, P27
   Mattingly L, 1998, J OBJECT-ORIENT PROG, V11, P77
   MONARCHI DE, 1992, COMMUN ACM, V35, P35, DOI 10.1145/130994.130995
   OESTERICH B, 1999, DEV SOFTWARE UML
   OLLE TW, 1988, INFORMATION SYSTEMS
   RUMBAUGH J, 1999, UNIFIED MODELLING LA
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SHLAER S, 1992, OBJECT LIFECYCLE MOD
   Shlaer S, 1988, OBJECT ORIENTED SYST
   Sommerville I., 1996, Software Engineering, V5th
   STROUSTRUP B, 1991, CPLUSPLUS PROGRAMMIN
NR 30
TC 18
Z9 25
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2003
VL 45
IS 2
BP 83
EP 93
AR PII S0950-5849(02)00164-7
DI 10.1016/S0950-5849(02)00164-7
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 640QC
UT WOS:000180698600002
DA 2024-07-18
ER

PT J
AU Lee, JC
   Chen, CY
AF Lee, Jung-Chieh
   Chen, Chung -Yang
TI The impact of knowledge inertia on process tailoring in the dynamic
   development of software projects in Chinese industries
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software process tailoring (SPT); Knowledge inertia; Team autonomy;
   Knowledge diversity; SPT
ID ABSORPTIVE-CAPACITY; FUNCTIONAL DIVERSITY; PROCESS IMPROVEMENT; TEAM
   PERFORMANCE; MODERATING ROLE; TASK CONFLICT; AGILE; MANAGEMENT;
   CAPABILITY; INNOVATION
AB Context: This paper stresses the importance of continual planning in the dynamic development of software projects and highlights a decisional situation: should teams follow process standards and past experiences for safety, or should they take different learning paths and innovate the development despite the risk of experimenting with new process solutions. Objective: To address this situation, we emphasize software process tailoring (SPT), a team-based planning practice in software projects, and utilize knowledge inertia theory to investigate how experience and learning inertia influence the efficiency and effectiveness of conducting SPT given autonomous and knowledge-diverse team environments. Method: This study employed a split questionnaire design to collect samples. A total of 88 Chinese software teams from 45 firms with software development functions in various industries participated in the research. In particular, a software team delegated at least two team members who have SPT experience to participate in the survey. The partial least squares (PLS) approach was adopted to analyze the data. Results: Software teams are found to conveniently adopt and accommodate previous similar process solutions when familiar learning routes are formed (learning inertia), leading teams to make efficient but ineffective tailoring decisions. Experience inertia is found to facilitate effective process redesign. Surprisingly, autonomous software teams tend to follow familiar ways when tailoring development. Knowledge diversity diminishes the effect of learning inertia on SPT effectiveness, reflecting that knowledge-diverse teams rely less on past learning routes and can develop more creative tailoring solutions. Conclusion: Experience and learning inertia have distinct effects on SPT performance. Team autonomy and knowledge diversity contextually affect teams' tailoring experience and learning routines, which subsequently determine SPT outcomes.
C1 [Lee, Jung-Chieh] Beijing Normal Univ Zhuhai, Int Business & Management Res Ctr, Zhuhai, Peoples R China.
   [Chen, Chung -Yang] Natl Cent Univ, Dept Informat Management, 300 Zhongda Rd, Taoyuan City 32001, Taiwan.
C3 Beijing Normal University; Beijing Normal University Zhuhai; National
   Central University
RP Chen, CY (corresponding author), Natl Cent Univ, Dept Informat Management, 300 Zhongda Rd, Taoyuan City 32001, Taiwan.
EM cychen@mgt.ncu.edu.tw
OI Lee, Jung-Chieh/0000-0001-7605-6463
CR Açikgöz A, 2016, CREAT INNOV MANAG, V25, P90, DOI 10.1111/caim.12155
   Akbar R, 2019, IEEE ACCESS, V7, P139852, DOI 10.1109/ACCESS.2019.2944122
   Akgun AE, 2014, INT J INFORM MANAGE, V34, P37, DOI 10.1016/j.ijinfomgt.2013.09.007
   Akgün AE, 2012, J PROD INNOVAT MANAG, V29, P432, DOI 10.1111/j.1540-5885.2012.00916.x
   Albort-Morant G, 2020, INT J ENV RES PUB HE, V17, DOI 10.3390/ijerph17020520
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Barnes W, 2004, J ECON ISSUES, V38, P371, DOI 10.1080/00213624.2004.11506696
   Basili V. R., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P345
   Bass JM, 2016, INFORM SOFTWARE TECH, V75, P1, DOI 10.1016/j.infsof.2016.03.001
   Becker, 2015, SMARTPLS 3
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Benitez-Amado J, 2015, INFORM TECHNOL MANAG, V16, P207, DOI 10.1007/s10799-015-0226-4
   BRISLIN RW, 1970, J CROSS CULT PSYCHOL, V1, P185, DOI 10.1177/135910457000100301
   Campanelli AS, 2018, J SYST SOFTWARE, V137, P366, DOI 10.1016/j.jss.2017.12.012
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Cemal A., 2014, Educ. Res. Rev., V9, P1143
   Chatterjee S, 2021, INFORM SYST J, V31, P294, DOI 10.1111/isj.12311
   Chen CY, 2023, DATA BASE ADV INF SY, V54, P46, DOI 10.1145/3583581.3583585
   Chen CY, 2023, SOFTWARE QUAL J, V31, P89, DOI 10.1007/s11219-022-09597-y
   Chen P.C., 2021, Advances in Software Engineering, Education, and E-Learning, P523
   Cheung SY, 2016, HUM RELAT, V69, P1507, DOI 10.1177/0018726715615684
   Ciriello RF, 2022, INFORM MANAGE-AMSTER, V59, DOI 10.1016/j.im.2022.103645
   Clarke P, 2015, IEEE T SOFTWARE ENG, V41, P1169, DOI 10.1109/TSE.2015.2467388
   COHEN WM, 1990, ADMIN SCI QUART, V35, P128, DOI 10.2307/2393553
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Cui TR, 2018, INFORM MANAGE-AMSTER, V55, P576, DOI 10.1016/j.im.2017.12.002
   Darnall N, 2010, J MANAGE STUD, V47, P1072, DOI 10.1111/j.1467-6486.2009.00873.x
   Dong YT, 2017, J ORGAN BEHAV, V38, P439, DOI 10.1002/job.2134
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   Fowler M., 2001, Software Development, V9, P28
   Fox S, 2019, TECHNOL SOC, V57, P86, DOI 10.1016/j.techsoc.2018.12.009
   García J, 2011, INFORM SOFTWARE TECH, V53, P834, DOI 10.1016/j.infsof.2011.03.002
   Genus A, 2012, INT J PROJ MANAG, V30, P117, DOI 10.1016/j.ijproman.2010.12.002
   Gerwin D, 1997, J ENG TECHNOL MANAGE, V14, P291, DOI 10.1016/S0923-4748(97)00013-1
   Gibson C, 2003, ADMIN SCI QUART, V48, P202, DOI 10.2307/3556657
   Ginsberg M., 1995, CMUSEI94TR024
   Gjoystdal S, 2020, INT J INF TECHNOL PR, V11, P95, DOI 10.4018/IJITPM.2020070106
   Hair J. F., 2017, PRIMER PARTIAL LEAST, DOI [https://doi.org/10.1108/EBR-10-2013-0128, DOI 10.1007/978-3-030-80519-7]
   Hair J, 2017, IND MANAGE DATA SYST, V117, P442, DOI 10.1108/IMDS-04-2016-0130
   Hair JF, 2012, J ACAD MARKET SCI, V40, P414, DOI 10.1007/s11747-011-0261-6
   He J, 2007, J MANAGE INFORM SYST, V24, P261, DOI 10.2753/MIS0742-1222240210
   Henseler J, 2016, IND MANAGE DATA SYST, V116, P2, DOI 10.1108/IMDS-09-2015-0382
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Horwitz SK, 2007, J MANAGE, V33, P987, DOI 10.1177/0149206307308587
   Hsu JSC, 2017, INT J PROJ MANAG, V35, P1557, DOI 10.1016/j.ijproman.2017.08.009
   Hu J, 2017, J APPL PSYCHOL, V102, P935, DOI 10.1037/apl0000203
   Alegría JAH, 2014, J SOFTW-EVOL PROC, V26, P386, DOI 10.1002/smr.1576
   JAMES LR, 1984, J APPL PSYCHOL, V69, P85, DOI 10.1037/0021-9010.69.1.85
   Janis IL, 2008, IEEE ENG MANAGEMENT, V36, P36, DOI DOI 10.1109/EMR.2008.4490137
   Kakar AKS, 2018, INT J HUM-COMPUT ST, V111, P1, DOI 10.1016/j.ijhcs.2017.11.001
   Kalleberg AL, 2009, ACTA SOCIOL, V52, P99, DOI 10.1177/0001699309103999
   Kalus G., 2013, Proceedings of the 2013 International Conference on Software and System Process, P171
   Kaur R., 2013, arXiv
   Kim J, 2015, INT J TECHNOL MANAGE, V67, P269, DOI 10.1504/IJTM.2015.068219
   Kirkman BL, 2004, ACAD MANAGE J, V47, P175, DOI 10.5465/20159571
   Kock N, 2015, INT J E-COLLAB, V11, P1, DOI 10.4018/ijec.2015100101
   Koubaa Y, 2014, ASIA PAC J MARKET LO, V26, P315, DOI 10.1108/APJML-10-2013-0113
   Kuenzi M, 2009, J MANAGE, V35, P634, DOI 10.1177/0149206308330559
   Law F, 2018, EUR MANAG J, V36, P341, DOI 10.1016/j.emj.2017.05.004
   Lee G, 2010, MIS QUART, V34, P87
   Lee JC, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10225-3
   Lee JC, 2022, INT J BANK MARK, V40, P631, DOI 10.1108/IJBM-08-2021-0394
   Lee JC, 2021, INFORM SYST J, V31, P120, DOI 10.1111/isj.12303
   Lee JC, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110545
   Lee JC, 2020, J ENTERP INF MANAG, V33, P502, DOI 10.1108/JEIM-07-2019-0202
   Lee JC, 2016, COMPUT HUM BEHAV, V54, P462, DOI 10.1016/j.chb.2015.08.030
   Li M, 2018, IND MANAGE DATA SYST, V118, P1052, DOI 10.1108/IMDS-08-2017-0350
   Liang TP, 2007, IND MANAGE DATA SYST, V107, P636, DOI 10.1108/02635570710750408
   Liang TP, 2010, IEEE T ENG MANAGE, V57, P477, DOI 10.1109/TEM.2009.2033049
   Liao SH, 2002, EXPERT SYST APPL, V22, P21, DOI 10.1016/S0957-4174(01)00046-X
   Liao SH, 2008, TECHNOVATION, V28, P183, DOI 10.1016/j.technovation.2007.11.005
   Lin RR, 2023, ASLIB J INFORM MANAG, DOI 10.1108/AJIM-07-2022-0337
   Lin TC, 2015, INT J PROJ MANAG, V33, P1692, DOI 10.1016/j.ijproman.2015.07.007
   Majocchi A, 2005, INT BUS REV, V14, P719, DOI 10.1016/j.ibusrev.2005.07.004
   Martínez-Ruiz T, 2012, SOFTWARE QUAL J, V20, P229, DOI 10.1007/s11219-011-9147-6
   Maynard MT, 2012, J MANAGE, V38, P1231, DOI 10.1177/0149206312438773
   Milliken FJ, 1996, ACAD MANAGE REV, V21, P402, DOI 10.2307/258667
   Min H, 2016, INT J HOSP MANAG, V56, P126, DOI 10.1016/j.ijhm.2016.04.010
   NEDERHOF AJ, 1985, EUR J SOC PSYCHOL, V15, P263, DOI 10.1002/ejsp.2420150303
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Noll J, 2019, LECT NOTES COMPUT SC, V11915, P341, DOI 10.1007/978-3-030-35333-9_25
   Oktaba H, 2007, COMPUTER, V40, P21, DOI 10.1109/MC.2007.361
   Park S, 2006, EXPERT SYST APPL, V30, P179, DOI 10.1016/j.eswa.2005.06.023
   Park SH, 2013, IET SOFTW, V7, P47, DOI 10.1049/iet-sen.2011.0192
   Park S, 2011, J SYST SOFTWARE, V84, P528, DOI 10.1016/j.jss.2010.11.919
   Pellegrini MM, 2020, J KNOWL MANAG, V24, P1445, DOI 10.1108/JKM-01-2020-0034
   Pieterse AN, 2013, ACAD MANAGE J, V56, P782, DOI 10.5465/amj.2010.0992
   Pillat RM, 2015, INFORM SOFTWARE TECH, V57, P95, DOI 10.1016/j.infsof.2014.09.004
   Pinjani P, 2013, INFORM MANAGE-AMSTER, V50, P144, DOI 10.1016/j.im.2012.10.002
   PMI, 2021, A guide to the project management body of knowledge:(PMBOK guide), V7th
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Polites GL, 2012, MIS QUART, V36, P21
   Rico R, 2007, J MANAGE, V33, P111, DOI 10.1177/0149206306295307
   Roberts N, 2012, MIS QUART, V36, P625
   Romero HL, 2015, INFORM SOFTWARE TECH, V63, P31, DOI 10.1016/j.infsof.2015.03.004
   Rueda S, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106361
   Rumelt RP., 1995, RESOURCES EVOLUTIONA, P101, DOI DOI 10.1007/978-1-4615-2201-0_5
   Russo D, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464938
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Schippers MC, 2015, J MANAGE, V41, P769, DOI 10.1177/0149206312441210
   Schippers MC, 2013, J ORGAN BEHAV, V34, P6, DOI 10.1002/job.1784
   Schneider B, 2003, J APPL PSYCHOL, V88, P836, DOI 10.1037/0021-9010.88.5.836
   Schubert T, 2020, ACAD MANAGE J, V63, P272, DOI 10.5465/amj.2017.0741
   Seong JY, 2015, J MANAGE, V41, P1184, DOI 10.1177/0149206312453738
   Sharifirad MS., 2010, INT J INFORM TECHNOL, V2, P323
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sillic M, 2019, COMPUT SECUR, V80, P108, DOI 10.1016/j.cose.2018.09.012
   Sirén C, 2017, LONG RANGE PLANN, V50, P145, DOI 10.1016/j.lrp.2016.09.005
   Slaughter SA, 2006, MIS QUART, V30, P891
   Söllner M, 2018, J INF TECHNOL-UK, V33, P233, DOI 10.1057/s41265-017-0046-6
   Srivastava SC, 2015, INFORM SYST J, V25, P355, DOI 10.1111/isj.12067
   Stewart KJ, 2006, MIS QUART, V30, P291
   Stray V, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234182
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Todorova G, 2020, INT J CONFL MANAGE, V31, P623, DOI 10.1108/IJCMA-08-2019-0139
   Tremblay M, 2018, J LEADERSH ORG STUD, V25, P211, DOI 10.1177/1548051817738941
   Tripp JF, 2018, J COMPUT INFORM SYST, V58, P170, DOI 10.1080/08874417.2016.1220240
   Tsai SB, 2020, ENTERP INF SYST-UK, V14, P641, DOI 10.1080/17517575.2019.1698059
   van Knippenberg D, 2007, ANNU REV PSYCHOL, V58, P515, DOI 10.1146/annurev.psych.58.110405.085546
   Wang PF, 2017, RES POLICY, V46, P1836, DOI 10.1016/j.respol.2017.09.002
   WHYTE G, 1989, ACAD MANAGE REV, V14, P40, DOI 10.2307/258190
   Woehr DJ, 2015, ORGAN RES METHODS, V18, P704, DOI 10.1177/1094428115582090
   Wu Q, 2020, J LEADERSH ORG STUD, V27, P49, DOI 10.1177/1548051818820862
   Xie XM, 2016, J BUS RES, V69, P1615, DOI 10.1016/j.jbusres.2015.10.027
   Xu P, 2007, J MANAGE INFORM SYST, V24, P293, DOI [10.2753/MIS0742-1222240211, 10.2753/MIS0742-I22224021I]
   Xu P, 2008, J MANAGE INFORM SYST, V25, P277, DOI 10.2753/MIS0742-1222250308
   Yu B, 2020, J KNOWL MANAG, V24, P1705, DOI 10.1108/JKM-02-2020-0100
   Zhang DS, 2007, J MANAGE INFORM SYST, V23, P53, DOI 10.2753/M1S0742-1222230404
   Zhang LY, 2019, INFORM MANAGE-AMSTER, V56, DOI 10.1016/j.im.2019.03.001
   Zhao L, 2020, EUR J INNOV MANAG, DOI 10.1108/EJIM-06-2020-0206
   Zhao SL, 2021, EUR J INNOV MANAG, V24, P371, DOI 10.1108/EJIM-09-2019-0244
   Zhou N, 2015, STRATEGIC MANAGE J, V36, P907, DOI 10.1002/smj.2242
NR 136
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107337
DI 10.1016/j.infsof.2023.107337
EA OCT 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA W4YB5
UT WOS:001091687600001
DA 2024-07-18
ER

PT J
AU Stochel, MG
   Borek, T
   Wawrowski, MR
   Cholda, P
AF Stochel, Marek G.
   Borek, Tomasz
   Wawrowski, Mariusz R.
   Cholda, Piotr
TI Business-driven technical debt management using Continuous Debt
   Valuation Approach (CoDVA)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study; CoDVA; Productivity; Survey; Technical debt; Technical debt
   management; Technical debt prioritization
ID SOFTWARE-DEVELOPMENT; IDENTIFICATION
AB Context: Despite the increasing research on Technical Debt Management (TDM), there is still a need for empirical studies that take a comprehensive approach to managing Technical Debt (TD) and consider the business perspective.Objectives: We introduce an empirically evaluated methodology called Continuous Debt Valuation Approach (CoDVA), which improves business value, team productivity, and developer morale.
   Methods: CoDVA prioritizes TD against a predicted product roadmap, quantifying potential benefits based on their impact on the future state of the product and profitability of the investments. This approach enables a relative comparison among TD items and justifies a budget for TD repayment. The methodology was validated through a survey and a three-year-long case study on TDM practices driven by an engineering team responsible for development and maintenance of a telecommunication software.
   Results: The results of the study show that the CoDVA approach has a positive impact, as the perceived business value from TD refactorings grew by 27%, the engineering team velocity improved by 39%, predictability of the engineering team increased by 60%, the effort spent on product release stabilization decreased by 50%, and overall developer satisfaction increased in 86% of the cases. The majority of the developers found that the applied TDM strategy was beneficial in terms of technical decisions made, the ability to develop a new functionality, and experience while working with the product code.
   Conclusion: The results prove that the approach is expedient across realized business value, software engineering team productivity, and satisfaction of the engineers responsible for development and maintenance of the software product.
C1 [Stochel, Marek G.; Borek, Tomasz; Wawrowski, Mariusz R.] Motorola Solut, PL-30392 Krakow, Poland.
   [Stochel, Marek G.; Cholda, Piotr] AGH Univ Krakow, Inst Telecommun, PL-30059 Krakow, Poland.
C3 AGH University of Krakow
RP Stochel, MG (corresponding author), Motorola Solut, PL-30392 Krakow, Poland.
EM marek.stochel@motorolasolutions.com; tomasz.borek@motorolasolutions.com;
   mariusz.wawrowski@motorolasolutions.com; piotr.cholda@agh.edu.pl
RI Cholda, Piotr/C-3243-2011
OI Cholda, Piotr/0000-0003-2018-4057
FU Min-istry of Science and Higher Education in Poland [45/DW/2017/01];
   Krakw, Poland; Ministry of Science and Higher Education in Poland
   [45/DW/2017/01]; Motorola Solutions Systems Polska Sp. z o.o., Krakow,
   Poland; AGH University of Krakow, Institute of Telecommunications,
   Krakow, Poland
FX The work reported in this paper received funding from the Ministry of
   Science and Higher Education in Poland under grant no. 45/DW/2017/01
   (Industrial Doctorate Programme) in cooperation with Motorola Solutions
   Systems Polska Sp. z o.o., Krakow, Poland, and AGH University of Krakow,
   Institute of Telecommunications, Krakow, Poland. We want to express our
   gratitude to Krzysztof Rusek for the consultations in the field of
   statistics, and to Elzbieta Stochel for reviewing and editing the paper.
CR Aha! Labs, 2023, What is product value?
   Albuquerque D, 2023, IEEE T SOFTWARE ENG, V49, P2202, DOI 10.1109/TSE.2022.3214764
   Albuquerque D, 2022, 36TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2022, P220, DOI 10.1145/3555228.3555237
   Alfayez R, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P1, DOI 10.1145/3387906.3388630
   Allen I Elaine, 2007, QUAL PROG, V40, P64, DOI DOI 10.1111/J.1365-2929.2004.02012.X
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   Arvanitou E.-M., 2022, 2022 48 EUR C SOFTW, P274, DOI [10.1109/SEAA56994.2022.00050, DOI 10.1109/SEAA56994.2022.00050]
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Azadi U, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P88, DOI 10.1109/TechDebt.2019.00027
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   BenIdris M., 2018, Int. J. Softw. Eng. Appl. (IJSEA), V9, DOI [10.5121/ijsea.2018.9501, DOI 10.5121/IJSEA.2018.9501]
   Besker T, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110586
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Bogner K., 2016, GESIS Survey Guidelines, P1, DOI DOI 10.15465/GESIS-SG_EN_016
   Borowa K, 2021, IEEE SOFTWARE, V38, P65, DOI 10.1109/MS.2021.3103249
   Breyter M., 2022, Agile Product and Project Management: A Step-By-Step Guide To Building the Right Products Right, Vfirst, DOI [10.1007/978-1-4842-8200-7, DOI 10.1007/978-1-4842-8200-7]
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Coolican H., 2017, Research Methods and Statistics in Psychology (7th), DOI [10.4324/9781315201009, DOI 10.4324/9781315201009]
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Lage LCD, 2019, INT SYMP EMP SOFTWAR, P374
   da Silva FT, 2022, IBER CONF INF SYST, DOI 10.23919/CISTI54924.2022.9820390
   de Almeida RR, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P74, DOI 10.1109/TechDebt52882.2021.00017
   de Almeida RR, 2019, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2019.00028
   de Almeida RR, 2018, PROC IEEE INT CONF S, P655, DOI 10.1109/ICSME.2018.00075
   de Haaff B., 2020, Business roadmaps vs. Product roadmaps
   Digkas G, 2022, IEEE T SOFTWARE ENG, V48, P1705, DOI 10.1109/TSE.2020.3032557
   Eades K., 2003, The New Solution Selling, Vfirst
   Fernández-Sánchez C, 2017, J SYST SOFTWARE, V124, P22, DOI 10.1016/j.jss.2016.10.018
   Fernández-Sánchez C, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P22, DOI 10.1109/SAM.2015.11
   Gomes F, 2022, INTERNATIONAL CONFERENCE ON TECHNICAL DEBT 2022 (TECHDEBT 2022), P31, DOI 10.1145/3524843.3528095
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Griffith I, 2017, INT SYMP EMP SOFTWAR, P287, DOI 10.1109/ESEM.2017.42
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Gupta RK, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P170, DOI 10.1145/2856636.2856655
   Hanssen GK, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P48, DOI 10.1109/TechDebt.2019.00014
   Hyndman RJ, 2008, SPRINGER SER STAT, P1, DOI 10.1007/978-3-540-71918-2
   ISO/IEC, 2022, 25052-1:2022 Systems and Software Engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE): Cloud Services-Part 1: Quality Model
   ISO/IEC, 2011, 25010:2011(E) Systems and Software Engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality Models
   Izurieta C, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P138, DOI 10.1145/3194164.3194167
   Jaspan C, 2019, RETHINKING PRODUCTIV, P13, DOI [10.1007/978-1-4842-4221-6_2, DOI 10.1007/978-1-4842-4221-6_2]
   Junior HJ, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106964
   Khomyakov I, 2020, LECT NOTES BUS INF P, V378, P250, DOI 10.1007/978-3-030-40783-4_12
   Kleinwaks H, 2023, SYSTEMS ENG, V26, P675, DOI 10.1002/sys.21681
   Klimczyk P, 2020, E-INFORMATICA, V14, P61, DOI 10.37190/e-Inf200102
   Kruchten P., 2019, Managing Technical Debt
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   Lenarduzzi V, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110827
   Letouzey J-L, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P31, DOI 10.1109/MTD.2012.6225997
   Letouzey J.-L., 2016, The SQALE method for managing technical debt definition document
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lomio F, 2022, EUR CON SFTWR MTNCE, P46, DOI 10.1109/SANER53432.2022.00017
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Martini A, 2016, ASIA PAC SOFWR ENG, P161, DOI [10.1109/APSEC.2016.032, 10.1109/APSEC.2016.25]
   Martini A, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P422, DOI 10.1109/SEAA.2015.78
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   Martini A, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2015.31
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   Melo A, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111483
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Montgomery D. C., 2015, Wiley Series in Probability and Statistics
   Murillo M. I., 2023, J SOFTW ENG RES DEV, V8, P20, DOI [10.5753/jserd.2023.2671, DOI 10.5753/JSERD.2023.2671]
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Pavlic L, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12157482
   Perera J, 2023, Arxiv, DOI [arXiv:2303.06535, 10.48550/arXiv.2303.06535, DOI 10.48550/ARXIV.2303.06535]
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Peterson C, 2008, APPL PSYCHOL-INT REV, V57, P19, DOI 10.1111/j.1464-0597.2008.00352.x
   Pina D, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P206, DOI 10.1109/SEAA53835.2021.00034
   Poliakov D., 2015, A systematic mapping study on technical debt definition
   Ramasubbu N, 2015, IEEE SOFTWARE, V32, P22, DOI 10.1109/MS.2015.45
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P758, DOI 10.1109/TSE.2014.2327027
   Ribeiro LF, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P572, DOI 10.5220/0005914605720579
   Rios N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268917
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Robson C., 2002, Real world research
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sadowsi C., 2019, Rethinking Productivity in Software Engineering, P39
   Scaled Agile Inc., 2023, Architectural runway
   Schwaber K., 2020, Scrum Guide
   Scott E, 2020, EUROMICRO CONF PROC, P124, DOI 10.1109/SEAA51224.2020.00029
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Stochel Marek G., 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P306, DOI 10.1109/SEAA56994.2022.00055
   Stochel MG, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app122211347
   Stochel MG, 2020, EUROMICRO CONF PROC, P362, DOI 10.1109/SEAA51224.2020.00066
   Strecansky P, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P121, DOI 10.1145/3341105.3374079
   Surowiecki J., 2005, WISDOM CROWDS WHY MA
   Tom E., 2012, 20 EUR C INF SYST EC, P1
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tornhill A, 2022, INTERNATIONAL CONFERENCE ON TECHNICAL DEBT 2022 (TECHDEBT 2022), P11, DOI 10.1145/3524843.3528091
   vFunction, 2022, white paper
   Villa A, 2022, 2022 10TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION, CONISOFT, P182, DOI 10.1109/CONISOFT55708.2022.00032
   Wagner S., 2019, Rethinking productivity in software engineering, P29
   Wiese M, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111700
   Wiese M, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P84, DOI 10.1109/TechDebt52882.2021.00018
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Zabardast E, 2023, J SYST SOFTWARE, V202, DOI 10.1016/j.jss.2023.111701
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
NR 104
TC 0
Z9 0
U1 4
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107333
DI 10.1016/j.infsof.2023.107333
EA SEP 2023
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA W0BC6
UT WOS:001088359600001
DA 2024-07-18
ER

PT J
AU Cai, WJ
   Chen, JL
   Yu, JP
   Gao, LP
AF Cai, Wenjing
   Chen, Junlin
   Yu, Jiaping
   Gao, Lipeng
TI A software vulnerability detection method based on deep learning with
   complex network analysis and subgraph partition
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability detection; Code representation; Complex network analysis;
   TextCNN
ID NEURAL-NETWORKS; GRAPH
AB The increasing size and complexity of software programs have made them an integral part of modern society's infrastructure, making software vulnerabilities a major threat to computer security. To address this issue, the use of deep learning-based software vulnerability detection methods has become increasingly popular. Although the effectiveness of the deep learning-based methods has been demonstrated, these methods have faced challenges in scalability and detection performance. To tackle this challenge, we propose a new vulnerability detection method based on deep learning with complex network analysis and subgraph partition that enhances detection accuracy while maintaining scalability. The method uses complex network analysis theory to convert the CPG into an image-like matrix, and then utilizes TextCNN for vulnerability detection. As a result, our method shows a 6% improvement in accuracy and a 10% reduction in false positive rates compared to stateof-the-art methods. In addition, our approach is able to detect some of the vulnerabilities recently released by CVE.
C1 [Cai, Wenjing; Chen, Junlin; Yu, Jiaping] Northwestern Polytech Univ, Sch Cybersecur, Xian 710072, Peoples R China.
   [Gao, Lipeng] State Key Lab Geoinformat Engn, Xian 710054, Peoples R China.
   [Gao, Lipeng] Northwestern Polytech Univ, Sch software, Xian 710072, Peoples R China.
   [Gao, Lipeng] Northwestern Polytech Univ Shenzhen, Res & Dev Inst, Shenzhen 518063, Peoples R China.
C3 Northwestern Polytechnical University; Northwestern Polytechnical
   University; Northwestern Polytechnical University
RP Gao, LP (corresponding author), Northwestern Polytech Univ, Sch software, Xian 710072, Peoples R China.
EM gaolipeng@nwpu.edu.cn
RI cai, wenjing/JYO-6396-2024
FU Guangdong Basic and Applied Basic Research Foundation [2020A1515111158];
   Fundamental Research Funds for the Central Universities, China
   [D5000210596]; National Natural Science Foundation of China [42101469];
   State Key Laboratory of Geo-Information Engineering, China
   [SKLGIE2021-Z-4-1]
FX This work was supported in part by the Guangdong Basic and Applied Basic
   Research Foundation under Grant 2020A1515111158, in part by the
   Fundamental Research Funds for the Central Universities, China under
   Grants D5000210596, in part by the National Natural Science Foundation
   of China under Grant 42101469, and in part by State Key Laboratory of
   Geo-Information Engineering, China under Grant SKLGIE2021-Z-4-1.
CR Bruschi D, 2006, LECT NOTES COMPUT SC, V4064, P129
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Casanova Arantxa, 2018, INT C LEARNING REPRE
   Chen DL, 2020, AAAI CONF ARTIF INTE, V34, P3438
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cheng X., ISSTA 22 31 ACM SIGS, P519
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cheng X, 2019, IEEE INT C ENG COMP, P41, DOI 10.1109/ICECCS.2019.00012
   Cheng Xiao, 2022, IEEE Trans. Dependable Secure Comput, P1
   Chung JY, 2014, Arxiv, DOI arXiv:1412.3555
   De Boer PT, 2005, ANN OPER RES, V134, P19, DOI 10.1007/s10479-005-5724-z
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Freeman L.C., 2002, J. Social network: critical concepts in sociology, V1, P238, DOI DOI 10.1016/S0378-8733(02)00018-4
   Gardner MW, 1998, ATMOS ENVIRON, V32, P2627, DOI 10.1016/S1352-2310(97)00447-0
   Glorot X., 2011, JMLR Proceedings, V15, P315, DOI DOI 10.1002/ECS2.1832
   Gold S., 1995, Journal of Artificial Neural Networks, V2, P381
   Gu JX, 2018, PATTERN RECOGN, V77, P354, DOI 10.1016/j.patcog.2017.10.013
   Kim Y., 2014, P 2014 C EMP METH NA, P1746, DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   Kingma D. P, 2015, INT C LEARNING REPRE, DOI DOI 10.48550/ARXIV.1412.6980
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Li Y., 2016, ICLR, P1, DOI DOI 10.48550/ARXIV.1511.05493
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Neamtiu I., 2005, P 2005 INT WORKSH MI
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Sui YL, 2020, IEEE T SOFTWARE ENG, V46, P812, DOI 10.1109/TSE.2018.2869336
   Sutskever I, 2014, ADV NEUR IN, V27
   Wan Y., P 30 ACM JOINT EUR S, P1233
   Wan Y, 2022, PROC INT CONF SOFTW, P2377, DOI 10.1145/3510003.3510050
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wu TS, 2021, IEEE INT SYMP PARAL, P892, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom52081.2021.00126
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V48, P2359, DOI 10.1109/TSE.2021.3058985
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 39
TC 1
Z9 1
U1 5
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107328
DI 10.1016/j.infsof.2023.107328
EA SEP 2023
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U1FC5
UT WOS:001082321400001
DA 2024-07-18
ER

PT J
AU Su, ZH
   He, X
   Wang, T
   Liu, L
   Tu, ZY
   Wang, ZJ
AF Su, Zihang
   He, Xiang
   Wang, Teng
   Liu, Lei
   Tu, Zhiying
   Wang, Zhongjie
TI Detection and filling of functional holes in microservice systems:
   Method and infrastructure support
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional hole; Service composition; Microservice systems
ID SERVICE
AB With the widespread use of microservices technology, a growing number of Microservice Systems (MSS) have emerged. Monolithic applications are divided into several small and independent microservices that provide functions through APIs. These microservices can be orchestrated by service composition to satisfy various user requirements: microservice functionalities are aggregated into coarse-grained solutions to provide composite functions to users. However, although various service composition approaches have been presented in many works of literature, they failed to solve the situation that no feasible solutions can be found because of missing functions in MSS, named Functional Hole (FH). As a result, the system cannot satisfy user requirements and faces Quality of Service (QoS) declines. In this paper, to reduce the impact of missing functions, we defined the FH to describe the absence of functions for MSS when it cannot satisfy user requirements. Moreover, for the first time, we proposed the Detection and Filling Problem of FH (DFPFH) in a running MSS. A three-phase algorithm with supporting infrastructure was developed to solve DFPFH. It detects FHs based on hypergraphs, fills FHs with services from an external service system at runtime, and generates suggestions for thoroughly filling FH to developers. Plenty of experiments were conducted, and the results validate our approaches' usability, effectiveness, and performance.
C1 [Su, Zihang; He, Xiang; Wang, Teng; Liu, Lei; Tu, Zhiying; Wang, Zhongjie] Harbin Inst Technol, Fac Comp, 92 West Dazhi St, Harbin 150001, Heilongjiang, Peoples R China.
C3 Harbin Institute of Technology
RP Wang, ZJ (corresponding author), Harbin Inst Technol, Fac Comp, 92 West Dazhi St, Harbin 150001, Heilongjiang, Peoples R China.
EM zhsu@stu.hit.edu.cn; hexiang@hit.edu.cn; 21S003068@stu.hit.edu.cn;
   liulei@stu.hit.edu.cn; tzy_hit@hit.edu.cn; rainy@hit.edu.cn
FU National Key Research and Development Program of China [2021YFB3300700];
   National Natural Science Foundation of China [61832014]
FX The research in this paper is partially supported by the National Key
   Research and Development Program of China (No 2021YFB3300700) and the
   National Natural Science Foundation of China (61832014) .
CR Alary Gregory, 2020, Knowledge Engineering and Knowledge Management. 22nd International Conference, EKAW 2020. Proceedings. Lecture Notes in Artificial Intelligence Subseries of Lecture Notes in Computer Science (LNAI 12387), P171, DOI 10.1007/978-3-030-61244-3_12
   Ausiello G, 2017, THEOR COMPUT SCI, V658, P293, DOI 10.1016/j.tcs.2016.03.016
   Aydin Onur, 2007, Engineering Societies in the Agents World VIII. 8th International Workshop, AW 2007. Revised Selected Papers, P142
   Ben Lamine R, 2017, PROCEDIA COMPUT SCI, V112, P358, DOI 10.1016/j.procs.2017.08.016
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Christensen E., 2001, WEB SERVICES DESCRIP
   Constantinescu I., 2004, P 13 INT WORLD WID W, P268, DOI [10.1145/1013367.1013429, DOI 10.1145/1013367.1013429]
   Criado J, 2022, J OBJECT TECHNOL, V21, DOI 10.5381/jot.2022.21.4.a3
   Deng SG, 2016, IEEE T SERV COMPUT, V9, P291, DOI 10.1109/TSC.2014.2361138
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Farrag TA, 2013, COMPUT ELECTR ENG, V39, P497, DOI 10.1016/j.compeleceng.2012.09.007
   Fu JC, 2010, IEEE INT C SEMANT CO, P218, DOI 10.1109/ICSC.2010.60
   Gavvala SK, 2019, FUTURE GENER COMP SY, V90, P273, DOI 10.1016/j.future.2018.07.062
   Hannousse A, 2021, COMPUT SCI REV, V41, DOI 10.1016/j.cosrev.2021.100415
   Hayes A. F., 2013, Introduction to mediation, moderation, and conditional process analysis: a regression -based approach
   He J., 2012, 2012 IEEE 5 INT C QO, P566, DOI DOI 10.1109/CLOUD.2012.125
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P192, DOI 10.1109/TSE.2013.2297911
   He X, 2022, Arxiv, DOI arXiv:2212.11758
   Iribarne L, 2004, COMPUT J, V47, P342, DOI 10.1093/comjnl/47.3.342
   Iribarne L, 2002, EUROMICRO CONF PROC, P26, DOI 10.1109/EURMIC.2002.1046129
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Khan AW, 2022, MATHEMATICS-BASEL, V10, DOI 10.3390/math10213982
   Klein Adrian., 2012, Proceedings of the 21st International Conference on World Wide Web, WWW'12, P959
   Küngas P, 2005, INTERNATIONAL CONFERENCE ON NEXT GENERATION WEB SERVICES PRACTICES, P339, DOI 10.1109/NWESP.2005.28
   Le Quoc V., 2014, P INT C MACH LEARN I
   Lecue Freddy, 2008, Wl 2008. 2008 IEEE/WIC/ACM International Conference on Web Intelligence. IAT 2008. 2008 IEEE/WIC/ACM International Conference on Intelligent Agent Technology. Wl-IAT Workshop 2008 2008 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology Workshops, P445, DOI 10.1109/WIIAT.2008.344
   Lemos AL, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2831270
   Li RQ, 2009, BIOINFORMATICS, V25, P1966, DOI 10.1093/bioinformatics/btp336
   Liang HG, 2021, ROBOT CIM-INT MANUF, V67, DOI 10.1016/j.rcim.2020.101991
   Lin L, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P357
   Martin D, 2005, LECT NOTES COMPUT SC, V3387, P26
   Raj V, 2022, SOFTWARE PRACT EXPER, V52, P1661, DOI 10.1002/spe.3081
   Rao J, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P446, DOI 10.1109/ICWS.2004.1314769
   Rao JH, 2005, LECT NOTES COMPUT SC, V3387, P43
   Rao JH, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P401
   Rodriguez-Mier P, 2016, IEEE T SERV COMPUT, V9, P537, DOI 10.1109/TSC.2015.2402679
   Sanchez C., 2008, 2008 5th International Conference on Electrical Engineering, Computing Science and Automatic Control (CCE), P340, DOI 10.1109/ICEEE.2008.4723428
   Sanchez Christian, 2008, 2008 8th International Conference on Hybrid Intelligent Systems (HIS), P198, DOI 10.1109/HIS.2008.70
   Shashavali D, 2019, COMPUT SIST, V23, P999, DOI 10.13053/CyS-23-3-3273
   She QP, 2019, EXPERT SYST APPL, V138, DOI 10.1016/j.eswa.2019.07.021
   W3C, 2014, RDF Schema 1.1
   Wang SG, 2013, MOBILE NETW APPL, V18, P116, DOI 10.1007/s11036-012-0373-3
   Wang ZN, 2020, IEEE ACCESS, V8, P8314, DOI 10.1109/ACCESS.2019.2963548
   Zeshan Furkh, 2011, International Journal of New Computer Architectures and their Applications, V1, P640
   Zhou X, 2018, PROC IEEE ACM INT C, P323, DOI 10.1145/3183440.3194991
NR 45
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107270
DI 10.1016/j.infsof.2023.107270
EA JUN 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA K8DA4
UT WOS:001018677100001
DA 2024-07-18
ER

PT J
AU Li, X
   Liu, L
   Chen, ZQ
   Liu, YZ
   Liu, HX
AF Li, Xun
   Liu, Lei
   Chen, Zhiqi
   Liu, Yuzhou
   Liu, Huaxiao
TI Describing the APIs comprehensively: Obtaining the holistic
   representations from multiple modalities data for different tasks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE API representation; Multimodal fusion; Code and text mining
AB Context: API (Application Programming Interface) is an important object in software development, and describing them properly is the basis for solving related problems, such as API recommendation. Recently, multimodal data fusing approaches become a hot research topic in different fields, and they can be used to get comprehensive representations of things by describing them from different angles. This provides us with a new useful way for API representation. Objective: In this work, we aim at describing APIs comprehensively by fusing information from multimodal data for supporting different API-related tasks.Method: To achieve this goal, we propose a novel approach BDBM (Bimodal Deep Boltzmann Machine) to obtain holistic representations of APIs by fusing the information in text and code modalities, which are the API descriptions and the codes of the products. Then, the BDBM is applied to two typical API tasks (API recommendation and similar API mining) to analyze its performance. Results and Conclusion: The results show that the API recommendation based on BDBM outperforms the ones based on unimodal API information, our method's precisions can reach 0.67, 0.65, 0.61 at top-3, top-5 and top-10, while MAP and MRR are 0.66 and 0.67. Meanwhile, the close representations give similar APIs with similar functionalities as well as similar usage in codes. Thus, we believe that multimodal data fusion is suitable for describing APIs, and the holistic representations given by BDBM can be used in different API-related tasks.
C1 [Liu, Yuzhou] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
   Jilin Univ, Key Lab Symbol Computat & Knowledge Engn, Minist Educ, Changchun 130012, Jilin, Peoples R China.
C3 Jilin University; Jilin University
RP Liu, YZ (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
EM liuyuzhou@jlu.edu.cn
RI lei, liu/HTR-5486-2023
OI liu, huaxiao/0000-0002-8151-1413
FU National Natural Science Foundation of China (NSFC) [62102160]; Natural
   Science Research Foundation of Jilin Province of China [20230101070JC]
FX Acknowledgments The work is funded by the National Natural Science
   Foundation of China (NSFC) No. 62102160, and the Natural Science
   Research Foundation of Jilin Province of China (Grant 20230101070JC) .
CR Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Bordes A., 2013, P 26 INT C NEURAL IN, P2787
   Cai L, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1075, DOI 10.1145/3338906.3341174
   Changpinyo S, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P12116, DOI 10.1109/ICCV48922.2021.01192
   Chen C, 2020, Arxiv, DOI arXiv:2010.07514
   Chen ZJ, 2021, IEEE INT C S Q R S, P726, DOI 10.1109/QRS54544.2021.00082
   Cho JM, 2020, Arxiv, DOI arXiv:2009.11278
   Cho K.H., 2013, P IJCNN, P1, DOI DOI 10.1109/IJCNN.2013.6706831
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2438, DOI 10.1007/s10664-019-09701-0
   Dabrowski Jacek, 2022, EMPIR SOFTW ENG, V27
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Di Gregorio Marianna, 2020, PROC IEEE INT CONF S, V27
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   FREUND Y, 1992, ADV NEUR IN, V4, P912
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang SC, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P3922, DOI 10.1109/ICCV48922.2021.00391
   Huang Yangsibo, 2021, NEURIPS
   Joulin Armand, 2016, C EUROPEAN CHAPTER A
   Li X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P690, DOI 10.1145/2950290.2950341
   Liang TT, 2014, IEEE INT CONF SERV, P215, DOI 10.1109/SOCA.2014.27
   Ling CY, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P36, DOI 10.1109/SANER50967.2021.00013
   Liu Lei, 2021, J SOFTW EVOLPROCESS, V33
   Lu JS, 2019, ADV NEUR IN, V32
   Lyakhova YSS, 2021, Arxiv, DOI arXiv:2001.08997
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mikolov Tomas, 2013, Preprints
   Pan WF, 2018, FUTURE GENER COMP SY, V87, P267, DOI 10.1016/j.future.2018.04.052
   Pennington J., 2014, PROC C EMPIRICAL MET
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Salis V, 2021, PROC INT CONF SOFTW, P1646, DOI 10.1109/ICSE43902.2021.00146
   Smith L, 2005, ARTIF LIFE, V11, P13, DOI 10.1162/1064546053278973
   Song Y, 2021, Arxiv, DOI arXiv:2101.03288
   Sun XW, 2020, Arxiv, DOI arXiv:2007.06793
   Nguyen TT, 2015, IEEE INT CONF AUTOM, P795, DOI 10.1109/ASE.2015.109
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Wang PQ, 2023, Arxiv, DOI arXiv:2212.05561
   Wei MS, 2022, PROC INT CONF SOFTW, P376, DOI 10.1145/3510003.3510159
   Wu J, 2014, KNOWL INF SYST, V38, P207, DOI 10.1007/s10115-013-0623-0
   Yang SS, 2022, PROC INT CONF SOFTW, P647, DOI 10.1145/3510003.3510045
   Yang X., 2022, IEEE T INSTRUM MEAS, V71, P1
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yu D, 2020, Arxiv, DOI arXiv:2004.08056
   Zhang CQ, 2019, ADV NEUR IN, V32
   Zhang S.-F., 2019, INT C MACH LEARN CYB, P1
NR 49
TC 1
Z9 1
U1 3
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107188
DI 10.1016/j.infsof.2023.107188
EA FEB 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9V9AV
UT WOS:000948678200001
DA 2024-07-18
ER

PT J
AU Bons, A
   Marín, B
   Aho, P
   Vos, TEJ
AF Bons, Axel
   Marin, Beatriz
   Aho, Pekka
   Vos, Tanja E. J.
TI Scripted and scriptless GUI testing for web applications: An industrial
   case
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study; Complementarity; Scriptless testing; Scripted testing
AB Context: Automation is required in the software development to reduce the high costs of producing software and to address the short release cycles of modern development processes. Lot of effort has been performed to automate testing, which is one of the most resource-consuming development phases. Automation of testing through the Graphical User Interface (GUI) has been researched to improve the system testing.Objective: We aim to evaluate the complementarity of automated GUI testing tools in a real industrial context, which refers to the capability of the tools to work usefully together.Methods: To address the objective, we conduct an exploratory case study in an IT development company from The Netherlands. We select two representative tools for automated GUI testing, one for scripted and another for scriptless testing. We measure the complementarity by measuring the effectiveness, the efficiency, and subjective satisfaction of the tools. Results: It can be observed that the scripted tool performs better in detecting process failures, and the scriptless tool performs better in detecting visible failures and also reaching higher coverage. Both tools perform in a similar way in terms of efficiency. Additionally, both tools were perceived to be useful in the survey performed for the subjective satisfaction.Conclusion: We conclude that scriptless and scripted testing approaches are complementary, and they can improve the effectiveness compared to manual testing processes performed in an industrial context by detecting different failures and reducing the effort and time to find these failures and to reproduce them.
C1 [Bons, Axel; Aho, Pekka; Vos, Tanja E. J.] Open Univ, Heerlen, Netherlands.
   [Marin, Beatriz; Vos, Tanja E. J.] Univ Politecn Valencia, Valencia, Spain.
C3 Open University Netherlands; Universitat Politecnica de Valencia
RP Vos, TEJ (corresponding author), Univ Politecn Valencia, Valencia, Spain.
RI Marín, Beatriz/Z-5032-2019
OI Marín, Beatriz/0000-0001-8025-0023; Vos, Tanja/0000-0002-6003-9113
FU H2020 [18022]; IVVES; ITEA;  [856716]
FX This research has been funded by iv4XR, H2020, grant number 856716
   (https://iv4xr-project.eu) , and IVVES, ITEA, contract number 18022
   (https://ivves.eu/) projects.
CR Aho P., 2019, J INGENIERIA SOFTW B, P1
   Aho P., 2019, THESIS U OULUENSIS
   Aho P, 2014, ADV COMPUT, V95, P49, DOI 10.1016/B978-0-12-800160-8.00002-4
   Alégroth E, 2016, INFORM SOFTWARE TECH, V73, P66, DOI 10.1016/j.infsof.2016.01.012
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   [Anonymous], 2022, MONKEY TEST IT HOMEP
   [Anonymous], 2021, KIBANA HOMEPAGE
   [Anonymous], 2010, PRINCIPLES KANBAN ME
   [Anonymous], 2011, The Wall Street Journal
   [Anonymous], 2021, SELENIUM HOMEPAGE
   [Anonymous], 2014, INT S EMPIRICAL SOFT
   [Anonymous], 2022, TESTAR HOMEPAGE
   [Anonymous], 2021, E DYNAMICS HOMEPAGE
   Ardito L, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P13, DOI 10.1145/3319008.3319022
   Arora A., 2012, International Journal of Scientific I Engineering Research, V3, P1
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Bauersfeld S, 2014, INT CONF RES CHAL
   Benedek Joey., 2002, Proceedings of Usability Professionals Association, V2003, P57
   Cerioli M, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1586, DOI 10.1145/3341105.3373961
   Chahim H, 2020, LECT NOTES BUS INF P, V385, P267, DOI 10.1007/978-3-030-50316-1_16
   Di Martino S, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1754
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Esparcia-Alcazar A., 2016, P 6 INT C METAHEURIS, P174
   Ferrari F, 2019, ELGAR M P INT LAW, P1
   Gamido HV, 2019, International Journal of Electrical and Computer Engineering, V9, P4473
   García B, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9071067
   Garousi V., 2017, Proc. 2017 ACM SIGSOFT, P21, DOI DOI 10.1145/3121245.3121250
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Jain V., 2018, INT J ENG RES APPL, V8, P29
   Jiang H., 2017, COMP DIFFERENT TECHN
   Jorgensen M., 2002, EMPIR SOFTW ENG, V7, P9, DOI [DOI 10.1023/A:1014866909191, 10.1023/A:1014866909191]
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kresse A., 2016, A TEST, P52, DOI DOI 10.1145/2994291.2994299
   Kumar Y., 2015, J. Emerg. Technol. Innov. Res, V2, P42
   Kunte P., 2017, INT RES J ENG TECHNO, V6, P2579
   Leotta M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P487, DOI 10.1109/ICST.2013.73
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Martinez M, 2016, LECT NOTES COMPUT SC, V9976, P241, DOI 10.1007/978-3-319-47443-4_17
   Min Y., 2018, COMPARING DIFFERENT
   Moreira RMLM, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1629
   Niranjanamurthy M., 2014, INT J COMPUT SCI MOB, V3, P121
   Rana I., 2019, Int. J. Emerg. Technol. Innovative Res, V6, P262
   Ricos Fernando Pastor, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Verification. Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12476), P543, DOI 10.1007/978-3-030-61362-4_31
   Rodriguez-Valdes Olivia, 2021, P INT C QUALITY INFO, P473
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Shafique M, 2015, INT J SOFTW TOOLS TE, V17, P59, DOI 10.1007/s10009-013-0291-0
   Shtakova M., 2012, EVALUATION METHODS A
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Singh I., 2014, INT J INF COMPUT TEC, V4, P1507
   Singh PK, 2013, IEEE INT ADV COMPUT, P1455
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Sualim S.A., 2017, INT J SOFTW ENG TECH, V2
   Tanja EJ, 2015, INT J INF SYST MODEL, V6, P46, DOI 10.4018/IJISMD.2015070103
   Tuteja M., 2012, International Journal of Soft Computing and Engineering (IJSCE), V2, P251
   van der Brugge A., 2021, 25 JISBD
   Vos TEJ, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1771
   Vos TEJ, 2012, INT CONF QUAL SOFTW, P230, DOI 10.1109/QSIC.2012.16
NR 59
TC 2
Z9 2
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107172
DI 10.1016/j.infsof.2023.107172
EA FEB 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9V9II
UT WOS:000948697900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Dong, YK
   Tang, YR
   Cheng, XT
   Yang, YF
   Wang, SQ
AF Dong, Yukun
   Tang, Yeer
   Cheng, Xiaotong
   Yang, Yufei
   Wang, Shuqi
TI SedSVD: Statement-level software vulnerability detection based on
   Relational Graph Convolutional Network with subgraph embedding
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software vulnerability detection; Code property graph; Relational graph
   convolutional network; Subgraph embedding; Statement-level detection
AB Context: Current deep-learning based vulnerability detection methods have been proven more automatic and correct to a certain extent, nonetheless, they are limited to detect at function-level or file-level, which can hinder software developers from acquiring more detailed information and conducting more targeted repairs. Graph-based detection methods have shown dominant performance over others. Unfortunately, the information they reveal has not been fully utilized.Objective: We design SedSVD (Subgraph embedding driven Statement-level Vulnerability Detection) with two objectives: (i) to better utilize the information the code-related graphs can reflect; (ii) to detect vulnerabilities at a finer-grained level.Method: In our work, we propose a novel graph-based detection framework that embeds graphs at subgraph-level to realize statement-level detection. It first leverages Code Property Graph (CPG) to learn both semantic and syntactic information from source code, and then selects several center nodes (code elements) in CPG to build their subgraphs. After embedding each subgraph with its nodes and edges, we apply Relational Graph Convolutional Network (RGCN) to process different edges differently. A Multi-Layer Perceptron (MLP) layer is further added to ensure its prediction performance.Results: We conduct our experiments on C/C++ projects from NVD and SARD. Experimental results show that SedSVD achieves 95.15% in F1-measure which proves our work to be more effective.Conclusion: Our work detects at a finer-grained level and achieves higher F1-measure than existing state-of-art vulnerability detection techniques. Besides, we provide a more detailed detection report pointing the specific error code elements within statements.
C1 [Dong, Yukun; Tang, Yeer; Cheng, Xiaotong; Yang, Yufei; Wang, Shuqi] China Univ Petr East China, Qingdao Inst Software, Coll Comp Sci & Technol, Dongying, Shandong, Peoples R China.
C3 China University of Petroleum
RP Dong, YK (corresponding author), China Univ Petr East China, Qingdao Inst Software, Coll Comp Sci & Technol, Dongying, Shandong, Peoples R China.
EM dongyk@upc.edu.cn
RI Li, Chun/KBC-9591-2024; Yang, yufei/KHW-2735-2024; Yang,
   Yufei/JXX-6325-2024; Lin, Yi/KEH-1784-2024
FU Shandong Provincial Natural Sci-ence Foundation [ZR2021MF058]
FX This work was supported by the Shandong Provincial Natural Sci-ence
   Foundation (ZR2021MF058) .
CR Alqarni M., 2021, Proc. of the 31st Annual Int. Conf. on Computer Science and Software Engineering, P226
   [Anonymous], TORCH GEOMETRIC DATA
   [Anonymous], CVE20220156
   [Anonymous], Common Weakness Enumeration
   [Anonymous], PATCHES CVE 2022 015
   [Anonymous], NATL VULNERABILITY D
   [Anonymous], Nist software assurance reference dataset
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Benoit T, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P131, DOI 10.1109/SANER50967.2021.00021
   Cai ZY, 2019, IEEE ACCESS, V7, P170844, DOI 10.1109/ACCESS.2019.2953696
   Cao DF, 2020, IEEE INT CONF TRUST, P539, DOI 10.1109/TrustCom50675.2020.00078
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen Y., 2015, THESIS
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   CVE, About us
   [董玉坤 Dong Yukun], 2022, [计算机工程与应用, Computer Engineering and Application], V58, P84
   Feng HT, 2020, IEEE CONF COMPUT, P722, DOI 10.1109/INFOCOMWKSHPS50562.2020.9163061
   Feng SB, 2021, PR I-A I C AD S N A, P236, DOI 10.1145/3487351.3488336
   Gori M, 2005, IEEE IJCNN, P729
   Greff K, 2017, IEEE T NEUR NET LEAR, V28, P2222, DOI 10.1109/TNNLS.2016.2582924
   [顾绵雪 Gu Mianxue], 2021, [计算机研究与发展, Journal of Computer Research and Development], V58, P2140
   Hin D., 2022, arXiv
   Huang G, 2017, PROC CVPR IEEE, P2261, DOI 10.1109/CVPR.2017.243
   Jeon S, 2021, COMPUT SECUR, V106, DOI 10.1016/j.cose.2021.102308
   Joern, About us
   Klusowski JM, 2020, BERNOULLI, V26, P1635, DOI 10.3150/19-BEJ1147
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Li X, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11073201
   Li X, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10051692
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li Z., 2021, IEEE T DEPENDABLE SE
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin RY, 2020, Arxiv, DOI arXiv:2009.04442
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mou LL, 2015, Arxiv, DOI arXiv:1409.5718
   Pascanu R, 2014, Arxiv, DOI arXiv:1312.6026
   Paszke A, 2019, ADV NEUR IN, V32
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Shafee A, 2022, COMPUT GEOTECH, V141, DOI 10.1016/j.compgeo.2021.104494
   Suneja S, 2020, Arxiv, DOI arXiv:2006.08614
   Tian JF, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106289
   Nguyen T, 2022, IEEE ACM T COMPUT BI, V19, P146, DOI 10.1109/TCBB.2021.3060430
   Nguyen T, 2020, LECT NOTES ARTIF INT, V12085, P164, DOI 10.1007/978-3-030-47436-2_13
   Ullah F., 2021, ACM Trans. Internet Technol. (TOIT), V22, P1
   Wang AQ, 2016, INT CONF GEOINFORM
   Wang L, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10227954
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   [肖添明 Xiao Tianming], 2021, [计算机研究与发展, Journal of Computer Research and Development], V58, P1668
   Xie T, 2018, PHYS REV LETT, V120, DOI 10.1103/PhysRevLett.120.145301
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zarzar J, 2019, Arxiv, DOI [arXiv:1911.12236, 10.48550/arXiv.1911.12236]
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhu HM, 2020, Arxiv, DOI arXiv:2002.03575
   Zhuang Y., 2021, arXiv
   Zhuo Z, 2021, IET SOFTW, V15, P188, DOI 10.1049/sfw2.12018
NR 59
TC 4
Z9 5
U1 6
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107168
DI 10.1016/j.infsof.2023.107168
EA FEB 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9S4YX
UT WOS:000946348300001
DA 2024-07-18
ER

PT J
AU Tambon, F
   Khomh, F
   Antoniol, G
AF Tambon, Florian
   Khomh, Foutse
   Antoniol, Giuliano
TI A probabilistic framework for mutation testing in deep neural networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep Learning; Mutation Testing; Bayesian Probability
AB Context: Mutation Testing (MT) is an important tool in traditional Software Engineering (SE) white-box testing. It aims to artificially inject faults in a system to evaluate a test suite's capability to detect them, assuming that the test suite defects finding capability will then translate to real faults. If MT has long been used in SE, it is only recently that it started gaining the attention of the Deep Learning (DL) community, with researchers adapting it to improve the testability of DL models and improve the trustworthiness of DL systems. Objective: If several techniques have been proposed for MT, most of them neglected the stochasticity inherent to DL resulting from the training phase. Even the latest MT approaches in DL, which propose to tackle MT through a statistical approach, might give inconsistent results. Indeed, as their statistic is based on a fixed set of sampled training instances, it can lead to different results across instances set when results should be consistent for any instance.Methods: In this work, we propose a Probabilistic Mutation Testing (PMT) approach that alleviates the inconsistency problem and allows for a more consistent decision on whether a mutant is killed or not.Results: We show that PMT effectively allows a more consistent and informed decision on mutations through evaluation using three models and eight mutation operators used in previously proposed MT methods. We also analyze the trade-off between the approximation error and the cost of our method, showing that relatively small error can be achieved for a manageable cost. Conclusion: Our results showed the limitation of current MT practices in DNN and the need to rethink them. We believe PMT is the first step in that direction which effectively removes the lack of consistency across test executions of previous methods caused by the stochasticity of DNN training.
C1 [Tambon, Florian; Khomh, Foutse; Antoniol, Giuliano] Polytech Montreal, Dept Software Engn, 2500 Chemin Polytech, Montreal, PQ H3T1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Tambon, F (corresponding author), Polytech Montreal, Dept Software Engn, 2500 Chemin Polytech, Montreal, PQ H3T1J4, Canada.
EM florian-2.tambon@polymtl.ca
RI Tambon, Florian/HNS-4168-2023
OI Tambon, Florian/0000-0001-5593-9400
FU National Science and Engineering Research Council of Canada (NSERC)
   [CRDPJ 537462-18]; Consortium for Research and Innovation in Aerospace
   in Qu'bec (CRIAQ); Bell Textron Canada Limited; Bombardier inc; Thales
   Canada inc; CAE inc
FX This work is supported by the DEEL project CRDPJ 537462-18 funded by the
   National Science and Engineering Research Council of Canada (NSERC) and
   the Consortium for Research and Innovation in Aerospace in Qu'bec
   (CRIAQ) , together with its industrial part-ners Thales Canada inc, Bell
   Textron Canada Limited, CAE inc and Bombardier inc.
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2022, MOV REC DAT
   [Anonymous], 2022, FLOR TAMB FLOWSS
   [Anonymous], 2022, KER MNIST CNN MOD
   [Anonymous], 2022, IMPL MULT CNN APP BA
   [Anonymous], 2022, KER MOV REC DAT
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Bühlmann P, 2014, STAT SCI, V29, P91, DOI 10.1214/13-STS460
   Chetouane N, 2019, LECT NOTES COMPUT SC, V11506, P766, DOI 10.1007/978-3-030-20521-8_63
   Cramer H., 1946, Mathematical methods of statistics.
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   EFRON B, 1992, J ROY STAT SOC B MET, V54, P83
   EFRON B, 1979, ANN STAT, V7, P1, DOI 10.1214/aos/1176344552
   Gauerhof Lydia, 2020, Computer Safety, Reliability, and Security. 39th International Conference, SAFECOMP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12234), P197, DOI 10.1007/978-3-030-54549-9_13
   Huggins JH, 2020, Arxiv, DOI arXiv:1912.07104
   Hespanhol L, 2019, BRAZ J PHYS THER, V23, P290, DOI 10.1016/j.bjpt.2018.12.006
   Hierons RM, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P141, DOI 10.1109/TAIC.PART.2007.20
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Jahangirova G, 2020, IEEE INT CONF SOFTW, P74, DOI 10.1109/ICST46399.2020.00018
   Jamil MA, 2016, INT CONF INFORM COMM, P177, DOI [10.1109/ICT4M.2016.045, 10.1109/ICT4M.2016.40]
   Kelley K, 2012, PSYCHOL METHODS, V17, P137, DOI 10.1037/a0028086
   Kerman J, 2011, ELECTRON J STAT, V5, P1450, DOI 10.1214/11-EJS648
   Koehler E, 2009, AM STAT, V63, P155, DOI 10.1198/tast.2009.0030
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Ma Lei, 2018, Deepmutation: Mutation testing of deep learning systems
   Marijan D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P101, DOI 10.1109/AITest.2019.00010
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Panichella A, 2021, 2021 ACM/IEEE 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2021), P66, DOI 10.1109/ICSE-NIER52604.2021.00022
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Pei KX, 2019, COMMUN ACM, V62, P137, DOI 10.1145/3361566
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Salay R, 2018, Arxiv, DOI arXiv:1808.01614
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Shahid M., 2011, STUDY TEST COVERAGE
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Tambon F, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00337-x
   Wood E, 2016, 2016 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS (ETRA 2016), P131, DOI 10.1145/2857491.2857492
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Zheng W, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P639, DOI 10.1109/SANER50967.2021.00081
NR 42
TC 5
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107129
DI 10.1016/j.infsof.2022.107129
EA DEC 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jin, H
   Shi, C
   Tsuchiya, T
AF Jin, Hao
   Shi, Ce
   Tsuchiya, Tatsuhiro
TI Constrained detecting arrays: Mathematical structures for fault
   identification in combinatorial interaction testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Combinatorial interaction testing; Detecting arrays; Constraint
   handling; Fault identification
ID COVERING ARRAYS; COMBINATIONS
AB Context: Detecting arrays are mathematical structures aimed at fault identification in combinatorial interaction testing. However, they cannot be directly applied to systems that have constraints on the test parameters. These constraints are prevalent in real-world systems.Objective: This paper proposes constrained detecting arrays (CDAs), an extension of detecting arrays, which can be used for systems with constraints.Methods: The properties and capabilities of CDAs are examined with rigorous arguments. Moreover, two algorithms are proposed for constructing CDAs: one is aimed at generating minimum CDAs, and the other is a heuristic algorithm aimed at fast generation of CDAs. The algorithms were experimentally evaluated using a benchmark dataset.Results: Experimental results show that the first algorithm can generate minimum CDAs if a sufficiently long generation time is allowed, and the second algorithm can generate minimum or near-minimum CDAs in a reasonable time.Conclusion: CDAs extend the range of application of detecting arrays to systems with constraints. The two proposed algorithms have different advantages with respect to array size and generation time.
C1 [Jin, Hao; Tsuchiya, Tatsuhiro] Osaka Univ, Yamadaoka 1-5, Suita, Osaka, Japan.
   [Shi, Ce] Shanghai Lixin Univ Accounting & Finance, 2800 Wenxiang Rd, Shanghai, Peoples R China.
C3 Osaka University; Shanghai Lixin University of Accounting & Finance
RP Jin, H (corresponding author), Osaka Univ, Yamadaoka 1-5, Suita, Osaka, Japan.
EM k-kou@ist.osaka-u.ac.jp; shice060@lixin.edu.cn;
   t-tutiya@ist.osaka-u.ac.jp
OI Tsuchiya, Tatsuhiro/0000-0002-3329-9235; Shi, Ce/0000-0002-6758-4114
CR Ahmed BS, 2017, IEEE ACCESS, V5, P25706, DOI 10.1109/ACCESS.2017.2771562
   Aldaco Abraham N., 2015, ACM SIGOPS Operating Systems Review, V49, P31
   Arcaini P, 2019, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2019.00054
   Bombarda A, 2021, IEEE ICST WORKSHOP, P48, DOI 10.1109/ICSTW52544.2021.00021
   Bonn J, 2019, IEEE ICST WORKSHOP, P224, DOI 10.1109/ICSTW.2019.00057
   Borazjany M. N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P591, DOI 10.1109/ICST.2012.146
   Colbourn CJ, 2008, J COMB OPTIM, V15, P17, DOI 10.1007/s10878-007-9082-4
   Colbourn CJ, 2018, MATH COMPUT SCI, V12, P429, DOI 10.1007/s11786-018-0385-x
   Colbourn CJ, 2016, IEEE ICST WORKSHOP, P19, DOI 10.1109/ICSTW.2016.38
   Compton Randy, 2016, 2016 IEEE Conference on Computer Communications: Workshops (INFOCOM WKSHPS), P650, DOI 10.1109/INFCOMW.2016.7562157
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Friedrichs T, 2020, IEEE ICST WORKSHOP, P201, DOI 10.1109/ICSTW50294.2020.00042
   Gargantini A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P559, DOI 10.1109/ICST.2012.141
   Ghandehari LS, 2020, IEEE T SOFTWARE ENG, V46, P616, DOI 10.1109/TSE.2018.2865935
   Hao Jin, 2020, 2020 IEEE 29th International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE), P219, DOI 10.1109/WETICE49692.2020.00050
   Hnich B, 2006, CONSTRAINTS, V11, P199, DOI 10.1007/s10601-006-7094-9
   Hu LH, 2020, EMPIR SOFTW ENG, V25, P2661, DOI 10.1007/s10664-019-09799-2
   Jin H, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110771
   Jin H, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1971, DOI [10.1145/3341105.3373952, 10.1445/3341405.3373952]
   Jin H, 2018, IEEE PAC RIM INT SYM, P233, DOI 10.1109/PRDC.2018.00044
   Jin H, 2018, IEEE ICST WORKSHOP, P285, DOI 10.1109/ICSTW.2018.00062
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li J, 2012, INT CONF QUAL SOFTW, P102, DOI 10.1109/QSIC.2012.28
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   Lu XN, 2019, JPN J STAT DATA SCI, V2, P641, DOI 10.1007/s42081-019-00056-w
   Ma CY, 2013, WOR CONG SOFTW ENG, P91, DOI 10.1109/WCSE.2013.19
   Martinez C, 2009, SIAM J DISCRETE MATH, V23, P1776, DOI 10.1137/080730706
   Nishiura K, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P138, DOI 10.1109/QRS.2017.24
   Niu X., 2021, IEEE T SOFTWARE ENG, P1
   Niu XT, 2020, IEEE T SOFTWARE ENG, V46, P584, DOI 10.1109/TSE.2018.2865772
   Niu X, 2013, IEEE ICST WORKSHOP, P271, DOI 10.1109/ICSTW.2013.38
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Richard Kuhn D., 2013, Introduction to combinatorial testing
   Segall I., 2011, P 2011 INT S SOFTWAR, P254
   Seidel SA, 2018, LECT NOTES COMPUT SC, V10979, P349, DOI 10.1007/978-3-319-94667-2_29
   Shakya K., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P620, DOI 10.1109/ICST.2012.149
   Shi C, 2020, GRAPH COMBINATOR, V36, P1203, DOI 10.1007/s00373-020-02176-7
   Shi C, 2012, DESIGN CODE CRYPTOGR, V62, P131, DOI 10.1007/s10623-011-9498-9
   Shi C, 2012, SCI CHINA MATH, V55, P197, DOI 10.1007/s11425-011-4307-5
   Shiba T., 2004, P 28 ANN INT COMP SO, P71
   Tsuchiya T., 2019, CORR
   Wu HY, 2021, IEEE T SOFTWARE ENG, V47, P2549, DOI 10.1109/TSE.2019.2955687
   Wu HY, 2019, Arxiv, DOI arXiv:1908.02480
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Zhang Zhiqiang., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P331, DOI DOI 10.1145/2001420.2001460
   Ziyuan Wang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P495, DOI 10.1109/QSIC.2010.36
NR 47
TC 1
Z9 1
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107045
DI 10.1016/j.infsof.2022.107045
EA SEP 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4X6CZ
UT WOS:000860929000003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Wohlin, C
   Kalinowski, M
   Felizardo, KR
   Mendes, E
AF Wohlin, Claes
   Kalinowski, Marcos
   Felizardo, Katia Romero
   Mendes, Emilia
TI Successful combination of database search and snowballing for
   identification of primary studies in systematic literature studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature reviews; Hybrid search; Snowballing; Scopus
ID SOFTWARE; IMPACT
AB Background: A good search strategy is essential for a successful systematic literature study. Historically, database searches have been the norm, which was later complemented with snowball searches. Our conjecture is that we can perform even better searches if combining these two search approaches, referred to as a hybrid search strategy.
   Objective: Our main objective was to compare and evaluate a hybrid search strategy. Furthermore, we compared four alternative hybrid search strategies to assess whether we could identify more cost-efficient ways of searching for relevant primary studies.
   Methods: To compare and evaluate the hybrid search strategy, we replicated the search procedure in a systematic literature review (SLR) on industry-academia collaboration in software engineering. The SLR used a more "traditional'' approach to searching for relevant articles for an SLR, while our replication was executed using a hybrid search strategy.
   Results: In our evaluation, the hybrid search strategy was superior in identifying relevant primary studies. It identified 30% more primary studies and even more studies when focusing only on peer-reviewed articles. To embrace individual viewpoints when assessing research articles and minimise the risk of missing primary studies, we introduced two new concepts, wild cards and borderline articles, when performing systematic literature studies.
   Conclusions: The hybrid search strategy is a strong contender for being used when performing systematic literature studies. Furthermore, alternative hybrid search strategies may be viable if selected wisely in relation to the start set for snowballing. Finally, the two new concepts were judged as essential to cater for different individual judgements and to minimise the risk of excluding primary studies that ought to be included.
C1 [Wohlin, Claes; Mendes, Emilia] Blekinge Inst Technol, Karlskrona, Sweden.
   [Kalinowski, Marcos] Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
   [Felizardo, Katia Romero] Fed Technol Univ Parana, Cornelio Procopio, Brazil.
C3 Blekinge Institute Technology; Pontificia Universidade Catolica do Rio
   de Janeiro; Universidade Tecnologica Federal do Parana
RP Wohlin, C (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM claes.wohlin@bth.se; kalinowski@inf.puc-rio.br;
   katiascannavino@utfpr.edu.br; emilia.mendes@bth.se
RI Mendes, Maria E/B-4207-2015
OI Wohlin, Claes/0000-0003-0460-5253; Mendes, Emilia/0000-0003-0449-5322;
   Kalinowski, Marcos/0000-0003-1445-3425
FU Brazilian National Council for Scientific and Technological Development
   (CNPq) [312827/2020-2]
FX Professor Marcos Kalinowski is funded by a research grant from the
   Brazilian National Council for Scientific and Technological Development
   (CNPq), Grant #312827/2020-2. All authors have contributed to all
   activities related to the submission.
CR Agnew N.M., 2007, SCI GAME AN INTRO RE, Vseventh
   [Anonymous], 2012, MODELLING QUALITY RE
   [Anonymous], 2014, EASE 14, DOI DOI 10.1145/26012482601268
   Badampudi D., 2015, P 19 INT C EV ASS SO, P1, DOI [10.1145/2745802.2745818, DOI 10.1145/2745802.2745818]
   Baldassarre M. T., 2013, P 17 INT C EV ASS SO, P144, DOI [10.1145/2460999.2461020, DOI 10.1145/2460999.2461020]
   Connor AM, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P678, DOI 10.1109/ITNG.2009.134
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Felizardo KR, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P184, DOI 10.1145/3266237.3266240
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Krishnan P, 2009, CONF SOFTW ENG EDUC, P117, DOI 10.1109/CSEET.2009.22
   Lamprecht S. J., 2012, Proceedings of the 2012 4th Software Engineering Colloquium (SE), P11, DOI 10.1109/SE.2012.6242350
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Mendes E, 2019, EUROMICRO CONF PROC, P355, DOI 10.1109/SEAA.2019.00061
   Morris P, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P130, DOI 10.1007/BF02919966
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Mourao E, 2017, INT SYMP EMP SOFTWAR, P193, DOI 10.1109/ESEM.2017.30
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Petersen K., 2014, P INT WORKSH LONG TE, P55
   Petersen Kai, 2014, P INT WORKSH LONG TE, P13, DOI 10.1145/2647648.2647650
   Porte G, 2013, CALICO J, V30, P10, DOI 10.11139/cj.30.1.10-15
   Punter T, 2011, EMBED SYST, P279, DOI 10.1007/978-90-481-9849-8_17
   Raschke W., 2014, P INT WORKSHOP LONG, P3
   Rombach D, 2008, ACM SIGSOFT SOFTW EN, V33, P26
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Skoglund M., 2009, 13 INT C EVALUATION, P31
   Wohlin C, 1999, 12TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P16, DOI 10.1109/CSEE.1999.755175
   Wohlin C, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106366
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Wohlin C, 2013, IEEE-ACM INT WKSP CO, P43, DOI 10.1109/CESI.2013.6618469
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 37
TC 65
Z9 67
U1 7
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106908
DI 10.1016/j.infsof.2022.106908
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7V6AH
UT WOS:000912894400002
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Hossain, MA
   Jiang, JJ
   Han, J
   Kabir, MA
   Schneider, JG
   Liu, CF
AF Hossain, Md Arafat
   Jiang, Jiaojiao
   Han, Jun
   Kabir, Muhammad Ashad
   Schneider, Jean-Guy
   Liu, Chengfei
TI Inferring data model from service interactions for response generation
   in service virtualization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Service virtualization; Stateful service; Control model; Data model;
   Response generation
ID ALGORITHM
AB Context: Service virtualization has become a popular tool to provide testing environments for highly connected enterprise software systems. It enables the enterprise system under test to interact with and obtain responses from model-based service emulations instead of the actual services they use in production environments, providing accessibility and realness. Existing approaches consider only the control dependencies between messages (i.e., the service's control model) and do not consider the relationships between data values of the messages (i.e., the service's data model), limiting the accuracy of service emulation.Objective: In this paper, we present an approach to deriving the service's data model from its interaction traces and using it in determining the payloads for response messages, therefore achieving more accurate service emulation.Method: The derivation of a service's data model is achieved by discovering the data entities and their key attribute(s) from the service interaction messages. It is then used, together with the control model, to synthesize response messages for incoming request messages at runtime. While the control model help to identify the types of responses, the data model keeps track of the changes to the service's data entities and provides the basis for populating accurate payloads for the responses.Results: A number of experiments have been conducted on message traces collected from a range of stateful and stateless services. With the use of both the control and data models in response generation, our approach consistently outperforms the existing state-of-the-art approaches. In particular, it generates 100% identical responses (compared to actual services) for most of the datasets, while the highest accuracy achieved by existing approaches was 88%. Conclusion: The experimental results have shown that the inferred data model provides an effective means in determining the payloads for response messages, significantly improving the accuracy of service emulation and providing more realistic testing environments.
C1 [Hossain, Md Arafat; Han, Jun; Liu, Chengfei] Swinburne Univ Technol, Sch Sci Comp & Engn Technol, Hawthorn, Vic, Australia.
   [Jiang, Jiaojiao] Univ New South Wales, Sch Comp Sci & Engn, Sydney, NSW, Australia.
   [Kabir, Muhammad Ashad] Charles Sturt Univ, Sch Comp & Math, Bathurst, NSW, Australia.
   [Schneider, Jean-Guy] Deakin Univ, Sch Informat Technol, Geelong, Vic, Australia.
C3 Swinburne University of Technology; University of New South Wales
   Sydney; Charles Sturt University; Deakin University
RP Hossain, MA (corresponding author), Swinburne Univ Technol, Sch Sci Comp & Engn Technol, Hawthorn, Vic, Australia.
EM mdarafathossain@swin.edu.au; jiaojiao.jiang@unsw.edu.au;
   jhan@swin.edu.au; akabir@csu.edu.au; jeanguy.schneider@deakin.edu.au;
   cliu@swin.edu.au
RI Jiang, Jiaojiao/AAF-7525-2020
OI Jiang, Jiaojiao/0000-0001-7307-8114; Liu, Chengfei/0000-0003-1675-1389;
   Hossain, Md. Arafat/0000-0001-8146-3821; Kabir, Muhammad
   Ashad/0000-0002-6798-6535
FU Australian Research Council [LP150100892]; CA Technologies; Australian
   Research Council [LP150100892] Funding Source: Australian Research
   Council
FX This work is supported by the Australian Research Council Linkage
   Project LP150100892 ``Generating Virtual Deployment Environments for
   Enterprise Software Systems'' and CA Technologies.
CR Abadi M, ARXIV, DOI DOI 10.48550/ARXIV.1603.04467
   Abiteboul S., 1997, International Journal on Digital Libraries, V1, P68, DOI 10.1007/s007990050001
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2000, Dissertation
   Asai T, 2004, IEICE T INF SYST, VE87D, P2754
   Babenko A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P237
   Bayardo R. J.  Jr., 1998, SIGMOD Record, V27, P85, DOI 10.1145/276305.276313
   Bermudez I, 2016, COMPUT COMMUN, V84, P40, DOI 10.1016/j.comcom.2016.02.015
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Box D., 2000, SIMPLE OBJECT ACCESS
   Broadcom C.A, 2020, BCM5880X SMARTNIC AD
   C.A. Broadcom, 2019, SERV VIRT
   C.A. Broadcom, 2019, DIR SERV
   C.A. Broadcom, 2020, LISA BANK
   Choi K, 2016, PROCEEDINGS OF THE 9TH ACM CONFERENCE ON SECURITY & PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC'16), P183, DOI 10.1145/2939918.2939921
   Combs G., 2007, WIRESHARK
   Dallmeier V, 2012, IEEE T SOFTWARE ENG, V38, P243, DOI 10.1109/TSE.2011.105
   Du M., 2013, P 9 INT ACM SIGSOFT, P123
   Eniser HF, 2018, INT WORKSH AUTOMAT, P9, DOI 10.1145/3194733.3194737
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Ghosh S., 1999, P 1 INT ICSE WORKSH
   Google LLC, 2018, GOOGL BOOKS API
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Hine Cameron, 2016, 2016 IEEE/ACM International Workshop on Continuous Software Evolution and Delivery (CSED). Proceedings, P56, DOI 10.1109/CSED.2016.019
   Hine C, 2009, IEEE AUS SOFT ENGR, P142, DOI 10.1109/ASWEC.2009.34
   Hossain M.A, 2020, THESIS SWINBURNE U T, P109
   Hossain MA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P266, DOI 10.1109/SANER.2018.8330215
   Hossain MD Arafat, 2020, THESIS SWINBURNE U T
   Huan J, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P549
   Huhtala Y, 1999, COMPUT J, V42, P100, DOI 10.1093/comjnl/42.2.100
   Inokuchi A, 2000, LECT NOTES COMPUT<D>, V1910, P13
   Jiang JJ, 2020, FUTURE GENER COMP SY, V102, P369, DOI 10.1016/j.future.2019.08.011
   Kabir MA, 2021, FUTURE GENER COMP SY, V117, P59, DOI 10.1016/j.future.2020.10.033
   Kuramochi M, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P313, DOI 10.1109/ICDM.2001.989534
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   LUCCHESI CL, 1978, J COMPUT SYST SCI, V17, P270, DOI 10.1016/0022-0000(78)90009-0
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Miao Du, 2015, ACM SIGSOFT Software Engineering Notes, V40, P48, DOI 10.1145/2693208.2693221
   Michelsen John., 2012, Service Virtualization: Reality Is Overrated
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Su YY, 2005, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES (MOBISYS 2005), P79, DOI 10.1145/1067170.1067180
   Versteeg S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P202, DOI 10.1145/2889160.2889242
   Versteeg S, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P49, DOI [10.1109/CSED.2016.018, 10.1145/2896941.2896950]
   Wang K., 1997, SCHEMA DISCOVERY SEM, V97, P271
   Yeong W., 1995, LIGHTWEIGHT DIRECTOR
   Yong Wang, 2013, Advanced Data Mining and Applications. 9th International Conference, ADMA 2013. Proceedings: LNCS 8347, P443, DOI 10.1007/978-3-642-53917-6_40
NR 48
TC 0
Z9 0
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2022
VL 145
AR 106803
DI 10.1016/j.infsof.2021.106803
EA JAN 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J9PR
UT WOS:000780430800003
DA 2024-07-18
ER

PT J
AU Liu, SR
   Guo, ZQ
   Li, YH
   Lu, HM
   Chen, L
   Xu, L
   Zhou, YM
   Xu, BW
AF Liu, Shiran
   Guo, Zhaoqiang
   Li, Yanhui
   Lu, Hongmin
   Chen, Lin
   Xu, Lei
   Zhou, Yuming
   Xu, Baowen
TI Prioritizing code documentation effort: Can we do it simpler but better?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code documentation; Program comprehension; PageRank; Metrics
AB Context: . Due to time or economic pressures, code developers are often unable to write documents for all modules in a project. Recently, a supervised artificial neural network (ANN) approach is proposed to prioritize documentation effort "to ensure that sections of code important to program comprehension are thoroughly explained". Objective: . However, as a supervised approach, there is a need to use labeled training data to train the prediction model, which may not easy to obtain in practice. Furthermore, it is unclear whether the ANN approach is generalizable, as it is only evaluated on several small data sets collected from API libraries. Method: . In this paper, we propose an unsupervised approach based on improved PageRank to prioritize documentation effort. This approach identifies "important" modules only based on the dependence relationships between modules in a project. As a result, the PageRank approach does not need any training data to build the prediction model. Results: . In order to evaluate the effectiveness of the PageRank approach, we use six additional large data sets collected from two larger libraries and four applications to conduct the experiment. The experimental results show that the PageRank approach is superior to the state-of-the-art ANN approach. Conclusion: . Due to the simplicity and effectiveness, we advocate that the PageRank approach should be used as an easy-to-implement baseline in future research on documentation effort prioritization, and any newly proposed approach should be compared with it to demonstrate its effectiveness.
C1 [Liu, Shiran; Guo, Zhaoqiang; Li, Yanhui; Lu, Hongmin; Chen, Lin; Xu, Lei; Zhou, Yuming; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
C3 Nanjing University
RP Li, YH; Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM yanhuili@nju.edu.cn; zhouyuming@nju.edu.cn
RI Guo, Zhaoqiang/HKN-8554-2023; Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296; Guo, Zhaoqiang/0000-0001-8971-5755; Li,
   Yanhui/0000-0003-2282-7175
FU National Natural Science Foundation of China [61772259, 61872177]
FX This work is partially supported by the National Natural Science
   Foundation of China (61772259, 61872177).
CR BAUER BJ, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P273, DOI 10.1109/CMPASS.1995.521905
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bianchini M., 2005, ACM Transactions on Internet Technology, V5, P92, DOI 10.1145/1052934.1052938
   Briand LC, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P13, DOI 10.1109/CSMR.2003.1192406
   Bugde S, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P182, DOI 10.1109/ICGSE.2008.18
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cruz M, 2020, IEEE ACCESS, V8, P26773, DOI 10.1109/ACCESS.2019.2952191
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   Dekel U, 2009, INT C PROGRAM COMPRE, P168, DOI 10.1109/ICPC.2009.5090040
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Gleich DF, 2015, SIAM REV, V57, P321, DOI 10.1137/140976649
   Hagan MT, 1997, NEURAL NETWORK DESIG
   Hall M. A., 1999, Proceedings of the Twelfth International Florida AI Research Society Conference, P235
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hollander M., 1973, NONPARAMETRIC STAT M
   Hu H., 2012, P 1 INT WORKSH SOFTW, P25
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kotula J, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P505
   Krishnan G, 2011, IN C IND ENG ENG MAN, P1180, DOI 10.1109/IEEM.2011.6118101
   Langville A. N., 2003, Internet Math, V1, P335, DOI DOI 10.1080/15427951.2004.10129091
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McBurney PW, 2018, IEEE T SOFTWARE ENG, V44, P897, DOI 10.1109/TSE.2017.2716950
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mihalcea R., 2004, P 2004 C EMPIRICAL M, P404, DOI DOI 10.3115/1219044.1219064
   Moreno L, 2013, CONF PROC INT SYMP C, P230, DOI 10.1109/ICPC.2013.6613855
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Oumaziz MA, 2017, LECT NOTES COMPUT SC, V10221, P12, DOI 10.1007/978-3-319-56856-0_2
   Page L., 1999, PAGERANK CITATION RA
   Pan WF, 2018, FUTURE GENER COMP SY, V81, P188, DOI 10.1016/j.future.2017.10.006
   Peitek N., IEEE ACM INT C SOFTW, P2021
   Peters Dennis., 1994, Proceedings of the 1994 ACM SIGSOFT international symposium on Software testing and analysis, ISSTA'94, P58
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Shmerlin Y, 2015, LECT NOTES BUS INF P, V215, P100, DOI 10.1007/978-3-319-19243-7_10
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Sora I., 2015, EVALUATION NOVEL APP, P122
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Visconti M, 2002, XXII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P179, DOI 10.1109/SCCC.2002.1173192
   Wilde N., 1990, SEICM26
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1123, DOI 10.1109/TSE.2011.83
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   Zhou Yuming, 2008, Journal of Southeast University (Natural Science Edition), V38, P380
NR 60
TC 3
Z9 3
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106686
DI 10.1016/j.infsof.2021.106686
EA JUL 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600011
DA 2024-07-18
ER

PT J
AU Pérez, F
   Lapeña, R
   Marcén, AC
   Cetina, C
AF Perez, Francisca
   Lapena, Raul
   Marcen, Ana C.
   Cetina, Carlos
TI Topic modeling for feature location in software models: Studying both
   code generation and interpreted models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Topic modeling; Software models; Search-based software engineering;
   Feature location
ID REQUIREMENTS; MAINTENANCE; STATISTICS; ALGORITHMS; RETRIEVAL; TESTS
AB Context: In the last 20 years, the research community has increased its attention to the use of topic modeling for software maintenance and evolution tasks in code. Topic modeling is a popular and promising information retrieval technique that represents topics by word probabilities. Latent Dirichlet Allocation (LDA) is one of the most popular topic modeling methods. However, the use of topic modeling in model-driven software development has been largely neglected. Since software models have less noise (implementation details) than software code, software models might be well-suited for topic modeling. Objective: This paper presents our LDA-guided evolutionary approach for feature location in software models. Specifically, we consider two types of software models: models for code generation and interpreted model. Method: We evaluate our approach considering two real-world industrial case studies: code-generation models for train control software, and interpreted models for a commercial video game. To study the impact on the results, we compare our approach for feature location in models against random search and a baseline based on Latent Semantic Indexing, which is a popular information retrieval technique. In addition, we perform a statistical analysis of the results to show that this impact is significant. We also discuss the results in terms of the following aspects: data sparsity, implementation complexity, calibration, and stability. Results: Our approach significantly outperforms the baseline in terms of recall, precision and F-measure when it comes to interpreted models. This is not the case for code-generation models. Conclusions: Our analysis of the results uncovers a recommendation towards results improvement. We also show that calibration approaches can be transferred from code to models. The findings of our work with regards to the compensation of instability have the potential to help not only feature location in models, but also in code.
C1 [Perez, Francisca; Lapena, Raul; Marcen, Ana C.; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
C3 Universidad San Jorge
RP Pérez, F (corresponding author), Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km 299, Zaragoza 50830, Spain.
EM mfperez@usj.es; rlapena@usj.es; acmarcen@usj.es; ccetina@usj.es
RI Marcén, Ana/HKF-5543-2023; Pérez, Francisca/KPH-0503-2024; Cetina,
   Carlos/P-8682-2017
OI Marcén, Ana/0000-0002-5054-4618; Cetina, Carlos/0000-0001-8542-5515;
   Lapena, Raul/0000-0003-2660-3080; Perez, Francisca/0000-0001-6371-915X
FU Ministry of Economy and Competitiveness (MINECO) , Spain through the
   Spanish National R+D+i Plan; ERDF funds under the Project ALPS
   [RTI2018-096411-B-I00]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) , Spain through the Spanish National R+D+i Plan
   and ERDF funds under the Project ALPS (RTI2018-096411-B-I00).
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Affenzeller M, 2009, NUMER INSIGHT, P1, DOI 10.1201/9781420011326
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Andrzejewski D, 2007, LECT NOTES ARTIF INT, V4701, P6
   [Anonymous], 2020, EFFICIENT JAVA MATRI
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2020, APACHE OPENNLP TOOLK
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2010, IEEE INT C SOFTWARE
   [Anonymous], 2020, ENGLISH PORTER2 STEM
   Arcega L., 2015, PROC INT WORKSHOP MO, P51
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Assunçao WKG, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106198
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Ballarín M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P189, DOI 10.1145/3239372.3239397
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Campbell J.C., 2015, ART SCI ANAL SOFTWAR, P139, DOI [DOI 10.1016/B978-0-12-411519-4.00006-9, 10.1016/B978-0-12-411519-4.00006-9]
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Cetina C, 2017, J SYST SOFTWARE, V134, P261, DOI 10.1016/j.jss.2017.09.022
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   Di Ruscio D, 2014, SCI COMPUT PROGRAM, V89, P69, DOI 10.1016/j.scico.2013.12.006
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dyer, 2016, WATCHMAKER FRAMEWORK
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Font Jaime, 2018, IEEE Transactions on Evolutionary Computation, V22, P363, DOI 10.1109/TEVC.2017.2751100
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   Font J, 2016, LECT NOTES COMPUT SC, V9679, P39, DOI 10.1007/978-3-319-35122-3_3
   Gabel M, 2010, P ACM SIGSOFT S FDN, P147, DOI DOI 10.1145/1882291.1882315
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Hulth A, 2003, PROCEEDINGS OF THE 2003 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P216
   Jelodar H, 2019, MULTIMED TOOLS APPL, V78, P15169, DOI 10.1007/s11042-018-6894-4
   Jgibblda, 2020, JAV IMPL LAT DIR ALL
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Kruger Jacob, 2019, Software Engineering for Variability Intensive Systems, P153, DOI 10.1201/9780429022067-7
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lapena R., 2017, GPCE 2017
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Mahmoud A, 2017, EMPIR SOFTW ENG, V22, P1965, DOI 10.1007/s10664-016-9473-1
   Mahmoud A, 2015, REQUIR ENG, V20, P281, DOI 10.1007/s00766-013-0199-y
   Marcén AC, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P57, DOI 10.1145/3109729.3109734
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Pérez F, 2018, INFORM SOFTWARE TECH, V103, P188, DOI 10.1016/j.infsof.2018.06.017
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Salton G, 1986, Introduction to Modern Information Retrieval
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Störrle H, 2014, LECT NOTES COMPUT SC, V8767, P518, DOI 10.1007/978-3-319-11653-2_32
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wallach Hanna M., 2009, Advances in neural information processing systems, P1973, DOI DOI 10.1007/S10708-008-9161-9
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 67
TC 6
Z9 6
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106676
DI 10.1016/j.infsof.2021.106676
EA JUL 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600003
DA 2024-07-18
ER

PT J
AU Tran, HKV
   Unterkalmsteiner, M
   Börstler, J
   bin Ali, N
AF Huynh Khanh Vi Tran
   Unterkalmsteiner, Michael
   Borstler, Jurgen
   bin Ali, Nauman
TI Assessing test artifact quality-A tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Test case quality; Test suite quality; Test artifact
   quality; Quality assurance
ID SYSTEMATIC LITERATURE-REVIEWS; SOFTWARE TEST-CODE; TAXONOMY;
   PRIORITIZATION; ONTOLOGY; DELIVERY; INDUSTRY; SMELLS; TOOLS
AB Context: Modern software development increasingly relies on software testing for an ever more frequent delivery of high quality software. This puts high demands on the quality of the central artifacts in software testing, test suites and test cases. Objective: We aim to develop a comprehensive model for capturing the dimensions of test case/suite quality, which are relevant for a variety of perspectives. Methods: We have carried out a systematic literature review to identify and analyze existing secondary studies on quality aspects of software testing artifacts. Results: We identified 49 relevant secondary studies. Of these 49 studies, less than half did some form of quality appraisal of the included primary studies and only 3 took into account the quality of the primary study when synthesizing the results. We present an aggregation of the context dimensions and factors that can be used to characterize the environment in which the test case/suite quality is investigated. We also provide a comprehensive model of test case/suite quality with definitions for the quality attributes and measurements based on findings in the literature and ISO/IEC 25010:2011. Conclusion: The test artifact quality model presented in the paper can be used to support test artifact quality assessment and improvement initiatives in practice. Furthermore, the model can also be used as a framework for documenting context characteristics to make research results more accessible for research and practice.
C1 [Huynh Khanh Vi Tran; Unterkalmsteiner, Michael; Borstler, Jurgen; bin Ali, Nauman] Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Tran, HKV (corresponding author), Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Sweden.
EM huynh.khanh.vi.tran@bth.se; michael.unterkalmsteiner@bth.se;
   jurgen.borstler@bth.se; nauman.ali@bth.se
RI Ali, Nauman bin/J-4293-2015; Börstler, Jürgen/IWE-4001-2023
OI Ali, Nauman bin/0000-0001-7266-5632; Börstler,
   Jürgen/0000-0003-0639-4234
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahmad J., 2017, INT J APPL ENG RES, V12, P1389
   Ahmad J, 2018, J TELECOMMUN ELECT C, V10, P119
   Ahmad T, 2019, COMPUT SCI REV, V33, P98, DOI 10.1016/j.cosrev.2019.07.001
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 2012, P 6 ACM INT C DISTRI
   [Anonymous], 2003, Electron. Notes Theor. Comput. Sci.
   [Anonymous], 2018, REFACTORING IMPROVIN
   Araki L. Y., 2018, P 20 INT C ENTERPRIS, P121
   Arnicans G, 2013, FRONT ARTIF INTEL AP, V249, P263, DOI 10.3233/978-1-61499-161-8-263
   Asadollah SA, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON COMPLEX FAULTS AND FAILURES IN LARGE SOFTWARE SYSTEMS (COUFLESS), P41, DOI 10.1109/COUFLESS.2015.14
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Bajaj A, 2019, IEEE ACCESS, V7, P126355, DOI 10.1109/ACCESS.2019.2938260
   Balera JM, 2019, INFORM SOFTWARE TECH, V114, P176, DOI 10.1016/j.infsof.2019.06.012
   Barbosa Ellen F., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P697
   Barraood SO, 2018, PROCEEDINGS OF KNOWLEDGE MANAGEMENT INTERNATIONAL CONFERENCE (KMICE) 2018, P355
   Beckedahl Markus., 2012, Die digitale Gesellschaft, P1
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   bin Ali N, 2019, INFORM SOFTWARE TECH, V112, P48, DOI 10.1016/j.infsof.2019.04.006
   Bowes D, 2017, INT WORKS EMERG TREN, P9, DOI 10.1109/WETSoM.2017.2
   Cai LZ, 2009, IEEE 15TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P103, DOI 10.1109/PRDC.2009.25
   Campos HD, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P34, DOI 10.1145/3131151.3131170
   Campos HDS, 2017, II BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING (SAST 2017), DOI 10.1145/3128473.3128483
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   COWARD PD, 1988, INFORM SOFTWARE TECH, V30, P189, DOI 10.1016/0950-5849(88)90065-1
   CRD, 2009, SYSTEMATIC REV CRDS
   Paiva SLD, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P333, DOI 10.1109/SEAA.2015.66
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   de Souza ÉF, 2017, APPL ONTOL, V12, P59, DOI 10.3233/AO-170177
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Lima JAD, 2019, J SYST SOFTWARE, V154, P92, DOI 10.1016/j.jss.2019.04.031
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Engström E, 2017, SOFTWARE QUAL J, V25, P1269, DOI 10.1007/s11219-016-9322-x
   Engström E, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P22
   Fairley Richard E., 2014, GUIDE SOFTWARE ENG B
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Flemström D, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P317, DOI 10.1109/SEAA.2015.46
   Freitas A, 2014, 2014 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 1, P400, DOI 10.1109/WI-IAT.2014.62
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   Grano G, 2020, PROC IEEE INT CONF S, P336, DOI 10.1109/ICSME46990.2020.00040
   Gu Tian-yang, 2010, World Acadmeny of Science, Engineering and Technology, V70, P647
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Tran HKV, 2019, LECT NOTES COMPUT SC, V11915, P37, DOI 10.1007/978-3-030-35333-9_3
   I.G.W. Group, 2015, STAND GLOASS TERMS U
   Imtiaz J, 2019, INFORM SOFTWARE TECH, V113, P1, DOI 10.1016/j.infsof.2019.05.001
   ISO/IEC JTC 1/SC 7 Software and systems engineering, 2011, 1SC7 ISOIEC JTC
   Jiwnani K, 2002, PROC IEEE INT CONF S, P194, DOI 10.1109/ICSM.2002.1167766
   Kapfhammer G. M., 2003, Software Engineering Notes, V28, P98, DOI 10.1145/949952.940086
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kazmi R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057269
   Khan SUR, 2018, IEEE ACCESS, V6, P11816, DOI 10.1109/ACCESS.2018.2809600
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kiran A, 2019, IEEE ACCESS, V7, P89093, DOI 10.1109/ACCESS.2019.2926384
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Lemos OAL, 2007, J SYST SOFTWARE, V80, P862, DOI 10.1016/j.jss.2006.08.022
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mascheroni MA, 2018, COMPUT SIST, V22, P1009, DOI [10.13053/cys-22-3-2794, 10.13053/CyS-22-3-2794]
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Nabil E, 2015, IEEE WORLD CONGR SER, P152, DOI 10.1109/SERVICES.2015.31
   Narciso EN, 2014, INT J SOFTW ENG KNOW, V24, P653, DOI 10.1142/S0218194014500259
   Neukirchen Helmut, 2008, International Journal on Software Tools for Technology Transfer, V10, P309, DOI 10.1007/s10009-008-0075-0
   Paul T.K., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing - SAC'14, P1301
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pinto Gustavo, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P492, DOI 10.1145/3379597.3387482
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Qiu D, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2631685
   Roehm T, 2013, CONF PROC INT SYMP C, P73, DOI 10.1109/ICPC.2013.6613835
   ROTHERMEL G, 1994, PROC INT CONF SOFTW, P201, DOI 10.1109/ICSE.1994.296779
   Saeed A, 2016, APPL SOFT COMPUT, V49, P1094, DOI 10.1016/j.asoc.2016.08.030
   Sahid M. Z., 2016, J. Comput. Sci., V12, P379, DOI [10.3844/jcssp.2016.379.398, DOI 10.3844/JCSSP.2016.379.398]
   Santos ID, 2017, INFORM SOFTWARE TECH, V88, P1, DOI 10.1016/j.infsof.2017.03.008
   Santos I, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P347, DOI 10.1145/3350768.3352571
   Sapna PC, 2011, COMM COM INF SC, V141, P91
   Seng L.K., 2018, English. International Journal of Advanced Computer Research, V8, P285
   Shafique M, 2015, INT J SOFTW TOOLS TE, V17, P59, DOI 10.1007/s10009-013-0291-0
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Singh Y, 2012, INFORM-J COMPUT INFO, V36, P379
   Smidts Carol, 2014, ACM Computing Surveys, V46, DOI 10.1145/2518106
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Stephan M, 2014, IEEE ICST WORKSHOP, P206, DOI 10.1109/ICSTW.2014.17
   Tebes G., 2019, QUALITY INFORM COMMU, VVolume 1010, DOI [10.1007/978-3-030-29238-6_11, DOI 10.1007/978-3-030-29238-6_11]
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Uzun B, 2018, INFORM SOFTWARE TECH, V102, P30, DOI 10.1016/j.infsof.2018.05.004
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Vasanthapriyan S., 2017, INT S KNOWLEDGE SYST, P212
   Vasanthapriyan S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P472, DOI 10.1109/QRS-C.2017.82
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
   Vessey I, 2005, INFORM SOFTWARE TECH, V47, P245, DOI 10.1016/j.infsof.2004.08.006
   Villalobos-Arias L., 2018, P 21 IBERO AM C SOFT, P15
   Weiss J, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P181, DOI 10.1109/SEAA.2016.33
   Yoon H, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P174, DOI 10.1109/APSEC.1998.733717
   Young M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P53, DOI 10.1145/74587.74593
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zakaria Z, 2009, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC.2009.72
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zhu H., 2005, SOFTWARE EVOLUTION U, P263
NR 117
TC 11
Z9 11
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106620
DI 10.1016/j.infsof.2021.106620
EA JUN 2021
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300012
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Almendros-Jiménez, JM
   Becerra-Terón, A
   Merayo, MG
   Núñez, M
AF Almendros-Jimenez, Jesus M.
   Becerra-Teron, Antonio
   Merayo, Mercedes G.
   Nunez, Manuel
TI Metamorphic testing of OpenStreetMap
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metamorphic testing; Quality of maps; OpenStreetMap
ID VOLUNTEERED GEOGRAPHIC INFORMATION; QUALITY; SYSTEMS; TOOL
AB Context: OpenStreetMap represents a collaborative effort of many different and unrelated users to create a free map of the world. Although contributors follow some general guidelines, unsupervised additions are prone to include erroneous information. Unfortunately, it is impossible to automatically detect most of these issues because there does not exist an oracle to evaluate whether the information is correct or not. Metamorphic testing has shown to be very useful in assessing the correctness of very heterogeneous artifacts when oracles are not available. Objective: The main goal of our work is to provide a (fully implemented) framework, based on metamorphic testing, that will support the analysis of the information provided in OpenStreetMap with the goal of detecting faulty information. Method: We defined a general metamorphic testing framework to deal with OpenStreetMap. We identified a set of good metamorphic relations. In order to have as much automation as possible, we paid special attention to the automatic selection of follow-up inputs because they are fundamental to diminish manual testing. In order to assess the usefulness of our framework, we applied it to analyze maps of four cities in different continents. The rationale is that we would be dealing with different problems created by different contributors. Results: We obtained experimental evidence that shows the potential value of our framework. The application of our framework to the analysis of the chosen cities revealed errors in all of them and in all the considered categories. Conclusion: The experiments showed the usefulness of our framework to identify potential issues in the information appearing in OpenStreetMap. Although our metamorphic relations are very helpful, future users of the framework might identify other relations to deal with specific situations not covered by our relations. Since we provide a general pattern to define metamorphic relations, it is relatively easy to extend the existing framework. In particular, since all our metamorphic relations are implemented and the code is freely available, users have a pattern to implement new relations.
C1 [Almendros-Jimenez, Jesus M.; Becerra-Teron, Antonio] Univ Almeria, Dept Informat, Carretera Sacramento S-N, Almeria 04120, Spain.
   [Merayo, Mercedes G.; Nunez, Manuel] Univ Complutense Madrid, Inst Knowledge Technol, Madrid 28040, Spain.
C3 Universidad de Almeria; Complutense University of Madrid
RP Núñez, M (corresponding author), Univ Complutense Madrid, Inst Knowledge Technol, Madrid 28040, Spain.
EM jalmen@ual.es; abecerra@ual.es; mgmerayo@fdi.ucm.es; mn@sip.ucm.es
RI Núñez, Manuel/B-6889-2008; Becerra-Teron, Antonio/AAA-2797-2019;
   Almendros Jimenez, Jesus Manuel/F-4584-2018; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/T-4990-2018
OI Núñez, Manuel/0000-0001-9808-6401; Becerra-Teron,
   Antonio/0000-0001-7583-6353; Almendros Jimenez, Jesus
   Manuel/0000-0002-7925-2678; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/0000-0002-4634-4082
FU State Research Agency (AEI) of the Spanish Ministry of Science and
   Innovation [PID2019-104735RB-C42, RTI2018-093608-B-C31]; Region of
   Madrid, Spain - EIE Funds of the European Union [S2018/TCS-4314]; Region
   of Madrid - Complutense University of Madrid, Spain [PR65/19-22452]
FX This work has been supported by the State Research Agency (AEI) of the
   Spanish Ministry of Science and Innovation under grants
   PID2019-104735RB-C42 (SAFER) and RTI2018-093608-B-C31 (FAME); the Region
   of Madrid, Spain under grant S2018/TCS-4314 (FORTE-CM) co-funded by EIE
   Funds of the European Union; the Region of Madrid - Complutense
   University of Madrid, Spain (grant PR65/19-22452).
CR Almendros-Jimenez JM, 2021, HUM-CENT COMPUT INFO, V11, DOI 10.22967/HCIS.2021.11.010
   Almendros-Jiménez JM, 2018, ISPRS INT J GEO-INF, V7, DOI 10.3390/ijgi7080323
   Almendros-Jiménez JM, 2019, COMPUT J, V62, P321, DOI 10.1093/comjnl/bxx079
   Ammann P., 2017, INTRO SOFTWARE TESTI
   [Anonymous], 1998, HKUSTCS9801
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   Arsanjani JJ, 2015, LECT NOTES GEOINF CA, P1, DOI 10.1007/978-3-319-14280-7
   Bamford R, 2009, PROC VLDB ENDOW, V2, P1342, DOI 10.14778/1687553.1687560
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Barron C, 2014, T GIS, V18, P877, DOI 10.1111/tgis.12073
   Basiri A, 2019, INT J GEOGR INF SCI, V33, P1588, DOI 10.1080/13658816.2019.1593422
   Brown Joshua, 2019, Towards Integrated Web, Mobile, and IoT Technology. Selected and Revised Papers from the Web Technologies Track at SAC 2017 and SAC 2018, and the Software Development for Mobile Devices, Wearables, and the IoT Minitrack at HICSS 2018. Lecture Notes in Business Information Processing (LNBIP 347), P1, DOI 10.1007/978-3-030-28430-5_1
   Brown J, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5687
   Cañizares PC, 2019, EXPERT SYST APPL, V132, P44, DOI 10.1016/j.eswa.2019.04.070
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Degrossi LC, 2018, T GIS, V22, P542, DOI 10.1111/tgis.12329
   Dyck M., 2014, XQUERY 30 XML QUERY
   Fogliaroni P, 2018, GEO-SPAT INF SCI, V21, P213, DOI 10.1080/10095020.2018.1496556
   Gomez-Abajo P., IN PRESS
   Gómez-Abajo P, 2018, SCI COMPUT PROGRAM, V163, P85, DOI 10.1016/j.scico.2018.01.008
   Haklay M, 2010, CARTOGR J, V47, P315, DOI 10.1179/000870410X12911304958827
   Hierons RM, 2018, IEEE T RELIAB, V67, P522, DOI 10.1109/TR.2018.2800093
   Hui ZW, 2020, IEEE T RELIAB, V69, P657, DOI 10.1109/TR.2019.2931561
   Kessler C, 2013, LECT NOTES GEOINF CA, P21, DOI 10.1007/978-3-319-00615-4_2
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Merayo MG, 2018, INFORM SOFTWARE TECH, V104, P162, DOI 10.1016/j.infsof.2018.07.013
   Merayo MG, 2018, DISTRIB COMPUT, V31, P327, DOI 10.1007/s00446-017-0308-0
   Minghini M., 2019, OPEN GEOSPATIAL DATA, V4, P9, DOI 10.1186/s40965-019-0067-x
   Mooney P, 2014, INT J DIGIT EARTH, V7, P534, DOI 10.1080/17538947.2013.781688
   Mooney P, 2012, FUTURE INTERNET, V4, P285, DOI 10.3390/fi4010285
   Nasiri A, 2018, ISPRS INT J GEO-INF, V7, DOI 10.3390/ijgi7070253
   Neis P, 2012, ISPRS INT J GEO-INF, V1, P146, DOI 10.3390/ijgi1020146
   Nunez A, 2021, IEEE T RELIAB, V70, P261, DOI 10.1109/TR.2020.3011512
   Olsen M, 2019, IEEE T RELIAB, V68, P91, DOI 10.1109/TR.2018.2850315
   Pugh S, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P2, DOI 10.1109/MET.2019.00009
   Segura S, 2020, IEEE SOFTWARE, V37, P46, DOI 10.1109/MS.2018.2875968
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Sehra SS, 2020, T GIS, V24, P44, DOI 10.1111/tgis.12587
   Sehra SS, 2017, FUTURE INTERNET, V9, DOI 10.3390/fi9020015
   Vandecasteele A, 2015, LECT NOTES GEOINF CA, P59, DOI 10.1007/978-3-319-14280-7_4
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Yan BY, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P70, DOI 10.1109/MET.2019.00018
   Zhang H., 2019, CROWDSOURCING CONCEP, P1173
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 48
TC 9
Z9 10
U1 3
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106631
DI 10.1016/j.infsof.2021.106631
EA MAY 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500010
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Almhana, R
   Kessentini, M
   Mkaouer, W
AF Almhana, Rafi
   Kessentini, Marouane
   Mkaouer, Wiem
TI Method-level bug localization using hybrid multi-objective search
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bugs localization; Fault localization; Search-based software
   engineering; Bug reports; Multi-objective search; Simulated annealing;
   Software maintenance
ID GENETIC ALGORITHM; MODEL; EXAMPLES
AB Context: One of the time-consuming maintenance tasks is the localization of bugs especially in large software systems. Developers have to follow a tedious process to reproduce the abnormal behavior then inspect a large number of files. While several studies have been proposed for bugs localization, the majority of them are recommending classes/files as outputs which may still require high inspection effort. Furthermore, there is a significant difference between the natural language used in bug reports and the programming language which limits the efficiency of existing approaches since most of them are mainly based on lexical similarity.
   : In this paper, we propose an automated approach to find and rank the potential methods in order to localize the source of a bug based on a bug report description.
   Method: Our approach finds a good balance between minimizing the number of recommended classes and maximizing the relevance of the proposed solution using a hybrid multi-objective optimization algorithm combining local and global search. The relevance of the recommended code fragments is estimated based on the use of the history of changes and bug-fixing, and the lexical similarity between the bug report description and the API documentation. Our approach operates on two main steps. The first step is to find the best set of classes satisfying the two conflicting criteria of relevance and the number of classes to recommend using a global search based on NSGA-II. The second step is to locate the most appropriate methods to inspect, using a local multi objective search based on Simulated Annealing (MOSA) from the list of classes recommended by the first step.
   Results: We evaluated our system on 6 open source Java projects, using the version of the project before fixing the bug of many bug reports. Our hybrid multi-objective approach is able to successfully locate the true buggy methods within the top 10 recommendations for over 78% of the bug reports leading to a significant reduction of developers' effort comparing to class-level bug localization techniques.
   Conclusion: The experimental results show that the search-based approach significantly outperforms four state-of-the-art methods in recommending relevant files for bug reports.
C1 [Almhana, Rafi; Kessentini, Marouane] Univ Michigan, Dept Comp & Informat Sci, Ann Arbor, MI 48109 USA.
   [Mkaouer, Wiem] Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
C3 University of Michigan System; University of Michigan; Rochester
   Institute of Technology
RP Kessentini, M (corresponding author), Univ Michigan, Dept Comp & Informat Sci, Ann Arbor, MI 48109 USA.
EM ralmhana@umich.edu; marouane@umich.edu; mwmvse@rit.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561
CR Almhana R, 2016, IEEE INT CONF AUTOM, P286, DOI 10.1145/2970276.2970344
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Aman H, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2220
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], METHODS LEVEL DATA B
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Ashok B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P373
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Chen SH, 2011, IEEE C EVOL COMPUTAT, P45, DOI 10.1145/1806799.1806811
   Czyzak P., 1998, Journal of Multi-Criteria Decision Analysis, V7, P34
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2011, ENG OPTIMIZ, V43, P1175, DOI 10.1080/0305215X.2010.548863
   Dreyton Duany, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P295, DOI 10.1007/978-3-319-22183-0_26
   Dreyton D, 2016, LECT NOTES COMPUT SC, V9962, P143, DOI 10.1007/978-3-319-47106-8_10
   Dumais ST, 2004, ANNU REV INFORM SCI, V38, P189
   Emmerich MTM, 2018, NAT COMPUT, V17, P585, DOI 10.1007/s11047-018-9685-y
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Ghannem A, 2016, SOFTWARE QUAL J, V24, P947, DOI 10.1007/s11219-015-9271-9
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Huang Q, 2017, PROC INT SYMP SOFTW, P124, DOI 10.1109/ISSRE.2017.24
   Keller AA., 2019, Multi-objective optimization in theory and practice II: meta-heuristic algorithms
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Kessentini M, 2014, J SYST SOFTWARE, V97, P1, DOI 10.1016/j.jss.2014.06.040
   Kumar V., 2006, Introduction to Data Mining
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Loyola P, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P657, DOI 10.1145/3269206.3271811
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Mock W.B.T., 2011, Encyclopedia of Global Justice, P808, DOI DOI 10.1007/978-1-4020-9160-5_341
   Núñez A, 2013, SOFT COMPUT, V17, P301, DOI 10.1007/s00500-012-0894-5
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Saha RK, 2014, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSME.2014.38
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Shelburg Jeffery, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P209, DOI 10.1007/978-3-642-39742-4_16
   Talbi E.-G., 2009, METAHEURISTICS DESIG, V74
   Tantithamthavorn C, 2018, INFORM SOFTWARE TECH, V102, P160, DOI 10.1016/j.infsof.2018.06.001
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Ulungu E.L., 1999, Journal of Multi-Criteria Decision Analysis, V8, P221, DOI [10.1002/(SICI)1099-1360(199907)8:43.0.CO;2-O, DOI 10.1002/(SICI)1099-1360(199907)8:4ANDLT;221::AID-MCDA247ANDGT;3.0.CO;2-O]
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wilcoxon Frank, 1970, SELECTED TABLES MATH, V1, P171, DOI [DOI 10.1002/9780471462422.EOCT, DOI 10.1007/SPRINGERREFERENCE_205698]
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Xiao Y, 2018, INFORM SOFTWARE TECH, V99, P58, DOI 10.1016/j.infsof.2018.03.003
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 59
TC 11
Z9 12
U1 1
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106474
DI 10.1016/j.infsof.2020.106474
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000004
DA 2024-07-18
ER

PT J
AU Ebrahimi, F
   Tushev, M
   Mahmoud, A
AF Ebrahimi, Fahimeh
   Tushev, Miroslav
   Mahmoud, Anas
TI Mobile app privacy in software engineering research: A systematic
   mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Privacy; Mobile application; Systematic mapping study
ID LITERATURE-REVIEWS; STATIC ANALYSIS; ANDROID APPS; SECURITY;
   REQUIREMENTS
AB Context: Mobile applications (apps) have become deeply personal, constantly demanding access to privacy-sensitive information in exchange for more personalized user experiences. Such privacy-invading practices have generated major multidimensional privacy concerns among app users.
   Objective: The research on mobile app privacy has experienced rapid growth over the past decade. This line of research is aimed at systematically exposing the privacy practices of apps and proposing solutions to protect the privacy of mobile app users. In this paper, we conduct a systematic mapping study of this body of research. Our objectives are to a) explore trends in SE app privacy research, b) categorize existing evidence, and c) identify potential directions for future research.
   Method: A systematic mapping study of 59 Software Engineering (SE) primary studies on mobile app privacy. Our scope is studies published in software engineering venues between 2008 and 2018.
   Results: Our results show that existing literature can be divided into four main categories: privacy policy, requirements, user perspective, and leak detection. Furthermore, our survey reveals an imbalance between these categories-the majority of existing research focuses on proposing tools for detecting privacy leaks, with fewer studies targeting privacy requirements and policy and even fewer on user perspective.
   Conclusions: Our survey exposes several gaps in existing research and suggests areas for improvement.
C1 [Ebrahimi, Fahimeh; Tushev, Miroslav; Mahmoud, Anas] Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
C3 Louisiana State University System; Louisiana State University
RP Mahmoud, A (corresponding author), Louisiana State Univ, Div Comp Sci & Engn, Baton Rouge, LA 70803 USA.
EM mahmoud@csc.lsu.edu
RI Ebrahimi, Fahimeh/AAU-3670-2021
CR Acquisti A, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3054926
   [Anonymous], 2015, PRIVACY RATING ANDRO
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Aydin A, 2017, LECT NOTES COMPUT SC, V10202, P338, DOI 10.1007/978-3-662-54494-5_19
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bartel A, 2014, IEEE T SOFTWARE ENG, V40, P617, DOI 10.1109/TSE.2014.2322867
   Bhatia J, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2907942
   Bockle G., SOFTWARE PRODUCT LIN
   BOGUSLAW R, 1968, AM SOCIOL REV, V33, P173, DOI 10.2307/2092293
   Brandeis L., 1890, Harvard law Review, V4, P193
   Breaux TD, 2015, INT REQUIR ENG CONF, P166, DOI 10.1109/RE.2015.7320419
   Breaux TD, 2014, REQUIR ENG, V19, P281, DOI 10.1007/s00766-013-0190-7
   Breaux TD, 2013, S VIS LANG HUM CEN C, P14, DOI 10.1109/RE.2013.6636701
   Cai HP, 2017, PROC IEEE INT CONF S, P643, DOI 10.1109/ICSME.2017.35
   Calciati P, 2018, IEEE WORK CONF MIN S, P142, DOI 10.1145/3196398.3196449
   Canfora G, 2019, IEEE T SOFTWARE ENG, V45, P1230, DOI 10.1109/TSE.2018.2834344
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Demissie BF, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P255, DOI [10.1145/2897073.2897082, 10.1109/MobileSoft.2016.053]
   Dilhara M, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P67, DOI 10.1145/3197231.3197255
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Garcia J, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3162625
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   González-Baixauli B, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P198
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Hay R., 2015, P 2015 INT S SOFTWAR, P118
   Holavanalli S, 2013, IEEE INT CONF AUTOM, P652, DOI 10.1109/ASE.2013.6693128
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Huang W., 2015, P 2015 INT S SOFTWAR, P106, DOI 10.1145/2771783.2771803
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Kang Kyo C, 1990, Technical Report
   Keng JCJ, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P57, DOI [10.1145/2896921.2896930, 10.1109/AST.2016.017]
   Keng JCJ, 2016, IEEE INT CONF AUTOM, P880, DOI 10.1145/2970276.2975935
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Lee S, 2016, IEEE INT CONF AUTOM, P250, DOI 10.1145/2970276.2970368
   Lee YK, 2017, IEEE INT CONF AUTOM, P883, DOI 10.1109/ASE.2017.8115699
   Lee YK, 2017, PROC INT CONF SOFTW, P312, DOI 10.1109/ICSE.2017.36
   Li L., 2016, PROC ISSTA, P318
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2016, IEEE INT CONF AUTOM, P756, DOI 10.1145/2970276.2970277
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Liu Y, 2016, SOFTWARE PRACT EXPER, V46, P1657, DOI 10.1002/spe.2403
   Mahmoud A., 2019, EMPIR SOFTW ENG
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Meng Guozhu., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, ISSTA 2016, P306
   Moussa Majda, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P144, DOI 10.1109/MOBILESoft.2017.22
   Narayanan A, 2018, EMPIR SOFTW ENG, V23, P1222, DOI 10.1007/s10664-017-9539-8
   Newsome J., 2005, NDSS, V5, P3
   Noei E, 2019, EMPIR SOFTW ENG, V24, P1964, DOI 10.1007/s10664-019-09684-y
   Omoronyia I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P632, DOI 10.1109/ICSE.2013.6606609
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Papadopoulos EP, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P153, DOI 10.1145/3038912.3052691
   Petersen K., 2008, 12 INT C EVALUATION, DOI [10.14236/ewic/EASE2008.8, DOI 10.14236/EWIC/EASE2008.8]
   Rahman Akond, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P149, DOI 10.1109/MOBILESoft.2017.14
   Sadeghi A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P846, DOI 10.1145/3180155.3180172
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Sattler F, 2018, AUTOMAT SOFTW ENG, V25, P315, DOI 10.1007/s10515-017-0228-z
   Scoccia GL, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P45, DOI 10.1145/3197231.3197236
   Shan ZY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P728, DOI 10.1145/3180155.3180214
   Shen F., 2014, P 29 ACMIEEE INT C A, P515, DOI DOI 10.1145/2642937.2643018
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Solove DJ, 2002, CALIF LAW REV, V90, P1087, DOI 10.2307/3481326
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Thein Than Tun, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P131, DOI 10.1109/RE.2012.6345797
   Thomas K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P871, DOI 10.1145/2568225.2568240
   Van der Sype YS, 2014, 2014 IEEE 7TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P25, DOI 10.1109/RELAW.2014.6893479
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Wang HY, 2018, IEEE WORK CONF MIN S, P231, DOI 10.1145/3196398.3196412
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P37, DOI 10.1145/3180155.3180196
   Wohlin C. C., EXPT SOFTWARE ENG
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xiao XS, 2015, AUTOMAT SOFTW ENG, V22, P333, DOI 10.1007/s10515-014-0166-y
   Xu H, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P348, DOI 10.1109/ISSRE.2015.7381828
   Xu W, 2013, PROC INT SYMP SOFTW, P400, DOI 10.1109/ISSRE.2013.6698893
   Yang W, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P303, DOI 10.1109/ICSE.2015.50
   Young JD, 2011, REQUIR ENG, V16, P33, DOI 10.1007/s00766-010-0108-6
   Yu ES, 2009, LECT NOTES COMPUT SC, V5600, P99, DOI 10.1007/978-3-642-02463-4_7
   Yu L, 2021, IEEE T SOFTWARE ENG, V47, P221, DOI 10.1109/TSE.2018.2886875
   Yu L, 2018, IEEE T SOFTWARE ENG, V44, P834, DOI 10.1109/TSE.2017.2730198
   Yu L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P415, DOI 10.1109/SANER.2016.67
   Zhang YF, 2018, SOFTWARE PRACT EXPER, V48, P1419, DOI 10.1002/spe.2577
   Zhao FH, 2018, PROC INT SYMP SOFTW, P236, DOI 10.1109/ISSRE.2018.00033
   Zimmeck Sebastian., 2016, AAAI Fall Symposium Series, P286
   Zipeng Zhang, 2017, Dependable Software Engineering. Theories, Tools, and Applications. Third International Symposium, SETTA 2017. Proceedings: LNCS 10606, P164, DOI 10.1007/978-3-319-69483-2_10
NR 89
TC 13
Z9 13
U1 1
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106466
DI 10.1016/j.infsof.2020.106466
EA FEB 2021
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2TC
UT WOS:000620932900009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yan, XB
   Liu, B
   Wang, SH
   An, D
   Zhu, F
   Yang, YL
AF Yan Xiaobo
   Liu Bin
   Wang Shihai
   An Dong
   Zhu Feng
   Yang Yelin
TI Efilter: An effective fault localization based on information entropy
   with unlabelled test cases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Fault localization; Software debugging; Test oracle; Unlabelled test
   cases; Information entropy
ID COVERAGE; SLICE; CODE; BUGS
AB Context: Automatic fault localization is essential to intelligent software system. Most fault localization techniques assume the test oracle is perfect before debugging, which is hard to exist in practice. In fact, the test suite would contain a number of unlabelled test cases which have been proved to be useful in fault localization. However, due to the execution diversity, not all unlabelled test cases are suitable for fault localization. Selecting inappropriate unlabelled test cases can even weaken the fault localization efficiency.
   Objective: To solve the problem of filtering unlabelled test cases, this work aims to construct a feasible framework to select suitable unlabelled test cases for better fault localization.
   Method: To address this issue, an entropy-based framework Efilter is constructed to filter unlabelled test cases. In Efilter, a Statement-based entropy and Testsuite-based entropy are constructed to measure the localization uncertainty of given test suite. The unlabelled test case with less Statement-based entropy or Testsuite-based entropy compared with its threshold would be selected. Further, the feature integration strategies for both Statement-based entropy and Testsuite-based entropy are given to calculate the suspiciousness of statements.
   Results: The Efilter efficiency is evaluated across 6 open-source programs and 3 spectrum-based fault localizations. The results reveal that Efilter can improve fault localization efficiency by 18.8% and 16.5% with the Statement-based entropy and the Testsuite-based entropy respectively compared with the strategy without Efilter from the perspective of EXAM score on average.
   Conclusion: Our results indicate that the Efilter with both the Statement-based entropy and the Testsuite-based entropy can improve the fault localization in the scenario lack of test oracles, serving as an enhancement for fault localization in practice.
C1 [Yan Xiaobo; Liu Bin; Wang Shihai; An Dong] Beihang Univ, Sci & Technol Reliabil & Environm Engn Lab, Beijing, Peoples R China.
   [Yan Xiaobo; Liu Bin; Wang Shihai; An Dong] Beihang Univ, Sch Reliabil & Syst Engn, Zhichun Rd, Beijing 100191, Peoples R China.
   [Yan Xiaobo; Zhu Feng; Yang Yelin] Nanjing Res Inst Elect Engn, Nanjing 210007, Peoples R China.
C3 Beihang University; Beihang University
RP Wang, SH (corresponding author), Beihang Univ, Sch Reliabil & Syst Engn, Zhichun Rd, Beijing 100191, Peoples R China.
EM yxbbuaa@buaa.edu.cn; liubin@buaa.edu.cn; wangshihai@buaa.edu.cn;
   ad14011099@buaa.edu.cn; fenix_zh@126.com; ylyang05@163.com
RI LI, Xiang-Yang/JZE-0275-2024; Han, Liang/KFR-6745-2024; Wang,
   Xingyi/KHT-7171-2024
FU Science and Technology on Reliability and Environmental Engineering
   Laboratory, China [614200404031117, 61400020404]
FX The authors would like to thank the editors and anonymous reviewers
   whose suggestions have improved the presentation of this work. This work
   is supported by the Science and Technology on Reliability and
   Environmental Engineering Laboratory, China under Grant 614200404031117
   and foundation No. 61400020404.
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Choi S.-S., 2010, Systemics, Cybernetics and Informatic, V8, P43
   Cotroneo D, 2016, J SYST SOFTWARE, V113, P27, DOI 10.1016/j.jss.2015.11.021
   Debroy Vidroha, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P165, DOI 10.1109/ISSRE.2009.14
   DiGiuseppe N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P3, DOI 10.1109/ICSM.2011.6080767
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Gao RZ, 2019, IEEE T SOFTWARE ENG, V45, P301, DOI 10.1109/TSE.2017.2776912
   Gao RZ, 2017, SOFTWARE QUAL J, V25, P131, DOI 10.1007/s11219-015-9295-1
   Gay G, 2017, IEEE T SOFTWARE ENG, V43, P531, DOI 10.1109/TSE.2016.2615311
   Gonzalez-Sanchez Alberto, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P42, DOI 10.1109/QSIC.2010.28
   Grottke M, 2007, COMPUTER, V40, P107, DOI 10.1109/MC.2007.55
   Guo XR, 2015, IEEE T SOFTWARE ENG, V41, P986, DOI 10.1109/TSE.2015.2425392
   Hao D, 2016, IEEE T SOFTWARE ENG, V42, P490, DOI 10.1109/TSE.2015.2496939
   Harrold, 2005, 20 IEEE ACM INT C AU, P7
   Hierons RM, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1538942.1538944
   Hierons RM, 2012, IEEE T SOFTWARE ENG, V38, P629, DOI 10.1109/TSE.2011.45
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kapur J.N, BIOMETRICS, V52
   Le TDB, 2015, EMPIR SOFTW ENG, V20, P1237, DOI 10.1007/s10664-014-9349-1
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Luo Q, 2019, IEEE T SOFTWARE ENG, V45, P1054, DOI 10.1109/TSE.2018.2822270
   Machado P.D.L., 2007, QUAL SOFTW 2007 QSIC
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Marchetto A, 2019, IEEE T SOFTWARE ENG, V45, P363, DOI 10.1109/TSE.2017.2777831
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pérez A, 2020, INT J SPORT PHYSIOL, V15, P375, DOI 10.1123/ijspp.2019-0113
   Lamancha BP, 2013, INFORM SOFTWARE TECH, V55, P301, DOI 10.1016/j.infsof.2012.08.009
   Prybutok V, 2001, TECHNOMETRICS, V31, P389
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Shahamiri SR, 2011, INFORM SOFTWARE TECH, V53, P774, DOI 10.1016/j.infsof.2011.02.006
   Shahamiri SR, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P140, DOI 10.1109/ICSEA.2009.29
   Taheri SM, 2013, STAT PAP, V54, P457, DOI 10.1007/s00362-012-0443-4
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
   Zhang XY, 2018, J SYST SOFTWARE, V136, P278, DOI 10.1016/j.jss.2017.07.027
   Zheng Z, 2016, KNOWL-BASED SYST, V114, P36, DOI 10.1016/j.knosys.2016.09.021
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
   Zou L., 2017, FORMAL VERIFICATION, P464
NR 55
TC 9
Z9 9
U1 1
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106543
DI 10.1016/j.infsof.2021.106543
EA FEB 2021
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4GK
UT WOS:000634797600008
OA Bronze
DA 2024-07-18
ER

PT J
AU Figalist, I
   Elsner, C
   Bosch, J
   Olsson, HH
AF Figalist, Iris
   Elsner, Christoph
   Bosch, Jan
   Olsson, Helena Holmstrom
TI Fast and curious: A model for building efficient monitoring- and
   decision-making frameworks based on quantitative data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Data analytics; Software analytics; Data-driven
   decision making; System monitoring
ID SOFTWARE; PREDICTION; ANALYTICS
AB Context: Nowadays, the hype around artificial intelligence is at its absolute peak. Large amounts of data are collected every second of the day and a variety of tools exists to enable easy analysis of data. In practice, however, making meaningful use of it is way more challenging. For instance, affected stakeholders often struggle to specify their information needs and to interpret the results of such analyses.
   Objective: In this study we investigate how to enable continuous monitoring of information needs, and the generation of knowledge and insights for various stakeholders involved in the lifecycle of software-intensive products. The overarching goal is to support their decision making by providing relevant insights related to their area of responsibility.
   Methods: We implement multiple monitoringand decision-making frameworks for six individual, real-world cases selected from three different platforms and covering four types of stakeholders. We compare the individual procedures to derive a generic process for instantiating such frameworks as well as a model to scale it up for multiple stakeholders. Results: For one, we discovered that information needs of stakeholders are often related to a limited subset of data sources and should be specified in stages. For another, stakeholders often benefit from sharing and reusing existing components among themselves in later phases. Specifically, we identify three types of reuse: (1) Data and knowledge, (2) tools and methods, and (3) concepts. As a result, key aspects of our model are iterative feedback and specification cycles as well as the reuse of appropriate components to speed up the instantiation process and maximize the efficiency of the model.
   Conclusion: Our results indicate that knowledge and insights can be generated much faster and stakeholders feel the benefits of the analysis very early on by iteratively specifying information needs and by systematically sharing and reusing knowledge, tools and concepts.
C1 [Figalist, Iris; Elsner, Christoph] Siemens Corp Technol, Otto Hahn Ring 6, D-81739 Munich, Germany.
   [Bosch, Jan] Chalmers Univ Technol, Dept Comp Sci & Engn, Horselgangen 11, S-41296 Gothenburg, Sweden.
   [Olsson, Helena Holmstrom] Malmo Univ, Dept Comp Sci & Media Technol, S-21119 Malmo, Sweden.
C3 Siemens AG; Siemens Germany; Chalmers University of Technology; Malmo
   University
RP Figalist, I (corresponding author), Siemens Corp Technol, Otto Hahn Ring 6, D-81739 Munich, Germany.
EM iris.figalist@siemens.com
RI Olsson, Helena H/H-2193-2014
CR Abdellatif TM, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P30, DOI 10.1109/BIGDSE.2015.14
   Agrawal R., 1996, Advances in Knowledge Discovery and Data Mining, V12, P307, DOI DOI 10.1007/978-3-319-31750-2.
   [Anonymous], 2017, Markov Chains, P25, DOI DOI 10.1002/9781119387596.CH3
   Anthony R. N., 1965, PLANNING CONTROL SYS
   Augustine V, 2018, IEEE SOFTWARE, V35, P72, DOI 10.1109/MS.2017.4541044
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Berander P., 2006, INT S EMPIRICAL SOFT, P316
   Bizer C, 2011, SIGMOD REC, V40, P56, DOI 10.1145/2094114.2094129
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Cito J, 2016, IEEE INT CONF AUTOM, P892, DOI 10.1145/2970276.2975939
   Dorigo M, 2006, IEEE COMPUT INTELL M, V1, P28, DOI 10.1109/MCI.2006.329691
   Fabijan A, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P18, DOI 10.1109/SEAA.2017.47
   Fabijan A, 2017, PROC INT CONF SOFTW, P770, DOI 10.1109/ICSE.2017.76
   Fabijan Aleksander, 2016, Agile Processes, in Software Engineering, and Extreme Programming, P39, DOI [DOI 10.1007/978-3-319-33515-5_4, 10.1007/978-3-319-33515-5_4]
   Figalist I, 2019, LECT NOTES BUS INF P, V370, P378, DOI 10.1007/978-3-030-33742-1_30
   Figalist I, 2019, EUROMICRO CONF PROC, P66, DOI 10.1109/SEAA.2019.00019
   Freedman D., 1991, STATISTICS-ABINGDON, V2nd
   Goddard W.Melville., 2004, RES METHODOLOGY INTR, V2nd
   Gulli A., 2017, DEEP LEARNING KERAS
   Han JW, 2000, SIGMOD RECORD, V29, P1
   Hassan AE, 2013, IEEE SOFTWARE, V30, P53, DOI 10.1109/MS.2013.85
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Holmstrom Olsson Helena, 2013, Lean Enterprise Software and Systems, P152, DOI [10.1007/978-3, DOI 10.1007/978-3]
   Kaner C., 2004, METRICS 2004 IEEE CS
   Kohavi R, 2017, HARVARD BUS REV, V95, P74
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Menzies T, 2018, IEEE SOFTWARE, V35, P64, DOI 10.1109/MS.2018.290111035
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Mozer MC, 2000, IEEE T NEURAL NETWOR, V11, P690, DOI 10.1109/72.846740
   Nayebi M, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P18, DOI 10.1109/ASEW.2015.28
   Olsson HH, 2019, LECT NOTES COMPUT SC, V11915, P515, DOI 10.1007/978-3-030-35333-9_36
   Olsson HH, 2017, LECT NOTES BUS INF P, V304, P179, DOI 10.1007/978-3-319-69191-6_12
   Saggi MK, 2018, INFORM PROCESS MANAG, V54, P758, DOI 10.1016/j.ipm.2018.01.010
   Sarukkai RR, 2000, COMPUT NETW, V33, P377, DOI 10.1016/S1389-1286(00)00044-X
   Singh Harpreet, 2014, International Journal of Information Technology and Computer Science, V6, P48, DOI 10.5815/ijitcs.2014.11.07
   Sivanandam S., 2008, INTRO GENETIC ALGORI, P15, DOI [10.1007/978-3-540-73190-0_2, DOI 10.1007/978-3-540-73190-0_2]
   WARD JH, 1963, J AM STAT ASSOC, V58, P236, DOI 10.2307/2282967
   Yang Y, 2018, IEEE SOFTWARE, V35, P51, DOI 10.1109/MS.2017.4541039
   Zhang DM, 2013, IEEE SOFTWARE, V30, P30, DOI 10.1109/MS.2013.94
   Zhao Y, 2005, DATA MIN KNOWL DISC, V10, P141, DOI 10.1007/s10618-005-0361-3
NR 43
TC 4
Z9 4
U1 3
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106458
DI 10.1016/j.infsof.2020.106458
EA JAN 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900001
DA 2024-07-18
ER

PT J
AU Mandieh, M
   Mirian-Hosseinabadi, SH
   Etemadi, K
   Nosrati, A
   Jalali, S
AF Mandieh, Mostafa
   Mirian-Hosseinabadi, Seyed-Hassan
   Etemadi, Khashayar
   Nosrati, Ali
   Jalali, Sajad
TI Incorporating fault-proneness estimations into coverage-based test case
   prioritization methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regression testing; Test case prioritization; Defect prediction; Machine
   learning; Bug history
ID TEST-SUITE REDUCTION; DEFECT PREDICTION; JUNIT; MODELS; NUMBER
AB Context During the development process of a software program, regression testing is used to ensure that the correct behavior of the software is retained after updates to the source code. This regression testing becomes costly over time as the number of test cases increases and it makes sense to prioritize test cases in order to execute fault-detecting test cases as soon as possible. There are many coverage-based test case prioritization (TCP) methods that only use the code coverage data to prioritize test cases. By incorporating the fault-proneness estimations of code units into the coverage-based TCP methods, we can improve such techniques.
   Objective: In this paper, we aim to propose an approach which improves coverage-based TCP methods by considering the fault-proneness distribution over code units. Further, we present the results of an empirical study that shows using our proposed approach significantly improves the additional strategy, which is a widely used coverage-based TCP method.
   Method: The approach presented in this study uses the bug history of the software in order to introduce a defect prediction method to learn a neural network model. This model is then used to estimate fault-proneness of each area of the source code and then the estimations are incorporated into coverage-based TCP methods. Our proposed approach is a general idea that can be applied to many coverage-based methods, such as the additional and total TCP methods.
   Results: The proposed methods are evaluated on datasets collected from the development history of five real-world projects including 357 versions in total. The experiments show that using an appropriate bug history can improve coverage-based TCP methods.
   Conclusion: The proposed approach can be applied to various coverage-based TCP methods and the experiments show that it can improve these methods by incorporating estimations of code units fault-proneness.
C1 [Mandieh, Mostafa; Mirian-Hosseinabadi, Seyed-Hassan; Etemadi, Khashayar; Nosrati, Ali; Jalali, Sajad] Sharif Univ Technol, Comp Engn Dept, Tehran 1136511155, Iran.
C3 Sharif University of Technology
RP Mirian-Hosseinabadi, SH (corresponding author), Sharif Univ Technol, Comp Engn Dept, Tehran 1136511155, Iran.
EM hmirian@sharif.edu
RI Mirian-Hosseinabadi, Seyed-Hassan/AAE-9963-2021
OI Mahdieh, Mostafa/0000-0001-5284-9717
CR Anderson J., 2014, P 11 WORK C MIN SOFT, P142
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], SOURCEMETER FREE TO
   [Anonymous], 2011, Software Engineering Notes, DOI DOI 10.1145/2047414.2047431
   [Anonymous], 2014, SURVEY SOFTWARE DEFE
   [Anonymous], P WORLD C ENG COMP S
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Elbaum S. G., 1999, Empirical Software Engineering, V4, P241, DOI 10.1023/A:1009830727593
   Engstrom E., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P367, DOI 10.1109/ICST.2011.27
   Engstrom RN, 2010, DESIGN, MEANING AND CHOICE IN DIRECT DEMOCRACY: THE INFLUENCES OF PETITIONERS AND VOTERS, P75
   Fang CR, 2014, SOFTWARE QUAL J, V22, P335, DOI 10.1007/s11219-013-9224-0
   Fang CR, 2012, SCI CHINA INFORM SCI, V55, P2826, DOI 10.1007/s11432-012-4746-9
   Gamma E, 1999, JAVA REP, V4, P27
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hao D, 2016, IEEE T SOFTWARE ENG, V42, P490, DOI 10.1109/TSE.2015.2496939
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Hao D, 2013, P INT COMP SOFTW APP, P169, DOI 10.1109/COMPSAC.2013.31
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Hoffmann M.R., 2011, Eclemma-jacoco java code coverage library
   Huang YC, 2012, J SYST SOFTWARE, V85, P626, DOI 10.1016/j.jss.2011.09.063
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim Stephen In-Ho, 2010, Proceedings of the 2010 7th International Conference on Service Systems and Service Management (ICSSSM 2010), DOI 10.1109/ICSSSM.2010.5530199
   Klas M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P119, DOI 10.1145/1810295.1810313
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   Kovács G, 2009, LECT NOTES COMPUT SC, V5719, P82, DOI 10.1007/978-3-642-04554-7_6
   Laali M, 2016, LECT NOTES COMPUT SC, V9695, P78, DOI 10.1007/978-3-319-39083-3_6
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li SK, 2010, INTERNATIONAL SYMPOSIUM ON LIFE-CYCLE PERFORMANCE OF BRIDGES AND STRUCTURES, P72
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Paterson D, 2019, IEEE INT CONF SOFTW, P346, DOI 10.1109/ICST.2019.00041
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Woodcock Jim., 1996, Using Z: specification, refinement, and proof, V39
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang LM, 2009, PROC IEEE INT CONF S, P19, DOI 10.1109/ICSM.2009.5306350
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
   Zhang XF, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P15
   Zhou JY, 2017, IEEE ICST WORKSHOP, P392, DOI 10.1109/ICSTW.2017.74
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 68
TC 32
Z9 35
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106269
DI 10.1016/j.infsof.2020.106269
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0NB
UT WOS:000518706200007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vogelsang, A
   Eckhardt, J
   Mendez, D
   Berger, M
AF Vogelsang, Andreas
   Eckhardt, Jonas
   Mendez, Daniel
   Berger, Moritz
TI Views on quality requirements in academia and practice: commonalities,
   differences, and context-dependent grey areas
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality requirements; Non-functional requirements; Context factors;
   Requirements engineering; Survey; Eempirical study
ID CATEGORICAL-DATA
AB Context Quality requirements (QRs) are a topic of constant discussions both in industry and academia. Debates entwine around the definition of quality requirements, the way how to handle them, or their importance for project success. While many academic endeavors contribute to the body of knowledge about QRs, practitioners may have different views. In fact, we still lack a consistent body of knowledge on QRs since much of the discussion around this topic is still dominated by observations that are strongly context-dependent. This holds for both academic and practitioners' views. Our assumption is that, in consequence, those views may differ.
   Objective: We report on a study to better understand the extent to which available research statements on quality requirements, as found in exemplary peer-reviewed and frequently cited publications, are reflected in the perception of practitioners. Our goal is to analyze differences, commonalities, and context-dependent grey areas in the views of academics and practitioners to allow a discussion on potential misconceptions (on either sides) and opportunities for future research.
   Method: We conducted a survey with 109 practitioners to assess whether they agree with research statements about QRs reflected in the literature. Based on a statistical model, we evaluate the impact of a set of context factors to the perception of research statements.
   Results: Our results show that a majority of the statements is well respected by practitioners; however, not all of them. When examining the different groups and backgrounds of respondents, we noticed interesting deviations of perceptions within different groups that may lead to new research questions.
   Conclusions:Our results help identifying prevalent context-dependent differences about how academics and practitioners view QRs and pinpointing statements where further research might be useful.
C1 [Vogelsang, Andreas] Tech Univ Berlin, Berlin, Germany.
   [Eckhardt, Jonas] Tableau Software, Frankfurt, Germany.
   [Mendez, Daniel] Blekinge Inst Technol, Karlskrona, Sweden.
   [Mendez, Daniel] Fortiss GmbH, Munich, Germany.
   [Berger, Moritz] Univ Bonn, Bonn, Germany.
C3 Technical University of Berlin; Blekinge Institute Technology; fortiss;
   University of Bonn
RP Vogelsang, A (corresponding author), Tech Univ Berlin, Berlin, Germany.
EM andreas.vogelsang@tu-berlin.de; jonas@eckhardt.tv; daniel.mendez@bth.se;
   moritz.berger@imbie.uni-bonn.de
RI Berger, Moritz/ABD-2233-2021; Mendez, Daniel/ABA-4579-2021
OI Mendez, Daniel/0000-0003-0619-6027; Vogelsang,
   Andreas/0000-0003-1041-0815
CR [Anonymous], 18 INT C REQ ENG FDN
   [Anonymous], 22 IEEE INT REQ ENG
   [Anonymous], 2012, Regression for categorical data
   [Anonymous], 18 IEEE INT REQ ENG
   [Anonymous], J SYST SOFTW
   [Anonymous], 34 INT C SOFTW ENG I
   [Anonymous], 17 INT C PROD FOC SO
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 19 INT C REQ ENG FDN
   [Anonymous], 2 INT S EMP SOFTW EN
   [Anonymous], 15 INT C REQ ENG FDN
   [Anonymous], 22 IEEE INT REQ ENG
   [Anonymous], SOZIALFORSCHUNG FORU
   [Anonymous], 25 IEEE INT REQ ENG
   [Anonymous], 20 IEEE INT REQ ENG
   [Anonymous], 18 INT C REQ ENG FDN
   [Anonymous], 2001, 9126 ISOIEC
   [Anonymous], 2010, Analysis of ordinal categorical data
   [Anonymous], 8 ACM IEEE INT S EMP
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 2015, VECTOR GEN LINEAR AD
   [Anonymous], 2001, MULTIVARIATE STAT MO
   [Anonymous], 23 IEEE INT REQ ENG
   [Anonymous], 2003, 3 C SOFTW ENG RES PR
   [Anonymous], 9 INT S EMP SOFTW EN
   [Anonymous], PERSONAL OPINION SUR
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], RETHINKING FUNCTIONA
   [Anonymous], 38 INT C SOFTW ENG I
   [Anonymous], IEEE SOFTW
   [Anonymous], 8 ACM IEEE INT S EMP
   [Anonymous], 38 INT C SOFTW ENG I
   [Anonymous], 17 INT C SOFTW ENG
   [Anonymous], 16 INT C REQ ENG FDN
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   International Organization for Standardization, 2011, TECHNICAL REPORT
   Liu I, 2005, TEST-SPAIN, V14, P1, DOI 10.1007/BF02595397
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   R Core Team, 2018, R LANG ENV STAT COMP
   Rahimi M, 2014, INT REQUIR ENG CONF, P253, DOI 10.1109/RE.2014.6912267
   Robertson S., 2012, MASTERING REQUIREMEN
   Svensson RB, 2011, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2011.6051652
   Tastle WJ, 2007, INT J APPROX REASON, V45, P531, DOI 10.1016/j.ijar.2006.06.024
   Wald A, 1943, T AM MATH SOC, V54, P426, DOI 10.2307/1990256
   Yee TW, 2010, J STAT SOFTW, V32, P1
NR 45
TC 2
Z9 2
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2020
VL 121
AR 106253
DI 10.1016/j.infsof.2019.106253
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0NB
UT WOS:000518706200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU El-Fakih, K
   Mizumoto, T
   Yasumoto, K
   Higashino, T
AF El-Fakih, Khaled
   Mizumoto, Teruhiro
   Yasumoto, Keiichi
   Higashino, Teruo
TI Energy aware simulation and testing of smart-spaces
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 30th IFIP WG 6.1 International Conference on Testing Software and
   Systems (ICTSS)
CY OCT 01-03, 2018
CL Cadiz, SPAIN
SP IFIP WG 6 1
DE Ubiquitous computing systems; Smart-spaces; Minimal energy context move;
   Energy-aware simulation and testing
ID PARALLEL ALGORITHMS; MIDDLEWARE; FRAMEWORK
AB Context A smart-space SS typically consists of many rooms, with temperature and humidity environment attributes, devices, and software components that communicate with each other to satisfy certain test purposes that need to be checked over various realistic exterior environment weather conditions.
   Objective: We present a novel energy-aware approach for the validation of smart-spaces while minimizing the energy consumption encountered during testing.
   Method: A framework for deriving minimal (energy) cost tests is provided. It includes SS, a controlled environment ENV that depicts the exterior conditions, and a TESTER that can control SS and ENv, derive and runs tests, and observe relevant SS attributes in order to release a success verdict whenever a test purpose is met. A simulator is proposed for deriving tests by appropriately exploring part of the SS behavior employing several cost functions for computing the estimated cost and duration of test events.
   Results: The framework is deployed in a real SS environment which is used to assess the actual energy consumption of derived tests in practice. Experiments show that the actual power consumption of the derived tests is close to the ones estimated by the simulator. A case study that assesses the gains in using energy aware tests in comparison to non energy-aware alternatives is also provided.
   Conclusions: The obtained results highlight the importance of considering power consumption in the development and testing of smart-spaces.
C1 [El-Fakih, Khaled] Amer Univ Sharjah, Coll Engn, Sharjah, U Arab Emirates.
   [Mizumoto, Teruhiro; Higashino, Teruo] Osaka Univ, Grad Sch Informat Sci & Technol, Suita, Osaka, Japan.
   [Yasumoto, Keiichi] Nara Inst Sci & Technol, Grad Sch Sci & Technol, Ikoma, Japan.
C3 American University of Sharjah; Osaka University; Nara Institute of
   Science & Technology
RP El-Fakih, K (corresponding author), Amer Univ Sharjah, Coll Engn, Sharjah, U Arab Emirates.
EM kelfakih@aus.edu; mizumoto@ist.osaka-u.ac.jp; yasumoto@is.naist.jp;
   higashino@ist.osaka-u.ac.jp
RI Yasumoto, Keiichi/AAC-2822-2022
OI Yasumoto, Keiichi/0000-0003-1579-3237
CR [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 1999, TEST SUITE MINIMIZAT
   [Anonymous], 1930, BEGRIFFE Z GEOPHYS, DOI DOI 10.1016/J.FOODCHEM.2008.07.023
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Chan WK, 2006, INT J SOFTW ENG KNOW, V16, P677, DOI 10.1142/S0218194006002951
   Cook DJ, 2003, PROCEEDINGS OF THE FIRST IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS (PERCOM 2003), P521, DOI 10.1109/PERCOM.2003.1192783
   Edwards W.K., 2001, UBICOMP 2001 UBIQUIT, DOI [DOI 10.1007/3-540-45427-6, 10.1007/3-540-45427-6_22, DOI 10.1007/3-540-45427-6_22]
   El-Fakih K, 2021, IEEE T SOFTWARE ENG, V47, P1029, DOI 10.1109/TSE.2019.2911076
   El-Fakih K, 2018, INT J PARALLEL EMERG, V33, P197, DOI 10.1080/17445760.2017.1300801
   FARAHANI Shahin, 2011, ZigBee wireless networks and transceivers
   FRIEZE AM, 1982, NETWORKS, V12, P23, DOI 10.1002/net.3230120103
   Gu T, 2005, J NETW COMPUT APPL, V28, P1, DOI 10.1016/j.jnca.2004.06.002
   HART PE, 1968, IEEE T SYST SCI CYB, VSSC4, P100, DOI 10.1109/TSSC.1968.300136
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   Henricksen K, 2006, PERVASIVE MOB COMPUT, V2, P37, DOI 10.1016/j.pmcj.2005.07.003
   Hierons RM, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3051121
   Hierons RM, 2016, IEEE T SOFTWARE ENG, V42, P1077, DOI 10.1109/TSE.2016.2539964
   Hierons RM, 2016, IEEE T COMPUT, V65, P3370, DOI 10.1109/TC.2016.2532869
   Jahn M., 2010, Proc. 5th Int. Conf. Future Inf. Technology (FutureTech), P1, DOI DOI 10.1109/FUTURETECH.2010.5482712
   Kashimoto Y, 2013, INT CONF PERVAS COMP, P372
   Lai Z, 2008, P 16 ACM SIGSOFT INT, P94
   Lu Heng, 2006, P 14 ACM SIGSOFT INT, P242, DOI DOI 10.1145/1181775.1181805
   Mizumoto T, 2018, LECT NOTES COMPUT SC, V11146, P85, DOI 10.1007/978-3-319-99927-2_8
   Mizumoto T, 2013, 2013 IEEE 10TH INTERNATIONAL CONFERENCE ON AND 10TH INTERNATIONAL CONFERENCE ON AUTONOMIC AND TRUSTED COMPUTING (UIC/ATC) UBIQUITOUS INTELLIGENCE AND COMPUTING, P64, DOI 10.1109/UIC-ATC.2013.41
   Nishigaki K, 2005, 25TH IEEE INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P345, DOI 10.1109/ICDCSW.2005.63
   Nishikawa H, 2006, LECT NOTES COMPUT SC, V4206, P459
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   Satoh I, 2003, IEEE T SOFTWARE ENG, V29, P1112, DOI 10.1109/TSE.2003.1265525
   Ueda K, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATION WORKSHOPS (PERCOM WORKSHOPS), P354, DOI 10.1109/PERCOMW.2015.7134062
   Wang H, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2620000
   WEISER M, 1993, COMMUN ACM, V36, P75, DOI 10.1145/159544.159617
NR 34
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2020
VL 118
AR 106201
DI 10.1016/j.infsof.2019.106201
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA JW2LV
UT WOS:000502890100008
DA 2024-07-18
ER

PT J
AU Papamichail, MD
   Symeonidis, AL
AF Papamichail, Michail D.
   Symeonidis, Andreas L.
TI A generic methodology for early identification of non-maintainable
   source code components through analysis of software releases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software releases; Maintainability evaluation; Software quality; Static
   analysis metrics; Trend analysis
ID METRICS
AB Context Contemporary development approaches consider that time-to-market is of utmost importance and assume that software projects are constantly evolving, driven by the continuously changing requirements of end-users. This practically requires an iterative process where software is changing by introducing new or updating existing software/user features, while at the same time continuing to support the stable ones. In order to ensure efficient software evolution, the need to produce maintainable software is evident.
   Objective: In this work, we argue that non-maintainable software is not the outcome of a single change, but the consequence of a series of changes throughout the development lifecycle. To that end, we define a maintainability evaluation methodology across releases and employ various information residing in software repositories, so as to decide on the maintainability of software.
   Method: Upon using the dropping of packages as a non-maintainability indicator (accompanied by a series of quality-related criteria), the proposed methodology involves using one-class-classification techniques for evaluating maintainability at a package level, on four different axes each targeting a primary source code property: complexity, cohesion, coupling, and inheritance.
   Results: Given the qualitative and quantitative evaluation of our methodology, we argue that apart from providing accurate and interpretable maintainability evaluation at package level, we can also identify non-maintainable components at an early stage. This early stage is in many cases around 50% of the software package lifecycle.
   Conclusion: Based on our findings, we conclude that modeling the trending behavior of certain static analysis metrics enables the effective identification of non-maintainable software components and thus can be a valuable tool for the software engineers.
C1 [Papamichail, Michail D.; Symeonidis, Andreas L.] Aristotle Univ Thessaloniki, Elect & Comp Engn Dept, Thessaloniki, Greece.
C3 Aristotle University of Thessaloniki
RP Papamichail, MD (corresponding author), Aristotle Univ Thessaloniki, Elect & Comp Engn Dept, Thessaloniki, Greece.
EM mpapamic@issel.ee.auth.gr
RI Symeonidis, Andreas/N-3313-2015
OI Symeonidis, Andreas/0000-0003-0235-6046
CR Alshakhouri M, 2018, INFORM SOFTWARE TECH, V98, P131, DOI 10.1016/j.infsof.2018.01.008
   Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2011, 250102011 ISOIEC
   BERNS GM, 1984, COMMUN ACM, V27, P14, DOI 10.1145/69605.357965
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Cong Jin, 2010, Proceedings of the 2010 Second International Conference on Multimedia and Information Technology (MMIT 2010), P24, DOI 10.1109/MMIT.2010.10
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   Diamantopoulos T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P488, DOI [10.1109/MSR.2016.061, 10.1145/2901739.2903492]
   Faragó C, 2015, 2015 8TH INTERNATIONAL CONFERENCE ON ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS (ASEA), P30, DOI 10.1109/ASEA.2015.14
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Foucault M., 2014, P 29 ANN ACM S APPL, P1120
   Hall GA, 2000, J SYST SOFTWARE, V54, P111, DOI 10.1016/S0164-1212(00)00031-5
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Kanellopoulos Y, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P63
   Kaur A., 2010, INT J COMPUTER APPL, V1, P69, DOI DOI 10.5120/339-515
   Malhotra R., 2012, INT J S SOFTWARE ENG, V2, P19
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   Papamichail M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P100, DOI 10.1109/QRS.2016.22
   Samoladas I, 2004, COMMUN ACM, V47, P83, DOI 10.1145/1022594.1022598
   SEREF B, 2016, INT J SOFTW ENG APPL, V7, P69, DOI DOI 10.5121/IJSEA.2016.7305
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   van Solingen R, 2000, INFORM SOFTWARE TECH, V42, P965, DOI 10.1016/S0950-5849(00)00148-8
   Welker K. D, 2001, CROSSTALK, V14, P18
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 32
TC 10
Z9 10
U1 2
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2020
VL 118
AR 106218
DI 10.1016/j.infsof.2019.106218
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2LV
UT WOS:000502890100004
DA 2024-07-18
ER

PT J
AU Nepomuceno, V
   Soares, S
AF Nepomuceno, Vilmar
   Soares, Sergio
TI On the need to update systematic literature reviews
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic literature review; Systematic mapping; Tertiary studies;
   Updates; Evidence based software engineering
AB Context: Many Systematic Literature Reviews (SLRs) were performed in the recent past, but just a few are being updated. Keeping SLRs updated is essential to prolong their lifespan.
   Objective: To give a picture about how SLRs are being updated and what researchers think about SLRs updates.
   Method: In this work, we present a Systematic Mapping (SM) study about SCRs updates and a survey with EBSE researchers that published their Silks between 2011 and 2015.
   Results: We included 22 studies in the SM, where 15 changed some artifact from the original study, including changes in research questions. We obtained 28 answers in our survey with SLRs authors that, in general, consolidate interpretations retrieved from the SM, but some answers did not.
   Conclusion: SLRs may lose their impact over the years. Identifying actions to keep them updated is of great importance to SLR research field.
C1 [Nepomuceno, Vilmar; Soares, Sergio] Fed Univ Pernambuco UFPE, Av Prof Moraes Rego 1235, BR-50670901 Recife, PE, Brazil.
   [Nepomuceno, Vilmar] Fed Inst Pernambuco IFPE, R Padre Agobar Valenca S-N, BR-55299390 Garanhuns, PE, Brazil.
   [Soares, Sergio] SENAI Innovat Inst Informat & Commun Technol, Av Norte Miguel Arraes de Alencar 539, BR-50100000 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco; Instituto Federal de Pernambuco
   (IFPE)
RP Nepomuceno, V (corresponding author), Fed Univ Pernambuco UFPE, Av Prof Moraes Rego 1235, BR-50670901 Recife, PE, Brazil.; Nepomuceno, V (corresponding author), Fed Inst Pernambuco IFPE, R Padre Agobar Valenca S-N, BR-55299390 Garanhuns, PE, Brazil.
EM vsn@cin.ufpe.br; scbs@cin.ufpe.br
RI Soares, Sergio/K-3712-2012; Nepomuceno, Vilmar/AAX-2167-2020
OI Soares, Sergio/0000-0002-4428-2535; Nepomuceno,
   Vilmar/0000-0003-1981-0997
FU INES 2.0; FACEPE [PRONEX APQ 0388-1.03/14, APQ-0399-1.03/17]; CNPq
   [465614/2014-0]
FX This research was partially funded by INES 2.0, FACEPE grants PRONEX APQ
   0388-1.03/14 and APQ-0399-1.03/17, and CNPq grant 465614/2014-0.
CR [Anonymous], PROTOCOL EXTENDING T
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Garces L., 2017, The 29th International Conference on Software Engineering and Knowledge Engineering (SEKE), P91, DOI DOI 10.18293/SEKE2017-078
   HIGGINS JPT, 2011, COCHRANE HDB SYSTEMA, V0001
   JALALI S, 2012, ACM IEEE INT S, P10, DOI DOI 10.1145/2372251.2372257
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Moher D, 2008, COCHRANE DB SYST REV, DOI 10.1002/14651858.MR000023.pub3
   Shekelle P., 2011, Identifying Signals for Updating Systematic Reviews: A Comparison of Two Methods
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
NR 9
TC 10
Z9 11
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2019
VL 109
BP 40
EP 42
DI 10.1016/j.infsof.2019.01.005
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ0SX
UT WOS:000462106400004
DA 2024-07-18
ER

PT J
AU Liu, C
   Yang, D
   Xia, X
   Yan, M
   Zhang, XH
AF Liu, Chao
   Yang, Dan
   Xia, Xin
   Yan, Meng
   Zhang, Xiaohong
TI A two-phase transfer learning model for cross-project defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cross-Project prediction; Defect prediction; Transfer learning; Source
   project selection
ID SOFTWARE; FAULTS
AB Context: Previous studies have shown that a transfer learning model, TCA+ proposed by Nam et al., can significantly improve the performance of cross-project defect prediction (CPDP). TCA+ achieves the improvement by reducing data distribution difference between source (training data) and target (testing data) projects. However, TCA + is unstable, i.e., its performance varies largely when using different source projects to build prediction models. In practice, it is hard to choose a suitable source project to build the prediction model.
   Objective: To address the limitation of TCA+, we propose a two-phase transfer learning model (TPTL) for CPDP.
   Method: In the first phase, we propose a source project estimator (SPE) to automatically choose two source projects with the highest distribution similarity to a target project from candidates. Next, two source projects that are estimated to achieve the highest values of F1-score and cost-effectiveness are selected. In the second phase, we leverage TCA+ to build two prediction models based on the two selected projects and combine their prediction results to further improve the prediction performance.
   Results: We evaluate TPTL on 42 defect datasets from PROMISE repository, and compare it with two versions of TCA+ (TCA +_Ftnd, randomly selecting one source project; TCA +_All, using all alternative source projects), a related source project selection model TDS proposed by Herbold, a state-of-the-art CPDP model leveraging a log transformation (LT) method, and a transfer learning model Dycom with better form of TCA. Experiment results show that, on average across 42 datasets, TPTL respectively improves these baseline models by 19%, 5%, 36%, 27%, and 11% in terms of Fl-score; by 64%, 92%, 71%, 11%, and 66% in terms of cost-effectiveness.
   Conclusion: The proposed TPTL model can solve the instability problem of TCA+, showing substantial improvements over the state-of-the-art and related CPDP models.
C1 [Liu, Chao] Chongqing Univ, Minist Educ, Key Lab Dependable Serv Comp Cyber Phys Soc, Chongqing, Peoples R China.
   [Liu, Chao; Yang, Dan; Zhang, Xiaohong] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Yan, Meng] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
C3 Chongqing University; Chongqing University; Monash University; Zhejiang
   University
RP Liu, C (corresponding author), Chongqing Univ, Minist Educ, Key Lab Dependable Serv Comp Cyber Phys Soc, Chongqing, Peoples R China.; Liu, C (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM liu.chao@cqu.edu.cn; dyang@cqu.edu.cn; xin.xia@monash.edu;
   mengy@zju.edu.cn; xhongz@cqu.edu.cn
RI Liu, Chao/JXN-7672-2024; YANG, Dan/HHD-2733-2022; Xia,
   Xin/AAD-6217-2022; Zhang, Xiaohong/A-3060-2015; Yan, Meng/AAH-6762-2019
OI Liu, Chao/0000-0002-8283-9146; Xia, Xin/0000-0002-6302-3256; Yan,
   Meng/0000-0002-9538-9121
FU National Natural Science Foundation of China [61772093]; Chongqing
   Research Program of Basic Science & Frontier Technology
   [cstc2017jcyjB0305]
FX The work described in this paper was partially supported by the National
   Natural Science Foundation of China (Grant No. 61772093), Chongqing
   Research Program of Basic Science & Frontier Technology with Grant No.
   cstc2017jcyjB0305. The source code and datasets of TPTL can be
   downloaded from:
   https://bitbucket.org/ChaoLiuCQ/replication-kit-ist2018-tptl.
CR [Anonymous], 2007, ENCY MEASUREMENT STA, DOI DOI 10.4135/9781412952644
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Cliff N., 2014, ORDINAL METHODS BEHA
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Henderson-Sellers B., 1995, Object-oriented metrics: measures of complexity
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hosmer Jr D. W., 2013, APPL LOGISTIC REGRES, V398, DOI DOI 10.1002/9781118548387
   Hosseini S, 2017, IEEE T SOFTW ENG
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Minku L, 2015, 2015 ACM IEEE INT S, P1, DOI DOI 10.1109/ESEM.2015.7321199
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Shevade SK, 2000, IEEE T NEURAL NETWOR, V11, P1188, DOI 10.1109/72.870050
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Turban B., 2009, EMPIR SOFTW ENG, V14, P540
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 39
TC 81
Z9 85
U1 3
U2 35
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 125
EP 136
DI 10.1016/j.infsof.2018.11.005
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200010
DA 2024-07-18
ER

PT J
AU Anu, V
   Hu, WH
   Carver, JC
   Walia, GS
   Bradshaw, G
AF Anu, Vaibhav
   Hu, Wenhua
   Carver, Jeffrey C.
   Walia, Gursimran S.
   Bradshaw, Gary
TI Development of a human error taxonomy for software requirements: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Requirements; Human errors; Taxonomy
ID CLASSIFICATION
AB Background: Human-centric software engineering activities, such as requirements engineering, are prone to error. These human errors manifest as faults. To improve software quality, developers need methods to prevent and detect faults and their sources.
   Aims: Human error research from the field of cognitive psychology focuses on understanding and categorizing the fallibilities of human cognition. In this paper, we applied concepts from human error research to the problem of software quality.
   Method: We performed a systematic literature review of the software engineering and psychology literature to identify and classify human errors that occur during requirements engineering.
   Results: We developed the Human Error Taxonomy (HET) by adding detailed error classes to Reason's well-known human error taxonomy of Slips, Lapses, and Mistakes.
   Conclusion: The process of identifying and classifying human error identification provides a structured way to understand and prevent the human errors (and resulting faults) that occur during human-centric software engineering activities like requirements engineering. Software engineering can benefit from closer collaboration with cognitive psychology researchers.
C1 [Anu, Vaibhav] Montclair State Univ, Dept Comp Sci, Montclair, NJ USA.
   [Hu, Wenhua] Kennesaw State Univ, Dept Software Engn & Game Dev, Marietta, GA USA.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Walia, Gursimran S.] North Dakota State Univ, Dept Comp Sci, Fargo, ND 58105 USA.
   [Bradshaw, Gary] Dept Psychol, Starkville, MS USA.
C3 Montclair State University; University System of Georgia; Kennesaw State
   University; University of Alabama System; University of Alabama
   Tuscaloosa; North Dakota State University Fargo
RP Walia, GS (corresponding author), North Dakota State Univ, Dept Comp Sci, Fargo, ND 58105 USA.
EM vaibhavanu.x@gmail.com; whu4@kennesaw.edu; carver@cs.ua.edu;
   gursimran.walia@ndsu.edu; glb2@psychology.msstate.edu
RI Carver, Jeffrey/AFP-1987-2022; Carver, Jeffrey/AAM-8202-2020; Anu,
   Vaibhav/Y-6008-2019
OI Carver, Jeffrey/0000-0002-7824-9151; Carver,
   Jeffrey/0000-0002-7824-9151; Anu, Vaibhav/0000-0001-8104-4942
FU National Science Foundation [1423279, 1421006]; Direct For Computer &
   Info Scie & Enginr; Division of Computing and Communication Foundations
   [1421006] Funding Source: National Science Foundation; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1423279] Funding Source: National Science Foundation
FX This research was supported by National Science Foundation awards
   1423279 and 1421006. The authors would like to thank the participants
   that attended the Workshop on Applications of Human Error Research to
   Improve Software Engineering (WAHESE 2015).
CR [Anonymous], 2002, RTI PROJECT
   [Anonymous], P 23 INT WORK C REQ
   [Anonymous], SECURITY
   [Anonymous], 2010, SYSTEMS SOFTWARE ENG, P1, DOI DOI 10.1109/IEEESTD.2010.5733835
   [Anonymous], P 10 ACM IEEE INT S
   [Anonymous], 1967, The Discovery of Grounded Theory, DOI [10.2307/588533, DOI 10.2307/588533]
   [Anonymous], PROCEDURES PERFORMIN
   [Anonymous], 23 INT WORK C REQ EN
   [Anonymous], 2012, P 18 INT C REL QUAL
   Anu V., 2016, Proc. 28th Int. Conf. Softw. Eng. Knowl. Eng. SEKE 2016, P531
   Anu V, 2016, PROC INT SYMP SOFTW, P65, DOI 10.1109/ISSRE.2016.41
   Bjarnason E, 2011, INT REQUIR ENG CONF, P37, DOI 10.1109/RE.2011.6051639
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Diller T, 2014, AM J MED QUAL, V29, P181, DOI 10.1177/1062860613491623
   Firesmith D, 2007, J OBJECT TECHNOL, V6, P17, DOI 10.5381/jot.2007.6.1.c2
   Kumaresh S., 2010, International Journal of Computers and Applications, V8, P42, DOI DOI 10.5120/1218-1759
   Kushwaha DS, 2006, PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, VOLS 1 AND 2, P255, DOI 10.1109/COGINF.2006.365705
   Lanubile F, 1998, P 5 INT S SOFTW METR
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   MAYS RG, 1990, IBM SYST J, V29, P4, DOI 10.1147/sj.291.0004
   REASON J, 1990, ERGONOMICS, V33, P1315, DOI 10.1080/00140139008925335
   Reason J., 1991, HUMAN ERROR
   Reason J.T., 2008, The human contribution: Unsafe acts, accidents, and heroic recoveries
   Lopes MERF, 2013, INFORM SCIENCES, V250, P142, DOI 10.1016/j.ins.2013.07.010
   Scerri E.R., 2006, PERIODIC TABLE ITS S
   Scherer D, 2010, IFIP ADV INF COMM TE, V332, P234
   Walia GS, 2013, EMPIR SOFTW ENG, V18, P625, DOI 10.1007/s10664-012-9202-3
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Zhang JJ, 2004, J BIOMED INFORM, V37, P193, DOI 10.1016/j.jbi.2004.04.004
NR 30
TC 28
Z9 34
U1 1
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 112
EP 124
DI 10.1016/j.infsof.2018.06.011
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000007
OA Bronze
DA 2024-07-18
ER

PT J
AU Hoisl, B
   Sobernig, S
   Strembeck, M
AF Hoisl, Bernhard
   Sobernig, Stefan
   Strembeck, Mark
TI Reusable and generic design decisions for developing UML-based
   domain-specific languages
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model-driven software development; Domain-specific language; Design
   decision; Design rationale; Unified modeling language; Survey
ID MODELING LANGUAGE; META-MODEL; ARCHITECTURE; METAMODEL; PATTERNS;
   EXTENSION; PROFILES; CAPTURE
AB Context: In recent years, UML-based domain-specific model languages (DSMLs) have become a popular option in model-driven development projects. However, making informed design decisions for such DSMLs involves a large number of non-trivial and inter-related options. These options concern the language-model specification, UML extension techniques, concrete-syntax language design, and modeling tool support.
   Objective: In order to make the corresponding knowledge on design decisions reusable, proven design rationale from existing DSML projects must be collected, systematized, and documented using an agreed upon documentation format.
   Method: We applied a sequential multi-method approach to identify and to document reusable design decisions for UML-based DSMLs. The approach included a Web-based survey with 80 participants. Moreover, 80 DSML projects(1), which have been identified through a prior systematic literature review, were analyzed in detail in order to identify reusable design decisions for such DSMLs.
   Results: We present insights on the current state of practice in documenting UML-based DSMLs (e.g., perceived barriers, documentation techniques, reuse potential) and a publicly available collection of reusable design decisions, including 35 decision options on different DSML development concerns (especially concerning the language model, concrete-syntax language design, and modeling tools). The reusable design decisions are documented using a structured documentation format (decision record).
   Conclusion: Our results are both, scientifically relevant (e.g. for design-space analyses or for creating classification schemas for further research on UML-based DSML development) and important for actual software engineering projects (e.g. by providing best-practice guidelines and pointers to common pitfalls). (C) 2017 Elsevier B.V. All rights reserved.
C1 [Hoisl, Bernhard; Sobernig, Stefan; Strembeck, Mark] Vienna Univ Econ & Business WU, Welthandelspl 1, A-1020 Vienna, Austria.
   [Strembeck, Mark] Secure Business Austria SBA Res gGmbH, Favoritenstr 16, A-1040 Vienna, Austria.
   [Strembeck, Mark] Complex Sci Hub Vienna CSH, Josefstadter Str 39, A-1080 Vienna, Austria.
C3 Vienna University of Economics & Business
RP Sobernig, S (corresponding author), Vienna Univ Econ & Business WU, Welthandelspl 1, A-1020 Vienna, Austria.
EM bernhard.hoisl@wu.ac.at; stefan.sobernig@wu.ac.at;
   mark.strembeck@wu.ac.at
FU Austrian research funding association (FFG) under DLUX within the
   funding programme ICT of the Future of the Austrian Federal Ministry for
   Transport, Innovation and Technology (BMVIT) [855465]
FX This work was partly funded by the Austrian research funding association
   (FFG) under the scope of the DLUX project within the funding programme
   ICT of the Future (4th call 2015) of the Austrian Federal Ministry for
   Transport, Innovation and Technology (BMVIT), contract # 855465.
CR Alam Masoom, 2007, Journal of Software, V2, P47, DOI 10.4304/jsw.2.1.47-59
   Ali S, 2012, SOFTW SYST MODEL, V11, P633, DOI 10.1007/s10270-011-0206-z
   Allen NA, 2005, PROCEEDINGS OF THE 2005 WINTER SIMULATION CONFERENCE, VOLS 1-4, P419, DOI 10.1109/WSC.2005.1574277
   Alves E.L., 2012, SOFTW SYST MODEL, V13, P1141
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], ACT LANG FDN UML ALF
   [Anonymous], 2017, THE EPSILON BOOK
   [Anonymous], PATTERN LANGUAGE PRO
   [Anonymous], 2014, OBJ CONSTR LANG
   [Anonymous], 2016, STAND DEF FIN DISP C, V9th
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2015, OMG unified modeling language (OMG UML) version 2.5
   [Anonymous], 2009, Techreport B-108
   [Anonymous], 2011, P COMP COL WORKSH DS
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2005, Secure Systems Development with UML
   Aoussat F, 2011, P INT COMP SOFTW APP, P215, DOI 10.1109/COMPSAC.2011.35
   Atkinson C, 2002, SCI COMPUT PROGRAM, V44, P5, DOI 10.1016/S0167-6423(02)00029-1
   Atkinson C, 2007, ADV COMPUT, V70, P105, DOI 10.1016/S0065-2458(06)70003-1
   Bendraou R, 2005, LECT NOTES COMPUT SC, V3713, P17, DOI 10.1007/11557432_3
   Berkenkötter K, 2006, LECT NOTES COMPUT SC, V4166, P398
   BEZIVIN J, 2003, P 2 OOPSLA WORKSH GE
   Blouin A, 2015, SOFTW SYST MODEL, V14, P321, DOI 10.1007/s10270-012-0300-x
   Bruck J., 2008, CUSTOMIZING UML WHIC
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Burge J.E., 2008, Rationale-Based Software Engineering
   Burgués X, 2008, SOFTW SYST MODEL, V7, P361, DOI 10.1007/s10270-007-0062-z
   Buschmann F., 2007, PATTERN ORIENTED SOF, V5
   Canovas Izquierdo Javier Luis, 2013, Cooperative Design, Visualization, and Engineering. 10th International Conference, CDVE 2013. Proceedings: LNCS 8091, P101, DOI 10.1007/978-3-642-40840-3_16
   Capilla Rafael, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P208, DOI 10.1109/ASE.2008.31
   Cariou E, 2011, LECT NOTES COMPUT SC, V6698, P3, DOI 10.1007/978-3-642-21470-7_2
   Chiorean D., 2008, ELECT COMMUN EASST, V15
   Cicchetti A, 2007, J OBJECT TECHNOL, V6, P165, DOI 10.5381/jot.2007.6.9.a9
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Cleenewerck T, 2003, LECT NOTES COMPUT SC, V2830, P245
   Cook S, 2012, SOFTW SYST MODEL, V11, P471, DOI 10.1007/s10270-012-0256-x
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   CZARNECKI K, 2003, P 2 OOPSLA WORKSH GE
   Demuth A, 2013, LECT NOTES COMPUT SC, V8107, P287, DOI 10.1007/978-3-642-41533-3_18
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   Dutoit AH, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P1
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Falessi D, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491515
   Filtz E., 2013, THESIS WU VIENNA
   Fowler M, 2005, Language workbenches: The killer-app for domain specific languages?
   Giachetti G, 2009, LECT NOTES COMPUT SC, V5565, P110, DOI 10.1007/978-3-642-02144-2_13
   GRONNIGER H., 2014, CORR
   Gunther S., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P162, DOI 10.1109/ICSEA.2010.32
   Gunther S., 2011, P 18 C PATT LANG PRO, P1
   Harrison NB, 2007, IEEE SOFTWARE, V24, P38, DOI 10.1109/MS.2007.124
   Hassam K, 2011, EUR CON SFTWR MTNCE, P151, DOI 10.1109/CSMR.2011.21
   Henderson-Sellers B, 2006, LECT NOTES COMPUT SC, V4199, P16
   Hoisl B., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P673, DOI 10.1109/ARES.2011.105
   Hoisl B., 2016, 201403 WU
   Hoisl B., 2016, 201601 WU
   Hoisl B., 2012, CATALOG REUSABLE DES
   Hoisl B., 2012, P 2 WORKSH PROC BAS, P303
   Hoisl B., 2015, P 1 WORKSH UML CONS, V1508, P29
   Hoisl B, 2016, P ANN HICSS, P5001, DOI 10.1109/HICSS.2016.620
   Hoisl B, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P356
   Hoisl B, 2012, LECT NOTES BUS INF P, V112, P16
   Hoisl B, 2014, SOFTW SYST MODEL, V13, P513, DOI 10.1007/s10270-012-0263-y
   Hoisl B, 2011, LECT NOTES BUS INF P, V87, P278
   Horner J, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P73
   Hsu IC, 2012, SOFTWARE PRACT EXPER, V42, P1211, DOI 10.1002/spe.1124
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   *INT ORG STAND, 1996, 14977 ISOIEC
   International Organization for Standardization, 2002, INF TECHN Z FORM SPE
   International Organization for Standardization, 2007, INF TECHN Z FORM SPE
   Ivkovic I, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P133
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson E, 2009, SOFTW SYST MODEL, V8, P451, DOI 10.1007/s10270-008-0105-0
   Jaksic A, 2014, LECT NOTES COMPUT SC, V8706, P122, DOI 10.1007/978-3-319-11245-9_7
   Kahlaoui A., 2008, METRICS NEWS, V13, P43
   Kahraman G, 2015, SOFTW SYST MODEL, V14, P1505, DOI 10.1007/s10270-013-0387-8
   Kapitsaki GM, 2009, INFORM SOFTWARE TECH, V51, P1244, DOI 10.1016/j.infsof.2009.03.002
   Kelly S, 2009, IEEE SOFTWARE, V26, P22, DOI 10.1109/MS.2009.109
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kolovos D. S., 2006, ELECT COMMUN EASST, V5
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Kusel A., 2015, P 11 AS PAC C CONC M, P33
   Lagarde F, 2008, LECT NOTES COMPUT SC, V4961, P116, DOI 10.1007/978-3-540-78743-3_10
   Lagarde Francois., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE'07, P445
   LANDIN PJ, 1966, COMMUN ACM, V9, P157, DOI 10.1145/365230.365257
   Luoma J., 2004, P 4 OOPSLA WORKSH DO, P1
   Lytra Ioanna, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P224, DOI 10.1007/978-3-642-39031-9_20
   Lytra I., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P111, DOI 10.1109/WICSA-ECSA.212.19
   Lytra I, 2015, INFORM SOFTWARE TECH, V63, P58, DOI 10.1016/j.infsof.2015.03.006
   MacLean A., 1996, Design Rationale: Concepts, Techniques, and Use, V1st, P53
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Object Management Group, 2012, SERV OR ARCH MOD LAN
   Object Management Group, 2015, OMG MET OBJ FAC MOF
   Object Management Group, 2016, SEM FDN SUBS EX UML
   Object Management Group, 2015, XML Metadata Interchange (XMI) Specification
   OinasKukkonen H, 1996, METHOD ENGINEERING, P87
   OMG, 2015, OMG SYST MOD LANG OM
   Paige RF, 2000, INFORM SOFTWARE TECH, V42, P665, DOI 10.1016/S0950-5849(00)00109-9
   Pardillo J, 2010, LECT NOTES COMPUT SC, V6394, P407
   Pardillo J, 2010, J SYST SOFTWARE, V83, P2591, DOI 10.1016/j.jss.2010.08.019
   Pérez-Martínez JE, 2006, LECT NOTES COMPUT SC, V4066, P25
   Queralt A, 2008, SOFTW SYST MODEL, V7, P219, DOI 10.1007/s10270-007-0047-y
   Regli WC, 2000, ENG COMPUT-GERMANY, V16, P209, DOI 10.1007/PL00013715
   Richters M., 2002, LNCS, V2263, P447
   Robert S, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P155, DOI 10.1109/SEAA.2009.81
   Rodrigues GN, 2005, LECT NOTES COMPUT SC, V3713, P339, DOI 10.1007/11557432_25
   da Cruz AMR, 2010, LECT NOTES COMPUT SC, V6394, P256
   Rose L. M., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P57, DOI 10.1109/MISE.2012.6226015
   Schaefer R, 2007, LECT NOTES COMPUT SC, V4550, P1178
   Schefer-Wenzl S, 2012, LECT NOTES BUS INF P, V117, P60
   Selic B, 2007, 10th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P2, DOI 10.1109/ISORC.2007.10
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Shahin M, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P293, DOI 10.1109/WICSA.2009.5290823
   Siau K, 2009, REQUIR ENG, V14, P15, DOI 10.1007/s00766-008-0071-7
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Sobernig S, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P61, DOI 10.1109/WICSA.2016.9
   Sobernig S, 2016, J SYST SOFTWARE, V113, P140, DOI 10.1016/j.jss.2015.11.037
   Somé SS, 2009, J OBJECT TECHNOL, V8, P87, DOI 10.5381/jot.2009.8.7.a2
   Song C, 2011, INT J SOFTW ENG KNOW, V21, P447, DOI 10.1142/S0218194011005293
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Staron M, 2006, LECT NOTES COMPUT SC, V4034, P177
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   Strembeck M, 2008, J OBJECT TECHNOL, V7, P143, DOI 10.5381/jot.2008.7.6.a5
   Strembeck M, 2009, SOFTWARE PRACT EXPER, V39, P1253, DOI 10.1002/spe.936
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Tolvanen J.-P., 2009, P 24 ACM SIGPLAN C C, P819, DOI 10.1145/1639950.1640031
   van Heesch U, 2012, J SYST SOFTWARE, V85, P795, DOI 10.1016/j.jss.2011.10.017
   van Heesch U, 2012, SCI COMPUT PROGRAM, V77, P551, DOI 10.1016/j.scico.2011.11.008
   VOLTER M., 2013, DSL ENG DESIGNING IM
   Weisemöller I, 2008, LECT NOTES COMPUT SC, V5002, P47
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Wile D, 2004, SCI COMPUT PROGRAM, V51, P265, DOI 10.1016/j.scico.2003.12.006
   Yie A, 2012, SOFTW SYST MODEL, V11, P55, DOI 10.1007/s10270-010-0179-3
   Zdun U, 2005, ACM SIGPLAN NOTICES, V40, P133, DOI 10.1145/1103845.1094822
   Zdun U., 2009, P 14 EUROPEAN C PATT, P1
   Zdun U, 2006, LECT NOTES COMPUT SC, V4089, P178
   Zdun U, 2010, INFORM SOFTWARE TECH, V52, P733, DOI 10.1016/j.infsof.2010.03.004
   Zimmerman O, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P157, DOI 10.1109/WICSA.2008.19
   Zimmermann O, 2009, J SYST SOFTWARE, V82, P1249, DOI 10.1016/j.jss.2009.01.039
NR 149
TC 8
Z9 8
U1 0
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 49
EP 74
DI 10.1016/j.infsof.2017.07.008
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200004
DA 2024-07-18
ER

PT J
AU Osvaldo, SS
   Lopes, D
   Silva, AC
   Abdelouahab, Z
AF Osvaldo, S. Sousa, Jr.
   Lopes, Denivaldo
   Silva, Aristofanes C.
   Abdelouahab, Zair
TI Developing software systems to Big Data platform based on MapReduce
   model: An approach based on Model Driven Engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model Driven Engineering; Big Data; Framework; Metamodels
ID ANALYTICS; ARCHITECTURE; CHALLENGES; SECURITY; PRIVACY
AB Context: The need to analyze a large volume and variety of data for the purpose of extracting information has been promoting investments in Big Data, e.g., for storage, analysis and, more recently, methodologies and approaches for software system development for Big Data platforms. The application of software engineering for Big Data is recent and emerging, so in the literature we find a number of challenges and opportunities related to Big Data, but few practical approaches.
   Objective: In this paper, we propose a practical approach based on MDE (Model Driven Engineering) to support the semi-automated development of software systems for Big Data platform that use MapReduce model.
   Method: The proposed approach consists of framework, process, metamodels, visual Alf, transformation definitions written in ATL and Eclipse IDE plug-in. The proposed framework uses concepts of MDE, Weaving and software development based on Y. Our proposed process guides the use of our approach. A graphical notation and extended metamodel for Alf (i.e. visual Alf) assign executable behavior for UML or DSLs. An Eclipse IDE plug-in implements our approach.
   Results: We show the applicability of the proposed approach through an illustrative example.
   Conclusion: Our approach brings a contribution because the development of software systems is assisted by models which preserves the business logic and adds Big Data features throughout the development process. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Osvaldo, S. Sousa, Jr.; Lopes, Denivaldo; Silva, Aristofanes C.; Abdelouahab, Zair] Fed Univ Maranhao UFMA, Sao Luis, Brazil.
C3 Universidade Federal do Maranhao
RP Lopes, D (corresponding author), Fed Univ Maranhao UFMA, Sao Luis, Brazil.
EM oss.junior@ufma.br; denivaldo.lopes@ufma.br; ari@dee.ufma.br;
   zair@dee.ufma.br
RI Lopes, Denivaldo C P/F-9368-2010
OI Lopes, Denivaldo/0000-0002-4217-1399
FU FAPEMA [UNIVERSAL-00568/14]; CNPq [560231/2010-5]
FX The work described in this paper is supported by FAPEMA (through the
   grant UNIVERSAL-00568/14) and CNPq (Grant 560231/2010-5).
CR Almeida JP, 2004, EIGHTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P253, DOI 10.1109/EDOC.2004.1342522
   Anderson KM, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P19, DOI 10.1109/BIGDSE.2015.12
   Bollati VA, 2013, INFORM SOFTWARE TECH, V55, P699, DOI 10.1016/j.infsof.2012.11.004
   [Anonymous], FRAMEWORK BASED MODE
   [Anonymous], MOR 2 BILL PEOPL US
   [Anonymous], 2015, P 2015 ANN IEEE IND
   [Anonymous], PROCEDIA SOC BEHAV S
   [Anonymous], INNOVATIONS ADV COMP
   [Anonymous], INTERNET WORLD STATS
   [Anonymous], SEBD 2016 ELSEVIER I
   [Anonymous], MODEL DRIVEN ENG FDN
   [Anonymous], FAST DATA PROCESSING
   [Anonymous], 2013, ACT LANG FDN UML ALF
   [Anonymous], LABV
   [Anonymous], INT J COMPUTER SYSTE
   [Anonymous], 2003, OMG UN MOD LANG SPEC
   [Anonymous], MOD DRIV ARCH MDA DO
   [Anonymous], ATL DEF LANG
   [Anonymous], 2013, SEM FDN SUBS EX UML
   [Anonymous], KNOWLEDGE SHARING IN
   Bardi M, 2014, CHINA COMMUN, V11, P135, DOI 10.1109/CC.2014.7085614
   Beck K., 2011, MANIFESTO AGILE SOFT
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Chen HM, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P44, DOI 10.1109/BIGDSE.2015.15
   Choo J, 2013, IEEE COMPUT GRAPH, V33, P22, DOI 10.1109/MCG.2013.39
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   DeLine R, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P26, DOI 10.1109/BIGDSE.2015.13
   Dong XH, 2015, TSINGHUA SCI TECHNOL, V20, P72, DOI 10.1109/TST.2015.7040516
   Emani CK, 2015, COMPUT SCI REV, V17, P70, DOI 10.1016/j.cosrev.2015.05.002
   Fahad A, 2014, IEEE T EMERG TOP COM, V2, P267, DOI 10.1109/TETC.2014.2330519
   Fang H, 2015, IEEE NETWORK, V29, P6, DOI 10.1109/MNET.2015.7293298
   Gamma Erich., 1994, DESIGN PATTERNS
   Hammoudi S, 2010, INT J INF SYST MODEL, V1, P48, DOI 10.4018/jismd.2010100103
   Jain R, 2013, IBM J RES DEV, V57, DOI 10.1147/JRD.2013.2243531
   Keim D, 2013, IEEE COMPUT GRAPH, V33, P20, DOI 10.1109/MCG.2013.54
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Leavitt N, 2013, COMPUTER, V46, P22, DOI 10.1109/MC.2013.326
   Lee JG, 2015, BIG DATA RES, V2, P74, DOI 10.1016/j.bdr.2015.01.003
   Liu J, 2014, IEEE NETWORK, V28, P32, DOI 10.1109/MNET.2014.6863129
   Lublinsky B., 2013, Professional Hadoop Solutions
   Madhavji NH, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P11, DOI 10.1109/BIGDSE.2015.10
   Matos Pablo, 2016, Journal of Software, V11, P118, DOI 10.17706/jsw.11.2.118-132
   Nevo D, 2015, P ANN HICSS, P121, DOI 10.1109/HICSS.2015.25
   Otero CE, 2015, IEEE INTELL SYST, V30, P13, DOI 10.1109/MIS.2014.76
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Cuadrado JS, 2014, SCI COMPUT PROGRAM, V89, P176, DOI 10.1016/j.scico.2013.04.007
   Sandryhaila A, 2014, IEEE SIGNAL PROC MAG, V31, P80, DOI 10.1109/MSP.2014.2329213
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Singh S, 2016, TSINGHUA SCI TECHNOL, V21, P55, DOI 10.1109/TST.2016.7399283
   Tan ZY, 2014, IEEE CLOUD COMPUT, V1, P27, DOI 10.1109/MCC.2014.53
   White T., 2012, HADOOP DEFINITIVE GU
   Xu L, 2014, IEEE ACCESS, V2, P1149, DOI 10.1109/ACCESS.2014.2362522
   Zaharia Matei., 2012, NSDI 12
   Zhou ZH, 2014, IEEE COMPUT INTELL M, V9, P62, DOI 10.1109/MCI.2014.2350953
NR 54
TC 6
Z9 7
U1 1
U2 46
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 30
EP 48
DI 10.1016/j.infsof.2017.07.006
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200003
DA 2024-07-18
ER

PT J
AU Hamill, M
   Goseva-Popstojanova, K
AF Hamill, Maggie
   Goseva-Popstojanova, Katerina
TI Analyzing and predicting effort associated with finding and fixing
   software faults
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software faults and failures; Software fix implementation effort; Case
   study; Analysis; Prediction
AB Context: Software developers spend a significant amount of time fixing faults. However, not many papers have addressed the actual effort needed to fix software faults.
   Objective: The objective of this paper is twofold: (1) analysis of the effort needed to fix software faults and how it was affected by several factors and (2) prediction of the level of fix implementation effort based on the information provided in software change requests.
   Method: The work is based on data related to 1200 failures, extracted from the change tracking system of a large NASA mission. The analysis includes descriptive and inferential statistics. Predictions are made using three supervised machine learning algorithms and three sampling techniques aimed at addressing the imbalanced data problem.
   Results: Our results show that (1) 83% of the total fix implementation effort was associated with only 20% of failures. (2) Both post-release failures and safety-critical failures required more effort to fix than pre-release and non-critical counterparts, respectively; median values were two or more times higher. (3) Failures with fixes spread across multiple components or across multiple types of software artifacts required more effort. The spread across artifacts was more costly than spread across components. (4) Surprisingly, some types of faults associated with later life-cycle activities did not require significant effort. (5) The level of fix implementation effort was predicted with 73% overall accuracy using the original, imbalanced data. Oversampling techniques improved the overall accuracy up to 77% and, more importantly, significantly improved the prediction of the high level effort, from 31% to 85%.
   Conclusions: This paper shows the importance of tying software failures to changes made to fix all associated faults, in one or more software components and/or in one or more software artifacts, and the benefit of studying how the spread of faults and other factors affect the fix implementation effort. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Hamill, Maggie] No Arizona Univ, Sch Informat Comp & Cyber Syst, Flagstaff, AZ USA.
   [Goseva-Popstojanova, Katerina] West Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 Northern Arizona University; West Virginia University
RP Goseva-Popstojanova, K (corresponding author), West Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM Katerina.Goseva@mail.wvu.edu
OI Goseva-Popstojanova, Katerina/0000-0003-4683-672X
FU NASA OSMA Software Assurance Research Program
FX This work was funded in part by the NASA OSMA Software Assurance
   Research Program under a grant managed through the NASA IV&V Facility.
   Any opinions, findings, and conclusions or recommendations expressed in
   this material are those of the authors and do not necessarily reflect
   the views of the funding agency and the NASA personnel. The authors
   thank the following NASA personnel for their invaluable support: Jill
   Broadwater, Pete Cerna, Randolph Copeland, Susan Creasy, James Dalton,
   Bryan Fritch, Nick Guerra, John Hinkle, Lynda Kelsoe, Gary Lovstuen, Tom
   Macaulay, Debbie Miele, Lisa Montgomery, James Moon, Don Ohi, Chad
   Pokryzwa, David Pruett, Timothy Plew, Scott Radabaugh, David Soto, and
   Sarma Susarla.
CR Abdelmoez W, 2012, 2012 22ND INTERNATIONAL CONFERENCE ON COMPUTER THEORY AND APPLICATIONS (ICCTA), P167, DOI 10.1109/ICCTA.2012.6523564
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 1987, Wiley Series in Probability and Statistics
   [Anonymous], 2000, Designing experiments and analyzing data: A model comparison perspective
   [Anonymous], 2010, 24765 ISOIECIEEE
   [Anonymous], 2013, DESIGN ANAL EXPT
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   Evanco WM, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P114, DOI 10.1109/CSMR.2001.914975
   Frank E, 2016, The WEKA workbench. Online appendix for data mining: practical machine learning tools and techniques
   Garg A., 2001, EMCL 01 P 12 EUROPEA, P179
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   GRISS ML, 1993, IBM SYST J, V32, P548, DOI 10.1147/sj.324.0548
   Hamill M, 2015, SOFTWARE QUAL J, V23, P229, DOI 10.1007/s11219-014-9235-5
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Hochstein L., 2005, PROC 10 EUROPEAN SOF, P356, DOI [DOI 10.1145/1095430.1081762, 10.1145/1081706.1081762, DOI 10.1145/1081706.1081762]
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   McDonald J. H., 2014, HDB BIOL STAT
   Mockus A, 2003, PROC INT CONF SOFTW, P274, DOI 10.1109/ICSE.2003.1201207
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Robson C., 2002, Real World Reseach, VSecond
   Rothman K J, 1990, Epidemiology, V1, P43, DOI 10.1097/00001648-199001000-00010
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Siy H., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P304, DOI 10.1109/METRIC.1999.809751
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Veazie PJ, 2006, HEALTH SERV RES, V41, P804, DOI 10.1111/j.1475-6773.2006.00512.x
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wohlin C., 2012, Experimentation in Software Engineering
   Yin R.K, 2009, Case study research: Design and methods
   Zeng H, 2004, P INT COMP SOFTW APP, P20
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   [No title captured]
   [No title captured]
   [No title captured]
NR 43
TC 8
Z9 10
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 1
EP 18
DI 10.1016/j.infsof.2017.01.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300001
DA 2024-07-18
ER

PT J
AU Kumari, AC
   Srinivas, K
AF Kumari, A. Charan
   Srinivas, K.
TI Comparing the performance of quantum-inspired evolutionary algorithms
   for the solution of software requirements selection problem
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software requirements selection; Requirements engineering;
   Quantum-inspired evolutionary algorithms; Search Based Software
   Engineering
ID GENETIC ALGORITHM; OPTIMIZATION
AB Context: In requirements engineering phase of the software development life cycle, one of the main concerns of software engineers is to select a set of software requirements for implementation in the next release of the software from many requirements proposed by the customers, while balancing budget and customer satisfaction.
   Objective: To analyse the efficacy of Quantum-inspired Elitist Multi-objective Evolutionary Algorithm (QE-MEA), Quantum-inspired Multi-objective Differential Evolution Algorithm (QMDEA) and Multi-objective Quantum-inspired Hybrid Differential Evolution (MQHDE) in solving the software requirements selection problem.
   Method: The paper reports on empirical evaluation of the performance of three quantum-inspired multi objective evolutionary algorithms along with Non-dominated Sorting Genetic Algorithm-II (NSGA-II). The comparison includes the obtained Pareto fronts, the three performance metrics - Generational Distance, Spread and Hypervolume, attained boundary solutions, and size of the Pareto front.
   Results: The results reveal that MQHDE outperformed other methods in producing high quality solutions; while QMDEA is able to produce well distributed solutions with extreme boundary solutions.
   Conclusion: The hybridization of Differential Evolution with Genetic Algorithms coupled with quantum computing concepts (MQHDE) provided a means to effectively balance the two issues of multi-objective optimization - convergence and diversity. (c) 2016 Elsevier B.V. All rights reserved.
C1 [Kumari, A. Charan] NorthCap Univ, Gurgaon, India.
   [Srinivas, K.] Dayalbagh Educ Inst, Dayalbagh, Agra, Uttar Pradesh, India.
C3 The Northcap University; Dayalbagh Educational Institute (DEI)
RP Kumari, AC (corresponding author), NorthCap Univ, Gurgaon, India.
EM charankumari@yahoo.co.in
RI Kumari, Charan/ACY-5563-2022
OI Kumari, Charan/0000-0002-3160-1912
CR [Anonymous], 2010, 12 ANN C GEN EV COMP
   [Anonymous], 2006, P 2 INT S LEV APPL F
   [Anonymous], 2007, INT J MATH PHYS ENG
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Charan Kumari A., 2012, P IEEE CSI INT C SOF, P38
   COELLO CAC, 2010, P GEN EV COMP C, P2603
   del Sagrado Jose, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P67, DOI 10.1109/SSBSE.2010.18
   del Sagrado J, 2011, GECCO 11, P241, DOI 10.1145/2001858.2001994
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   Feather M.S., 2006, REV 06, 14th RE, P10
   Feather Martin, 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P79
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   Feng XY, 2006, COMPUTATIONAL METHODS, PTS 1 AND 2, P1363, DOI 10.1007/978-1-4020-3953-9_55
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Finkelstein A, 2008, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2008.61
   Fu X., 2009, P SPIE, V7495
   Gu JW, 2009, J MATH ANAL APPL, V355, P63, DOI 10.1016/j.jmaa.2008.12.065
   Han KH, 2004, IEEE T EVOLUT COMPUT, V8, P156, DOI 10.1109/TEVC.2004.823467
   Han KH, 2002, IEEE T EVOLUT COMPUT, V6, P580, DOI 10.1109/TEVC.2002.804320
   Han KH, 2001, IC-AI'2001: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS I-III, P727
   Han KH, 2003, IEEE C EVOL COMPUTAT, P178
   Han KH, 2000, IEEE C EVOL COMPUTAT, P1354, DOI 10.1109/CEC.2000.870809
   Hanne T, 2005, EUR J OPER RES, V167, P663, DOI 10.1016/j.ejor.2004.07.014
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2009, Proceedings of Genetic and Evolutionary Computation Conference, P1681
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1951
   He Jiang, 2010, Proceedings of the 2nd International Conference on Software Engineering and Data Mining (SEDM 2010), P166
   Hongxia Miao, 2009, Proceedings of the 2009 International Conference on Computational Intelligence and Security (CIS 2009), P107, DOI 10.1109/CIS.2009.133
   Hota Ashish Ranjan, 2010, 2010 Second World Congress on Nature and Biologically Inspired Computing (NaBIC 2011), P703, DOI 10.1109/NABIC.2010.5716320
   Jalote P., 2005, INTEGRATED APPROACH, DOI 10.1007/0-387-28132-0
   Jeong YW, 2009, ELECTR POW COMPO SYS, V37, P770, DOI 10.1080/15325000902762331
   Jiang SW, 2014, IEEE T CYBERNETICS, V44, P2391, DOI 10.1109/TCYB.2014.2307319
   Kim Y., 2006, 2006 IEEE INT C EV C, P2601
   Kumari A. C., 2012, 2012 International Conference on Advances in Engineering, Science and Management (ICAESM), P782
   Kumari AC, 2013, IEEE INT ADV COMPUT, P813
   Kumari AC, 2013, ADV INTELL SYST, V175, P107
   Kumari AC., 2013, INT J SOFTW ENG APPL, V4, P45
   KUMARI AC, 2012, P IEEE INT C COMP IN, P377
   Narayan A, 2009, IEEE SYS MAN CYBERN, P1388, DOI 10.1109/ICSMC.2009.5346276
   Narayanan A, 1996, IEEE C EVOL COMPUTAT, P61, DOI 10.1109/ICEC.1996.542334
   Niu Q, 2010, LECT NOTES COMPUT SC, V6329, P21, DOI 10.1007/978-3-642-15597-0_3
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Salcedo-Sanz S, 2009, COMPUT SCI REV, V3, P175, DOI 10.1016/j.cosrev.2009.07.001
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tonella P., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P57, DOI 10.1109/SSBSE.2010.17
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Venkatraman S, 2005, IEEE T EVOLUT COMPUT, V9, P424, DOI 10.1109/TEVC.2005.846817
   Vescan A, 2008, ISDA 2008: EIGHTH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS DESIGN AND APPLICATIONS, VOL 2, PROCEEDINGS, P395, DOI 10.1109/ISDA.2008.24
   Vlachoglannis JG, 2008, IEEE T POWER SYST, V23, P1627, DOI 10.1109/TPWRS.2008.2004743
   Wohlin C., 2000, INT SERIES SOFTWARE, V6
   Xing HL, 2009, COMPUT COMMUN, V32, P1086, DOI 10.1016/j.comcom.2008.12.036
   Xing HL, 2009, COMPUT COMMUN, V32, P386, DOI 10.1016/j.comcom.2008.11.009
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
   Zhang YY, 2011, INFORM SOFTWARE TECH, V53, P761, DOI 10.1016/j.infsof.2011.02.001
   Zhao SF, 2009, COMPUT MATH APPL, V57, P2009, DOI 10.1016/j.camwa.2008.10.048
NR 61
TC 13
Z9 14
U1 1
U2 26
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2016
VL 76
BP 31
EP 64
DI 10.1016/j.infsof.2016.04.010
PG 34
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO6VZ
UT WOS:000377922900003
DA 2024-07-18
ER

PT J
AU Chatzikonstantinou, G
   Kontogiannis, K
AF Chatzikonstantinou, George
   Kontogiannis, Kostas
TI Run-time requirements verification for reconfigurable systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; System analysis; Run-time requirements
   verification; Goal models reasoning; Fuzzy reasoning
ID RUNTIME VERIFICATION; FUZZY-LOGIC
AB Context: Modern software systems often are distributed, run on virtualized platforms, implement complex tasks and operate on dynamically changing and unpredictable environments. Such systems need to be dynamically reconfigured or evolve in order to continue to meet their functional and non-functional requirements, as load and computation need to change. Such reconfiguration and/or evolution actions may cause other requirements to fail.
   Objective: Given models that describe with a degree of confidence the requirements that should hold in a running software system, along with their inter-dependencies, our objective is to propose a framework that can process these models and estimate the degree requirements hold as the system is dynamically altered or adapted.
   Method: We present an approach where requirements and their inter-dependencies are modeled using conditional goal models with weighted contributions. These models can be translated into fuzzy rules, and fuzzy reasoners can determine whether and to what degree, a requirement may be affected by a system change, or by actions related of other requirements.
   Results: The proposed framework is evaluated for its performance and stability on goal models of varying size and complexity. The experimental results indicate that the approach is tractable even for large models and allows for dealing with models where contribution links are of varying importance or weight.
   Conclusion: The use of conditional weighted goal models combined with fuzzy reasoners allowed for the tractable run-time evaluation of the degree by which system requirements are believed to hold, when such systems are dynamically altered or adapted. The approach aims to shed light towards the development of run-time requirements verification and validation techniques for adaptive systems or systems that undergo continuous, or frequent evolution. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Chatzikonstantinou, George; Kontogiannis, Kostas] Natl Tech Univ Athens, Dept Elect & Comp Engn, 9 Iroon Polytechniou, Athens 15780, Greece.
C3 National Technical University of Athens
RP Chatzikonstantinou, G (corresponding author), Natl Tech Univ Athens, Dept Elect & Comp Engn, 9 Iroon Polytechniou, Athens 15780, Greece.
EM gchatzik@cslab.ece.ntua.gr; kkontog@softlab.ntua.gr
FU European Union (European Social Fund ESF); Greek national funds through
   the Operational Program "Education and Lifelong Learning" of the
   National Strategic Reference Framework (NSRF) - Research Funding
   Program: Heracleitus II
FX This research has been co-financed by the European Union (European
   Social Fund ESF) and Greek national funds through the Operational
   Program "Education and Lifelong Learning" of the National Strategic
   Reference Framework (NSRF) - Research Funding Program: Heracleitus II.
   Investing in knowledge society through the European Social Fund. We
   would also like to thank A. Chortaras for providing as with the
   implementation of his reasoner for weighted logic programs.
CR Ali R, 2013, INFORM SOFTWARE TECH, V55, P35, DOI 10.1016/j.infsof.2012.06.013
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Ali R, 2008, LECT NOTES COMPUT SC, V5231, P169, DOI 10.1007/978-3-540-87877-3_14
   Amyot D, 2010, INT J INTELL SYST, V25, P841, DOI 10.1002/int.20433
   [Anonymous], 2013, LECT NOTES COMPUTER, V7740
   [Anonymous], 2009, 2009 6 IEEE CONS COM
   [Anonymous], 2012, P 9 INT S FORM ASP C
   [Anonymous], FUZZY CAUSAL PROBABI
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Bencomo Nelly, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P221, DOI 10.1007/978-3-642-37422-7_16
   Cailliau A, 2013, REQUIR ENG, V18, P129, DOI 10.1007/s00766-013-0168-5
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Calinescu Radu., 2011, Proceedings of the 8th Workshop on Assurances for Self-adaptive Systems, P1, DOI [10.1145/2024436.2024438., DOI 10.1145/2024436.2024438]
   Chatzikonstantinou George, 2013, 2013 IEEE Ninth World Congress on Services (SERVICES), P180, DOI 10.1109/SERVICES.2013.75
   Chatzikonstantinou George, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P546, DOI 10.1007/978-3-642-38709-8_35
   Chatzikonstantinou G, 2014, LECT NOTES COMPUT SC, V8484, P625, DOI 10.1007/978-3-319-07881-6_42
   Chopra AmitK., 2010, P 9 INT C AUTONOMOUS, V1, P457
   Chortaras A, 2009, INT J UNCERTAIN FUZZ, V17, P85, DOI 10.1142/S0218488509005759
   Dalpiaz F, 2013, REQUIR ENG, V18, P1, DOI 10.1007/s00766-011-0132-1
   Dalpiaz Fabiano., 2013, RES CHALLENGES INFOR, P1, DOI DOI 10.1109/RCIS.2013.6577674
   Elahi G, 2012, INFORM SOFTWARE TECH, V54, P517, DOI 10.1016/j.infsof.2011.10.007
   Falcone Y, 2011, LECT NOTES COMPUT SC, V7041, P204, DOI 10.1007/978-3-642-24690-6_15
   Falcone Y, 2009, LECT NOTES COMPUT SC, V5779, P40, DOI 10.1007/978-3-642-04694-0_4
   Ghezzi C., 2011, NATO SCI PEACE SECUR, V30, P88
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   Giorgini P, 2002, LECT NOTES COMPUT SC, V2503, P167
   Giorgini Paolo, 2006, International Journal of Information Security, V5, P257
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   HOMAIFAR A, 1995, IEEE T FUZZY SYST, V3, P129, DOI 10.1109/91.388168
   Horkoff J., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P675
   Horkoff J, 2014, SOFTW SYST MODEL, V13, P1015, DOI 10.1007/s10270-012-0290-8
   Horkoff J, 2013, REQUIR ENG, V18, P199, DOI 10.1007/s00766-011-0143-y
   Ingolfo S, 2011, LECT NOTES COMPUT SC, V6998, P47, DOI 10.1007/978-3-642-24606-7_5
   Kalamatianos T, 2012, P INT COMP SOFTW APP, P225, DOI 10.1109/COMPSAC.2012.33
   Krüger IH, 2010, J LOGIC COMPUT, V20, P725, DOI 10.1093/logcom/exn079
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Liaskos S., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P221, DOI 10.1109/RE.2012.6345808
   Liaskos S., 2013, iStar, P37
   Morandini M., 2008, P 2008 INT WORKSH SO, P9, DOI [10.1145/1370018.1370021, DOI 10.1145/1370018.1370021]
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Nekvi Md Rashed I., 2015, ACM Transactions on Management Information Systems, V5, DOI 10.1145/2629432
   Object Management Group, 2015, OBJ CONST LANG OCL V
   PASSINO K.M. S. YURKOVICH., 1997, FUZZY CONTROL, V1st
   Ross T. J., 2004, FUZZY LOGIC ENG APPL
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Souza VitorE Silva., 2011, P 6 INT S SOFTWARE E, P60
   Souza VES, 2013, COMPUT SCI-RES DEV, V28, P311, DOI 10.1007/s00450-012-0232-2
   Tanabe D, 2008, INT REQUIR ENG CONF, P3, DOI 10.1109/RE.2008.18
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   van Lamsweerde A, 2009, LECT NOTES COMPUT SC, V5600, P380, DOI 10.1007/978-3-642-02463-4_20
   ZADEH LA, 1995, TECHNOMETRICS, V37, P271, DOI 10.2307/1269908
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 52
TC 7
Z9 9
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2016
VL 75
BP 105
EP 121
DI 10.1016/j.infsof.2016.04.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DN1QI
UT WOS:000376840100008
DA 2024-07-18
ER

PT J
AU Vorobyov, K
   Krishnan, P
   Stocks, P
AF Vorobyov, Kostyantyn
   Krishnan, Padmanabhan
   Stocks, Phil
TI A low-overhead, value-tracking approach to information flow security
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Information leakage; Program instrumentation; Monitoring
ID VERIFICATION
AB Context: Sensitive information such as passwords often leaks inadvertently because of implementation defects.
   Objective: Our objective is to use dynamic techniques to prevent information leakage before it occurs. We also aim to develop techniques that incur low overheads, and are safe in the presence of aliasing.
   Method: We use a dynamic approach to track secret values and safe locations. We assume that programs have annotations which identify values and locations that need to be protected against disclosure. We instrument a program with statements that record relevant values and locations and assertions to relevant assignments to determine if they leak information. At run-time the values being assigned to unsafe locations are analysed. If a particular assignment leads to information leakage an assertion violation is triggered. We evaluate our approach by experimentation which uses our prototype implementation for C programs to analyse security-oriented UNIX utilities and programs chosen from the SPEC CPU datasets.
   Results: Our experiments show that the overhead to detect problems such as password disclosure in real software does not exceed 1%. The overheads associated with detection of CWE security vulnerabilities in real applications are still acceptable; however, tracking a large number of values incurs higher overheads (over 10 times in certain cases).
   Conclusion: Our dynamic approach to detecting information leaks can be used in various contexts. For a program that tracks only a limited number of values the overhead is marginal. Thus, our instrumentation can be used in release versions. However, if an application has a large number of secret values, our technique is useful in a testing phase. The overheads in this case are too high for a real use, but still within an acceptable range to be used for detection of potential leaks during testing. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Vorobyov, Kostyantyn; Stocks, Phil] Bond Univ, Ctr Software Assurance, Gold Coast, Australia.
   [Krishnan, Padmanabhan] Oracle Labs, Brisbane, Qld, Australia.
C3 Bond University; Oracle
RP Vorobyov, K (corresponding author), Bond Univ, Ctr Software Assurance, Gold Coast, Australia.
EM kvorobyo@bond.edu.au; paddy.krishnan@oracle.com; pstocks@bond.edu.au
FU Oracle Labs
FX The first author was supported by a grant from Oracle Labs.
CR [Anonymous], 2005, NDSS
   [Anonymous], 2003, P 1 APPSEM 2 WORKSHO
   [Anonymous], 2006, P AS COMP SCI C SEC
   Assaf M, 2013, IFIP ADV INF COMM TE, V405, P231
   AUSTIN TH, 2010, P 5 ACM SIGPLAN WORK, DOI DOI 10.1145/1814217.1814220
   Austin TH, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P165
   Austin Thomas H., 2009, P ACM SIGPLAN 4 WORK, P113, DOI DOI 10.1145/1554339.1554353
   Blazy S, 2009, J AUTOM REASONING, V43, P263, DOI 10.1007/s10817-009-9148-3
   Capizzi R, 2008, ANN COMPUT SECURITY, P322, DOI 10.1109/ACSAC.2008.50
   Chakaravarthy VT, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/640128.604142
   Chandra D, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P463, DOI 10.1109/ACSAC.2007.37
   Chudnov A, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P629, DOI 10.1145/2810103.2813684
   Chudnov A, 2010, 2010 23RD IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM (CSF), P200, DOI 10.1109/CSF.2010.21
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   Devriese D, 2010, P IEEE S SECUR PRIV, P109, DOI 10.1109/SP.2010.15
   Enck William., 2010, Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), P393
   Hedin D, 2012, P IEEE CSFW, P3, DOI 10.1109/CSF.2012.19
   Hedin Daniel, 2014, P 29 ANN ACM S APPL, P1663
   Hornyack P, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P639
   Jung J, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P279
   Le Guernic G, 2007, 20TH IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM (CSFS20), PROCEEDINGS, P218, DOI 10.1109/CSF.2007.10
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Magazinius J, 2012, COMPUT SECUR, V31, P827, DOI 10.1016/j.cose.2011.10.002
   Myers A. C., 1999, Conference Record of POPL '99. 26th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P228, DOI 10.1145/292540.292561
   Myers AC, 2000, ACM T SOFTW ENG METH, V9, P410, DOI 10.1145/363516.363526
   Qin F, 2006, INT SYMP MICROARCH, P135
   Russo A, 2010, 2010 23RD IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM (CSF), P186, DOI 10.1109/CSF.2010.20
   Sabelfeld A, 2003, IEEE J SEL AREA COMM, V21, P5, DOI 10.1109/JSAC.2002.806121
   Seward J, 2005, USENIX Association Proceedings of the General Track: 2005 UNENIX Annual Technical Conference, P17
   Vachharajani N, 2004, INT SYMP MICROARCH, P243
   Wang C, 2007, LECT NOTES COMPUT SC, V4697, P4
   Wanli Ma, 2010, Proceedings of the 2010 Fourth International Conference on Network and System Security (NSS 2010), P583, DOI 10.1109/NSS.2010.18
   Yin H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P116
   Yip A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P291
   Yu Junfeng., 2011, Proceedings of the first ACM conference on Data and application security and privacy, P75
   Zheng L, 2007, INT J INF SECUR, V6, P67, DOI 10.1007/s10207-007-0019-9
   Zhu David Yu, 2011, Operating Systems Review, V45, P142, DOI 10.1145/1945023.1945039
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 44
TC 0
Z9 0
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 19
EP 36
DI 10.1016/j.infsof.2015.12.006
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI5KJ
UT WOS:000373537400003
DA 2024-07-18
ER

PT J
AU Heradio, R
   Perez-Morago, H
   Fernandez-Amoros, D
   Cabrerizo, FJ
   Herrera-Viedma, E
AF Heradio, Ruben
   Perez-Morago, Hector
   Fernandez-Amoros, David
   Javier Cabrerizo, Francisco
   Herrera-Viedma, Enrique
TI A bibliometric analysis of 20 years of research on software product
   lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Bibliometrics; Science mapping; Performance
   analysis
ID DOMAIN-SPECIFIC LANGUAGE; CITATION-CLASSICS; SIMILARITY MEASURES;
   GOOGLE-SCHOLAR; VARIABILITY; SCIENCE; REQUIREMENTS; REUSE; WEB;
   DOCUMENTATION
AB Context: Software product line engineering has proven to be an efficient paradigm to developing families of similar software systems at lower costs, in shorter time, and with higher quality.
   Objective: This paper analyzes the literature on product lines from 1995 to 2014, identifying the most influential publications, the most researched topics, and how the interest in those topics has evolved along the way.
   Method: Bibliographic data have been gathered from ISI Web of Science and Scopus. The data have been examined using two prominent bibliometric approaches: science mapping and performance analysis.
   Results: According to the study carried out, (i) software architecture was the initial motor of research in SPL; (ii) work on systematic software reuse has been essential for the development of the area; and (iii) feature modeling has been the most important topic for the last fifteen years, having the best evolution behavior in terms of number of published papers and received citations.
   Conclusion: Science mapping has been used to identify the main researched topics, the evolution of the interest in those topics and the relationships among topics. Performance analysis has been used to recognize the most influential papers, the journals and conferences that have published most papers, how numerous is the literature on product lines and what is its distribution over time. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Heradio, Ruben; Perez-Morago, Hector; Fernandez-Amoros, David; Javier Cabrerizo, Francisco] Univ Nacl Educ Distancia, Dept Software Engn & Comp Syst, E-28040 Madrid, Spain.
   [Herrera-Viedma, Enrique] Univ Granada, Dept Comp Sci & Artificial Intelligence, E-18071 Granada, Spain.
C3 Universidad Nacional de Educacion a Distancia (UNED); University of
   Granada
RP Heradio, R (corresponding author), Univ Nacl Educ Distancia, Dept Software Engn & Comp Syst, E-28040 Madrid, Spain.
EM rheradio@issi.uned.es; hperez@issi.uned.es; david@issi.uned.es;
   cabrerizo@issi.uned.es; viedma@decsai.ugr.es
RI Cabrerizo, Francisco Javier/A-3841-2015; HERRERA-VIEDMA,
   ENRIQUE/C-2704-2008; Fernandez-Amoros, David/ABG-7972-2020;
   Perez-Morago, Hector/O-9607-2018; Heradio, Ruben/D-3675-2013
OI Cabrerizo, Francisco Javier/0000-0001-7012-8649; HERRERA-VIEDMA,
   ENRIQUE/0000-0002-7922-4984; Fernandez-Amoros,
   David/0000-0003-3758-0195; Perez-Morago, Hector/0000-0002-5340-0580;
   Heradio, Ruben/0000-0002-7131-0482
FU Spanish Government under the CICYT project [DPI-2013-44776-R]; Comunidad
   de Madrid under the RoboCity excellence research network
   [S2013MIT-2748]; FEDER funds [TIN2010-17876, TIN2013-40658-P];
   Andalusian Excellence Projects [TIC 05299, TIC-5991]
FX This work has been supported by the Spanish Government under the CICYT
   project DPI-2013-44776-R, the Comunidad de Madrid under the RoboCity2030
   excellence research network S2013MIT-2748, the FEDER funds under grant
   TIN2010-17876 and grant TIN2013-40658-P, and the Andalusian Excellence
   Projects under grant TIC 05299 and grant TIC-5991.
CR Acher Mathieu, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P62
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Ahlgren P, 2003, J AM SOC INF SCI TEC, V54, P550, DOI 10.1002/asi.10242
   Ahmed F, 2008, INFORM SOFTWARE TECH, V50, P1098, DOI 10.1016/j.infsof.2007.10.013
   Albarrán P, 2011, J INFORMETR, V5, P48, DOI 10.1016/j.joi.2010.08.002
   Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Martínez MA, 2015, RES SOCIAL WORK PRAC, V25, P257, DOI 10.1177/1049731514522101
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], 1979, Citation indexing: Its theory and application in science, technology, and humanities
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Ardis M, 2000, SOFTWARE PRACT EXPER, V30, P825, DOI 10.1002/(SICI)1097-024X(200006)30:7<825::AID-SPE322>3.0.CO;2-1
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Bachmann Felix., 2005, Variability in Software Product Lines
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Bailón-Moreno R, 2006, J AM SOC INF SCI TEC, V57, P949, DOI 10.1002/asi.20362
   Bailón-Moreno R, 2005, SCIENTOMETRICS, V63, P259, DOI 10.1007/s11192-005-0212-4
   Baltussen A, 2004, INTENS CARE MED, V30, P902, DOI 10.1007/s00134-004-2195-7
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   BAUIN S, 1991, SCIENTOMETRICS, V22, P113, DOI 10.1007/BF02019278
   Beall J., 2010, Charleston Advisor, V11, P10, DOI DOI 10.5260/CHARA.12.1.50
   Benavides D., 2005, P INT C ADV INF SYST
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Beuche D, 2004, SCI COMPUT PROGRAM, V53, P333, DOI 10.1016/j.scico.2003.04.005
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P156
   Börner K, 2003, ANNU REV INFORM SCI, V37, P179, DOI 10.1002/aris.1440370106
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Boskovic M, 2010, INT J SOFTW ENG KNOW, V20, P459, DOI 10.1142/S0218194010004827
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Cahlik T., 2000, SCIENTOMETRICS, V49, P373
   CALLON M, 1991, SCIENTOMETRICS, V22, P155, DOI 10.1007/BF02019280
   Callon M., 1986, MAPPING DYNAMICS SCI, P103
   Cathcart R., 2006, INTERNET REFERENCE S, V10, P167, DOI [10.1300/j136v10n03_15, DOI 10.1300/J136V10N03_15]
   Cechticky V, 2004, LECT NOTES COMPUT SC, V3107, P101
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Cobo MJ, 2012, J AM SOC INF SCI TEC, V63, P1609, DOI 10.1002/asi.22688
   Cobo MJ, 2011, J AM SOC INF SCI TEC, V62, P1382, DOI 10.1002/asi.21525
   Cobo MJ, 2011, J INFORMETR, V5, P146, DOI 10.1016/j.joi.2010.10.002
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Coulter N, 1998, J AM SOC INFORM SCI, V49, P1206, DOI 10.1002/(SICI)1097-4571(1998)49:13<1206::AID-ASI7>3.0.CO;2-F
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P7, DOI 10.1002/spip.213
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K., 2006, GPCE, P211
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   de Winter JCF, 2014, SCIENTOMETRICS, V98, P1547, DOI 10.1007/s11192-013-1089-2
   Deelstra S, 2004, LECT NOTES COMPUT SC, V3154, P165
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Dikel D, 1997, COMPUTER, V30, P49, DOI 10.1109/2.607064
   Dong M, 2011, EXPERT SYST APPL, V38, P11770, DOI 10.1016/j.eswa.2011.03.064
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fischbein D., 2006, ROSATEA 06, P39
   Franceschet M, 2010, SCIENTOMETRICS, V83, P243, DOI 10.1007/s11192-009-0021-2
   Gacek C., 2001, P S SOFTW REUS PUTT
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   GARFIELD E, 1977, CURR CONTENTS, P5
   Gomez-Jauregui V, 2014, INT J INFORM MANAGE, V34, P257, DOI 10.1016/j.ijinfomgt.2014.01.002
   Greenfield J., 2003, OOPSLA 03 COMPANION, P16, DOI DOI 10.1145/949344.949348
   Griss ML, 2000, SPRINGER INT SER ENG, V576, P271
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   HAMERS L, 1989, INFORM PROCESS MANAG, V25, P315, DOI 10.1016/0306-4573(89)90048-4
   Harzing A.-W. K., 2008, Ethics in Science and Environmental Politics, V8, P61, DOI https://doi.org/10.3354/esep00076
   He Q, 1999, LIBR TRENDS, V48, P133
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Hein A, 2000, SPRINGER INT SER ENG, V576, P47
   Hervieu A, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P120, DOI 10.1109/ISSRE.2011.31
   Hirsch JE, 2005, P NATL ACAD SCI USA, V102, P16569, DOI 10.1073/pnas.0507655102
   Ioannidis JPA, 2010, EUR J CLIN INVEST, V40, P285, DOI 10.1111/j.1365-2362.2010.02272.x
   Jacso P, 2005, CURR SCI INDIA, V89, P1537
   Jacsó P, 2008, ONLINE INFORM REV, V32, P102, DOI 10.1108/14684520810866010
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kandylas V, 2010, ACM T KNOWL DISCOV D, V4, DOI 10.1145/1754428.1754430
   Kang KC, 1999, SOFTWARE PRACT EXPER, V29, P875, DOI 10.1002/(SICI)1097-024X(199908)29:10<875::AID-SPE262>3.0.CO;2-W
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P1
   Kim C.H. P., 2011, Proceedings of the Tenth International Conference on Aspect-oriented Software Development, P57
   Kim M, 2007, DATA KNOWL ENG, V61, P417, DOI 10.1016/j.datak.2006.06.009
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Lam W, 1998, ANN SOFTW ENG, V5, P253, DOI 10.1023/A:1018912105115
   LAW J, 1988, SCIENTOMETRICS, V14, P251, DOI 10.1007/BF02020078
   Lee J, 2010, J SYST SOFTWARE, V83, P1123, DOI 10.1016/j.jss.2010.01.048
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Lee K., 2004, P INT C SOFTW REUS M, P65
   Lee K, 2010, LECT NOTES COMPUT SC, V6287, P32
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Liu J, 2007, J SYST SOFTWARE, V80, P1879, DOI 10.1016/j.jss.2007.01.047
   Liu J, 2011, AUTOMAT SOFTW ENG, V18, P39, DOI 10.1007/s10515-010-0075-7
   Lopez-Herrejon RE, 2005, LECT NOTES COMPUT SC, V3586, P169
   López-Herrera AG, 2009, INFORM RES, V14
   Lutz RR, 2000, J SYST SOFTWARE, V53, P207, DOI 10.1016/S0164-1212(00)00012-1
   Lutz RR, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P24, DOI 10.1109/ICRE.1998.667805
   Martínez MA, 2014, SCIENTOMETRICS, V98, P1971, DOI 10.1007/s11192-013-1155-9
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   Mellado D, 2010, INFORM SOFTWARE TECH, V52, P1094, DOI 10.1016/j.infsof.2010.05.007
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Mendonca M, 2010, SCI COMPUT PROGRAM, V75, P311, DOI 10.1016/j.scico.2009.12.004
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Mietzner R, 2009, PESOS: 2009 ICSE WORKSHOP ON PRINCIPLES OF ENGINEERING SERVICE ORIENTED SYSTEMS, P18, DOI 10.1109/PESOS.2009.5068815
   Moed HF, 2009, ARCH IMMUNOL THER EX, V57, P13, DOI 10.1007/s00005-009-0001-5
   Mohabbati B, 2011, LECT NOTES COMPUT SC, V7084, P436, DOI 10.1007/978-3-642-25535-9_29
   Montagud S, 2012, SOFTWARE QUAL J, V20, P425, DOI 10.1007/s11219-011-9146-7
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   Nederhof AJ, 1997, SCIENTOMETRICS, V40, P237, DOI 10.1007/BF02457439
   Neves L, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P33
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Noyons ECM, 1999, SCIENTOMETRICS, V46, P591, DOI 10.1007/BF02459614
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Park S, 2004, IND MANAGE DATA SYST, V104, P296, DOI 10.1108/02635570410530711
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   PETERS HPF, 1995, J AM SOC INFORM SCI, V46, P9, DOI 10.1002/(SICI)1097-4571(199501)46:1<9::AID-ASI2>3.0.CO;2-3
   Prasanna Padmanabhan, 2005, Automated Software Engineering, V12, P447, DOI 10.1007/s10515-005-2648-4
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Reinhartz-Berger I, 2010, DATA KNOWL ENG, V69, P491, DOI 10.1016/j.datak.2010.01.002
   Reinhartz-Berger I, 2009, INFORM SOFTWARE TECH, V51, P1275, DOI 10.1016/j.infsof.2009.03.005
   Reiser MO, 2007, REQUIR ENG, V12, P57, DOI 10.1007/s00766-007-0046-0
   Rine DC, 1998, J SYST SOFTWARE, V41, P17, DOI 10.1016/S0164-1212(97)10003-6
   RIP A, 1984, SCIENTOMETRICS, V6, P381, DOI 10.1007/BF02025827
   Roos-Frantz F, 2012, SOFTWARE QUAL J, V20, P519, DOI 10.1007/s11219-011-9156-5
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Small H, 2006, SCIENTOMETRICS, V68, P595, DOI 10.1007/s11192-006-0132-y
   Smaragdakis Y, 2002, ACM T SOFTW ENG METH, V11, P215, DOI 10.1145/505145.505148
   Smith D, 2007, NZ MED J, V120, P2871
   Sochos P, 2004, LECT NOTES COMPUT SC, V3263, P138
   Stack S, 2012, SUICIDE LIFE-THREAT, V42, P628, DOI 10.1111/j.1943-278X.2012.00117.x
   Sternitzke C, 2009, SCIENTOMETRICS, V78, P113, DOI 10.1007/s11192-007-1961-z
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Tam WWS, 2013, RESPIROLOGY, V18, P71, DOI 10.1111/j.1440-1843.2012.02262.x
   Taulavuori A, 2004, INFORM SOFTWARE TECH, V46, P535, DOI 10.1016/j.infsof.2003.10.004
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Tizzei LP, 2011, INFORM SOFTWARE TECH, V53, P121, DOI 10.1016/j.infsof.2010.08.007
   Trinidad P, 2008, J SYST SOFTWARE, V81, P883, DOI 10.1016/j.jss.2007.10.030
   Trujillo S, 2007, PROC INT CONF SOFTW, P44
   TURNER WA, 1991, SCIENTOMETRICS, V22, P139, DOI 10.1007/BF02019279
   Ullah MI, 2010, J SYST SOFTWARE, V83, P2496, DOI 10.1016/j.jss.2010.07.049
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
   Van Eck NJ, 2007, INT J UNCERTAIN FUZZ, V15, P625, DOI 10.1142/S0218488507004911
   van Eck NJ, 2009, J AM SOC INF SCI TEC, V60, P1635, DOI 10.1002/asi.21075
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   van Ommering R, 2005, IEEE T SOFTWARE ENG, V31, P537, DOI 10.1109/TSE.2005.84
   Vanclay JK, 2007, J AM SOC INF SCI TEC, V58, P1547, DOI 10.1002/asi.20616
   Vieira ES, 2009, SCIENTOMETRICS, V81, P587, DOI 10.1007/s11192-009-2178-0
   Vine R., 2006, J MED LIBR ASSOC, V94, P97, DOI [10.3163/1536-5050.98.4.016a, DOI 10.3163/1536-5050.98.4.016]
   Voelter M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P233, DOI 10.1109/SPLINE.2007.23
   White J, 2010, J SYST SOFTWARE, V83, P1094, DOI 10.1016/j.jss.2010.02.017
   White J, 2009, IEEE SOFTWARE, V26, P47, DOI 10.1109/MS.2009.95
   Zhang HY, 2003, LECT NOTES COMPUT SC, V2681, P681
   Zitt M, 2000, SCIENTOMETRICS, V47, P627, DOI 10.1023/A:1005632319799
   Zschaler S, 2010, LECT NOTES COMPUT SC, V5969, P82
NR 175
TC 59
Z9 60
U1 1
U2 34
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 1
EP 15
DI 10.1016/j.infsof.2015.11.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DX9HP
UT WOS:000384704500001
DA 2024-07-18
ER

PT J
AU Jabangwe, R
   Smite, D
   Hessbo, E
AF Jabangwe, Ronald
   Smite, Darja
   Hessbo, Emil
TI Distributed software development in an offshore outsourcing project: A
   case study of source code evolution and quality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Offshore outsourcing; Distributed development; Global software
   development; Software quality; Case study
ID METRICS; IMPACT
AB Context: Offshore outsourcing collaborations can result in distributed development, which has been linked to quality-related concerns. However, there are few studies that focus on the implication of distributed development on quality, and they report inconsistent findings using different proxies for quality. Thus, there is a need for more studies, as well as to identify useful proxies for certain distributed contexts. The presented empirical study was performed in a context that involved offshore outsourcing vendors in a multisite distributed development setting.
   Objective: The aim of the study is to investigate how quality changes during evolution in a distributed development environment that incurs organizational changes in terms of number of companies involved.
   Method: A case study approach is followed in the investigation. Only post-release defects are used as a proxy for external quality due to unreliable defect data found pre-release such as those reported during integration. Focus group meetings were also held with practitioners.
   Results: The results suggest that practices that can be grouped into product, people, and process categories can help ensure post-release quality. However, post-release defects are insufficient for showing a conclusive impact on quality of the development setting. This is because the development teams worked independently as isolated distributed teams, and integration defects would help to better reflect on the impact on quality of the development setting.
   Conclusions: The mitigation practices identified can be useful information to practitioners that are planning to engage in similar globally distributed development projects. Finally, it is important to take into consideration the arrangement of distributed development teams in global projects, and to use the context to identify appropriate proxies for quality in order to draw correct conclusions about the implications of the context. This would help with providing practitioners with well-founded findings about the impact on quality of globally distributed development settings. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Jabangwe, Ronald] Dundalk Inst Technol, Regulated Software Res Ctr, Lero, Dundalk, Ireland.
   [Jabangwe, Ronald; Smite, Darja] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
   [Hessbo, Emil] HCL Technol, Vaxjo, Sweden.
C3 Dundalk Institute of Technology; Blekinge Institute Technology
RP Jabangwe, R (corresponding author), Dundalk Inst Technol, Regulated Software Res Ctr, Lero, Dundalk, Ireland.; Jabangwe, R (corresponding author), Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
EM ronald.jabangwe@bth.se; darja.smite@bth.se; emil.hessbo@gmail.com
RI Jabangwe, Ronald/P-1049-2018
OI Jabangwe, Ronald/0000-0002-2305-6352
FU Swedish Knowledge Foundation in Sweden [20120200]; Ericsson Software
   Research
FX This research work is partially supported by the Swedish Knowledge
   Foundation in Sweden under the grant 20120200 (2013-2016) and Ericsson
   Software Research.
CR Ali S, 2014, INT CONF GLOBAL SOFT, P153, DOI 10.1109/ICGSE.2014.12
   Alsudairi M, 2010, J ENTERP INF MANAG, V23, P215, DOI 10.1108/17410391011019787
   Nguyen-Duc A, 2015, INFORM SOFTWARE TECH, V57, P277, DOI 10.1016/j.infsof.2014.06.002
   [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2011, REAL WORLD RES
   [Anonymous], 2010, P 2010 ACM IEEE INT
   Babar MA, 2007, J SYST SOFTWARE, V80, P1438, DOI [10.1016/j.jss.2006.10.038, 10.1016/j.jss.2006.12.038]
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Bird Christian, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P237, DOI 10.1109/MSR.2012.6224286
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, COMMUN ACM, V52, P85, DOI 10.1145/1536616.1536639
   Carmel E., OFFSHORING INFORM TE
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Colomo-Palacios R, 2014, SOFTWARE QUAL J, V22, P3, DOI 10.1007/s11219-012-9191-x
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Dibbern J, 2008, MIS QUART, V32, P333
   El-Emam K., ADV SOFTWARE ENG, P23
   Fabriek M., 2008, ECIS, P446
   Gomes V., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P154, DOI 10.1109/ICGSE.2012.43
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herraiz I., 2010, Making Software: What Really Works, and Why We Believe It, P125
   Iacovou CL, 2008, COMMUN ACM, V51, P89, DOI 10.1145/1349026.1349044
   ISO/IEC, 2010, Technical report
   ISO. IEC IEEE, 2010, 247652010E ISO IEC I, P410
   Jabangwe R., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P41, DOI 10.1109/ICGSE.2012.30
   Jabangwe R., 2014, SOFTW QUAL J, P1
   Jabangwe R, 2013, ASIA PAC SOFWR ENG, P289, DOI 10.1109/APSEC.2013.47
   Jahangwe R., 2015, EMPIR SOFTW ENG, V20, P1
   Kannabiran G, 2011, INFORM SOFTWARE TECH, V53, P1199, DOI 10.1016/j.infsof.2011.05.001
   Khan SU, 2009, INT CONF GLOBAL SOFT, P207, DOI 10.1109/ICGSE.2009.28
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Lacity Mary C., 2008, Strategic Outsourcing, V1, P13, DOI 10.1108/17538290810857457
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Moe N.B., 2014, EMPIR SOFTW ENG, P1
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nurdiani I., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P36, DOI 10.1109/ICGSE-W.2011.16
   Oshri I., 2011, HDB GLOBAL OUTSOURCI, VSecond
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pfannenstein LL, 2004, INFORM SYST MANAGE, V21, P72, DOI 10.1201/1078/44705.21.4.20040901/84190.9
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Ramasubbu Narayan., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P125
   Raza B, 2013, ENASE: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P85, DOI 10.5220/0004444700850096
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Rottman JW, 2006, MIT SLOAN MANAGE REV, V47, P56
   Schaaf J., 2004, DTSCH BANK RES E CON, V45
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Smite D., SOFTWARE PROJECT MAN, P301
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Smite D, 2013, J SYST SOFTWARE, V86, P1054, DOI 10.1016/j.jss.2012.10.003
   Smite D, 2011, IEEE SOFTWARE, V28, P60, DOI 10.1109/MS.2010.112
   Spinellis D., 2006, GSD 06, P73
   Sutherland J., 2009, HR Wallingford Report TR173, P1
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Wieringa R.J., 2013, P 25 INT C ADV INFOR, pxii
   Winkler JK, 2008, INFORM SYST FRONT, V10, P243, DOI 10.1007/s10796-008-9068-5
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
NR 62
TC 10
Z9 13
U1 0
U2 9
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 125
EP 136
DI 10.1016/j.infsof.2015.12.005
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Blincoe, K
   Sheoran, J
   Goggins, S
   Petakovic, E
   Damian, D
AF Blincoe, Kelly
   Sheoran, Jyoti
   Goggins, Sean
   Petakovic, Eva
   Damian, Daniela
TI Understanding the popular users: Following, affiliation influence and
   leadership on GitHub
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE GitHub; Open source software; Social computing; Following; Influence;
   Leadership
ID SOURCE SOFTWARE-DEVELOPMENT
AB Context: the ability to follow other users and projects on GitHub has introduced a new layer of open source software development participants who observe but do not contribute to projects. It has not been fully explored how following others influences the actions of GitHub users. Objective: this paper studies the motivation behind following (or not following) others and the influence of popular users on their followers. Method: a mixed methods research approach was used including a survey of 800 GitHub users to uncover the reasons for following on GitHub and a complementary quantitative analysis of the activity of GitHub users to examine influence. Our quantitative analysis studied 199 popular (most followed) users and their followers. Results: we found that popular users do influence their followers by guiding them to new projects. As a user's popularity increases, so does their rate of influence, yet the same is not true for a popular user's rate of contribution. Conclusions: these results indicate that a new type of leadership is emerging through GitHub's following feature and popularity can be more important than contribution in influencing others. We discuss implications of popularity and influence and their impact on social structure and leadership on OSS projects. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Blincoe, Kelly] Auckland Univ Technol, Auckland, New Zealand.
   [Sheoran, Jyoti; Damian, Daniela] Univ Victoria, Victoria, BC V8W 2Y2, Canada.
   [Goggins, Sean; Petakovic, Eva] Univ Missouri, Columbia, MO 65211 USA.
C3 Auckland University of Technology; University of Victoria; University of
   Missouri System; University of Missouri Columbia
RP Blincoe, K (corresponding author), Auckland Univ Technol, Auckland, New Zealand.
EM kblincoe@acm.org
RI Blincoe, Kelly/AAI-6285-2020; Goggins, Sean/ABG-9196-2020
OI Goggins, Sean/0000-0002-4331-147X; Blincoe, Kelly/0000-0003-4092-9706
FU Natural Sciences and Engineering Research Council of Canada, NECSIS
   Automotive; General Motors; IBM Canada; Malina Software Corp; NSF [VOSS
   OCI-1221254]; Direct For Computer & Info Scie & Enginr; Office of
   Advanced Cyberinfrastructure (OAC) [1422982] Funding Source: National
   Science Foundation
FX This work was partially supported by the Natural Sciences and
   Engineering Research Council of Canada, as part of the NECSIS Automotive
   Partnership with General Motors, IBM Canada, and Malina Software Corp
   and the grant NSF and NSF VOSS OCI-1221254. The authors would like to
   thank the survey participants for the time they dedicated to this study.
CR Amrit C, 2014, INFORM SOFTWARE TECH, V56, P1537, DOI 10.1016/j.infsof.2014.07.006
   [Anonymous], 2014, BASICS QUALITATIVE R
   [Anonymous], 2013, P 16 C COMP SUPP COO
   [Anonymous], 2005, 1 MONDAY
   [Anonymous], 2000, Community Building on the Web
   ANSCOMBE FJ, 1973, AM STAT, V27, P17, DOI 10.2307/2682899
   Bakshy E., 2011, P 4 ACM INT C WEB SE, P65
   Bond RM, 2012, NATURE, V489, P295, DOI 10.1038/nature11421
   Cha  M., 2010, ICWSM, P10
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   FERSHTMAN C, 2004, DETERMINANTS OUTPUT
   Fielding RT, 1999, COMMUN ACM, V42, P42, DOI 10.1145/299157.299167
   Fisher R.A., 1949, Statistical tables for biological, agricultural and medical research, V3
   German Daniel., 2003, In Proceedings of the 3rd Workshop on Open Source Software Engineering, P63
   Giuri P., 2005, P DRUID 10 ANN SUMM, P27
   Goggins S, 2014, AM BEHAV SCI, V58, P1376, DOI 10.1177/0002764214527093
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Krippendorff K., 2012, Content analysis
   Kuan J.W., 2001, Open Source Software as Consumer Integration Into Production
   Lee M.J., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems, P133
   Long Y, 2007, J DATABASE MANAGE, V18, P25, DOI 10.4018/jdm.2007040102
   Michlmayr Martin, 2009, UPGRADE: The European Journal for the Informatics Professional, V10, P22
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moon J.Y., 2002, DISTRIBUTED WORK, P381
   Sack W., 2006, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V15, P229, DOI 10.1007/s10606-006-9020-5
   Scacchi W, 2004, IEEE SOFTWARE, V21, P59, DOI 10.1109/MS.2004.1259221
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Yu Y., 2014, P 1 INT WORKSH CROWD, P31
   Zhang W., 2001, AMCIS 2001 Proceedings, P117
NR 32
TC 59
Z9 69
U1 1
U2 32
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 30
EP 39
DI 10.1016/j.infsof.2015.10.002
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhang, W
   Wang, S
   Wang, Q
AF Zhang, Wen
   Wang, Song
   Wang, Qing
TI KSAP: An approach to bug report assignment using KNN search and
   heterogeneous proximity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug report assignment; Heterogeneous network; Heterogeneous proximity;
   Developer recommendation
AB Context: Bug report assignment, namely, to assign new bug reports to developers for timely and effective bug resolution, is crucial for software quality assurance. However, with the increasing size of software system, it is difficult to assign bugs to appropriate developers for bug managers.
   Objective: This paper propose an approach, called KSAP (K-nearest-neighbor search and heterogeneous proximity), to improve automatic bug report assignment by using historical bug reports and heterogeneous network of bug repository.
   Method: When a new bug report was submitted to the bug repository, KSAP assigns developers for the bug report by using a two-phase procedure. The first phase is to search historically-resolved similar bug reports to the new bug report by K-nearest-neighbor (KNN) method. The second phase is to rank the developers who contributed to those similar bug reports by heterogeneous proximity.
   Results: We collected bug repositories of Mozilla, Eclipse, Apache Ant and Apache Tomcat6 projects to investigate the performance of the proposed KSAP approach. Experimental results demonstrate that KSAP can improve the recall of bug report assignment between 7.5-32.25% in comparison with the state of art techniques. When there is only a small number of developer collaborations on common bug reports, KSAP has shown its excellence over other sate of art techniques. When we tune the parameters of the number of historically-resolved similar bug reports (K) and the number of developers (Q) for recommendation, KSAP keeps its superiority steadily.
   Conclusion: This is the first paper to demonstrate how to automatically build heterogeneous network of a bug repository and extract meta-paths of developer collaborations from the heterogeneous network for bug report assignment. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Zhang, Wen] Beijing Univ Chem Technol, Sch Econ & Management, Beijing 100019, Peoples R China.
   [Wang, Song] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Wang, Qing] Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing 100190, Peoples R China.
C3 Beijing University of Chemical Technology; University of Waterloo;
   Chinese Academy of Sciences; Institute of Software, CAS
RP Zhang, W (corresponding author), Beijing Univ Chem Technol, Sch Econ & Management, Beijing 100019, Peoples R China.
EM zhangwen@mail.buct.edu.cn; wangsong@uwaterloo.ca; wq@itech.iscas.ac.cn
RI wang, qi/ITT-9652-2023
FU National Natural Science Foundation of China [71101138, 61379046,
   61432001]; Beijing Natural Science Fund [4122087]; Fundamental Research
   Fund for the Central Universities in BUCT
FX This work is supported by the National Natural Science Foundation of
   China under Grant nos 71101138, 61379046 and 61432001; the Beijing
   Natural Science Fund under Grant no. 4122087; the Fundamental Research
   Fund for the Central Universities in BUCT. We would like to appreciate
   the reviewers' comments to improve the paper as well as the help of Ms.
   Mary Ann Mooradian to proofread the paper.
CR ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2012, SYNTHESIS LECT DATA
   [Anonymous], 2006, P ACM C KNOWLEDGE DI
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume
   [Anonymous], 2012, P 2 INT WORKSH EVID
   Anvik J., 2006, 28th International Conference on Software Engineering Proceedings, P937, DOI 10.1145/1134285.1134457
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bird Christian, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P237, DOI 10.1109/MSR.2012.6224286
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bird Christian, 2006, P 2006 INT WORKSH MI
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hopcroft J, 2004, P NATL ACAD SCI USA, V101, P5249, DOI 10.1073/pnas.0307750100
   Jeong G., 2009, Proceedings of the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering. ESEC/FSE'09, P111, DOI DOI 10.1145/1595696.1595715
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Pinzger M., 2008, P ACM SIGSOFT INT S
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Shimon E., 2011, Graph Algorithms, V2nd
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Singh PV, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824763
   Song Wang, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P193, DOI 10.1109/ESEM.2013.24
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Tao Zhang, 2012, Intelligent Computing Technology. Proceedings 8th International Conference, ICIC 2012, P505, DOI 10.1007/978-3-642-31588-6_65
   Turpin A., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P11, DOI 10.1145/1148170.1148176
   Wang S., 2014, P 25 ACM IEEE INT S
   Widmer G, 1996, MACH LEARN, V23, P69, DOI 10.1023/A:1018046501280
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   woo Park J., P AAAI 11
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Zhang ML, 2007, PATTERN RECOGN, V40, P2038, DOI 10.1016/j.patcog.2006.12.019
   Zhang W, 2013, INT CONF CLOUD SERV, P98, DOI 10.1109/CSC.2013.23
   Zhang W, 2011, EXPERT SYST APPL, V38, P2758, DOI 10.1016/j.eswa.2010.08.066
   Zhang Wen, 2011, P INT WORKSH PRINC S, P71
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 42
TC 36
Z9 41
U1 2
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 68
EP 84
DI 10.1016/j.infsof.2015.10.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600006
DA 2024-07-18
ER

PT J
AU Al Dallal, J
AF Al Dallal, Jehad
TI Identifying refactoring opportunities in object-oriented code: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Refactoring activity; Refactoring opportunity; Systematic literature
   review
ID COMMUNITY DETECTION; IDENTIFICATION; AGREEMENT; SUPPORT
AB Context: Identifying refactoring opportunities in object-oriented code is an important stage that precedes the actual refactoring process. Several techniques have been proposed in the literature to identify opportunities for various refactoring activities.
   Objective: This paper provides a systematic literature review of existing studies identifying opportunities for code refactoring activities.
   Method: We performed an automatic search of the relevant digital libraries for potentially relevant studies published through the end of 2013, performed pilot and author-based searches, and selected 47 primary studies (PSs) based on inclusion and exclusion criteria. The PSs were analyzed based on a number of criteria, including the refactoring activities, the approaches to refactoring opportunity identification, the empirical evaluation approaches, and the data sets used.
   Results: The results indicate that research in the area of identifying refactoring opportunities is highly active. Most of the studies have been performed by academic researchers using nonindustrial data sets. Extract Class and Move Method were found to be the most frequently considered refactoring activities. The results show that researchers use six primary existing approaches to identify refactoring opportunities and six approaches to empirically evaluate the identification techniques. Most of the systems used in the evaluation process were open-source, which helps to make the studies repeatable. However, a relatively high percentage of the data sets used in the empirical evaluations were small, which limits the generality of the results.
   Conclusions: It would be beneficial to perform further studies that consider more refactoring activities, involve researchers from industry, and use large-scale and industrial-based systems. (C) 2014 Elsevier B.V. All rights reserved.
C1 Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University Research [QI03/13]
FX The author would like to acknowledge the support of this work by Kuwait
   University Research Grant QI03/13. In addition, the author would like to
   thank Anas Abdin for assisting in collecting and analyzing the required
   data.
CR Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P1125, DOI 10.1016/j.infsof.2012.04.004
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Alkhalid A, 2011, IET SOFTW, V5, P274, DOI 10.1049/iet-sen.2010.0070
   Alkhalid A, 2011, J RES PRACT INF TECH, V43, P285
   Alkhalid A, 2010, ADV ENG SOFTW, V41, P1160, DOI 10.1016/j.advengsoft.2010.08.002
   [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], ACSC 07 P 30 AUSTR C
   [Anonymous], THESIS U FEDERAL RIO
   Bavota G., 2013, IEEE T SOFTWARE ENG
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bavota Gabriele., 2010, Proceedings of the IEEE International Conference on Software Maintenance ICSM, P1
   Bavota Gabriele, 2013, EMPIR SOFTW ENG, V19, P1
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cassell K., 2011, P 23 INT C SOFTW ENG
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Czibula Istvan Gergely, 2008, WSEAS Transactions on Electronics, V5, P291
   Czibula IG, 2006, INT J COMPUT SCI NET, V6, P40
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Fokaefs M, 2007, PROC IEEE INT CONF S, P467
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fokaefs M, 2009, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2009.5306332
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   HIGO Y, 2004, P 8 IASTED INT C SOF, P222
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hotta K, 2012, EUR CON SFTWR MTNCE, P53, DOI 10.1109/CSMR.2012.16
   Kanemitsu T., 2011, PROC 4 WORKSHOP REFA, P8
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kimura S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P575, DOI 10.1109/ICSM.2012.6405324
   Kitchenham B., 2007, GUIDELINE PERFORMING
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Liu H, 2013, AUTOMAT SOFTW ENG, V20, P81, DOI 10.1007/s10515-012-0100-0
   Mahouachi R, 2012, LECT NOTES COMPUT SC, V7212, P455, DOI 10.1007/978-3-642-28872-2_31
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P39, DOI 10.1109/IWPSE.2003.1231207
   Misbhauddin M., 2013, EMPIR SOFTW ENG, P1
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Pan WF, 2013, INT J MODEL IDENTIF, V18, P182, DOI 10.1504/IJMIC.2013.052300
   Pan WF, 2013, INT J AUTOM COMPUT, V10, P157, DOI 10.1007/s11633-013-0708-y
   Pan WF, 2013, INT J COMPUT APPL T, V48, P185
   Pan WF, 2009, FRONT COMPUT SCI CHI, V3, P396, DOI [10.1007/s11704-009-0054-v, 10.1007/s11704-009-0054-y]
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rao AA., 2011, INT J COMPUT SCI ISS, V8, P185
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Serban G., 2007, 22nd Int. Symp. on Computer and Information Sciences (ISCIS), P1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Tairas R, 2012, INFORM SOFTWARE TECH, V54, P1297, DOI 10.1016/j.infsof.2012.06.011
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tsantalis N, 2009, EUR CON SFTWR MTNCE, P119, DOI 10.1109/CSMR.2009.23
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Wangberg RD, 2010, THESIS U OSLO
   Yang LM, 2009, ASIA PAC SOFWR ENG, P43, DOI 10.1109/APSEC.2009.20
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zhao L, 2006, 2 INT PROMISE WORKSH
NR 64
TC 63
Z9 71
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 231
EP 249
DI 10.1016/j.infsof.2014.08.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800013
DA 2024-07-18
ER

PT J
AU Fernández-Sáez, AM
   Genero, M
   Chaudron, MRV
   Caivano, D
   Ramos, I
AF Fernandez-Saez, Ana M.
   Genero, Marcela
   Chaudron, Michel R. V.
   Caivano, Danilo
   Ramos, Isabel
TI Are Forward Designed or Reverse-Engineered UML diagrams more helpful for
   code maintenance?: A family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Evaluation and Assessment in software
   Engineering
CY APR 14-16, 2013
CL Porto de Galinhas, BRAZIL
DE Software maintenance; UML diagrams; Reverse Engineering;
   Maintainability; Family of experiments; Controlled experiment
ID SOFTWARE; IMPACT; KNOWLEDGE; QUALITY
AB Context: Although various success stories of model-based approaches are reported in literature, there is still a significant resistance to model-based development in many software organizations because the UML is perceived to be expensive and not necessarily cost-effective. It is also important to gather empirical evidence in which context and under which conditions the UML makes or does not make a practical difference.
   Objective: Our objective is to provide empirical evidence as to which UML diagrams are more helpful during software maintenance: Forward Designed (FD) UML diagrams or Reverse Engineered (RE) UML diagrams. Method: We carried out a family of experiments which consisted of one experiment and two replications with a total of 169 Computer Science undergraduate students.
   Results: The individual data analysis and the meta-analysis conducted on the whole family, show a tendency in favor of FD diagrams and are significantly different as regards the effectiveness and efficiency of the subjects who participated and played the role of maintainers. The analysis of the qualitative data, collected using a post-experiment survey, reveals that the subjects did not consider RE diagrams helpful.
   Conclusions: Our findings show that there are some objective results (descriptive statistics or statistical tests) related to the maintenance effectiveness and efficiency in favor of the use of FD UML diagrams during software maintenance. Subjective opinions also lead us to recommend the use of UML diagrams (especially class diagrams) created during the design phase for software maintenance because they improve the understanding of the system in comparison with RE diagrams. Nevertheless, we can only assume that these results are valid in the context of Computer Science undergraduate students when working with small systems related to well-known domains, and other contexts should be explored in order to reaffirm the results in an industrial context by carrying out replications with professionals. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Fernandez-Saez, Ana M.; Genero, Marcela] Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, ALARCOS Res Grp, E-13071 Ciudad Real, Spain.
   [Chaudron, Michel R. V.] Chalmers Univ Technol, Joint Comp Sci & Engn Dept, Gothenburg, Sweden.
   [Chaudron, Michel R. V.] Univ Gothenburg, Gothenburg, Sweden.
   [Caivano, Danilo] Univ Bari, Dept Informat, I-70121 Bari, Italy.
   [Ramos, Isabel] Univ Seville, Dept Lenguajes & Sistemas Informat, Seville, Spain.
C3 Universidad de Castilla-La Mancha; Chalmers University of Technology;
   University of Gothenburg; Universita degli Studi di Bari Aldo Moro;
   University of Sevilla
RP Fernández-Sáez, AM (corresponding author), Univ Castilla La Mancha, Inst Tecnol & Sistemas Informac, ALARCOS Res Grp, E-13071 Ciudad Real, Spain.
EM ana.fernandez@alarcosqualitycenter.com; Marcela.Genero@uclm.es;
   chaudron@chalmers.se; caivano@di.uniba.it; iramos@us.es
RI Fernández-Sáez, Ana Maria/AAS-8299-2021; GENERO, MARCELA/L-6480-2014;
   Ramos Roman, Isabel/U-7827-2017
OI Fernández-Sáez, Ana Maria/0000-0001-5768-1650; Chaudron,
   Michel/0000-0001-7517-6666; GENERO, MARCELA/0000-0002-6868-7465; Ramos
   Roman, Isabel/0000-0002-9201-0673; Caivano, Danilo/0000-0001-5719-7447
FU GEODAS-BC Project (Ministerio de Economia y Competitividad and Fondo
   Europeo de Desarrollo Regional FEDER) [TIN2012-37493-C03-01]
FX This research has been funded by the GEODAS-BC Project (Ministerio de
   Economia y Competitividad and Fondo Europeo de Desarrollo Regional
   FEDER, TIN2012-37493-C03-01). The authors would like to thank the
   students who have cooperated in the experiments.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], UN MOD LANG DOC ASS
   [Anonymous], 2013, P 17 INT C EV ASS SO
   [Anonymous], SPSS 12 0 SYNT REF G
   [Anonymous], P INT WORKSH MOD SOF
   [Anonymous], P 2012 INT C MOD SOF
   [Anonymous], P EXP EMP STUD SOFTW
   [Anonymous], COMPR MET V2
   [Anonymous], 147641999 ISOIEC
   [Anonymous], P EXP EMP STUD SOFTW
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Devore J., 1999, APPL STAT ENG SCI
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Erickson J, 2007, COMMUN ACM, V50, P46, DOI 10.1145/1278201.1278205
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Genero M, 2011, J DATABASE MANAGE, V22, P46, DOI 10.4018/jdm.2011070103
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Hedges LV., 2014, STAT METHODS META AN
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jedlitschka A., 2008, Guide to Advanced Empirical Software Engineering
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Karahasanovic A., 2007, Proc. Ninth Australas. Conf. Comput. Educ., V66, P81
   Kirk R.E., 1995, EXPT DESIGN, V3rd
   Nugroho Ariadi, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P467
   Nugroho A, 2009, LECT NOTES COMPUT SC, V5795, P181, DOI 10.1007/978-3-642-04425-0_14
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Pérez-Castillo R, 2011, IEEE SOFTWARE, V28, P13, DOI 10.1109/MS.2011.145
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Popper K., 2005, The logic of scientific discovery
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Scanniello G, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P141
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   Tryggeseth E., 1997, Empirical Software Engineering, V2, P201, DOI 10.1023/A:1009778023863
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Verelst J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
NR 51
TC 26
Z9 27
U1 0
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 644
EP 663
DI 10.1016/j.infsof.2014.05.014
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA AU9YI
UT WOS:000345947500036
OA Green Published
DA 2024-07-18
ER

PT J
AU Fu, Y
   Yan, M
   Zhang, XH
   Xu, L
   Yang, D
   Kymer, JD
AF Fu, Ying
   Yan, Meng
   Zhang, Xiaohong
   Xu, Ling
   Yang, Dan
   Kymer, Jeffrey D.
TI Automated classification of software change messages by semi-supervised
   Latent Dirichlet Allocation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software repositories mining; Semi-supervised topic modeling; LDA;
   Change message
ID MODEL
AB Context: Topic models such as probabilistic Latent Semantic Analysis (pLSA) and Latent Dirichlet Allocation (LDA) have demonstrated success in mining software repository tasks. Understanding software change messages described by the unstructured nature-language text is one of the fundamental challenges in mining these messages in repositories.
   Objective: We seek to present a novel automatic change message classification method characterized by semi-supervised topic semantic analysis.
   Method: In this work, we present a semi-supervised LDA based approach, to automatically classify change messages. We use domain knowledge of software changes to make labeled samples which are added to build the semi-supervised LDA model. Next, we verify the cross-project analysis application of our method on three open-source projects. Our method has two advantages over existing software change classification methods: First of all, it mitigates the issue of how to set the appropriate number of latent topics. We do not have to choose the number of latent topics in our method, because it corresponds to the number of class labels. Second, this approach utilizes the information provided by the label samples in the training set.
   Results: Our method automatically classified about 85% of the change messages in our experiment and our validation survey showed that 70.56% of the time our automatic classification results were in agreement with developer opinions.
   Conclusion: Our approach automatically classifies most of the change messages which record the cause of the software change and the method is applicable to cross-project analysis of software change messages. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Zhang, Xiaohong] Minist Educ, Key Lab, Cyber Phys Soc, Dependable Serv Comp, Chongqing 400044, Peoples R China.
   [Fu, Ying; Yan, Meng; Zhang, Xiaohong; Xu, Ling; Yang, Dan; Kymer, Jeffrey D.] Chongqing Univ, Sch Software Engn, Chongqing 401331, Peoples R China.
C3 Chongqing University
RP Zhang, XH (corresponding author), Chongqing Univ, Sch Software Engn, Chongqing 401331, Peoples R China.
EM xhongz@cqu.edu.cn
RI Fu, Ying/HMD-6838-2023; YANG, Dan/HHD-2733-2022; Yan,
   Meng/AAH-6762-2019; Zhang, Xiaohong/A-3060-2015; Fu, Ying/HKF-7270-2023
OI Yan, Meng/0000-0002-9538-9121
FU National Natural Science Key Foundation [91118005]; National Natural
   Science Foundation of China [61173131]; Natural Science Foundation of
   Chongqing [CSTS2010BB2061]; Program for Changjiang Scholars and
   Innovative Research Team in University [IRT1196]; Fundamental Research
   Funds for the Central Universities [CDJZR12098801, CDJZR11095501]
FX The work described in this paper was partially supported by the National
   Natural Science Key Foundation (Grant No. 91118005), the National
   Natural Science Foundation of China (Grant No. 61173131), the Natural
   Science Foundation of Chongqing (Grant No. CSTS2010BB2061), Program for
   Changjiang Scholars and Innovative Research Team in University (Grant
   No. IRT1196) and the Fundamental Research Funds for the Central
   Universities (Grant Nos. CDJZR12098801 and CDJZR11095501).
CR [Anonymous], [No title captured]
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Blei D., 2006, ADV NEURAL INFORM PR
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Briand L., 1992, PROCEEDING C SOFTWAR, P328
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   Dumais S., 1995, P TEXT RETR C 1999 T, P219
   Grant S, 2012, EUR CON SFTWR MTNCE, P403, DOI 10.1109/CSMR.2012.51
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   HASSAN AE, 2008, P INT C ACM S APPL C, P837
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hofmann T, 2001, MACH LEARN, V42, P177, DOI 10.1023/A:1007617005950
   Klein D., 2002, Tech. rep., P307
   Kothari J, 2006, INT C PROGRAM COMPRE, P46, DOI 10.1109/ICPC.2006.44
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Lu Y., 2008, Proceedings of the 17th international conference on World Wide Web, P121
   Mauczka A, 2012, LECT NOTES COMPUT SC, V7212, P301, DOI 10.1007/978-3-642-28872-2_21
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nguyen A. T., 2012, P ACM SIGSOFT 20 INT, P63
   Pollock L., 2013, Software Engineering, P94, DOI DOI 10.1007/978-3-642-36054-14
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Sureka A, 2011, ASIA PAC SOFWR ENG, P146, DOI [10.1109/APSEC.2011.12, 10.1109/APSC.2011.12]
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Wallach H.M., 2009, P 26 ANN INT C MACH, P1105, DOI DOI 10.1145/1553374.1553515
   Wu MS, 2010, INT CONF ACOUST SPEE, P5346, DOI 10.1109/ICASSP.2010.5494947
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 37
TC 47
Z9 50
U1 1
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 369
EP 377
DI 10.1016/j.infsof.2014.05.017
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500021
DA 2024-07-18
ER

PT J
AU Oriol, M
   Marco, J
   Franch, X
AF Oriol, Marc
   Marco, Jordi
   Franch, Xavier
TI Quality models for web services: A systematic mapping
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality model; Quality of service; Web service; Systematic mapping
ID FRAMEWORK; SELECTION; ALGORITHM; ONTOLOGY
AB Context: Quality of Service (QoS) is a major issue in various web service related activities. Quality models have been proposed as the engineering artefact to provide a common framework of understanding for QoS, by defining the quality factors that apply to web service usage.
   Objective: The goal of this study is to evaluate the current state of the art of the proposed quality models for web services, specifically: (1) which are these proposals and how are they related; (2) what are their structural characteristics; (3) what quality factors are the most and least addressed; and (4) what are their most consolidated definitions.
   Method: We have conducted a systematic mapping by defining a robust protocol that combines automatic and manual searches from different sources. We used a rigorous method to elicitate the keywords from the research questions and a selection criteria to retrieve the final papers to evaluate. We have adopted the ISO/IEC 25010 standard to articulate our analysis.
   Results: We have evaluated 47 different quality models from 65 papers that fulfilled the selection criteria. By analyzing in depth these quality models, we have: (1) distributed the proposals along the time dimension and identified their relationships; (2) analyzed their size (visualizing the number of nodes and levels) and definition coverage (as indicator of quality of the proposals); (3) quantified the coverage of the different ISO/IEC 25010 quality factors by the proposals; (4) identified the quality factors that appeared in at least 30% of the surveyed proposals and provided the most consolidated definitions for them.
   Conclusions: We believe that this panoramic view on the anatomy of the quality models for web services may be a good reference for prospective researchers and practitioners in the field and especially may help avoiding the definition of new proposals that do not align with current research. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Oriol, Marc; Marco, Jordi; Franch, Xavier] Univ Politecn Cataluna, BarcelonaTech, ESSI UPC, ES-08034 Barcelona, Spain.
C3 Universitat Politecnica de Catalunya
RP Oriol, M (corresponding author), Univ Politecn Cataluna, BarcelonaTech, ESSI UPC, C Jordi Girona 1-3,Omega Bldg S-206, ES-08034 Barcelona, Spain.
EM moriol@lsi.upc.edu; jmarco@lsi.upc.edu; franch@essi.upc.edu
RI Marco, Jordi/AAA-7309-2021; Oriol, Marc/ABG-2260-2020; Franch,
   Xavier/A-8588-2008
OI Marco, Jordi/0000-0002-0078-7929; Oriol, Marc/0000-0003-1928-7024;
   Franch, Xavier/0000-0001-9733-8830
FU  [TIN2010-19130-C02-01]
FX This work has been supported by the project TIN2010-19130-C02-01.
CR Ab Rahman WNW, 2012, INNOVATION AND SUSTAINABLE COMPETITIVE ADVANTAGE: FROM REGIONAL DEVELOPMENT TO WORLD ECONOMIES, VOLS 1-5, P509
   Abramowicz W, 2008, LECT NOTES ENG COMP, P827
   Al-Masri E, 2009, IEEE SYS MAN CYBERN, P3714, DOI 10.1109/ICSMC.2009.5346882
   Al-Masri E, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P202, DOI 10.1109/SCC.2009.60
   Alonso G., 2004, Web Services
   Ameller D, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P224, DOI 10.1109/ICCBSS.2008.13
   [Anonymous], APPENDIX QUALITY MOD
   [Anonymous], P 2 BANG ANN COMP C
   [Anonymous], D325 BREIN
   [Anonymous], 25 W3C
   [Anonymous], P 4 IEEE WORKSH SOFT
   [Anonymous], WORKSH QUAL SERV APP
   [Anonymous], 25010 ISO IEC
   [Anonymous], INT C INT TECHN APPL
   [Anonymous], WORKSH SERV MON AD M
   [Anonymous], SERV OR COMP ICSOC 2
   [Anonymous], 2012, WEB SERV QUAL FACT V
   [Anonymous], 2006 2 IEEE INT C E
   [Anonymous], 84021994 ISO IEC
   [Anonymous], WEB SERVICE MODELING
   [Anonymous], 13 IBIMA C
   [Anonymous], D2VL 4 WEB SERVICE M
   [Anonymous], P 20 INT C ADV INF N
   [Anonymous], 2012 6 INT C RES CHA
   [Anonymous], CD JRA 1 3 2 QUALITY
   [Anonymous], OASIS WS QUAL MOD TC
   [Anonymous], 2003, SIGECOM EXCH
   [Anonymous], 1991, 9126 ISO IEC
   Artaiam N, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P765, DOI 10.1109/SNPD.2008.157
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Balfagih Z, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT AND ENGINEERING, PROCEEDINGS, P287, DOI 10.1109/ICIME.2009.11
   Bocciarelli P, 2011, SOFTW SYST MODEL, V10, P265, DOI 10.1007/s10270-010-0150-3
   Burnstein Ilene., 2003, Practical Software Testing: A Process-Oriented Approach
   Carvallo J. P., 2006, 14th IEEE International Requirements Engineering Conference, P316
   Chang H, 2009, 2009 INTERNATIONAL CONFERENCE ON NEW TRENDS IN INFORMATION AND SERVICE SCIENCE (NISS 2009), VOLS 1 AND 2, P156, DOI 10.1109/NISS.2009.117
   Comuzzi M, 2009, ACM T WEB, V3, DOI 10.1145/1541822.1541825
   D'Ambrogio A, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P789
   Debnath N., 2011, 2011 11th International Conference on ITS Telecommunications (ITST), P640, DOI 10.1109/ITST.2011.6060134
   Dobson G, 2005, EUROMICRO-SEAA 2005: 31st EUROMICRO Conference on Software Engineering and Advanced Applications, Proceedings, P80
   Erl T., 2008, SOA: principles of service design, V1
   Garcia D.Z. G., 2006, Proceedings of the 12th Brazilian Symposium on Multimedia and the web, P35
   Giallonardo E, 2007, IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED COMPUTING AND APPLICATIONS, PROCEEDINGS, P163, DOI 10.1109/SOCA.2007.30
   Institute of Electrical and Electronics, 1990, IEEE 610 12 1990
   Jiang S, 2006, LECT NOTES COMPUT SC, V4195, P159
   Jureta IJ, 2009, SOFTWARE QUAL J, V17, P65, DOI 10.1007/s11219-008-9059-2
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Lee Y, 2007, ALPIT 2007: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON ADVANCED LANGUAGE PROCESSING AND WEB INFORMATION TECHNOLOGY, P434, DOI 10.1109/ALPIT.2007.20
   Lee YK, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P91, DOI 10.1109/SERA.2007.114
   Li S., 2009, 2009 IEEE Power Energy Society General Meeting, P1, DOI [10.1049/cp.2009.0112, DOI 10.1109/IWISA.2009.5073068]
   Mani A, 2002, UNDERSTANDING QUALIT
   Maximilien EM, 2004, IEEE INTERNET COMPUT, V8, P84, DOI 10.1109/MIC.2004.27
   Mohanty R, 2010, EXPERT SYST APPL, V37, P5484, DOI 10.1016/j.eswa.2010.02.063
   Moser O, 2012, IEEE T SOFTWARE ENG, V38, P828, DOI 10.1109/TSE.2011.43
   Frutos HM, 2009, LECT NOTES COMPUT SC, V5554, P565, DOI 10.1007/978-3-642-02121-3_42
   Nadanam P., 2012, 2012 Third International Conference on Computing Communication Networking Technologies (ICCCNT), P1, DOI DOI 10.1109/ICCCNT.2012.6395991
   Pan ZD, 2010, J WEB ENG, V9, P186
   Patel C, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P480, DOI 10.1109/ICWS.2004.1314773
   Patel C, 2003, LECT NOTES COMPUT SC, V2736, P826
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Phalnikar R, 2012, PROCEEDINGS OF THE 2012 WORLD CONGRESS ON INFORMATION AND COMMUNICATION TECHNOLOGIES, P657, DOI 10.1109/WICT.2012.6409157
   Ren Kaijun, 2007, 2007 3rd International Conference on Semantics, Knowledge and Grid, P479, DOI 10.1109/SKG.2007.118
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Rosenberg F, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P205
   Soomro A, 2012, COMM COM INF SC, V281, P489
   Tong HX, 2009, KYBERNETES, V38, P513, DOI 10.1108/03684920910944236
   Tran VX, 2009, SIMUL MODEL PRACT TH, V17, P1378, DOI 10.1016/j.simpat.2009.06.010
   Tsesmetzis D., 2006, Advanced International Conference on Internet and Web Applications and Services (AICT-ICIW), P128
   Vuong Xuan Tran, 2008, 2008 IEEE International Symposium on Service-Oriented System Engineering, P233, DOI 10.1109/SOSE.2008.17
   Wang X, 2006, LECT NOTES COMPUT SC, V4294, P390
   Wei Y, 2010, IEEE INTERNET COMPUT, V14, P72, DOI 10.1109/MIC.2010.147
   Yang HT, 2010, COMPUT SCI TECH APPL, P1
   Yin BC, 2010, LECT NOTES COMPUT SC, V6335, P166
   Yin Baocai, 2010, 2010 IEEE International Conference on Software Engineering and Service Sciences (ICSESS 2010), P755, DOI 10.1109/ICSESS.2010.5552261
   Lee YK, 2007, SNPD 2007: EIGHTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, VOL 2, PROCEEDINGS, P429, DOI 10.1109/SNPD.2007.509
   Youngkon Lee, 2010, 2010 6th International Conference on Advanced Information Management and Service (IMS 2010), P509
   Youngkon Lee, 2007, 2007 International Conference on Convergence Information Technology - ICCIT '07, P1963
   Yu WD, 2007, SIMUL-T SOC MOD SIM, V83, P75, DOI 10.1177/0037549707079228
   YunHee Kang, 2007, 2007 International Conference on Future Generation Communication and Networking, P484
   Zhang S, 2010, INT CONF ADV COMMUN, P1351
NR 82
TC 33
Z9 37
U1 0
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2014
VL 56
IS 10
BP 1167
EP 1182
DI 10.1016/j.infsof.2014.03.012
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AN8JO
UT WOS:000340850700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yu, XD
   Petter, S
AF Yu, Xiaodan
   Petter, Stacie
TI Understanding agile software development practices using shared mental
   models theory
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Agile practices; Shared mental models
   theory; Extreme programming; Scrum
ID TEAM PERFORMANCE; DECISION-MAKING; CHALLENGES; PROJECT; IMPACT;
   INFORMATION; COMPLEXITY; XP
AB Context: Agile software development is an alternative software development methodology that originated from practice to encourage collaboration between developers and users, to leverage rapid development cycles, and to respond to changes in a dynamic environment. Although agile practices are widely used in organizations, academics call for more theoretical research to understand the value of agile software development methodologies.
   Objective: This study uses shared mental models theory as a lens to examine practices from agile software methodologies to understand how agile practices enable software development teams to work together to complete tasks and work together effectively as a team.
   Method: A conceptual analysis of specific agile practices was conducted using the lens of shared mental models theory. Three agile practices from Xtreme Programming and Scrum are examined in detail, system metaphor, stand-up meeting, and on-site customer, using shared mental models theory.
   Results: Examining agile practices using shared mental models theory elucidates how agile practices improve collaboration during the software development process. The results explain how agile practices contribute toward a shared understanding and enhanced collaboration within the software development team.
   Conclusions: This conceptual analysis demonstrates the value of agile practices in developing shared mental models (i.e. shared understanding) among developers and customers in software development teams. Some agile practices are useful in developing a shared understanding about the tasks to be completed, while other agile practices create shared mental models about team processes and team interactions. To elicit the desired outcomes of agile software development methods, software development teams should consider whether or not agile practices are used in a manner that enhances the team's shared understanding. Using three specific agile practices as examples, this research demonstrates how theory, such as shared mental models theory, can enhance our understanding regarding how agile practices are useful in enhancing collaboration in the workplace. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Yu, Xiaodan] Univ Int Business & Econ, Sch Informat Technol & Management, Beijing, Peoples R China.
   [Petter, Stacie] Univ Nebraska, Coll Informat Sci & Technol, Omaha, NE 68182 USA.
C3 University of International Business & Economics; University of Nebraska
   System
RP Yu, XD (corresponding author), Univ Int Business & Econ, Sch Informat Technol & Management, Boxue Bldg 1311,10 Huixin Dongjie, Beijing, Peoples R China.
EM yxd.xiaodanyu@gmail.com; spetter@unomaha.edu
OI Petter, Stacie/0000-0003-0522-3943
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Ambler S., 2010, How Agile Are You? 2010 Survey Results
   [Anonymous], P XP2002
   [Anonymous], HUM FACTORS
   [Anonymous], EXTREME PROGRAMMING
   [Anonymous], ITS NOT JUST STAND P
   [Anonymous], PREDICTS 2010 AGILE
   [Anonymous], M HUM FACT SOC ORL F
   [Anonymous], INT J COMPUT SCI
   [Anonymous], SCRIPT COMMANDERS IN
   [Anonymous], MAKING DECISIONS ASS
   [Anonymous], 2011 CHAOS REPORT
   Austin JR, 2003, J APPL PSYCHOL, V88, P866, DOI 10.1037/0021-9010.88.5.866
   Bach PM, 2010, J ASSOC INF SYST, V11, P902
   Barlow JB, 2011, COMMUN ASSOC INF SYS, V29
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Cannon-Bowers J.A., 1993, SHARED MENTAL MODELS
   CANNONBOWERS JA, 1993, INDIVIDUAL AND GROUP DECISION MAKING, P221
   Choi B, 2010, INFORM MANAGE-AMSTER, V47, P42, DOI 10.1016/j.im.2009.10.001
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Davis A, 2009, J ASSOC INF SYST, V10, P90, DOI 10.17705/1jais.00183
   DESANCTIS G, 1994, ORGAN SCI, V5, P121, DOI 10.1287/orsc.5.2.121
   Dinakar K., 2009, P 24 ACM SIGPLAN C C, P579
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Espevik R, 2011, J COGN ENG DECIS MAK, V5, P352, DOI 10.1177/1555343411424695
   Espinosa J., 2001, Shared Mental Models and Coordination in Large-Scale, P513
   Fan XC, 2011, IEEE T SYST MAN CY B, V41, P354, DOI 10.1109/TSMCB.2010.2053705
   Fruhling A, 2006, J MANAGE INFORM SYST, V22, P39, DOI 10.2753/MIS0742-1222220403
   Glass RL, 2006, COMMUN ACM, V49, P15, DOI 10.1145/1145287.1145301
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   Gurtner A, 2007, ORGAN BEHAV HUM DEC, V102, P127, DOI 10.1016/j.obhdp.2006.05.002
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Hsu JSC, 2011, INT J PROJ MANAG, V29, P1, DOI 10.1016/j.ijproman.2009.12.001
   Jo IH, 2012, EDUC TECHNOL SOC, V15, P289
   Johnson-Laird, 1986, MENTAL MODELS COGNIT
   JOHNSONLAIRD PN, 1980, COGNITIVE SCI, V4, P71, DOI 10.1207/s15516709cog0401_4
   Karlstrom D., 2002, Third International Conference on eXtreme Programming and Agile Processes in Software Engineering, P24
   KLEINMAN D.L., 1989, P INTERACTIVE NETWOR, P22
   Koskela J, 2004, LECT NOTES COMPUT SC, V3281, P1
   LARSON JR, 1994, J PERS SOC PSYCHOL, V67, P446, DOI 10.1037/0022-3514.67.3.446
   Lee G, 2010, MIS QUART, V34, P87
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Lim BC, 2006, J ORGAN BEHAV, V27, P403, DOI 10.1002/job.387
   Marks MA, 2000, J APPL PSYCHOL, V85, P971, DOI 10.1037//0021-9010.85.6.971
   Marks MA, 2002, J APPL PSYCHOL, V87, P3, DOI 10.1037//0021-9010.87.1.3
   Martin A, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P42
   Martin A, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P111, DOI 10.1007/978-3-642-12575-1_6
   Maruping LM, 2009, INFORM SYST RES, V20, P377, DOI 10.1287/isre.1090.0238
   McCauley R., 2001, SIGCSE Bulletin, V33, P14
   McComb SA, 2007, RES MULTI LEVEL ISS, V6, P95, DOI 10.1016/S1475-9144(07)06005-5
   McHugh O., 2011, Information Systems Development, V8, P503
   McHugh O., 2011, Scandinavian Journal of Information Systems, V23, P85
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Mohammed S, 2010, J MANAGE, V36, P876, DOI 10.1177/0149206309356804
   Orasanu J.M., 1990, Shared mental models and crew decision making
   Paasivaara Maria, 2008, Software Process: Improvement and Practice, V13, P527, DOI 10.1002/spip.402
   Persson JS, 2012, INFORM SYST J, V22, P411, DOI 10.1111/j.1365-2575.2011.00390.x
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Rai A, 2009, MIS QUART, V33, P617
   Ramesh B, 2012, INFORM SYST RES, V23, P323, DOI 10.1287/isre.1110.0351
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rentsch J.R., 2004, TEAM COGNITION, P11, DOI DOI 10.1037/10690-002
   ROUSE WB, 1992, IEEE T SYST MAN CYB, V22, P1296, DOI 10.1109/21.199457
   Schwaber K., 2001, Agile software development with scrum
   Sharp Jason H., 2011, Journal of Information Technology Management, V22, P56
   Smith-Jentsch KA, 2008, SMALL GR RES, V39, P303, DOI 10.1177/1046496408317794
   Stout RJ, 1999, HUM FACTORS, V41, P61, DOI 10.1518/001872099779577273
   Stray VG, 2011, LECT NOTES BUS INF P, V77, P146
   Van den Bossche P, 2011, INSTR SCI, V39, P283, DOI 10.1007/s11251-010-9128-3
   Vidgen R, 2009, INFORM SYST RES, V20, P355, DOI 10.1287/isre.1090.0237
   Vijayasarathy L, 2012, INFORM SOFTWARE TECH, V54, P137, DOI 10.1016/j.infsof.2011.08.003
   Volpe CE, 1996, HUM FACTORS, V38, P87, DOI 10.1518/001872096778940741
   Wake WilliamC., 2002, EXTREME PROGRAMMING
   Warner N., 2005, P HUMAN FACTORS ERGO, P269, DOI DOI 10.1177/154193120504900312
   West M.A., 1996, HDB WORK GROUP PSYCH, P555, DOI DOI 10.1080/00223980.2015.1050977
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Wood WA, 2003, IEEE SOFTWARE, V20, P30, DOI 10.1109/MS.2003.1196317
   Yip J., 2006, ITS NOT JUST STAND P
   Zhang XH, 2014, INFORM MANAGE-AMSTER, V51, P13, DOI 10.1016/j.im.2013.09.006
   Zhang Y, 2012, INFORM PROCESS MANAG, V48, P107, DOI 10.1016/j.ipm.2011.02.007
NR 83
TC 45
Z9 61
U1 9
U2 113
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2014
VL 56
IS 8
BP 911
EP 921
DI 10.1016/j.infsof.2014.02.010
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AI9OL
UT WOS:000337261800006
DA 2024-07-18
ER

PT J
AU Varela-Vaca, AJ
   Gasca, RM
AF Jesus Varela-Vaca, Angel
   Gasca, Rafael M.
TI Towards the automatic and optimal selection of risk treatments for
   business processes using a constraint programming approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process; Business process management systems; Security; Risk
   treatments; Constraint programming; Feature model
ID SECURITY; REQUIREMENTS; VARIABILITY
AB Context: The use of Business Process Management Systems (BPMS) has emerged in the IT arena for the automation of business processes. In the majority of cases, the issue of security is overlooked by default in these systems, and hence the potential cost and consequences of the materialization of threats could produce catastrophic loss for organizations. Therefore, the early selection of security controls that mitigate risks is a real and important necessity. Nevertheless, there exists an enormous range of IT security controls and their configuration is a human, manual, time-consuming and error-prone task. Furthermore, configurations are carried out separately from the organization perspective and involve many security stakeholders. This separation makes difficult to ensure the effectiveness of the configuration with regard to organizational requirements.
   Objective: In this paper, we strive to provide security stakeholders with automated tools for the optimal selection of IT security configurations in accordance with a range of business process scenarios and organizational multi-criteria.
   Method: An approach based on feature model analysis and constraint programming techniques is presented, which enable the automated analysis and selection of optimal security configurations.
   Results: A catalogue of feature models is determined by analyzing typical IT security controls for BPMSs for the enforcement of the standard goals of security: integrity, confidentiality, availability, authorization, and authentication. These feature models have been implemented through constraint programs, and Constraint Programming techniques based on optimized and non-optimized searches are used to automate the selection and generation of configurations. In order to compare the results of the determination of configuration a comparative analysis is given.
   Conclusion: In this paper, we present innovative tools based on feature models, Constraint Programming and multi-objective techniques that enable the agile, adaptable and automatic selection and generation of security configurations in accordance with the needs of the organization. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Jesus Varela-Vaca, Angel; Gasca, Rafael M.] Univ Seville, ETS Ingn Informat, Dept Comp Languages & Syst, Seville 41012, Spain.
C3 University of Sevilla
RP Varela-Vaca, AJ (corresponding author), Univ Seville, ETS Ingn Informat, Dept Comp Languages & Syst, Avda Reina Mercedes S-N, Seville 41012, Spain.
EM ajvarela@us.es; gasca@us.es
RI Varela-Vaca, Angel Jesus/K-8149-2014; M. Gasca, Rafael/F-5857-2015
OI Varela-Vaca, Angel Jesus/0000-0001-9953-6005; M. Gasca,
   Rafael/0000-0003-2348-7424
FU Department of Innovation, Science and Enterprise of the Regional
   Government of Andalusia [P08-TIC-04095]; Spanish Ministry of Science and
   Education [TIN2009-13714]; FEDER (under the ERDF Program); Fidetia
   Foundation
FX This work has been partially funded by the Department of Innovation,
   Science and Enterprise of the Regional Government of Andalusia (under
   Grant P08-TIC-04095), by the Spanish Ministry of Science and Education
   (under Grant TIN2009-13714), and by FEDER (under the ERDF Program). The
   authors would like to thank Prof. Christoph Meinel, and the
   Hasso-Plattner-Institute for their valuable provision of information.
   The authors would like to thank to Fidetia Foundation for supporting.
CR [Anonymous], 2005, ISO27001
   [Anonymous], 2012, STINGRAY APPL FIREWE
   [Anonymous], 2012, P INT C AV REL SEC 3
   [Anonymous], 1999, TLS PROTOCOL VERSION, DOI [10.17487/RFC2246, 10.17487/rfc2246, DOI 10.17487/RFC2246]
   [Anonymous], 14 EUR C ART INT ECA
   [Anonymous], 2013, Internet security threat report
   Asnar Y, 2006, LECT NOTES COMPUT SC, V4347, P55
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Barabanov R., 2011, DSV REPORT SERIES, V11-007
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   BENAVIDES D, 2007, 1 INT WORKSH VAR MOD
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Churliov L., 2006, P 14 EUR C INF SYST
   Cope E.W., 2010, IBM Journal of Research Development, V54, p4:1
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Davis Michael, 2012, INFORMATIONWEEK REPO
   DEKLEER J, 1992, ARTIF INTELL, V56, P197, DOI 10.1016/0004-3702(92)90027-U
   Dermann Maximilian, 2008, OWASP BEST PRACTICE
   Dierks T., 2008, 5246 RFC
   Dierks Tim, 2006, 4346 RFC, V4346, P1
   Dobson G, 2006, EUROMICRO CONF PROC, P126, DOI 10.1109/EUROMICRO.2006.63
   Ehrgott M., 2003, MULTIPLE CRITERIA OP, P369
   Fidetia, 2013, 27001 ISOIEC
   Freier Alan O., 2011, RFC 6101
   Gupta N., 2007, CS499 ENG IND I TECH
   Hickman K.E., 1995, The SSL protocol
   InfoSecurity Europe and PricewaterhouseCoopers, 2012, INF SEC BREACH SURV
   Varela-Vaca AJ, 2013, ADV INTELL SYST, V189, P13
   Kang Kyo C, 1990, Technical Report
   Kushner David, 2013, REAL STORY STUXNET I
   Lambert J. H., 2006, Systems Engineering, V9, P187, DOI 10.1002/sys.20054
   Macfarlane R., 2012, COMPUTERS SECURITY
   Mazo R., 2012, 24 INT C ADV INF SYS, P1
   Mellado D, 2010, INFORM SOFTWARE TECH, V52, P1094, DOI 10.1016/j.infsof.2010.05.007
   Menzel M., 2010, THESIS U POTSDAM
   Menzel M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P41, DOI 10.1109/ARES.2009.90
   Neubauer T, 2008, PROCEEDINGS OF THE IFIP TC 11/ 23RD INTERNATIONAL INFORMATION SECURITY CONFERENCE, P477
   Onditi VO, 2008, PROCEEDINGS OF THE SIXTH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P135, DOI 10.1109/ECOWS.2008.26
   Pérez J, 2006, ELECTRON NOTES THEOR, V152, P161, DOI 10.1016/j.entcs.2005.10.023
   Rodríguez A, 2006, LECT NOTES COMPUT SC, V4083, P51
   SANS,CSIS, 2013, CSIS 20 CRIT SEC CON
   Sawyer P., 2012, COMPUTER, P1
   Semmak F, 2010, COMM COM INF SC, V69, P193
   Soft Bonita, 2013, BON SOFT CUST REF
   Sonnenreich W., 2005, Journal of Research and Practice in Information Technology, V38, P239, DOI [10.5220/0002580202390252, DOI 10.5220/0002580202390252]
   Stallings William, 2012, INTERNET PROTOCOL J, V1
   Symantec, 2009, IT CONTR REF
   Varela-Vaca A.J., 2011, Proceedings of the Fifth International Conference on Research Challenges in Information Science (RCIS), P1, DOI DOI 10.1109/RCIS.2011.6006844
   Varela-Vaca A. J., 2011, INT J ADV SECURITY, V4, P11
   Varela-Vaca A.J., 2011, INT C SEC CRYPT SECR
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
   Zo HJ, 2010, DECIS SUPPORT SYST, V50, P336, DOI 10.1016/j.dss.2010.09.002
   zurMuehlen M., 2005, P AUSTR C INF SYST A
NR 54
TC 12
Z9 14
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2013
VL 55
IS 11
BP 1948
EP 1973
DI 10.1016/j.infsof.2013.05.007
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 231BH
UT WOS:000325387500006
OA Green Published
DA 2024-07-18
ER

PT J
AU Ali, R
   Dalpiaz, F
   Giorgini, P
AF Ali, Raian
   Dalpiaz, Fabiano
   Giorgini, Paolo
TI Reasoning with contextual requirements: Detecting inconsistency and
   conflicts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Contextual requirements; Goal modelling;
   Consistency and conflicts analysis; Adaptive systems engineering
ID GOAL; TROPOS; FRAMEWORK; COMPUTER
AB Context: The environment in which the system operates, its context, is variable. The autonomous ability of a software to adapt to context has to be planned since the requirements analysis stage as a strong mutual influence between requirements and context does exist. On the one hand, context is a main factor to decide whether to activate a requirement, the applicable alternatives to meet an activated requirement as well as their qualities. On the other hand, the system actions to reach requirements could cause changes in the context.
   Objectives: Modelling the relationship between requirements and context is a complex task and developing error-free models is hard to achieve without an automated support. The main objective of this paper is to develop a set of automated analysis mechanisms to support the requirements engineers to detect and analyze modelling errors in contextual requirements models.
   Method: We study the analysis of the contextual goal model which is a requirements model that weaves together the variability of both context and requirements. Goal models are used during the early stages of software development and, thus, our analysis detects errors early in the development process. We develop two analysis mechanisms to detect two kinds of modelling errors. The first: mechanism concerns the detection of inconsistent specification of contexts in a goal model. The second concerns the detection of conflicting context changes that arise as a consequence of the actions performed by the system to meet different requirements simultaneously. We support our analysis with a CASE tool and provide a systematic process that guides the construction and analysis of contextual goal models. We illustrate and evaluate our framework via a case study on a smart-home system for supporting the life of people having dementia problems.
   Results: The evaluation showed a significant ability of our analysis mechanisms to detect errors which were not notable by requirements engineers. Moreover, the evaluation showed acceptable performance of these mechanisms when processing up to medium-sized contextual goal models. The modelling constructs which we proposed as an input to enable the analysis were found easy to understand and capture.
   Conclusions: Our developed analysis for the detection of inconsistency and conflicts in contextual goal models is an essential step for the entire system correctness. It avoids us developing unusable and unwanted functionalities and functionalities which lead to conflicts when they operate together. Further research to improve our analysis to scale with large-sized models and to consider other kinds of errors is still needed. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Ali, Raian] Bournemouth Univ, Sch Design Engn & Comp, Poole BH12 5BB, Dorset, England.
   [Dalpiaz, Fabiano; Giorgini, Paolo] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
C3 Bournemouth University; University of Trento
RP Ali, R (corresponding author), Bournemouth Univ, Sch Design Engn & Comp, Poole BH12 5BB, Dorset, England.
EM rali@bournemouth.ac.uk; fabiano.dalpiaz@disi.unitn.it;
   paolo.giorgini@disi.unitn.it
RI Giorgini, Paolo/G-7886-2012; Ali, Raian/HZI-8249-2023; Ali,
   Raian/AAM-9992-2021
OI Ali, Raian/0000-0002-5285-7829; Giorgini, Paolo/0000-0003-4152-9683
FU EU Commission, through the ANIKETOS project; EU Commission, through
   FastFix project; Science Foundation Ireland [10/CE/11855]
FX This work has been partially funded by the EU Commission, through the
   ANIKETOS and FastFix projects and by Science Foundation Ireland Grant
   10/CE/11855 to Lero - the Irish Software Engineering Research Centre
   (www.lero.ie). We also thank Jaelson Brelaz de Castro, Bashar Nuseibeh,
   John Mylopoulos, Sarah Beecham, Alberto Griggio, Anders Franzen, Roberto
   Sebastiani, Yijun Yu, Armstrong Nhlabatsi, and Amit K. Chopra for the
   helpful discussions that enriched the ideas in this paper.
CR Ali R., P 7 INT C EV NOV APP
   Ali R., 2009, FOR 21 INT C ADV INF, V453, P37
   Ali R., P 1 INT WORKSH REQ E, P14
   Ali R., P 3 INT WORKSH SOFTW
   Ali R., P 17 INT C EXPL MOD
   Ali R., P JOINT M EUR SOFTW, P476
   Ali R, 2008, LECT NOTES COMPUT SC, V5074, P575
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Ali R, 2009, LECT NOTES BUS INF P, V29, P326
   Ali R, 2008, LECT NOTES COMPUT SC, V5231, P169, DOI 10.1007/978-3-540-87877-3_14
   [Anonymous], 2008, CASE STUDY RES DESIG
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Ben Mokhtar S, 2008, J SYST SOFTWARE, V81, P785, DOI 10.1016/j.jss.2007.07.030
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Brown G., 2006, ACM 2006 International Workshop on Self-Adaptation and Self-Managing Systems (SEAMS 2006), P23
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Campadello S., 2006, SERENITY DELIVERABLE
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Cheng B.H.C., SOFTWARE ENG SELF AD, P1
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Cohen D, 1997, PROC INT CONF SOFTW, P602, DOI 10.1145/253228.253493
   Dalpiaz F, 2009, LECT NOTES COMPUT SC, V5565, P246, DOI 10.1007/978-3-642-02144-2_22
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Feather MS, 1998, NINTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, PROCEEDINGS, P50, DOI 10.1109/IWSSD.1998.667919
   Fickas S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P140, DOI 10.1109/ISRE.1995.512555
   Giorgini P., P 21 INT C CONC MOD, P167
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12, DOI 10.1109/SPLC.2008.15
   Heitmeyer C., P 2 IEEE INT S REQ E, P56
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Henricksen K., P 2 IEEE INT C PERV, P77
   Hui B., 1995, P 11 IEEE INT C REQ, P117
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kim J, 2006, J SYST SOFTWARE, V79, P926, DOI 10.1016/j.jss.2005.06.046
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Krogstie J., 2004, International Journal of Mobile Communications, V2, P220
   Krogstie J., 2001, P 7 INT WORKSH REQ E
   Lapouchnian A., 2006, P 16 ANN INT C COMP
   Lapouchnian A, 2007, LECT NOTES COMPUT SC, V4714, P246
   Liaskos S., 2006, CSRG542 U TOR COMP S
   Liaskos S, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P79
   De la Vara JL, 2010, LECT NOTES COMPUT SC, V6426, P132
   de la Vara JL, 2010, LECT NOTES COMPUT SC, V6412, P471, DOI 10.1007/978-3-642-16373-9_37
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Nhlabatsi Armstrong, 2008, Progress in Informatics, P75, DOI 10.2201/NiiPi.2008.5.8
   Oreizy P., COMP 30 INT C SOFTW, P899
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Qureshi Nauman A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P108, DOI 10.1109/RE.2010.23
   Ramachandran M., 2005, Software Process Improvement and Practice, V10, P31, DOI 10.1002/spip.212
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salifu M., P 15 INT C REQ ENG R, P211
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Schmidt A., 2000, Personal Technologies, V4, P191, DOI 10.1007/BF01324126
   Souza VitorE Silva., 2011, P 6 INT S SOFTWARE E, P60
   Sykes D., P 2008 ICSE WORKSH S, P1
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   van Lamsweerde A., P 5 IEEE INT S REQ E, P249
   Wang X.H., P 2 IEEE ANN C PERV, P18
   Wang YT, 2007, Proceedings of the 2007 Chinese Control and Decision Conference, P293, DOI 10.1145/1321631.1321675
   WEISER M, 1991, SCI AM, V265, P94, DOI 10.1038/scientificamerican0991-94
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, V6
   Yau S.S., P 4 IEEE WORKSH SOFT, P5
   Yu E., P 4 INT WORKSH REQ E, P15
   Yu E.S-K., 1996, THESIS U TORONTO TOR
   Yu YJ, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P645
NR 69
TC 47
Z9 53
U1 2
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 35
EP 57
DI 10.1016/j.infsof.2012.06.013
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 036GA
UT WOS:000311013200003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Zhang, YY
   Harman, M
   Lim, SL
AF Zhang, Yuanyuan
   Harman, Mark
   Lim, Soo Ling
TI Empirical evaluation of search based requirements interaction management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 2nd International Symposium on Search Based Software Engineering
CY 2010
CL Benevento, ITALY
DE Requirements; RIM; NSGA-II; Repair method; Dependency; Search-Based
   Software Engineering
ID CONSTRAINED OPTIMIZATION; EVOLUTIONARY ALGORITHMS; GENETIC ALGORITHM
AB Context: Requirements optimization has been widely studied in the Search Based Software Engineering (SBSE) literature. However, previous approaches have not handled requirement interactions, such as the dependencies that may exist between requirements, and, or, precedence, cost- and value-based constraints.
   Objective: To introduce and evaluate a Multi-Objective Search Based Requirements Selection technique, using chromosome repair and to evaluate it on both synthetic and real world data sets, in order to assess its effectiveness and scalability. The paper extends and improves upon our previous conference paper on requirements interaction management.(1)
   Method: The popular multi-objective evolutionary algorithm NSGA-II was used to produce baseline data for each data set in order to determine how many solutions on the Pareto front fail to meet five different requirement interaction constraints. The results for this baseline data are compared to those obtained using the archive based approach previously studied and the repair based approach introduced in this paper.
   Results: The repair based approach was found to produce more solutions on the Pareto front and better convergence and diversity of results than the previously studied NSGA-II and archive-based NSGA-II approaches based on Kruskal-Wallis test in most cases. The repair based approach was also found to scale almost as well as the previous approach.
   Conclusion: There is evidence to indicate that the repair based algorithm introduced in this paper is a suitable technique for extending previous work on requirements optimization to handle the requirement interaction constraints inherent in requirement interactions arising from dependencies, and, or, precedence, cost- and value-based constraints. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Zhang, Yuanyuan; Harman, Mark; Lim, Soo Ling] UCL, London WC1E 6BT, England.
C3 University of London; University College London
RP Zhang, YY (corresponding author), UCL, Motet Pl, London WC1E 6BT, England.
EM yuanyuan.zhang@cs.ucl.ac.uk; m.harman@cs.ucl.ac.uk;
   sooling.lim@cs.ucl.ac.uk
OI Harman, Mark/0000-0002-5864-4488
CR ADELI H, 1994, J AEROSPACE ENG, V7, P104, DOI 10.1061/(ASCE)0893-1321(1994)7:1(104)
   [Anonymous], 1988, Acta Appl Math, DOI DOI 10.1007/BF00047572
   [Anonymous], 2010, 12 ANN C GEN EV COMP
   [Anonymous], 2010, THESIS
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Carlshamre P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P961, DOI 10.1109/DEXA.2000.875142
   Carlshamre P., P 5 IEEE INT S REQ E
   Carlson SE, 1998, IEEE SYS MAN CYBERN, P3931, DOI 10.1109/ICSMC.1998.726702
   Chootinan P, 2006, COMPUT OPER RES, V33, P2263, DOI 10.1016/j.cor.2005.02.002
   Coello CAC, 2002, COMPUT METHOD APPL M, V191, P1245, DOI 10.1016/S0045-7825(01)00323-1
   Courant R., 1943, Bull. Am. Math, V49, P1, DOI [/10.1090/s0002-9904-1943-07818-4, DOI 10.1090/S0002-9904-1943-07818-4, 10.1090/S0002-9904-1943-07818-4]
   Dahlstedt A.G., P 9 INT WORKSH REQ E
   Dahlstedt ÅG, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P95, DOI 10.1007/3-540-28244-0_5
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   del Sagrado Jose, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P67, DOI 10.1109/SSBSE.2010.18
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   Fonseca C. M., 1996, Parallel Problem Solving from Nature - PPSN IV. International Conference on Evolutionary Computation - The 4th International Conference on Parallel Problem Solving from Nature. Proceedings, P584, DOI 10.1007/3-540-61723-X_1022
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1951
   Helsgaun K, 2000, EUR J OPER RES, V126, P106, DOI 10.1016/S0377-2217(99)00284-2
   HOMAIFAR A, 1994, SIMULATION, V62, P242, DOI 10.1177/003754979406200405
   Ishibuchi H, 2005, LECT NOTES COMPUT SC, V3410, P370
   Jensen T.R., 1994, Graph Coloring Problems
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Koziel S, 1999, EVOL COMPUT, V7, P19, DOI 10.1162/evco.1999.7.1.19
   Liepins W.P.G.E., GENETIC ALGORITHM AP, P237
   Lim S., IEEE T SOFT IN PRESS
   Lim S., P 32 ACM IEEE INT C, V1, P295
   Martello Silvano, 1990, Knapsack Problems: Algorithms and Computer Implementations
   Michalewicz Z, 1995, IEEE C EVOL COMPUTAT, P647, DOI 10.1109/ICEC.1995.487460
   Michalewicz Z., 1994, Third Annual Conference on Evolutionary Programming, P98
   Orvosh D., 1994, Proceedings of the First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence (Cat. No.94TH0650-2), P548, DOI 10.1109/ICEC.1994.350001
   Page L., 1999, PAGERANK CITATION RA
   Pohl K., 1996, Requirements engineering: An overview
   POWELL D, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P424
   Praditwong K, 2006, 2006 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY, PTS 1 AND 2, PROCEEDINGS, P286, DOI 10.1109/ICCIAS.2006.294139
   Ramesh B., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P89, DOI 10.1109/ISRE.1995.512549
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   ROBINSON WN, 1999, 997 GEORG STAT U
   Runarsson TP, 2000, IEEE T EVOLUT COMPUT, V4, P284, DOI 10.1109/4235.873238
   Tonella P., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P57, DOI 10.1109/SSBSE.2010.17
   Venkatraman S, 2005, IEEE T EVOLUT COMPUT, V9, P424, DOI 10.1109/TEVC.2005.846817
   Yuanyuan Zhang, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P47, DOI 10.1109/SSBSE.2010.16
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
NR 46
TC 37
Z9 39
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 126
EP 152
DI 10.1016/j.infsof.2012.03.007
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 036GA
UT WOS:000311013200008
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Frantzeskou, G
   Stamelos, I
AF Ampatzoglou, Apostolos
   Frantzeskou, Georgia
   Stamelos, Ioannis
TI A methodology to assess the impact of design patterns on software
   quality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Structural quality; Design patterns; Object-oriented metrics; Quality
ID OBJECT-ORIENTED SOFTWARE; METRICS; SPECIFICATION
AB Context: Software quality is considered to be one of the most important concerns of software production teams. Additionally, design patterns are documented solutions to common design problems that are expected to enhance software quality. Until now, the results on the effect of design patterns on software quality are controversial.
   Aims: This study aims to propose a methodology for comparing design patterns to alternative designs with an analytical method. Additionally, the study illustrates the methodology by comparing three design patterns with two alternative solutions, with respect to several quality attributes.
   Method: The paper introduces a theoretical/analytical methodology to compare sets of "canonical" solutions to design problems. The study is theoretical in the sense that the solutions are disconnected from real systems, even though they stem from concrete problems. The study is analytical in the sense that the solutions are compared based on their possible numbers of classes and on equations representing the values of the various structural quality attributes in function of these numbers of classes. The exploratory designs have been produced by studying the literature, by investigating open-source projects and by using design patterns. In addition to that, we have created a tool that helps practitioners in choosing the optimal design solution, according to their special needs.
   Results: The results of our research suggest that the decision of applying a design pattern is usually a trade-off, because patterns are not universally good or bad. Patterns typically improve certain aspects of software quality, while they might weaken some other.
   Conclusions: Concluding the proposed methodology is applicable for comparing patterns and alternative designs, and highlights existing threshold that when surpassed the design pattern is getting more or less beneficial than the alternative design. More specifically, the identification of such thresholds can become very useful for decision making during system design and refactoring. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Ampatzoglou, Apostolos; Stamelos, Ioannis] Aristotle Univ Thessaloniki, Dept Informat, GR-54006 Thessaloniki, Greece.
   [Frantzeskou, Georgia] Univ Aegean, Informat & Commun Syst Engn Dept, Samos, Greece.
C3 Aristotle University of Thessaloniki; University of Aegean
RP Ampatzoglou, A (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, GR-54006 Thessaloniki, Greece.
EM apamp@csd.auth.gr; gfran@aegean.gr; stamelos@csd.auth.gr
RI Ampatzoglou, Apostolos/AAC-3632-2020; Stamelos, Ioannis/AAK-7207-2020
CR ABREU FBE, 1995, P 9 EUR C OBJ OR PRO
   Albin-Amiot H, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P166, DOI 10.1109/ASE.2001.989802
   Alencar P., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P160, DOI 10.1109/CMPSAC.1999.812694
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Ampatzoglou A, 2007, INFORM SOFTWARE TECH, V49, P445, DOI 10.1016/j.infsof.2006.07.003
   [Anonymous], 2003, ALAN APT SERIES
   Antoniol G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P23, DOI 10.1109/METRIC.1998.731224
   Arcelli F., 2011, P 4 WORKSH REF TOOLS
   Baniassad ELA, 2003, PROC INT CONF SOFTW, P352, DOI 10.1109/ICSE.2003.1201214
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bayley Ian, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P203, DOI 10.1109/COMPSAC.2008.67
   Bayley I, 2010, J SYST SOFTWARE, V83, P209, DOI 10.1016/j.jss.2009.09.039
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   Birukou A., 2010, P 2010 EUR C PATT LA
   Blewitt Alex, 2005, 20 IEEE ACM INT AUT, P224
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Chatzigeorgiou A., 2005, OBJECT ORIENTED DESI
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Dagpinar M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/WCRE.2003.1287246
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   Deng J., P 6 ACM SIGCHI NZ CH, P31
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Dong J, 2004, INFORM SOFTWARE TECH, V46, P293, DOI 10.1016/j.infsof.2003.09.003
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Eden AH, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P143, DOI 10.1109/ASE.1997.632834
   Eide E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P208, DOI 10.1109/ICSE.2002.1007969
   El Boussaidi G, 2007, P INT COMP SOFTW APP, P97
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomes P., 6 EUR C ADV CAS BAS, P534
   Guéhéneuc YG, 2010, SOFTWARE QUAL J, V18, P145, DOI 10.1007/s11219-009-9082-y
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Guo SH, 2007, INT CONF E BUS ENG, P347, DOI 10.1109/ICEBE.2007.46
   Henderson-Sellers B., 2002, OBJECT ORIENTED SYST, V3, P143
   Hsueh NL, 2008, J SYST SOFTWARE, V81, P1430, DOI 10.1016/j.jss.2007.11.724
   Hsueh NL, 2009, SOFTW SYST MODEL, V8, P67, DOI 10.1007/s10270-007-0063-y
   Huston B, 2001, J SYST SOFTWARE, V58, P261, DOI 10.1016/S0164-1212(01)00043-7
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Khomh F, 2009, PROC IEEE INT CONF S, P83, DOI 10.1109/ICSM.2009.5306327
   Kim DK, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P452, DOI 10.1109/CMPSAC.2003.1245379
   Kouskouras KG, 2008, J SYST SOFTWARE, V81, P1725, DOI 10.1016/j.jss.2007.12.807
   Kung D.C., 2003, SERIES ENG COMPUTER
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lorenz M., 2004, OBJECT ORIENTED SOFT
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McNatt WB, 2001, P INT COMP SOFTW APP, P574, DOI 10.1109/CMPSAC.2001.960670
   Mens T., 2003, P IEEE INT C SOFTW M, P570
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Muraki T., 2001, P 4 INT WORKSH PRINC, P27, DOI DOI 10.1145/602461.602466
   Ng TH, 2007, PROC INT CONF SOFTW, P168
   Oliveira BrunoCdS., 2008, Proceedings of the 23rd ACM SIGPLAN conference on Object-oriented programming systems languages and applications, P439
   Pettersson Niklas., 2005, WODA 05 P 3 INT WORK, P1
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   RISING L, 2000, PATTERN ALMANAC
   Samoladas I, 2004, COMMUN ACM, V47, P83, DOI 10.1145/1022594.1022598
   Shalloway A., 2005, DESIGN PATTERNS EXPL
   Soundarajan N, 2004, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2004.1317488
   Taibi T, 2003, INFORM SOFTWARE TECH, V45, P157, DOI 10.1016/S0950-5849(02)000195-7
   Tsantalis N, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P26, DOI 10.1109/METRIC.2004.1357888
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Weiss M, 2008, INT REQUIR ENG CONF, P169, DOI 10.1109/RE.2008.32
   Weiss M., 2007, INT S WIK WIKISYM AC
   Welicki L., 2007, INT WORKSH SOFTW PAT
   Wendorff P, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P77, DOI 10.1109/CSMR.2001.914971
   Winn T, 2002, IEEE SOFTWARE, V19, P59, DOI 10.1109/52.976942
   Wolfram Mathematica, 2010, RED WOLFR MATH 7 DOC
   Zdun U., 2008, SHARK, P11
   Zdun U, 2007, SOFTWARE PRACT EXPER, V37, P983, DOI 10.1002/spe.799
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
   Ziane M, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ASE.2000.873676
   Zimmermann O., 2008, P 7 WORK IEEE IFIP C
NR 80
TC 32
Z9 42
U1 0
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2012
VL 54
IS 4
BP 331
EP 346
DI 10.1016/j.infsof.2011.10.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 900AN
UT WOS:000300859100001
DA 2024-07-18
ER

PT J
AU Izquierdo, JLC
   Jouault, F
   Cabot, J
   Molina, JG
AF Canovas Izquierdo, Javier Luis
   Jouault, Frederic
   Cabot, Jordi
   Garcia Molina, Jesus
TI API2MoL: Automating the building of bridges between APIs and
   Model-Driven Engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Application Programming Interface; Model-Driven Engineering;
   Domain-Specific Languages
AB Context: A software artefact typically makes its functionality available through a specialized Application Programming Interface (API) describing the set of services offered to client applications. In fact, building any software system usually involves managing a plethora of APIs, which complicates the development process. In Model-Driven Engineering (MDE). where models are the key elements of any software engineering activity, this API management should take place at the model level. Therefore, tools that facilitate the integration of APIs and MDE are clearly needed.
   Objective: Our goal is to automate the implementation of API-MDE bridges for supporting both the creation of models from API objects and the generation of such API objects from models. In this sense, this paper presents the API2MoL approach, which provides a declarative rule-based language to easily write mapping definitions to link API specifications and the metamodel that represents them. These definitions are then executed to convert API objects into model elements or vice versa. The approach also allows both the metamodel and the mapping to be automatically obtained from the API specification (bootstrap process).
   Method: After implementing the API2MoL engine, its correctness was validated using several APIs. Since APIs are normally large, we then developed a tool to implement the bootstrap process, which was also validated.
   Results: We provide a toolkit (language and bootstrap tool) for the creation of bridges between APIs and MDE. The current implementation focuses on Java APIs, although its adaptation to other statically typed object-oriented languages is straightforward. The correctness, expressiveness and completeness of the approach have been validated with the Swing, SWT and JTwitter APIs.
   Conclusion: API2MoL frees developers from having to manually implement the tasks of obtaining models from API objects and generating such objects from models. This helps to manage API models in MDE-based solutions. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Canovas Izquierdo, Javier Luis; Jouault, Frederic; Cabot, Jordi] Ecole Mines Nantes, F-44307 Nantes, France.
   [Canovas Izquierdo, Javier Luis; Jouault, Frederic; Cabot, Jordi] INRIA, F-44307 Nantes, France.
   [Canovas Izquierdo, Javier Luis; Garcia Molina, Jesus] Univ Murcia, Fac Informat, Dept Comp & Syst, E-30071 Murcia, Spain.
C3 IMT - Institut Mines-Telecom; IMT Atlantique; Inria; University of
   Murcia
RP Izquierdo, JLC (corresponding author), Ecole Mines Nantes, Chantrerie 4,Rue Alfred Kastler,BP 20722, F-44307 Nantes, France.
EM jlcanovas@um.es; frederic.jouault@inria.fr; jordi.cabot@inria.fr;
   jmolina@um.es
RI Izquierdo, Javier Luis Canovas/E-8940-2016; GARCIA-MOLINA, JESUS
   J/X-7078-2019; Izquierdo, Javier Luis Canovas/JAO-0822-2023; Cabot,
   Jordi/P-7723-2015
OI Izquierdo, Javier Luis Canovas/0000-0002-2326-1700; Cabot,
   Jordi/0000-0003-2418-2489
FU Spanish Ministiy of Science and Innovation [TIN2009-11555]; Regional
   Government of Murcia [129/2009, 15389/PI/10]; INFO; FEDER; Fundacion
   Seneca
FX This work has been partially supported by Spanish Ministiy of Science
   and Innovation (Grant TIN2009-11555), Regional Government of Murcia
   (Project 129/2009 and Grant 15389/PI/10), and up to 80% of it has been
   co-supported by INFO and FEDER (Grant PCTRM 2007-2010). Javier Luis
   Canovas Izquierdo enjoys a doctoral grant from the Fundacion Seneca.
CR [Anonymous], 2010, MDA SPECIFICATIONS
   [Anonymous], 2010, PORTONLAN PROJECT
   [Anonymous], 2011, SWING
   [Anonymous], 2010, SWT
   [Anonymous], 2010, MOFSCRIPT
   [Anonymous], 2011, GWT
   [Anonymous], 2010, XPAND LANGUAGE REFER
   Antkiewicz M, 2006, LECT NOTES COMPUT SC, V4199, P692
   Antkiewicz M, 2009, IEEE T SOFTWARE ENG, V35, P795, DOI 10.1109/TSE.2009.30
   Bartolomei T. Tonelli, SWING SWT BACK PATTE
   Bartolomei T. Tonelli, 2009, POSTPR SOFTW LANG EN
   Bezivin J., 2007, 4 INT WORKSH MOD BAS
   Brun C., 2008, EUROPEAN J INFORM PR
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173, DOI DOI 10.1145/1858996.1859032
   Izquierdo JLC, 2009, LECT NOTES COMPUT SC, V5562, P82, DOI 10.1007/978-3-642-02674-4_7
   Fowler M., 2011, DOMAIN SPECIFIC LANG
   Heidenreich F, 2009, LECT NOTES COMPUT SC, V5562, P114, DOI 10.1007/978-3-642-02674-4_9
   Hui Song, 2009, Models in Software Engineering. Workshops and Symposia at MODELS 2009. Reports and Revised Selected Papers, P140
   Jouault F., 2006, INT C GEN PROGR COMP, P249
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kurtev I., 2002, INT C COOP INF SYST
   Ratiu D, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P203
   Song H, 2010, LECT NOTES COMPUT SC, V6395, P168
NR 24
TC 11
Z9 11
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2012
VL 54
IS 3
BP 257
EP 273
DI 10.1016/j.infsof.2011.09.006
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 898KM
UT WOS:000300741300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nair, TRG
   Selvarani, R
AF Nair, T. R. Gopalakrishnan
   Selvarani, R.
TI Defect proneness estimation and feedback approach for software design
   quality improvement
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-oriented design; Structural properties; Design complexity; Defect
   proneness; CK metrics; Quality factors
ID EMPIRICAL-ANALYSIS; METRICS SUITE; COMPLEXITY
AB Context: Modern software engineering demands professionals and researchers to proactively and collectively work towards exploring and experimenting viable and valuable mechanisms in order to extract all kinds of degenerative bugs, security holes, and possible deviations at the initial stage. Having understood the real need here, we have introduced a novel methodology for the estimation of defect proneness of class structures in object oriented (OO) software systems at design stage.
   Objective: The objective of this work is to develop an estimation model that provides significant assessment of defect proneness of object oriented software packages at design phase of SDLC. This frame work enhances the efficiency of SDLC through design quality improvement.
   Method: This involves a data driven methodology which is based on the empirical study of the relationship existing between design parameters and defect proneness. In the first phase, a mapping of the relationship between the design metrics and normal occurrence pattern of defects are carried out. This is represented as a set of non linear multifunctional regression equations which reflects the influence of individual design metrics on defect proneness. The defect proneness estimation model is then generated by weighted linear combination of these multifunctional regression equations. The weighted coefficients are evaluated through GQM (Goal Question Metric) paradigm.
   Results: The model evaluation and validation is carried out with a selected set of cases which is found to be promising. The current study is successfully dealt with three projects and it opens up the opportunity to extend this to a wide range of projects across industries.
   Conclusion: The defect proneness estimation at design stage facilitates an effective feedback to the design architect and enabling him to identify and reduce the number of defects in the modules appropriately. This results in a considerable improvement in software design leading to cost effective products. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Nair, T. R. Gopalakrishnan; Selvarani, R.] Dayananda Sagar Inst, Res & Ind Incubat Ctr, Bangalore 560078, Karnataka, India.
RP Selvarani, R (corresponding author), Dayananda Sagar Inst, Res & Ind Incubat Ctr, Bangalore 560078, Karnataka, India.
EM trgnair@yahoo.com; selvss@yahoo.com
RI Ramgasamy, Selvarani/AAB-6437-2021
OI Ramgasamy, Selvarani/0000-0003-1017-0313
FU Dayananda Sagar Institutions, Bangalore, India; M.S.Ramaiah Institute of
   Technology, Bangalore
FX The authors would like to thank the management of Dayananda Sagar
   Institutions, Bangalore, India for supporting this work on this
   autonomic software systems project and all the industrial and research
   site professionals for their support in data collection and Goal
   Question Metric evaluation. Further the corresponding author would like
   to thank the management of M.S.Ramaiah Institute of Technology,
   Bangalore for their support and encouragement to carry out this work.
CR AGRESTI WW, 1992, IEEE T SOFTWARE ENG, V18, P988, DOI 10.1109/32.177368
   Akiyama F., 1971, IFIP C, P353
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1997, IEEE T SOFTWARE ENG, V23, P196, DOI 10.1109/TSE.1997.585509
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Brito e Abreu F., 1998, LNCS, V1743, P326
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Delgado M, 2001, INT J INTELL SYST, V16, P169, DOI 10.1002/1098-111X(200102)16:2<169::AID-INT20>3.0.CO;2-L
   Denaro G, 2003, INT J SOFTW ENG KNOW, V13, P395, DOI 10.1142/S0218194003001366
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Gunes Koru A., 2007, PROMISE 07, P10, DOI DOI 10.1109/PROMISE.2007.9
   Han J, 1997, EIGHTH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE INCORPORATING COMPUTER AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/STEP.1997.615479
   HUDLI RV, 1994, PR IEEE COMP DESIGN, P492, DOI 10.1109/ICCD.1994.331958
   Janes A, 2006, INFORM SCIENCES, V176, P3711, DOI 10.1016/j.ins.2005.12.002
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Khoshgoftaar T. M., 2002, Empirical Software Engineering, V7, P297, DOI 10.1023/A:1020511004267
   Kiran GA, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P114, DOI 10.1109/ICSM.1997.624237
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KITCHENHAM BA, 1990, SOFTWARE ENG J, V5, P50, DOI 10.1049/sej.1990.0007
   Koru AG, 2007, INT FED INFO PROC, V234, P271
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   KUNG D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P202, DOI 10.1109/ICSM.1994.336774
   Lawson Derek, 2002, P ACM S APPL COMP MA, P1031
   Li LF, 1996, PROCEEDINGS OF INTERNATIONAL WORKSHOP ON CSCW IN DESIGN, P171, DOI 10.1109/ICSM.1996.565004
   Marchesi M, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P67, DOI 10.1109/CSMR.1998.665739
   Maule A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P451, DOI 10.1145/1368088.1368150
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Nair T. R., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1668862.1668868
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Poels G, 2000, INFORM SOFTWARE TECH, V42, P35, DOI 10.1016/S0950-5849(99)00053-1
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Rosenberg L.H., 1997, Crosstalk J., V10, P1
   SELBY R, 1988, SOFTWARE REUSE EMERG, P176
   Selvarani R, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING SYSTEMS, P766, DOI 10.1109/ICSPS.2009.163
   Selvarani R., 2010, KNOWLEDGE ENG SOFTWA, P196
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Veevers A., 1994, Software Testing, Verification and Reliability, V4, P3, DOI 10.1002/stvr.4370040103
   Warmer J., 1999, AW OBJ TECHNOL S
NR 48
TC 6
Z9 6
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2012
VL 54
IS 3
BP 274
EP 285
DI 10.1016/j.infsof.2011.10.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 898KM
UT WOS:000300741300004
DA 2024-07-18
ER

PT J
AU Pérez-Castillo, R
   de Guzmán, IGR
   Piattini, M
AF Perez-Castillo, Ricardo
   Garcia-Rodriguez de Guzman, Ignacio
   Piattini, Mario
TI Business process archeology using MARBLE
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process archeology; ADM; Modernization; KDM; Legacy system;
   Case study
ID SYSTEM
AB Context: Legacy information systems age over time. These systems cannot be thrown away because they store a significant amount of valuable business knowledge over time, and they cannot be entirely replaced at an acceptable cost. This circumstance is similar to that of the monuments of ancient civilizations, which have aged but still hold meaningful information about their civilizations. Evolutionary maintenance is the most suitable mechanism to deal with the software ageing problem since it preserves business knowledge. But first, recovering the underlying business knowledge in legacy systems is necessary in order to preserve this vital heritage.
   Objective: This paper proposes and validates a method for recovering and rebuilding business processes from legacy information systems. This method, which can be considered a business process archeology, makes it possible to preserve the business knowledge in legacy information systems.
   Method: The business process archeology method is framed in MARBLE, a generic framework based on Architecture-Driven Modernization (ADM), which uses the Knowledge Discovery Metamodel (KDM) standard. The proposed method is validated using a case study that involves a real-life legacy system. The case study is conducted following the case study protocol proposed by Brereton et al.
   Results: The study reports that the proposed method makes it possible to obtain business process models from legacy systems with adequate levels of accuracy. In addition, the effectiveness of the proposed method is also validated positively.
   Conclusion: The proposed method semi-automatically rebuilds the hidden business processes embedded in a legacy system. Therefore, the business process archeology method quickly allows business experts to have a meaningful understanding of the organization's business processes. This proposal is less time-consuming and more exhaustive (since it considers the embedded business knowledge) than a manual process redesign by experts from scratch. In addition, it helps maintainers to extract the business knowledge needed for the system to evolve. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Perez-Castillo, Ricardo; Garcia-Rodriguez de Guzman, Ignacio; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Pérez-Castillo, R (corresponding author), Univ Castilla La Mancha, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM ricardo.pdelcastillo@uclm.es; ignacio.grodriguez@uclm.es;
   mario.piattini@uclm.es
RI de Guzmán, Ignacio García-Rodríguez/N-4489-2014; Pérez-Castillo,
   Ricardo/A-3033-2011; Piattini, Mario/F-6271-2013
OI de Guzmán, Ignacio García-Rodríguez/0000-0002-0038-0942; Pérez-Castillo,
   Ricardo/0000-0002-9271-3184; Piattini, Mario/0000-0002-7212-8279
FU Spanish FPU; ALTAMIRA (JCCM) [PII2I09-0106-2463]; MOTERO (JCCM); MOTERO
   (FEDER) [PEII11-0366-9449]; MEDUSAS (CDTI (MICINN) [IDI-20090557];
   EGASO/MAGO [TIN2009-13718-CO2-01]
FX This work was supported by the Spanish FPU Programme, and by the R&D
   Projects ALTAMIRA (JCCM, PII2I09-0106-2463), MOTERO (JCCM and FEDER,
   PEII11-0366-9449), MEDUSAS (CDTI (MICINN), IDI-20090557) and PEGASO/MAGO
   (TIN2009-13718-CO2-01).
CR [Anonymous], 2006, 147642006 ISOIEC
   [Anonymous], 2008, INTRO ROADMAP HIST C
   Brereton Pearl., 2008, Proceedings of the 12th International Conference on Evaluation and Assessment in Software Engineering, P41
   Cai ZG, 2009, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2009.5306291
   CANFORA G, 2007, 2007 FUTURE SOFTWARE
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   DAGA A, 2005, P P 38 ANN HAW INT C, V8, P224
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   Di Francescomarino C, 2009, EUR CON SFTWR MTNCE, P139, DOI 10.1109/CSMR.2009.26
   *ECL FDN IBM CORP, 2009, EMF ECL MOD FRAM PRO
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Garcia VC, 2006, LECT NOTES COMPUT SC, V4063, P82
   Ghose Aditya, 2007, IEEE C SERV SERV 07
   Günther CW, 2006, LECT NOTES COMPUT SC, V4103, P81
   Hunt A, 2002, IEEE SOFTWARE, V19, P20, DOI 10.1109/52.991327
   *IKV, MED QVT
   Ingvaldsen JE, 2008, LECT NOTES COMPUT SC, V4928, P30
   *ISO IEC, 2009, 19506 ISOIEC DIS, P302
   Jeston J., 2008, BUSINESS PROCESS MAN, P469
   KAZMAN R, 1998, P WORK C REV ENG WCR
   KHUSIDMAN V, 2007, ARCHITECTUR IN PRESS, P7
   Kiyavitskaya N, 2006, LECT NOTES ARTIF INT, V4333, P143
   Koskinen J., 2005, EUR C SOFTW MAINT RE
   Lewis GA, 2010, RES AGENDA SERVICE O, P40
   Lucrédio D, 2008, LECT NOTES COMPUT SC, V5301, P296, DOI 10.1007/978-3-540-87875-9_22
   Mens T., 2008, Software Evolution
   *MERR WEBST, 2010, DICT THES
   Miller J, 2003, MDA GUIDE VERSION 1, P62
   MOYER B, 2009, EMBEDDED TECHNOL J, V1, P1
   MULLER HA, 2000, P C FUT SOFTW ENG AC
   *OMG, 2008, QVT MET OBJ FAC MOF
   OMG, 2009, ARCH DRIV MOD ADM KN, P308
   OMG, 2003, WHY DO WE NEED STAND
   OMG, 2009, BUS PROC MOD NOT BPM, P496
   *OMG, 2007, XML MET INT MOF 2 0
   Open Source Initiative, 2009, JAVACC 4 2 PARS SCAN
   PARADAUSKAS B, 2006, J INF TECHNOL, V35, P214
   Perez- Castillo R, 2009, INT WORKSH REV ENG M, P17
   Perez-Castillo R, 2010, 25 ANN ACM S APPL CO, P165
   Pérez-Castillo R, 2010, LECT NOTES COMPUT SC, V6142, P168, DOI 10.1007/978-3-642-13688-7_12
   PEREZCASTILLO R, 2009, 24 ANN ACM S APPL CO, P2126
   RAGHAVAN VV, 1989, ACM T INFORM SYST, V7, P205, DOI 10.1145/65943.65945
   Rowe G, 1999, INT J FORECASTING, V15, P353, DOI 10.1016/S0169-2070(99)00018-7
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   ULRICH WM, 2010, INFORM SYSTEMS TRANS, P429
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Visaggio G, 2001, J SOFTW MAINT EVOL-R, V13, P281, DOI 10.1002/smr.234
   W-JVD Heuvel, 2006, ALIGNING MODERN BUSI
   WANG X, 2004, P 8 EUR WORK C SOFTW
   Weske M., 2007, Business Process Management: Concepts, Languages, Architectures, P368
   Wohlin C, 2000, EXPT SOFTWARE ENG IN, P204
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Yin R.K., 2011, Qualitative research from start to finish
   Zdun U, 2007, ACM T WEB, V1, DOI 10.1145/1281480.1281484
   Zhao LP, 2008, J SYST SOFTWARE, V81, P1272, DOI 10.1016/j.jss.2007.11.717
   Zou Y, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P224
NR 56
TC 28
Z9 29
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1023
EP 1044
DI 10.1016/j.infsof.2011.05.006
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200001
DA 2024-07-18
ER

PT J
AU Dijkman, R
   Gfeller, B
   Küster, J
   Völzer, H
AF Dijkman, Remco
   Gfeller, Beat
   Kuester, Jochen
   Voelzer, Hagen
TI Identifying refactoring opportunities in process model repositories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business Process Model; Refactoring; Repository
ID SIMILARITY; COMPUTATION; ALGORITHMS
AB Context: In order to ensure high quality of a process model repository, refactoring operations can be applied to correct anti-patterns, such as overlap of process models, inconsistent labeling of activities and overly complex models. However, if a process model collection is created and maintained by different people over a longer period of time, manual detection of such refactoring opportunities becomes difficult, simply due to the number of processes in the repository. Consequently, there is a need for techniques to detect refactoring opportunities automatically.
   Objective: This paper proposes a technique for automatically detecting refactoring opportunities.
   Method: We developed the technique based on metrics that can be used to measure the consistency of activity labels as well as the extent to which processes overlap and the type of overlap that they have. We evaluated it, by applying it to two large process model repositories.
   Results: The evaluation shows that the technique can be used to pinpoint the approximate location of three types of refactoring opportunities with high precision and recall and of one type of refactoring opportunity with high recall, but low precision.
   Conclusion: We conclude that the technique presented in this paper can be used in practice to automatically detect a number of anti-patterns that can be corrected by refactoring. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Dijkman, Remco] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Gfeller, Beat; Kuester, Jochen; Voelzer, Hagen] IBM Res Zurich, CH-8803 Ruschlikon, Switzerland.
C3 Eindhoven University of Technology; International Business Machines
   (IBM)
RP Dijkman, R (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM r.m.dijkman@tue.nl; bgf@zurich.ibm.com; jku@zurich.ibm.com;
   hvo@zurich.ibm.com
RI Dijkman, Remco/P-4281-2019; Dijkman, Remco M/B-2721-2014
OI Dijkman, Remco/0000-0003-4083-0036; 
CR [Anonymous], IBM INS APPL ARCH
   [Anonymous], 1999, SAP R 3 BUSINESS BLU
   [Anonymous], 2004, INT J PATTERN RECOGN
   [Anonymous], 1974, P 6 ANN ACM S THEORY
   Brockmans S, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, P191
   CHRISTMAS WJ, 1995, IEEE T PATTERN ANAL, V17, P749, DOI 10.1109/34.400565
   Corrales JC, 2006, LECT NOTES COMPUT SC, V4275, P237
   Dijkman R, 2011, INFORM SYST, V36, P498, DOI 10.1016/j.is.2010.09.006
   Dijkman R, 2009, LECT NOTES COMPUT SC, V5701, P48, DOI 10.1007/978-3-642-03848-8_5
   DIJKMAN RM, 2009, P 13 IEEE EDOC C AUC
   EHRIG M, **NON-TRADITIONAL**
   FETTKE P, 2002, EPK 2002, P37
   GALIL Z, 1986, COMPUT SURV, V18, P23, DOI 10.1145/6462.6502
   Gori M, 2005, IEEE T PATTERN ANAL, V27, P1100, DOI 10.1109/TPAMI.2005.138
   Jiang X, 1998, COMPUTING, V61, P23, DOI 10.1007/BF02684448
   KUSTER J, 2006, BPM 2006 WORKSH
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   LI C, 2007, TRCTIT0789
   Lu R, 2007, LECT NOTES COMPUT SC, V4801, P165
   Madhusudan T, 2004, DATA KNOWL ENG, V50, P87, DOI 10.1016/j.datak.2004.01.005
   Minor M, 2007, LECT NOTES COMPUT SC, V4626, P224
   Polyvyanyy A, 2011, LECT NOTES COMPUT SC, V6551, P25, DOI 10.1007/978-3-642-19589-1_2
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Riesen K, 2009, IMAGE VISION COMPUT, V27, P950, DOI 10.1016/j.imavis.2008.04.004
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   Shvaiko P, 2005, LECT NOTES COMPUT SC, V3730, P146
   SORLIN S, 2005, 5 IAPR TC 15 WORKSH, P172
   Tekli J, 2009, COMPUT SCI REV, V3, P151, DOI 10.1016/j.cosrev.2009.03.001
   van Dongen B, 2008, LECT NOTES COMPUT SC, V5074, P450
   VanGlabbeek RJ, 1996, J ACM, V43, P555, DOI 10.1145/233551.233556
   Vanhatalo J, 2009, DATA KNOWL ENG, V68, P793, DOI 10.1016/j.datak.2009.02.015
   Weber B, 2008, LECT NOTES COMPUT SC, V5074, P124
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6336, P78, DOI 10.1007/978-3-642-15618-2_8
   Wombacher A, 2006, LECT NOTES COMPUT SC, V4275, P255
   DOCUMENTAIR STRUCTUU
NR 35
TC 31
Z9 34
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 937
EP 948
DI 10.1016/j.infsof.2011.04.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 795DC
UT WOS:000292950700004
DA 2024-07-18
ER

PT J
AU Sahraoui, H
   Briand, LC
   Guéhéneuc, YG
   Beaurepaire, O
AF Sahraoui, Houari
   Briand, Lionel C.
   Gueheneuc, Yann-Gael
   Beaurepaire, Olivier
TI Investigating the impact of a measurement program on software quality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Measurement program; Software quality; Empirical study
AB Context: Measurement programs have been around for several decades but have been often misused or misunderstood by managers and developers. This misunderstanding prevented their adoption despite their many advantages.
   Objective: In this paper, we present the results of an empirical study on the impact of a measurement program, MQL ("Mise en Quake du Logiciel", French for "Quality Software Development"), in an industrial context.
   Method: We analyzed data collected on 44 industrial systems of different sizes: 22 systems were developed using MQL while the other 22 used ad-hoc approaches to assess and control quality (control group, referred to as "ad-hoc systems"). We studied the impact of MQL on a set of nine variables: six quality factors (maintainability, evolvability, reusability, robustness, testability, and architecture quality), corrective-maintenance effort, code complexity, and the presence of comments.
   Results: Our results show that MQL had a clear positive impact on all the studied indicators. This impact is statistically significant for all the indicators but corrective-maintenance effort.
   Conclusion: We bring concrete evidence that a measurement program can have a significant, positive impact on the quality of software systems if combined with appropriate decision making procedures and corrective actions. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Sahraoui, Houari] Univ Montreal, DIRO, Montreal, PQ H3C 3J7, Canada.
   [Briand, Lionel C.] Univ Oslo, N-0316 Oslo, Norway.
   [Gueheneuc, Yann-Gael] Ecole Polytech Montreal, DGIGL, Ptidej Team, Montreal, PQ, Canada.
   [Beaurepaire, Olivier] SNCF, Paris, France.
C3 Universite de Montreal; University of Oslo; Universite de Montreal;
   Polytechnique Montreal; SNCF
RP Sahraoui, H (corresponding author), Univ Montreal, DIRO, Montreal, PQ H3C 3J7, Canada.
EM sahraoui@iro.umontreal.ca; briand@simula.no;
   yann-gael.gueheneuc@polymtl.ca; olivier.beaurepaire@sncf.fr
RI Guéhéneuc, Yann-Gaël/K-9371-2019
FU Natural Sciences and Engineering Research Council of Canada; Research
   Council of Norway
FX The authors would like to thank Yvon Borri and Yves Duport for their
   support in the MQL project and the SNCF DSIV quality team for its
   invaluable assistance during this study. This work has been partially
   funded by the Natural Sciences and Engineering Research Council of
   Canada and the Research Council of Norway.
CR [Anonymous], 1989, Introduction to the Practice of Statistics
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BEAUREPAIRE O, 2004, P 8 WORKSH QUANT APP, P47
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Berry M., 2000, Empirical Software Engineering, V5, P183, DOI 10.1023/A:1026534430984
   Coman ID, 2009, PROC INT CONF SOFTW, P89, DOI 10.1109/ICSE.2009.5070511
   DASKALANTONAKIS MK, 1992, IEEE T SOFTWARE ENG, V18, P998, DOI 10.1109/32.177369
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gopal A, 2002, IEEE T SOFTWARE ENG, V28, P863, DOI 10.1109/TSE.2002.1033226
   Hall T, 1997, IEEE SOFTWARE, V14, P55, DOI 10.1109/52.582975
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   HOMMEL S, 2000, JAVA CODE CONVENTION
   *ISO IEC, 1991, 91261991E ISOIEC
   IVERSEN J, 2000, HICSS 00, V7, P7040
   LEE H, 2007, P 2 INT C SOFTW ENG, P42
   NAKAMURA T, 2005, P 11 INT SOFTW METR, P78
   Offen RJ, 1997, IEEE SOFTWARE, V14, P45, DOI 10.1109/52.582974
   PFLEEGER SL, 1993, IEEE SOFTWARE, V10, P67, DOI 10.1109/52.210606
   Sangal Neeraj, 2005, P 20 ANN ACM SIGPLAN, P167, DOI DOI 10.1145/1103845.1094824
   Timm N., 1997, UNIVARIATE MULTIVARI
   Watson A.H., 1996, NIST Special Publication
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 26
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2010
VL 52
IS 9
BP 923
EP 933
DI 10.1016/j.infsof.2010.03.013
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 629QL
UT WOS:000280214700004
DA 2024-07-18
ER

PT J
AU Liu, SY
AF Liu, Shaoying
TI Integrating top-down and scenario-based methods for constructing
   software specifications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software specification; Software design; Data flow; Structured method;
   Scenario-based method
AB How to achieve a complete and consistent software specification by construction is an important issue for software quality assurance but still remains an open problem. The difficulty lies in the fact that the assurance of the completeness needs user's judgments and the specification keeps changing as requirements analysis progresses. To allow the user to easily make such judgments and to reduce chances for creating inconsistencies due to frequent specification modifications, in this paper we describe an intuitive, formal, and expressive specification method that integrates top-down decompositional and scenario-based compositional methods. The decompositional method is used at an informal level with the goal of achieving a complete coverage of the user's functional requirements, while the compositional method is used to precisely define the functionality of each scenario and to construct complex scenarios by composition of simple scenarios in a formal, intuitive language called SOFL. Combination of the decompositional and compositional processes can facilitate the analyst in completing a specification in a hierarchical structure. We present an example to illustrate how the integrated method is used in practice and describe a software support tool for the method. (C) 2009 Elsevier B.V. All rights reserved.
C1 Hosei Univ, Tokyo, Japan.
C3 Hosei University
RP Liu, SY (corresponding author), Hosei Univ, Tokyo, Japan.
EM sliu@hosei.ac.jp
FU Ministry of Education, Culture, Sports, Science and Technology of Japan
   [18500027]; Grants-in-Aid for Scientific Research [18500027] Funding
   Source: KAKEN
FX This work is supported by the Ministry of Education, Culture, Sports,
   Science and Technology of Japan under Grant-in-Aid for Scientific
   Research (No. 18500027). A preliminary version of this paper was
   presented at the 8th International Conference on Quality Software (QSIC
   2008) [1].
CR [Anonymous], 1989, Modern structured analysis
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Dawes J., 1991, VDM SL REFERENCE GUI
   DeLoach SA, 2000, IEEE T SOFTWARE ENG, V26, P500, DOI 10.1109/32.852740
   DELOR T, 2003, P 16 INT C SOFTW SYS
   Djuric D, 2005, J OBJECT TECHNOL, V4, P109, DOI 10.5381/jot.2005.4.1.a3
   Duan ZH, 2008, ACTA INFORM, V45, P43, DOI 10.1007/s00236-007-0062-z
   GOMAA H, 2000, P 6 IEEE INT C ENG C
   GOMAA H, 1992, TELEMAT INFORM, V9, P3
   Gough P. A., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P10, DOI 10.1109/ISRE.1995.512541
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hunt J., 2003, Guide to the unified process featuring UML, Java, and design patterns
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   LIU S, 2008, P 8 INT C QUAL SOFTW
   LIU S, 2009, P 2009 WORLD C SOFTW
   Liu S., 1998, P 1998 IEEE WORKSH I
   Liu Shaoying., 2004, Formal Engineering for Industrial Software Development
   Liu SY, 2004, LECT NOTES COMPUT SC, V3299, P15
   Liu SY, 1998, IEEE T SOFTWARE ENG, V24, P390, DOI 10.1109/TSE.1998.685261
   Page-Jones M., 2000, FUNDAMENTALS OBJECT
   QIAN HF, 1995, P 1 IEEE INT C ENG C, P167
   ROYER T, 1995, P DIS95 DES INT SYST, P237
   Rumbaugh James, 1999, The unified modeling language reference manual
   SUN J, 2008, P INT C SOFTW ENG IC, P919
   Sun J, 2006, IEEE T SOFTWARE ENG, V32, P349, DOI 10.1109/TSE.2006.55
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   TSE TH, 1992, INT C RES CTR COMP S
   *VDM SL TOOL GROUP, 1994, US MAN IFAD VDM SL T
   Watahiki K, 2004, IEICE T INF SYST, VE87D, P822
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
NR 32
TC 4
Z9 6
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1565
EP 1572
DI 10.1016/j.infsof.2009.06.015
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300008
DA 2024-07-18
ER

PT J
AU Ceccato, M
   Dean, TR
   Tonella, P
AF Ceccato, Mariano
   Dean, Thomas Roy
   Tonella, Paolo
TI Recovering structured data types from a legacy data model with overlays
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th IEEE International Working Conference on Source Code Analysis and
   Manipulation
CY SEP 28-29, 2008
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Semant Designs, SAP, Reengn Forum, Ctr Res Evolut Search & Testing
DE Program transformations; Reengineering; Legacy systems
ID IDENTIFYING OBJECTS; LANGUAGE; SYSTEMS; DESIGN
AB Legacy systems are often written in programming languages that support arbitrary variable overlays. When migrating to modern languages, the data model must adhere to strict structuring rules. such as those associated with an object oriented data model, supporting classes, class attributes and inter-class relationships.
   In this paper, we deal with the problem of automatically transforming a data model which lacks structure and relies on the explicit layout of variables in memory as defined by programmers. We introduce an abstract syntax and a set of abstract rewrite rules to describe the proposed approach in a language neutral formalism. Then, we instantiate the approach for the proprietary programming language that was used to develop a large legacy system we are migrating to Java. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Ceccato, Mariano; Tonella, Paolo] IRST, FBK, I-38050 Povo, Italy.
   [Dean, Thomas Roy] Queens Univ, Kingston, ON K7L 3N6, Canada.
C3 Fondazione Bruno Kessler; Queens University - Canada
RP Tonella, P (corresponding author), IRST, FBK, Via Sommarive 18, I-38050 Povo, Italy.
EM ceccato@fbk.eu; tom.dean@queensu.ca; tonella@fbk.eu
RI Ceccato, Mariano/T-7139-2019; Tonella, Paolo/C-1702-2015
OI Ceccato, Mariano/0000-0001-7325-0316; Tonella, Paolo/0000-0003-3088-0339
CR [Anonymous], ICSE 97
   [Anonymous], P 26 ACM SIGPLAN SIG
   Balakrishnan G, 2004, LECT NOTES COMPUT SC, V2985, P5
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Canfora G, 1996, SOFTWARE PRACT EXPER, V26, P25, DOI 10.1002/(SICI)1097-024X(199601)26:1<25::AID-SPE994>3.0.CO;2-T
   Ceccato M, 2008, WORK CONF REVERSE EN, P177, DOI 10.1109/WCRE.2008.27
   Cifuentes C, 1998, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSM.1998.738514
   Cimitile A, 1999, J SYST SOFTWARE, V44, P199, DOI 10.1016/S0164-1212(98)10057-2
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   DEAN TR, 2003, J AUTOMATED SOFTWARE, V10, P311
   DeLucia A, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P122, DOI 10.1109/ICSM.1997.624238
   GUO X, 2003, P 3 IEEE INT WORKSH
   Jhala R, 2007, LECT NOTES COMPUT SC, V4424, P553
   Komondoor R, 2005, LECT NOTES COMPUT SC, V3440, P157
   KOMONDOOR R, 2007, WCRE, P110
   Liu S.-S., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P266, DOI 10.1109/ICSM.1990.131371
   PIDAPARTHI S, 1997, EUROMICRO 97, P128, DOI DOI 10.1109/CSMR.1997.583021
   RAMALINGAM G, 2006, ICSE, P192
   Sneed H., 1992, P C SOFTWARE MAINTEN, P105, DOI DOI 10.1109/ICSM.1992.242552
   SNEED HM, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P217, DOI 10.1109/WCRE.1995.514710
   Swanson E. B., 1976, ICSE 76, P492
   TAN HBK, 1995, INFORM SOFTWARE TECH, V37, P67, DOI 10.1016/0950-5849(95)93484-V
   VANDEURSEN A, 1999, IWPC, P74
   VANDEURSEN A, 2000, WCRE, P32
   VANDEURSEN A, P 1999 INT C 1999, P246, DOI DOI 10.1109/ICSE.1999.841014
   Wong K., 1998, The Rigi User's Manual - Version 5.4.4
NR 26
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2009
VL 51
IS 10
BP 1454
EP 1468
DI 10.1016/j.infsof.2009.04.017
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 481VN
UT WOS:000268840400007
DA 2024-07-18
ER

PT J
AU Gómez-Zamalloa, M
   Albert, E
   Puebla, G
AF Gomez-Zamalloa, Miguel
   Albert, Elvira
   Puebla, German
TI Decompilation of Java bytecode to Prolog by partial evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th IEEE International Working Conference on Source Code Analysis and
   Manipulation
CY SEP 28-29, 2008
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Semant Designs, SAP, Reengn Forum, Ctr Res Evolut Search & Testing
DE Program transformation; Partial evaluation; Decompilation; Interpreters;
   Java bytecode; Logic programming
ID VERIFICATION; PROGRAMS; COST
AB Reasoning about Java bytecode (JBC) is complicated due to its unstructured control-flow, the use of three-address code combined with the use of an operand stack, etc. Therefore, many static analyzers and model checkers for JBC first convert the code into a higher-level representation. In contrast to traditional decompilation, such representation is often not Java source, but rather some intermediate language which is a good input for the subsequent phases of the tool. Interpretive decompilation consists in partially evaluating an interpreter for the compiled language (in this case JBC) written in a high-level language with respect to the code to be decompiled. There have been proofs-of-concept that interpretive decompilation is feasible, but there remain important open issues when it comes to decompile a real language such as JBC. This paper presents, to the best of our knowledge, the first modular scheme to enable interpretive decompilation of a realistic programming language to a high-level representation, namely of JBC to Prolog. We introduce two notions of optimality, which together require that decompilation does not generate code more than once for each program point. We demonstrate the impact of our modular approach and optimality issues on a series of realistic benchmarks. Decompilation times and decompiled program sizes are! linear with the size of the input bytecode program. This demonstrates empirically the scalability, of modular decompilation of JBC by partial evaluation. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Gomez-Zamalloa, Miguel; Albert, Elvira] Univ Complutense Madrid, DSIC, E-28040 Madrid, Spain.
   [Puebla, German] Tech Univ Madrid, CLIP, E-28660 Madrid, Spain.
C3 Complutense University of Madrid; Universidad Politecnica de Madrid
RP Gómez-Zamalloa, M (corresponding author), Univ Complutense Madrid, DSIC, E-28040 Madrid, Spain.
EM mzamalloa@fdi.ucm.es; elvira@fdi.ucm.es; german@fi.upm.es
OI GOMEZ-ZAMALLOA GIL, MIGUEL/0000-0003-1557-689X
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Albert E, 2007, LECT NOTES COMPUT SC, V4421, P157
   Albert E, 2007, LECT NOTES COMPUT SC, V4354, P124
   Albert E, 2008, LECT NOTES COMPUT SC, V5382, P113, DOI 10.1007/978-3-540-92188-2_5
   Albert E, 2008, LECT NOTES COMPUT SC, V4915, P23, DOI 10.1007/978-3-540-78769-3_3
   Albert E, 2006, LECT NOTES COMPUT SC, V3901, P115, DOI 10.1007/11680093_8
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   BARRAS B, 1997, RT0203
   BELUR S, JDEC JAVA DECOMPILER
   BREUER PT, 1994, ACM T PROGR LANG SYS, V16, P1613, DOI 10.1145/186025.186093
   Cifuentes C, 1998, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSM.1998.738514
   CIFUENTES C, 1995, SOFTWARE PRACT EXPER, V25, P811, DOI 10.1002/spe.4380250706
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   DeLine R., 2005, Technical report. MSR-TR-2005-70
   Futamura Y., 1971, Systems, Compurters, Controls, V25, P45
   GALLAGHER J, 1986, P 7 EUR C ART INT
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   GALLAGHER JP, 2000, P PEPM 00, P44
   Gómez-Zamalloa M, 2007, ELECTRON NOTES THEOR, V190, P85, DOI 10.1016/j.entcs.2007.02.062
   Gotlieb A, 2000, LECT NOTES ARTIF INT, V1861, P399
   Henriksen KS, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P184
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOMOROWSKI J, 1992, LECT NOTES COMPUT SC, V649, P49
   Launchbury John., 1993, Proceedings of the 20th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages. POPL'93. New York, NY, P144, DOI DOI 10.1145/158511.158618
   Leroy X, 2003, J AUTOM REASONING, V30, P235, DOI 10.1023/A:1025055424017
   Leuschel M, 2002, LECT NOTES COMPUT SC, V2566, P379
   Leuschel M, 2004, LECT NOTES COMPUT SC, V3049, P340
   Leuschel M, 2004, THEOR PRACT LOG PROG, V4, P139, DOI 10.1017/S1471068403001662
   LEUSCHEL M, 1996, LOGIC PROGRAM SYNTHE, P83
   Leuschel M, 2007, LECT NOTES COMPUT SC, V4407, P43, DOI 10.1007/978-3-540-71410-1_5
   Lloyd J. W., 2012, Foundations of Logic Programming
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   MENDEZLOJO M, 2007, 17 INT S LOG BAS PRO
   Meudec C, 2001, SOFTW TEST VERIF REL, V11, P81, DOI 10.1002/stvr.225
   Miecznikowski J, 2002, LECT NOTES COMPUT SC, V2304, P111
   Müller RA, 2004, Proceedings of the IASTED International Conference on Software Engineering, P365
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   PICHARDIE D, BICOLANO BYTE CODE L
   Puebla G, 2005, LECT NOTES COMPUT SC, V3573, P149, DOI 10.1007/11506676_10
   Schwarz B, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/WCRE.2002.1173063
   Vallee-Rai R., 1999, CASCON 1999, P125
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 44
TC 17
Z9 19
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2009
VL 51
IS 10
BP 1409
EP 1427
DI 10.1016/j.infsof.2009.04.010
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 481VN
UT WOS:000268840400004
DA 2024-07-18
ER

PT J
AU Galinac, T
AF Galinac, Tihana
TI Empirical evaluation of selected best practices in implementation of
   software process improvement
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software process improvement; SPI implementation strategy; Empirical
   study
ID KNOWLEDGE; FRAMEWORK; SUCCESS
AB To be successfully applied in practice, software process improvement (SPI) needs not only identifying what needs to be improved, and which factors will influence its success, but also guidelines on how to implement those improvements and meet the factors. This paper proposes an SPI implementation strategy that has been developed in lines with standard SPI models and frameworks, intended to be suitable for global software development (GSD), and exploiting ideas of incremental deliveries, short iterations with frequent reviews and close collaboration with customers. Quantitative analyses of data from case studies within large GSD show that improvement teams implementing the strategy are more likely to have better progress and achieve better effectiveness in terms of improvement deployment within development teams. The results could be useful to SPI practitioners in making their SPI initiatives more successful. (C) 2009 Elsevier B.V. All rights reserved.
C1 Univ Rijeka, Fac Engn, Rijeka 51000, Croatia.
C3 University of Rijeka
RP Galinac, T (corresponding author), Univ Rijeka, Fac Engn, Vukovarska 58, Rijeka 51000, Croatia.
EM tihana.galinac@riteh.hr
RI Grbac, Tihana Galinac/K-2439-2019; Galinac Grbac, Tihana/D-7048-2016;
   Grbac, Tihana Galinac/AAU-8704-2021
OI Galinac Grbac, Tihana/0000-0002-4351-4082; 
CR [Anonymous], USERS GUIDE SOFTWARE
   [Anonymous], 90042000 ISO
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   BASILI VR, 1995, SLOAN MANAGE REV, V37, P55
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   BOWERS J, 2002, LECT NOTES COMPUTER, V2418, P269
   CHRISSIS M, 2004, CMMI GUIDE PROCESS I
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Crosby P.B., 1996, QUALITY IS STILL FRE
   Deming W. E., 1986, OUT CRISIS
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   El Emam K., 1999, SUCCESS FACTORS BARR, P355
   El Emam Khaled, 1997, SPICE THEORY PRACTIC
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   Galinac T, 2007, LECT NOTES COMPUT SC, V4589, P51
   Goldenson D., 1995, APPRAISAL SYSTEMATIC
   Gorschek T, 2004, SOFTWARE PRACT EXPER, V34, P1311, DOI 10.1002/spe.615
   Hartmann D, 2006, AGILE 2006, Proceedings, P126, DOI 10.1109/AGILE.2006.17
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   *ISO, 2000, 900012000 ISO
   *ISO IEC, 2000, 15504 ISOIEC
   Juran J.Godfrey., 1999, Quality handbook
   Kähkönen T, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P2
   Kaplan R.S., 1996, The balanced scorecard: translating strategy into action
   Krasner H., 1997, ACCUMULATING BODY EV
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Mathiassen L, 2005, IEEE SOFTWARE, V22, P84, DOI 10.1109/MS.2005.159
   Niazi M, 2005, J SYST SOFTWARE, V78, P204, DOI 10.1016/j.jss.2004.09.001
   Niazi M, 2005, J SYST SOFTWARE, V74, P155, DOI 10.1016/j.jss.2003.10.017
   Niazi M, 2009, INFORM SOFTWARE TECH, V51, P1231, DOI 10.1016/j.infsof.2009.03.001
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   Rainer A, 2002, J SYST SOFTWARE, V62, P71, DOI 10.1016/S0164-1212(01)00122-4
   Richardson I, 2002, LECT NOTES COMPUT SC, V2349, P100
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Valtanen A, 2008, LECT NOTES COMPUT SC, V5089, P258, DOI 10.1007/978-3-540-69566-0_22
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   Wilson DN, 2001, J SYST SOFTWARE, V59, P135, DOI 10.1016/S0164-1212(01)00057-7
   Yin R.K., 2003, CASE STUDY RES DESIG
   ZMUD RW, 1984, MANAGE SCI, V30, P727, DOI 10.1287/mnsc.30.6.727
NR 47
TC 12
Z9 14
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2009
VL 51
IS 9
BP 1351
EP 1364
DI 10.1016/j.infsof.2009.05.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 478BC
UT WOS:000268561700006
DA 2024-07-18
ER

PT J
AU Wu, IL
   Hung, CY
AF Wu, Ing-Long
   Hung, Ching-Yi
TI A strategy-based process for effectively determining system requirements
   in eCRM development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE eCRM; Relationship marketing; Consumer behaviors; Requirements
   engineering
ID CRM ADOPTION; CUSTOMER; MANAGEMENT; ELICITATION; CONTEXT; MODEL
AB Customer relationship management (CRM) is an important concept to maintain competitiveness at e-commerce. Thus, many organizations hastily implement eCRM and fail to achieve its goal. CRM concept consists of a number of compound components on product designs, marketing attributes, and consumer behaviors. This requires different approaches from traditional ones in developing eCRM. Requirements engineering is one of the important steps in software development. Without a well-defined requirements specification, developers do not know how to proceed with requirements analysis. This research proposes a strategy-based process for requirements elicitation. This framework contains three steps: define customer strategies, identify consumer and marketing characteristics, and determine system requirements. Prior literature lacks discussing the important role of customer strategies in eCRM development. Empirical findings reveal that this strategy-based view positively improves the performance of requirements elicitation. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Wu, Ing-Long] Natl Chung Cheng Univ, Dept Informat Management, Chiayi 621, Taiwan.
   [Hung, Ching-Yi] Chung Hwa Telecommun Inc, Taipei, Taiwan.
C3 National Chung Cheng University; Chunghwa Telecom
RP Wu, IL (corresponding author), Natl Chung Cheng Univ, Dept Informat Management, 168 Univ Rd, Chiayi 621, Taiwan.
EM ilwu@mis.ccu.edu.tw
CR Al-Salem LS, 2007, J SYST SOFTWARE, V80, P294, DOI 10.1016/j.jss.2006.05.005
   Albert TC, 2004, MIS QUART, V28, P161
   Alspaugh TA, 2008, INFORM SOFTWARE TECH, V50, P198, DOI 10.1016/j.infsof.2006.12.003
   [Anonymous], MARKET MANAGEMENT AN
   [Anonymous], 2000, European Management Journal, DOI [DOI 10.1016/S0263-2373(00)00013-X, 10.1016/S0263-2373, DOI 10.1016/S0263-2373]
   ARSHAM H, 1998, COMPUTER OPERATIONS, V15, P299
   Berry M.J. A., 2004, DATA MINING TECHNIQU, V2nd
   Bettman J.R., 1979, An Information Processing Theory of Consumer Choice
   BOWMAN B, 1983, INFORM MANAGE, V6, P11, DOI 10.1016/0378-7206(83)90016-2
   Brown S., 2000, Customer relationship management: A strategic imperative in the world of e-business
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Buckinx W, 2005, EUR J OPER RES, V164, P252, DOI 10.1016/j.ejor.2003.12.010
   Bull C., 2003, Business Process Management Journal, V9, P592, DOI 10.1108/14637150310496703
   Chalmeta R, 2006, J SYST SOFTWARE, V79, P1015, DOI 10.1016/j.jss.2005.10.018
   Chan J.O., 2005, J AM ACAD BUSINESS, V6, P32
   Coughlan J, 2003, INFORM SOFTWARE TECH, V45, P525, DOI [10.1016/S0950-5849(03)00032-6, 10.1016/SO950-5849(03)00032-6]
   Curry J., 2000, CUSTOMER MARKETING M
   DAVIS GB, 1982, IBM SYST J, V21, P4, DOI 10.1147/sj.211.0004
   Engel J., 1990, Consumer behavior
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   GREUN TW, 1995, INT BUSINESS REV, V4, P447
   Guinan PJ, 1998, INFORM SYST RES, V9, P101, DOI 10.1287/isre.9.2.101
   Henry J. W., 1994, Information Resources Management Journal, V7, P21
   Hoffer J.A., 2005, MODERN SYSTEMS ANAL, V4th
   Howard JohnA. Jagdish N. Sheth., 1969, The Theory of Buyer Behavior
   IVES B, 1984, COMMUN ACM, V27, P1193, DOI 10.1145/2135.2137
   Kalakota R., 2001, E BUSINESS ROADMAP S
   Kale SH, 2004, MARK MANAG, V13, P42
   Karakostas B, 2005, INFORM MANAGE-AMSTER, V42, P853, DOI 10.1016/j.im.2004.08.006
   Kennedy M E., 2004, Strategic Finance, V85, P36
   King RC, 2004, INT J ELECTRON COMM, V8, P103, DOI 10.1080/10864415.2004.11044297
   Ko E, 2008, J BUS RES, V61, P65, DOI 10.1016/j.jbusres.2006.05.011
   Ko Y, 2007, INFORM SOFTWARE TECH, V49, P1128, DOI 10.1016/j.infsof.2006.11.007
   Kumar V., 2006, CUSTOMER RELATIONSHI
   LARSEN TJ, 1992, INFORM MANAGE, V22, P29, DOI 10.1016/0378-7206(92)90004-Y
   Lassar W.M., 2008, Journal of Accountancy, V206, P68
   Lee-Kelley L., 2003, Marketing Intelligence Planning, V21, P239, DOI DOI 10.1108/02634500310480121
   LEIFER R, 1994, INFORM MANAGE, V27, P275, DOI 10.1016/0378-7206(94)90022-1
   Liu KC, 2008, INFORM SOFTWARE TECH, V50, P1155, DOI 10.1016/j.infsof.2008.03.008
   Maguire M, 2001, INT J HUM-COMPUT ST, V55, P453, DOI 10.1006/ijhc.2001.0486
   Mendoza LE, 2007, INFORM SOFTWARE TECH, V49, P913, DOI 10.1016/j.infsof.2006.10.003
   Morris MH, 1998, IND MARKET MANAG, V27, P359, DOI 10.1016/S0019-8501(97)00079-5
   Mowen J.C., 1998, CONSUMER BEHAV
   NEUMANN S., 1994, STRATEGIC INFORM SYS
   Pavlou PA, 2003, INT J ELECTRON COMM, V7, P101, DOI 10.1080/10864415.2003.11044275
   Payne A, 2004, IND MARKET MANAG, V33, P527, DOI 10.1016/j.indmarman.2004.02.002
   Peppers D, 1999, HARVARD BUS REV, V77, P151
   Ratchev S, 2003, KNOWL-BASED SYST, V16, P1, DOI 10.1016/S0950-7051(02)00027-8
   Rigby DK, 2004, HARVARD BUS REV, V82, P118
   Rolland C, 1999, INFORM SOFTWARE TECH, V41, P985, DOI 10.1016/S0950-5849(99)00073-7
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Schiffman L.e., 1994, CONSUMER BEHAV
   Scott J., 1994, Proceedings of the 15th ICIS, P111
   SHARMA A, 2006, J RELATIONSHIP MARKE, V5, P63
   Sheth JagdishN., 1991, Consumption values and market choices: Theory and applications
   SHETH JN, 1974, MODELS BUYING BEHAV
   Somé SS, 2006, INFORM SOFTWARE TECH, V48, P43, DOI 10.1016/j.infsof.2005.02.006
   Stone M, 1996, LONG RANGE PLANN, V29, P675, DOI 10.1016/0024-6301(96)00061-1
   Sutcliffe A, 1997, INT J HUM-COMPUT ST, V47, P223, DOI 10.1006/ijhc.1997.0118
   Swift R.S., 2000, Accelerating Customer Relationships: Using CRM and Relationship Technologies, V1
   TENG JTC, 1990, DATA BASE, V20, P27, DOI 10.1145/95409.95421
   Turban E., 2004, ELECT COMMERCE MANAG
   van Nunen JAEE, 2004, CALIF MANAGE REV, V46, P40, DOI 10.2307/41166209
   Wilson H, 2007, IND MARKET MANAG, V36, P770, DOI 10.1016/j.indmarman.2005.09.008
   Wu IL, 2005, BEHAV INFORM TECHNOL, V24, P303, DOI 10.1080/0144929042000320027
NR 65
TC 14
Z9 15
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2009
VL 51
IS 9
BP 1308
EP 1318
DI 10.1016/j.infsof.2009.03.004
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 478BC
UT WOS:000268561700002
DA 2024-07-18
ER

PT J
AU Afzal, W
   Torkar, R
   Feldt, R
AF Afzal, Wasif
   Torkar, Richard
   Feldt, Robert
TI A systematic review of search-based testing for non-functional system
   properties
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic review; Non-functional system properties; Search-based
   software testing
ID TEST-DATA GENERATION; REAL-TIME SYSTEMS; GENETIC ALGORITHM; SOFTWARE;
   PERFORMANCE
AB Search-based software testing is the application of metaheuristic search techniques to generate software tests. The test adequacy criterion is transformed into a fitness function and a set of solutions in the search space are evaluated with respect to the fitness function using a metaheuristic search technique. The application of metaheuristic search techniques for testing is promising due to the fact that exhaustive testing is infeasible considering the size and complexity of software under test. Search-based software testing has been applied across the spectrum of test case design methods; this includes white-box (structural), black-box (functional) and grey-box (combination of structural and functional) testing. In addition, metaheuristic search techniques have also been applied to test non-functional properties. The overall objective of undertaking this systematic review is to examine existing work into non-functional search-based software testing (NFSBST). We are interested in types of non-functional testing targeted using metaheuristic search techniques, different fitness functions used in different types of search-based non-functional testing and challenges in the application of these techniques. The systematic review is based on a comprehensive set of 35 articles obtained after a multi-stage selection process and have been published in the time span 1996-2007. The results of the review show that metaheuristic search techniques have been applied for non-functional testing of execution time, quality of service, security, usability and safety. A variety of metaheuristic search techniques are found to be applicable for non-functional testing including simulated annealing. tabu search, genetic algorithms, ant colony methods, grammatical evolution, genetic programming (and its variants including linear genetic programming) and swarm intelligence methods. The review reports on different fitness functions used to guide the search for each of the categories of execution time, safety, usability, quality of service and security; along with a discussion of possible challenges in the application of metaheuristic search techniques. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Afzal, Wasif; Torkar, Richard; Feldt, Robert] Blekinge Inst Technol, Dept Syst & Software Engn, Sch Engn, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Afzal, W (corresponding author), Blekinge Inst Technol, Dept Syst & Software Engn, Sch Engn, S-37225 Ronneby, Sweden.
EM wasif.afzal@bth.se; richard.torkar@bth.se; robert.feldt@bth.se
RI Afzal, Wasif/C-8028-2013
OI Feldt, Robert/0000-0002-5179-4205
CR ABDELLATILKADDO.P, PROPERTY ORIENTED TE
   Afzal W., 2008, 20 INT C SOFTW ENG K
   ALANDER JT, 1997, APSCOM 97, V1, P95
   Alba E, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1066
   [Anonymous], 2007, EBSE2007001
   [Anonymous], ACM WORKSH INT SOFTW
   [Anonymous], 2001, 9126 ISOIEC
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2428
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1893
   Briand L. C., 2006, Genetic Programming and Evolvable Machines, V7, P145, DOI 10.1007/s10710-006-9003-9
   Briand LC, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1021
   BRYCE RC, 2005, CHI 05, P1108
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Budynek J, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1905
   Burke E K., 2005, Introductory tutorials in optimization and decision support techniques
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   COHEN CJC, 2003, ICSE 03, P38
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Dai YS, 2003, J SYST SOFTWARE, V66, P47, DOI 10.1016/S0164-1212(02)00062-6
   Del Grosso C, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1037
   Derderian K, 2004, LECT NOTES COMPUT SC, V3103, P1429
   Di Penta M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1090
   Dozier G, 2004, LECT NOTES COMPUT SC, V3102, P263
   Dyba T., 2007, ESEM 2007, P225, DOI DOI 10.1109/ESEM.2007.59
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Firesmith DG, 2003, Technical Note CMU/SEI-2003-TN-033
   Gross H.-G., 2000, IEE Proceedings-Software, V147, P25, DOI 10.1049/ip-sen:20000525
   GROSS HG, 2003, ITPC 03
   GROSS HG, 2001, SEMINAL 01
   GROSS HG, 1999, IEE C APPL MOD VER A
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   IEEE, 1998, 8301998 IEEE
   Kayacik HG, 2007, 2007 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN SECURITY AND DEFENSE APPLICATIONS, P153, DOI 10.1109/CISDA.2007.368148
   KAYACIK HG, 2005, ACSAC 05, P225
   Kayacik HG, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1667
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Koljonen J, 2007, EXPERT SYST APPL, V32, P879, DOI 10.1016/j.eswa.2006.01.030
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MUELLER F, 1998, REAL-TIME SYST, V21, P241
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   OSULLIVAN M, 1998, EUROSTAR 98
   Pohlheim H, 1999, GECCO-99: PROCEEDINGS OF THE GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1795
   POHLHEIM H, 2005, SAE 2005 WORLD C EXH
   Puschner P, 1998, REAL TIM SYST SYMP P, P134, DOI 10.1109/REAL.1998.739738
   SCHULTZ AC, 1997, LEARNING BREAK THING
   SCHULTZ AC, 1992, AUV 92, P158
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   STARDOM J, THESIS S FRASER U BC
   Tfili M, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1917
   TRACEY N, 1998, INT WORKSH DEP COMP, P169
   Tracey N., 1999, P 17 INT SYSTEM SAFE, P128
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   WALCOTT KR, 2006, SSTA 06, P1
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   Wegener J, 1998, REAL-TIME SYST, V15, P275, DOI 10.1023/A:1008096431840
   WEGENER J, 1996, EUROSTAR 96
   WEGENER J, 2000, WAPATV 00
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhan Y, 2004, LECT NOTES COMPUT SC, V3103, P1413
NR 64
TC 252
Z9 261
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2009
VL 51
IS 6
BP 957
EP 976
DI 10.1016/j.infsof.2008.12.005
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 435BX
UT WOS:000265319400001
DA 2024-07-18
ER

PT J
AU Moreno-Ger, P
   Fuentes-Fernández, R
   Sierra-Rodríguez, JL
   Fernández-Manjón, B
AF Moreno-Ger, Pablo
   Fuentes-Fernandez, Ruben
   Sierra-Rodriguez, Jose-Luis
   Fernandez-Manjon, Baltasar
TI Model-checking for adventure videogames
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Adventure games; Domain-specific languages; Verification of games;
   Model-checking; Temporal properties
ID VERIFICATION
AB This paper describes a model-checking approach for adventure games focusing on (e-Adventure). a platform for the development of adaptive educational adventure videogames. In (e-Adventure), games are described using a domain-specific language oriented to game writers. By defining a translation from this language to suitable state-based models, it is possible to automatically extract a verification model for each (e-Adventure) game. In addition, temporal properties to be verified are described using an extensible assertion language, which can be tailored to each specific application scenario. When the framework determines that some of these properties do not hold, it generates an animation of a counterexample. This approach facilitates the collaboration of multidisciplinary teams of experts during the verification of the integrity of the game scripts, exchanging hours of manual verification for semi-automatic verification processes that also facilitate the diagnosis of the conditions that may potentially break the games. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Moreno-Ger, Pablo; Fuentes-Fernandez, Ruben; Sierra-Rodriguez, Jose-Luis; Fernandez-Manjon, Baltasar] Univ Complutense Madrid, Fac Informat, Dpto Ingn Software & Inteligencia Artificial, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP Sierra-Rodríguez, JL (corresponding author), Univ Complutense Madrid, Fac Informat, Dpto Ingn Software & Inteligencia Artificial, E-28040 Madrid, Spain.
EM pablom@fdi.ucm.es; ruben@fdi.ucm.es; jlsierra@fdi.ucm.es;
   balta@fdi.ucm.es
RI Fernandez-Manjon, Baltasar/A-5281-2011; Moreno-Ger, Pablo/B-5419-2009;
   Fuentes-Fernandez, Ruben/K-6523-2014; Sierra, Jose Luis/J-6935-2014
OI Moreno-Ger, Pablo/0000-0003-4817-8150; Fuentes-Fernandez,
   Ruben/0000-0001-6876-0979; Sierra, Jose Luis/0000-0002-0317-0510;
   Fernandez-Manjon, Baltasar/0000-0002-8200-6216
CR AKERS SB, 1978, IEEE T COMPUT, V27, P509, DOI 10.1109/TC.1978.1675141
   Amory A., 2001, Journal of Interactive Learning Research, V12, P249
   [Anonymous], LNCS
   [Anonymous], P 22 INT C SOFTW ENG
   Baldoni M, 2007, LECT NOTES COMPUT SC, V4753, P432
   Baldoni M, 2007, LECT NOTES COMPUT SC, V4753, P426
   Ball T, 2000, LECT NOTES COMPUT SC, V1885, P113
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Chaki S, 2005, FORM ASP COMPUT, V17, P461, DOI 10.1007/s00165-005-0071-z
   Chan W, 1998, IEEE T SOFTWARE ENG, V24, P498, DOI 10.1109/32.708566
   Chandra S, 1999, IEEE T SOFTWARE ENG, V25, P317, DOI 10.1109/32.798322
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke Edmund M., 2001, Model Checking
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   CLARKE EM, 2000, CMUCS00XXX SCH COMP
   Conallen J, 1999, COMMUN ACM, V42, P63, DOI 10.1145/317665.317677
   Corbett J. C., 2002, International Journal on Software Tools for Technology Transfer, V4, P34, DOI 10.1007/s100090200075
   Darimont R., 1996, Software Engineering Notes, V21, P179, DOI 10.1145/250707.239131
   Di Sciascio E, 2005, LECT NOTES COMPUT SC, V3579, P69
   Dill DavidL., 1996, P 8 INT C COMPUTER A, P390
   Dillon L. K., 1994, ACM Transactions on Software Engineering and Methodology, V3, P131, DOI 10.1145/192218.192226
   Donini FM, 2006, ELECTRON NOTES THEOR, V151, P19, DOI 10.1016/j.entcs.2005.07.034
   Dwyer M. B., 1999, P 21 INT C SOFTW ENG
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   ERCEGOVAC L, 1985, DIGITAL SYSTEMS HARD
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Havelund K, 2001, IEEE T SOFTWARE ENG, V27, P749, DOI 10.1109/32.940728
   Havelund K, 1999, LECT NOTES COMPUT SC, V1680, P216
   Holzmann GJ, 2001, SOFTW TEST VERIF REL, V11, P65, DOI 10.1002/stvr.228
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   LIE D, 2001, ACM SIGARCH COMPUTER, V29, P192
   McMillan K. L., 1993, Symbolic model checking
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   MIKK E, 1998, P 2 IEEE WORKSH IND
   Moreno-Ger P, 2008, COMPUT HUM BEHAV, V24, P2530, DOI 10.1016/j.chb.2008.03.012
   Moreno-Ger P, 2007, SCI COMPUT PROGRAM, V67, P3, DOI 10.1016/j.scico.2006.07.003
   Moreno-Ger P, 2007, J INTERACT MEDIA EDU
   MORENOGER P, 2008, T EDUTAINMENT 1, V5080, P288
   MORENOGER P, 2008, IEEE COMPUT, V41, P24
   MUSAVATHI M, 2002, 5 S OP SYST DES IMPL
   NAKAJIMA S, 2002, P OOPSLA 2002 WORKSH
   PU G, 2005, ELECT NOTES THEORETI, V160, P33
   Schnoebelen Ph., 2003, ADV MODAL LOGIC, V4, P393
   SCIASCIO ED, 2003, P 7 EUR C SOFTW MAIN
   Sierra JL, 2008, IEEE SOFTWARE, V25, P68, DOI 10.1109/MS.2008.36
   Sierra JL, 2006, COMPUT J, V49, P562, DOI 10.1093/comjnl/bxl008
   Stotts PD, 1998, ACM T INFORM SYST, V16, P1, DOI 10.1145/267954.267955
   Thibault SA, 1999, IEEE T SOFTWARE ENG, V25, P363, DOI 10.1109/32.798325
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Van Eck R, 2007, GAMES AND SIMULATIONS IN ONLINE LEARNING: RESEARCH AND DEVELOPMENT FRAMEWORKS, P271
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   WALTON CD, 2004, 1 INT SEM WEB SERV S
   ZAHO X, 2006, LECT NOTES COMPUTER, V4184, P273
NR 56
TC 15
Z9 17
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 564
EP 580
DI 10.1016/j.infsof.2008.08.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 400TM
UT WOS:000262891500002
DA 2024-07-18
ER

PT J
AU Douta, G
   Talib, H
   Nierstrasz, O
   Langlotz, F
AF Douta, Gisele
   Talib, Haydar
   Nierstrasz, Oscar
   Langlotz, Frank
TI CompAS: A new approach to commonality and variability analysis with
   applications in computer assisted orthopaedic surgery
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Computer-assisted surgery; Software reuse; Component-based programming;
   Domain analysis; Commonality and variability; Software evolution
ID DOMAIN ANALYSIS
AB In rapidly evolving domains such as Computer Assisted Orthopaedic Surgery (CAOS) emphasis is often put first on innovation and new functionality, rather than in developing the common infrastructure needed to support integration and reuse of these innovations. In fact, developing such an infrastructure is often considered to be a high-risk venture given the volatility of such a domain. We present CompAS, a method that exploits the very evolution of innovations in the domain to carry out the necessary quantitative and qualitative commonality and variability analysis. especially in the case of scarce system documentation. We show how our technique applies to the CAOS domain by using conference proceedings as a key source of information about the evolution of features in CAOS systems over a period of several years. We detect and classify evolution patterns to determine functional commonality and variability. We also identify non-functional requirements to help capture domain variability. We have validated our approach by evaluating the degree to which representative test systems can be covered by the common and variable features produced by our analysis. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Douta, Gisele; Talib, Haydar; Langlotz, Frank] Univ Bern, Inst Surg Technol & Biomech, MEM Res Ctr Orthopaed Surg, CH-3014 Bern, Switzerland.
   [Nierstrasz, Oscar] Univ Bern, Inst Comp Sci, Software Composit Grp, CH-3012 Bern, Switzerland.
C3 University of Bern; University of Bern
RP Douta, G (corresponding author), Univ Bern, Inst Surg Technol & Biomech, MEM Res Ctr Orthopaed Surg, Stauffacherstr 78, CH-3014 Bern, Switzerland.
EM Gisele.Douta@MEMcenter.unibe.ch
OI Nierstrasz, Oscar/0000-0002-9975-9791
FU Swiss National Center of Competence
FX This work was supported by the Swiss National Center of Competence in
   Research on "Computer Aided and Image Guided Medical Intervention
   (CO-ME)".
CR [Anonymous], P INT WORKSH PRINC S
   [Anonymous], 2006, Cambridge Dictionaries Online
   Antón AI, 2001, PROC INT CONF SOFTW, P421, DOI 10.1109/ICSE.2001.919115
   ARANGO S, 1994, SOFTWARE REUSABILITY, P17
   BAYER J, 1999, P 1 INT S GEN COMP B
   Chandrasekaran B, 1999, IEEE INTELL SYST APP, V14, P20, DOI 10.1109/5254.747902
   Czarnecki K., 2000, GEN PROGRAMMING METH
   DRAHEIM D, 2003, P INT WORKSH PRINC S
   FANTECHI A, 2003, P 5 INT WORKSH PROD
   Fischer M, 2004, J SOFTW MAINT EVOL-R, V16, P385, DOI 10.1002/smr.302
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   GOMA H, 1992, P 25 HAW INT C SYST
   HOLIBAUGH R, 2006, CMUSEI92SR3
   KANG K, 2006, CMUSEI90TR21
   Kohavi R., 1995, A Study of Cross-Validation and Bootstrap for Accuracy Estimation and Model Selection, V14
   LANGLOTZ F, 2003, TECHNIQUES ORTHOPAED, V18, P140, DOI DOI 10.1097/00013611-200306000-00002
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   LANZA M, 2001, P INT WORKSH PRINC S
   LEE K, 2002, P 7 INT C SOFTW REUS
   MOHSEN AMM, 1995, P 2 INT WORKSH MECH
   Neighbors J, 1989, SOFTWARE REUSABILITY, V1
   Nolte LP, 2004, INJURY, V35, P6, DOI 10.1016/j.injury.2004.05.005
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   SMITH DR, 1990, IEEE T SOFTWARE ENG, V16, P1024, DOI 10.1109/32.58788
   SRINIVAS YV, 1995, P INT C MATH PROGR C
   *STARS, 1996, STARSVCA025100100
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   TRACZ W, 1993, ADAGEIBM9202 FED SEC
   *TROLLT, 2006, TROLLT QT 3 3 WHIT
   VITALETTI W, 1990, P 8 ANN NAT C ADA TE
   WARTIK S, 1992, INT J SOFTW ENG KNOW, V2, P403, DOI 10.1142/S0218194092000191
NR 31
TC 4
Z9 4
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 448
EP 459
DI 10.1016/j.infsof.2008.05.017
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900016
DA 2024-07-18
ER

PT J
AU Navasa, A
   Pérez-Toledano, MA
   Murillo, JM
AF Navasa, Amparo
   Perez-Toledano, Miguel A.
   Murillo, Juan M.
TI An ADL dealing with aspects at software architecture stage
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; AOSD; Aspect-oriented architecture;
   Aspect-oriented ADL
ID DYNAMIC COMPONENT; MODEL
AB Managing complex software systems is one of the most important problems to be solved by software engineering. The software engineer needs to apply new techniques that allow for their adequate manipulation. Software architecture is becoming an important part of software design, helping the designer to handle the structure and the complexity of large systems, and AOSD is a paradigm proposed to manage this complexity by considering crosscutting concerns throughout the software's life-cycle. The suitability of the existence of an Aspect-Oriented (AO) architectural design appears when AO concepts are extended to the whole life-cycle. In order to adequately specify the AO design, aspect-oriented architecture description languages are needed. The formal basis of these will allow architects to reason about the properties of the software architecture. In this paper, a new architecture description language - AspectLEDA - is formally described in order to adequately manipulate AO concepts at the software architecture stage. The AspectLEDA translation process is also described. A toolkit assists the architect during the process. Finally, a prototype of the system can be obtained, and the correctness of the architecture obtained can be checked. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Navasa, Amparo; Perez-Toledano, Miguel A.; Murillo, Juan M.] Univ Extremadura, Dept Comp Sci, Quercus Software Engn Grp, E-06071 Badajoz, Spain.
C3 Universidad de Extremadura
RP Navasa, A (corresponding author), Univ Extremadura, Dept Comp Sci, Quercus Software Engn Grp, E-06071 Badajoz, Spain.
EM amparonm@unex.es; toledano@unex.es; juanmamu@unex.es
RI Navasa, Amparo/M-2339-2014; Murillo, Juan M/L-3838-2014; Perez Toledano,
   Miguel Angel/M-1864-2014
OI Murillo, Juan M/0000-0003-4961-4030; Perez Toledano, Miguel
   Angel/0000-0002-9417-9974
FU CICYT [TIN 2005-09405-C02-02, 2PR04B011]
FX This research work is partially supported by CICYT under the Project No.
   TIN 2005-09405-C02-02 as well as by the project 2PR04B011.
CR [Anonymous], ACM Computing Surveys, DOI [DOI 10.1145/242224.242420, 10.1145/242224.242420]
   ARAUJO J, 2002, P AO MOD UML WORKSH
   Arbab Farhad., 1998, Bulletin of the Dutch Association for Theoretical Computer Science NVTI, P11
   BARAIS O, 2005, P 31 EUR C SOFTW ENG
   Barais O, 2006, 13TH ANNUAL IEEE INTERNATIONAL SYMPOSIUM AND WORKSHOP ON ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P52, DOI 10.1109/ECBS.2006.64
   Bass Len, 2012, SEI S SOFTW
   BATISTA C, 2006, P 20 BRAZ S SOFTW EN
   BENIASSAD E, 2004, 3 AOSD C LANC UK MAR
   BENIASSAD E, 2004, 26 ICSE 2004, P158
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   BURKE B, 2005, JBOSS AOP
   Canal C, 2001, SCI COMPUT PROGRAM, V41, P105, DOI 10.1016/S0167-6423(01)00002-8
   CANAL C, 1999, 1 IFIP C SOFTW ARCH, P107
   Chitchyan R., 2005, AOSDEUROPEULANC9
   CLARKE S, 2005, AO ANAL DESIGN
   CUESTA C, 2005, INT WORKSH COORD AD, V12, P127
   Cuesta CE, 2005, LECT NOTES COMPUT SC, V3527, P247
   Cuestal C. E., 2002, Software Architecture. Systems Design, Development and Maintenance. IFIP 17th World Computer Congress - TC2 Stream/ 3rd Working IEEE/IFIP Conference on Software Architecture, P143
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   FILMAN R, 2005, ASPECT ORIENTED SOFT
   FILMAN RE, 2000, P ADV SEP CONC WORKS
   GARLAN D, 2000, CAMBRIDGE U PRESS
   Grundy J, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISRE.1999.777988
   Grundy J, 2000, INT J SOFTW ENG KNOW, V10, P713, DOI 10.1142/S0218194000000341
   Jacobson Ivar., 2005, ASPECT ORIENTED SOFT
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Lieberherr K, 2001, COMMUN ACM, V44, P39, DOI 10.1145/383845.383855
   LIEBERHERR K, 1999, NUCCS9901 TR
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P717, DOI 10.1109/32.464548
   Mencl V, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P729, DOI 10.1109/APSEC.2005.78
   MURILLO J, 1999, P 3 INT C COORD MOD, P53
   Navasa A, 2005, LECT NOTES COMPUT SC, V3527, P41
   NAVASA A, 2002, 1 AOSD C ENSCH HOLL
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   OSSHER H, 2001, S SOFTW ARCH COMP TE
   PALMA K, 2005, EXTENDING RAPID ADL
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PAULAK R, 1976, ASPECT ORIENTED SOFT, P343
   PEREZ J, 2003, P 3 IEEE INT C QUAL
   PEREZ J, 2006, 13 IEEE C ECBS IEEE
   PESSEMIER N, 2004, REFLECTION
   Pessemier N, 2006, LECT NOTES COMPUT SC, V4089, P259
   Pinto M, 2005, COMPUT J, V48, P401, DOI 10.1093/comjnl/bxh083
   Pinto M, 2003, LECT NOTES COMPUT SC, V2830, P118
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   STEIN S, 2002, P 1 AOSD C ENSCH HOL, P106
   SURVEE D, 2003, P 2 AOSD C BOST US, P21
   SUVEE D, 2006, P 9 INT SIGSOFT S CO
   TEKINERDOGAN B, 2004, ASAAM ASPECTUAL SOFT, P4
   WAGELAAR D, 2002, 1 AOSD C ENSCH HOLL
   ASPECT ORIENTED REQU
NR 52
TC 16
Z9 19
U1 0
U2 44
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 306
EP 324
DI 10.1016/j.infsof.2008.03.009
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900006
DA 2024-07-18
ER

PT J
AU Chmiel, J
   Morzy, T
   Wrembel, R
AF Chmiel, Jan
   Morzy, Tadeusz
   Wrembel, Robert
TI Multiversion join index for multiversion data warehouse
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Star query; Join index; Multiversion data warehouse; Multiversion query;
   Multiversion join index
ID B+-TREES; DATABASES
AB The data warehouse (DW) technology is developed in order to support the integration of external data sources (EDSs) for the purpose of advanced data analysis by On-Line Analytical Processing (OLAP) applications. Since contents and structures of integrated EDSs may evolve in time, the content and schema of a DW must evolve too in order to correctly reflect the evolution of EDSs. In order to manage a DW evolution, we developed the multiversion data warehouse (MVDW) approach. In this approach, different states of a DW are represented by the sequence of persistent DW versions that correspond either to the real world state or to a simulation scenario. Typically, OLAP applications execute star queries that join multiple fact and dimension tables. An important optimization technique for this kind of queries is based on join indexes. Since in the MVDW fact and dimension data are physically distributed among multiple DW versions, standard join indexes need extensions. In this paper we present the concept of a multiversion join index (MVJI) applicable to indexing dimension and fact tables in the MVDW. The MVJI has a two-level structure, where an upper level is used for indexing attributes and a lower level is used for indexing DW versions. The paper also presents the theoretical upper bound (pessimistic) analysis of the MVJI performance characteristic with respect to I/O operations. The analysis is followed by experimental evaluation. It shows that the MVJI increases a system performance for queries addressing multiple DW versions with exact match and range predicates. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Chmiel, Jan; Morzy, Tadeusz; Wrembel, Robert] Poznan Univ Tech, Inst Comp Sci, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Wrembel, R (corresponding author), Poznan Univ Tech, Inst Comp Sci, Piotrowo 2, PL-60965 Poznan, Poland.
EM morzy@put.poznan.pl; Robert.Wrem-bel@cs.put.poznan.pl
RI Wrembel, Robert/F-7482-2014
OI Wrembel, Robert/0000-0001-6037-5718
CR BALMIN A, 2000, P INT C VER LARG DAT
   BALMIN A, 2000, P INT C DAT ENG ICDE
   BEBEL B, 2004, P ACM S APPL COMP SA
   BEBEL B, 2006, LECT NOTES INFORM
   Becker B., 1996, VLDB Journal, V5, P264, DOI 10.1007/s007780050028
   BELLAHSENE Z, 1998, LNCS, V1460
   BLASCHKA M, 1999, LNCS, V1676
   BODY M, 2003, P INT C DAT ENG ICDE
   BODY M, 2002, P ACM INT WORKSH DAT
   CHAMONI P, 1999, LNCS, V1676
   Chaudhuri S., 1997, SIGMOD Record, V26, P65, DOI 10.1145/248603.248616
   CHIEN SY, 2002, LNCS, V2287
   CZEJDO B, 2000, SO C COMP
   EASTON MC, 1986, IBM J RES DEV, V30, P230, DOI 10.1147/rd.303.0230
   EDER J, 2002, LNCS, V2348
   EDER J, 2001, LNCS, V2114
   ELMASRI R, 1990, P INT C VER LARG DAT
   ELMASRI R, 1991, P INT C DAT ENG ICDE
   Gao DF, 2005, VLDB J, V14, P2, DOI 10.1007/s00778-003-0111-3
   GOLFARELLI M, 2004, LNCS, V3289
   GUNADHI H, 1991, P INT C DAT ENG ICDE
   Gyssens M., 1997, P INT C VER LARG DAT
   HURTADO CA, 1999, P INT C DAT ENG ICDE
   HURTADO CA, 1999, P ACM INT WORKSH DAT
   Jarke Matthias., 2003, FUNDAMENTALS DATA WA, V2nd
   JIANG L, 2000, P INT C VER LARG DAT
   JOUINI K, 2007, P ACM C INF KNOWL MA
   KAAS CK, 2004, P INT C ENT INF SYST
   KOLOVSON C, 1989, P INT C DAT ENG ICDE
   LANKA S, 1991, P ACM SIGMOD INT C M
   LETZ C, 2002, P INT DAT ENG APPL S
   Leung T.Y. C., 1993, TEMPORAL DATABASES, P329
   LOMET D, 1989, P ACM SIGMOD INT C M
   LOMET D, 2005, MICROSOFT IMMORTALDB
   LU H, 1994, P INT C VER LARG DAT
   MANOLOPOULOS Y, 1990, P JER C INF TECHN JC
   MENDELZON AO, 2004, P INT C VER LARG DAT
   MENDELZON AO, 2000, P INT C VER LARG DAT
   Nascimento M.A., 1998, P ACM S APPL COMP SA
   Nascimento MA, 1999, IEEE T KNOWL DATA EN, V11, P929, DOI 10.1109/69.824609
   NASCIMENTO MA, 1996, P ACM S APPL COMP SA
   NASCIMENTO MA, 1997, P INT DAT ENG APPL S
   NASCIMENTO MA, 1997, INDEXING VALID TIME
   NASCIMENTO MA, 1998, P INT WORKSH ISS APP
   RANA SP, 1993, P INT C DAT SYST ADV
   Ravat F, 2006, LECT NOTES COMPUT SC, V4081, P65
   RIZZI S, 2007, P INT C DAT ENG ICDE
   Rundensteiner EA, 2000, COMMUN ACM, V43, P57, DOI 10.1145/336460.336475
   Salzberg B, 1999, ACM COMPUT SURV, V31, P158, DOI 10.1145/319806.319816
   SALZBERG B, 2004, LNCS, V2292
   SCHLESINGER L, 2001, P ACM INT WORKSH DAT
   SHEN H, 1994, P INT C DAT ENG ICDE
   SJOBERG D, 1993, INFORM SOFTWARE TECH, V35, P35, DOI 10.1016/0950-5849(93)90027-Z
   SON D, 1996, P INT C SCI STAT DAT
   SOO MD, 1994, P INT C DAT ENG ICDE
   TAO Y, 2001, P INT C SCI STAT DAT
   TAO Y, 2001, P INT C VER LARG DAT
   Tao YF, 2002, ACM T DATABASE SYST, V27, P299, DOI 10.1145/581751.581754
   Tzouramanis T, 1999, DATA KNOWL ENG, V29, P381, DOI 10.1016/S0169-023X(98)00046-9
   TZOURAMANIS T, 1998, P ACM INT S ADV GEOG
   VAISMAN A, 2001, LNCS, V2397
   VALDURIEZ P, 1987, ACM T DATABASE SYST, V12, P218, DOI 10.1145/22952.22955
   Varman PJ, 1997, IEEE T KNOWL DATA EN, V9, P391, DOI 10.1109/69.599929
   XU X, 1990, INT S SPAT DAT HANDL
   Zhang D., 2000, A comparison of indexed temporal joins
   ZHANG D, 2002, P INT C DAT ENG ICDE
NR 66
TC 8
Z9 8
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 98
EP 108
DI 10.1016/j.infsof.2008.01.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500011
DA 2024-07-18
ER

PT J
AU Van Gorp, P
   Schippers, H
   Demeyer, S
   Janssens, D
AF Van Gorp, P.
   Schippers, H.
   Demeyer, S.
   Janssens, D.
TI Transformation techniques can make students excited about formal methods
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Teaching; Metamodeling; Model transformation; Graph grammars; Petri-Nets
ID MYTHS
AB Formal methods have always been controversial. In spite of the fact that the disbelief about their usefulness has been corrected by a growing number of applications and even more publications, it remains a challenge to demonstrate the strengths and weaknesses of formal methods within the time constraints of a typical semester course. This article(1) reports on a new course at the University of Antwerp in which the introduction of a new formalism yields a better understanding of previously taught ones. While the exercises are designed to reveal the limitations of the formalisms used, students remain convinced that their formal models have more value than conventional source code. (c) 2008 Elsevier B.V. All rights reserved.
C1 [Van Gorp, P.; Schippers, H.; Demeyer, S.; Janssens, D.] Univ Antwerp, Dept Math & Comp Sci, B-2020 Antwerp, Belgium.
C3 University of Antwerp
RP Van Gorp, P (corresponding author), Univ Antwerp, Dept Math & Comp Sci, Middelheimlaan 1, B-2020 Antwerp, Belgium.
EM Pieter.VanGorp@ua.ac.be; Hans.Schippers@ua.ac.be;
   Serge.Demeyer@ua.ac.be; Dirk.Janssens@ua.ac.be
RI Demeyer, Serge/JMQ-7341-2023; Van Gorp, Pieter/L-9144-2013
OI Demeyer, Serge/0000-0002-4463-2945; Van Gorp, Pieter/0000-0001-5197-3986
FU Research Foundation Flanders (FWO)
FX This work has been sponsored by the Research Foundation Flanders (FWO)
   under grant "Formal Support for the Transformation of Software Models".
   The authors wish to thank Denis Dube, for providing technical support
   during the preparation of the AToM<SUP>3</SUP> lab sessions, and Hans
   Vangheluwe, for the emerging collaboration on the sharing of course
   artifacts.
CR ALMSTRUM VL, 2001, ITICSE WGR 00 WORKIN, P71
   [Anonymous], MOF QVT FIN AD SPEC
   BOCK C, 2006, VISUELLE DOMANENSPEZ, V10
   BOHLEN M, 2007, ANDROMDA MODEL DRIVE
   BOWEN JP, 1995, IEEE SOFTWARE, V12, P34, DOI 10.1109/52.391826
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   de Lara J., 2002, ICEIS 2002. Proceedings of the Fourth International Conference on Enterprise Information Systems, P642
   DEAN CN, 2004, TEACHING FORMAL METH, V3294
   DIETHELM I, 2004, WORKSH SCEN STAT MAC
   DUCE D, 2003, TEACHING FORMAL METH
   EHRIG K, 2005, ASE 05, P134, DOI DOI 10.1145/1101908.1101930
   *EUR COMM, 2007, ECTS EUROPEAN CREDIT, V6
   Feinerer I, 2006, P 2006 C TEACHING FO, P4
   FISLER K, 2008, FORMAL METHODS ED RE
   *FMES ED, 2004, FME REV ED RES
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   KLEPPE A, 2003, OBJECT TECHNOLOGY SE
   Lethbridge TC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P12, DOI 10.1109/FOSE.2007.13
   LUTZ M, 2003, FRONTIERS ED, V3
   MINAS M, 2006, P 4 FUJ DAYS, P35
   MULIAWEN O, 2005, MODEL DRIVEN TEMPLAT
   REISIG W, 1987, LECT NOTES COMPUT SC, V254, P117
   Rosenberg D., 1999, AW OBJ TECHNOL S
   SALAMAH S, 2008, C SOFTW ENG ED TRAIN
   *U ANTW, 2007, BLACKB AC SUIT, V6
   Utting M, 2001, SOFTW TEST VERIF REL, V11, P181, DOI 10.1002/stvr.223
   VAN GORP P, 2005, P INT WORKSH GRAPH M
   VANGHELUWE H, 2008, MCGILL U TEACHING
   WEILAND J, 2006, VARIANTENKONFIGURATI, V10
   Wing JM, 2000, LECT NOTES COMPUT SC, V1816, P2
NR 30
TC 4
Z9 5
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2008
VL 50
IS 12
BP 1295
EP 1304
DI 10.1016/j.infsof.2008.03.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 358CS
UT WOS:000259894800008
DA 2024-07-18
ER

PT J
AU van den Akker, M
   Brinkkemper, S
   Diepen, G
   Versendaal, J
AF van den Akker, Marjan
   Brinkkemper, Sjaak
   Diepen, Guido
   Versendaal, Johan
TI Software product release planning through optimization and what-if
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE International Requirements Engineering Conference/12th
   International Workshop on Requirements Engineering - Foundation for
   Software Quality
CY 2006
CL Luxembourg, LUXEMBOURG
SP IEEE
DE integer linear programming; release planning; requirements management;
   optimization
AB We present a mathematical formalization of release planning with a corresponding optimization tool that supports product and project managers during release planning. The tool is based on integer linear programming and assumes that an optimal set of requirements is the set with maximal projected revenue against available resources. The input for the optimization is twofold. The first type of input data concerns the list of candidate requirements, estimated revenues, and resources needed. Second, managerial steering mechanisms enable what-if analysis in the optimization environment. Experiments based on real-life data made a sound case for the applicability of our approach. (c) 2007 Elsevier B.V. All rights reserved.
C1 [van den Akker, Marjan; Brinkkemper, Sjaak; Diepen, Guido; Versendaal, Johan] Univ Utrecht, Dept Informat & Comp Sci, NL-3508 TB Utrecht, Netherlands.
C3 Utrecht University
RP van den Akker, M (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, POB 80089, NL-3508 TB Utrecht, Netherlands.
EM j.m.vandenakker@cs.uu.nl; s.brinkkemper@cs.uu.nl; g.diepen@cs.uu.nl;
   j.versendaal@cs.uu.nl
RI Brinkkemper, Sjaak/H-9931-2014
OI Brinkkemper, Sjaak/0000-0002-2977-8911
CR Berander P., 2005, Engineering and Managing Software Requirements
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   CARLSHAMRE P, 2001, P 5 INT S REQ ENG RE
   *CCTA, 2001, MAN SUCC PROJ PRINCE
   CRESCENZI P, COMP NP OPT PROBL
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   Dag JNO, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P283
   Firesmith Donald, 2004, J. Object Technol., V3, P35
   Höst M, 2001, J SYST SOFTWARE, V59, P323, DOI 10.1016/S0164-1212(01)00072-3
   Jung HW, 1998, IEEE SOFTWARE, V15, P74, DOI 10.1109/52.687950
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   LI C, SPRINGER LECT NOTES, V4542, P93
   MARTELLO S, 1990, DISCRETE MATH OPTIMI
   MURPHY KE, 2001, P 34 HAW INT C SYST
   NELSON B, 2005, WHO NEEDS PRODUCT MA, V3, P12
   NIEUWENHUIS R, 2006, FOR P 18 INT C ADV I, P60
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Regnell B, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P254
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G, 2003, INT J SOFTW ENG KNOW, V13, P345, DOI 10.1142/S0218194003001378
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Schwaber K., 2001, Agile software development with scrum
   van de Weerd I, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P319
   van den Akker JM, 1999, MATH PROGRAM, V85, P541, DOI 10.1007/s101070050071
   van den Akker JM, 1999, OPER RES, V47, P862, DOI 10.1287/opre.47.6.862
   van den Akker JM, 2004, HDB SCHEDULING ALGOR, P227
   VANDENAKKER JM, UNPUB J SCHEDULING
   VANDENAKKER JM, 2005, P 11 INT WORKSH REQ, V10, P247
   Wolsey L. A., 1998, DISCRETE MATH OPTIMI
NR 32
TC 51
Z9 57
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2008
VL 50
IS 1-2
BP 101
EP 111
DI 10.1016/j.infsof.2007.10.017
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 248ZT
UT WOS:000252196700011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sobczak, A
   Berry, DM
AF Sobczak, Andrzej
   Berry, Daniel M.
TI Distributed priority ranking of strategic preliminary requirements for
   management information systems in economic organizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE analytical hierarchy process (AHP); balanced Scorecard planes; borda
   Scoring; economic organization; focalPoint; management information
   system (MIS); preliminary requirements; priority ranking; requirements
   engineering (RE); stakeholder; strategy; technique for order preference
   by similarity to the ideal solution (TOPSIS); web-based application;
   weighted sum model (WSM)
AB The development and construction of a management information system (MIS) is a complex task. Selection of the correct requirements to be implemented in the MIS is a serious problem. The problem is made even more difficult by inadequate methods of requirements priority ranking. This paper describes instruments for distributed priority ranking of strategic preliminary requirements for MISs in organizations, profit-making or rion-profit making, that are involved in the economy. The instrument consists of a metamethod that combines several methods, each accomplishing a different subtask of the priority ranking. A Web-based tool is provided to assist the requirements engineers in applying the instrument with a distributed group of stakeholders. The instrument and the tool are validated as effective by their use in ail effort to create requirements for the management information system for city government. The paper reports lessons learned in this validation exercise. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   Warsaw Sch Economy, Dept Business Informat, Warsaw, Poland.
C3 University of Waterloo; Warsaw School of Economics
RP Berry, DM (corresponding author), Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM sobczak@sgh.waw.pl; dberry@uwaterloo.ca
CR [Anonymous], 2000, FUTURE SOFTWARE ENG
   [Anonymous], 2002, P SYST ENG TEST EV C
   [Anonymous], P 34 ANN HAW INT C S
   *APACH SOFTW FDN, 2006, AP TOMC
   Avesani P., 2004, P 16 INT C SOFTW ENG, P306
   Barker VL, 1997, STRATEGIC MANAGE J, V18, P13, DOI 10.1002/(SICI)1097-0266(199701)18:1<13::AID-SMJ843>3.0.CO;2-X
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   BERRY DM, 1995, J SYST SOFTWARE, V28, P179, DOI 10.1016/0164-1212(94)00054-Q
   Boehm B., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P74, DOI 10.1109/ICRE.1994.292400
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   BUDDE R, 1984, APPROACHES PROTYPING
   Calantone RJ, 1999, J PROD INNOVAT MANAG, V16, P65, DOI 10.1016/S0737-6782(98)00036-8
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P710
   Coughlan J., 2002, Requirements Engineering, V7, P47, DOI 10.1007/s007660200004
   Damian D. E., 2003, Requirements Engineering, V8, P149, DOI 10.1007/s00766-003-0173-1
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   *ECL FOUNC, 2006, ECL OP DEV PLATF
   *EXP CHOIC, 2006, AHP REF PART LIST
   Hagge L, 2005, IEEE SOFTWARE, V22, P24, DOI 10.1109/MS.2005.17
   HUIZINGH E, 1995, 95B26 UN GRON
   I H, 2001, PINT S REQ ENG RE 01, P312
   *IBM, 2004, RAT REQ READ
   In H, 2001, PROC INT CONF SOFTW, P555
   *INT STAND ORG, 2004, SOFTW ENG PROD QUAL, P9126
   Kaplan R.S., 1992, Harvard Business Review, V70, P71
   Kaplan RS, 1996, HARVARD BUS REV, V74, P75
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   KARLSSON J, 2004, P INT C EMP ASS SOFT, P145
   KARLSSON J, 2000, P PROD MOD, P139
   KARLSSON L, 2006, IN PRESS EMPIRICAL S
   *KOM BAD NAUK, 2002, WROT POLSK WYD PIER
   *KOM EUR, 2001, EEUR WSPOLN DZIAL RZ
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3281, P161
   Lehtola L, 2004, LECT NOTES COMPUT SC, V3009, P497
   Limayem M, 2000, INFORM SYST RES, V11, P386, DOI 10.1287/isre.11.4.386.11874
   Martinsons M, 1999, DECIS SUPPORT SYST, V25, P71, DOI 10.1016/S0167-9236(98)00086-4
   MCPHEE C, 2002, P 9 ANN IEEE INT C W
   Mellis W., 1999, P 6 EUR C SOFTW QUAL
   *MIN GOSP, 2001, EPOL PLAN DZIAL RZEC
   MOISIADIS F, 1998, P C ADV INF SYST ENG
   MOSZORO M, 2002, STANDARD USIUG PUBLI
   *MYSQL AB, 2006, MYSQL WORLDS MOST PO
   PAECH B, 2006, IEEE INT C REQ ENG R
   PARK J, 1996, P AS PAC SOFTW ENG C, V29, P337
   PARK JW, 1999, P INT WORLD MULT SYS, P578
   PERROTT BE, 1996, J STRATEGIC MANAGEME, V29, P337
   *QSS, 1996, DOORS V3 0 REF MAN Q
   *RAD MIAST, 2002, STRAT ROZW MIAST 200
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   REGNELL B, 2000, P 6 INT WORKSH REQ E
   ROSEMANN M, 2001, EVALUATING MANAGEMEN
   ROSEMANN M, 1999, P AUSTR C INF SYST W
   Ruhe G., 2002, P 14 INT C SOFTW ENG
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Salmela H., 1993, Proceedings of the ACM SIGCPR Conference, P243, DOI 10.1145/158011.158233
   Sedera D., 2001, P 12 AUSTR C INF SYS
   SEJM RP, 2001, DZ U, P1450
   SEJM RP, 1998, DZ U, P156
   SEJM RP, 2001, DZ U, P1198
   SEJM RP, 1990, DZ U, P95
   SEJM RP, 1994, DZ U, P1802
   SEJM RP, 1998, DZ U, P603
   SEJM RP, 2002, USTAWA INFORMATYZACJ, P30
   SHARP H, 1999, P 1999 WORKSH REQ EN
   Shih HS, 2001, JOINT 9TH IFSA WORLD CONGRESS AND 20TH NAFIPS INTERNATIONAL CONFERENCE, PROCEEDINGS, VOLS. 1-5, P2712, DOI 10.1109/NAFIPS.2001.943653
   SOBCZAK A, 2002, K BUS INF SYST POZN
   SOBCZAK A, 2000, 7 K SIEC SYST INF LO, P119
   SOSNOWSKA H, 1998, WYDAWNICTWO NAUKOWE
   STABRYLA A, 2000, WYDAWNICTWO NAUKOWE
   *SUN MICR SYST, 2006, JAVASERV PAG TECHN
   *TEL, 2006, FOCALPOINT
   TRIANTAPHYLLOU E, 1998, ENCY ELECT ELECT ENG, P175
   Triantaphyllou E., 1995, International Journal of Industrial Engineering: Applications and Practice, V2, P35
   TUMMALA VMR, 1993, PRACTICE SURVEY APPL
   Van der Zee JTM, 1999, J MANAGE INFORM SYST, V16, P137, DOI 10.1080/07421222.1999.11518249
   Wiegers K., 1999, SOFTWARE REQUIREMENT
   Yu E., 1997, P 3 IEEE INT S REQ E
   ZHU Y, 2002, P 3 INT C WEB INF SY
NR 82
TC 14
Z9 14
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2007
VL 49
IS 9-10
BP 960
EP 984
DI 10.1016/j.infsof.2006.10.006
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 199PQ
UT WOS:000248708100002
DA 2024-07-18
ER

PT J
AU Kanmani, S
   Uthariaraj, VR
   Sankaranarayanan, V
   Thambidurai, P
AF Kanmani, S.
   Uthariaraj, V. Rhymend
   Sankaranarayanan, V.
   Thambidurai, P.
TI Object-oriented software fault prediction using neural networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented metrics; fault proneness; back propagation neural
   network; probabilistic neural network; discriminant analysis; logistic
   regression
ID METRICS; QUALITY
AB This paper introduces two neural network based software fault prediction models using Object-Oriented metrics. They are empirically validated using a data set collected from the software modules developed by the graduate students of our academic institution. The results are compared with two statistical models using five quality attributes and found that neural networks do better. Among the two neural networks, Probabilistic Neural Networks outperform in predicting the fault proneness of the Object-Oriented modules developed. (c) 2006 Elsevier B.V. All rights reserved.
C1 Pondicherry Engn Coll, Dept Comp Sci & Engn, Pondicherry 605014, India.
   Anna Univ, Dept Informat Technol, Madras 600025, Tamil Nadu, India.
   Tamil Virtual Univ, Madras, Tamil Nadu, India.
C3 Pondicherry Engineering College; Anna University; Anna University
   Chennai
RP Kanmani, S (corresponding author), Pondicherry Engn Coll, Dept Comp Sci & Engn, Pondicherry 605014, India.
EM kanmani.n@gmail.com
CR Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Benlarbi S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P334, DOI 10.1109/ICSE.1999.841024
   Briand L., 2002, ADV COMPUT, V56, P1
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   DEMUTH H, 1998, M BEALE NEURAL NETWO
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   KHOSHGOFTAAR TM, 1995, SOFTWARE ENG J, V10, P89, DOI 10.1049/sej.1995.0012
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Ohlsson MC, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P217, DOI 10.1109/METRIC.2002.1011340
   QUAH TS, 2003, P IEEE INT C SOFTW M, P106
   SPECHT DF, 1990, NEURAL NETWORKS, V3, P109, DOI 10.1016/0893-6080(90)90049-Q
   TABACHNICK GB, 1990, USING MULTIVARIATE S
   TANG MH, 1999, P 6 INT SOFTW METR S, P242, DOI DOI 10.1109/METRIC.1999.809745
   Yuan XH, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P85, DOI 10.1109/ASSET.2000.888052
NR 24
TC 99
Z9 108
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2007
VL 49
IS 5
BP 483
EP 492
DI 10.1016/j.infsof.2006.07.005
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161VS
UT WOS:000246045200005
DA 2024-07-18
ER

PT J
AU Wang, TT
   Su, XH
   Wang, YY
   Ma, PJ
AF Wang Tiantian
   Su Xiaohong
   Wang Yuying
   Ma Peijun
TI Semantic similarity-based grading of student programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE automatic grading; semantic similarity; system dependence graph (SDG);
   program standardization; program matching
AB An automatic grading approach is presented based on program semantic similarity. Automatic grading of a student program is achieved by calculating semantic similarities between the Student program and each correct model program after they are standardized. This approach was implemented in an on-line examination system for the programming language C. Different form other existing approaches, it can evaluate how close a student's source code is to a correct solution and give a matching accuracy. (c) 2006 Elsevier B.V. All rights reserved.
C1 Harbin Inst Technol, Dept Comp Sci, Harbin 150001, Peoples R China.
C3 Harbin Institute of Technology
RP Wang, TT (corresponding author), Harbin Inst Technol, Dept Comp Sci, Harbin 150001, Peoples R China.
EM wttsweet@sohu.com
CR Ala-Mutka Kirsti, 2004, Journal of Information Technology Education: Research, V3, P245, DOI [10.28945/300, DOI 10.28945/300]
   Ala-Mutka KM, 2005, COMPUT SCI EDUC, V15, P83, DOI 10.1080/08993400500150747
   ARNOW D, 1999, FRONTIERS ED C, V1, P39
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Cheang B, 2003, COMPUT EDUC, V41, P121, DOI 10.1016/S0360-1315(03)00030-7
   ELLSWORTH CE, 2004, ACM SIGCSE B, V36, P205
   English J., 2004, P 9 ANN SIGCSE C INN, V36, P137
   FOXLEY E, 1997, AS TECHN C MATH ATCM, P430
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   HEXT JB, 1969, COMMUN ACM, V12, P272, DOI 10.1145/362946.362981
   Higgins C., 2003, Education and Information Technologies, V8, P287, DOI 10.1023/A:1026364126982
   HORWITZ S, 1988, 15TH ACM S PRINC PRO, P146
   HUNG SL, 1993, COMPUT EDUC, V20, P183, DOI 10.1016/0360-1315(93)90086-X
   JACKSON D, 1997, P 28 SIGCSE TECHN S, P187
   Jones E.L., 2001, J COMPUTING SCI COLL, V16, P187
   Lake A., 1990, SIGCSE Bulletin, V22, P29, DOI 10.1145/101085.101095
   Livadas PE, 2000, INFORM SCIENCES, V125, P99, DOI 10.1016/S0020-0255(99)00030-4
   Luck M, 1995, COMPUT EDUC, V25, P105, DOI 10.1016/0360-1315(95)00056-9
   MENGEL SA, 1998, FRONTIERS ED C, V3, P1213
   MICHAELSON G, 1996, IEEE, P38
   Morris D, 2003, FRONTIERS ED C, V3, P1
   MORRIS DS, 2002, FRONTIERS ED C, V1, P6
   OFFUTT AJ, 1997, VERIFICATION RELIABI, P165
   OFFUTT AJ, 1994, VERIFICATION RELIABI, V4, P131
   REES MJ, 1980, SIGPLAN, V17, P33
   SAIKKONEN L, 2001, P 6 ANN C INN TECHN, P133
   Truong N., 2002, Proc. The 19th Annual Conference of the Australasian Society for Computers in Learning in Tertiary Education, Auckland, V19, P661
   von Matt U., 1994, SIGCUE Outlook, V22, P26
   WICK M, 2005, ACM SIDCSE B, V37, P236
   Xu SW, 2003, IEEE T SOFTWARE ENG, V29, P360, DOI 10.1109/TSE.2003.1191799
NR 30
TC 41
Z9 55
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 99
EP 107
DI 10.1016/j.infsof.2006.03.001
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 118EY
UT WOS:000242926300002
DA 2024-07-18
ER

PT J
AU Krogstie, J
   Jahr, A
   Sjoberg, DIK
AF Krogstie, John
   Jahr, Arthur
   Sjoberg, Dag I. K.
TI A longitudinal study of development and maintenance in Norway: Report
   from the 2003 investigation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE application evolution; application portfolio upkeep; survey
   investigation
ID FUNCTIONAL MAINTENANCE; SOFTWARE MAINTENANCE; SUPPORT
AB The amount of work on application systems being taken tip by maintenance activities (work done on all IT-system after being put in production) has been one of the arguments of those speaking about a 'software crisis'. We have earlier investigated the applicability of this notion, and propose to rather look at the percentage of work being done oil application portfolio upkeep (work made to keep up the functional coverage of the application system portfolio of the organization. This also includes the development of replacement systems), to assess the efficiency of the application systems support in an organisation. This paper presents the main results of a survey investigation performed in 2003 in 54 Norwegian organisations within this area. The amount of application portfolio upkeep is significantly higher than in a similar investigation conducted in 1993. The level of maintenance is smaller (although not significantly) than in another similar investigation conducted in 1998. There was a significant increase in both maintenance and application portfolio upkeep from 1993 to 1998, which could partly be attributed to be the extra maintenance and replacement-oriented work necessary to deal with the 'year 2000 problem.' As for the 2003 investigation, the slow IT-market in general seems to have influenced the results negatively seen from the point of view of application systems support efficiency in organization. (C) 2005 Elsevier B.V. All rights reserved.
C1 NTNU, IDI, NO-7491 Trondheim, Norway.
   NTNU, Dept Informat, SINTEF, NO-7491 Trondheim, Norway.
   Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
   Dept Software Engn, SIMULA Res Lab, NO-1325 Lysaker, Norway.
C3 Norwegian University of Science & Technology (NTNU); SINTEF; Norwegian
   University of Science & Technology (NTNU); University of Oslo
RP Krogstie, J (corresponding author), NTNU, IDI, NO-7491 Trondheim, Norway.
EM krogstie@idi.ntnu.no
OI Krogstie, John/0000-0003-4830-1876
CR Arfa L. B., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P124, DOI 10.1109/ICSM.1990.131341
   BERGERSEN L, 1990, THESIS ORAL NTH TRON
   Boehm B, 1999, INFORM SOFTWARE TECH, V41, P937, DOI 10.1016/S0950-5849(99)00091-9
   BROOKS FP, 1987, IEEE COMPUT, V20, P10, DOI DOI 10.1109/MC.1987.1663532
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   Chapin N, 2000, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2000.883056
   Galtung J., 1967, Theory and Method of Social Research
   Holgeid KK, 2000, INFORM SOFTWARE TECH, V42, P687, DOI 10.1016/S0950-5849(00)00111-7
   *IEEE, 1991, IEEE STAND GLOSS SOT
   JAHR A, 2005, THESIS IFI UIO
   JORGENSEN M, 1994, 188 U OSL
   KAJKOMATTSSON M, 2004, P 20 IEEE INT C SOFT
   Kinnear P., 2002, SPSS WINDOWS MADE SI
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Krogstie J, 1995, J SOFTW MAINT-RES PR, V7, P383, DOI 10.1002/smr.4360070603
   KROGSTIE J, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P304, DOI 10.1109/ICSM.1994.336764
   KROGSTIE J, 2000, P NOKOBIT 2000 BOD N
   KROGSTIE J, 1996, J AUTOMATED SOFTWARE, V3, P347
   KUNG HJ, 2004, P 20 IEEE INT C SOFT
   LEHMAN MM, 1998, 9811 IMP COLL DEP CO
   Lientz B P., 1980, Software Maintenance Management
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   MADHAVJI N, 2002, P ICSM 2002 3 6 OCT
   MARTINIUSSEN JP, 1996, THESIS U OSLO
   NIKORA AP, 2003, P 19 IEEE INT C SOFT
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   SNEED HM, 2003, P 19 IEEE INT C SOFT
   Swanson E.B., 1989, MAINTAINING INFORM S
   Yip SWL, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P88, DOI 10.1109/ICSM.1995.526530
   Zettel J, 2005, EMPIR SOFTW ENG, V10, P367, DOI 10.1007/s10664-005-1287-5
NR 31
TC 11
Z9 11
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 993
EP 1005
DI 10.1016/j.infsof.2005.12.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400001
DA 2024-07-18
ER

PT J
AU Robinson-Mallett, C
   Liggesmeyer, P
   Mücke, T
   Goltz, U
AF Robinson-Mallett, Christopher
   Liggesmeyer, Peter
   Muecke, Tilo
   Goltz, Ursula
TI Extended state identification and verification using a model checker
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Workshop on Advances in Model-Based Software Testing
CY MAY 15-16, 2005
CL St.Louis, MO
SP ICSE
DE state characterization; automata-based testing; conformance testing;
   model checking; test generation; protocol testing; checking sequence
   generation; software testing
AB This article presents a method for the application of model checking, i.e., verifying a finite state system against a given temporal specification, on the problem of generating test inputs. The generated test inputs allow state characterization, i.e., the identification of internal states of the software under test by observation of the input/output behavior only. A test model is derived semi-automatically from a given state-based specification and the testing goal is specified in terms of temporal logic. On the basis of these inputs, a model checking tool performs the testing input generation automatically. In consequence, the complexity of our approach is strongly depending on the input model, the testing goal, and the model checking algorithm, which is implemented in the used tool. The presented approach can be adapted with small changes to other model checking tools. It is a capable test generation method, whenever a finite state model of the software under test exists. Furthermore, it provides a descriptive view on state-based testing, which may be beneficial in other contexts, e.g., education and program comprehension. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Kaiserslautern, Fraunhofer IESE, D-67663 Kaiserslautern, Germany.
C3 University of Kaiserslautern
RP Robinson-Mallett, C (corresponding author), Univ Kaiserslautern, Fraunhofer IESE, D-67663 Kaiserslautern, Germany.
EM mallett@iese.fraunhofer.de; peter.liggesmeyer@iese.fraunhofer.de;
   tmuecke@ips.cs.tu-bs.de; goltz@ips.cs.tu-bs.de
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   BENGTSSON J, 1995, P 4 DIMACS WORKSH VE
   Bochmann GregorV., 1994, ISSTA 94, P109
   CHOW TS, 1978, IEEE T SOFT ENG, V4
   Clarke E.M., 1981, LNCS, V131
   Clarke Edmund M., 2001, Model Checking
   Duale AY, 2004, IEEE T COMPUT, V53, P614, DOI 10.1109/TC.2004.1275300
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   GONENC G, 1970, IEEE T COMPUT C, V19
   Hennie FC, 1964, P 5 ANN S SWITCH CIR
   HIERONS RM, 2002, P 26 ANN INT COMP SO
   HUHN M, 2004, TESTING COMMUNICATIN
   Lee D., 1994, IEEE T COMPUT, V43
   Moore E. F., 1956, Automata studies, V34
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   QUIELLE J, 1981, P 5 INT S PROGR
   ROBINSONMALLETT C, 2006, IN PRESS C P SOFTW E
   ROBINSONMALLETT C, 2005, ICSE WORKSH ADV MODE
   SABNANI K, 1988, PROTOCOL TEST GENERA, V15
   SIDHU D, 1989, IEEE T SOFT ENG, V15
NR 20
TC 5
Z9 5
U1 1
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2006
VL 48
IS 10
BP 981
EP 992
DI 10.1016/j.infsof.2006.03.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 092ZM
UT WOS:000241136700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lee, JS
   Lee, KH
AF Lee, Jun-Seung
   Lee, Kyong-Ho
TI Computing simple and complex matchings between XML schemas for
   transforming XML documents
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; schema matching; dynamic ontology; complex matching; simple
   matching
AB This paper presents a schema matching method for the transformation of XML documents. The proposed method consists of two steps: computing preliminary matching relationships between leaf nodes in the two XML schemas based on proposed ontology and leaf node similarity, and extracting final matchings based on a proposed path similarity. Particularly, for a sophisticated schema matching, the proposed ontology is incrementally updated by users' feedback. Furthermore, since the ontology can describe various relationships between concepts, the proposed method can compute complex matchings as well as simple matchings. Experimental results with schemas used in various domains show that the proposed method performs better than previous methodologies, resulting in a precision of 97% and a recall of 83% on the average. (c) 2006 Elsevier B.V. All rights reserved.
C1 Yonsei Univ, Dept Comp Sci, Seoul 120749, South Korea.
C3 Yonsei University
RP Lee, KH (corresponding author), Yonsei Univ, Dept Comp Sci, 134 Shinchon Dong, Seoul 120749, South Korea.
EM jslee@icl.yonsei.ac.kr; khlee@cs.yonsei.ac.kr
RI LEE, KyongHo/KVB-9573-2024
OI LEE, KYONG-HO/0000-0002-1581-917X
CR Bergamaschi S, 1998, FR ART INT, V46, P253
   DHAMANKAR R, 2004, P INT C SIGMOD MAN D
   Do HH, 2003, LECT NOTES COMPUT SC, V2593, P221
   Do HongHai., 2002, P INT C VERY LARGE D, P610
   Doan A, 2003, MACH LEARN, V50, P279, DOI 10.1023/A:1021765902788
   Lerner BS, 2000, ACM T DATABASE SYST, V25, P83, DOI 10.1145/352958.352983
   Li Wen-Syan., 1994, VLDB, P1
   Madhavan J., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P49
   Melnik S, 2002, PROC INT CONF DATA, P117, DOI 10.1109/ICDE.2002.994702
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Miller RJ, 2001, SIGMOD RECORD, V30, P78, DOI 10.1145/373626.373713
   Milo T., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P122
   Mong Li Lee, 2002, Proceedings of the Eleventh International Conference on Information and Knowledge Management. CIKM 2002, P292, DOI 10.1145/584792.584841
   Patel-Schneider P.F., 2004, OWL Web Ontology Lan-guage semantics and abstract syntax
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   Su H., 2001, 3 INT WORKSHOP WEB I, P68
   Xu L, 2003, EIGHTH INTERNATIONAL CONFERENCE ON DATABASE SYSTEMS FOR ADVANCED APPLICATIONS, PROCEEDINGS, P39
NR 17
TC 4
Z9 8
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2006
VL 48
IS 9
BP 937
EP 946
DI 10.1016/j.infsof.2005.12.007
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 073OC
UT WOS:000239751500015
DA 2024-07-18
ER

PT J
AU Zarras, A
AF Zarras, Apostolos
TI Applying Model-Driven Architecture to achieve distribution
   transparencies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE aspect-oriented modeling; aspect-oriented programming; refinement; code
   generation; middleware
ID MIDDLEWARE
AB This paper proposes a principled methodology for the realization of distribution transparencies. The proposed methodology is placed within the general context of Model-Driven Architecture (MDA) development. Specifically, it consists of a UML-based representation for the specification of platform independent models of a system. Moreover, it comprises an automated aspect-oriented method for the refinement of platform independent models into platform specific ones (i.e. models describing the realization of the system's distribution transparency requirements, based on a standard middleware platform like CORBA, J2EE, COM +, etc.). Finally, the proposed methodology includes an aspect-oriented method for the generation of platform specific code from platform specific models. (C) 2005 Elsevier B.V. All rights reserved.
C1 Univ Ioannina, Dept Comp Sci, GR-45110 Ioannina, Greece.
C3 University of Ioannina
RP Zarras, A (corresponding author), Univ Ioannina, Dept Comp Sci, POB 1186, GR-45110 Ioannina, Greece.
EM zarras@cs.uoi.gr
CR Bernstein PA, 1996, COMMUN ACM, V39, P86, DOI 10.1145/230798.230809
   BUSSARD L, 2000, P ECOOP WORKSH ASP D
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Elrad T, 2001, COMMUN ACM, V44, P28
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gray J, 2001, COMMUN ACM, V44, P87, DOI 10.1145/383845.383864
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Henning M., 1999, ADV CORBA PROGRAMMIN
   *ISO IEC, 1995, 107463 ISO IEC
   Issarny V, 2002, COMMUN ACM, V45, P53, DOI 10.1145/508448.508474
   *JAMDA PROJ, TECHN REP
   KAMALAKAR B, 2004, CS04104 COL STAT U
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   KICZALES G, 1996, ACM COMPUTING SURVEY, V28
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   *MICR CORP, COM PLUS V1 5
   MORICONI M, 1995, IEEE T SOFTWARE ENG, V21, P356, DOI 10.1109/32.385972
   *OMG, 2002, PTC030302 OMG
   *OMG, FORMAL021202 OMG
   *OMG, CORBA SERV SPEC TECH
   *OMG, PTC030802 OMG
   *OMG, 020401 OMG
   *OMG, PTC020205 OMG
   *OMG, ORMC20010701 OMG
   OSSHER H, 2000, JAV P 22 IEEE ACM SI, P734
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Ray I, 2004, INFORM SOFTWARE TECH, V46, P575, DOI 10.1016/j.infsof.2003.10.007
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   *SUN MICR, JAV 2 ENT ED J2EE SP
   Weis T, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1231151
   ZARRAS A, 2004, J OBJECT TECHNOLOGY, V3, P100
   OPTIMALJ TRANSFORMAT
NR 32
TC 4
Z9 4
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 498
EP 516
DI 10.1016/j.infsof.2005.05.010
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900006
DA 2024-07-18
ER

PT J
AU Colomb, RM
   Dampney, CNG
AF Colomb, RM
   Dampney, CNG
TI An approach to ontology for institutional facts in the semantic web
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE conceptual modeling; semantic web; category theory; refinement
AB Refinement in software engineering allows a specification to be developed in stages, with design decisions taken at earlier stages constraining the design at later stages. Refinement in complex data models is difficult due to lack of a way of defining constraints, which can be progressively maintained over increasingly detailed refinements. Category theory provides a way of stating wide scale constraints. These constraints lead to a set of design guidelines, which maintain the wide scale constraints under increasing detail. Previous methods of refinement are essentially local, and the proposed method does not interfere very much with these local methods. The result is particularly applicable to semantic web applications, where ontologies provide systems of more or less abstract constraints on systems, which must be implemented and therefore refined by participating systems. With the approach of this paper, the concept of committing to an ontology carries much more force. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld 4072, Australia.
   Univ Newcastle, Sch Informat Technol, Newcastle, NSW 2308, Australia.
C3 University of Queensland; University of Newcastle
RP Colomb, RM (corresponding author), Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld 4072, Australia.
EM colomb@itee.uq.edu.au
CR [Anonymous], 1987, Parts: a Study in Ontology
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   [Anonymous], 1962, DO THINGS WORDS
   Barr M., 1990, Category Theory for Computing Science
   Colomb RM, 2001, ACTA INFORM, V38, P1, DOI 10.1007/PL00013321
   JOHNSON M, 2001, INT C FORM ONT INF S
   KAYED A, 2001, INTERNET COMMERCE SO, P231
   KAYED A, 2002, 13 AUSTR DAT C ADC20, P95
   Searle J.R., 2007, CONSTRUCTION SOCIAL
   SIMSION G, 1993, DATA MODELING ESSENT
   Thalheim Bernhard., 2000, ENTITY RELATIONSHIP
NR 11
TC 8
Z9 11
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2005
VL 47
IS 12
BP 775
EP 783
DI 10.1016/j.infsof.2004.12.002
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 958YB
UT WOS:000231483000001
DA 2024-07-18
ER

PT J
AU Berglund, E
AF Berglund, E
TI Communicating bugs: global bug knowledge distribution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE bug handling; knowledge distribution; reference documentation; evolving
   documentation
AB Unfortunately, software-component libraries shared on a global scale contain bugs. Members of the library user community often report bugs, workarounds, and fixes. This bug knowledge, however, generally remain undiscovered on library web site or in open bug databases.
   In this article I describe design criteria for bug handing from a global user community perspective. I also describe a distribution architecture for bug knowledge. The architecture focuses on bug awareness and bug visibility in the standard work environment. (c) 2005 Elsevier B.V. All rights reserved.
C1 Linkoping Univ, Dept Informat & Comp Sci, S-58183 Linkoping, Sweden.
C3 Linkoping University
RP Berglund, E (corresponding author), Linkoping Univ, Dept Informat & Comp Sci, S-58183 Linkoping, Sweden.
EM eribe@ida.liu.se
CR BROOKS FP, 1987, IEEE COMPUT, V20, P10, DOI DOI 10.1109/MC.1987.1663532
   Campione M., 1998, JAVA TUTORIAL OBJECT
   Carroll JohnM., 1998, MINIMALISM NURNBERG
   FRIENDLY L, 1995, P 1995 INT WORKSH HY
   HACKOS JA, 1998, NURNBERG FUNNEL
   Kramer D., 1999, P 17 ANN INT C COMP
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   NORMAN, 2022, PSYCHOL EVERYDAY THI
   Reiss SP, 1996, ACM COMPUT SURV, V28, P281, DOI 10.1145/234313.234423
   Rosson MB, 1996, ACM COMPUT SURV, V28, P193, DOI 10.1145/234313.234396
   TYMA P, 1998, COMMUNICATIONS ACM, V41
   1992, AC PRESS DICT SCI TE
NR 12
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2005
VL 47
IS 11
BP 709
EP 719
DI 10.1016/j.infsof.2004.09.009
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 954ZR
UT WOS:000231194700001
DA 2024-07-18
ER

PT J
AU Rodríguez, I
   Núñez, M
   Rubio, F
AF Rodríguez, I
   Núñez, M
   Rubio, F
TI A formal framework for analyzing reusability complexity in
   component-based systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE methodology; component-based software engineering; formal framework
AB In this paper, we present a methodology to estimate the impact of modifying a given software system design. In addition, we will be able to evaluate its reusability as well as the coupling of its components. In order to do that, the designer defines the system in terms of its components, their dependencies, the properties they fulfill, and the properties each component requires to other components. Besides, some auxiliary functions are used to define the relations between properties and the cost associated with their modification. Putting together all this information the different ways to perform a modification can be systematically generated and studied. We have applied our methodology to a medium-size system. Specifically, we dealt with an on-line intelligent tutoring system allowing users to learn the programming language Haskell. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Complutense Madrid, Dept Sistemas Informat & Programac, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP Univ Complutense Madrid, Dept Sistemas Informat & Programac, E-28040 Madrid, Spain.
EM isrodrig@sip.ucm.es; mn@sip.ucm.es; fernando@sip.ucm.es
RI Rubio, Fernando/H-6334-2015; Rodriguez, Ismael/C-7812-2019; Núñez,
   Manuel/B-6889-2008; Rodriguez, Ismael/H-4657-2015
OI Rubio, Fernando/0000-0002-8969-6002; Núñez, Manuel/0000-0001-9808-6401;
   Rodriguez, Ismael/0000-0002-7748-7780
CR BROWN AW, 1998, IEEE SOFTWARE    SEP, P37
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cmkovic I., 2001, SOFTWARE FOCUS, V2, P127, DOI DOI 10.1002/SWF.45
   Crnkovic I, 2002, J SYST SOFTWARE, V61, P201, DOI 10.1016/S0164-1212(01)00148-0
   Crnkovic I, 2002, COMMUN ACM, V45, P35, DOI 10.1145/570907.570928
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hissam SA, 2002, LECT NOTES COMPUT SC, V2370, P108
   Jones TC, 1986, PROGRAMMING PRODUCTI
   JONES TC, 1991, APPL SOFTWARE MEASUR
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   López N, 2002, LECT NOTES ARTIF INT, V2443, P71
   López N, 2002, LECT NOTES COMPUT SC, V2363, P51
   MASON D, 2002, 5 ICSE WORKSH COMP B
   MORENO GA, 2002, 5 ICSE WORKSH COMP B
   PENA R, 1999, WORKSH ALG ASP ADV P, P33
   RODRIGUEZ I, 2003, ELECT NOTES THEORETI, P82
   Rumbaugh J, 1997, UNIFIED MODELING LAN
   STAFFORD J, 2002, 5 ICSE WORKSH COMP B
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   SZYPERSKI C, 2000, FDN COMPONENT BASED, pCH1
   Washizaki H., 2003, P 9 INT S SOFTW METR
   [No title captured]
NR 22
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2004
VL 46
IS 12
BP 791
EP 804
DI 10.1016/j.infsof.2004.01.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 840GZ
UT WOS:000222846600002
DA 2024-07-18
ER

PT J
AU Telmoudi, A
   Chakhar, S
AF Telmoudi, A
   Chakhar, S
TI Data fusion application from evidential databases as a support for
   decision making
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE data fusion; evidential databases; overwhelming trace problem;
   reliability; decision-making process
AB We present in this paper, a data fusion [Third International Conference in Information Fusion, Paris, 2000] algorithm from evidential databases [IEEE SMC'02, 2002]. This algorithm has the specificity of using a hybrid operator avoiding the overwhelming trace problem. Besides, it uses a specific scale for computing reliabilities of information's sources. We apply then data fusion to a company in order to improve the decision-making process. (C) 2004 Elsevier Ltd All rights reserved.
C1 Ecole Natl Ingn Tunis, Tunis 1002, Tunisia.
   Univ Paris 09, Lamsade, F-75775 Paris 16, France.
C3 Universite de Tunis-El-Manar; Ecole Nationale d'Ingenieurs de Tunis
   (ENIT); Universite PSL; Universite Paris-Dauphine
RP Telmoudi, A (corresponding author), Ecole Natl Ingn Tunis, BP 37 Le Belvedere, Tunis 1002, Tunisia.
EM abdelkader.telmoudi@enit.rnu.tn
CR ANAND SS, 1996, P 6 INT C INF PROC M, P903
   [Anonymous], 2017, Fuzzy logic with engineering applications
   Berger J. O., 1985, STAT DECISION THEORY, DOI DOI 10.1007/978-1-4757-4286-2
   Dubois D, 1980, Fuzzy sets and systems
   Guan J.W., 1991, EVIDENCE THEORY ITS, VI
   GUAN JW, 1993, P 9 C, P477
   GUAN JW, 1992, EVIDENCE THEORY ITS, V2
   JANEZ F, 1996, THESIS ECOLE DOCTORA
   Klir GJ, 1987, FUZZY SETS UNCERTAIN
   KYBURG HE, 1987, REPRESENTING KNOWLED
   LEMMER JF, 1986, CONFIDENCE FACTORS E, P30
   MELLOULI K, 1987, THESIS U KANSAS LAWR
   Shafer G, 1976, MATH THEORY EVIDENCE, DOI DOI 10.1080/00401706.1978.10489628
   SMETS P, 2000, 3 INT C INF FUS PAR
   SMETS P, 1992, TRIRIDIA9224 U LIBR
   TELMOUDI A, 2002, IEEE SMC 02
NR 16
TC 27
Z9 32
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2004
VL 46
IS 8
BP 547
EP 555
DI 10.1016/j.infsof.2003.10.005
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 814JJ
UT WOS:000220970700005
DA 2024-07-18
ER

PT J
AU Cavarra, A
   Crichton, C
   Davies, J
AF Cavarra, A
   Crichton, C
   Davies, J
TI A method for the automatic generation of test suites from object models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FLORIDA
SP ACM
DE unified modeling language (UML); formal semantics; testing; object
   modelling
AB This paper shows how object-oriented specifications, written in the Unified Modeling Language (UML) can be translated into formal, behavioural descriptions and used as a basis for automatic test generation. The behavioural descriptions are written in a language of communicating state machines: the Intermediate Format (IF). The translation from UML to IF is based upon an earlier formal semantics, written in the Abstract State Machine (ASM) notation. Descriptions written in IF can be automatically explored; the results of these explorations are test trees, ready for input to a variety of testing packages. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
C3 University of Oxford
RP Cavarra, A (corresponding author), Univ Oxford, Comp Lab, Wolfson Bldg Pks Rd, Oxford OX1 3QD, England.
EM alessandra.cavarra@comlab.ox.ac.uk
RI Birts, Charles N/N-9845-2013
OI Davies, Jim/0000-0003-4664-6862; Crichton, Charles/0000-0002-9171-1427
CR BORGER E, 2002, ETAPS 2002
   BORGER E, 2000, ASMS THEORY APPL
   DAVIES J, 2003, REFINEMENT CONCURREN
   DAVIES J, 2003, LNCS
   FERNANDEZ JC, 1996, COMPUTER AIDED VERIF
   Frankel D.S., 2003, Model Driven Architecture: Applying MDA to Enterprise Computing
   GAMMA E, JUNIT REGRESSION TES
   Gronau I., 2000, METHODOLOGY ARCHITEC
   JERON T, 1999, LNCS
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   *OBJ MAN GROUP, UN MOD LANG SPEC VER
   *OMG, 2003, UML TEST PROF
   Pedroni S, 2002, JYTHON ESSENTIALS
   Pickin S., 2002, LNCS
   Tretmans Jan., 1996, Test generation with inputs, outputs and repetitive quiescence
NR 15
TC 14
Z9 15
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 309
EP 314
DI 10.1016/j.infsof.2003.09.004
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 778FU
UT WOS:000189229500006
DA 2024-07-18
ER

PT J
AU Gregg, DG
AF Gregg, DG
TI XDependency: maintaining relationships between XML data resources
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE document management; integrity constraints; distributed integrity
   control; XML
AB This paper proposes an XDependency description model and language that can be used as part of a distributed integrity control system for XML data resources. The dependency description language allows relationships to be specified between XML data available from different organizations. The paper also includes a prototype agent-based system capable of enforcing distributed dependency relationships. An XDependency maintenance system should make it possible to automate the distributed integrity control for XML resources. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Colorado, Sch Business, Denver, CO 80217 USA.
C3 University of Colorado System; University of Colorado Denver
RP Gregg, DG (corresponding author), Univ Colorado, Sch Business, POB 173364,Campus Box 165, Denver, CO 80217 USA.
EM dawn.gregg@cudenver.edu
OI Gregg, Dawn/0000-0002-6054-1162
CR Alagic S, 2002, INFORM SOFTWARE TECH, V44, P207, DOI 10.1016/S0950-5849(02)00010-1
   [Anonymous], 2002, XQUERY 1 0 XML QUERY
   [Anonymous], 2013, Extensible markup language
   BALLOU DP, 1985, MANAGE SCI, V31, P150, DOI 10.1287/mnsc.31.2.150
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Bonifati A, 2002, PROC INT CONF DATA, P403, DOI 10.1109/ICDE.2002.994754
   BONIFATI A, 2001, 10 INT WORLD WID WEB, P633
   Clark R., 1999, Manual of remote sensing, V3, P3, DOI DOI 10.1111/J.1945-5100.2004.TB00079.X
   Cobéna G, 2002, PROC INT CONF DATA, P41, DOI 10.1109/ICDE.2002.994696
   DeRose S., 2001, XML LINKING LANGUAGE
   DeRose S., 2002, XML POINTER LANGUAGE
   FLORENTIN JJ, 1974, COMPUT J, V17, P52, DOI 10.1093/comjnl/17.1.52
   GEHANI NH, 1992, P ACM SIGMOD INT C M, P81
   GREGG D, 2003, BUSINESS DRIVEN INFO
   GUDGIN M, 2002, SOAP VERSION 1 2 1
   HUH YU, 1990, INFORM SOFTWARE TECH, V32, P559, DOI 10.1016/0950-5849(90)90146-I
   Karabatis G., 1993, Advanced database systems, P337
   NGUYEN B, 2001, P ACM SIGMOD SANT BA, P437
   Ozsu M.T., 1991, PRINCIPLES DISTRIBUT
   Pixley T., 2000, DOCUMENT OBJECT MODE
   RUSINKIEWICZ M, 1991, COMPUTER, V24, P46, DOI 10.1109/2.116888
   Simeon Jerome., 2003, Proceedings of the 30th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P1, DOI [10.1145/604131.604132, DOI 10.1145/604131.604132]
   Taha Y, 1997, ASSOCIATION FOR INFORMATION SYSTEMS PROCEEDING OF THE AMERICAS CONFERENCE ON INFORMATION SYSTEMS, P455
   TAHA Y, 1997, THESIS ALEXANDRIA U
   TATARINOV I, 2001, P ACM SIGMOD INT C M, P413
NR 25
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2003
VL 45
IS 13
BP 899
EP 909
DI 10.1016/S0950-5849(03)00090-9
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 725AJ
UT WOS:000185520200002
DA 2024-07-18
ER

PT J
AU Bhalla, S
AF Bhalla, S
TI Evolving a model of transaction management with embedded concurrency
   control for mobile database systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE distributed algorithms; mobile database systems; non-blocking protocols;
   parallel algorithms; serializability
AB Transactions within a mobile database management system face many restrictions. These cannot afford unlimited delays or participate in multiple retry attempts for execution. The proposed embedded concurrency control (ECC techniques provide support on three counts, namely-to enhance concurrency, to overcome problems due to heterogeneity, and to allocate priority to transactions that originate from mobile hosts. These proposed ECC techniques can be used to enhance the server capabilities within a mobile database management system. Adoption of the techniques can be beneficial in general, and for other special cases of transaction management in distributed real-time database management systems. The proposed model can be applied to other similar problems related to synchronization, such as the generation of a backup copy of an operational database system. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Univ Aizu, Data Syst Lab, Fukushima 9658580, Japan.
C3 University of Aizu
RP Bhalla, S (corresponding author), Univ Aizu, Data Syst Lab, Fukushima 9658580, Japan.
OI Bhalla, Subhash/0000-0002-3294-9013
CR ABBOTT R, 1992, ACM T DATABASE SYSTE, V17
   ABBOTT R, 1989, P 15 VLDB C
   ACHARYA S, 1996, P 22 VLDB C
   AMANN P, 1995, IEEE T KNOWL DATA EN, V7, P834
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   BESTAVROS A, 1996, P REAL TIM SYST S WA, P230
   BHALLA S, 2002, LNCS, V2552
   BHALLA S, 2000, LNCS, V1970
   BHALLA S, 1998, 5 INT C HIGH PERF CO
   BHALLA S, 1991, 1991 IEEE REG 10 C N
   Bhat U.N., 1972, ELEMENTS APPL STOCHA
   BUCHMANN A, 1989, P 5 INT C DAT ENG FE
   CAREY MJ, 1987, IEEE T SOFTWARE ENG, V13
   CHAN A, 1985, IEEE T SOFTWARE ENG, V11
   EICH MH, 1990, IEEE T SOFTWARE ENG, V16, P477, DOI 10.1109/32.54301
   EICH MH, 1997, ACM BALTZER J SPECIA, V2, P149
   HERMAN G, 1987, P SIGMOD C
   KORTH HF, 1990, P 16 INT C VER LARG, P95
   LU Q, 1995, P 5 WORKSH HOT TOP O
   Pu C., 1988, Proceedings. International Symposium on Databases in Parallel and Distributed Systems (IEEE Cat. No.88CH2665-8), P167, DOI 10.1109/DPDS.1988.675013
   Pu C, 1986, ALGORITHMICA, V1, P271, DOI 10.1007/BF01840448
   RAMAMRITHAM K, 1993, REAL TIME DATABASES, V1
   Reddy P.K., 1993, ACM SIGMOD RECORD, V22, P40
   REDDY PK, 2003, IEEE T KNOWLEDGE DAT, V15
   REDDY PK, 1995, IEEE T KNOWLEDGE DAT, V7
   SHANMUGASUNDARA.J, 1997, ADV T MODELS ARCHITE
NR 26
TC 6
Z9 7
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2003
VL 45
IS 9
BP 587
EP 596
DI 10.1016/S0950-5849(03)00045-4
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 699RL
UT WOS:000184069700004
DA 2024-07-18
ER

PT J
AU Lim, S
   Kim, MH
AF Lim, S
   Kim, MH
TI Real-time disk scanning for timely retrieval of continuous media objects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE multimedia system; continuous media; real-time disk scheduling
AB In recent years, demands for multimedia applications have rapidly grown with the advances in computing power and network technology. To fulfill the demands, it is crucial to establish the multimedia information systems supporting continuous media (CM) streams without hiccups. Many useful methods have been proposed in the past so that CM steams with VCR-quality can be supported. Although these earlier approaches can be used for the service of VCR-quality streams, they cannot provide a good system performance for the CM streams with various playback rates and rather short durations of playback. In the paper, we propose a new CM playback method that consists of bulk-scanning and an earliest-deadline-first style scheduling algorithm. Our proposed method provides both good response times and high I/O utilization using the efficient disk scheduling. In addition, our mechanism for admission control makes CM streams never experience hiccups until the ends of playback. Through experimental analyses, we show the performance advantages of the proposed method over the earlier methods. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Lim, S (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, 373-1 Kusung Dong, Taejon 305701, South Korea.
RI Kim, Myoung Ho/C-1997-2011
CR ABBOTT RK, 1990, P REAL TIM SYST S AU
   CHANG E, 1997, P VLCB C
   CHANG E, 1996, SIDLWP19900050
   CHEN HJ, 1996, IEEE T KNOWLEDGE DAT, V8
   CHEN PM, 1994, ACM COMPUT SURV, V26, P145, DOI 10.1145/176979.176981
   CHETTO H, 1989, IEEE T SOFTWARE ENG, V15
   DAN A, 1995, ACM SIGMOD
   DU DHC, 1997, EFFICIENT VIDEO FILE
   Elmagarmid A., 1997, VIDEO DATABASE SYSTE
   GHANDEHARIZADEH.S, 1994, ACM SIGMOD
   *IBM, 2002, IBM DISK DRIV SPEC
   LEE MH, 1995, IEEE DATA ENG
   LIM S, 1999, DEXA WORKSH QUER PRO
   Liu C.L., 1973, J ACM, V20
   LIU MC, 1997, P ACM MULT
   LOUGHER P, 1994, COMPUTER J       MAR
   NG RT, 1994, P VLDB C
   OSAWA Y, 1992, ACM T COMPUTER S NOV
   *QUANT, 2002, QUANT DISK DRIV SPEC
   RANGAN PV, 1993, IEEE T KNOWLEDGE AUG
   RASTOGI R, 1996, P MULT COMP SYST JUN
   REDDY ALN, 1997, IEEE MULTIMEDIA
   REDDY ALN, 1993, IEEE COMPUTER, V36
   ROTEM D, 1995, IEEE DATA ENG
   RUEMMLER C, 1994, IEEE COMPUTER    MAR
   SHIN KG, 1995, IEEE T COMPUT, V44, P1405, DOI 10.1109/12.477246
   SUBRAMANIAN VS, 1998, PRINCIPLES MULTIMEDI
   VANMETER R, 1997, USENIX C JAN
   WU KL, 1995, 20143 IBM
NR 29
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2003
VL 45
IS 9
BP 547
EP 558
DI 10.1016/S0950-5849(02)00212-4
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 699RL
UT WOS:000184069700001
DA 2024-07-18
ER

PT J
AU Lee, J
   Fanjiang, YY
AF Lee, J
   Fanjiang, YY
TI Modeling imprecise requirements with XML
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; fuzzy object; imprecise requirements
ID FUZZY
AB Fuzzy theory is suitable to capture and analyze the informal requirements that are imprecise in nature, meanwhile, XML is emerging as one of the dominant data formats for data processing on the internet. In this paper, we have developed a fuzzy object-oriented modeling technique (FOOM) schema based on XML to model requirements specifications and incorporated the notion of stereotype to facilitate the modeling of imprecise requirements. FOOM schema is also transformed into a set of application programming interfaces (APIs) in an automatic manner. A schema graph is proposed to serve as an intermediate representation for the structure of FOOM schema to bridge the FOOM schema and APIs for both content validation and data access for the XML documents. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Natl Cent Univ, Dept Comp Sci & Informat Engn, Chungli 32054, Taiwan.
C3 National Central University
RP Natl Cent Univ, Dept Comp Sci & Informat Engn, Chungli 32054, Taiwan.
EM yjlee@selab.csie.ncu.edu.tw; yyfanj@selab.csie.ncu.edu.tw
CR [Anonymous], 2001, XML SCHEMA 1
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   [Anonymous], XML SCHEMA 2
   [Anonymous], XML SCHEMA 0
   Berkley C, 2001, THIRTEENTH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT, PROCEEDINGS, P171, DOI 10.1109/SSDM.2001.938549
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   DEUTSCH A, 1999, P ACM SIGMOD C MAN D
   FLORESCU D, 1999, IEEE DATA ENG TECHNO, V22
   KAY M, 2001, TRANSFORMATIONS XSLT
   Lee J, 2001, INFORM SOFTWARE TECH, V43, P121, DOI 10.1016/S0950-5849(00)00144-0
   Lee J, 2001, INT J INTELL SYST, V16, P807, DOI 10.1002/int.1036
   Lee J, 1999, INFORM SCIENCES, V118, P101, DOI 10.1016/S0020-0255(99)00042-0
   MUELLER A, 2001, P 2 INT WORKSH US IN
   OMG, 1999, UN MOD LANG SPEC VER
   *OMG, 1998, XML MET INT XMI PROP
   PARK DH, 2001, 8 AS PAC SOFTW ENG C, P53
   SHANMUGASUNDARA.J, 1999, P 25 INT C VER LARG
   Skogan D., 1999, P 2 INT C UN MOD LAN
   SUZUKI J, 1999, P 4 IEEE INT S FOR S
   SUZUKI J, 1998, ACM SIGDOC C, P16
   Turowski K, 2002, KNOWL-BASED SYST, V15, P67, DOI 10.1016/S0950-7051(01)00122-8
   VANLAMSWEERDE A, 1994, RR9410 U CATH LOUV D
   YOSHIKAWA M, 2001, ACM T INTERNET TECHN, V1
NR 24
TC 20
Z9 24
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2003
VL 45
IS 7
BP 445
EP 460
DI 10.1016/S0950-5849(03)00015-6
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 680XC
UT WOS:000183004500006
DA 2024-07-18
ER

PT J
AU Kuroishi, PH
   Maldonado, JC
   Vincenzi, AMR
AF Kuroishi, Pedro Henrique
   Maldonado, Jose Carlos
   Vincenzi, Auri Marcelo Rizzo
TI Towards the definition of a research agenda on mobile application
   testing based on a tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Research agenda; Mobile application; Testing; Tertiary study
AB Context: Mobile application testing has gained considerable attention in recent years since mobile devices have become increasingly present in our lives. Unlike traditional software, mobile application testing has to deal with peculiarities, such as screen size and densities, different operating systems, and multiple sensors that increase the complexity of testing.Objective: This paper summarizes and analyzes the current secondary studies on mobile application testing through a tertiary study.Method: We selected and analyzed 21 secondary studies related to mobile application testing.Results: We categorized 21 secondary studies according to their main and specific research topics, test objectives, and testing platforms. Furthermore, we analyze 87 gaps and challenges identified by the secondary studies to understand which gaps have already been addressed and which gaps are still uncovered. Conclusion: Based on the results, we propose a research agenda with 15 open challenges related to mobile application testing to help future research.
C1 [Kuroishi, Pedro Henrique; Vincenzi, Auri Marcelo Rizzo] Univ Fed Sao Carlos, Comp Dept, Sao Carlos, Brazil.
   [Maldonado, Jose Carlos] Univ Sao Paulo, Inst Math & Comp Sci, Sao Carlos, Brazil.
C3 Universidade Federal de Sao Carlos; Universidade de Sao Paulo
RP Kuroishi, PH (corresponding author), Univ Fed Sao Carlos, Comp Dept, Sao Carlos, Brazil.
EM phk@ufscar.br; jcmaldon@icmc.usp.br; auri@ufscar.br
RI Vincenzi, Auri Marcelo Rizzo/D-8465-2013; Maldonado, José
   Carlos/E-9290-2011
OI Vincenzi, Auri Marcelo Rizzo/0000-0001-5902-1672; 
FU CNPq [41137/2021-5]; CAPES [001]; Fundacao de Amparo a Pesquisa do
   Estado de Sao Paulo, Brazil;  [2023/00001-9];  [2019/23160-0]
FX The authors would like to thank the Brazilian funding agencies CNPq
   (Process 41137/2021-5) , CAPES (Finance Code 001) , and Fundacao de
   Amparo a Pesquisa do Estado de Sao Paulo, Brazil (Grant 2023/00001-9 and
   2019/23160-0) .
CR Al-Ahmad Ahmad Salah, 2020, International Journal of Information and Computer Security, V13, P210
   Al-Ahmad AS, 2019, IEEE ACCESS, V7, P173524, DOI 10.1109/ACCESS.2019.2956770
   Al-Ahmad AS, 2014, INT CONF ADV COMPUT, P176, DOI 10.1109/ACSAT.2013.42
   Almeida Diego R., 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-019-0093-7
   Amalfitano D.M.C., 2021, ACM Comput. Surv.
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Amalfitano D, 2013, IEEE ICST WORKSHOP, P126, DOI 10.1109/ICSTW.2013.22
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Ascate S.M., 2017, P 20 IBEROAMERICAN C, P567
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Collins Eliane, 2021, SBES '21: Brazilian Symposium on Software Engineering, P186, DOI 10.1145/3474624.3474634
   Dinh HT, 2013, WIREL COMMUN MOB COM, V13, P1587, DOI 10.1002/wcm.1203
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Fabbri S., 2016, P 20 INT C EVALUATIO, P5
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Felizardo KR, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P184, DOI 10.1145/3266237.3266240
   Gao J, 2014, COMPUTER, V47, P46, DOI 10.1109/MC.2013.445
   Hammad Hamza M., 2019, Current testing; Mobile applications;Software applications, V2019
   Hamza Z.A., 2019, Current testing; Mobile applications Software applications, V2019
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Holl K, 2016, 15TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA (MUM 2016), P101, DOI 10.1145/3012709.3012718
   ISO 4698, 2022, ISO/IEC/IEEE29119-1:2022(E), P1, DOI DOI 10.1109/IEEESTD.2022.9698145
   ISO/IEC 25010, 2011, ISO/IEC 25010:2011
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Khan MK, 2022, 2022 IEEE 12TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE (CCWC), P487, DOI 10.1109/CCWC54503.2022.9720807
   Khan MNA, 2020, ENG TECHNOL APPL SCI, V10, P6578, DOI 10.48084/etasr.3844
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Kudo T.N., 2022, J. Soft. Eng. Res. Develop., V10
   Kudo TN, 2020, IET SOFTW, V14, P18, DOI 10.1049/iet-sen.2019.0016
   Kulesovs I., 2015, IOS APPL TESTING, V3, P138
   Liu Z, 2023, Arxiv, DOI arXiv:2305.09434
   Luo C, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3372788
   Mendez-Porras A., 2015, CIBSE 2015 18 IB AM, P195
   Moreira J.S., 2020, 19 BRAZILIAN S SOFTW, P10
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Nie LM, 2023, IET SOFTW, V17, P249, DOI 10.1049/sfw2.12123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Fabbri SCPF, 2013, IET SOFTW, V7, P298, DOI 10.1049/iet-sen.2013.0029
   Rodrigues de Almeida Diego, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P283, DOI 10.1145/3422392.3422405
   Sahinoglu M, 2015, LECT NOTES COMPUT SC, V9159, P147, DOI 10.1007/978-3-319-21413-9_11
   Silva HN, 2022, SOFTW TEST VERIF REL, V32, DOI 10.1002/stvr.1801
   Stat Counter, 2022, Mobile android version market share worldwide
   StatCounter, 2022, MOBILE OPERATING SYS
   Statista, 2022, Number of apps available in leading app stores as of 3rd quarter 2022
   Statista, 2022, Forecast number of mobile devices worldwide from 2020 to 2025 (in billions)
   Tramontana P, 2019, SOFTWARE QUAL J, V27, P149, DOI 10.1007/s11219-018-9418-6
   Villanes IK, 2022, INT J COMPUT APPL T, V69, P173, DOI 10.1504/IJCAT.2022.126886
   Wang Jun, 2011, Proceedings of the 2011 International Conference on Internet Computing and Information Services (ICICIS 2011), P176, DOI 10.1109/ICICIS.2011.51
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Ya'u BI, 2019, J INF COMMUN TECHNOL, V18, P485
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
   Zhang DS, 2005, INT J HUM-COMPUT INT, V18, P293, DOI 10.1207/s15327590ijhc1803_3
   Zhifang Liu, 2010, 2010 2nd International Conference on Computer Engineering and Technology (ICCET), P297, DOI 10.1109/ICCET.2010.5485442
NR 58
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107363
DI 10.1016/j.infsof.2023.107363
EA DEC 2023
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DT4K0
UT WOS:001134310100001
DA 2024-07-18
ER

PT J
AU Cascavilla, G
   Tamburri, DA
   Leotta, F
   Mecella, M
   Van Den Heuvel, W
AF Cascavilla, Giuseppe
   Tamburri, Damian A.
   Leotta, Francesco
   Mecella, Massimo
   Van Den Heuvel, WillemJan
TI Counter-terrorism in cyber-physical spaces: Best practices and
   technologies from the state of the art
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Internet of Things; Cyber physical spaces; Public spaces; Cyber threat
   intelligence; Topic modeling; Topological data analysis; Protection
   public spaces; Smart city
AB Context: The demand for protection and security of physical spaces and urban areas increased with the escalation of terroristic attacks in recent years. We envision with the proposed cyber-physical systems and spaces, a city that would indeed become a smarter urbanistic object, proactively providing alerts and being protective against any threat.Objectives: This survey intend to provide a systematic multivocal literature survey comprised of an updated, comprehensive and timely overview of state of the art in counter-terrorism cyber-physical systems, hence aimed at the protection of cyber-physical spaces. Hence, provide guidelines to law enforcement agencies and practitioners providing a description of technologies and best practices for the protection of public spaces.Methods: We analyzed 112 papers collected from different online sources, both from the academic field and from websites and blogs ranging from 2004 till mid-2022.Results: (a) There is no one single bullet-proof solution available for the protection of public spaces. (b) From our analysis we found three major active fields for the protection of public spaces: Information Technologies, Architectural approaches, Organizational field. (c) While the academic suggest best practices and methodologies for the protection of urban areas, the market did not provide any type of implementation of such suggested approaches, which shows a lack of fertilization between academia and industry.Conclusion: The overall analysis has led us to state that there is no one single solution available, conversely, multiple methods and techniques can be put in place to guarantee safety and security in public spaces. The techniques range from architectural design to rethink the design of public spaces keeping security into account in continuity, to emerging technologies such as AI and predictive surveillance.
C1 [Cascavilla, Giuseppe; Tamburri, Damian A.] Eindhoven Univ Technol, Jheronimus Acad Data Sci, Eindhoven, Netherlands.
   [Van Den Heuvel, WillemJan] Tilburg Univ, Jheronimus Acad Data Sci, Tilburg, Netherlands.
   [Leotta, Francesco; Mecella, Massimo] Sapienza Univ Rome, Rome, Italy.
C3 Eindhoven University of Technology; Tilburg University; Sapienza
   University Rome
RP Cascavilla, G (corresponding author), Eindhoven Univ Technol, Jheronimus Acad Data Sci, Eindhoven, Netherlands.
EM g.cascavilla@tue.nl; d.a.tamburri@tue.nl; leotta@diag.uniroma1.it;
   mecella@diag.uniroma1.it; w.j.a.m.v.d.heuvel@jads.nl
RI Leotta, Francesco/AAT-2480-2020; Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Cascavilla,
   Giuseppe/0000-0002-0724-3772; Leotta, Francesco/0000-0001-9216-8502
FU EU H2020 [787061, 815356]; EU-NextGenerationEU [PE00000014, PE0000013]
FX The work is supported by the EU H2020 framework programme, grant
   "ANITA"under Grant No.: 787061 and grant "PRoTECT"un- der Grant No. :
   815356. The work of Francesco Leotta and Massimo Mecella is partially
   supported by projects SERICS (PE00000014) and FAIR (PE0000013) under the
   NRRP MUR program funded by the EU-NextGenerationEU. Moreover, the
   authors thank the students Kaspar Raijmann, Vincent Fokker, and Thomas
   Meulenbroek from The Jheron- imus Academy of Data Science (Netherlands)
   for the effort and support in analyzing, reading, and coding some of the
   documents and papers for this Systematic Literature Review.
CR A-Safe, 2020, WORLD LEAD SAF BARR
   Agrawal A, 2018, Arxiv, DOI arXiv:1608.08176
   Ahmed CM, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P517, DOI 10.1109/QRS-C.2017.89
   Al-Taleb N, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12041863
   [Anonymous], 2017, BBC NEWS
   [Anonymous], 2019, BBC NEWS
   [Anonymous], 2009, Proceedings of the 2009 Annual Research Conference of the South African Institute of Computer Scientists and Information Technologists
   [Anonymous], 2023, GUARDIAN
   [Anonymous], 2021, SKYNEWS
   Archi Expo, 2020, ONLINE ARCH DESIGN E
   Avidan S, 2007, IEEE T PATTERN ANAL, V29, P261, DOI 10.1109/TPAMI.2007.35
   Bansal Shivam, 2016, Beginners Guide to Topic Modeling in Python
   Basit TN, 2003, EDUC RES-UK, V45, P143, DOI 10.1080/0013188032000133548
   BBC, 2021, BBC News
   Berger C, 2016, PROC CIRP, V41, P638, DOI 10.1016/j.procir.2015.12.019
   Boffey D., 2020, Eu eyes temporary ban on facial recognition in public places
   Boutry T, 2019, SUICIDE RESCAPE BATA
   Braun V., 2018, HDB RES METHODS HLTH, P1, DOI [10.1007/978-981-10-2779-6_103-1, DOI 10.1007/978-981-10-2779-6_103-1]
   Braun V, 2013, Success Qual Res, V1st
   BROOKS G, 1992, SIGPLAN NOTICES, V27, P1, DOI [10.13334/j.0258-8013.pcsee.213043, 10.1145/143103.143108]
   Butijn BJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3369052
   Carmona M, 2019, URBAN DES INT, V24, P47, DOI 10.1057/s41289-018-0070-3
   Cascavilla G, 2020, PROCEEDINGS OF THE WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES AVI 2020, DOI 10.1145/3399715.3399826
   Cascavilla G, 2021, COMPUT SECUR, V105, DOI 10.1016/j.cose.2021.102258
   Cheong KH, 2019, IEEE ACCESS, V7, P183252, DOI 10.1109/ACCESS.2019.2958255
   Clutterbuck R.L., 1990, TERRORISM GUERRILLA, pxx
   Colombo A.W., 2014, ERCIM News, V2014
   Cong Y, 2009, PROC CVPR IEEE, P1093, DOI 10.1109/CVPRW.2009.5206648
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Counter Terror Business 365, 2020, SEC PROT PUBL SPAC
   Dalal N, 2005, PROC CVPR IEEE, P886, DOI 10.1109/cvpr.2005.177
   De Pascale D, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2511
   Economist T., 2019, Safe Cities Index 2019-Urban security and resilience in an interconnected world
   Essa A, 2018, 2018 2ND INTERNATIONAL CONFERENCE ON SMART GRID AND SMART CITIES (ICSGSC 2018), P62, DOI 10.1109/ICSGSC.2018.8541316
   European Commission, 2017, SECURITY UNION PROT
   European Commission, 2017, COMM COMM EUROPEAN P
   European Commission, 2018, SECURITY UNION PROT
   Europol, 2022, European Union Terrorism Situation and Trend Report
   Borja-Borja LF, 2017, LECT NOTES COMPUT SC, V10306, P294, DOI 10.1007/978-3-319-59147-6_26
   Garousi G., 2013, P 17 INT C EVALUATIO, P24
   Gomez A.P., 2021, The hit-and-run in murcia under suspicion of a terrorist attack
   Gujrati S., 2018, ICDCN WORKSH, p11:1
   Hache V, 2016, France arrests 11 people in bastille day truck attack in nice
   Haig B., 1995, Philosophy of Education
   Hikvision, 2017, HIKV LAUNCH WORLDS 1
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   IEP, 2022, Global terrorism index 2022-measuring the impact of terrorism
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Khan ZH, 2010, IEEE T INF FOREN SEC, V5, P591, DOI 10.1109/TIFS.2010.2050312
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kommenda N., 2017, BARCELONA VAN ATTACK
   Krippendorff K., 1980, Content Analysis: An Introduction to Methodology
   Kurita K., 2018, Paper dissected: "visualizing data using t-sne" explained
   Kwitt Roland, 2015, Advances in neural information processing systems, P3070
   Larsonneur J.-C., 2023, REPORT EVOLVING TERR
   Li DD, 2010, J AM SOC INF SCI TEC, V61, P592, DOI 10.1002/asi.21270
   Marshalls, 2020, MARSH SAFETY BOLLARD
   Mehboob F., 2019, Intelligent Video Surveillance
   Mills E., 2017, 4 ways to design safer cities, and why we don't
   Monostori L., 2018, CIRP ENCY PRODUCTION, P1, DOI DOI 10.1007/978-3-642-35950-7_16790-1
   Murphy B., 2020, Topological data analysis: An introduction for non-data scientists
   Nimmons S., 2019, Counter terrorism policing in the smart city
   Olson M.J., 2012, THESIS CALTECH
   Onan A., 2016, International Journal of Computational Linguistics and Applications, V7, P101
   Park JT, 2009, PROCEEDINGS OF THE ASME FLUIDS ENGINEERING DIVISION SUMMER CONFERENCE - 2008, VOL 2, P393
   Park U, 2010, IEEE T INF FOREN SEC, V5, P406, DOI 10.1109/TIFS.2010.2049842
   Pathak M., 2018, Introduction to t-sne
   Pongpaichet S., 2013, PDM@ACM Multimedia, P3
   Popp R, 2004, COMMUN ACM, V47, P36, DOI 10.1145/971617.971642
   Rajkumar R, 2010, DES AUT CON, P731
   Raju M., 2015, Smart video security surveillance with mobile remote control
   Rastyapina OA, 2016, PROCEDIA ENGINEER, V150, P2042, DOI 10.1016/j.proeng.2016.07.292
   Recasens A, 2013, EUR J CRIMINOL, V10, P368, DOI 10.1177/1477370812473535
   Reliance-Foundry, 2020, BOLL DEF
   Roberts J., 2018, Urban Safety Project Urban Safety and Security
   Rodionova Z, 2016, Bataclan survivor describes moment isis gunman tried to kill her
   Sadiku M.N.O., 2017, European Scientific Journal, V13, P52
   Sari A, 2019, J SYST SOFTWARE, V153, P200, DOI 10.1016/j.jss.2019.04.027
   Schreiber C., 2004, Computational & Mathematical Organization Theory, V10, P155, DOI 10.1023/B:CMOT.0000039168.92625.9d
   Seth N., 2021, TOPIC MODELING LAT 2
   Sievert C., 2014, P WORKSH INT LANG LE, P63, DOI [10.3115/v1/W14-3110, DOI 10.3115/V1/W14-3110]
   Simon J., 2014, ERCIM News, V2014
   Singh A, 2018, IEEE COMPUT SOC CONF, P1710, DOI 10.1109/CVPRW.2018.00214
   SkyNEWS, 2019, SKYNEWS
   Sloan security group, 2020, REL DES BUILD MAINT
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Sreenu G, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0212-5
   T.N.O.-Innovation for Life Wide Area Motion Imagery (WAMI), US
   Tavagad S., 2016, Survey paper on smart surveillance system
   The Associated Press, 2022, Hateful Slurs Soared on Twitter After Musk Took Over
   Tsigkanos C, 2016, COMPUTING, V98, P1011, DOI 10.1007/s00607-016-0509-6
   Ullrich J., 2015, ERCIM News, V2015
   University of New England, 2019, Grey literature
   Vincent J., 2018, Artificial intelligence is going to supercharge surveillance
   Vincent J., 2018, Drones taught to spot violent behavior in crowds using ai
   Violante A., 2018, INTRO T SNE PYTHON E
   Wang L, 2006, INT C PATT RECOG, P473
   Wang SZ, 2007, IEEE T INF FOREN SEC, V2, P267, DOI 10.1109/TIFS.2007.897251
   Williams T, 2018, PROCEDIA COMPUT SCI, V130, P98, DOI 10.1016/j.procs.2018.04.017
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zablocki M., 2014, Journal of Theoretical and Applied Computer Science, V8, P13
   Zhang DS, 2020, WWW'20: COMPANION PROCEEDINGS OF THE WEB CONFERENCE 2020, P546, DOI 10.1145/3366424.3382121
NR 103
TC 0
Z9 0
U1 6
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107260
DI 10.1016/j.infsof.2023.107260
EA MAY 2023
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J4CD2
UT WOS:001009098300001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Gomes, L
   Torres, RD
   Côrtes, ML
AF Gomes, Luiz
   Torres, Ricardo da Silva
   Cortes, Mario Lucio
TI BERT- and TF-IDF-based feature extraction for long-lived bug prediction
   in FLOSS: A comparative study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software maintenance; Bug Tracking System; Long-lived bugs; Machine
   learning; Text mining; Natural Language Processing; BERT
ID OPEN SOURCE SOFTWARE; FIXING TIME; SEVERITY
AB Context: The correct prediction of long-lived bugs could help maintenance teams to build their plan and to fix more bugs that often adversely affect software quality and disturb the user experience across versions in Free/Libre Open-Source Software (FLOSS). Machine Learning and Text Mining methods have been applied to solve many real-world prediction problems, including bug report handling.Objective: Our research aims to compare the accuracy of ML classifiers on long-lived bug prediction in FLOSS using Bidirectional Encoder Representations from Transformers (BERT)-and Term Frequency -Inverse Document Frequency (TF-IDF)-based feature extraction. Besides that, we aim to investigate BERT variants on the same task.Method: We collected bug reports from six popular FLOSS and used the Machine Learning classifiers to predict long-lived bugs. Furthermore, we compare different feature extractors, based on BERT and TF-IDF methods, in long-lived bug prediction.Results: We found that long-lived bug prediction using BERT-based feature extraction systematically outper-formed the TF-IDF. The SVM and Random Forest outperformed other classifiers in almost all datasets using BERT. Furthermore, smaller BERT architectures show themselves as competitive.Conclusion: Our results demonstrated a promising avenue to predict long-lived bugs based on BERT contextual embedding features and fine-tuning procedures.
C1 [Gomes, Luiz] PUC MG, Inst Exact Sci & Informat ICEI, Dept Software Engn, BR-30535901 Belo Horizonte, MG, Brazil.
   [Torres, Ricardo da Silva] NTNU Norwegian Univ Sci & Technol, Dept ICT & Nat Sci, Alesund, Norway.
   [Gomes, Luiz; Cortes, Mario Lucio] Univ Estadual Campinas, Inst Comp IC, Dept Informat Syst, UNICAMP, BR-35217000 Campinas, SP, Brazil.
C3 Norwegian University of Science & Technology (NTNU); Universidade
   Estadual de Campinas
RP Gomes, L (corresponding author), PUC MG, Inst Exact Sci & Informat ICEI, Dept Software Engn, BR-30535901 Belo Horizonte, MG, Brazil.
EM luizgomes@pucpcaldas.br; ricardo.torres@ntnu.no; cortes@ic.unicamp.br
RI Torres, Ricardo da S./C-4526-2012
FU National Council for Scientific and Techno-logical Development-CNPq
   [307560/2016-3]; Sao Paulo Research Foundation - FAPESP [2014/12236-1,
   2015/24494-8, 2016/50250-1, 2017/20945-0]; FAPESP-Microsoft Virtual
   Institute [2013/50155-0, 2014/50715-9]; Pontifical Catholic University
   of Minas Gerais (PUC-MG); Coordenacao de Aperfeicoamento de Pessoal de
   Nivel Superior-Brasil (CAPES) [001]
FX The authors thank the National Council for Scientific and Techno-logical
   Development-CNPq (grant #307560/2016-3) , the Sao Paulo Research
   Foundation - FAPESP (grants #2014/12236-1, #2015/24494-8, #2016/50250-1,
   and #2017/20945-0) , the FAPESP-Microsoft Virtual Institute (grants
   #2013/50155-0 and #2014/50715-9) , and The Pontifical Catholic
   University of Minas Gerais (PUC-MG) that supports the first author
   through the Permanent Program For Professor Qualification (PPCD) . This
   study was partially funded by the Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior-Brasil (CAPES) -Finance Code 001.
CR Abdelmoez W, 2012, 2012 22ND INTERNATIONAL CONFERENCE ON COMPUTER THEORY AND APPLICATIONS (ICCTA), P167, DOI 10.1109/ICCTA.2012.6523564
   Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Akimova EN, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9111180
   Al-Zubaidi W.H. A., 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering, P53, DOI 10.1145/3127005.3127011
   Allamanis M., 2021, ADV NEUR IN, V34
   Ardimento P., 2017, P 7 INT C WEB INT MI, DOI [10.1145/3102254.3102275, DOI 10.1145/3102254.3102275]
   Ardimento P, 2020, IEEE CONF EVOL ADAPT, DOI 10.1109/eais48028.2020.9122781
   Ardimento P, 2016, LECT NOTES ARTIF INT, V9956, P167, DOI 10.1007/978-3-319-46307-0_11
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Canfora G., 2011, 2011 18th Working Conference on Reverse Engineering, P191, DOI 10.1109/WCRE.2011.31
   Clark K, 2020, INFORM SYST RES, DOI 10.48550/arXiv.2003.10555
   Csuvik V, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P18, DOI [10.1109/ibf50092.2020.9034714, 10.1109/IBF50092.2020.9034714]
   de Araújo AF, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1321, DOI 10.1145/3412841.3442006
   de Jonge Edwin., 2013, INTRO DATA CLEANING
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   El Mezouar M, 2018, EMPIR SOFTW ENG, V23, P1704, DOI 10.1007/s10664-017-9559-4
   Feldman R., 2006, TEXT MINING HDB ADV
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gomes LAF, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106508
   Gomes LAF, 2019, INFORM SOFTWARE TECH, V115, P58, DOI 10.1016/j.infsof.2019.07.009
   Flach P., 2012, MACHINE LEARNING ART, DOI [10.1017/CBO9780511973000, DOI 10.1017/CBO9780511973000]
   Francis P, 2013, PROC IEEE INT CONF S, P436, DOI 10.1109/ICSM.2013.66
   Geron A., 2019, Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems, V2
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   González-Carvajal S, 2021, Arxiv, DOI arXiv:2005.13012
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Habayeb M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P700, DOI 10.1145/3180155.3182522
   Haykin S, 1998, Neural Networks: A Comprehensive Foundation
   Japkowicz N., 2011, EVALUATING LEARNING, DOI [10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803]
   Kanade A, 2020, PR MACH LEARN RES, V119
   Kuhn M, 2013, Applied predictive modeling, P600, DOI [10.1007/978-1-4614-6849-3, 10.1007/978-1-4614-6849-3_3]
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2012, EUR CON SFTWR MTNCE, P379, DOI 10.1109/CSMR.2012.47
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Lan ZZ, 2020, Arxiv, DOI arXiv:1909.11942
   Landolt S., 2021, HAW INT C SYST SCI
   Lin J., P 43 INT C SOFW ENG, V43
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Luo G, 2016, NETW MODEL ANAL HLTH, V5, DOI 10.1007/s13721-016-0125-6
   Marks L., 2011, P 7 INT C PRED MOD S, DOI [10.1145/2020390.202040, DOI 10.1145/2020390.202040]
   Marsland, 2014, MACHINE LEARNING ALG, DOI DOI 10.1201/B17476
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Peters ME, 2019, 4TH WORKSHOP ON REPRESENTATION LEARNING FOR NLP (REPL4NLP-2019), P7
   Probst P, 2018, Arxiv, DOI [arXiv:1802.09596, DOI 10.48550/ARXIV.1802.09596, 10.48550/ARXIV.1802.09596]
   Ravichandiran S., 2021, Getting Started with Google BERT: Build and Train State-of-the-Art Natural Language Processing Models Using BERT
   Rawal BS, 2015, PROCEEDINGS OF THE 2015 IEEE RECENT ADVANCES IN INTELLIGENT COMPUTATIONAL SYSTEMS (RAICS), P116, DOI 10.1109/RAICS.2015.7488399
   Rocha H, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P43, DOI 10.1145/2973839.2973844
   Roy NKS, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P426, DOI 10.1109/SEAA.2017.71
   Saha RK, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P258, DOI 10.1109/MSR.2015.31
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Sanh V, 2020, Arxiv, DOI arXiv:1910.01108
   Sepahvand R, 2020, IET SOFTW, V14, P203, DOI 10.1049/iet-sen.2019.0260
   Singh VB, 2017, J INF KNOWL MANAG, V16, DOI 10.1142/S0219649217500058
   Srivastava A., 2009, Text mining: Classification, clustering, and applications, Vfirst, DOI [10.1201/9781420059458, DOI 10.1201/9781420059458]
   Sun C., 2020, How to fine-tune bert for text classification?
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Torfi A., 2021, NATURAL LANGUAGE PRO
   Turc I, 2019, Arxiv, DOI arXiv:1908.08962
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wang RY, 2020, IEEE ACCESS, V8, P135591, DOI 10.1109/ACCESS.2020.3011744
   Wang X, 2021, Arxiv, DOI arXiv:2108.04556
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Williams G, 2011, USE R, P3, DOI 10.1007/978-1-4419-9890-3
   Wu ZH, 2019, Arxiv, DOI arXiv:1901.00596
   Yang G., 2017, P S APPL COMP SAC 17, P1280, DOI DOI 10.1145/3019612.3019788
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1553, DOI 10.1145/2695664.2695872
   Zhao Y., 2013, Data Mining Applications with R
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou J, 2021, Arxiv, DOI [arXiv:1812.08434, DOI 10.1016/J.AIOPEN.2021.01.001]
   Zou WQ, 2021, Arxiv, DOI arXiv:2109.03555
NR 73
TC 14
Z9 14
U1 7
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107217
DI 10.1016/j.infsof.2023.107217
EA APR 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F8MG4
UT WOS:000984828700001
DA 2024-07-18
ER

PT J
AU Hasso, H
   Grosser, K
   Aymaz, I
   Geppert, H
   Jürjens, J
AF Hasso, Hussein
   Grosser, Katharina
   Aymaz, Iliass
   Geppert, Hanna
   Juerjens, Jan
TI Enhanced abbreviation-expansion pair detection for glossary term
   extraction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Glossary term extraction; Abbreviation-expansion pair detection; Synonym
   detection; Requirements
ID REQUIREMENTS; DATABASE
AB Context: Providing precise definitions of all project specific terms is a crucial task in requirements engineering. In order to support the glossary building process, many previous tools rely on the assumption that the requirements set has a certain level of quality. Yet, the parallel detection and correction of quality weaknesses in the context of glossary terms is beneficial to requirements definition. Objective: In this paper, we focus on detection of uncontrolled usage of abbreviations by identification of abbreviation-expansion pair (AEP) candidates.Methods: We compare our feature-based approach (ILLOD+) to other similarity measures to detect AEPs and propose how to extend the glossary term extraction (GTE) and synonym clustering with AEP-specific methods.Results: It shows that feature-based methods are more accurate for AEPs than syntactic and semantic similarity measures. Experiments with PURE data-sets extended with uncontrolled abbreviations show that ILLOD+ is able to extract abbreviations as well as match their expansions viably in a real-world setting and is well suited to augment previous synonym clusters with clusters that combine AEP candidates. AEP clusters generated with ILLOD+ are generally smaller than those based on syntactic or semantic similarity measures and have a higher recall.Conclusion: In this paper, we present ILLOD+, an extended feature-based approach to AEP detection and propose a workflow for its integration to clustering of glossary term candidates to enhance term consolidation in evolving requirements.
C1 [Hasso, Hussein; Aymaz, Iliass; Geppert, Hanna] Fraunhofer FKIE, Fraunhoferstr 20, D-53343 Bonn, Germany.
   [Grosser, Katharina; Juerjens, Jan] Univ Koblenz, Univ Str 1, D-56070 Koblenz, Germany.
   [Juerjens, Jan] Fraunhofer ISST, Emil Figge Str 91, D-44227 Dortmund, Germany.
C3 University of Koblenz & Landau
RP Hasso, H (corresponding author), Fraunhofer FKIE, Fraunhoferstr 20, D-53343 Bonn, Germany.
EM hussein.hasso@fkie.fraunhofer.de; grosser@uni-koblenz.de;
   iliass.aymaz@fkie.fraunhofer.de; hanna.geppert@fkie.fraunhofer.de;
   juerjens@uni-koblenz.de
OI Grosser, Katharina/0000-0003-4532-0270
FU project EnTrust in the research initiative of the Ministry of Science
   and Health, Rhineland-Palatinate, Germany; European Space Agency's (ESA)
   NPI program [4000118174/16/NL/MH/GM]
FX This work is supported by project EnTrust in the research initiative of
   the Ministry of Science and Health, Rhineland-Palatinate, Germany and
   European Space Agency's (ESA) NPI program (No. 4000118174/16/NL/MH/GM).
   We thank the volunteers who provided us with abbreviation examples for
   our experiments.
CR AEPForGTE, 2022, Zenodo, DOI 10.5281/ZENODO.5914038
   AEPForGTE, 2022, Zenodo, DOI 10.5281/ZENODO.6884117
   [Anonymous], 2014, GLOSSARY REQUIREMENT
   [Anonymous], 2011, ISO 25964-1: 2011
   Arora C, 2017, IEEE T SOFTWARE ENG, V43, P918, DOI 10.1109/TSE.2016.2635134
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Berry DM, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09986-0
   Bhatia K, 2020, ISOFT: PROCEEDINGS OF THE 13TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3385032.3385039
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   COLLINS LM, 1988, MULTIVAR BEHAV RES, V23, P231, DOI 10.1207/s15327906mbr2302_6
   Computer Hope, 2021, COMP ACR ABBR
   Dwarakanath A, 2013, S VIS LANG HUM CEN C, P314, DOI 10.1109/RE.2013.6636736
   Ferrari A, 2017, INT REQUIR ENG CONF, P502, DOI 10.1109/RE.2017.29
   Gali N, 2019, EXPERT SYST APPL, V129, P169, DOI 10.1016/j.eswa.2019.03.048
   Gemkow T, 2018, INT REQUIR ENG CONF, P412, DOI 10.1109/RE.2018.00052
   Grosser K, 2022, SOFTW SYST MODEL, V21, P2133, DOI 10.1007/s10270-021-00958-y
   Hasso H, 2022, LECT NOTES COMPUT SC, V13216, P63, DOI 10.1007/978-3-030-98464-9_6
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jiang YJ, 2022, IEEE T SOFTWARE ENG, V48, P519, DOI 10.1109/TSE.2020.2995736
   Justeson, 1995, NAT LANG ENG, V1, P9, DOI [DOI 10.1017/S1351324900000048, 10.1017/S1351324900000048]
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Larkey L. S., 2000, ACM 2000. Digital Libraries. Proceedings of the Fifth ACM Conference on Digital Libraries, P205, DOI 10.1145/336597.336664
   Merriam -Webster, 2021, WHAT IS ABBR
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   OKAZAKI N, 2006, P 21 INT C COMP LING, P643
   Park Y, 2001, PROCEEDINGS OF THE 2001 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P126
   PARK Y., 2002, PROCEEDING 19 INT C, P1, DOI [10.3115/1072228.1072370, DOI 10.3115/1072228.1072370]
   Peldszus S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P23, DOI 10.1109/MODELS.2019.00-18
   Pohl K., 2015, REQUIREMENTS ENG FUN, V2nd Editio
   Pohl K., 2013, SEMINAL CONTRIBUTION, P63, DOI [10.1007/978-3-642-36926-1_5, DOI 10.1007/978-3-642-36926-1_5]
   Pohl K., 3 DIMENSIONS REQUIRE
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P15, DOI 10.1007/978-3-642-12578-2_2
   Pustejovsky J, 2001, ST HEAL T, V84, P371
   Rajkomar A, 2022, NAT COMMUN, V13, DOI 10.1038/s41467-022-35007-9
   Sayyad Shirabad J., 2005, Promise software engineering repository
   Schwartz Ariel S, 2003, Pac Symp Biocomput, P451
   Sohn S, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-402
   Song M., 2008, 5 INT C INFORM SYSTE, P93
   Van Lamsweerde A., 2009, Requirements Engineering
   Yeganova L., 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P499, DOI 10.1109/ICMLA.2010.166
   Yue Wang, 2013, Natural Language Processing and Information Systems. 18th International Conference on Applications of Natural Language to Information Systems, NLDB 2013. Proceedings: LNCS 7934, P25, DOI 10.1007/978-3-642-38824-8_3
   Zhou W, 2006, BIOINFORMATICS, V22, P2813, DOI 10.1093/bioinformatics/btl480
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 46
TC 0
Z9 0
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107203
DI 10.1016/j.infsof.2023.107203
EA MAR 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D3HT3
UT WOS:000967674900001
DA 2024-07-18
ER

PT J
AU Siahaan, D
   Raharjana, IK
   Fatichah, C
AF Siahaan, Daniel
   Raharjana, Indra Kharisma
   Fatichah, Chastine
TI User story extraction from natural language for requirements
   elicitation: Identify software-related information from online news
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Natural language processing; Process improvement; Requirements
   elicitation; Software-related information; User story
ID KNOWLEDGE; FEATURES; REVIEWS; DRIVEN
AB Context: The user story is a popular artifact in agile software development. Extracting user stories is helpful for process improvement in requirements elicitation, closing limitations such as limited access, and uncovering new and unique domains. Most sources of requirements elicitation are available in natural language form. However, the approach to extracting user stories from natural language is still limited. Objective: This study aims to extract user stories from natural language. It includes identifying the aspect of who (stakeholder), aspect of what (stakeholder's wants), and aspect of why (the reason why the aspect of what exists). Method: This study used online news as a case study because information related to stakeholders and their needs is available. Aspects of who, what, and why are obtained using a rule-based approach using part-of-speech (POS) chunking, named entity recognition (NER), dependency parsing, WordNet, and BloomSoft. Result: We found that online news tends to generate requirements with hard-goals or soft-goals types. In identifying aspects of who, we succeeded in increasing the F-score value by combining stakeholder identification methods according to the characteristics of online news. We also found that PUblic REquirements (PURE), domain specificity, and WordNet lexical names can significantly improve the extraction of software-related information in identifying the aspects of what. Conclusion: This study demonstrates that information related to software requirements could arise from nonsoftware-related artifacts such as online news.
C1 [Siahaan, Daniel; Raharjana, Indra Kharisma; Fatichah, Chastine] Inst Teknol Sepuluh Nopember, Dept Informat, Surabaya, Indonesia.
   [Raharjana, Indra Kharisma] Univ Airlangga, Fac Sci & Technol, Informat Syst, Surabaya, Indonesia.
C3 Institut Teknologi Sepuluh Nopember; Airlangga University
RP Siahaan, D (corresponding author), Inst Teknol Sepuluh Nopember, Dept Informat, Surabaya, Indonesia.
EM daniel@if.its.ac.id
RI Siahaan, Daniel/F-7506-2011; Fatichah, Chastine/W-2402-2019
OI Siahaan, Daniel/0000-0001-6560-2975; Fatichah,
   Chastine/0000-0002-7348-9762; Raharjana, Indra
   Kharisma/0000-0002-0622-3374
FU Ministry of Research and Technol-ogy/National Research and Innovation
   Agency through Penelitian Dis-ertasi Doktor [27/E1/KPT/2020]
FX Funding This work was supported by the Ministry of Research and
   Technol-ogy/National Research and Innovation Agency through Penelitian
   Dis-ertasi Doktor under Grant 27/E1/KPT/2020.
CR Ahmad A, 2020, SECUR COMMUN NETW, V2020, DOI 10.1155/2020/8830683
   Al-Moslmi T, 2020, IEEE ACCESS, V8, P32862, DOI 10.1109/ACCESS.2020.2973928
   Almeida F, 2022, INFORMATICS-BASEL, V9, DOI 10.3390/informatics9010020
   Amna AR, 2022, IEEE ACCESS, V10, P51723, DOI 10.1109/ACCESS.2022.3173745
   Bakar NH, 2016, APPL SOFT COMPUT, V49, P1297, DOI 10.1016/j.asoc.2016.07.048
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Bano M, 2019, REQUIR ENG, V24, P259, DOI 10.1007/s00766-019-00313-0
   Berry Daniel, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P211, DOI 10.1007/978-3-642-28714-5_18
   Chen X, 2021, IEEE T SOFTWARE ENG, V47, P1960, DOI 10.1109/TSE.2019.2940439
   Dahhane W, 2014, 2014 SECOND WORLD CONFERENCE ON COMPLEX SYSTEMS (WCCS), P158, DOI 10.1109/ICoCS.2014.7060906
   Dalpiaz F, 2018, INT REQUIR ENG CONF, P506, DOI 10.1109/RE.2018.00075
   Dar H, 2018, IEEE ACCESS, V6, P63859, DOI 10.1109/ACCESS.2018.2874981
   Deeptimahanti DK, 2011, P 4 IND SOFTW ENG C, P165, DOI [10.1145/1953355.1953378, DOI 10.1145/1953355.1953378]
   Dewi Mutia Rahmi, 2021, ICSCA 2021: 2021 10th International Conference on Software and Computer Applications, P81, DOI 10.1145/3457784.3457796
   Castillo-Barrera FE, 2018, 2018 6TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2018), P139, DOI [10.1109/CONISOFT.2018.8645899, 10.1109/CONISOFT.2018.00027]
   Castillo-Barrera FE, 2017, PROCEEDINGS 2017 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI), P1047, DOI 10.1109/CSCI.2017.182
   Elallaoui M, 2018, PROCEDIA COMPUT SCI, V130, P42, DOI 10.1016/j.procs.2018.04.010
   Elallaoui M, 2015, 2015 10TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS: THEORIES AND APPLICATIONS (SITA)
   Ferrari A, 2017, INT REQUIR ENG CONF, P502, DOI 10.1109/RE.2017.29
   Ferrari A, 2016, REQUIR ENG, V21, P333, DOI 10.1007/s00766-016-0249-3
   Fischbach J, 2020, IEEE INT CONF SOFTW, P321, DOI 10.1109/ICST46399.2020.00040
   Frattini J, 2020, IEEE INT CONF AUTOM, P561, DOI 10.1145/3324884.3416549
   Friedrich Fabian, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P482, DOI 10.1007/978-3-642-21640-4_36
   Gupta A, 2019, LECT NOTES COMPUT SC, V11787, P47, DOI 10.1007/978-3-030-34146-6_5
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Henao PR, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P80, DOI 10.1109/REW53955.2021.00019
   Henriksson A, 2020, LECT NOTES BUSINESS, DOI [10.1007/978-3-030-63479-7_24, DOI 10.1007/978-3-030-63479-7_24]
   Hermawan A., 2021, J. Inf. Syst. Eng. Bus. Intell., V7, P84
   Hevner A, 2010, INTEGR SER INFORM SY, V22, P9, DOI 10.1007/978-1-4419-5653-8_2
   Honnibal Matthew, 2020, SPACY IND STRENGTH N
   Huang Y, 2021, P INT C ED RES COMPU, V2, P9, DOI [10.52842/conf.ecaade.2021.2.009, DOI 10.52842/CONF.ECAADE.2021.2.009]
   Ilieva Magda G., 2007, 2007 International Conference on Artificial Intelligence (ICAI'07), P588
   Jin PQ, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P69, DOI 10.1145/3041021.3054151
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Jurafsky D, 2020, DEPENDENCY PARSING S, V3rd
   Jurafsky D., 2014, Cognitive Technologies, V9783642414633, P403, DOI DOI 10.1007/978-3-642-41464-0_13
   Kanchev GM, 2017, INT REQUIR ENG CONF, P31, DOI 10.1109/RE.2017.83
   Kassab M, 2015, IEEE INT WORKS EMPIR, P1, DOI 10.1109/EmpiRE.2015.7431299
   Khan JA, 2020, IET SOFTW, V14, P242, DOI 10.1049/iet-sen.2019.0262
   Li J, 2022, IEEE T KNOWL DATA EN, V34, P50, DOI 10.1109/TKDE.2020.2981314
   Li Y., 2020, ACM INT C PROCEEDING, DOI [10.1145/3382025.3414968, DOI 10.1145/3382025.3414968]
   Li Z., 2018, P 27 INT C COMP LING, P3203
   Lian XL, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106196
   Lim S., 2021, SN Computer Science, V2, P1
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Lucassen G, 2015, INT REQUIR ENG CONF, P126, DOI 10.1109/RE.2015.7320415
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Marneffe M.De, 2012, STANFORD TYPED DEPEN, P1
   Merten T, 2016, INT REQUIR ENG CONF, P166, DOI 10.1109/RE.2016.8
   Meth H, 2013, INFORM SOFTWARE TECH, V55, P1695, DOI 10.1016/j.infsof.2013.03.008
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nasiri S, 2021, INT J ADV COMPUT SC, V12, P333
   Nasiri S, 2020, PROCEDIA COMPUT SCI, V170, P831, DOI 10.1016/j.procs.2020.03.148
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Niazi M, 2016, INFORM SOFTWARE TECH, V80, P1, DOI 10.1016/j.infsof.2016.08.002
   Pacheco C, 2018, IET SOFTW, V12, P365, DOI 10.1049/iet-sen.2017.0144
   Parolin ES, 2019, 2019 IEEE 5TH INTL CONFERENCE ON BIG DATA SECURITY ON CLOUD (BIGDATASECURITY) / IEEE INTL CONFERENCE ON HIGH PERFORMANCE AND SMART COMPUTING (HPSC) / IEEE INTL CONFERENCE ON INTELLIGENT DATA AND SECURITY (IDS), P258, DOI 10.1109/BigDataSecurity-HPSC-IDS.2019.00056
   Pohl K., 2015, REQUIREMENTS ENG FUN, V2nd Editio
   Raharjana IK, 2021, IEEE ACCESS, V9, P53811, DOI 10.1109/ACCESS.2021.3070606
   Raharjana IK, 2021, COMPUTERS, V10, DOI 10.3390/computers10030036
   Raharjana IK, 2019, INT JOINT CONF COMP, P342, DOI [10.1109/jcsse.2019.8864199, 10.1109/JCSSE.2019.8864199]
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Scott TA, 2020, REGUL GOV, V14, P219, DOI 10.1111/rego.12199
   Shah FA, 2019, LECT NOTES COMPUT SC, V11412, P21, DOI 10.1007/978-3-030-15538-4_2
   Sharma VS, 2009, ASIA PAC SOFWR ENG, P35, DOI 10.1109/APSEC.2009.63
   Shirasaki Y, 2019, P INT COMP SOFTW APP, P213, DOI 10.1109/COMPSAC.2019.10209
   Sleimi A, 2019, INT REQUIR ENG CONF, P319, DOI 10.1109/RE.2019.00041
   Sonbol R, 2022, IEEE ACCESS, V10, P62811, DOI 10.1109/ACCESS.2022.3182372
   Song GH, 2020, IEEE ACCESS, V8, P186904, DOI 10.1109/ACCESS.2020.3029262
   Tavakoli M, 2018, EXPERT SYST APPL, V113, P186, DOI 10.1016/j.eswa.2018.05.037
   Wautelet Yves, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549299
   Wautelet Y, 2018, LECT NOTES COMPUT SC, V10753, P209, DOI 10.1007/978-3-319-77243-1_13
   Wautelet Y, 2017, COMPUT LANG SYST STR, V50, P159, DOI 10.1016/j.cl.2017.06.007
   Wautelet Y, 2016, LECT NOTES COMPUT SC, V9975, P127, DOI 10.1007/978-3-319-47717-6_11
   Wautelet Y, 2014, LECT NOTES COMPUT SC, V8484, P211, DOI 10.1007/978-3-319-07881-6_15
   Williams G, 2017, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2017.14
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 77
TC 1
Z9 1
U1 2
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107195
DI 10.1016/j.infsof.2023.107195
EA MAR 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A1AD4
UT WOS:000952517500001
DA 2024-07-18
ER

PT J
AU Fagerholm, F
   De los Ríos, A
   Castro, CC
   Gil, J
   Chatzigeorgiou, A
   Ampatzoglou, A
   Becker, C
AF Fagerholm, Fabian
   De los Rios, Andres
   Castro, Carol Cardenas
   Gil, Jenny
   Chatzigeorgiou, Alexander
   Ampatzoglou, Apostolos
   Becker, Christoph
TI It's about time: How to study intertemporal choice in systems design
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Intertemporal choice; Temporal discounting; Judgement and decision
   making; Naturalistic decision making; Cognitive task analysis;
   Psychology; Human factors
ID CRITICAL DECISION METHOD; SOFTWARE-DEVELOPMENT; TECHNICAL DEBT;
   PREFERENCE; MODEL
AB Context: Decision making pervades software and systems engineering. Intertemporal decisions involve trade-offs among outcomes at different points in time. They play a central role in systems design, as recognised since the inception of the software engineering (SE) field. They are also crucial for the sustainability of design decisions. However, temporal decision making is not adequately understood in SE. The field of Judgement and Decision Making (JDM) offers important empirical findings and research methods that could be utilised.Objective: This article establishes a baseline for studying how software professionals handle intertemporal choices. It examines how temporal distance affects choices in an example scenario, explores in what areas of software development such decisions can be found, and examines how systems design decisions can be characterised and studied as intertemporal.Method: We developed a method to study intertemporal choice in SE, based on an initial set of psychological theory grounded in JDM. We instantiated the method in a study to elicit responses to an intertemporal choice task followed by a Cognitive Task Analysis (CTA) interview.Results: We found that study participants overall tended to discount future outcomes, but individual partici-pants varied wildly in how they valued present vs. future outcomes. They indicated several locations in which intertemporal choices occur in everyday software development. Based on these findings, and by reconciling our initial theory with existing JDM theory and results, we further developed and refined our theory and study method into a framework for studying intertemporal decision making in SE.Conclusions: To obtain a basis for more sustainable software systems design decisions, SE research should adopt a more comprehensive, detailed, and empirically consistent way of understanding and studying intertemporal choices. We provide suggestions for how future research could achieve practical methods that address essential characteristics of real-life systems design decisions.
C1 [Fagerholm, Fabian] Aalto Univ, Espoo, Finland.
   [De los Rios, Andres; Becker, Christoph] Univ Toronto, Toronto, ON, Canada.
   [Castro, Carol Cardenas; Gil, Jenny] S4N, Bogota, Colombia.
   [Chatzigeorgiou, Alexander; Ampatzoglou, Apostolos] Univ Macedonia, Thessaloniki, Greece.
C3 Aalto University; University of Toronto; University of Macedonia
RP Fagerholm, F (corresponding author), Aalto Univ, Espoo, Finland.; Becker, C (corresponding author), Univ Toronto, Toronto, ON, Canada.
EM fabian.fagerholm@aalto.fi; andres.dlr94@gmail.com;
   carolcardenasc@gmail.com; gil.j.jenny@gmail.com; achat@uom.edu.gr;
   a.ampatzoglou@uom.edu.gr; christoph.becker@utoronto.ca
RI Chatzigeorgiou, Alexandros/AAL-6077-2021; Fagerholm, Fabian/B-1952-2015
OI Fagerholm, Fabian/0000-0002-7298-3021; Chatzigeorgiou,
   Alexander/0000-0002-5381-8418
FU NSERC, Canada [RGPIN-2016- 06640]
FX Acknowledgements This work was partially funded by NSERC, Canada
   RGPIN-2016- 06640. Data were collected while FF was a Postdoctoral
   Fellow at the University of Toronto. We thank Rahul Mohanani for inputs
   to study design.
CR Amanatidis T, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P62, DOI 10.1145/3194164.3194174
   [Anonymous], 2002, SEI SERIES SOFTWARE
   [Anonymous], 1997, Naturalistic decision making
   [Anonymous], 2000, ATAM: Method for Architecture Evaluation
   Avgeriou P., 2016, DAGSTUHL REP, DOI 10.4230/DagRep.6.4.110
   Avgeriou P, 2013, IEEE SOFTWARE, V30, P40, DOI 10.1109/MS.2013.120
   Becker C, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P23, DOI 10.1109/TechDebt.2019.00011
   Becker C, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P85, DOI 10.1145/3194164.3194171
   Becker C, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P23, DOI 10.1109/CHASE.2017.6
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   CAMERER C, 1992, J RISK UNCERTAINTY, V5, P325, DOI 10.1007/BF00122575
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Coller M., 1999, Experimental Economics, V2, P107, DOI 10.1023/A:1009986005690
   Crandall B., 2006, WORKING MINDS PRACTI
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   Dittrich Y, 2016, INFORM SOFTWARE TECH, V70, P220, DOI 10.1016/j.infsof.2015.07.001
   Doyle JR, 2013, JUDGM DECIS MAK, V8, P116
   Durdik Z, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P517, DOI 10.1109/ICSM.2012.6405316
   ELLSBERG D, 1961, Q J ECON, V75, P643, DOI 10.2307/1884324
   EPAM, 2021, EPAM EXP PRES LAT AM
   ERICSSON KA, 1980, PSYCHOL REV, V87, P215, DOI 10.1037/0033-295X.87.3.215
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fagerholm F, 2019, INT SYMP EMP SOFTWAR, P162, DOI DOI 10.1109/esem.2019.8870161
   Fagerholm F., 2023, DATASET REPLICATION, DOI [10.5281/zenodo.7646338, DOI 10.5281/ZENODO.7646338]
   Fagerholm F, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3508359
   Fagerholm Fabian, 2019, Zenodo, DOI 10.5281/ZENODO.3257378
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Fitzgerald B, 1996, INFORM SYST J, V6, P3
   Frederick S, 2002, J ECON LIT, V40, P351, DOI 10.1257/002205102320161311
   Gigerenzer G, 2001, DAHL WS ENV, P37
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Hardisty D.J., 2011, MEASURE DISCOUNT RAT
   Harper R., 2016, CHOICE SCI REASON 21
   Hoffman RR, 1998, HUM FACTORS, V40, P254, DOI 10.1518/001872098779480442
   Hughes J, 2003, BEHAV INFORM TECHNOL, V22, P127, DOI 10.1080/0144929031000081341
   Jadhav AS, 2009, INFORM SOFTWARE TECH, V51, P555, DOI 10.1016/j.infsof.2008.09.003
   Kahneman D, 2009, AM PSYCHOL, V64, P515, DOI 10.1037/a0016755
   Keeney R. L., 1993, Decisions with multiple objectives: preferences and value tradeoffs, DOI DOI 10.1002/BS3830390206
   Keren G., 2015, The Wiley Blackwell Handbook of Judgment Decision Making
   Keren G., 2015, The Wiley Blackwell handbook of judgment and decision making, V1st, P1, DOI DOI 10.1002/9781118468333.CH1
   Klein G, 2003, IEEE INTELL SYST, V18, P81, DOI 10.1109/MIS.2003.1200735
   Klein G, 1997, EXP RES APPL, P285
   Klein G. A., 2017, SOURCES POWER PEOPLE
   KLEIN GA, 1989, IEEE T SYST MAN CYB, V19, P462, DOI 10.1109/21.31053
   Klein G, 2016, FRONT PSYCHOL, V7, DOI 10.3389/fpsyg.2016.00054
   Klein Gary A., 1993, Decision Making in Action: models and Methods, DOI DOI 10.1002/BDM.3960080307
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Leonard TC, 2008, CONST POLITICAL ECON, V19, P356, DOI 10.1007/s10602-008-9056-2
   Lewis J., 2009, International Journal of Qualitative Methods, V8, P1, DOI DOI 10.1177/160940690900800201
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Lipshitz R, 2001, J BEHAV DECIS MAKING, V14, P331, DOI 10.1002/bdm.381
   Loewenstein G., 2003, Time and Decision: Economic and Psychological Perspectives of Intertemporal Choice
   Loewenstein G, 2008, ANNU REV PSYCHOL, V59, P647, DOI 10.1146/annurev.psych.59.103006.093710
   Maxwell J. A., 2005, Qualitative research design: An interactive approach, V2nd
   Mazur J. E., 1987, QUANTITATIVE ANAL BE, P55, DOI DOI 10.1039/c4qo00187g
   McConnell S., 2007, TECHNICAL DEBT
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Mohamed A, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P103
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Myerson J, 2001, J EXP ANAL BEHAV, V76, P235, DOI 10.1901/jeab.2001.76-235
   Neumann PG, 2012, COMMUN ACM, V55, P26, DOI [10.1145/2347736.2347746, 10.1145/2347736.2347745]
   Oxford Dictionary, 2020, OXFORD DICT CHOICE L
   Oxford Dictionary, 2020, OXFORD DICT DECISION
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Petre M, 2020, IEEE SOFTWARE, V37, P21, DOI 10.1109/MS.2020.3014413
   Ralph P, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915990
   Ralph P, 2018, SCI COMPUT PROGRAM, V156, P68, DOI 10.1016/j.scico.2018.01.002
   Saaty TL, 1994, Fundamentals of decision making and priority theory with the analytic hierarchy process, DOI DOI 10.1016/J.JCLEPRO.2019.118324
   Samuelson PA, 1936, REV ECON STUD, V4, P155
   Sánchez-Gordón M, 2019, INFORM SOFTWARE TECH, V115, P23, DOI 10.1016/j.infsof.2019.08.002
   Schraagen J.M., 2008, Naturalistic Decision Making and Macrocognition, P3
   Schraagen Jan Maarten, 2000, Cognitive Task Analysis
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Soman D, 2005, MARKET LETT, V16, P347, DOI 10.1007/s11002-005-5897-x
   Suchman L, 2007, LEARN DOING, P1, DOI 10.2277/052167588X
   THALER R, 1981, ECON LETT, V8, P201, DOI 10.1016/0165-1765(81)90067-7
   Thaler RichardH., 2012, BEHAV FDN PUBLIC POL, DOI [DOI 10.2139/SSRN.1583509, 10.2307/j.ctv550cbm.31, DOI 10.2307/J.CTV550CBM.31]
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Torrance G W, 1989, Int J Technol Assess Health Care, V5, P559
   Trautmann ST., 2015, WILEY BLACKWELL HDB, V2, P89, DOI [10.1002/9781118468333.ch3, DOI 10.1002/9781118468333.CH3]
   Trope Y, 2003, PSYCHOL REV, V110, P403, DOI 10.1037/0033-295X.110.3.403
   van Vliet H, 2016, J SYST SOFTWARE, V117, P638, DOI 10.1016/j.jss.2016.01.017
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Zannier C, 2007, INFORM SOFTWARE TECH, V49, P637, DOI 10.1016/j.infsof.2007.02.010
   Zauberman G, 2009, J MARKETING RES, V46, P543, DOI 10.1509/jmkr.46.4.543
   Zdun U, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2013.97
NR 88
TC 0
Z9 0
U1 3
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107163
DI 10.1016/j.infsof.2023.107163
EA FEB 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9T3WD
UT WOS:000946959600001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Yu, X
   Dai, H
   Li, L
   Gu, XD
   Keung, JW
   Bennin, KE
   Li, FY
   Liu, J
AF Yu, Xiao
   Dai, Heng
   Li, Li
   Gu, Xiaodong
   Keung, Jacky Wai
   Bennin, Kwabena Ebo
   Li, Fuyang
   Liu, Jin
TI Finding the best learning to rank algorithms for effort-aware defect
   prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Empirical study; Learning to rank; Ranking
   instability
ID REGRESSION; RETRIEVAL; PRONENESS; MODELS; RIDGE
AB Context: Effort-Aware Defect Prediction (EADP) ranks software modules or changes based on their predicted number of defects (i.e., considering modules or changes as effort) or defect density (i.e., considering LOC as effort) by using learning to rank algorithms. Ranking instability refers to the inconsistent conclusions produced by existing empirical studies of EADP. The major reason is the poor experimental design, such as comparison of few learning to rank algorithms, the use of small number of datasets or datasets without indicating numbers of defects, and evaluation with inappropriate or few metrics.Objective: To find a stable ranking of learning to rank algorithms to investigate the best ones for EADP,Method: We examine the practical effects of 34 algorithms on 49 datasets for EADP. We measure the performance of these algorithms using 7 module-based and 7 LOC-based metrics and run experiments under cross-release and cross-project settings, respectively. Finally, we obtain the ranking of these algorithms by performing the Scott-Knott ESD test.Results: When module is used as effort, random forest regression performs the best under cross-release setting, and linear regression performs the best under cross-project setting among the learning to rank algorithms; (2) when LOC is used as effort, LTR-linear (Learning-to-Rank with the linear model) performs the best under cross-release setting, and Ranking SVM performs the best under cross-project setting.Conclusion: This comprehensive experimental procedure allows us to discover a stable ranking of the studied algorithms to select the best ones according to the requirement of software projects.
C1 [Yu, Xiao; Li, Fuyang] Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Wuhan, Peoples R China.
   [Yu, Xiao] Wuhan Univ Technol, Sanya Sci & Educ Innovat Pk, Sanya, Peoples R China.
   [Dai, Heng] Wuhan Qingchuan Univ, Sch Mech & Elect Engn, Wuhan, Peoples R China.
   [Li, Li] Beihang Univ, Sch Software, Beijing, Peoples R China.
   [Gu, Xiaodong] Shanghai Jiao Tong Univ, Sch Software, Shanghai, Peoples R China.
   [Keung, Jacky Wai] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Bennin, Kwabena Ebo] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
   [Liu, Jin] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
C3 Wuhan University of Technology; Wuhan University of Technology; Beihang
   University; Shanghai Jiao Tong University; City University of Hong Kong;
   Wageningen University & Research; Wuhan University
RP Liu, J (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
EM xiaoyu@whut.edu.cn; daiheng726@163.com; lilicoding@ieee.org;
   xiaodong.gu@sjtu.edu.cn; jacky.keung@cityu.edu.hk;
   kwabena.bennin@wur.nl; lilicoding@ieee.org; jinliu@whu.edu.cn
RI Liu, Jin/IYT-4351-2023
OI Keung, Jacky/0000-0002-3803-9600; Yu, Xiao/0000-0002-4473-3068; Li,
   Fuyang/0009-0003-5862-9709; Bennin, Kwabena/0000-0001-9140-9271
FU National Natural Science Foundation of China [61972290]; Project of
   Sanya Yazhou Bay Science and Technology City, China [SCKJ-JYRC-2022-17];
   Council of Hong Kong [11208017]; City University of Hong Kong [7005028,
   7005217, 6000796]; Funding Support from other Industry Projects, China
   [9229109, 9229098, 9229029, 9220103, 9220097, 9440227]; Youth Fund
   Project of Hainan Natural Science Foundation, China [622QN344]; Sanya
   Science and Education Innovation Park of Wuhan University of Technology,
   China [2022KF0020]
FX This work was supported in part by the National Natural Science
   Foundation of China (61972290) , the Project of Sanya Yazhou Bay Science
   and Technology City, China (SCKJ-JYRC-2022-17) , the General Research
   Fund of the Research Grants, Council of Hong Kong (11208017) , the
   Research Funds of the City University of Hong Kong (7005028, 7005217 and
   6000796) , and the Funding Support from other Industry Projects, China
   (9229109, 9229098, 9229029, 9220103, 9220097, and 9440227) , the Youth
   Fund Project of Hainan Natural Science Foundation, China (622QN344) ,
   and the Sanya Science and Education Innovation Park of Wuhan University
   of Technology, China (2022KF0020) .
CR [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bennin KE, 2016, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2016.144
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2017, Classification and Regression Trees, DOI [10.1201/9781315139470-8, DOI 10.1201/9781315139470-8, DOI 10.1201/9781315139470]
   Burges Chris, 2005, P 22 INT C MACH LEAR, P89, DOI DOI 10.1145/1102351.1102363
   Cao Z., 2007, P 24 INT C MACH LEAR, V24, P129
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Chen YX, 2022, IEEE T GEOSCI REMOTE, V60, DOI 10.1109/TGRS.2022.3155283
   Chen YX, 2020, IEEE T GEOSCI REMOTE, V58, P7049, DOI 10.1109/TGRS.2020.2979273
   Chen YX, 2020, PATTERN RECOGN, V105, DOI 10.1016/j.patcog.2020.107368
   Chen YZ, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21196417
   Cheng T, 2022, FRONT COMPUT SCI-CHI, V16, DOI 10.1007/s11704-021-1013-5
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cleary J.G., 1995, PROC 12 INT C MACHIN, P108, DOI [DOI 10.1016/B978-1-55860-377-6.50022-0, 10.1016/B978-1-55860-377-6.50022-0]
   Cohen W.W., 1995, MACHINE LEARNING P 1
   Collins M, 2002, MACH LEARN, V48, P253, DOI 10.1023/A:1013912006537
   Compton P, 1991, P 6 AAAI KNOWL ACQ K, P6
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Drucker H, 1997, ADV NEUR IN, V9, P155
   Du X, 2022, AXIOMS, V11, DOI 10.3390/axioms11050205
   Efron B, 2004, ANN STAT, V32, P407, DOI 10.1214/009053604000000067
   Feng S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106662
   Freund Y, 2004, J MACH LEARN RES, V4, P933, DOI 10.1162/1532443041827916
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   He CC, 2022, J ASSOC INF SCI TECH, V73, P70, DOI 10.1002/asi.24546
   He CC, 2021, SCIENTOMETRICS, V126, P4005, DOI 10.1007/s11192-021-03943-w
   Herbrich R, 2000, ADV NEUR IN, P115
   HOERL AE, 1970, TECHNOMETRICS, V12, P55, DOI 10.1080/00401706.1970.10488634
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Huang Q, 2020, ENVIRON TECHNOL, V41, P1664, DOI 10.1080/09593330.2018.1543359
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2010, PROC IEEE INT CONF S
   Keung J., 2011, Automated Software Engineering
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru G, 2010, EMPIR SOFTW ENG, V15, P577, DOI [10.1007/s10664-010-9132-X, 10.1007/s10664-010-9132-x]
   Kotsiantis S.B., 2005, INFORM-J COMPUT INFO, V29
   Koza JR, 1997, GENETIC PROGRAMMING
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   Liu TY, 2011, LEARNING TO RANK FOR INFORMATION RETRIEVAL, P1, DOI 10.1007/978-3-642-14267-3
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Ma XX, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106906
   Maltamo M, 1998, CAN J FOREST RES, V28, P1107, DOI 10.1139/cjfr-28-8-1107
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Metzler D, 2007, INFORM RETRIEVAL, V10, P257, DOI 10.1007/s10791-006-9019-z
   Miletic M, 2018, 2018 41ST INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1460, DOI 10.23919/MIPRO.2018.8400263
   Muthukumaran K, 2016, STUD COMPUT INTELL, V653, P17, DOI 10.1007/978-3-319-33810-1_12
   Ni C., 2020, IEEE Transactions on Software Engineering
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Panichella A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1077, DOI 10.1145/2908812.2908938
   Park J, 1991, NEURAL COMPUT, V3, P246, DOI 10.1162/neco.1991.3.2.246
   Peterson L.E., 2009, SCHOLARPEDIA, V4, P1883, DOI 10.4249/scholarpedia.1883
   Phannachitta P, 2017, EMPIR SOFTW ENG, V22, P474, DOI 10.1007/s10664-016-9434-8
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Qu Y., 2019, IEEE T SOFTWARE ENG
   Qu Y, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106605
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rao JQ, 2021, IEEE I C SQRS-C, P372, DOI 10.1109/QRS-C55045.2021.00062
   Rish Irina, 2001, IJCAI 2001 WORKSHOP, V3, P41
   Seber G. A., 2012, Linear regression analysis, V329
   Segal MR, 2004, Machine Learning Benchmarks and Random Forest Regression
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   SPECHT DF, 1991, IEEE T NEURAL NETWOR, V2, P568, DOI 10.1109/72.97934
   Tantithamthavorn C., 2016, R PACKAGE VERSION 2
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tipping ME, 2000, ADV NEUR IN, V12, P652
   Nguyen TT, 2014, PROC INT CONF ADV, P321, DOI 10.1109/ATC.2014.7043405
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang F, 2018, ASIA PAC SOFWR ENG, P335, DOI 10.1109/APSEC.2018.00048
   Wu QA, 2010, INFORM RETRIEVAL, V13, P254, DOI 10.1007/s10791-009-9112-1
   Xu M, 2005, REMOTE SENS ENVIRON, V97, P322, DOI 10.1016/j.rse.2005.05.008
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yang XX, 2018, IEEE T RELIAB, V67, P885, DOI 10.1109/TR.2018.2847353
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2016, IEEE INT CONF AUTOM, P296, DOI 10.1145/2970276.2970353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Yang Z, 2021, APPL SOFT COMPUT, V111, DOI 10.1016/j.asoc.2021.107649
   You GA, 2016, INT J SOFTW ENG KNOW, V26, P1511, DOI 10.1142/S0218194016400155
   Yu X, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106847
   Yu X, 2020, IEEE T RELIAB, V69, P139, DOI 10.1109/TR.2019.2931559
   Yu X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P298, DOI [10.1109/SANER.2019.8668033, 10.1109/saner.2019.8668033]
   Zhao KS, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106652
   Zhao KS, 2022, IET SOFTW, V16, P259, DOI 10.1049/sfw2.12040
   Zhen Y., 2022, ACM Trans. Softw. Eng. Methodol.
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 94
TC 10
Z9 10
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107165
DI 10.1016/j.infsof.2023.107165
EA FEB 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8X6DT
UT WOS:000932102800001
DA 2024-07-18
ER

PT J
AU Azad, N
   Hyrynsalmi, S
AF Azad, Nasreen
   Hyrynsalmi, Sami
TI DevOps critical success factors-A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE DevOps; Development and operations; Success factors; Barriers;
   Literature review
ID AGILE SOFTWARE-DEVELOPMENT; CONTINUOUS DEPLOYMENT; ADOPTION; MODEL;
   BUSINESS; SERVICES
AB Context: DevOps is a set of software development and operation practices and a recent addition to a large family of different kinds of software process models. The model emerged out of the observation that information systems operations and developments should be closely integrated activities to ensure the success of any organization. Thus, DevOps methods are an additive tool for companies to improve overall performance in their software development processes and operations.Objective: This paper aims to identify the various critical success factors (CSFs) of DevOps projects that have been discussed in prior research. In addition, this study proposes a comprehensive framework for depicting how these CSFs impact or drive DevOps success.Method: This study consists of a systematic literature review to collect the primary articles for the analysis.Results: After searches in four major publication databases and snowballing, we selected 38 primary studies for the analysis. Nearly 100 different CSFs were identified, which were then categorized into Technical, Organizational, and Social & Cultural dimensions. Based on the results of the literature analysis, a comprehensive framework is proposed that depicts how the CSFs impact or drive DevOps success.Conclusion: This paper presents a DevOps framework with various CSFs based on prior literature. The proposed framework will provide collective knowledge of DevOps success factors, which will allow researchers and practitioners to enhance their understanding of CSFs and learn how to handle DevOps issues in organizations. In particular, the paper highlights a number of future research directions related to CSFs.
C1 [Azad, Nasreen; Hyrynsalmi, Sami] LUT Univ, Dept Software Engn, PL 20, FI-53851 Lappeenranta, Finland.
C3 Lappeenranta-Lahti University of Technology LUT
RP Azad, N (corresponding author), LUT Univ, Dept Software Engn, PL 20, FI-53851 Lappeenranta, Finland.
EM nasren.azad@lut.fi
RI Hyrynsalmi, Sami/U-6315-2017; Azad, Nasreen/AAD-7804-2022
OI Hyrynsalmi, Sami/0000-0002-5073-3750; Azad, Nasreen/0000-0002-2428-2984
CR Abrahamsson P, 2017, Arxiv, DOI arXiv:1709.08439
   Ahimbisibwe A, 2015, J ENTERP INF MANAG, V28, P7, DOI 10.1108/JEIM-08-2013-0060
   Akbar MA, 2023, SOFT COMPUT, V27, P1907, DOI 10.1007/s00500-020-05150-w
   Alahyari H, 2017, J SYST SOFTWARE, V125, P271, DOI 10.1016/j.jss.2016.12.007
   Aldahmash A, 2017, COMM COM INF SC, V748, P504, DOI 10.1007/978-3-319-64218-5_41
   Alnafessah A, 2021, IEEE ACCESS, V9, P44476, DOI 10.1109/ACCESS.2021.3064867
   Alnamlah B., 2021, INDONESIAN J ELECT E, V21, P348, DOI [10.11591/ijeecs.v21.i1.pp348-353, DOI 10.11591/IJEECS.V21.I1.PP348-353]
   [Anonymous], 2016, CONTINUOUS DELIVERY
   Arvind, 2022, DEV LIF EV YOU NEED
   Azad N., 2022, SOFTWARE BUSINESS 13, P1
   Azad N, 2022, 5TH INTERNATIONAL WORKSHOP ON SOFTWARE-INTENSIVE BUSINESS: TOWARDS SUSTAINABLE SOFTWARE BUSINESS (IWSIB 2022), P83, DOI 10.1145/3524614.3528627
   Azad N, 2021, LECT NOTES BUS INF P, V434, P221, DOI 10.1007/978-3-030-91983-2_17
   Baker J, 2010, INTEGR SER INFORM SY, V28, P231, DOI 10.1007/978-1-4419-6108-2_12
   Barros R.d.S., 2016, THESIS
   Bass L, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P5, DOI 10.1109/RELENG.2013.6607688
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Ben Mesmia W, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2329
   Bezemer CP, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P45, DOI 10.1145/3297663.3309672
   Bird J., 2016, DEVOPSSEC DELIVERING
   Callanan M, 2016, IEEE SOFTWARE, V33, P53, DOI 10.1109/MS.2016.66
   Casey V, 2009, INT CONF GLOBAL SOFT, P8, DOI 10.1109/ICGSE.2009.9
   Chau PYK, 1997, MIS QUART, V21, P1, DOI 10.2307/249740
   Chen BY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P194, DOI 10.1109/ICSE-Companion.2019.00080
   Chen JF, 2020, PROC INT CONF SOFTW, P206, DOI 10.1145/3377812.3381386
   Chen LP, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P39, DOI 10.1109/ICSA.2018.00013
   Chen LP, 2017, J SYST SOFTWARE, V128, P72, DOI 10.1016/j.jss.2017.02.013
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Cois CA, 2014, IEEE INT PROF COMMUN
   COLLINS PD, 1988, ACAD MANAGE J, V31, P512, DOI 10.5465/256458
   Colomo-Palacios R, 2018, INT J INFORM MANAGE, V40, P186, DOI 10.1016/j.ijinfomgt.2017.11.005
   de Feijter R, 2018, LECT NOTES BUS INF P, V318, P244, DOI 10.1007/978-3-319-91704-7_16
   Debois P, 2008, AGILE 2008, PROCEEDINGS, P202, DOI 10.1109/Agile.2008.42
   Díaz J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09919-3
   Díaz J, 2019, LECT NOTES COMPUT SC, V11915, P323, DOI 10.1007/978-3-030-35333-9_23
   Díaz J, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234199
   Dickinson R., 1984, AM J SMALL BUSINESS, VVIII, P49
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Everett M.Rogers., 1995, Diffusion of innovations, V12
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2006, Continuous integration
   Gall M, 2022, EUR J INFORM SYST, V31, P548, DOI 10.1080/0960085X.2021.1997100
   Gotel O, 2007, LECT NOTES COMPUT SC, V4536, P24
   Grunert K.G., 1992, CONCEPT KEY SUCCESS
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Hofstede G., 1991, Cultures and organizations, DOI DOI 10.1016/S0005-7967(02)00184-5
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hussain W, 2017, INT CONF GLOBAL SOFT, P21, DOI 10.1109/ICGSE.2017.16
   Huttermann M., 2012, DevOps for Developers
   Huttermann M., 2019, INT C INFORM SYSTEMS
   I. technology glossary, 2022, GARTN IT GLOSS
   Iden J, 2011, INFORM SOFTWARE TECH, V53, P394, DOI 10.1016/j.infsof.2010.12.002
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Järvinen J, 2014, LECT NOTES BUS INF P, V182, P58
   Karamitsos I, 2020, INFORMATION, V11, DOI 10.3390/info11070363
   Kerzazi N, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P77, DOI [10.1109/CSED.2016.022, 10.1145/2896941.2896957]
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kolfschoten GL, 2010, GROUP DECIS NEGOT, V19, P301, DOI 10.1007/s10726-010-9192-8
   Krawatzeck R, 2015, INFORM SYST MANAGE, V32, P177, DOI 10.1080/10580530.2015.1044336
   Kuan KKY, 2001, INFORM MANAGE-AMSTER, V38, P507, DOI 10.1016/S0378-7206(01)00073-8
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Lehman M. M., 1989, Journal of Software Maintenance: Research and Practice, V1, P3, DOI 10.1002/smr.4360010103
   LEIDECKER JK, 1984, LONG RANGE PLANN, V17, P23, DOI 10.1016/0024-6301(84)90163-8
   Luz WP, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240299
   Lwakatare L.E, 2016, ICSEA, V104
   Lwakatare L. E., 2017, THESIS
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   Marnewick C., 2020, IEEE SOFTWARE
   Maroukian K., 2020, 9 INT C INFORM TECHN
   Moe Nils Brede, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P150, DOI 10.1145/3383219.3383235
   Mohan V, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P542, DOI 10.1109/ARES.2016.92
   Munoz Mirna, 2019, New Knowledge in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 930), P666, DOI 10.1007/978-3-030-16181-1_63
   Nybom K., 2016, INT C AG SOFTW DEV, P131, DOI [10.1007/978-3-319-33515-5_11, DOI 10.1007/978-3-319-33515-5_11]
   Oliveira T, 2014, INFORM MANAGE-AMSTER, V51, P497, DOI 10.1016/j.im.2014.03.006
   Olszewska M., 2015, Proceedings of the 1st International Workshop on Quality-Aware DevOps, P7
   Pallis George, 2018, IEEE Internet Computing, V22, P65, DOI 10.1109/MIC.2018.032501519
   Perera P, 2016, INT CONF ADV ICT, P281, DOI 10.1109/ICTER.2016.7829932
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Rafi S, 2022, MATH PROBL ENG, V2022, DOI 10.1155/2022/2600160
   Rahikkala J, 2018, E-INFORMATICA, V12, P167, DOI 10.5277/e-Inf180107
   Ram J, 2013, INT J PROD ECON, V144, P157, DOI 10.1016/j.ijpe.2013.01.032
   Riungu-Kalliosaari L, 2016, LECT NOTES COMPUT SC, V10027, P590, DOI 10.1007/978-3-319-49094-6_44
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Rockart J., 1981, 69 MIT SLOAN SCH MAN
   ROCKART JF, 1979, HARVARD BUS REV, V57, P81
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rowse M., 2021, 54 HAWAII INT C SYST, P1
   Sacks M., 2012, Pro Website Development and Operations, P1
   Sahid A, 2017, ICCWCS'17: PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON COMPUTING AND WIRELESS COMMUNICATION SYSTEMS, DOI 10.1145/3167486.3167556
   Salameh H., 2019, P 2 INT C RES MANAGE, P22
   Santos PS, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106570
   Schlossnagle T, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3168505
   Sebastian IM, 2017, MIS Q EXEC, V16, P197
   Shahin M, 2017, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2017.18
   Shahin M, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962587
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Smite D, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106612
   Ståhl D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P54, DOI 10.1145/2591062.2591186
   Tam C, 2020, INT J PROJ MANAG, V38, P165, DOI 10.1016/j.ijproman.2020.02.001
   Tarhini A, 2017, INTERACT LEARN ENVIR, V25, P306, DOI 10.1080/10494820.2015.1122635
   Thong J. Y. L., 1999, Journal of Management Information Systems, V15, P187
   Toh MZ, 2019, 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2019), P173, DOI 10.1145/3316615.3316619
   Tornatzky LG, 1990, PROCESSES TECHNOLOGI
   Trigo A, 2022, COGENT ENG, V9, DOI 10.1080/23311916.2022.2083474
   Tsanos CS, 2014, INT J LOGIST MANAG, V25, P418, DOI 10.1108/IJLM-02-2012-0005
   van Belzen Michiel, 2019, Proceedings of the 12th IADIS International Conference. Information Systems 2019, P26
   Van Belzen M., 2019, INT C INF SYST DEV I
   Van Belzen M, 2019, CRITICAL SUCCESS FAC
   Vonk R., 2020, THESIS OPEN U NETHER
   Wahaballa A, 2015, INT CONF SOFTW ENG, P211, DOI 10.1109/ICSESS.2015.7339039
   Wettinger J, 2014, LECT NOTES COMPUT SC, V8745, P108, DOI 10.1007/978-3-662-44879-3_8
   Wiedemann A, 2020, EUR J INFORM SYST, V29, P458, DOI 10.1080/0960085X.2020.1782277
   Wohlin C., 2012, Experimentation in Software Engineering
   Yoon C, 2017, SUSTAINABILITY-BASEL, V9, DOI 10.3390/su9112017
   Zhang ZM, 2022, JMIR MHEALTH UHEALTH, V10, DOI 10.2196/30960
   Zimmerer P, 2018, PROC IEEE ACM INT C, P532, DOI 10.1145/3183440.3183465
NR 121
TC 7
Z9 7
U1 14
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107150
DI 10.1016/j.infsof.2023.107150
EA JAN 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8Q7PS
UT WOS:000927395100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Bibiano, AC
   Uchoa, A
   Assunçao, WKG
   Tenório, D
   Colanzi, TE
   Vergilio, SR
   Garcia, A
AF Bibiano, Ana Carla
   Uchoa, Anderson
   Assuncao, Wesley K. G.
   Tenorio, Daniel
   Colanzi, Thelma E.
   Vergilio, Silvia Regina
   Garcia, Alessandro
TI Composite refactoring: Representations, characteristics and effects on
   software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code refactoring; Composite refactoring; Software maintenance; Software
   project; Systematic mapping
ID OBJECT-ORIENTED SOFTWARE; SEARCH-BASED APPROACH; CODE-SMELLS;
   OPPORTUNITIES; MAINTAINABILITY; IDENTIFICATION; CHALLENGES
AB Context: code refactoring is a code transformation that aims to improve software quality. A composite refactoring (or, simply, composite) is defined by two or more interrelated refactorings, which is often applied by developers. Each composite needs to be somehow represented and has its own characteristics (e.g., code scope) as well as its effects on software quality. However, these basic elements of composites are rarely studied systematically. The lack of systematic knowledge also misguides the design of automated support tools for supporting composite refactoring. Thus, researchers might have controversial views about basic elements of composite refactorings. An example of these literature conflicts concerns the effect of composites: while some studies suggest composites more often remove code smells, other studies indicate composites often introduce code smells.Objective: in this sense, our study aims at analyzing the technical literature of composite refactoring and building a conceptual framework of the representation models, characteristics, and the effect of composite refactoring.Method: we conducted a systematic mapping with 140 primary empirical studies about refactoring. Our sys-tematic mapping summarizes the current knowledge on composites and also presents a conceptual framework intended to characterize composite refactoring.Results: our conceptual framework presents seven representation models, nine characteristics, and thirteen effects of composites. We found out that studies used multidimensional representations, like graphs, to deter-mine what refactoring(s) may be suggested and combined. On composite characteristics, studies mentioned developers often finish a composite in up to a month. However, these studies do not detail why and when composites span for several weeks. Then, we discussed other existing gaps on the current literature of composites. For instance, while most of the studies report the effect of composites on internal software quality, e.g., code smells, their effect on external software quality is little explored.Conclusion: our results can motivate future studies to more deeply investigate composite refactoring applica-tions, and the improvement of tooling support for composite refactorings.
C1 [Bibiano, Ana Carla; Assuncao, Wesley K. G.; Tenorio, Daniel; Garcia, Alessandro] Pontificia Catholic Univ Rio De Janeiro PUC Rio, Rio De Janeiro, Brazil.
   [Uchoa, Anderson] Fed Univ Ceara UFC, Itapaje, Brazil.
   [Assuncao, Wesley K. G.] Johannes Kepler Univ Linz JKU, Linz, Austria.
   [Colanzi, Thelma E.] State Univ Maringa UEM, Maringa, Brazil.
   [Vergilio, Silvia Regina] Fed Univ Parana UFPR, Curitiba, Brazil.
C3 Johannes Kepler University Linz; Universidade Estadual de Maringa;
   Universidade Federal do Parana
RP Bibiano, AC (corresponding author), Pontificia Catholic Univ Rio De Janeiro PUC Rio, Rio De Janeiro, Brazil.
EM abibiano@inf.puc-rio.br; andersonuchoa@ufc.br; wassuncao@inf.puc-rio.br;
   doliveira@inf.puc-rio.br; thelma@din.uem.br; silvia@inf.ufpr.br;
   afgarcia@inf.puc-rio.br
RI Uchôa, Anderson/N-4331-2019; Assuncao, Wesley Klewerton
   Guez/AAA-8331-2020
OI Uchôa, Anderson/0000-0002-6847-5569; Assuncao, Wesley Klewerton
   Guez/0000-0002-7557-9091; Colanzi, Thelma/0000-0001-9761-1999
FU CNPq [141276/2020-7, 151723/2020-6, 141054/2019-0, 104254/2019-0,
   434969/2018-4, 427787/2018-1, 305968/2018-1, 428994/2018-0,
   409536/2017-2, 312149/2016-6]; CAPES [175956]; FAPERJ [22520-7/2016,
   PDR-10 202073/2020]; FAPPR [BP5-00197-00042.01.00/22]; FUNCAP
   [001/2021]; IEEA-RJ;  [51152-CP13/18]
FX This study was in part financed by CNPq (141276/2020-7) ,
   (151723/2020-6) , (141054/2019-0) , (104254/2019-0) , (434969/2018-4) ,
   (427787/2018-1) , (305968/2018-1) , (428994/2018-0) , (409536/2017-2) ,
   and (312149/2016-6) , CAPES (175956) , and FAPERJ (22520-7/2016) ,
   (PDR-10 202073/2020) , IEEA-RJ (001/2021) , FAPPR (51152-CP13/18) ,
   FUNCAP (BP5-00197-00042.01.00/22) .
CR Abebe M., 2014, ADV SCI TECHNOLOGY L, DOI [10.14257/astl.2014.46.59, DOI 10.14257/ASTL.2014.46.59]
   Abid C, 2020, Arxiv, DOI arXiv:2007.02194
   Adler F, 2021, IEEE INT WORK C SO, P120, DOI 10.1109/SCAM52516.2021.00023
   Ajouli Akram, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P25, DOI 10.1109/SEAA.2013.53
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   Ben Sghaier O, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P798, DOI 10.1109/MODELS-C53483.2021.00126
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bibiano A.C., 2020, AN EST 11 C BRAS SOF, P165
   Bibiano A.C., 2019, INT SYMP EMP SOFTWAR, P1, DOI [DOI 10.1109/ESEM.2019.8870183, 10.1109/ESEM.2019.8870183, DOI 10.1109/esem.2019.8870183]
   Bibiano A.C., 2019, THESIS PONTIFICAL CA
   Bibiano A.C., 2022, COMPOSITE REFACTORIN, DOI [10.5281/zenodo.6374130, DOI 10.5281/ZENODO.6374130]
   Bibiano AC, 2021, PROC IEEE INT CONF S, P298, DOI 10.1109/ICSME52107.2021.00033
   Biegel B., 2011, Comparison of similarity metrics for refactoring detection, P53
   Botelho Glauber, 2018, 2018 IEEE C EVOLUTIO, P1
   Brito A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10023-3
   Brito A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P367, DOI [10.1109/SANER48275.2020.9054864, 10.1109/saner48275.2020.9054864]
   Caracciolo A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P482, DOI 10.1109/SANER.2016.11
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Charalampidou S, 2017, IEEE T SOFTWARE ENG, V43, P954, DOI 10.1109/TSE.2016.2645572
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   Chen ZY, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1951
   Chen ZY, 2017, P INT COMP SOFTW APP, P288, DOI 10.1109/COMPSAC.2017.242
   Chisalita-Cretu C, 2014, P WORLD C ENG COMPUT, V1
   Christopoulou A, 2012, INFORM SOFTWARE TECH, V54, P1202, DOI 10.1016/j.infsof.2012.05.004
   Chug A, 2017, 2017 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1624, DOI 10.1109/ICACCI.2017.8126075
   Cinneide M. O., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P463, DOI 10.1109/ICSM.1999.792644
   Cinnéide MO, 2017, EMPIR SOFTW ENG, V22, P292, DOI 10.1007/s10664-016-9427-7
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Coelho F, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P63, DOI 10.1109/IWoR.2019.00019
   Cohen J., 2013, P 28 ANN ACM S APPL, P1700
   Cortellessa V, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P224, DOI 10.1109/SEAA53835.2021.00036
   Counsell S, 2010, IET SOFTW, V4, P318, DOI 10.1049/iet-sen.2009.0010
   Counsell S., 2015, SCI WORKSH P XP2015, P1
   Counsell S, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P91, DOI 10.1109/QRS51102.2020.00024
   Counsell S, 2014, LECT NOTES BUS INF P, V199, P136
   Creswell J. W., 2014, RES DESIGN QUALITATI, V4th, DOI DOI 10.1007/S13398-014-0173-7.2
   Czibula G., 2010, WSEAS T COMPUT
   Czibula G, 2012, INT J INNOV COMPUT I, V8, P1689
   de Oliveira MC, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1018, DOI 10.1145/3106237.3119872
   Defei Hou, 2020, 2020 7th International Conference on Dependable Systems and Their Applications (DSA), P447, DOI 10.1109/DSA51864.2020.00076
   Dora S.K., 2013, ADV INTELL SYST, P107
   Farah PR, 2021, IEEE C EVOL COMPUTAT, P2377, DOI 10.1109/CEC45853.2021.9504804
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   Fernandes E, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P206, DOI 10.1109/ICSE-Companion.2019.00083
   Ferreira I, 2018, PROC IEEE ACM INT C, P406, DOI 10.1145/3183440.3195030
   Fontana FA, 2015, LECT NOTES BUS INF P, V212, P3, DOI 10.1007/978-3-319-18612-2_1
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 1999, AW OBJ TECHNOL S
   Freire S, 2020, EUROMICRO CONF PROC, P346, DOI 10.1109/SEAA51224.2020.00064
   Gaitani MAG, 2015, INFORM SOFTWARE TECH, V59, P33, DOI 10.1016/j.infsof.2014.10.010
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Ge X, 2017, S VIS LANG HUM CEN C, P71, DOI 10.1109/VLHCC.2017.8103453
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Gligoric M, 2014, ACM SIGPLAN NOTICES, V49, P599, DOI [10.1145/2660193.2660239, 10.1145/2714064.2660239]
   Griffith I., 2011, P 24 INT C COMP APPL, P1
   Han AR, 2018, IEEE T SOFTWARE ENG, V44, P1001, DOI 10.1109/TSE.2017.2731853
   Han AR, 2015, INFORM SOFTWARE TECH, V59, P53, DOI 10.1016/j.infsof.2014.10.007
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Herold S, 2014, LECT NOTES COMPUT SC, V8627, P390, DOI 10.1007/978-3-319-09970-5_33
   Hiller Martin, 2012, Proceedings of the DASIA 2012. Data Systems In Aerospace, P40
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jin Huang, 2011, 2011 International Conference on System Science, Engineering Design and Manufacturing Informatization, P222, DOI 10.1109/ICSSEM.2011.6081283
   Jin Huang, 2011, 2011 IEEE 3rd International Conference on Communication Software and Networks (ICCSN 2011), P267, DOI 10.1109/ICCSN.2011.6014267
   Kádár I, 2016, LECT NOTES COMPUT SC, V9789, P610, DOI 10.1007/978-3-319-42089-9_43
   Kang Kyo C, 1990, Technical Report
   Kaur S, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110394
   Kebir S., 2016, P 9 EAI INT C BIOINS, P221
   Kebir S, 2017, INFORM SOFTWARE TECH, V88, P17, DOI 10.1016/j.infsof.2017.03.009
   Kessentini M, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1303, DOI 10.1145/3071178.3071334
   Kessentini M, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P365, DOI 10.1109/ICWS.2017.121
   Kessentini M, 2017, EMPIR SOFTW ENG, V22, P670, DOI 10.1007/s10664-016-9442-8
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Khrishe Y, 2016, INT CONF COMP SCI
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   Kim J, 2015, PROC IEEE INT CONF S, P211, DOI 10.1109/ICSM.2015.7332467
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393655
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kitchenham B., 2007, 2007001 EBSE KEEL DU
   Kozsik T, 2018, FUTURE GENER COMP SY, V79, P687, DOI 10.1016/j.future.2017.05.011
   Kuhlemann M., 2010, 2 MDPLE COL 6 ECMFA
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Liu H, 2015, IEEE T SOFTWARE ENG, V41, P887, DOI 10.1109/TSE.2015.2427831
   Mahouachi Rim, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P126, DOI 10.1007/978-3-642-39742-4_11
   Mahouachi R., 2013, P 15 ANN C COMPANION, P205, DOI [10.1145/2464576.2464680, DOI 10.1145/2464576.2464680]
   Mahouachi R, 2018, J COMPUT SCI TECH-CH, V33, P1320, DOI 10.1007/s11390-018-1892-6
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Marticorena R, 2011, ICSOFT 2011: PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATABASE TECHNOLOGIES, VOL 2, P232
   Marticorena Raul., 2011, Proceedings of the 6th International Conference on Software and Data Technologies, V2
   Meananeatra P., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P113, DOI 10.1109/MySEC.2011.6140653
   Meananeatra P, 2018, IEICE T INF SYST, VE101D, P1766, DOI 10.1587/transinf.2017KBP0026
   Meananeatra P, 2012, IEEE INT CONF AUTOM, P406, DOI 10.1145/2351676.2351760
   MelOCinneide Paddy., 2000, P THEWORKSHOP FORMAL, P1
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moesus N., 2018, P 13 INT C SOFTWARE, P67
   Mohan M, 2019, INFORM SOFTWARE TECH, V112, P83, DOI 10.1016/j.infsof.2019.04.009
   Mohan M., 2018, J SOFTW ENG RES DEV, V6, DOI [10.1186/s40411-018-0046-4, DOI 10.1186/S40411-018-0046-4]
   Mohan M, 2016, J SYST SOFTWARE, V120, P183, DOI 10.1016/j.jss.2016.05.019
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Murgia A., 2011, 2011 18th Working Conference on Reverse Engineering, P372, DOI 10.1109/WCRE.2011.52
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Naiya N, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P88, DOI 10.1109/SEAA.2015.42
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Neto AA, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P333, DOI 10.1145/3319008.3319356
   Nyamawe AS, 2018, IEEE ACCESS, V6, P49460, DOI 10.1109/ACCESS.2018.2868990
   Oliveira R, 2016, P BRAZ SYMP SOFTW, P61, DOI 10.1109/SBCARS.2016.18
   Omori T, 2018, IEICE T INF SYST, VE101D, P644, DOI 10.1587/transinf.2017EDP7160
   Oo T, 2018, IEEE ACCESS, V6, P76025, DOI 10.1109/ACCESS.2018.2883769
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Paixao M, 2020, IEEE WORK CONF MIN S, P125, DOI 10.1145/3379597.3387475
   Palacio D.N., 2018, P GENETIC EVOLUTIONA, P1606, DOI [10.1145/3205651.3208294, DOI 10.1145/3205651.3208294]
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Pérez J, 2013, PROC IEEE INT CONF S, P572, DOI 10.1109/ICSM.2013.98
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Piveta Eduardo, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P319, DOI 10.1109/COMPSAC.2008.119
   Prete K, 2010, PROC IEEE INT CONF S
   Qayum F., 2011, ECEASST, V38
   Qayum F., 2010, P 5 INT C GRAPH TRAN, V38, P1
   Qayum F, 2010, LECT NOTES COMPUT SC, V6372, P407
   Rani Anshul, 2017, 2017 3 INT C COMPUTA, DOI [10.1109/CIACT.2017.7977311, DOI 10.1109/CIACT.2017.7977311]
   Raychev V, 2013, ACM SIGPLAN NOTICES, V48, P339, DOI [10.1145/2509136.2509544, 10.1145/2544173.2509544]
   Razani Z., 2019 5 C KNOWLEDGE B, P181
   Rissetti G., 2016, INT J HIGH PERFORM S, V6, P98
   Saadeh E, 2013, INT J SOFTW ENG KNOW, V23, P309, DOI 10.1142/S0218194013500095
   Sandalski M, 2011, CYBERN INF TECHNOL, V11, P46
   Santos H, 2015, J SYST SOFTWARE, V104, P41, DOI 10.1016/j.jss.2015.02.017
   Schuster C, 2016, LECT NOTES COMPUT SC, V9632, P644, DOI 10.1007/978-3-662-49498-1_25
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Sidhu BK, 2018, INT J SOFTW ENG KNOW, V28, P1287, DOI 10.1142/S0218194018500365
   Singh S, 2018, AIN SHAMS ENG J, V9, P2129, DOI 10.1016/j.asej.2017.03.002
   Soetens QD, 2013, PROC IEEE INT CONF S, P384, DOI 10.1109/ICSM.2013.53
   Sousa L., 2020, 17 MSR
   Sousa L, 2020, IEEE WORK CONF MIN S, P186, DOI 10.1145/3379597.3387477
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storrle Harald., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P160, DOI DOI 10.1145/3084226.3084256
   Szoke G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P693, DOI 10.1109/SANER.2016.17
   Szoke G, 2015, IEEE INT WORK C SO, P253, DOI 10.1109/SCAM.2015.7335422
   Takahashi Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P594, DOI 10.1109/SANER.2016.54
   Tarwani S, 2021, 2021 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE & ENGINEERING (CONFLUENCE 2021), P188, DOI 10.1109/Confluence51648.2021.9377109
   Tarwani S, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1397, DOI 10.1109/ICACCI.2016.7732243
   Tavares CS, 2018, PROCEEDINGS OF THE 14TH BRAZILIAN SYMPOSIUM ON INFORMATION SYSTEMS (SBSI2018), P81, DOI 10.1145/3229345.3229357
   Trujillo Salvador., 2006, GPCE 06 P 5 INT C GE, P191
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Unterholzner M, 2014, SCI COMPUT PROGRAM, V96, P70, DOI 10.1016/j.scico.2013.11.032
   Vakilian M, 2013, LECT NOTES COMPUT SC, V7920, P527, DOI 10.1007/978-3-642-39038-8_22
   Vassallo C, 2018, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2018.00068
   Verebi I, 2015, PROC IEEE INT CONF S, P606, DOI 10.1109/ICSM.2015.7332524
   Villamizar H, 2018, EUROMICRO CONF PROC, P454, DOI 10.1109/SEAA.2018.00080
   Villavicencio G, 2012, EUR CON SFTWR MTNCE, P341, DOI 10.1109/CSMR.2012.41
   White J., 2009, P 13 INT SOFTW PROD, P11
   Wohlin C., 2012, Experimentation in Software Engineering
   Wongpiang Ratapong, 2013, 2013 IEEE 4th International Conference on Electronics Information and Emergency Communication (ICEIEC), P160, DOI 10.1109/ICEIEC.2013.6835477
   Wongpiang Ratapong, 2014, International MultiConference of Computer Scientists (IMEC 2014). Proceedings, P590
   Yang L., 2014, SEKE, P711
   Zafeiris VE, 2017, INFORM SOFTWARE TECH, V82, P19, DOI 10.1016/j.infsof.2016.09.008
   Zarras AV, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P922, DOI 10.1145/2786805.2803203
   Zhao S, 2015, PROCEEDINGS OF 2015 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING AND INTERNET OF THINGS, P151, DOI 10.1109/ICAIOT.2015.7111558
   Zibran MF, 2011, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2011.21
   Zibran MF, 2011, CONF PROC INT SYMP C, P266, DOI 10.1109/ICPC.2011.45
   Zibran MF, 2013, IET SOFTW, V7, P167, DOI 10.1049/iet-sen.2012.0058
NR 188
TC 2
Z9 2
U1 5
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107134
DI 10.1016/j.infsof.2022.107134
EA JAN 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8D6LF
UT WOS:000918401600001
DA 2024-07-18
ER

PT J
AU Ding, YR
   Zhang, YM
   Yuan, G
   Jiang, SJ
   Dai, W
AF Ding, Yanru
   Zhang, Yanmei
   Yuan, Guan
   Jiang, Shujuan
   Dai, Wei
TI Progress on class integration test order generation approaches: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software testing; Integration testing; Class integration test order;
   Test cost
ID SOFTWARE DEFECT PREDICTION; STRATEGY
AB Context: Integration testing is an effective way to detect unit test results and ensure the correct and stable operation of software modules. One of the crucial problems in integration testing is the class integration test order (CITO) generation problem. Its purpose is to reasonably determine the test order of each class in a program to reduce test consumption. In recent years, the CITO generation problem has made a lot of progress but also faces more challenges. Objective: The goal of this paper is to provide an overview of the research progress on the CITO generation problem. By summarizing applied techniques, evaluation indicators, and datasets, this paper aims to identify research challenges and suggest future opportunities. Method: We conduct a systematic literature review of CITO generation approaches, including the problems investigated, the solutions proposed, the techniques applied, the evaluation indicators used, and the datasets covered.Results: Based on research techniques and evaluation indicators, we classified and analyzed 30 papers published between 2011 and 2022. Our analysis reveals that more (47%) of the studies on the CITO generation problem still prefer to use search-based techniques, and the vast majority (90%) of the studies choose to use the stubbing complexity as the indicator to evaluate the stubbing cost of generating CITOs. We have extracted five challenges that the CITO generation problem is facing, corresponding to which we have given suggestions for future research.Conclusion: In this paper, we have outlined the research status of CITO generation approaches, summarized the challenges, and proposed corresponding opportunities for future study. We expect this paper to better help software testing workers understand the CITO generation problem and improve efficiency in practical work.
C1 [Ding, Yanru; Zhang, Yanmei; Yuan, Guan; Jiang, Shujuan] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
   [Ding, Yanru; Zhang, Yanmei; Yuan, Guan; Jiang, Shujuan] China Univ Min & Technol, Mine Digitalizat Engn Res Ctr, Minist Educ, Xuzhou 221116, Jiangsu, Peoples R China.
   [Dai, Wei] China Univ Min & Technol, Artificial Intelligence Res Inst, Xuzhou 221116, Jiangsu, Peoples R China.
C3 China University of Mining & Technology; China University of Mining &
   Technology; China University of Mining & Technology
RP Zhang, YM; Yuan, G; Jiang, SJ (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
EM yrding@cumt.edu.cn; ymzhang@cumt.edu.cn; yuanguan@cumt.edu.cn;
   shjjiang@cumt.edu.cn; weidai@cumt.edu.cn
RI liu, jianyang/JXL-6273-2024; li, jiaxin/JNT-5073-2023; Wang,
   Yibin/KEZ-9645-2024; Dai, Wei/E-3352-2013; Zhu, Li/JTT-9093-2023; li,
   yansong/JXL-5023-2024; Yuan, Yu/KBQ-0606-2024
FU Fundamental Research Funds for the Central Universities [2019XKQYMS84]
FX Acknowledgments This work is partly supported by the Fundamental
   Research Funds for the Central Universities under grant No.
   2019XKQYMS84.
CR Abdurazik A, 2009, COMPUT J, V52, P557, DOI 10.1093/comjnl/bxm054
   Borner L, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P80, DOI 10.1109/VALID.2009.30
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC., 2002, P 14 INT C SOFTW ENG, P43, DOI DOI 10.1145/568760.568769
   Burke EK, 2013, J OPER RES SOC, V64, P1695, DOI 10.1057/jors.2013.71
   CHAN WK, 2002, ICIS, P696
   Clarke PJ, 2012, SOFTW TEST VERIF REL, V22, P147, DOI [10.1002/stvr.429, 10.1002/stvr.434]
   Cui YF, 2017, ENERGY, V125, P681, DOI 10.1016/j.energy.2017.02.174
   Czibula G, 2018, APPL SOFT COMPUT, V65, P517, DOI 10.1016/j.asoc.2018.01.042
   Czibula IG, 2018, COMM COM INF SC, V868, P163, DOI 10.1007/978-3-319-93641-3_8
   Elmohamed S, 2005, REPOSITORY SOFTWARE
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   Assunçao WKG, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P31, DOI 10.1109/SBES.2013.5
   Assunçao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Assunçao WKG, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1867
   Guizzo G., 2021, J SOFTW ENG RES DEV, V9, DOI [10.5753/jserd.2021.816, DOI 10.5753/JSERD.2021.816]
   Guizzo G, 2020, NAT COMPUT, V19, P481, DOI 10.1007/s11047-018-9677-y
   Guizzo G, 2017, LECT NOTES COMPUT SC, V10452, P168, DOI 10.1007/978-3-319-66299-2_15
   Guizzo G, 2016, PROCEEDINGS OF 2016 5TH BRAZILIAN CONFERENCE ON INTELLIGENT SYSTEMS (BRACIS 2016), P157, DOI [10.1109/BRACIS.2016.28, 10.1109/BRACIS.2016.038]
   Guizzo G, 2015, 2015 BRAZILIAN CONFERENCE ON INTELLIGENT SYSTEMS (BRACIS 2015), P1, DOI 10.1109/BRACIS.2015.11
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Guizzo G, 2017, APPL SOFT COMPUT, V56, P331, DOI 10.1016/j.asoc.2017.03.012
   Hansen M. P., 1994, EVALUATING QUALITY A
   Hashim NL, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P11
   Hui Li, 2018, 2018 14th International Conference on Natural Computation, Fuzzy Systems and Knowledge Discovery (ICNC-FSKD), P1127, DOI 10.1109/FSKD.2018.8687115
   Huo X, 2021, IEEE T SOFTWARE ENG, V47, P1368, DOI 10.1109/TSE.2019.2920771
   Huo X, 2019, NEUROCOMPUTING, V363, P339, DOI 10.1016/j.neucom.2019.05.100
   Ishibuchi H, 2014, 2014 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN MULTI-CRITERIA DECISION-MAKING (MCDM), P170, DOI 10.1109/MCDM.2014.7007204
   Jiang SJ, 2021, IEEE T SOFTWARE ENG, V47, P1350, DOI 10.1109/TSE.2019.2921965
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   Kung D, 1995, P INT COMP SOFTW APP, P239, DOI 10.1109/CMPSAC.1995.524786
   Labiche Y., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P136, DOI 10.1109/ICSE.2000.870405
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   Liu H, 2014, 2014 ASIA-PACIFIC SERVICES COMPUTING CONFERENCE (APSCC), P35, DOI 10.1109/APSCC.2014.39
   Lv XW, 2018, IET SOFTW, V12, P306, DOI 10.1049/iet-sen.2017.0260
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Meng FY, 2022, FRONT INFORM TECH EL, V23, P692, DOI 10.1631/FITEE.2100466
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Meyer P, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525915500046
   Nebro AJ, 2008, IEEE T EVOLUT COMPUT, V12, P439, DOI 10.1109/TEVC.2007.913109
   Peng Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1240, DOI 10.1145/3368089.3417063
   Pradhan D, 2021, IEEE T SOFTWARE ENG, V47, P86, DOI 10.1109/TSE.2018.2882176
   Radiukynienè I, 2008, LECT NOTES ENG COMP, P1155
   RANA R., 2014, P 10 INT C PREDICTIV, P22, DOI [DOI 10.1145/2639490.2639507, 10.1145/2639490, DOI 10.1145/2639490]
   Rana R, 2016, J SYST SOFTWARE, V117, P229, DOI 10.1016/j.jss.2016.02.015
   Ravber M, 2018, LECT NOTES COMPUT SC, V10835, P234, DOI 10.1007/978-3-319-91641-5_20
   Sharma Chayanika, 2013, International Journal of Soft Computing and Software Engineering, V3, P1, DOI 10.7321/jscse.v3.n12.1
   Singh S.K., 2012, SOFTWARE TESTING, P19
   Sora I, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.106176
   Steindl M., 2012, Proceedings of the 2012 10th Workshop on Intelligent Solutions in Embedded Systems (WISES 2012), P63
   Tahvili S, 2016, ADV INTELL SYST, V448, P745, DOI 10.1007/978-3-319-32467-8_65
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Veldhuizen D., 1999, P 1999 ACM S APPL CO, P351, DOI DOI 10.1145/298151.298382
   Vergilio Silvia Regina, 2012, International Journal on Software Tools for Technology Transfer, V14, P461, DOI 10.1007/s10009-012-0226-1
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Wang Y, 2018, IEEE T CIRCUITS-II, V65, P1059, DOI 10.1109/TCSII.2017.2775442
   Wang Z., 2011, SEKE, P254
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yen GG, 2014, IEEE T EVOLUT COMPUT, V18, P131, DOI 10.1109/TEVC.2013.2240687
   Zeleny M., 1973, Multiple criteria decision making
   Zhang M, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106507
   Zhang M, 2019, P INT COMP SOFTW APP, P47, DOI 10.1109/COMPSAC.2019.00016
   Zhang M, 2017, J SYST SOFTWARE, V133, P54, DOI 10.1016/j.jss.2017.08.026
   Zhang YM, 2022, INT J SOFTW ENG KNOW, V32, P871, DOI 10.1142/S0218194022500309
   Zhang YM, 2019, SOFT COMPUT, V23, P4239, DOI 10.1007/s00500-018-3077-1
   [张艳梅 Zhang Yanmei], 2018, [计算机学报, Chinese Journal of Computers], V41, P670
   Zhang YM, 2015, SOFTWARE PRACT EXPER, V45, P657, DOI 10.1002/spe.2260
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 76
TC 0
Z9 0
U1 4
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107133
DI 10.1016/j.infsof.2022.107133
EA DEC 2022
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7W8FX
UT WOS:000913744300001
DA 2024-07-18
ER

PT J
AU Tulili, TR
   Capiluppi, A
   Rastogi, A
AF Tulili, Tien Rahayu
   Capiluppi, Andrea
   Rastogi, Ayushi
TI Burnout in software engineering: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Burnout; Software engineering; Systematic mapping study
ID WORK EXHAUSTION; JOB BURNOUT; EMOTION; STRESS; DEPERSONALIZATION;
   PROFESSIONALS; DIMENSIONS; SENTIMENT; IMPACT; BREAKS
AB Context: Burnout is a work-related syndrome that, similar to many occupations, influences most software developers. For decades, studies in software engineering(SE) have explored the causes of burnout and its consequences among IT professionals. Objective: This paper is a systematic mapping study (SMS) of the studies on burnout in SE, exploring its causes and consequences, and how it is studied (e.g., choice of data). Method: We conducted a systematic mapping study and identified 92 relevant research articles dating as early as the early 1990s, focusing on various aspects and approaches to detect burnout in software developers and IT professionals. Results: Our study shows that early research on burnout was primarily qualitative, which has steadily moved to more quantitative, data-driven in the last decade. The emergence of machine learning (ML) approaches to detect burnout in developers has become a de-facto standard. Conclusion: Our study summarises what we now know about burnout, how software artifacts indicate burnout, and how machine learning can help its early detection. As a comprehensive analysis of past and present research works in the field, we believe this paper can help future research and practice focus on the grand challenges ahead and offer necessary tools.
C1 [Tulili, Tien Rahayu; Capiluppi, Andrea; Rastogi, Ayushi] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
C3 University of Groningen
RP Tulili, TR (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
EM t.r.tulili@rug.nl; a.capiluppi@rug.nl; a.rastogi@rug.nl
RI Capiluppi, Andrea/AGO-2961-2022; Tulili, Tien Rahayu/ABD-0694-2022
OI Capiluppi, Andrea/0000-0001-9469-6050; Tulili, Tien
   Rahayu/0000-0002-1890-7407
FU Indonesia Endowment Fund for Educa-tion (LPDP) , Ministry of Finance of
   Republic of Indonesia;  [S-2566/LPDP.4/2021]
FX Acknowledgements Tien Rahayu Tulili gratefully acknowledges scholarship
   funding for this research from the Indonesia Endowment Fund for
   Educa-tion (LPDP) , Ministry of Finance of Republic of Indonesia, Ref.
   Number S-2566/LPDP.4/2021.
CR Adriaenssens J, 2015, INT J NURS STUD, V52, P649, DOI 10.1016/j.ijnurstu.2014.11.004
   Agyapong B, 2022, INT J ENV RES PUB HE, V19, DOI 10.3390/ijerph191710706
   Al-Ghunaim TA., 2021, AM J SURG
   Ali J, 2021, STUDY UNDERSTAND IM
   [Anonymous], 2016, INT C AG SOFTW DEV C
   Atouba YC, 2020, TOTAL QUAL MANAG BUS, V31, P814, DOI 10.1080/14783363.2018.1447367
   Bao LF, 2022, SCI CHINA INFORM SCI, V65, DOI 10.1007/s11432-020-3278-4
   Blaising Allie, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3432925
   BRADLEY MM, 1994, J BEHAV THER EXP PSY, V25, P49, DOI 10.1016/0005-7916(94)90063-9
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Burri SD, 2022, PHYSIOTHERAPY, V116, P9, DOI 10.1016/j.physio.2022.01.005
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Cao L, 2017, AMCIS 2017 PROCEEDINGS
   Chen M, 2015, INT CONF AFFECT, P63, DOI 10.1109/ACII.2015.7344552
   Chen ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3424308
   Chen ZP, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P841, DOI 10.1145/3338906.3338977
   Cheriyan J, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P254, DOI 10.1145/3463274.3463805
   CHERNISS C, 1992, J ORGAN BEHAV, V13, P1, DOI 10.1002/job.4030130102
   Cohen S, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1669, DOI 10.1145/3468264.3473492
   la Fuente EI, 2015, INT J CLIN HLTH PSYC, V15, P130, DOI 10.1016/j.ijchp.2015.01.001
   DeChant Paul F, 2019, Mayo Clin Proc Innov Qual Outcomes, V3, P384, DOI 10.1016/j.mayocpiqo.2019.07.006
   Demerouti E, 2008, Handbook of Stress and Burnout in Health Care, V65, P78
   Destefanis G, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.73
   Dovleac Raluca, 2021, Trends and Applications in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 1365), P522, DOI 10.1007/978-3-030-72657-7_50
   Dwinijanti L., 2020, JEMA J Ilm Bid Akunt Dan Manaj, V17, P67, DOI [DOI 10.31106/JEMA.V17I1.4951, 10.1016/j.jpsychires.2016.09.004, DOI 10.1016/J.JPSYCHIRES.2016.09.004]
   El Asri I, 2019, INFORM SOFTWARE TECH, V114, P37, DOI 10.1016/j.infsof.2019.06.005
   Felbo B, 2017, Arxiv, DOI arXiv:1708.00524
   Ferreira Isabella, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3479497
   Ford D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P115, DOI 10.1109/CHASE.2015.19
   FREUDENBERGER HJ, 1974, J SOC ISSUES, V30, P159, DOI 10.1111/j.1540-4560.1974.tb00706.x
   FROST WAK, 1967, J ROY STAT SOC D-STA, V17, P215
   Fucci G, 2021, IEEE WORK CONF MIN S, P403, DOI 10.1109/MSR52588.2021.00052
   FUJIGAKI Y, 1994, IND HEALTH, V32, P231, DOI 10.2486/indhealth.32.231
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   Gallivan M. J., 2004, Data Base for Advances in Information Systems, V35, P28, DOI 10.1145/1017114.1017119
   Garcia D, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P410, DOI 10.1109/CGC.2013.71
   Girardi D, 2022, IEEE T SOFTWARE ENG, V48, P3326, DOI 10.1109/TSE.2021.3087906
   Girardi D, 2020, PROC INT CONF SOFTW, P666, DOI 10.1145/3377811.3380374
   Girardi D, 2017, INT CONF AFFECT, P125, DOI 10.1109/ACII.2017.8273589
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2015, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.18
   Graziotin D, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P42, DOI 10.1109/SEmotion.2017.5
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman Emitza., 2013, Software Visualization (VISSOFT), 2013 First IEEE Working Conference on, P1, DOI 10.1109/vissoft.2013.6650529
   Han K, 2014, INTERSPEECH, P223
   Hannay JoE., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, p15:1, DOI [DOI 10.1145/1852786.1852806, 10.1145/1852786.1852806]
   Haug S, 2022, STUD HEALTH TECHNOL, V292, P43, DOI 10.3233/SHTI220318
   Hollet-Haudebert S, 2011, J PERS SELL SALES M, V31, P411, DOI 10.2753/PSS0885-3134310404
   Horby P, 2021, NEW ENGL J MED, V384, P693, DOI [10.1056/NEJMoa2021436, 10.1056/NEJMoa2022926]
   Hsieh AT, 2004, INT J HUM RESOUR MAN, V15, P1108, DOI 10.1080/09585190410001677331
   Iacovides A, 2003, J AFFECT DISORDERS, V75, P209, DOI 10.1016/S0165-0327(02)00101-5
   Islam MR, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1786, DOI 10.1145/3297280.3297455
   Islam MR, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1536, DOI 10.1145/3167132.3167296
   Karuna C, 2022, BRIT J GEN PRACT, V72, pE316, DOI 10.3399/BJGP.2021.0441
   Kaur Harmanpreet, 2022, CHI '22: CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3491102.3517453
   Khan IA, 2011, COGN TECHNOL WORK, V13, P245, DOI 10.1007/s10111-010-0164-1
   Kim Y, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P5104, DOI 10.1109/ICASSP.2018.8462011
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V3, P1
   Klunder Jil, 2020, Human-Centered Software Engineering. 8th IFIP WG 13.2 International Working Conference, HCSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12481), P133, DOI 10.1007/978-3-030-64266-2_8
   Koopman P., 2010, WESE 10, DOI [10.1145/1930277.1930282, DOI 10.1145/1930277.1930282]
   Kristensen TS, 2005, WORK STRESS, V19, P192, DOI 10.1080/02678370500297720
   Kuutila M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09977-1
   Kuutila M, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239245
   Li CX, 2013, PSYCHOL SPORT EXERC, V14, P692, DOI 10.1016/j.psychsport.2013.04.009
   Li Mu, 2009, Annu Int Conf IEEE Eng Med Biol Soc, V2009, P1323, DOI 10.1109/IEMBS.2009.5334139
   Lin B., 2022, ACM T SOFTW ENG METH, V31, P1
   Lingard H, 2005, CONSTR MANAG ECON, V23, P733, DOI 10.1080/01446190500040836
   Mahapatra M, 2018, SIGMIS-CPR'18: PROCEEDINGS OF THE 2018 ACM SIGMIS CONFERENCE ON COMPUTERS AND PEOPLE RESEARCH, P70, DOI 10.1145/3209626.3209711
   Mansoor U, 2021, BURNOUT SOFTWARE DE
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Mäntylä MV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P83, DOI 10.1145/2568225.2568245
   Martín-Martín A, 2018, J INFORMETR, V12, P1160, DOI 10.1016/j.joi.2018.09.002
   Maslach C, 2001, ANNU REV PSYCHOL, V52, P397, DOI 10.1146/annurev.psych.52.1.397
   Maslach C., 2006, Stress and Quality of Working Life: Current Perspectives in Occupational Health, V37, P42, DOI DOI 10.1002/WPS.20311
   Maslach C., 1997, MASLACH BURNOUT INVE
   Massoni T, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P85, DOI 10.1109/CHASE.2019.00028
   McCarty WP, 2019, POLICE Q, V22, P278, DOI 10.1177/1098611119828038
   Melamed S., 2006, INT J STRESS MANAGE, V13, P176, DOI [DOI 10.1037/1072-5245.13.2.176, 10.1037/1072-5245.13.2.176]
   Mellblom E, 2019, Arxiv, DOI arXiv:1906.09463
   Metallinou A, 2008, IEEE INT SYM MULTIM, P250, DOI 10.1109/ISM.2008.40
   Micallef M., 2019, SEKE, DOI DOI 10.18293/SEKE2019-095
   Mijakoski D, 2022, INT J ENV RES PUB HE, V19, DOI 10.3390/ijerph19095776
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Moldon L, 2021, PROC INT CONF SOFTW, P549, DOI 10.1109/ICSE43902.2021.00058
   Moore J. E., 1998, Proceedings of the 1998 ACM SIGCPR Conference, P264, DOI 10.1145/279179.279219
   Moore JE, 2000, MIS QUART, V24, P141, DOI 10.2307/3250982
   Moro JD, 2022, J EVID-BASED DENT PR, V22, DOI 10.1016/j.jebdp.2022.101724
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Murgia A, 2018, EMPIR SOFTW ENG, V23, P521, DOI 10.1007/s10664-017-9526-0
   Murugappan M, 2013, 2013 IEEE 9TH INTERNATIONAL COLLOQUIUM ON SIGNAL PROCESSING AND ITS APPLICATIONS (CSPA), P289, DOI 10.1109/CSPA.2013.6530058
   Nogueira PA, 2013, 2013 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON INTELLIGENT AGENT TECHNOLOGY (IAT 2013), P253, DOI 10.1109/WI-IAT.2013.117
   Obaidi M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P80, DOI 10.1145/3463274.3463328
   Ostberg JP, 2020, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.286
   Ostrovsky A, 2012, ERGONOMICS, V55, P854, DOI 10.1080/00140139.2012.681808
   Penzenstadler Birgit, 2020, ICT4S2020: Proceedings of the 7th International Conference on ICT for Sustainability, P139, DOI 10.1145/3401335.3401684
   Petersen K., 2008, 12 INT C EVALUATION, DOI [10.14236/ewic/EASE2008.8, DOI 10.14236/EWIC/EASE2008.8]
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Qiu HLS, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2022), P41, DOI [10.1109/ICSE-SEIS55304.2022.9793879, 10.1145/3510458.3513019]
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Raman N, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P57, DOI 10.1145/3377816.3381732
   Reinke K, 2014, COMPUT HUM BEHAV, V36, P502, DOI 10.1016/j.chb.2014.03.075
   Rietze S, 2022, INT J ENV RES PUB HE, V19, DOI 10.3390/ijerph19031258
   Russo D, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P364, DOI 10.1109/ICSE-SEIP52600.2021.00048
   Rutner P, 2011, DATA BASE ADV INF SY, V42, P102, DOI 10.1145/1952712.1952718
   Rutner PS, 2008, MIS QUART, V32, P635
   Salmela-Aro K, 2011, INT ARCH OCC ENV HEA, V84, P635, DOI 10.1007/s00420-010-0594-3
   Sambasivan N., 2021, P CHI C HUM FACT COM, DOI [10.1145, 10.1145/3411764.3445518]
   Sánchez-Gordón M, 2019, INFORM SOFTWARE TECH, V115, P23, DOI 10.1016/j.infsof.2019.08.002
   Sarisik M., 2019, Journal of Global Business Insights, V4, P106, DOI [https://doi.org/10.5038/2640-6489.4.2.1066, DOI 10.5038/2640-6489.4.2.1066, 10.5038/2640-6489.4.2.1066]
   Sarker F, 2019, PROC INT CONF SOFTW, P936, DOI 10.1109/ICSE.2019.00099
   Sarker J, 2020, ASIA PAC SOFWR ENG, P218, DOI 10.1109/APSEC51365.2020.00030
   Schoepke J., 2004, P HUMAN FACTORS ERGO, V48, P1576, DOI [10.1177/154193120404801404, DOI 10.1177/154193120404801404]
   Senapathi M., 2018, ser. EASE'18, P57
   Shepherd CD, 2010, J RES MARK ENTREP, V12, P71, DOI 10.1108/14715201011060894
   Shih SP, 2013, INFORM MANAGE-AMSTER, V50, P582, DOI 10.1016/j.im.2013.08.003
   Shropshire J., 2012, International Journal of Information and Communication Technology Research, V2, P6
   Shropshire J., 2012, INT J INF COMMUN TEC, V2, P16
   Singh P., 2012, Psychol Stud, V58, P20, DOI [10.1007/s12646-012-0171-9, DOI 10.1007/S12646-012-0171-9]
   Sinha V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P520, DOI [10.1109/MSR.2016.069, 10.1145/2901739.2903501]
   Sirazitdinov I., 2020, 2020 INT C NONLINEAR, P1, DOI DOI 10.1109/NIR50484.2020.9290239
   Smite D, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111509
   Smite D, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111197
   Soelton M., 2020, Advances in Economics, Business and Management Research, V120, P185, DOI [10.2991/aebmr.k.200205.034, DOI 10.2991/AEBMR.K.200205.034]
   Sokal L.J., 2020, International Journal of Contemporary Education, V3, P67, DOI DOI 10.11114/IJCE.V3I2.4931
   SONNENTAG S, 1994, J OCCUP ORGAN PSYCH, V67, P327, DOI 10.1111/j.2044-8325.1994.tb00571.x
   Sundaramurthy SC, 2017, IEEE INTERNET COMPUT, V21, P40, DOI 10.1109/MIC.2017.52
   Tawsif K., 2022, EMERG SCI J, V6, P1167
   Taylor WC, 2005, AM J PREV MED, V29, P461, DOI 10.1016/j.amepre.2005.08.040
   Taylor WC, 2013, HEALTH EDUC RES, V28, P414, DOI 10.1093/her/cyt001
   Tokdemir G, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111286
   Tourani P., 2014, CASCON, P34
   Uddin G, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10156-z
   Upchurch L, 2001, IEEE SOFTWARE, V18, P84, DOI 10.1109/MS.2001.936222
   van Oorschot KE, 2018, PROJ MANAG J, V49, P78, DOI 10.1177/8756972818802714
   Wang Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P230, DOI 10.1109/ASE.2019.00031
   Westphal A, 2022, FRONT PSYCHOL, V13, DOI 10.3389/fpsyg.2022.920326
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   World Health Organisation, 2019, BURN OUT OCCUPATION
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
   Yordanova Zornitsa, 2021, Information Technology and Systems. ICITS 2021. Advances in Intelligent Systems and Computing (AISC 1330), P108, DOI 10.1007/978-3-030-68285-9_11
   Zakaria Camellia, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3449145
   Zapf D, 2001, PSYCHOL HEALTH, V16, P527, DOI 10.1080/08870440108405525
NR 145
TC 3
Z9 3
U1 4
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107116
DI 10.1016/j.infsof.2022.107116
EA DEC 2022
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Buis, EEG
   Ashby, SSR
   Kouwenberg, KKPA
AF Buis, Elaine E. G.
   Ashby, Simone S. R.
   Kouwenberg, Kristel K. P. A.
TI Increasing the UX maturity level of clients: A study of best practices
   in an agile environment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Client-UX relationship; Case study; UX maturity; Agile UX; UX
   practitioners; UX strategy; Best practices
ID EXPERIENCE DESIGN; PRINCIPLES; SOFTWARE; WORK
AB Context: While multiple studies have attempted to define and measure User Experience (UX) Maturity - i.e., how familiar organizations are with UX concepts or strategies- more practice-based insight is needed to examine how UX practitioners maneuver in their relationships with low UX Maturity organizations and help these clients become more 'UX Mature'.Objective: This study evaluates how UX practitioners work with low UX Maturity clients, what obstacles they face, and how they cope with these obstacles. From these insights, a set of best practices are identified for UX prac-titioners who work with low UX Maturity clients and wish to increase their clients' UX maturity in an agile environment.Method: These best practices were collected in the form of case studies, involving a total of 20 case studies based on interviews with 22 UX practitioners. The case studies reflect on past projects that were conducted for clients with a low UX Maturity level. Data was obtained through semi-structured interviews and analyzed using a grounded theory approach combined with elements of a thematic analysis. Results: The results help to identify frequently experienced obstacles in working with low UX Maturity organi-zations, as well as six best practices for increasing the UX Maturity of these clients.Conclusions: The study results demonstrate that UX practitioners indeed fulfill a significant role in overcoming organizational UX boundaries. A Low UX Maturity Best Practice model was developed, which summarizes how UX practitioners can optimize their impact in working with low UX Maturity clients, while simultaneously contributing to a more user-centered focus on the part of their clients.
C1 [Buis, Elaine E. G.; Ashby, Simone S. R.; Kouwenberg, Kristel K. P. A.] Tilburg Univ, Tilburg Ctr Cognit & Commun, Warandelaan 2, NL-5037 AB Tilburg, Netherlands.
C3 Tilburg University
RP Buis, EEG (corresponding author), Tilburg Univ, Tilburg Ctr Cognit & Commun, Warandelaan 2, NL-5037 AB Tilburg, Netherlands.
EM elainebuis@gmail.com
OI Ashby, Simone/0000-0003-1050-5013
CR Almeida F, 2017, INT J INF TECHNOL WE, V12, P49, DOI 10.4018/IJITWE.2017040103
   Alves R, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P93, DOI 10.1145/2639189.2641208
   [Anonymous], 2009, CHI 09 EXTENDED ABST
   [Anonymous], 2013, Lean UX: Applying Lean Principles to Improve User Experience
   Blindheim J, 2016, PROC INT DESIGN CONF, P1845
   Bruun A, 2018, NORDICHI'18: PROCEEDINGS OF THE 10TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION, P352, DOI 10.1145/3240167.3240213
   Chapman L, 2014, LECT NOTES COMPUT SC, V8520, P12, DOI 10.1007/978-3-319-07638-6_2
   de Meerendre V.K., 2019, INT C HUMAN COMPUTER, P263
   Dunne D, 2018, J ORGAN DES, V7, DOI 10.1186/s41469-018-0040-7
   Ede Meghan, 2016, P 2016 CHI C HUM FAC, P840
   Erdo F., 2019, 10 IEEE INT C COGNIT, P211
   Ferreira J, 2011, SOFTWARE PRACT EXPER, V41, P963, DOI 10.1002/spe.1012
   Fraser J, 2015, PROCEDIA MANUF, V3, P626, DOI 10.1016/j.promfg.2015.07.285
   Gray CM, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3285, DOI 10.1145/2702123.2702579
   Gualtieri M., 2009, DESIGN COMPELLING US, P1
   Hassenzahl M., 2000, Synth. Lectures Hum.-Centered Inform., V3, P1, DOI [https://doi.org/10.2200/S00261ED1V01Y201003HCI008, DOI 10.2200/S00261-D1V01Y201003HCI008, DOI 10.2200/S00261ED1V01Y201003HCI008, 10.2200/S00261ED1V01Y201003HCI008]
   Hokkanen L, 2015, LECT NOTES BUS INF P, V212, P81, DOI 10.1007/978-3-319-18612-2_7
   Isomursu Minna, 2012, Proceedings of the 2012 Agile Conference, P1, DOI 10.1109/Agile.2012.10
   JAIN P, 2019, INT C HUMAN COMPUTER, P72
   Kashfi P, 2019, J SYST SOFTWARE, V154, P37, DOI 10.1016/j.jss.2019.03.066
   Keijzer-Broers WJW, 2016, LECT NOTES COMPUT SC, V9661, P68, DOI 10.1007/978-3-319-39294-3_5
   Krueger AE, 2020, MULTIMODAL TECHNOLOG, V4, DOI 10.3390/mti4030043
   Kuusinen K., 2012, Proceedings of the 7th Nordic Conference on Human-Computer Interaction: Making Sense Through Design (NordiCHI'12), P139, DOI DOI 10.1145/2399016.2399037
   Lachner F, 2016, PROCEEDINGS OF THE NORDICHI '16: THE 9TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION - GAME CHANGING DESIGN, DOI 10.1145/2971485.2971501
   Law ELC, 2014, INT J HUM-COMPUT ST, V72, P526, DOI 10.1016/j.ijhcs.2013.09.006
   Liikkanen LA, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P1095, DOI 10.1145/2639189.2670285
   Lin KY, 2016, COMPUT IND ENG, V99, P487, DOI 10.1016/j.cie.2016.05.023
   MacDonald CM, 2019, PROCEEDINGS OF THE 2019 ACM DESIGNING INTERACTIVE SYSTEMS CONFERENCE (DIS 2019), P187, DOI 10.1145/3.322276.3322346
   MacDonald CM, 2017, J LIBR ADM, V57, P194, DOI 10.1080/01930826.2016.1232942
   Meyer C. B., 2001, Field Methods, V13, P329, DOI [DOI 10.1177/1525822X0101300402, 10.1177/1525822X0101300402]
   Nielsen J, 2006, CORPORATE USABILITY
   Nudelman G., 2018, Interactions, V25, P80, DOI [DOI 10.1145/3236683, 10.1145/3236683]
   Ovad T, 2015, 2015 AGILE CONFERENCE, P40, DOI 10.1109/Agile.2015.13
   Rauth I., 2014, DESIGN MANAGEMENT J, V9, P47, DOI DOI 10.1111/DMJ.12015
   Rohn Janice Anne, 2007, INTERACTIONS, V14, P25, DOI DOI 10.1145/1242421.1242440
   Rukonic L., 2019, LNCS, V11586, P346, DOI [10.1007/978-3-030-23535-226, DOI 10.1007/978-3-030-23535-226]
   Satterfield Debra, 2017, Design, User Experience and Usability: Theory, Methodology and Management. 6th International Conference, DUXU 2017, held as part of HCI International 2017. Proceedings: LNCS 10288, P186, DOI 10.1007/978-3-319-58634-2_15
   Sauro J., 2017, P 2017 CHI C HUM FAC, P1084, DOI [10.1145/3027063.3053350, DOI 10.1145/3027063.3053350]
   Stone Maria., 2016, P 2016 CHI C EXTENDE, P823, DOI DOI 10.1145/2851581.2851592
   Strauss A., 1990, Basic qualitative research, DOI DOI 10.4135/9781412957397.N342
   Sy D, 2007, J USABILITY STUD, V2, P112
   Vissak T, 2010, QUAL REP, V15, P370
   Westby C., 2003, ASHA LEADER, DOI [DOI 10.1044/LEADER.FTR3.08082003.4, 10.1044/leader.FTR3.08082003.4]
   Winter J, 2014, J SYST SOFTWARE, V88, P54, DOI 10.1016/j.jss.2013.09.019
   Xu W, 2020, INT J QUAL METH, V19, DOI 10.1177/1609406920918810
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 46
TC 4
Z9 4
U1 7
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107086
DI 10.1016/j.infsof.2022.107086
EA OCT 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6D6JH
UT WOS:000882793900005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Imran, MM
   Damevski, K
AF Imran, Mia Mohammad
   Damevski, Kostadin
TI Using clarification questions to improve software developers' Web search
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering-related search; Clarification questions; Query
   refinement
ID QUERIES
AB Context: Recent research indicates that Web queries written by software developers are not very successful in retrieving relevant results, performing measurably worse compared to general purpose Web queries. Most approaches up to this point have addressed this problem with software engineering-specific automated query reformulation techniques, which work without developer involvement but are limited by the content of the original query. In other words, these techniques automatically improve the existing query but cannot contribute new, previously unmentioned, concepts.
   Objective: In this paper, we propose a technique to guide software developers in manually improving their own Web search queries. We examine a conversational approach that follows unsuccessful queries with a clarification question aimed at eliciting additional query terms, thus providing to the developer a clear dimension along which the query could be improved.
   Methods: We describe a set of clarification questions derived from a corpus of software developer queries and a neural approach to recommending them for a newly issued query.
   Results: Our evaluation indicates that the recommendation technique is accurate, predicting a valid clarification question 80% of the time and outperforms simple baselines, as well as, state-of-the-art Learning To Rank (LTR) baselines.
   Conclusion: As shown in the experimental results, the described approach is capable at recommending appropriate clarification questions to software developers and considered useful by a sample of developers ranging from novices to experienced professionals.
C1 [Imran, Mia Mohammad; Damevski, Kostadin] Virginia Commonwealth Univ, Comp Sci, Richmond, VA 23284 USA.
C3 Virginia Commonwealth University
RP Imran, MM (corresponding author), Virginia Commonwealth Univ, Comp Sci, Richmond, VA 23284 USA.
EM imranm3@vcu.edu; kdamevski@vcu.edu
RI ; Damevski, Kostadin/F-4476-2014
OI Imran, Mia Mohammad/0000-0003-2477-9971; Damevski,
   Kostadin/0000-0001-7799-2026
CR Aliannejadi M, 2019, PROCEEDINGS OF THE 42ND INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '19), P475, DOI 10.1145/3331184.3331265
   Anantha R, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P520
   [Anonymous], 2011, P 20 ACM INT C INF K
   [Anonymous], 2010, P 19 INT C WORLD WID
   [Anonymous], 2007, Procseedings of the Human Language Technology Conference
   [Anonymous], 2006, P ADV NEUR INF PROC
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bhatia S., 2011, Proceeding of the 3rd international workshop on Search-driven development: users, infrastructure, tools, and evaluation, P13
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Braslavski P, 2017, CHIIR'17: PROCEEDINGS OF THE 2017 CONFERENCE HUMAN INFORMATION INTERACTION AND RETRIEVAL, P345, DOI 10.1145/3020165.3022149
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   Chatterjee P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P382, DOI 10.1109/SANER.2017.7884638
   Chen J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P1241
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   De Boni M., 2005, Natural Language Engineering, V11, P343, DOI 10.1017/S1351324905003682
   De Boni M, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P48
   Dou ZC, 2016, IEEE T KNOWL DATA EN, V28, P385, DOI 10.1109/TKDE.2015.2475735
   Elgohary Ahmed, 2019, CAN YOU UNPACK THAT
   Friedrich J, 2015, INT WORKSHOP DATABAS, P271, DOI 10.1109/DEXA.2015.66
   Gao ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412845
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hancock B, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P3667
   Holmes R, 2009, 2009 ICSE WORKSHOP ON SEARCH-DRIVEN DEVELOPMENT-USERS, INFRASTRUCTURE, TOOLS AND EVALUATION, P13, DOI 10.1109/SUITE.2009.5070013
   Hora A, 2021, IEEE WORK CONF MIN S, P317, DOI 10.1109/MSR52588.2021.00044
   Hucka M, 2018, J SYST SOFTWARE, V141, P171, DOI 10.1016/j.jss.2018.03.047
   Jiang ZB, 2017, IEEE T KNOWL DATA EN, V29, P315, DOI 10.1109/TKDE.2016.2623782
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Kingma D. P., 2014, arXiv
   Kong WZ, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1433, DOI 10.1145/2983323.2983824
   Kong WZ, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P93
   Kong Weize, 2014, P 23 ACM INT C C INF, P839
   Liu Yinhan, 2019, ARXIV190711692
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Hien LT, 2020, IEEE RIVF INT CONF, P370, DOI 10.1109/rivf48685.2020.9140742
   Marchionini G, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1121949.1121979
   Martie L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P774, DOI 10.1145/3106237.3106293
   Mostafazadeh N, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1802
   Radlinski F, 2017, CHIIR'17: PROCEEDINGS OF THE 2017 CONFERENCE HUMAN INFORMATION INTERACTION AND RETRIEVAL, P117, DOI 10.1145/3020165.3020183
   Rahman MM, 2018, IEEE WORK CONF MIN S, P465, DOI 10.1145/3196398.3196425
   Rahman MM, 2019, EMPIR SOFTW ENG, V24, P1869, DOI 10.1007/s10664-018-9671-0
   Rahman MM, 2018, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2018.00057
   Rao N, 2021, IEEE WORK CONF MIN S, P575, DOI 10.1109/MSR52588.2021.00077
   Rao N, 2020, IEEE INT CONF BIG DA, P768, DOI 10.1109/BigData50022.2020.9378083
   Ren PJ, 2021, ACM T INFORM SYST, V39, DOI 10.1145/3432726
   Rosset C, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1160, DOI 10.1145/3366423.3380193
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Sekulic Ivan, 2021, Advances in Information Retrieval. 43rd European Conference on IR Research, ECIR 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12656), P619, DOI 10.1007/978-3-030-72113-8_41
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Soliman M, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P162, DOI 10.1109/ICSA51549.2021.00023
   Song R., 2011, NTCIR
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Stoyanchev S., 2014, AISB S QUEST DISC DA
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Tamla P., 2019, CERC, P155
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Trienes Jan, 2019, Advances in Information Retrieval. 41st European Conference on IR Research, ECIR 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11437), P276, DOI 10.1007/978-3-030-15712-8_18
   Vakulenko Svitlana, 2021, WSDM '21: Proceedings of the 14th ACM International Conference on Web Search and Data Mining, P355, DOI 10.1145/3437963.3441748
   Wang Jian, 2021, P 30 ACM INT C INF K, P3468
   Wang XH, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P867
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xuanhui Wang, 2007, 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P87, DOI 10.1145/1277741.1277759
   Zamani H, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P1181, DOI 10.1145/3397271.3401160
   Zamani H, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P3189, DOI 10.1145/3340531.3412772
   Zamani H, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P418, DOI 10.1145/3366423.3380126
   Zhang F, 2018, IEEE T SOFTWARE ENG, V44, P1070, DOI 10.1109/TSE.2017.2750682
   Zhang N, 2022, IEEE T SOFTWARE ENG, V48, P1185, DOI 10.1109/TSE.2020.3016006
   Zhang YF, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P177, DOI 10.1145/3269206.3271776
NR 67
TC 0
Z9 1
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107021
DI 10.1016/j.infsof.2022.107021
EA AUG 2022
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hinderks, A
   Mayo, FJD
   Thomaschewski, J
   Escalona, MJ
AF Hinderks, Andreas
   Dominguez Mayo, Francisco Jose
   Thomaschewski, Joerg
   Jose Escalona, Maria
TI Approaches to manage the user experience process in Agile software
   development: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE User experience management; UX process; User experience; UX; Usability;
   HCI; Agile methods; Agile; Systematic literature review
ID USABILITY; DESIGN
AB Context: Software development companies use Agile methods to develop their products or services efficiently and in a goal-oriented way. But this alone is not enough to satisfy user demands today. It is much more important nowadays that a product or service should offer a great user experience - the user wants to have some positive user experience while interacting with the product or service.
   Objective: An essential requirement is the integration of user experience methods in Agile software development. Based on this, the development of positive user experience must be managed. We understand management in general as a combination of a goal, a strategy, and resources. When applied to UX, user experience management consists of a UX goal, a UX strategy, and UX resources.
   Method: We have conducted a systematic literature review (SLR) to analyse suitable approaches for managing user experience in the context of Agile software development.
   Results: We have identified 49 relevant studies in this regard. After analysing the studies in detail, we have identified different primary approaches that can be deemed suitable for UX management. Additionally, we have identified several UX methods that are used in combination with the primary approaches.
   Conclusions: However, we could not identify any approaches that directly address UX management. There is also no general definition or common understanding of UX management. To successfully implement UX management, it is important to know what UX management actually is and how to measure or determine successful UX management.
C1 [Hinderks, Andreas; Dominguez Mayo, Francisco Jose; Jose Escalona, Maria] Univ Seville, Seville, Spain.
   [Thomaschewski, Joerg] Univ Appl Sci Emden Leer, Emden, Germany.
C3 University of Sevilla
RP Hinderks, A (corresponding author), Univ Seville, Seville, Spain.
EM andreas.hinderks@iwt2.org; fjdominguez@us.es;
   joerg.thomaschewski@hs-emden-leer.de; mjescalona@us.es
RI Hinderks, Andreas/S-8763-2016; Thomaschewski, Jörg/D-5725-2016;
   Escalona, María José/G-3900-2010; Dominguez-Mayo, F. J./A-8121-2009
OI Hinderks, Andreas/0000-0003-3456-9273; Thomaschewski,
   Jörg/0000-0001-6364-5808; Escalona, María José/0000-0002-6435-1497;
   Dominguez-Mayo, F. J./0000-0003-3502-8858
FU Spanish Government's Ministry of Economy and Competitiveness
   [TIN2016-76956-C3-2-R]; Junta de Andalucia, Spain [US-1251532]
FX This research was partially supported by the POLOLAS project
   (TIN2016-76956-C3-2-R) of the Spanish Government's Ministry of Economy
   and Competitiveness and by the NDT4.0 project (US-1251532) of the Junta
   de Andalucia, Spain.
CR Aguilar M., 2017, ADV ERGONOMICS MODEL, V486, P75, DOI [10.1007, DOI 10.1007/978-3-319-41685-4_8]
   Anderson D.J., 2010, Kanban: successful Evolutionary Change for Your Technology Business
   Anderson R. I., 2007, CHI 07 EXTENDED ABST, P1905, DOI DOI 10.1145/1240866
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 1997, Conference on Human Factors in Computing Systems, DOI [DOI 10.1145/258549.258626, 10.1145/258549.258626]
   Beck K., 2007, XP SERIES, V6
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Brhel M, 2015, INFORM SOFTWARE TECH, V61, P163, DOI 10.1016/j.infsof.2015.01.004
   Bruun A., 2010, P 6 NORD C HUM COMP, P82, DOI DOI 10.1145/1868914.1868928
   Butt SM, 2014, 17TH IEEE INTERNATIONAL MULTI TOPIC CONFERENCE 2014, P193
   Caballero L, 2016, INT J SOFTW ENG KNOW, V26, P1175, DOI 10.1142/S0218194016500418
   Caballero L, 2014, LECT NOTES COMPUT SC, V8742, P283, DOI 10.1007/978-3-662-44811-3_20
   Choma Joelma, 2016, INT C HUM COMP INT, P131
   Curcio K, 2019, COMPUT STAND INTER, V64, P61, DOI 10.1016/j.csi.2018.12.003
   da Silva T., 2012, Journal of Software Engineering and Applications, V05, P743, DOI DOI 10.4236/JSEA.2012.510087
   Da Silva TS, 2018, INFORM SOFTWARE TECH, V102, P1, DOI 10.1016/j.infsof.2018.04.008
   da Silva TS, 2015, P ANN HICSS, P5133, DOI 10.1109/HICSS.2015.607
   da Silva TS, 2015, LECT NOTES COMPUT SC, V9159, P86, DOI 10.1007/978-3-319-21413-9_7
   Distante D, 2014, ELECTRON COMMER RES, V14, P497, DOI 10.1007/s10660-014-9149-0
   Drucker Peter., 1954, PRINCIPLES MANAGEMEN
   Duh Henry Been-Lirn, 2016, Cross-Cultural Design. 8th International Conference, CCD 2016, held as part of HCI International 2016. Proceedings: LNCS 9741, P163, DOI 10.1007/978-3-319-40093-8_17
   Ferreira Jennifer, 2012, Proceedings of the 2012 Agile Conference, P11, DOI 10.1109/Agile.2012.33
   Ferreira J, 2007, AGILE 2007, PROCEEDINGS, P50, DOI 10.1109/AGILE.2007.8
   Firmenich S, 2019, SOFTWARE QUAL J, V27, P203, DOI 10.1007/s11219-018-9413-y
   Fox D, 2008, AGILE 2008, PROCEEDINGS, P63, DOI 10.1109/Agile.2008.78
   Garcia A, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P5859
   Hassenzahl M, 2001, INT J HUM-COMPUT INT, V13, P481, DOI 10.1207/S15327590IJHC1304_07
   Hinderks A., UEQ KPI VALUE RANGE, DOI [10.13140/RG.2.2.34239.76967, DOI 10.13140/RG.2.2.34239.76967]
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Hokkanen L., 2016, Lecture Notes in Business Information Processing, V251, P66, DOI [10.1007/978, DOI 10.1007/978]
   Humayoun SR, 2011, LECT NOTES COMPUT SC, V6776, P55, DOI 10.1007/978-3-642-21753-1_7
   ISO9241-210, 2020, 92412102020 ISO
   Joshi A, 2010, J SYST SOFTWARE, V83, P2045, DOI 10.1016/j.jss.2010.03.078
   Jurca G, 2014, 2014 AGILE CONFERENCE (AGILE), P24, DOI 10.1109/AGILE.2014.17
   Kashfi P, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.130
   Kuusinen K., 2012, Proceedings of the 7th Nordic Conference on Human-Computer Interaction: Making Sense Through Design (NordiCHI'12), P139, DOI DOI 10.1145/2399016.2399037
   Kuusinen K, 2015, LECT NOTES COMPUT SC, V9298, P27, DOI 10.1007/978-3-319-22698-9_3
   Kuusinen K, 2014, LECT NOTES COMPUT SC, V8742, P259, DOI 10.1007/978-3-662-44811-3_17
   Larusdottir M, 2017, J SYST SOFTWARE, V123, P214, DOI 10.1016/j.jss.2016.01.024
   Larusdottir MK, 2011, LECT NOTES COMPUT SC, V6949, P430, DOI 10.1007/978-3-642-23768-3_50
   Magretta J., 2002, WHAT MANAGEMENT IS I
   MAGUES DA, 2016, 2016 IEEE INT C AUT, P1, DOI DOI 10.1109/ICA-ACCA.2016.7778513
   Magües DA, 2016, PROC LAT AM COMPUT C
   Navarro PLM, 2016, J COMPUT SCI TECH-CH, V31, P1246, DOI 10.1007/s11390-016-1695-6
   Mckeown M., 2020, STRATEGY BOOK THINK
   Memmel T., 2007, BCS HCI 07 P 21 BRIT, P167, DOI DOI 10.1177/004057368303900411
   Nebe K, 2016, LECT NOTES COMPUT SC, V9734, P442, DOI 10.1007/978-3-319-40349-6_42
   Ovad T, 2016, HUMAN COMPU, P77, DOI 10.1007/978-3-319-32165-3_3
   Ovad T, 2016, BEHAV INFORM TECHNOL, V35, P1080, DOI 10.1080/0144929X.2016.1225818
   Ovad Tina, 2015, P ANN M AUSTR SPEC I, P397
   Pereira JC, 2018, PROCEDIA COMPUT SCI, V138, P775, DOI 10.1016/j.procs.2018.10.101
   Peres A, 2014, 2014 AGILE CONFERENCE (AGILE), P61, DOI 10.1109/AGILE.2014.15
   Pillay N, 2019, 2019 CONFERENCE ON INFORMATION COMMUNICATIONS TECHNOLOGY AND SOCIETY (ICTAS), DOI 10.1109/ictas.2019.8703607
   Preece J., 2015, Interaction Design: Beyond Human Computer Interaction, V4th
   Rosenberg D., 2019, INTERACTIONS, V26, P28, DOI [10.1145/3318131, DOI 10.1145/3318131]
   Salah D., 2014, P 18 INT C EV ASS SO, P1, DOI 10.1145/2601248.2601276
   Salah D, 2014, LECT NOTES COMPUT SC, V8742, P108, DOI 10.1007/978-3-662-44811-3_7
   Salvador C., 2014, EATIS, V14, P1, DOI [10.1145/2590651.2590668, DOI 10.1145/2590651.2590668]
   Sauro J, 2015, J USABILITY STUD, V10, P68
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Schrepp M., 2019, HDB MODULAR EXTENSIO
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Schwartz L., 2013, The Eighth International Conference on Software Engineering Advances Agile-User, P346
   Schwartz L, 2014, INT J ADV SOFTWARE, V7
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Silva da Silva T., 2011, Proceedings of the 2011 Agile Conference, P77, DOI 10.1109/AGILE.2011.24
   Singh M, 2008, AGILE 2008, PROCEEDINGS, P555, DOI 10.1109/Agile.2008.33
   Szostek Agnieszka., 2012, CHI'12 Extended Abstracts on Human Factors in Computing Systems, P605, DOI DOI 10.1145/2212776.2212833
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wolkerstorfer P., 2008, Proc. CHI Extended Abstracts, P2151, DOI DOI 10.1145/1358628.1358648
   Xiong Y., 2010, 2 INT C INF SCI ENG, P1, DOI [10.1109/ICISE.2010.5690032, DOI 10.1109/ICISE.2010]
   Yuan Jia, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P331, DOI 10.1007/978-3-642-34347-6_25
NR 72
TC 6
Z9 6
U1 9
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106957
DI 10.1016/j.infsof.2022.106957
EA JUN 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2U8GD
UT WOS:000823392100002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU AbuHassan, A
   Alshayeb, M
   Ghouti, L
AF AbuHassan, Amjad
   Alshayeb, Mohammad
   Ghouti, Lahouari
TI Prioritization of model smell refactoring using a covariance
   matrix-based adaptive evolution algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Design smell prioritization; Refactoring prioritization; Multi-objective
   optimization; Evolutionary optimization; MO-CMA-ES algorithm
ID MULTIOBJECTIVE OPTIMIZATION; GENETIC ALGORITHM; BOX PLOT; ADAPTATION;
   CLASSIFICATION; COMPLEXITY; DESIGN
AB Context: The refactoring process enhances the software design by modifying the structure of design parts impaired with model smells without altering the overall software behavior. However, handling these smells without proper prioritization will not produce the anticipated effects. Objective: In this paper, we solve the prioritization of the model smell refactoring using a multi-objective optimization (MOO) algorithm called the multi-objective (MO) covariance matrix adaptation evolution strategy (MO-CMA-ES). Our formulation relies on the refactoring of unified modeling language (UML) class diagrams to mitigate the negative effect of design smells. Method: We treat the prioritization problem as a real-valued MOO where we propose novel data encoding procedures. We use two conflicting objectives, quality, and maintainability, to balance the refactoring. We first build a new solution representation that guarantees smell fixing and eliminates the rejection limitation. Furthermore, we suggest a custom mapping scheme to properly encode real-valued quantities using unique representations. For performance evaluation purposes, we developed a large custom dataset with more than 30,000 class records, using seven popular open-source software projects. A novel relative coverage metric is proposed to mitigate the limitations associated with the standard coverage. For benchmarking purposes, we also consider an improved version of the nondominated sorting genetic algorithm (NSGA-II). Results: The reported performance scores confirm the superiority of the MO-CMA-ES algorithm over NSGA-II. The former successfully identified the refactoring sequences that lead to the best improvements in software quality and maintainability while it is able to fix all identified design smells. These improvements are quantified in terms of hypervolume, coverage, spacing metrics, and execution time. Conclusion: The MO-CMA-ES attained the highest average maximum quality score of 1149 while keeping the average maintainability at the lowest score of 13.8. In all experiment settings, the proposed solution leads to longer refactoring sequences at no additional computational cost.
C1 [AbuHassan, Amjad] An Najah Natl Univ, Comp Engn Dept, Nablus, Palestine.
   [Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
   [Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
   [Ghouti, Lahouari] Prince Sultan Univ, Dept Comp Sci, Riyadh, Saudi Arabia.
C3 An Najah National University; King Fahd University of Petroleum &
   Minerals; King Fahd University of Petroleum & Minerals; Prince Sultan
   University
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.; Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
EM amjad.abuhassan@najah.edu; alshayeb@kfupm.edu.sa; lghouti@psu.edu.sa
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099; Ghouti,
   Lahouari/0000-0002-6381-4250
FU Deanship of Scientific Research at King Fahd University of Petroleum and
   Minerals; Prince Sultan University
FX A. AbuHassan and M. Alshayeb would like to acknowledge the support
   provided by the Deanship of Scientific Research at King Fahd University
   of Petroleum and Minerals. L. Ghouti acknowledges the support of Prince
   Sultan University.
CR Abid C, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00281-2
   AbuHassan A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2320
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Aniche M.., 2022, IEEE T SOFTWARE ENG
   [Anonymous], 1999, EVOLUTIONARY ALGORIT
   [Anonymous], 2011, ISOIEC 250102011
   [Anonymous], 1996, INTRO GENETIC ALGORI
   Antoniucci G. Arnau., 2016, ANAL DISTRIBUTION PA
   Arnold DV, 2002, IEEE T EVOLUT COMPUT, V6, P30, DOI 10.1023/A:1015059928466
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Barros M. de Oliveira, 2011, RELATE DIA, V5
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bhatt P., 2006, ACM SIGSOFT Software Engineering Notes, V31, P1
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Branke Jurgen, 2008, Multiobjective Optimization. Interactive and Evolutionary Approaches, DOI 10.1007/978-3-540-88908-3
   Brownlee J, 2011, CLEVER ALGORITHMS NA
   Choudhary A., 2016, 1 INT WORKSH TECHN D, P76
   Claes W., 2000, EXPT SOFTWARE ENG IN
   Cohoon James, 2003, NAT COMP SER, P683
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   Crosby P.B., 1979, QUALITY IS FREE ART
   Das I, 1999, STRUCT OPTIMIZATION, V18, P107, DOI 10.1007/s001580050111
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Durillo JJ, 2009, LECT NOTES COMPUT SC, V5467, P495, DOI 10.1007/978-3-642-01020-0_39
   Elish KO, 2011, ARAB J SCI ENG, V36, P1253, DOI 10.1007/s13369-011-0117-x
   Emmerich MTM, 2018, NAT COMPUT, V17, P585, DOI 10.1007/s11047-018-9685-y
   Fitzpatrick R.., 2000, SOFTWARE QUALITY DEF
   Fonseca C., 1999, 5 INT C GENETIC ALGO, V93
   Fonseca CM, 2005, LECT NOTES COMPUT SC, V3410, P250
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Grosan C, 2007, STUD COMPUT INTELL, V75, P1, DOI 10.1007/978-3-540-73297-6
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hansen N, 2001, EVOL COMPUT, V9, P159, DOI 10.1162/106365601750190398
   Hansen N., 2016, The CMA evolution strategy: A tutorial
   Hansen N, 2015, SPRINGER HANDBOOK OF COMPUTATIONAL INTELLIGENCE, P871
   Hastie T., 2009, ELEMENTS STAT LEARNI
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Huda M., 2015, J SOFTW ENG APPL, V8, P175, DOI DOI 10.4236/jsea.2015.84018
   IEEE, 1991, IEEE STD 61012
   Igel C, 2007, EVOL COMPUT, V15, P1, DOI 10.1162/evco.2007.15.1.1
   Jägersküpper J, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P461
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jin Y, 2005, SOFT COMPUT, V9, P3, DOI 10.1007/S00500-003-0328-5
   Juran JM., 1974, Quality Control Handbook
   Khrishe Y, 2016, INT CONF COMP SCI
   Knuth D.E.., 1988, ART COMPUTER PROGRAM, V3
   Konak A, 2006, RELIAB ENG SYST SAFE, V91, P992, DOI 10.1016/j.ress.2005.11.018
   Krawczyk B, 2016, PROG ARTIF INTELL, V5, P221, DOI 10.1007/s13748-016-0094-0
   KURSAWE F, 1991, LECT NOTES COMPUT SC, V496, P193
   Lehmer D. H., 1960, Combinatorial Analysis, V10, P179
   Lemaître G, 2017, J MACH LEARN RES, V18
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Li W, 2019, ALGORITHMS, V12, DOI 10.3390/a12030056
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Log4j, LOG4J APACHE SOFTWAR
   Macedo N, 2017, IEEE T SOFTWARE ENG, V43, P615, DOI 10.1109/TSE.2016.2620145
   Malhotra R, 2015, PROCEEDING OF THE THIRD INTERNATIONAL SYMPOSIUM ON WOMEN IN COMPUTING AND INFORMATICS (WCI-2015), P228, DOI 10.1145/2791405.2791463
   Mansoor U.., SOFTWARE QUAL J
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Marchetto A, 2011, LECT NOTES COMPUT SC, V6956, P158, DOI 10.1007/978-3-642-23716-4_16
   MCCABE TJ, 1989, COMMUN ACM, V32, P1415, DOI 10.1145/76380.76382
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Moshaiov A, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2809, DOI 10.1109/CEC.2014.6900433
   Oort B.., 2021, IEEE ACM 1 WORKSH AI
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Padhye N, 2011, RAPID PROTOTYPING J, V17, P458, DOI 10.1108/13552541111184198
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Poles S, 2008, LECT NOTES COMPUT SC, V5252, P329, DOI 10.1007/978-3-540-88908-3_12
   Rechenberg Ingo, 1973, EVOLUTIONSSTRATEGIE
   Riquelme N, 2015, PROC LAT AM COMPUT C, P286, DOI 10.1109/clei.2015.7360024
   Rizvi S., 2010, ARXIV PREPRINT ARXIV
   Sadeghi J, 2014, INFORM SCIENCES, V272, P126, DOI 10.1016/j.ins.2014.02.075
   Satopaa V., 2011, Proceedings of the 2011 31st International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P166, DOI 10.1109/ICDCSW.2011.20
   Schott J.R.., AIR FORCE I TECH WRI
   Schutze O.., 2012, EVOLVE BRIDGE PROBAB
   SYSWERDA G, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P2
   Vent W.., 1975, BROSCHIERT FEDDES RE, V86, P337
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   WILLIAMSON DF, 1989, ANN INTERN MED, V110, P916, DOI 10.7326/0003-4819-110-11-916
   Yadav MV., QUANTIFY OBJECT ORIE
   Yen GG, 2014, IEEE T EVOLUT COMPUT, V18, P131, DOI 10.1109/TEVC.2013.2240687
   Yuanyuan Zhang, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P47, DOI 10.1109/SSBSE.2010.16
   Yusoff Y, 2011, PROCEDIA ENGINEER, V15, DOI 10.1016/j.proeng.2011.08.745
   Zarei A, 2005, P 13 INT C INTELLIGE, P84, DOI [DOI 10.1109/ISAP.2005.15992458, 10.1109/ISAP.2005.1599245]
   ZELKOWITZ MV, 1978, COMPUT SURV, V10, P197, DOI 10.1145/356725.356731
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2007, LECT NOTES COMPUT SC, V4403, P862
NR 93
TC 1
Z9 1
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106875
DI 10.1016/j.infsof.2022.106875
EA FEB 2022
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700012
DA 2024-07-18
ER

PT J
AU Wohlin, C
   Runeson, P
AF Wohlin, Claes
   Runeson, Per
TI Guiding the selection of research methodology in industry-academia
   collaboration in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Research methodology; Selecting research methodology; Design Science;
   Action Research; Technology Transfer Model; Industry-academia
   collaboration
ID DESIGN SCIENCE; TECHNOLOGY-TRANSFER; FIELD; PRINCIPLES; MODEL
AB Background: The literature concerning research methodologies and methods has increased in software engineering in the last decade. However, there is limited guidance on selecting an appropriate research methodology for a given research study or project. Objective: Based on a selection of research methodologies suitable for software engineering research in collaboration between industry and academia, we present, discuss and compare the methodologies aiming to provide guidance on which research methodology to choose in a given situation to ensure successful industry-academia collaboration in research. Method: Three research methodologies were chosen for two main reasons. Design Science and Action Research were selected for their usage in software engineering. We also chose a model emanating from software engineering, i.e., the Technology Transfer Model. An overview of each methodology is provided. It is followed by a discussion and an illustration concerning their use in industry-academia collaborative research. The three methodologies are then compared using a set of criteria as a basis for our guidance. Results: The discussion and comparison of the three research methodologies revealed general similarities and distinct differences. All three research methodologies are easily mapped to the general research process describe-solve-practice, while the main driver behind the formulation of the research methodologies is different. Thus, we guide in selecting a research methodology given the primary research objective for a given research study or project in collaboration between industry and academia. Conclusions: We observe that the three research methodologies have different main objectives and differ in some characteristics, although still having a lot in common. We conclude that it is vital to make an informed decision concerning which research methodology to use. The presentation and comparison aim to guide selecting an appropriate research methodology when conducting research in collaboration between industry and academia.
C1 [Wohlin, Claes] Blekinge Inst Technol, Karlskrona, Sweden.
   [Runeson, Per] Lund Univ, Lund, Sweden.
C3 Blekinge Institute Technology; Lund University
RP Wohlin, C (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM claes.wohlin@bth.se; per.runeson@cs.lth.se
OI Wohlin, Claes/0000-0003-0460-5253; Runeson, Per/0000-0003-2795-4851
FU ELLIIT strategic research area - Swedish Government
FX The work is partially supported by a research grant for the ELLIIT
   strategic research area funded by the Swedish Government. We thank the
   anonymous reviewers for their valuable feedback. The comments provided
   helped make the scope clearer and improve the paper.
CR Agnew N.M., 2007, SCI GAME INTRO RES S, Vseventh
   Ananjeva A, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110785
   Andersson C., 2007, Software Process Improvement and Practice, V12, P125, DOI 10.1002/spip.311
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   Baskerville R, 1998, EUR J INFORM SYST, V7, P90, DOI 10.1057/palgrave.ejis.3000298
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   Baskerville R, 2008, EUR J INFORM SYST, V17, P441, DOI 10.1057/ejis.2008.45
   Beckman K, 1997, IEEE SOFTWARE, V14, P49, DOI 10.1109/52.636668
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Bjarnason E, 2019, EMPIR SOFTW ENG, V24, P2364, DOI 10.1007/s10664-019-09698-6
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Borg M, 2017, IEEE T SOFTWARE ENG, V43, P675, DOI 10.1109/TSE.2016.2620458
   Briand Lionel, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P793, DOI 10.1007/978-3-642-33666-9_50
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Brings J, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1981
   Carver JC, 2018, IEEE SOFTWARE, V35, P120, DOI 10.1109/MS.2018.3571250
   Chein I, 1948, AM PSYCHOL, V3, P43, DOI 10.1037/h0053515
   Choras M, 2020, IEEE ACCESS, V8, P78452, DOI 10.1109/ACCESS.2020.2990117
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Neto FGD, 2018, INT WORKSH AUTOMAT, P39, DOI 10.1145/3194733.3194744
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Engström E, 2020, EMPIR SOFTW ENG, V25, P2630, DOI 10.1007/s10664-020-09818-7
   Felderer M., 2020, CONT EMPIRICAL METHO
   Fernández DM, 2019, J SYST SOFTWARE, V148, P170, DOI 10.1016/j.jss.2018.11.019
   Fernández DM, 2015, REQUIR ENG, V20, P405, DOI 10.1007/s00766-014-0206-y
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2018, INFORM SOFTWARE TECH, V103, P40, DOI 10.1016/j.infsof.2018.06.007
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T., 2020, contemp. Empir. Methods softw. Engineering, P503, DOI [10.1007/978-3-030-32489-618, DOI 10.1007/978-3-030-32489-618]
   Gorschek T, 2007, REQUIR ENG, V12, P163, DOI 10.1007/s00766-007-0047-z
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gumiran CR, 2019, 2019 8TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2019), P243, DOI 10.1145/3316615.3316692
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Thuan NH, 2019, COMMUN ASSOC INF SYS, V44, P332, DOI 10.17705/1CAIS.04420
   Iivari J., 2009, 17th European Conference on Information Systems, ECIS 2009, P1642
   Järvinen P, 2007, QUAL QUANT, V41, P37, DOI 10.1007/s11135-005-5427-1
   Johannesson PaulErik Perjons., 2014, INTRO DESIGN SCI, P1, DOI DOI 10.1007/978-3-030-78132-3
   Kemmis S., 1988, ACTION RES PLANNER A
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Kuhn T. S., 1962, STRUCTURE SCI REVOLU
   Lehtinen TOA, 2011, INFORM SOFTWARE TECH, V53, P1045, DOI 10.1016/j.infsof.2011.05.005
   Lewin K, 1946, J SOC ISSUES, V2, P34, DOI 10.1111/j.1540-4560.1946.tb02295.x
   Dos Santos PSM, 2011, ADV COMPUT, V83, P205, DOI 10.1016/B978-0-12-385510-7.00005-9
   Mikkonen T, 2018, INFORM SOFTWARE TECH, V95, P34, DOI 10.1016/j.infsof.2017.10.013
   Morali Ayse, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P199, DOI 10.1109/RE.2010.30
   Ochodek M, 2020, EMPIR SOFTW ENG, V25, P220, DOI 10.1007/s10664-019-09769-8
   Offermann P., 2009, P 4 INT C DESIGN SCI, P1
   Offermann P, 2010, LECT NOTES COMPUT SC, V6105, P77, DOI 10.1007/978-3-642-13335-0_6
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Petersen K., 2014, P INT WORKSH LONG TE, P55
   Pickerill P, 2020, EMPIR SOFTW ENG, V25, P2897, DOI 10.1007/s10664-020-09825-8
   Pochyly A., 2010, ROB ISR 2010 41 INT, P1
   Razavian M, 2014, J SOFTW-EVOL PROC, V26, P141, DOI 10.1002/smr.1613
   Runeson P., 2020, CONT EMPIRICAL METHO, P129
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2014, P 2014 INT WORKSH LO, P25, DOI [10.1145/2647648.2647652, DOI 10.1145/2647648.2647652]
   Sandberg AB, 2011, IEEE SOFTWARE, V28, P74, DOI 10.1109/MS.2011.49
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   SHAW M, 1990, IEEE SOFTWARE, V7, P15, DOI 10.1109/52.60586
   Shaw M., 2010, FSE SDP WORKSH FUT S, P337
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Simon H., 1982, SCI ARTIFICIAL
   Staron M, 2020, EUROMICRO CONF PROC, P513, DOI 10.1109/SEAA51224.2020.00085
   Staron Miroslaw, 2020, ACTION RES SOFTWARE
   Stol K.-J., 2020, Contemporary Empirical Methods in Software Engineering, P27
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Torkar R, 2011, J ASSOC INF SYST, V12, P88
   van Aken JE, 2004, J MANAGE STUD, V41, P219, DOI 10.1111/j.1467-6486.2004.00430.x
   Venable J.R., 2006, First International Conference on Design Science Research in Information Systems and Technology, Claremont, California, V1, P1
   Wieringa Roel, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P220, DOI 10.1007/978-3-642-29863-9_17
   Wieringa R., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P493, DOI 10.1145/1810295.1810446
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Wohlin C., INFORM SOFTWARE TECH, V134
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Wohlin C, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106366
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
   Wood-Harper T., 1985, RES METHODS INFORM S, P161
NR 93
TC 17
Z9 21
U1 0
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106678
DI 10.1016/j.infsof.2021.106678
EA JUL 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UY8FG
UT WOS:000701752600002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zhao, KS
   Xu, Z
   Yan, M
   Zhang, T
   Yang, D
   Li, W
AF Zhao, Kunsong
   Xu, Zhou
   Yan, Meng
   Zhang, Tao
   Yang, Dan
   Li, Wei
TI A comprehensive investigation of the impact of feature selection
   techniques on crashing fault residence prediction models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Crash localization; Stack trace; Feature selection; Empirical study
ID DEFECT PREDICTION; SOFTWARE; LOCALIZATION
AB Context: Software crash is a serious form of the software failure, which often occurs during the software development and maintenance process. As the stack trace reported when the software crashes contains a wealth of information about crashes, recent work utilized classification models with the collected features from stack traces and source code to predict whether the fault causing the crash resides in the stack trace. This could speed-up the crash localization task. Objective: As the quality of features can affect the performance of the constructed classification models, researchers proposed to use feature selection methods to select a representative feature subset to build models by replacing the original features. However, only limited feature selection methods and classification models were taken into consideration for this issue in previous work. In this work, we look into this topic deeply and find out the best feature selection method for crash fault residence prediction task. Method: We study the performance of 24 feature selection techniques with 21 classification models on a benchmark dataset containing crash instances from 7 real-world software projects. We use 4 indicators to evaluate the performance of these feature selection methods which are applied to the classification models. Results: The experimental results show that, overall, a probability-based feature selection, called Symmetrical Uncertainty, performs well across the studied classification models and projects. Thus, we recommend such a feature selection method to preprocess the crash instances before constructing classification models to predict the crash fault residence. Conclusion: This work conducts a large-scale empirical study to investigate the impact of feature selection methods on the performance of classification models for the crashing fault residence prediction task. The results clearly demonstrate that there exist significant performance differences among these feature selection techniques across different classification models and projects.
C1 [Zhao, Kunsong; Xu, Zhou; Yan, Meng; Yang, Dan] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 401331, Peoples R China.
   [Zhao, Kunsong] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Xu, Zhou; Yan, Meng] Chongqing Univ, Key Lab Dependable Serv Comp Cyber Phys Soc, Minist Educ, Chongqing, Peoples R China.
   [Zhang, Tao] Macau Univ Sci & Technol, Fac Informat Technol, Macau, Peoples R China.
   [Li, Wei] Jiangnan Univ, Sch Artificial Intelligence & Comp Sci, Wuxi, Jiangsu, Peoples R China.
   [Li, Wei] Jiangsu Key Lab Media Design & Software Technol, Wuxi, Jiangsu, Peoples R China.
C3 Chongqing University; Wuhan University; Chongqing University; Macau
   University of Science & Technology; Jiangnan University
RP Xu, Z (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing 401331, Peoples R China.
EM zhouxullx@cqu.edu.cn
RI Li, Wei/AFH-5145-2022; Wang, Xiaoman/JYP-1144-2024; YANG,
   Dan/HHD-2733-2022; Zhang, Tao/E-5634-2012
OI Li, Wei/0000-0002-3135-0447; Zhang, Tao/0000-0002-6272-4069; Yan,
   Meng/0000-0002-9538-9121
FU National Natural Science Foundation of China [62002034]; Fundamental
   Research Funds for the Central Universities, China [2020CDCGRJ072,
   2020CDJQY-A021, JUSRP121073]; China Postdoctoral Science Foundation
   [2020M673137]; Natural Science Foundation of Chongqing in China
   [cstc2020jcyj-bshX0114]; Science and Technology Development Fund of
   Macau [0047/2020/A1]; MUST [FRG-20-008-FI]
FX This work was supported in part by the National Natural Science
   Foundation of China (No. 62002034) , the Fundamental Research Funds for
   the Central Universities, China (Nos.2020CDCGRJ072, 2020CDJQY-A021, and
   JUSRP121073) , China Postdoctoral Science Foundation (No. 2020M673137) ,
   the Natural Science Foundation of Chongqing in China
   (No.cstc2020jcyj-bshX0114) , the Science and Technology Development Fund
   of Macau (No.0047/2020/A1) , Faculty Research Grant Projects of MUST
   (No.FRG-20-008-FI) .
CR Ahmad A, 2005, PATTERN RECOGN LETT, V26, P43, DOI 10.1016/j.patrec.2004.08.015
   Aniche M., 2020, ARXIV PREPRINT ARXIV
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   [Anonymous], 1993, MORGAN KAUFMANN SERI
   Balogun AO, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9132764
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Chen X, 2021, IET SOFTW, V15, P75, DOI 10.1049/sfw2.12006
   Chen X, 2020, IEEE T RELIAB, V69, P70, DOI 10.1109/TR.2019.2924932
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Cover Thomas M, 1999, Elements of information theory
   COVER TM, 1967, IEEE T INFORM THEORY, V13, P21, DOI 10.1109/TIT.1967.1053964
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   Dash M, 2000, LECT NOTES ARTIF INT, V1805, P98
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fang C., 2020, P 29 ACM SIGSOFT INT, P516, DOI 10.1145/3395363.3397362
   Fong S, 2014, 2014 NINTH INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION MANAGEMENT (ICDIM), P205, DOI 10.1109/ICDIM.2014.6991429
   Fürnkranz J, 1999, ARTIF INTELL REV, V13, P3, DOI 10.1023/A:1006524209794
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Gao KH, 2008, PROCEEDINGS OF THE 2009 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P272
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gu YF, 2019, J SYST SOFTWARE, V148, P88, DOI 10.1016/j.jss.2018.11.004
   Guyon I, 2002, MACH LEARN, V46, P389, DOI 10.1023/A:1012487302797
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hall M.A., 2000, COMPUTER SCI WORKING
   Han J, 2012, MOR KAUF D, P1
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Huanjing Wang, 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P135, DOI 10.1109/ICMLA.2010.27
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Kannan SS, 2010, KNOWL-BASED SYST, V23, P580, DOI 10.1016/j.knosys.2010.03.016
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Kononenko I., 1994, Machine Learning: ECML-94. European Conference on Machine Learning. Proceedings, P171
   Kotsiantis SB, 2007, FRONT ARTIF INTEL AP, V160, P3
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu H, 1995, PROC INT C TOOLS ART, P388, DOI 10.1109/TAI.1995.479783
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Muthukumaran K., 2015, P 8 INDIA SOFTWARE E, P120
   Myles AJ, 2004, J CHEMOMETR, V18, P275, DOI 10.1002/cem.873
   Nayrolles M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P101, DOI 10.1109/SANER.2015.7081820
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Singh Y, 2009, J. Theor. Appl. Inf. Technol., V5, P36
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Stuckman J, 2017, IEEE T RELIAB, V66, P17, DOI 10.1109/TR.2016.2630503
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Wang HJ, 2011, INT J SOFTW ENG KNOW, V21, P237, DOI 10.1142/S0218194011005256
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wu RX, 2018, EMPIR SOFTW ENG, V23, P2866, DOI 10.1007/s10664-017-9567-4
   Wu X, 2009, CH CRC DATA MIN KNOW, P1, DOI 10.1201/9781420089653
   Xu Z., 2020, INF SOFTW TECHNOL IS
   Xu Z, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110763
   Xu Z, 2019, PROC INT SYMP SOFTW, P183, DOI 10.1109/ISSRE.2019.00027
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Yu Q, 2019, IEEE ACCESS, V7, P35710, DOI 10.1109/ACCESS.2019.2895614
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhou Z-H., 2009, Encyclopedia of Biometrics, P270, DOI [DOI 10.1007/978-0-387-73003-5_293, 10.1007/978-0-387-73003-5293, DOI 10.1007/978-0-387-73003-5293]
NR 63
TC 11
Z9 11
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106652
DI 10.1016/j.infsof.2021.106652
EA JUN 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300002
DA 2024-07-18
ER

PT J
AU Hou, TT
   Yao, XJ
   Gong, DW
AF Hou, Tingting
   Yao, Xiangjuan
   Gong, Dunwei
TI Community detection in software ecosystem by comprehensively evaluating
   developer cooperation intensity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software ecosystem; Community detection; Complex network; Cooperation
   intensity; Louvain algorithm
ID ALGORITHM
AB Context : As soon as the concept of software ecosystem was proposed, it has aroused great interest in both academia and industry. Software ecosystem can be described as a special complex network. Community structures are critical towards understanding not only the network topology but also how the network functions. Traditional community detection algorithms in complex networks mainly utilize the network topology to measure the similarities between nodes. Because of the complexity of information interaction in software ecosystem, only considering the topology structure will lead to unreasonable division of communities.
   Objective : For solving community detection in software ecosystem more reasonably, we present a method of community detection by comprehensively evaluating developer cooperation intensity in software ecosystems.
   Method : First, we combine network topology information and developer interaction information to calculate the developer cooperation intensity, so as to deeply explore the relationship between developers from both topological and semantic properties. Then a community detection algorithm ABDCI is proposed based on the cooperation intensity of developers by referring to the hierarchical clustering idea of Louvain algorithm. Finally, this method is applied to many different types of developer networks in the software ecosystem through GitHub hosting platform.
   Results : Comparing with three classical community detection algorithms, we find that the proposed method can identify a clearer community structure for the developer collaboration network in the software ecosystem.
   Conclusion : Our approach provides an effective and extensible technique for solving the community detection problem of real developer collaboration network in software ecosystem. According to our findings, we conclude that community detection algorithms based on comprehensive topological properties and semantic properties are more suitable for real communities in software ecosystems than traditional single-property algorithms.
C1 [Hou, Tingting; Yao, Xiangjuan] China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
   [Gong, Dunwei] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
C3 China University of Mining & Technology; China University of Mining &
   Technology
RP Yao, XJ (corresponding author), China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
EM yaoxj@cumt.edu.cn
RI Hou, Tingting/AAT-7178-2020
OI Hou, Tingting/0000-0002-3693-5081
FU National Natural Science Foundation of China [61573362, 61773384];
   National Key Research and Development Program of China [2018YFB1003802];
   Fundamental Research Funds for the Central Universities [2020ZDPYMS40]
FX This work is jointly funded by National Natural Science Foundation of
   China (No. 61573362 and 61773384), National Key Research and Development
   Program of China (No. 2018YFB1003802) and Fundamental Research Funds for
   the Central Universities (2020ZDPYMS40).
CR Allaho MY, 2013, 2013 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P62
   [Anonymous], 2004, PHYS REV E, DOI DOI 10.1103/PHYSREVE.69.066133
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Christensen HB, 2014, INFORM SOFTWARE TECH, V56, P1476, DOI 10.1016/j.infsof.2014.05.002
   de Santos-Sierra D, 2015, CYTOM PART A, V87A, P513, DOI 10.1002/cyto.a.22591
   Dittrich Y, 2014, INFORM SOFTWARE TECH, V56, P1436, DOI 10.1016/j.infsof.2014.02.012
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Guo YQ, 2016, AER ADV ENG RES, V54, P92
   Hanssen GK, 2014, INFORM SOFTWARE TECH, V56, P1421, DOI 10.1016/j.infsof.2014.06.013
   He J., 2017, P IEEE INT C COMP CO, P2380
   Idu A., 2011, P 3 INT C MAN EM DIG, P122, DOI 10.1145/2077489.2077511
   Jansen S, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106219
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Ji DP, 2014, THESIS
   Jin D, 2010, PROC INT C TOOLS ART, DOI 10.1109/ICTAI.2010.23
   Liu X, 2020, IEEE T KNOWL DATA EN, V32, P1736, DOI 10.1109/TKDE.2019.2911943
   Liu YH, 2014, J SUPERCOMPUT, V67, P723, DOI 10.1007/s11227-013-0984-x
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P1
   Mizushima K., 2011, P TECHN MAN EN SMART, P1
   MOORE JF, 1993, HARVARD BUS REV, V71, P75
   Oliveira GP, 2018, WEBMEDIA'18: PROCEEDINGS OF THE 24TH BRAZILIAN SYMPOSIUM ON MULTIMEDIA AND THE WEB, P363, DOI 10.1145/3243082.3243101
   Plakidas K, 2017, J SYST SOFTWARE, V132, P119, DOI 10.1016/j.jss.2017.06.095
   Sattari M, 2018, J COMPUT SCI-NETH, V25, P122, DOI 10.1016/j.jocs.2018.01.004
   Scacchi W, 2019, IEEE SOFTWARE, V36, P33, DOI 10.1109/MS.2018.2874574
   Shi C, 2013, DATA KNOWL ENG, V87, P394, DOI 10.1016/j.datak.2013.05.004
   Stolee KT, 2013, INFORM SOFTWARE TECH, V55, P1289, DOI 10.1016/j.infsof.2012.10.004
   Toral SL, 2010, INFORM SOFTWARE TECH, V52, P296, DOI 10.1016/j.infsof.2009.10.007
   Tripathi N, 2019, INFORM SOFTWARE TECH, V114, P77, DOI 10.1016/j.infsof.2019.06.008
   Wnuk K, 2014, INFORM SOFTWARE TECH, V56, P1493, DOI 10.1016/j.infsof.2014.05.015
   Zhang J., 2020, CONCURR COMPUT PRACT
NR 35
TC 10
Z9 11
U1 2
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106451
DI 10.1016/j.infsof.2020.106451
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900004
DA 2024-07-18
ER

PT J
AU Yang, LX
   Zhang, H
   Shen, HF
   Huang, X
   Zhou, X
   Rong, GP
   Shao, D
AF Yang, Lanxin
   Zhang, He
   Shen, Haifeng
   Huang, Xin
   Zhou, Xin
   Rong, Guoping
   Shao, Dong
TI Quality Assessment in Systematic Literature Reviews: A Software
   Engineering Perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Quality assessment; Systematic (literature) review; Tertiary study;
   Empirical software engineering; Evidence-based software engineering
ID EMPIRICAL-RESEARCH
AB Context: Quality Assessment (QA) of reviewed literature is paramount to a Systematic Literature Review (SLR) as the quality of conclusions completely depends on the quality of selected literature. A number of researchers in Software Engineering (SE) have developed a variety of QA instruments and also reported their challenges. We previously conducted a tertiary study on SLRs with QA from 2004 to 2013, and reported the findings in 2015.
   Objective: With the widespread use of SLRs in SE and the increasing adoption of QA in these SLRs in recent years, it is necessary to empirically investigate whether the previous conclusions are still valid and whether there are new insights to the subject in question using a larger and a more up-to-date SLR set. More importantly, we aim to depict a clear picture of QA used in SLRs in SE by aggregating and distilling good practices, including the commonly used QA instruments as well as the major roles and aspects of QA in research.
   Method: An extended tertiary study was conducted with the newly collected SLRs from 2014 to 2018 and the original SLRs from 2004 to 2013 to systematically review the QA used by SLRs in SE during the 15-year period from 2004 to 2018. In addition, this extended study also compared and contrasted the findings of the previous study conducted in 2015.
   Results: A total of 241 SLRs between 2004 and 2018 were included, from which we identified a number of QA instruments. These instruments are generally designed to focus on the rationality of study design, the rigor of study execution and analysis, and the credibility and contribution of study findings and conclusions, with the emphasis largely placed on its rigor. The quality data is mainly used for literature selection or as evidence to support conclusions.
   Conclusions: QA has received much attention in SE in more recent years and the improvement is evident since the last study in 2015. New findings show that the aims are more concise, the instruments are more diverse and rigorous, and the criteria are more thoughtful.
C1 [Yang, Lanxin; Zhang, He; Huang, Xin; Zhou, Xin; Rong, Guoping; Shao, Dong] Nanjing Univ, State Key Lab Novel Software Technol, Software Inst, Nanjing, Jiangsu, Peoples R China.
   [Shen, Haifeng] Australian Catholic Univ, Peter Faber Business Sch, Sydney, NSW, Australia.
C3 Nanjing University; Australian Catholic University
RP Zhang, H (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Software Inst, Nanjing, Jiangsu, Peoples R China.
EM yang931001@outlook.com; hezhang@nju.edu.cn; Haifeng.Shen@acu.edu.au;
   njuhuangx@outlook.com; job@wetist.com; ronggp@nju.edu.cn;
   dongshao@nju.edu.cn
RI Shen, Haifeng/HDN-6446-2022; Shao, Dong/O-3805-2019; Rong,
   Guoping/CAH-6145-2022; Rong, Guoping/CAF-0529-2022
OI Shen, Haifeng/0000-0002-8221-981X; Shao, Dong/0000-0002-3253-2680; Yang,
   Lanxin/0000-0002-0406-2263
FU National Key Research and Development Program of China [2019YFE0105500]
FX This work is supported by the National Key Research and Development
   Program of China (No. 2019YFE0105500).
CR Abbasi Mateen Ahmed, 2015, Software Engineering, V3, P7
   Alabool H, 2018, J SYST SOFTWARE, V139, P161, DOI 10.1016/j.jss.2018.01.038
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2001, Undertaking Systematic Reviews of Research Effectiveness CDC's Guidance for Those Carrying Out or Commissioning Reviews
   [Anonymous], 2004, TECHNICAL REPORT
   Atkins D, 2004, BMJ-BRIT MED J, V328, P1490
   Budgen D., 2009, P 13 INT C EV ASS SO, P65
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   C. Collaboration, 2003, TECHNICAL REPORT
   Calderón A, 2018, COMPUT STAND INTER, V57, P36, DOI 10.1016/j.csi.2017.11.003
   da Silva E. A. N., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P71, DOI 10.1109/SBES.2012.12
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   de Freitas M, 2015, IEEE T ENG MANAGE, V62, P495, DOI 10.1109/TEM.2015.2453354
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Huang X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1207, DOI 10.1145/3180155.3180235
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kabbedijk J, 2015, J SYST SOFTWARE, V100, P139, DOI 10.1016/j.jss.2014.10.034
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2009, EASE, V9, P167
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara, 2010, P 2010 ACM IEEE INT, P2
   Kuhrmann M, 2016, INT CONF GLOBAL SOFT, P89, DOI 10.1109/ICGSE.2016.10
   Malhotra MK, 1998, J OPER MANAG, V16, P407, DOI 10.1016/S0272-6963(98)00021-7
   Mendes E., 2005, P 4 INT S EMP SOFTW, P598
   Merino L, 2018, J SYST SOFTWARE, V144, P165, DOI 10.1016/j.jss.2018.06.027
   Molléri JS, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106240
   Molléri JS, 2019, INFORM SOFTWARE TECH, V105, P117, DOI 10.1016/j.infsof.2018.08.008
   Motta RC, 2017, 2017 IEEE/ACM JOINT 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 11TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS( JSOS 2017), P9, DOI 10.1109/JSOS.2017.5
   Mushtaq Z, 2017, IEEE ACCESS, V5, P11307, DOI 10.1109/ACCESS.2017.2710421
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Pourmirza S, 2017, INFORM SYST, V66, P43, DOI 10.1016/j.is.2017.01.007
   Qureshi N., 2011, ICSEA 2011, The Sixth International Conference on Software Engineering Advances, P534
   Rasool G, 2015, RENEW SUST ENERG REV, V49, P975, DOI 10.1016/j.rser.2015.04.054
   Sommestad Teodor, 2014, Information Management & Computer Security, V22, P42, DOI 10.1108/IMCS-08-2012-0045
   Spencer L., 2004, TECHNICAL REPORT
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Tyndall J., 2010, AACODS CHECKLIST
   Ul Muram F, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3037755
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wieringa Roel, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P161, DOI 10.1049/ic.2012.0020
   Wohlin C., 2012, Experimentation in Software Engineering
   Yu PP, 2015, INT CONF ASIC
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zogaan W, 2017, INT REQUIR ENG CONF, P110, DOI 10.1109/RE.2017.80
NR 58
TC 35
Z9 36
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106397
DI 10.1016/j.infsof.2020.106397
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900006
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Arvanitou, EM
   Ampatzoglou, A
   Avgeriou, P
   Tsintzira, AA
   Chatzigeorgiou, A
AF Ampatzoglou, Areti
   Arvanitou, Elvira-Maria
   Ampatzoglou, Apostolos
   Avgeriou, Paris
   Tsintzira, Angeliki-Agathi
   Chatzigeorgiou, Alexander
TI Architectural decision-making as a financial investment: An industrial
   case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID SOFTWARE; MODEL
AB Context: Making architectural decisions is a crucial task but also very difficult, considering the scope of the decisions and their impact on quality attributes. To make matters worse, architectural decisions need to combine both technical and business factors, which are very dissimilar by nature.
   Objectives: We provide a cost-benefit approach and supporting tooling that treats architectural decisions as financial investments by: (a) combining both technical and business factors; and (b) transforming the involved factors into currency, allowing their uniform aggregation. Apart from illustrating the method, we validate both the proposed approach and the tool, in terms of fitness for purpose, usability, and potential limitations.
   Method: To validate the approach, we have performed a case study in a software development company, in the domain of low-energy embedded systems. We employed triangulation in the data collection phase of the case study, by performing interviews, focus groups, an observational session, and questionnaires.
   Results: The results of the study suggested that the proposed approach: (a) provides a structured process for systematizing decision-making; (b) enables the involvement of multiple stakeholders, distributing the decision-making responsibility to more knowledgeable people; (c) uses monetized representations that are important for assessing decisions in a unified manner; and (d) enables decision reuse and documentation.
   Conclusions: The results of the study suggest that architectural decision-making can benefit from treating this activity as a financial investment. The various benefits that have been identified from mixing financial and technological aspects are well-accepted from industrial stakeholders.
C1 [Ampatzoglou, Areti; Avgeriou, Paris] Univ Groningen, Inst Math Comp Sci & AI, Dept Comp Sci, Groningen, Netherlands.
   [Arvanitou, Elvira-Maria; Ampatzoglou, Apostolos; Tsintzira, Angeliki-Agathi; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 University of Groningen; University of Macedonia
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM areti.ampatzoglou@rug.nl; e.arvanitou@uom.edu.gr;
   a.ampatzoglou@uom.edu.gr; paris@cs.rug.nl; achat@uom.edu.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
OI Avgeriou, Paris/0000-0002-7101-0754
FU European Union Horizon 2020 research and innovation program [780572];
   H2020 - Industrial Leadership [780572] Funding Source: H2020 -
   Industrial Leadership
FX Work reported in this paper has received funding from the European Union
   Horizon 2020 research and innovation program under grant agreement No.
   780572 (project: SDK4ED).
CR [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2003, CASE STUDY RES APPL
   Babar Muhammad Ali, 2007, Second Workshop on Sharing and Reusing architectural Knowledge Architecture, Rationale, and Design Intent (SHARK/ADI'07: ICSE Workshops 2007), DOI 10.1109/SHARK-ADI.2007.1
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Capilla Rafael, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P487, DOI 10.1109/ASE.2008.84
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Clements P., 2018, CMU J, DOI [10.1184/R1/6582992.v1., DOI 10.1184/R1/6582992.V1]
   Clements P., 2003, SEI S SOFTW
   de Almeida RR, 2018, PROC IEEE INT CONF S, P655, DOI 10.1109/ICSME.2018.00075
   Feigenbaum A.V., 1961, Total Quality Control
   FEIGENBAUM AV, 1956, HARVARD BUS REV, V34, P93
   Guemes-Castorena Elizondo-Noriega D., 2017, IIE ANN C, P758
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   Juran J.M., 1951, QUALITY CONTROL HDB, V1st
   Karg LM, 2011, J SYST SOFTWARE, V84, P415, DOI 10.1016/j.jss.2010.11.904
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kim S, 2008, INT J QUAL RELIAB MA, V25, P842, DOI 10.1108/02656710810898649
   Kontio J., 2007, GUIDE ADV EMPIRICAL, P93
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Kruchten P, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P291
   Kruchten P, 2008, J SYST SOFTWARE, V81, P2413, DOI 10.1016/j.jss.2008.08.025
   Lee J, 2009, EMPIR SOFTW ENG, V14, P453, DOI 10.1007/s10664-008-9094-4
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li ZN, 2014, TEXTS COMPUT SCI, P183
   Liang P, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P343, DOI 10.1007/978-3-642-10294-3_17
   Manteuffel C, 2016, J SYST SOFTWARE, V112, P181, DOI 10.1016/j.jss.2015.10.034
   Nowak Marcin, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P146, DOI 10.1007/978-3-642-39031-9_13
   Peimbert-Garcia R.E., 2012, P 62 IIE ANN C EXP, P2760
   Plunkett JJ., 1987, INT J OFQUALITY ANDR, V4, P40, DOI DOI 10.1108/EB002874
   Poort ER, 2012, J SYST SOFTWARE, V85, P1995, DOI 10.1016/j.jss.2012.03.071
   PORTER LJ, 1992, INT J PROD ECON, V27, P69, DOI 10.1016/0925-5273(92)90127-S
   Seaman C., 2012, 3 INT WORKSH MAN TEC
   Spencer D., 2009, CARD SORTING DESIGNI
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   van Heesch U, 2012, J SYST SOFTWARE, V85, P795, DOI 10.1016/j.jss.2011.10.017
   Van Solingen Rini, 2002, ENCY SOFTWARE ENG, V2002, P528
   van Vliet H, 2016, J SYST SOFTWARE, V117, P638, DOI 10.1016/j.jss.2016.01.017
NR 38
TC 3
Z9 4
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106412
DI 10.1016/j.infsof.2020.106412
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200004
OA Green Published
DA 2024-07-18
ER

PT J
AU Pérez, F
   Echeverría, J
   Lapeña, R
   Cetina, C
AF Perez, Francisca
   Echeverria, Jorge
   Lapena, Raul
   Cetina, Carlos
TI Comparing manual and automated feature location in conceptual models: A
   Controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Controlled experiment; Feature location; Model-Driven engineering;
   Conceptual models
ID TRACEABILITY LINKS; SOURCE-CODE; SOFTWARE; INFORMATION; TESTS
AB Context: Maintenance activities cannot be completed without locating the set of software artifacts that realize a particular feature of a software system. Manual Feature Location (FL) is widely used in industry, but it becomes challenging (time-consuming and error prone) in large software repositories. To reduce manual efforts, automated FL techniques have been proposed. Research efforts in FL tend to make comparisons between automated FL techniques, ignoring manual FL techniques. Moreover, existing research puts the focus on code, neglecting other artifacts such as models.
   Objective: This paper aims to compare manual FL against automated FL in models to answer important questions about performance, productivity, and satisfaction of both treatments.
   Method: We run an experiment for comparing manual and automated FL on a set of 18 subjects (5 experts and 13 non-experts) in the domain of our industrial partner, BSH, manufacturer of induction hobs for more than 15 years. We measure performance (recall, precision, and F-measure), productivity (ratio between F-measure and spent time), and satisfaction (perceived ease of use, perceived usefulness, and intention to use) of both treatments, and perform statistical tests to assess whether the obtained differences are significant.
   Results: Regarding performance, manual FL significantly outperforms automated FL in precision and F-measure (up to 27.79% and 19.05%, respectively), whereas automated FL significantly outperforms manual FL in recall (up to 32.18%). Regarding productivity, manual FL obtains 3.43%/min, which improves automated FL significantly. Finally, there are no significant differences in satisfaction for both treatments.
   Conclusions: The findings of our work can be leveraged to advance research to improve the results of manual and automated FL techniques. For instance, automated FL in industry faces issues such as low discrimination capacity. In addition, the obtained satisfaction results have implications for the usage and possible combination of manual, automated, and guided FL techniques.
C1 [Perez, Francisca; Echeverria, Jorge; Lapena, Raul; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km299, Zaragoza 50830, Spain.
C3 Universidad San Jorge
RP Pérez, F (corresponding author), Univ San Jorge, SVIT Res Grp, Autovia A-23 Zaragoza Huesca Km299, Zaragoza 50830, Spain.
EM mfperez@usj.es; jecheverria@usj.es; rlapena@usj.es; ccetina@usj.es
RI Echeverria, Jorge/AAB-8222-2022; Pérez, Francisca/KPH-0503-2024; Cetina,
   Carlos/P-8682-2017
OI Echeverria, Jorge/0000-0001-7272-7047; Cetina,
   Carlos/0000-0001-8542-5515; Perez, Francisca/0000-0001-6371-915X;
   Lapena, Raul/0000-0003-2660-3080
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R+ D+ i Plan; ERDF funds under the Project ALPS
   [RTI2018-096411-B-I00]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R+ D+ i Plan and
   ERDF funds under the Project ALPS (RTI2018-096411-B-I00).
CR Andam Berima, 2017, P 11 INT WORKSH VAR, P100, DOI DOI 10.1145/3023956.3023967
   [Anonymous], [No title captured]
   [Anonymous], 2017, IEEE T EVOL COMPUT
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2010, ISOMECIEEE 24765:2010, P1, DOI [DOI 10.1109/IEEESTD.2010.5733835, 10.1109/IEEESTD.2010.5733835]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Cetina C, 2017, J SYST SOFTWARE, V134, P261, DOI 10.1016/j.jss.2017.09.022
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DILLON M, 1983, INFORM PROCESS MANAG, V19, P402, DOI 10.1016/0306-4573(83)90062-6
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Echeverría J, 2017, INT SYMP EMP SOFTWAR, P277, DOI 10.1109/ESEM.2017.41
   Eyal-Salman H., 2014, SEKE: Software Engineering and Knowledge Engineering, P426
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Grünbacher P, 2009, IEEE INT CONF AUTOM, P247, DOI 10.1109/ASE.2009.11
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hanussek M, 2019, IEEE ACM INT SYMP, P157, DOI 10.1109/CCGRID.2019.00027
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hill E, 2013, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2013.59
   Hulth A, 2003, PROCEEDINGS OF THE 2003 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P216
   Ji Wenbin, 2015, INT SYST SOFTW PROD, P61, DOI DOI 10.1145/2791060.2791107
   Jordan H, 2015, INT C PROGRAM COMPRE, P174, DOI 10.1109/ICPC.2015.26
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Krüger J, 2019, J SYST SOFTWARE, V152, P239, DOI 10.1016/j.jss.2019.01.057
   Krüger J, 2017, ACM INT CONF PR SER, P105, DOI 10.1145/3168365.3168371
   Krueger RA, 2014, CASEY MA
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Martinez J, 2018, INFORM SOFTWARE TECH, V104, P46, DOI 10.1016/j.infsof.2018.07.005
   Martinez J, 2015, IEEE INT CONF AUTOM, P396, DOI 10.1109/ASE.2015.44
   Moody D. L., 2003, ECIS
   Nielsen Jakob, 2000, WHY YOU ONLY NEED TE
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seltman H., EXPT DESIGN ANAL
   Simmons S, 2006, J SOFTW MAINT EVOL-R, V18, P457, DOI 10.1002/smr.338
   Stoermer C, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P35, DOI 10.1109/WICSA.2001.948405
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang JS, 2013, J SOFTW-EVOL PROC, V25, P1193, DOI 10.1002/smr.1593
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Wilde N, 2003, J SYST SOFTWARE, V65, P105, DOI [10.1016/S0164-1212(02)00052-3, 10.1016/s0164-1212(02)00052-3]
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang Y, 2008, IET SOFTW, V2, P185, DOI 10.1049/iet-sen:20070062
   Zhao W, 2004, PROC INT CONF SOFTW, P293, DOI 10.1109/ICSE.2004.1317452
NR 68
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106337
DI 10.1016/j.infsof.2020.106337
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LT0FE
UT WOS:000536752100009
DA 2024-07-18
ER

PT J
AU Medeiros, J
   Vasconcelos, A
   Silva, C
   Goulao, M
AF Medeiros, Juliana
   Vasconcelos, Alexandre
   Silva, Carla
   Goulao, Miguel
TI Requirements specification for developers in agile projects: Evaluation
   by two industrial case studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software requirements specification; Agile software development;
   Empirical software engineering
ID QUALITY
AB Context: An inadequate requirements specification activity acts as a catalyst to other problems, such as low team productivity and difficulty in maintaining software. Although Agile Software Development (ASD) has grown in recent years, research pointed out several limitations concerning its requirements engineering activities, such as Software Requirements Specification (SRS) provided in high level and targeted to the customer, lack of information required to perform design activities and low availability of the customer. To overcome these issues, the RSD (Requirements Specification for Developers) approach was proposed to create an SRS that provides information closer to development needs. In addition, existing literature reviews identify a demand for more empirical studies on the requirements specification activity in ASD.
   Objective: Face to this, this work presents the evaluation of the RSD approach with respect to how it affects the teamwork and to identify its strengths and limitations.
   Methods: This evaluation was performed by means of two industrial case studies conducted using a multiple-case design, focusing on software engineers as the analysis unit. Data were collected during 15 months from documents, observations, and interviews. They were triangulated, analyzed, and synthesized using techniques of grounded theory.
   Results: The findings pointed out that the readability of SRS was compromised when several requirements are specified in the same RSD artifact. Evaluation also indicated the need of prioritization and categorization of the acceptance criteria, a tool for creating, searching and tracing the artifacts, and obtaining acceptance tests from acceptance criteria. On the other hand, the findings showed that the practices used to specify requirements using the RSD approach have the potential to produce a more objective SRS, tailored for the development team.
   Conclusion: As a consequence, the structure of the RSD artifact was considered as a factor that improved the team performance in the two case studies.
C1 [Medeiros, Juliana] Inst Fed Paraiba UAI IFPB, Joao Pessoa, Paraiba, Brazil.
   [Vasconcelos, Alexandre; Silva, Carla] Univ Fed Pernambuco CIn UFPE, Ctr Informat, Recife, PE, Brazil.
   [Goulao, Miguel] Univ Nova Lisboa, Fac Ciencias & Tecnol, NOVA LINCS, Lisbon, Portugal.
C3 Universidade Nova de Lisboa
RP Medeiros, J (corresponding author), Inst Fed Paraiba UAI IFPB, Joao Pessoa, Paraiba, Brazil.
EM juliana.medeiros@ifpb.edu.br; amlv@cin.ufpe.br; ctlls@cin.ufpe.br;
   mgoul@fct.unl.pt
RI Goulão, Miguel/AAB-8223-2020; Lins de Vasconcelos, Alexandre
   Marcos/O-8381-2015
OI Goulão, Miguel/0000-0002-5356-5203; Lins de Vasconcelos, Alexandre
   Marcos/0000-0003-4800-0344; Silva, Carla/0000-0002-0597-3851
CR Abdullah N., 2011, ... on Agile Requirements, P1, DOI DOI 10.1145/2068783.2068784
   Alsaqaf W, 2017, LECT NOTES COMPUT SC, V10153, P219, DOI 10.1007/978-3-319-54045-0_17
   [Anonymous], 2004, INTERACTIVE QUALITAT
   Ashmore S., 2014, INTRO AGILE METHODS, P17
   Batool A, 2013, INT CONF ADV COMMUN, P1006
   Beck K., 2011, MANIFESTO AGILE SOFT
   Curcio K, 2018, J SYST SOFTWARE, V139, P32, DOI 10.1016/j.jss.2018.01.036
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ferreira J, 2007, AGILE 2007, PROCEEDINGS, P50, DOI 10.1109/AGILE.2007.8
   Gebhart M., 2014, 9 INT C SOFTW ENG AD, P69
   Haugset B., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5289, DOI 10.1109/HICSS.2012.127
   Heck P, 2018, SOFTWARE QUAL J, V26, P127, DOI 10.1007/s11219-016-9336-4
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   IEEE, 1998, IEEE, P1, DOI [10.1109/IEEESTD.1998.88286, DOI 10.1109/IEEESTD.1998.88286]
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Kasauli R, 2017, INT REQUIR ENG CONF, P352, DOI 10.1109/RE.2017.60
   Losada B, 2013, SCI COMPUT PROGRAM, V78, P2268, DOI 10.1016/j.scico.2012.07.022
   Lucassen G, 2017, LECT NOTES COMPUT SC, V10153, P235, DOI 10.1007/978-3-319-54045-0_18
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Rivero JM, 2014, INFORM SOFTWARE TECH, V56, P670, DOI 10.1016/j.infsof.2014.01.011
   Medeiros Francisco, 2016, International Conference on Information Science and Applications (ICISA) 2016. LNEE 376, P97, DOI 10.1007/978-981-10-0557-2_10
   Medeiros J., 2015, ESELAW CIBSE IB C SO, P466
   Medeiros J., 2017, P ACM S APPL COMPUTI, P1114, DOI DOI 10.1145/3019612.3019753
   Medeiros J, 2018, J SYST SOFTWARE, V142, P171, DOI 10.1016/j.jss.2018.04.064
   Merriam S.B., 2009, Qualitative Research: A Guide to Design and Implementation (Revised and Expanded from Qualitative Research and Case Study Applications in Education), V3
   Nawrocki J, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P303, DOI 10.1109/ICRE.2002.1048543
   Piao SL, 2009, ENVIRON RES LETT, V4, DOI 10.1088/1748-9326/4/4/044012
   Read A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5319, DOI 10.1109/HICSS.2012.684
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schön EM, 2017, LECT NOTES BUS INF P, V283, P37, DOI 10.1007/978-3-319-57633-6_3
   Seaman C.B., 2008, Guide to Advanced Empirical Software Engineering, P35, DOI [10.1007/978-1-84800-044-52, DOI 10.1007/978-1-84800-044-52]
   SEI, 2010, CMUSEI2010TR033 SEI
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   Shields C., 2017, ANN M AM ED RES ASS
   Version One, 2017, 10 ANN STAT AG REP
   Wagner S., 2017, P 20 IB C SOFTW ENG, P389
   Wanderley F, 2014, IEEE INT WORKSH MODE, P47, DOI 10.1109/MoDRE.2014.6890825
NR 40
TC 12
Z9 12
U1 2
U2 37
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2020
VL 117
AR 106194
DI 10.1016/j.infsof.2019.106194
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JN4MX
UT WOS:000496874400003
DA 2024-07-18
ER

PT J
AU Linåker, J
   Regnell, B
   Damian, D
AF Linaker, J.
   Regnell, B.
   Damian, D.
TI A Community Strategy Framework - How to obtain influence on requirements
   in meritocratic open source software communities?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open innovation; Open source software; Software ecosystem; Community
   strategy; Requirements engineering; Software product management
ID OPEN INNOVATION; GOVERNANCE; FIRMS; COOPETITION; ECOSYSTEMS; PROJECTS;
   MODEL
AB Context: In the Requirements Engineering (RE) process of an Open Source Software (OSS) community, an involved firm is a stakeholder among many. Conflicting agendas may create miss-alignment with the firm's internal requirements strategy. In communities with meritocratic governance or with aspects thereof, a firm has the opportunity to affect the RE process in line with their own agenda by gaining influence through active and symbiotic engagements.
   Objective: The focus of this study has been to identify what aspects that firms should consider when they assess their need of influencing the RE process in an OSS community, as well as what engagement practices that should be considered in order to gain this influence.
   Method: Using a design science approach, 21 interviews with 18 industry professionals from 12 different software-intensive firms were conducted to explore, design and validate an artifact for the problem context.
   Results: A Community Strategy Framework (CSF) is presented to help firms create community strategies that describe if and why they need influence on the RE process in a specific (meritocratic) OSS community, and how the firm could gain it. The framework consists of aspects and engagement practices. The aspects help determine how important an OSS project and its community is from business and technical perspectives. A community perspective is used when considering the feasibility and potential in gaining influence. The engagement practices are intended as a tool-box for how a firm can engage with a community in order to build influence needed.
   Conclusion: It is concluded from interview-based validation that the proposed CSF may provide support for firms in creating and tailoring community strategies and help them to focus resources on communities that matter and gain the influence needed on their respective RE processes.
C1 [Linaker, J.; Regnell, B.] Lund Univ, Box 118, S-22100 Lund, Sweden.
   [Damian, D.] Univ Victoria, STN CSC, POB 1700, Victoria, BC V8W 2Y2, Canada.
C3 Lund University; University of Victoria
RP Linåker, J (corresponding author), Lund Univ, Box 118, S-22100 Lund, Sweden.
EM johan.linaker@cs.lth.se; bjorn.regnell@cs.lth.se;
   damian.daniela@gmail.com
RI Linåker, Johan/AAR-3849-2021
OI Linåker, Johan/0000-0001-9851-1404; Regnell, Bjorn/0000-0002-9380-6120
FU Swedish National Science Foundation Framework Grant for Strategic
   Research in Information and Communication Technology [621-2012-5354];
   industrial excellence center EASE (Embedded Applications Software
   Engineering)
FX The authors would like to thank the anonymous interviewees for lending
   their time and expertise, as well as the anonymous reviewers for their
   valuable feedback. This work was funded by the Swedish National Science
   Foundation Framework Grant for Strategic Research in Information and
   Communication Technology, project Synergies (Synthesis of a Software
   Engineering Framework for Open Innovation through Empirical Research),
   grant 621-2012-5354, and the industrial excellence center EASE (Embedded
   Applications Software Engineering)2.
CR Agerfalk P.J, 2008, MIS Q, P385
   Alspaugh TA, 2013, S VIS LANG HUM CEN C, P165, DOI 10.1109/RE.2013.6636716
   Alves C, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P215, DOI 10.5220/0006269402150226
   Duc AN, 2017, LECT NOTES BUS INF P, V304, P146, DOI 10.1007/978-3-319-69191-6_10
   Baars A, 2012, LECT NOTES BUS INF P, V114, P168
   Bhowmik Tanmay, 2015, ACM Transactions on Management Information Systems, V6, DOI 10.1145/2795235
   Bhowmik T., 2018, J IND INF INTEGR
   Butler S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P201, DOI 10.1145/3183519.3183531
   Capra E, 2008, INT FED INFO PROC, V275, P1
   Castro Llanos John Wilmar, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P131, DOI 10.1007/978-3-642-31063-8_11
   Chesbrough HW, 2007, CALIF MANAGE REV, V50, P57, DOI 10.2307/41166416
   Dahlander L, 2005, RES POLICY, V34, P481, DOI 10.1016/j.respol.2005.02.003
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2008, LONG RANGE PLANN, V41, P629, DOI 10.1016/j.lrp.2008.09.003
   DaSilva CM, 2014, LONG RANGE PLANN, V47, P379, DOI 10.1016/j.lrp.2013.08.004
   de Laat PB, 2007, J MANAG GOV, V11, P165, DOI 10.1007/s10997-007-9022-9
   De Noni I, 2013, SCAND J MANAG, V29, P247, DOI 10.1016/j.scaman.2012.10.003
   Eckhardt Evert, 2014, P 2014 EUR C SOFTW A
   Ernst N. A., 2012, Proceedings of the 2012 IEEE Second International Workshop on Empirical Requirements Engineering (EmpiRE), P25, DOI 10.1109/EmpiRE.2012.6347678
   Fielding RT, 1999, COMMUN ACM, V42, P42, DOI 10.1145/299157.299167
   Franco-Bedoya O, 2017, INFORM SOFTWARE TECH, V91, P160, DOI 10.1016/j.infsof.2017.07.007
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Gawer A, 2014, RES POLICY, V43, P1239, DOI 10.1016/j.respol.2014.03.006
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   Germonprez M., 2014, INT J INFORM SYSTEMS, V1, P125, DOI DOI 10.1504/IJISAM.2014.062290
   Glinz M, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.42
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Henkel J, 2009, IND CORP CHANGE, V18, P435, DOI 10.1093/icc/dtn046
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P13
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Jensen C, 2007, PROC INT CONF SOFTW, P364
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Kuriakose J, 2015, IEEE INT WORKS EMPIR, P49, DOI 10.1109/EmpiRE.2015.7431307
   Laurent P, 2009, LECT NOTES COMPUT SC, V5512, P240, DOI 10.1007/978-3-642-02050-6_21
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Linåker J, 2018, J SYST SOFTWARE, V135, P17, DOI 10.1016/j.jss.2017.09.032
   Linaker J, 2015, 2015 INT C SOFTW SYS, P208, DOI [10.1145/2785592.2795370, DOI 10.1145/2785592.2795370]
   Lundell B, 2010, INFORM SYST J, V20, P519, DOI 10.1111/j.1365-2575.2010.00348.x
   Mäenpää H, 2018, J INTERNET SERV APPL, V9, DOI 10.1186/s13174-018-0088-1
   Mahony SO, 2005, Perspectives on Free and Open Source Software, P393
   Markus ML, 2007, J MANAG GOV, V11, P151, DOI 10.1007/s10997-007-9021-x
   Milne A, 2012, REQUIR ENG, V17, P83, DOI 10.1007/s00766-012-0151-6
   Munir H, 2018, EMPIR SOFTW ENG, V23, P186, DOI 10.1007/s10664-017-9511-7
   Munir H, 2016, EMPIR SOFTW ENG, V21, P684, DOI 10.1007/s10664-015-9380-x
   Nakakoji Kumiyo, 2002, P INT WORKSHOP PRINC, P76, DOI DOI 10.1145/512035.512055
   Nguyen-Duc A, 2019, E-INFORMATICA, V13, P37, DOI 10.5277/e-Inf190102
   Noll J, 2007, INT FED INFO PROC, V234, P109
   Nyman L, 2013, TECHNOL INNOV MANAG, P7
   O'Mahony S, 2007, ACAD MANAGE J, V50, P1079
   O'Mahony S, 2007, J MANAG GOV, V11, P139, DOI 10.1007/s10997-007-9024-7
   O'Mahony S, 2008, ADMIN SCI QUART, V53, P422, DOI 10.2189/asqu.53.3.422
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Riehle D, 2007, COMPUTER, V40, P25, DOI 10.1109/MC.2007.147
   Riehle D, 2011, COMPUTER, V44, P93, DOI 10.1109/MC.2011.206
   Riehle D, 2012, INF SYST E-BUS MANAG, V10, P5, DOI 10.1007/s10257-010-0149-x
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Scacchi W, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P307, DOI 10.1007/978-3-642-10294-3_15
   Schaarschmidt M, 2015, INFORM ORGAN-UK, V25, P99, DOI 10.1016/j.infoandorg.2015.03.001
   Shahrivar S, 2018, INFORM SOFTWARE TECH, V103, P202, DOI 10.1016/j.infsof.2018.06.018
   Shaikh M, 2017, INFORM ORGAN-UK, V27, P116, DOI 10.1016/j.infoandorg.2017.04.001
   Stam W, 2009, RES POLICY, V38, P1288, DOI 10.1016/j.respol.2009.06.004
   Syeed Mahbubul, 2017, OPEN SOURCE SYSTEMS, P49
   Teece DJ, 2010, LONG RANGE PLANN, V43, P172, DOI 10.1016/j.lrp.2009.07.003
   Valença G, 2017, J SYST SOFTWARE, V134, P76, DOI 10.1016/j.jss.2017.08.044
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   West J, 2008, IND INNOV, V15, P145, DOI 10.1080/13662710801970142
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Wnuk K, 2012, INT SYMP EMP SOFTWAR, P271, DOI 10.1145/2372251.2372301
NR 69
TC 5
Z9 5
U1 2
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 102
EP 114
DI 10.1016/j.infsof.2019.04.010
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IA9TG
UT WOS:000469899100008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hotomski, S
   Glinz, M
AF Hotomski, Sofija
   Glinz, Martin
TI GuideGen: An approach for keeping requirements and acceptance tests
   aligned via automatically generated guidance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements; Acceptance tests; Document alignment; Software engineering
   tools; Software evolution
ID CHANGE IMPACT ANALYSIS; TRACEABILITY LINKS; DOCUMENTATION
AB Context When software-based systems evolve, their requirements change. The changes in requirements affect the associated acceptance tests, which should be adapted accordingly. In practice, however, requirements and their acceptance tests are not always kept up-to-date nor aligned. Such inconsistencies may introduce software quality problems, unintended costs and project delays.
   Objective: In order to keep evolving requirements and their acceptance tests aligned, we are developing an approach called GuideGen. GuideGen automatically generates guidance in natural language about how to adapt the impacted acceptance tests when their requirements change.
   Method: We have implemented GuideGen as a prototype tool and evaluated it in two studies: first, by assessing the correctness, completeness, understandability and relevance of the generated guidance using three data sets from industry and second, by assessing the applicability and usefulness of the approach and the tool with 23 practitioners from ten companies.
   When a requirement having more than one associated acceptance test is changed, GuideGen currently generates guidance for all of them together. As a first step towards overcoming this limitation, we assessed how well existing methods for change impact analysis can identify the tests actually impacted by the changes in a requirement.
   Results: In the first study, we found that GuideGen produced correct guidance in about 67 to 89 percent of all changes. Our approach performed better for agile requirements than for traditional ones. The results of the second study show that GuideGen is perceived to be useful, but that the practitioners would prefer a GuideGen plug-in for commercial tools instead of a standalone tool. Further, in our experiment we could correctly identify the affected acceptance tests for 63% to 91% of the changes in the requirements.
   Conclusion: Our approach facilitates the alignment of acceptance tests with the actual requirements and can improve the communication between requirements engineers and testers.
C1 [Hotomski, Sofija; Glinz, Martin] Univ Zurich, Dept Informat, Zurich, Switzerland.
C3 University of Zurich
RP Hotomski, S (corresponding author), Univ Zurich, Dept Informat, Zurich, Switzerland.
EM hotomski@ifi.uzh.ch; glinz@ifi.uzh.ch
FU Swiss National Science Foundation [200021-157004/1]; Swiss National
   Science Foundation (SNF) [200021_157004] Funding Source: Swiss National
   Science Foundation (SNF)
FX We thank our experts and their companies for investing time and effort
   into the evaluation of our approach. This work was partially funded
   bythe Swiss National Science Foundation under grant 200021-157004/1.
CR Adzic Gojko., 2009, Bridging the communication gap: specification by example and agile acceptance testing
   [Anonymous], 2016, ARXIV160306042
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arora C, 2015, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2015.7320403
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Ben Charrada Eya, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P61, DOI 10.1109/RE.2012.6345840
   Bjarnason E, 2017, REQUIR ENG, V22, P1, DOI 10.1007/s00766-015-0233-3
   Bjarnason E, 2014, EMPIR SOFTW ENG, V19, P1809, DOI 10.1007/s10664-013-9263-y
   Borg M., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering. ASE'14, P891
   Borg M, 2017, IEEE T SOFTWARE ENG, V43, P675, DOI 10.1109/TSE.2016.2620458
   Borg M, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P72, DOI 10.1109/TEFSE.2013.6620158
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   Dit B, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P540, DOI 10.1145/2591062.2591064
   Escalona MJ, 2011, J SYST SOFTWARE, V84, P1379, DOI 10.1016/j.jss.2011.03.051
   Goel A., 2006, 2 INT S LEV APPL FOR, P347
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   Granda MF, 2014, 2014 IEEE 1ST INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P39, DOI 10.1109/RET.2014.6908678
   Hagenbuch J.S.C., TEXT DIFF ENGINE PER
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hotomski S., 2018, 26 IEEE INT REQ ENG
   Hotomski S, 2018, PROC IEEE ACM INT C, P49, DOI 10.1145/3183440.3183484
   Hotomski S, 2018, LECT NOTES COMPUT SC, V10753, P247, DOI 10.1007/978-3-319-77243-1_15
   Hotomski S, 2016, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2016.37
   Hotomski Sofija, 2017, 4 WORKSH REQ ENG TES
   Katara M., 2006, HAIF VER C, P219, DOI DOI 10.1007/978-3-540-70889-6_17
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Moketar NA, 2016, IEEE INT CONF AUTOM, P864, DOI 10.1145/2970276.2970295
   Nair S, 2013, S VIS LANG HUM CEN C, P222, DOI 10.1109/RE.2013.6636722
   Post H, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P295, DOI 10.1109/RE.2009.43
   Riebisch M, 2003, LECT NOTES COMPUT SC, V2591, P394
   Rus V., 2013, P 51 ANN M ASS COMP, P163
   Sinha V, 2006, IEEE SOFTWARE, V23, P52, DOI 10.1109/MS.2006.123
   Wiggers Chanoch, 2004, PROFESSIONAL APACHE
NR 35
TC 3
Z9 4
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 17
EP 38
DI 10.1016/j.infsof.2019.01.011
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Yuan, WZ
   Nguyen, HH
   Jiang, LX
   Chen, YT
   Zhao, JJ
   Yu, HB
AF Yuan, Weizhao
   Nguyen, Hoang H.
   Jiang, Lingxiao
   Chen, Yuting
   Zhao, Jianjun
   Yu, Haibo
TI API recommendation for event-driven Android application development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android programming; Event callbacks; Code search; API recommendation;
   Information retrieval
ID SEARCH ENGINE
AB Context: Software development is increasingly dependent on existing libraries. Developers need help to find suitable library APIs. Although many studies have been proposed to recommend relevant functional APIs that can be invoked for implementing a functionality, few studies have paid attention to an orthogonal need associated with event-driven programming frameworks, such as the Android framework. In addition to invoking functional APIs, Android developers need to know where to place functional code according to various events that may be triggered within the framework.
   Objective: This paper aims to develop an API recommendation engine for Android application development that can recommend both (1) functional APIs for implementing a functionality and (2) the event callback APIs that are to be overridden to contain the functional code.
   Method: We carry out an empirical study on actual Android programming questions from StackOverflow to confirm the need of recommending callbacks. Then we build Android-specific API databases to contain the correlations among various functionalities and APIs, based on customized parsing of code snippets and natural language processing of texts in Android tutorials and SDK documents, and then textual and code similarity metrics are adapted for recommending relevant APIs.
   Results: We have evaluated our prototype recommendation engine, named LibraryGuru, with about 1500 questions on Android programming from StackOverflow, and demonstrated that our top-5 results on recommending callbacks and functional APIs can on estimate achieve up to 43.5% and 50.9% respectively in precision, 24.6% and 32.5% respectively in mean average precision (MAP) scores, and 51.1% and 44.0% respectively in recall.
   Conclusion: We conclude that it is important and possible to recommend both functional APIs and callbacks for Android application development, and future work is needed to take more data sources into consideration to make more relevant recommendations for developers needs.
C1 [Yuan, Weizhao; Chen, Yuting] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
   [Yuan, Weizhao; Nguyen, Hoang H.; Jiang, Lingxiao] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Zhao, Jianjun] Kyushu Univ, Fac Informat Sci & Elect Engn, Fukuoka, Fukuoka, Japan.
   [Yu, Haibo] Shanghai Jiao Tong Univ, Sch Software, Shanghai, Peoples R China.
C3 Shanghai Jiao Tong University; Singapore Management University; Kyushu
   University; Shanghai Jiao Tong University
RP Chen, YT (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.; Jiang, LX (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.; Zhao, JJ (corresponding author), Kyushu Univ, Fac Informat Sci & Elect Engn, Fukuoka, Fukuoka, Japan.; Yu, HB (corresponding author), Shanghai Jiao Tong Univ, Sch Software, Shanghai, Peoples R China.
EM weizhaoy@163.com; mr.erichoang@gmail.com; lxjiang@smu.edu.sg;
   chenyt@cs.sjtu.edu.cn; zhao@ait.kyushu-u.ac.jp; haibo_yu@sjtu.edu.cn
RI Nguyen, Hoang H./GZH-2262-2022; 陈, 钰婷/HZJ-7917-2023; Jiang,
   Lingxiao/E-8553-2012
OI Nguyen, Hoang H./0000-0003-0611-4634; Jiang,
   Lingxiao/0000-0002-4336-8548
FU 973 Program in China [2015CB352203]; Singapore Ministry of Education
   (MOE) Academic Research Fund (AcRF) Tier 1 Grant [C220/MSS16C003];
   National Natural Science Foundation of China [61572312]
FX This work was supported by the 973 Program in China (grant no.
   2015CB352203), the Singapore Ministry of Education (MOE) Academic
   Research Fund (AcRF) Tier 1 Grant (fund no. C220/MSS16C003), and the
   National Natural Science Foundation of China (grant no. 61572312). We
   greatly appreciate the supports from our funding agencies and useful
   feedback from anonymous reviewers.
CR Afroozeh Ali., 2015, PROC ACM INT S NEW I, DOI DOI 10.1145/2814228.2814242
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], An Introduction to Information Retrieval
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Bruch M., 2008, P 2008 INT WORKSHOP, P16, DOI DOI 10.1145/1454247.1454254
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   BUSTILLOS RAMIREZ Linda Maria, 2016, THESIS
   Campos Eduardo C., 2016, P 26 ANN INT C COMPU, P232
   CHAN WK, 2012, P ACM SIGSOFT 20 INT, P1
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Dong L, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P731
   Duala-Ekoko E, 2011, LECT NOTES COMPUT SC, V6813, P79, DOI 10.1007/978-3-642-22655-7_5
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guerrouj L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P639, DOI 10.1109/ICSE.2015.212
   Hajeer S. I., 2012, Int. J. Comput. Appl., V53, P14, DOI DOI 10.5120/8440-2224
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Heidarian A, 2016, PROCEEDINGS 2016 IEEE SECOND INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING SERVICE AND APPLICATIONS (BIGDATASERVICE 2016), P142, DOI 10.1109/BigDataService.2016.14
   Nguyen HA, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P166, DOI 10.1145/2635868.2635924
   Ichinco M, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P1105, DOI 10.1145/3025453.3025827
   Kechagia M, 2015, EMPIR SOFTW ENG, V20, P1785, DOI 10.1007/s10664-014-9343-7
   Klein D, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P423, DOI 10.3115/1075096.1075150
   Loper E, 2002, ETMTNLP 02 P ACL 02, P63, DOI [10.3115/1225403.1225421, DOI 10.3115/1225403.1225421, DOI 10.3115/1118108.1118117]
   LUHN HP, 1957, IBM J RES DEV, V1, P309, DOI 10.1147/rd.14.0309
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   McMillan C., 2010, Proceedings of the 2Nd International Workshop on Recommendation Systems for Software Engineering, RSSE'10, P21
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Moritz E, 2013, IEEE INT CONF AUTOM, P646, DOI 10.1109/ASE.2013.6693127
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Parr T, 2014, ACM SIGPLAN NOTICES, V49, P579, DOI [10.1145/2714064.2660202, 10.1145/2660193.2660202]
   Ponzanelli L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P686, DOI 10.1145/2591062.2591081
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Richardson L., 2017, BEAUTIFUL SOUP
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Robillard MP, 2015, EMPIR SOFTW ENG, V20, P1558, DOI 10.1007/s10664-014-9323-y
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard Martin P., 2014, Recommendation Systems in Software Engineering, P15, DOI [10.1007/978-3-642-45135-5, DOI 10.1007/978-3-642-45135-5]
   Rodeghero P, 2017, 2017 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P3, DOI 10.1109/WAPI.2017.3
   Roos P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P757, DOI 10.1109/ICSE.2015.240
   Saied MA, 2015, INT C PROGRAM COMPRE, P71, DOI 10.1109/ICPC.2015.16
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Shi W, 2015, 2015 THIRD INTERNATIONAL CONFERENCE ON ADVANCED CLOUD AND BIG DATA, P296, DOI 10.1109/CBD.2015.55
   SPARCKJONES K, 1972, J DOC, V28, P11, DOI 10.1108/eb026526
   Subhashini R., 2010, Proceedings of the 2010 First International Conference on Integrated Intelligent Computing (ICIIC 2010), P27, DOI 10.1109/ICIIC.2010.42
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Nguyen T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1013, DOI 10.1145/2950290.2983931
   Thung F, 2017, IEEE TETCI, V1, P145, DOI 10.1109/TETCI.2017.2699222
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Turpin A., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P11, DOI 10.1145/1148170.1148176
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wu JW, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P30, DOI 10.1109/SATE.2016.12
   Xie FF, 2016, LECT NOTES COMPUT SC, V10065, P15, DOI 10.1007/978-3-319-49178-3_2
   Ye Y., 2007, P 5 INT S PRINCIPLES, P41, DOI DOI 10.1145/1294325.1294332
   Yessenov K, 2017, ACM SIGPLAN NOTICES, V52, P64, DOI [10.1145/3062341.3062386, 10.1145/3140587.3062386]
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Yu HB, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P45, DOI 10.1145/2993717.2993727
   Yuan W., 2018, 40 INT C SOFTW ENG I
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhang HY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P956, DOI 10.1145/2950290.2983955
   Zheng FC, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-017-9156-8
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhu Z., 2013, P 5 AS PAC S INT, DOI 10.1145/2532443.2532470
NR 76
TC 26
Z9 26
U1 1
U2 28
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 30
EP 47
DI 10.1016/j.infsof.2018.10.010
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kuttarl, SK
   Sarma, A
   Rothermel, G
   Wang, ZD
AF Kuttarl, Sandeep Kaur
   Sarma, Anita
   Rothermel, Gregg
   Wang, Zhendong
TI What happened to my application? Helping end users comprehend evolution
   through variation management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE End-user programming; End-user software engineering; App inventor;
   Variation management
ID SOFTWARE; VARIABILITY; SYSTEM; CODE
AB Context: Millions of end users are creating software applications. These end users typically do not have clear requirements in mind; instead, they debug their programs into existence and reuse their own or other persons' code. These behaviors often result in the creation of numerous variants of programs. Current end-user programming environments do not provide support for managing such variants.
   Objective: We wish to understand the variant creation behavior of end user programmers. Based on this understanding we wish to develop an automated system to help end user programmers efficiently manage variants.
   Method: We conducted an on-line survey to understand when and how end-user programmers create program variants and how they manage them. Our 124 survey respondents were recruited via email from among non computer science majors who had taken at least one course in the computer science department at our university; the respondents were involved in the Engineering, Sciences, Arts, and Management fields. Based on the results of this survey we identified a set of design requirements for providing variation management support for end users. We implemented variation management support in App Inventor - a drag and drop programming environment for creating mobile applications. Our support, AppinventorHelper, is meant to help end-user programmers visualize the provenance of and relationships among variants. We conducted a think-aloud study with 10 participants to evaluate the usability of AppinventorHelper. The participants were selected on a first come, first-served basis from those who responded to our recruitment email sent to list-servers. They were all end users majoring in electrical engineering, mechanical engineering, or physics. None had formal training in software engineering methods, but all had some experience with visual programming languages.
   Results: Our (user study) results indicate that AppinventorHelper can help end users navigate through variants and find variants that could be utilized cost-effectively as examples or actual code upon which to build new applications. For example, in one of our empirical studies end users explored variants of a paint application in order to find a variant that could easily be extended to incorporate a new feature.
   Conclusions: Our survey results show that end users do indeed reuse program variants and suggest that understanding the differences between variants is important. Further, end users prefer running code and looking at outputs, accessing source code and meta information such as filenames, referring to the creation and update dates of programs, and having information on the authors of code. When selecting variants users prefer to look at their major features such as correctness, similarity and authorship information. End users rely primarily on memory to track changes. They seldom make use of online or configuration management tools. Hence, integrated domain-specific variation management tools like AppInventorHelper can significantly help improve users' interactions with the system. A key contribution of our work is a set of design requirements for end-user programming environments that facilitate the management and understanding of the provenance of program variants.
C1 [Kuttarl, Sandeep Kaur] Univ Tulsa, Tulsa, OK 74104 USA.
   [Sarma, Anita] Oregon State Univ, Corvallis, OR 97331 USA.
   [Rothermel, Gregg] Univ Nebraska, Lincoln, NE 68583 USA.
   [Wang, Zhendong] Univ Calif Irvine, Irvine, CA 92717 USA.
C3 University of Tulsa; Oregon State University; University of Nebraska
   System; University of Nebraska Lincoln; University of California System;
   University of California Irvine
RP Kuttarl, SK (corresponding author), Univ Tulsa, Tulsa, OK 74104 USA.
EM sandeep-kuttal@utulsa.edu
OI Kuttal, Sandeep Kaur/0000-0002-2610-5308; Sarma,
   Anita/0000-0002-1859-1692
CR Allkin B., 2017, Useful plants-medicines: at least 28,187 plant species are currently recorded as being of medicinal use
   [Anonymous], 2006, END USER DEV
   [Anonymous], 1977, BIOMETRICS
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 2013, P SIGCHI C HUMAN FAC, DOI DOI 10.1145/2470654.2466213
   [Anonymous], DESIGNING CONDUCTING
   [Anonymous], 2011, P ICKDDM
   Apel Sven, 2009, OVERVIEW FEATURE ORI
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Beckwith L, 2006, COMPUTER, V39, P97, DOI 10.1109/MC.2006.382
   Benedek Joey., 2002, Proceedings of Usability Professionals Association, V2003, P57
   Blackwell AF, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P2, DOI 10.1109/HCC.2002.1046334
   Boucher Q., 2010, Proceedings of the International Conference on Automated Software Engineering, ASE '10, P333
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Brandt J, 2009, IEEE SOFTWARE, V26, P18, DOI 10.1109/MS.2009.147
   Burnett M., 2010, ESEM 2010
   Burnett MM, 2011, INTERACT COMPUT, V23, P450, DOI 10.1016/j.intcom.2011.06.004
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Cypher A., 2010, No Code Required: Giving Users Tools to Transform the Web
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Erwig M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063245
   Estublier J., 2002, Software Engineering Notes, V27, P31, DOI 10.1145/571681.571689
   Fei Cao, 2003, International Conference on Software Engineering Research and Practice - SERP'03, P944
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   GNU, 2009, THE C PREPR
   Hartmann B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P493
   Hartmann B, 2008, UIST 2008: PROCEEDINGS OF THE 21ST ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P91, DOI 10.1145/1449715.1449732
   Hofner P., 2006, LECT NOTES COMPUTER, V4085
   Jones M, 2011, S VIS LANG HUM CEN C, P9, DOI 10.1109/VLHCC.2011.6070372
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Karlson A.K., 2011, P ACM C HUM FACT COM
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Krueger C. W., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P37
   Kumar R, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2197
   Kuttal Sandeep Kaur, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P25, DOI 10.1007/978-3-642-21530-8_4
   Kuttal S.K., 2014, THESIS
   Kuttal S. K., 2014, ACM T SOFTW ENG METH, V21
   Kuttal SK, 2011, S VIS LANG HUM CEN C, P69, DOI 10.1109/VLHCC.2011.6070381
   La Rosa M, 2009, SOFTW SYST MODEL, V8, P251, DOI 10.1007/s10270-008-0090-3
   Le D, 2011, S VIS LANG HUM CEN C, P143, DOI 10.1109/VLHCC.2011.6070391
   Lewis C.H., 1982, NON TRADITIONAL REF
   MacKay S. A., 1995, Software Configuration Management. ICSE SCM-4 and SCM-5 Workshops. Selected Papers, P180
   Martinez J, 2014, LECT NOTES COMPUT SC, V8569, P117
   Mezini M., 2004, Software Engineering Notes, V29, P127, DOI 10.1145/1041685.1029915
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R, 2012, IEEE INT CONF AUTOM, P110, DOI 10.1145/2351676.2351693
   Ragavan SS, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6232, DOI 10.1145/3025453.3025818
   Ragavan SS, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3509, DOI 10.1145/2858036.2858469
   Rosson Mary Beth, 1996, ACM Transactions on ComputerHuman Interaction (TOCHI), V3, P219
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Scaffidi C, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P207, DOI 10.1109/VLHCC.2005.34
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Seaman C.B., QUALITATIVE METHODS
   Sheard T., 2001, Semantics, Applications, and Implementation of Program Generation. Second International Workshop, SAIG 2001. Proceedings (Lecture Notes in Computer Science Vol.2196), P2
   Sheard T., 2016, TAXONOMY METAPROGRAM
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Stolee KT, 2013, INFORM SOFTWARE TECH, V55, P1289, DOI 10.1016/j.infsof.2012.10.004
   TEEVAN J., 2004, CHI
   Terry M., 2004, P SIGCHI C HUMAN FAC, P711, DOI DOI 10.1145/985692.985782
   Terry Michael, 2002, Proceedings of the ACM Symposium on User Interface Software and Technology, P71, DOI 10.1145/571985.571996
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Wolber D, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P601
   Young Seok Yoon, 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P138, DOI 10.1109/CHASE.2012.6223012
NR 70
TC 2
Z9 2
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 55
EP 74
DI 10.1016/j.infsof.2018.06.008
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000004
DA 2024-07-18
ER

PT J
AU Rios, N
   Neto, MGD
   Spínola, RO
AF Rios, Nicolli
   de Mendonca Neto, Manoel Gomes
   Spinola, Rodrigo Oliveira
TI A tertiary study on technical debt: Types, management strategies,
   research trends, and base information for practitioners
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Technical debt types; Management strategies; Tertiary
   study
ID SYSTEMATIC LITERATURE-REVIEWS; SOFTWARE
AB Context: The concept of technical debt (TD) contextualizes problems faced during software evolution considering the tasks that are not carried out adequately during its development. Currently, it is common to associate any impediment related to the software product and its development process to the definition of TD. This can bring confusion and ambiguity in the use of the term. Besides, due to the increasing amount of work in the area, it is difficult to have a comprehensive view of the plethora of proposals on TD management.
   Objective: This paper intends to investigate the current state of research on TD by identifying what research topics have been considered, organizing research directions and practical knowledge that has already been defined, identifying the known types of TD, and organizing what activities, strategies and tools have been proposed to support the management of TD.
   Method: A tertiary study was performed based on a set of five research questions. In total, 13 secondary studies, dated from 2012 to March 2018, were evaluated.
   Results: The results of this tertiary study are beneficial for both practitioners and researchers. We evolved a taxonomy of TD types, identified a list of situations in which debt items can be found in software projects, and organized a map representing the state of the art of activities, strategies and tools to support TD management. Besides, we also summarized some research directions and practical knowledge, and identified the research topics that have been more considered in secondary studies.
   Conclusion: This tertiary study revisited the TD landscape. Its results can help to identify points that still require further investigation in TD research.
C1 [Rios, Nicolli; de Mendonca Neto, Manoel Gomes] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [Spinola, Rodrigo Oliveira] Univ Salvador, Grad Program Syst & Comp, Salvador, BA, Brazil.
   [de Mendonca Neto, Manoel Gomes; Spinola, Rodrigo Oliveira] Univ Fed Bahia, Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
C3 Universidade Federal da Bahia; Universidad de El Salvador; Universidade
   Salvador (UNIFACS); Universidade Federal da Bahia
RP Spínola, RO (corresponding author), Univ Salvador, Grad Program Syst & Comp, Salvador, BA, Brazil.; Spínola, RO (corresponding author), Univ Fed Bahia, Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
EM manoel.mendonca@ufba.br; rodrigo.spinola@unifacs.br
RI Mendonca, Manoel/A-1579-2011
OI Mendonca, Manoel/0000-0002-0874-7665
FU CNPq Universal 2014 grant [458261/2014-9]; State of Bahia's
   SECTI-Fraunhofer-UFBa [2012-1]
FX This work was partially supported by CNPq Universal 2014 grant
   458261/2014-9 and by the State of Bahia's SECTI-Fraunhofer-UFBa
   cooperation agreement 2012-1. The authors also would like to thank Prof.
   Dr. Carolyn Seaman from University of Maryland Baltimore County and
   Prof. Dr. Daniela Cruzes from SINTEF by their contributions reviewing
   this paper.
CR Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves N. S. R., 2015, AM C INF SYST
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P 2014 WINT SIM C PI
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Bano M, 2014, IEEE INT WORKS EMPIR, P9, DOI 10.1109/EmpiRE.2014.6890110
   Besker T., 2017, P 2017 20 IB AM C SO
   Besker T, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P189, DOI 10.1109/SEAA.2016.42
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cunningham W., 1993, OOPS Messenger, V4, P29
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Farias MAD, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P369, DOI 10.5220/0005914503690378
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   dos Santos Alinne C. C., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), DOI 10.1109/ICGSE.2012.42
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Ezhov V.F., 2007, PNPI RAS
   Fernández-Sánchez C, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P69, DOI 10.1109/MTD.2015.7332628
   Fernández-Sánchez C, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P22, DOI 10.1109/SAM.2015.11
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Guo Y., 2011, MTD WORKSH
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Izurieta C., 2016, 1 INT WORKSH TECHN D
   Izurieta C., MAN TECHN DEBT MTD 2, P2326
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Khan AA, 2017, COMM COM INF SC, V748, P177, DOI 10.1007/978-3-319-64218-5_14
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Maldonado E., 2017, IEEE T SOFTWARE ENG, P1
   Marimuthu C, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P143, DOI 10.1145/3106195.3106212
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   Matalonga S., 2013, AN CIBSE13 C IB AM E, P33
   Mendes T. S., 2015, 17 INT C ENT INF SYS
   Mendes T. S., 2017, 5 WORKSH VIS EV MAN
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Nord R., 2012, WICSA ECSA 2012 IEEE
   Nurdiani I, 2016, J SYST SOFTWARE, V119, P162, DOI 10.1016/j.jss.2016.06.043
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersson H, 2004, J SYST SOFTWARE, V72, P249, DOI 10.1016/S0164-1212(03)00090-6
   Pillai S. P., 2017, REG 10 C TENCON 2017, DOI [10.1109/TENCON.2017, DOI 10.1109/TENCON.2017]
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Ribeiro L., P 18 INT C ENT INF S, V1, P572
   Salleh N., 2014, 5 INT C INF COMM TEC, P1
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Seaman C., 2011, ADV COMPUT, V82
   Spínola RO, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P1, DOI 10.1109/MTD.2013.6608671
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P93, DOI 10.1109/CHASE.2013.6614739
   Tom E., 2012, P 20 EUR C INF SYST, P16
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Verner JM, 2014, INFORM SOFTWARE TECH, V56, P54, DOI 10.1016/j.infsof.2013.06.005
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Zhang H, 2013, INFORM SOFTWARE TECH, V55, P1341, DOI 10.1016/j.infsof.2012.09.008
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zhou You, 2015, P 19 INT C EVALUATIO, P14
NR 69
TC 112
Z9 115
U1 2
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2018
VL 102
BP 117
EP 145
DI 10.1016/j.infsof.2018.05.010
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO6AL
UT WOS:000440116400008
DA 2024-07-18
ER

PT J
AU Jarczyk, O
   Jaroszewicz, S
   Wierzbicki, A
   Pawlak, K
   Jankowski-Lorek, M
AF Jarczyk, Oskar
   Jaroszewicz, Szymon
   Wierzbicki, Adam
   Pawlak, Kamil
   Jankowski-Lorek, Michal
TI Surgical teams on GitHub: Modeling performance of GitHub project
   development processes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open source software (OSS); Development process performance; Issue
   closure rate; Work centralization; Issue workflow; Surgical team
ID QUALITY; SUCCESS
AB Context: Better methods of evaluating process performance of OSS projects can benefit decision makers who consider adoption of OSS software in a company. This article studies the closure of issues (bugs and features) in GitHub projects, which is an important measure of OSS development process performance and quality of support that project users receive from the developer team.
   Objective: The goal of this article is a better understanding of the factors that affect issue closure rates in OSS projects.
   Methodology: The GHTorrent repository is used to select a large sample of mature, active OSS projects. Using survival analysis, we calculate short-term, and long-term issue closure rates. We formulate several hypotheses regarding the impact of OSS project and team characteristics, such as measures of work centralization, measures that reflect internal project workflows, and developer social networks measures on issue closure rates. Based on the proposed features and several control features, a model is built that can predict issue closure rate. The model allows to test our hypotheses.
   Results: We find that large teams that have many project members have lower issue closure rates than smaller teams. Similarly, increased work centralization increases issue closure rates. While desirable social network characteristics have a positive impact on the amount of commits in a project, they do not have significant influence on issue closure.
   Conclusion: Overall, findings from empirical analysis support the classic notion of Brook's - the "surgical team" - in the context of OSS project development process performance on GitHub. The model of issue closure rates proposed in this article is a first step towards an improved understanding and prediction of this important measure of OSS development process performance.
C1 [Jarczyk, Oskar; Wierzbicki, Adam; Pawlak, Kamil; Jankowski-Lorek, Michal] Polish Japanese Acad Informat Technol, Ul Koszykowa 86, PL-02008 Warsaw, Poland.
   [Jaroszewicz, Szymon] Polish Acad Sci, Inst Comp Sci, Ul Jana Kazimierza 5, PL-01248 Warsaw, Poland.
C3 Polsko-Japonska Akademia Technik Komputerowych; Polish Academy of
   Sciences; Institute of Computer Science of the Polish Academy of
   Sciences
RP Wierzbicki, A (corresponding author), Polish Japanese Acad Informat Technol, Ul Koszykowa 86, PL-02008 Warsaw, Poland.
EM oskar.jarczyk@pja.edu.pl; szymon.jaroszewicz@ipipan.waw.pl;
   adamw@pjwstk.edu.pl; s3181@pja.edu.pl; fooky@pja.edu.pl
RI Jaroszewicz, Szymon/ISB-6782-2023; Wierzbicki, Adam/C-7869-2013
OI Jaroszewicz, Szymon/0000-0001-9327-5019; Wierzbicki,
   Adam/0000-0003-0075-7030
FU Polish National Science Centre [2012/05/B/ST6/03364]
FX This work is supported by the Polish National Science Centre grant
   2012/05/B/ST6/03364.
CR Adamic LA, 2003, SOC NETWORKS, V25, P211, DOI 10.1016/S0378-8733(03)00009-1
   Adewumi A, 2013, IERI PROC, V4, P88, DOI 10.1016/j.ieri.2013.11.014
   Agresti  A., 2018, INTRO CATEGORICAL DA
   Aksulu A, 2010, J ASSOC INF SYST, V11, P576
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 1901, B SOC VAUD SCI N
   [Anonymous], 2010, 2010 IEEE ACIS 9 INF
   [Anonymous], 2010, P 6 INT S WIK OP COL, DOI DOI 10.1145/1832772.1832806
   Bachmann Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P62, DOI 10.1109/MSR.2010.5463286
   Bahamdain SS, 2015, PROCEDIA COMPUT SCI, V56, P459, DOI 10.1016/j.procs.2015.07.236
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Chavent M, 2012, J STAT SOFTW, V50, P1
   Chengalur-Smith I, 2010, J ASSOC INF SYST, V11, P657
   Chou SW, 2011, INFORM SYST J, V21, P195, DOI [10.1111/j.1365-2575.2009.00347.x, 10.1111/J.1365-2575.2009.00347.x]
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   del Bianco V, 2011, IEEE SOFTWARE, V28, P67, DOI 10.1109/MS.2011.93
   DICE LR, 1945, ECOLOGY, V26, P297, DOI 10.2307/1932409
   Ferenc Rudolf., 2014, Evolving Software Systems, P65, DOI DOI 10.1007/978-3-642-45398-4_3
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Fox J., 2018, R COMPANION APPL REG
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Gini C., 1936, COWLES COMM, V2
   Gini C., 1921, ECON J, V31, P124, DOI [DOI 10.2307/2223319, 10.2307/2223319]
   Hothorn T, 2008, BIOMETRICAL J, V50, P346, DOI 10.1002/bimj.200810425
   Hupa A, 2010, COMPUT COMMUN NETW S, P319, DOI 10.1007/978-1-84882-229-0_12
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Jarczyk O, 2014, LECT NOTES COMPUT SC, V8851, P80, DOI 10.1007/978-3-319-13734-6_6
   Kalbfleisch J D, 2002, STAT ANAL FAILURE TI
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kittur A, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P37
   Kumar AR, 2013, PROCEEDINGS OF 2013 INTERNATIONAL CONFERENCE ON CIRCUITS, POWER AND COMPUTING TECHNOLOGIES (ICCPCT 2013), P63
   Marks L., 2011, P 7 INT C PRED MOD S, P11
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Michlmayr M, 2006, EC OPEN SOURCE SOFTW, P131
   Midha V, 2012, J SYST SOFTWARE, V85, P895, DOI 10.1016/j.jss.2011.11.010
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   Newman M., 2010, Networks: an introduction, DOI [10.1162/artl_r_00062, 10.1093/acprof:oso/9780199206650.001.0001]
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Pinzger M, 2016, EMPIR SOFTW ENG, V21, P2033, DOI 10.1007/s10664-016-9450-8
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Sen R, 2015, PAC ASIA J ASSOC INF, V7, P1
   Singh PV, 2011, MIS QUART, V35, P813
   Smith TJ., 2013, Multiple Linear Regres Viewpoints, V39, P17, DOI DOI 10.1201/9780429066665-6
   Srensen T., 1948, K DANSKE VIDENSK SEL, V5, P1, DOI DOI 10.1234/12345678
   Stol K., 2010, FLOSS-3, P17, DOI [10.1145/1833272.1833276, DOI 10.1145/1833272.1833276]
   Subramaniam C, 2009, DECIS SUPPORT SYST, V46, P576, DOI 10.1016/j.dss.2008.10.005
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   TUKEY JW, 1949, BIOMETRICS, V5, P99, DOI 10.2307/3001913
   Turek Piotr, 2010, Proceedings of the 2010 IEEE Second International Conference on Social Computing (SocialCom 2010). the Second IEEE International Conference on Privacy, Security, Risk and Trust (PASSAT 2010), P17, DOI 10.1109/SocialCom.2010.13
   Turek P, 2011, IEEE POTENTIALS, V30, P15, DOI 10.1109/MPOT.2011.940892
   Wang J, 2012, EUR MANAG J, V30, P352, DOI 10.1016/j.emj.2012.03.001
   Wang J, 2012, J BUS RES, V65, P977, DOI 10.1016/j.jbusres.2011.04.014
   Weisberg S., 1985, APPL LINEAR REGRESSI, DOI DOI 10.1002/BIMJ.4710300746
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wen W., 2010, ICIS, P187
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zou WQ, 2015, P INT COMP SOFTW APP, P254, DOI 10.1109/COMPSAC.2015.57
NR 65
TC 19
Z9 24
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 32
EP 46
DI 10.1016/j.infsof.2018.03.010
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GJ1VN
UT WOS:000435056100003
OA hybrid
DA 2024-07-18
ER

PT J
AU Souza, MRD
   Veado, L
   Moreira, RT
   Figueiredo, E
   Costa, H
AF Souza, Mauricio R. de A.
   Veado, Lucas
   Moreira, Renata Teles
   Figueiredo, Eduardo
   Costa, Heitor
TI A systematic mapping study on game-related methods for software
   engineering education
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering education; Game-based learning; Gamification; Game
   development based learning
ID GAMIFICATION
AB Context The use of games in software engineering education is not new. However, recent technologies have provided new opportunities for using games and their elements to enhance learning and student engagement.
   Objective: The goal of this paper is twofold. First, we discuss how game-related methods have been used in the context of software engineering education by means of a systematic mapping study. Second, we investigate how these game-related methods support specific knowledge areas from software engineering. By achieving these goals, we aim not only to characterize the state of the art on the use of game-related methods on software engineering education, but also to identify gaps and opportunities for further research.
   Method: We carried out a systematic mapping study to identify primary studies which address the use, proposal or evaluation of games and their elements on software engineering education. We classified primary studies based on type of approaches, learning goals based on software engineering knowledge areas, and specific characteristics of each type of approach.
   Results: We identified 156 primary studies, published between 1974 and June 2016. Most primary studies describe the use of serious games (86) and game development (57) for software engineering education, while Gamification is the least explored method (10). Learning goals of these studies and their development of skills are mostly related to the knowledge areas of "Software Process", "Software Design", and "Professional Practices".
   Conclusions: The use of games in software engineering education is not new. However, there are some knowledge areas where the use of games can still be further explored. Gamification is a new trend and existing research in the field is quite preliminary. We also noted a lack of standardization both in the definition of learning goals and in the classification of game-related methods.
C1 [Souza, Mauricio R. de A.; Veado, Lucas; Figueiredo, Eduardo] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
   [Moreira, Renata Teles; Costa, Heitor] Univ Fed Lavras, Dept Comp Sci, Lavras, MG, Brazil.
C3 Universidade Federal de Minas Gerais; Universidade Federal de Lavras
RP Souza, MRD (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
EM mrasouza@dcc.ufmg.br; furtini@dcc.ufmg.br; renata@dcc.ufla.br;
   figueiredo@dcc.ufmg.br; heitor@dcc.ufla.br
OI Souza, Mauricio/0000-0002-0182-8016
FU Brazilian funding agency: CNPq [424340/2016-0, 142022/2017-9]; Brazilian
   funding agency: CAPES; Brazilian funding agency: FAPEMIG [PPM-00651-17]
FX This research was partially supported by Brazilian funding agencies:
   CNPq (grant 424340/2016-0 and 142022/2017-9), CAPES, and FAPEMIG (grant
   PPM-00651-17).
CR Akpolat B. S., 2014, IEEE C SOFTW ENG ED
   Andriano N., 2011, IEEE CS C SOFTW ENG
   [Anonymous], 2011, Modern Applied Science
   [Anonymous], 2009, IEEE Computer Society
   Baker A, 2005, J SYST SOFTWARE, V75, P3, DOI 10.1016/j.jss.2004.02.033
   Baker A, 2003, PROC INT CONF SOFTW, P614, DOI 10.1109/ICSE.2003.1201245
   Battistella Paulo Eduardo, 2016, ITEE - IEEE Technology and Engineering Education, V9, P8
   Caulfield C., 2011, MODERN APPL SCI, V5, P87, DOI DOI 10.5539/MAS.V5N5P87
   Cervantes H., 2016, P 38 INT C SOFTW ENG
   Denninger O., 2008, P COMP GAM ALL TECHN
   Deterding S, 2011, HUM FACT COMP SYST C
   Dicheva D, 2015, EDUC TECHNOL SOC, V18, P75
   Dubois D. J., 2013, JOINT M FDN SOFTW EN
   Heikkila V. T., 2016, P 38 INT C SOFTW ENG
   Herranz E, 2014, J UNIVERS COMPUT SCI, V20, P885
   IEEE & ACM JTFCC, 2015, IEEE ACM JOINT TASK
   Kosa M, 2016, J UNIVERS COMPUT SCI, V22, P1558
   Krusche S., 2016, ACM TECHN S COMP SCI
   Malik B., 2012, WORLD ACAD SCI ENG T
   Marques MR, 2014, PROC FRONT EDUC CONF
   Navarro E., 2009, ACM SIGCSE B, V41
   Navarro E. O., 2009, C SOFTW ENG ED TRAIN
   Oliveira C., 8 C EUR SOC FUZZ LOG
   Passos E. B., 2011, BRAZ S GAM DIG ENT S
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Peixoto D. C. C., 2014, IEEE FRONT ED C FIE
   Petersen K., 2007, 12 INT C EV ASS SOFT
   Petri G, 2017, COMPUT EDUC, V107, P68, DOI 10.1016/j.compedu.2017.01.004
   Savi  Rafael, 2011, 25 BRAZ S SOFTW ENG
   Souza M. R. A., 2017, IEEE 30 C SOFTW ENG
   Souza M. R. A., 2017, INT C SOFTW EBG ICSE
   Tillmann N., 2014, P 2014 INT S SOFTW T
   Uskov V., 2014, FRONT ED C FIE
   Wang AI, 2009, INT J COMPUT GAMES T, V2009, DOI 10.1155/2009/693267
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Wohlin C., 2012, Experimentation in Software Engineering
   Wu B., 2010, 3 IEEE INT C DIG GAM
   Wu B., 2011, IEEE INT GAM INN C I
   Wu B., 2012, INT J COMPUT GAMES T
   Wu Bian, 2009, 22 C SOFTW ENG ED TR
   Zichermann G., 2011, GAMIFICATION DESIGN
NR 41
TC 61
Z9 64
U1 1
U2 51
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 201
EP 218
DI 10.1016/j.infsof.2017.09.014
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800015
DA 2024-07-18
ER

PT J
AU Carrizo, D
   Dieste, O
   Juristo, N
AF Carrizo, Dante
   Dieste, Oscar
   Juristo, Natalia
TI Contextual attributes impacting the effectiveness of requirements
   elicitation Techniques: Mapping theoretical and empirical research
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Elicitation methods; Requirements elicitation; Contextual attributes;
   Systematic mapping study
ID KNOWLEDGE ACQUISITION; EXPERTS; COMMUNICATION; DEVELOPER; ISSUES
AB Background: Software engineers can utilise a myriad of elicitation techniques to capture relevant information in order to specify requirements. The effectiveness of these techniques varies depending on the context in which the elicitation takes place. So, it is important to identify the attributes that represent this context. Objective: This paper aims to match theoretical to empirical research on contextual attributes that influence elicitation technique effectiveness. Method: We conduct a systematic mapping study to identify proposed attributes (by theoretical works) and attributes studied empirically. Then we map empirical results with theoretical proposals. Results: 60% of theoretically proposed attributes have been studied empirically. There seems to be some degree of coordination between theory and empiricism. However, there is empirical confirmation of the impact of only a third of the theoretically proposed attributes. Conclusions: These results call for more empirical research in order to evaluate beliefs with respect to elicitation techniques. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Carrizo, Dante] Univ Atacama, Ave Copayapu 485, Copiapo, Chile.
   [Dieste, Oscar] Tech Univ Madrid, Madrid 28660, Spain.
   [Juristo, Natalia] Univ Oulu, Oulu, Finland.
C3 Universidad de Atacama; Universidad Politecnica de Madrid; University of
   Oulu
RP Carrizo, D (corresponding author), Univ Atacama, Ave Copayapu 485, Copiapo, Chile.
EM dante.carrizo@uda.cl; odieste@fi.upm.es; natalia.juristo@oulu.fi
RI Dieste, Oscar/K-6193-2014
OI Dieste, Oscar/0000-0002-3060-7853
FU Spanish Ministry of Economy and Competitiveness research grant
   [TIN2014-60490-P]
FX Research funded by the Spanish Ministry of Economy and Competitiveness
   research grant TIN2014-60490-P.
CR ADELMAN L, 1989, IEEE T SYST MAN CYB, V19, P483, DOI 10.1109/21.31055
   Agarwal R., 1990, Journal of Management Information Systems, V7, P123
   Ahmad R., 2012, 2012 IEEE Symposium on Computers & Informatics, P70, DOI 10.1109/ISCI.2012.6222669
   [Anonymous], 2000, P 22 INT C SOFTW ENG
   [Anonymous], P 9 INT C INF SYST
   [Anonymous], P 10 INT C QUAL INF
   [Anonymous], 2014, INT J INFORM COMPUTA
   [Anonymous], SEI92TR012 CARN MELL
   [Anonymous], P 6 INT C SOFTW ENG
   [Anonymous], P HUM FACT SOC 35
   [Anonymous], INTRO SYSTEMS ANAL
   [Anonymous], 2012, P 38 CONFERENCIA LAT, DOI DOI 10.1109/CLEI.2012.6427200
   [Anonymous], INNOVATIONS SOFTWARE
   [Anonymous], AN WER03 WORKSH ENG
   [Anonymous], J KNOWL ENG
   [Anonymous], P 9 ANN AM C INF SYS
   [Anonymous], ENTERPRISE INFORM SY
   BEYER HR, 1995, COMMUN ACM, V38, P45, DOI 10.1145/203356.203365
   Boulila N., 2011, 2011Fourth International Workshop on Multimedia and Enjoyable Requirements Engineering, P9, DOI 10.1109/MERE.2011.6043945
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Burton A. M., 1990, Knowledge Acquisition, V2, P167, DOI 10.1016/S1042-8143(05)80010-X
   BYRD TA, 1992, MIS QUART, V16, P117, DOI 10.2307/249704
   Carrizo D., 2008, WER08 XI Workshop Em Engenharia de Requisitos, P104
   Carrizo D, 2014, INFORM SOFTWARE TECH, V56, P644, DOI 10.1016/j.infsof.2014.01.009
   CHAO CJ, 1995, BEHAV INFORM TECHNOL, V14, P174, DOI 10.1080/01449299508914644
   Chiravuri A, 2011, J MANAGE INFORM SYST, V28, P311, DOI 10.2753/MIS0742-1222280110
   COOKE NJ, 1994, INT J HUM-COMPUT ST, V41, P801, DOI 10.1006/ijhc.1994.1083
   CORBRIDGE C, 1994, KNOWL ACQUIS, V6, P315, DOI 10.1006/knac.1994.1016
   Coulin C., 2006, Software Process Improvement and Practice, V11, P451, DOI 10.1002/spip.288
   Crandall B., 1989, ACM SIGART, V108, P144, DOI DOI 10.1145/63266.63288
   Damian DE, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P319, DOI 10.1109/ICRE.2002.1048545
   Davis A. M., 2002, Requirements Engineering, V7, P107, DOI 10.1007/s007660200007
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   Davis CJ, 2006, J COMPUT INFORM SYST, V46, P78, DOI 10.1080/08874417.2006.11645926
   Dhaliwal J. S., 1990, Knowledge Acquisition, V2, P145, DOI 10.1016/S1042-8143(05)80009-3
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Eva M, 2001, INFORM MANAGE, V39, P101, DOI 10.1016/S0378-7206(01)00082-9
   FAZLOLLAHI B, 1991, INFORM MANAGE, V21, P291, DOI 10.1016/0378-7206(91)90005-M
   Fowlkes JE, 2000, HUM FACTORS, V42, P24, DOI 10.1518/001872000779656615
   Goguen J.A., 1993, 1993 P IEEE INT S RE, P152, DOI DOI 10.1109/ISRE.1993.324822
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   HOFFMAN RR, 1995, ORGAN BEHAV HUM DEC, V62, P129, DOI 10.1006/obhd.1995.1039
   Holsapple CW, 2008, EXPERT SYST APPL, V35, P1084, DOI 10.1016/j.eswa.2007.08.004
   HOLSAPPLE CW, 1994, EXPERT SYST, V11, P77, DOI 10.1111/j.1468-0394.1994.tb00001.x
   Hua J, 2008, 2008 INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION, VOL I, PROCEEDINGS, P181, DOI 10.1109/IITA.2008.152
   Hudlicka E, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P4, DOI 10.1109/ICRE.1996.491424
   Jones SR, 1996, EXPERT SYST, V13, P277, DOI 10.1111/j.1468-0394.1996.tb00125.x
   Kausar Sumaira, 2010, 2010 6th International Conference on Emerging Technologies (ICET), P265, DOI 10.1109/ICET.2010.5638476
   KEIL M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203356.203363
   Kheirkhah E, 2008, INTERNATIONAL SYMPOSIUM OF INFORMATION TECHNOLOGY 2008, VOLS 1-4, PROCEEDINGS, P2455, DOI 10.1109/ITSIM.2008.4631895
   Kim J., 1988, Decision Support Systems, V4, P269, DOI 10.1016/0167-9236(88)90016-4
   Kitchenham B., 2004, ARXIV
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Li J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P269
   Lloyd WJ, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P311, DOI 10.1109/ICRE.2002.1048544
   Macaulay L, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P157, DOI 10.1109/ICRE.1996.491440
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Massey A. P., 1991, IEEE Transactions on Knowledge and Data Engineering, V3, P193, DOI 10.1109/69.87999
   Moody J. W., 1998, Journal of Management Information Systems, V15, P79
   Moore JM, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P35, DOI 10.1109/ASE.2000.873648
   Niknafs A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P181, DOI 10.1109/RE.2012.6345802
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Proynova R, 2010, LECT NOTES COMPUT SC, V6182, P17, DOI 10.1007/978-3-642-14192-8_3
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Rugg G., 1992, Knowledge Acquisition, V4, P279, DOI 10.1016/1042-8143(92)90019-W
   Saiedian H, 2000, INFORM SOFTWARE TECH, V42, P419, DOI 10.1016/S0950-5849(99)00101-9
   Sauer J, 2000, BEHAV INFORM TECHNOL, V19, P315, DOI 10.1080/014492900750000027
   Scapolo F, 2006, TECHNOL FORECAST SOC, V73, P679, DOI 10.1016/j.techfore.2006.03.001
   Serna M.E., 2012, 2012 7th Colombian Computing Congress (CCC). 2012 7th Colombian Computing Congress (CCC), P1, DOI [10.1109/ColombianCC.2012.6398001, DOI 10.1109/COLOMBIANCC.2012.6398001]
   SHARMA S., 2013, International Journal of Computer Applications, V75, P35, DOI [10.5120/13166-0889, DOI 10.5120/13166-0889]
   Tan K, 2010, INT J HUM-COMPUT ST, V68, P344, DOI 10.1016/j.ijhcs.2009.08.003
   Thew S, 2008, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2008.35
   Todoran I, 2013, S VIS LANG HUM CEN C, P105, DOI 10.1109/RE.2013.6636710
   Tsumaki T., 2006, Software Process Improvement and Practice, V11, P505, DOI 10.1002/spip.293
   Vale L., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P253, DOI 10.1109/SBES.2011.24
   Wagner WP, 2003, EXPERT SYST APPL, V24, P79, DOI 10.1016/S0957-4174(02)00085-4
   Zhang Z., 2007, SOFTWARE QUALITY MAN, P225
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 80
TC 8
Z9 8
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 194
EP 221
DI 10.1016/j.infsof.2017.08.003
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FJ9UO
UT WOS:000413127200013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Gupta, V
   Kapur, PK
   Kumar, D
AF Gupta, Viral
   Kapur, P. K.
   Kumar, Deepak
TI Modeling and measuring attributes influencing DevOps implementation in
   an enterprise using structural equation modeling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE DevOps; Continuous Delivery; Exploratory and Confirmatory Factor;
   Analysis; Structural Equation Modelling; Two-way assessment; Enterprise
   applications
ID BARRIERS
AB Context: DevOps refer to set of principles that advocate a tight integration between development and operation to achieve higher quality with faster turnaround. It is paramount to assess and measure the DevOps attributes in an enterprise. The literature provides references to these attributes but the detail assessment of these attributes and determination of the maturity of DevOps implementation is still a challenge.
   Objective: This paper provides important insights for practitioners to assess and measure the DevOps attributes using statistical analysis and Two-way assessment. The proposed framework facilitates the detailed assessment of eighteen attributes to identify key independent attributes and measure them to determine the maturity of DevOps implementation in an enterprise.
   Method: The relationship between eighteen attributes was examined; a structural model was established using Exploratory and Confirmatory Factor Analysis, the model was validated using Structural Equation Modelling. Key independent attributes were identified which influences other attributes and overall DevOps implementation. Using Two-way assessment, key independent attributes were measured and the maturity of the DevOps implementation was determined in an enterprise.
   Results: Using Exploratory and Confirmatory Factor Analysis, 18 attributes were categorized under 4 latent variables namely Automation, Source Control, Cohesive Teams and Continuous Delivery. Using Structural Equation Modelling, 10 key independent attributes were determined, that influenced other attributes and overall DevOps implementation. Two-way assessment was applied to measure the key independent attributes and it was found that 4 of these attributes were performing below threshold level. Corrective actions were taken by the management team, and the revised measurement of these attributes demonstrated 40% improvement in the maturity level of DevOps implementation.
   Conclusion: The proposed framework contributes significantly to the field of DevOps by enabling practitioners to conduct the detailed assessment and measurement of DevOps attributes to determine the maturity of DevOps implementation to achieve higher quality. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Gupta, Viral; Kumar, Deepak] Amity Univ Uttar Pradesh, Amity Inst Informat Technol, Noida 201313, India.
   [Kapur, P. K.] Amity Univ Uttar Pradesh, Ctr Interdisciplinary Res, Noida 201313, India.
C3 Amity University Noida; Amity University Noida
RP Gupta, V (corresponding author), Amity Univ Uttar Pradesh, Amity Inst Informat Technol, Noida 201313, India.
EM viralgupta@hotmail.com; pkkapur1@gmail.com;
   deepakgupta_du@rediffmail.com
RI Kumar, Deepak/AAA-9696-2021
OI Kumar, Deepak/0000-0003-2409-9706; Kapur, P.K./0000-0001-8006-5952
CR Akela A., ASSEMBLING KEY COMPO
   Ambler Scott W., 2011, Cutter IT Journal, V24, P18
   [Anonymous], 2006, MULTIVARIATE DATA AN
   [Anonymous], 2013, P 2 ANN C RES INF TE
   [Anonymous], 2015, PROC 1 INT WORKSHOP
   Appleton B., 1998, PATT LANG PROGR C PL, P98
   Artac M., 2016, Proceedings of the 2nd International Workshop on Quality-Aware DevOps, P40
   Basu R., 2013, International Journal of Managing Value Supply Chains, V4, DOI DOI 10.5121/IJMVSC.2013.4104
   Bruneo D., 2014, 2014 IEEE WORKSH ENV, P1
   Byrne B.M., 2001, Multivariate applications book series.Structural equation modeling with AMOS: Basic concepts, applications
   Chin Wen Cheong, 2008, American Journal of Applied Sciences, V5, P783, DOI 10.3844/ajassp.2008.783.787
   Cois C.A., 2014, Professional Communication Conference (IPCC), 2014 IEEE International, P1
   Cukier D., 2013, Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, Applications: Software for Humanity, P143, DOI DOI 10.1145/2508075.2508432
   Dawes J., 1998, 27th EMAC Conference, V5, P461
   De Carvalho J., 2014, American International Journal of Contemporary Research, V4, P6, DOI DOI 10.5539/ASS.V11N4P371
   DeGrandis Dominica, 2011, Cutter IT Journal, V24, P34
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Erich F., 2014, Report: DevOps literature review
   Erich F, 2014, LECT NOTES COMPUT SC, V8892, P277, DOI 10.1007/978-3-319-13835-0_21
   Floyd FJ, 1995, PSYCHOL ASSESSMENT, V7, P286, DOI 10.1037/1040-3590.7.3.286
   Flynn B. B., 1994, Journal of Operations Management, V11, P339, DOI 10.1016/S0272-6963(97)90004-8
   Gupta V, 2016, INT J SYST ASSUR ENG, V7, P332, DOI 10.1007/s13198-016-0460-0
   Hoe S.L., 2008, J APPL QUANTITATIVE, V3, P76, DOI DOI 10.1111/BMSP.12028
   Hosono S, 2012, INT J COMPUT SCI ENG, V7, P329, DOI 10.1504/IJCSE.2012.049753
   Hsieh CY, 2015, J INF SCI ENG, V31, P897
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Hummer Waldemar, 2013, Middleware 2013. ACM/IFIP/USENIX 14th International Middleware Conference. Proceedings: LNCS 8275, P368, DOI 10.1007/978-3-642-45065-5_19
   Kapur PK, 2014, INT J SYST ASSUR ENG, V5, P133, DOI 10.1007/s13198-014-0223-8
   Kapur P.K., 2014, 2014 3 INT C, P1
   Kumar Deepak, 2015, 2015 4th International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions), P1, DOI 10.1109/ICRITO.2015.7359352
   Lai VS, 1999, INFORM MANAGE-AMSTER, V36, P221, DOI 10.1016/S0378-7206(99)00021-X
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Law KMY, 2012, INT J PROD ECON, V137, P116, DOI 10.1016/j.ijpe.2012.01.022
   Loukides M., 2012, What is DevOps?
   Lwakatare LE, 2015, LECT NOTES BUS INF P, V212, P212, DOI 10.1007/978-3-319-18612-2_19
   Mittal VK, 2014, J MANUF TECHNOL MANA, V25, P1195, DOI 10.1108/JMTM-02-2013-0012
   Mittal VK, 2014, INT J PROD RES, V52, P584, DOI 10.1080/00207543.2013.838649
   Mittal VK., 2013, Re-engineering Manufacturing for Sustainability: Proceedings of the 20th CIRP International Conference on Life Cycle Engineering, Singapore 17-19 April, 2013, P723, DOI [10.1007/978-981-4451-48-2_118, DOI 10.1007/978-981-4451-48-2_118]
   Mohamed S.I., 2016, International Journal of Engineering Science and Research, V2, P25
   Mullaguru S.N., 2015, GLOBAL J COMPUT SCI, V15
   Patwardhan A., 2016, ARXIV160701893
   Perez J. F., 2015, PROC WORKSHOP CHALLE, P5
   Perry W.E., 2006, EFFECTIVE METHODS SO, VThird
   Saaty T. L., 2008, INT J SERV SCI, V1, P83, DOI [10.1504/IJSSCI.2008.017590, DOI 10.1504/IJSSCI.2008.017590]
   Sacks M., 2012, Pro Website Development and Operations, P1
   Sarkis J., 2006, P SPIE, V6385
   Schaefer A., 2013, IAENG Transactions on Engineering Technologies, P345
   Schmitt N, 1996, PSYCHOL ASSESSMENT, V8, P350, DOI 10.1037/1040-3590.8.4.350
   Shang WY, 2012, PROC INT CONF SOFTW, P1583, DOI 10.1109/ICSE.2012.6227031
   Shihab E, 2012, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/2372251.2372305
   Somerville I.:., 2001, Software Engineering, Vsixth
   Thompson B., 2004, Exploratory and confirmatory factor analysis: Understanding concepts and applications, P1, DOI DOI 10.1037/10694-011
   Triantaphyllou E., 1995, International Journal of Industrial Engineering: Applications and Practice, V2, P35
   Ullman J.B., 2003, STRUCTURAL EQUATION
   Waller Jan, 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [10.1145/2735399, 10.1145/2735399.2735416]
   Wang GH, 2008, ENERG POLICY, V36, P1879, DOI 10.1016/j.enpol.2008.02.006
   Williams B., J EMERGENCY PRIMARYE, V8
   Zhu LM, 2005, SOFTWARE QUAL J, V13, P357, DOI 10.1007/s11219-005-4251-0
NR 58
TC 39
Z9 45
U1 1
U2 35
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 75
EP 91
DI 10.1016/j.infsof.2017.07.010
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FJ9UO
UT WOS:000413127200005
DA 2024-07-18
ER

PT J
AU Yoon, S
   Yoo, J
AF Yoon, Sanghyun
   Yoo, Junbeom
TI Formal verification of ECML hybrid models with spaceex
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal verification; ECML; Linear hybrid automata; Automatic
   translation; Spaceex
ID TEMPORAL LOGIC; SYSTEMS; CHECKING
AB Context: ECML is a modeling language for hybrid systems, proposed by ETRI in Korea. ECML extended the basic formalism, DEV&DESS, with uses in modeling and simulation, whereas algorithmic verification on the ECML models continues to be an on-going research task.
   Objective: This paper proposes a verification technique to verify ECML models with SpaceEx, a verification platform for hybrid systems. It includes translation rules from ECML into the SpaceEx model.
   Method: As SpaceEx reads linear hybrid automata, we developed translation rules from ECML models to linear hybrid automata and implemented an automatic translator ECML to SpaceEx. We also developed a rule checker ECML Checker to check whether an ECML model complies with assumptions and restrictions to overcome the semantic gap between the two formal languages. We performed a case study with an extension of the widely used example 'barrel-filler system' to demonstrate the effectiveness of our verification technique.
   Results: The verification result shows that our verification technique can translate ECML models into SpaceEx models, and we also perform formal verification on ECML models with SpaceEx.
   Conclusions: The proposed technique can verify ECML with support from SpaceEx. We expect that the proposed translation rules can be used with minor modifications to translate ECML models into different notations, and thus allow for the use of verification tools other than SpaceEx. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Yoon, Sanghyun; Yoo, Junbeom] Konkuk Univ, 1 Hwayang Dong, Seoul 143701, South Korea.
C3 Konkuk University
RP Yoo, J (corresponding author), Konkuk Univ, 1 Hwayang Dong, Seoul 143701, South Korea.
EM pctkdgus@konkuk.ac.kr; jbyoo@konkuk.ac.kr
FU Konkuk University
FX This paper was supported by Konkuk University in 2015.
CR Ab Rahim L, 2015, SOFTW SYST MODEL, V14, P1003, DOI 10.1007/s10270-013-0358-0
   Aceituna D, 2014, INFORM SOFTWARE TECH, V56, P321, DOI 10.1016/j.infsof.2013.11.004
   Agrawal A., 2004, ELECTRON NOTES THEOR, V109, P43
   Allahham A, 2008, NONLINEAR ANAL-HYBRI, V2, P1175, DOI 10.1016/j.nahs.2008.09.016
   Althoff M., 2015, P WORKSH APPL VER CO, V34, P120
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 1996, IEEE T SOFTWARE ENG, V22, P181, DOI 10.1109/32.489079
   Alur R, 2003, P IEEE, V91, P11, DOI 10.1109/JPROC.2002.805817
   Alur R., 1997, International Journal on Software Tools for Technology Transfer, V1, P86, DOI 10.1007/s100090050007
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], M0524 UCBERL
   [Anonymous], 2003, ACM SIGSOFT Softw. Eng. Notes, DOI DOI 10.1145/966221.966235
   Antoniotti M., 1997, P C DOM SPEC LANG C, P14
   Asarin E., 2002, LNCS, V2404, P746, DOI DOI 10.1007/3-540-45657-0
   Baar T, 2008, SOFTW SYST MODEL, V7, P383, DOI 10.1007/s10270-008-0086-z
   Bae K, 2015, SCI COMPUT PROGRAM, V103, P13, DOI 10.1016/j.scico.2014.09.011
   Bae K, 2015, SCI COMPUT PROGRAM, V99, P193, DOI 10.1016/j.scico.2014.02.006
   Bjorner N., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P415
   Borland S., 2003, Transforming Statechart Models to DEVS
   BROOKS C, 2008, UCBEECS200828, V1
   Carloni LP, 2006, FOUND TRENDS ELECTRO, V1, P1, DOI 10.1561/1000000001
   Choi H., 2013, INFORMATION, V16, P821
   Choi H, 2011, COMM COM INF SC, V256, P112
   Chun I, 2011, COMM COM INF SC, V150, P156
   Chutinan A, 1999, LECT NOTES COMPUT SC, V1569, P76
   Cimatti A., 1999, COMPUTER AIDED VERIF, P682
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   CsabaOlveczky P., 2000, P 3 INT WORKSH REWR, P18
   Daws Conrado., 1996, HYBRID SYSTEMS 3, V1066, P208, DOI DOI 10.1007/BFB0020947
   de Roo A, 2012, INFORM SOFTWARE TECH, V54, P1432, DOI 10.1016/j.infsof.2012.07.005
   Frehse G, 2005, LECT NOTES COMPUT SC, V3414, P258
   Frehse G., 2013, Proc, P203
   Frehse G., 2012, BRIEF EXPT COMP STC
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Girard A, 2007, IEEE T AUTOMAT CONTR, V52, P782, DOI 10.1109/TAC.2007.895849
   Goguen J., SOFTWARE ENG OBJ ALG, P3
   Graves C., 1994, P IEE C ID UNC SYST
   Han SP, 2007, LECT NOTES COMPUT SC, V4487, P1246
   Hansen HA, 2013, SCI COMPUT PROGRAM, V78, P2511, DOI 10.1016/j.scico.2013.02.007
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Henzinger TA, 2001, IEEE DECIS CONTR P, P2887, DOI 10.1109/CDC.2001.980714
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   Hoare T, 2003, J ACM, V50, P63, DOI 10.1145/602382.602403
   Jeon J., 2012, EMBEDDED MULTIMEDIA, V181, P285, DOI DOI 10.1007/978-94-007-5076-0_33
   Jeon J.H., 2011, P JCICT 1 YELL SEA I
   Jo J., 2012, EMBEDDED MULTIMEDIA, P293
   Jo J., 2013, THESIS KONKUK U KORE
   Jo J., 2012, P KOR JAP JOINT WORK, P1
   Karoui MF, 2010, NONLINEAR ANAL-HYBRI, V4, P766, DOI 10.1016/j.nahs.2010.05.004
   Kim E.P., 2011, Custom Integrated Circuits Conference (CICC), P1
   Kim J.Y., 2012, P 8 INT C INT ENV IE, P26
   Kim W.-T., 2013, COMMUN KOREAN I INF, V12, P16
   Konecny M, 2016, NONLINEAR ANAL-HYBRI, V20, P1, DOI 10.1016/j.nahs.2015.10.004
   Kostousova EK, 2001, OPTIM METHOD SOFTW, V14, P267, DOI 10.1080/10556780108805805
   KURZHANSKI AA, 2008, ELLIPSOIDAL TOOLBOX
   Kvasnica M, 2004, LECT NOTES COMPUT SC, V2993, P448
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lee HY, 2013, BIOMED RES INT, V2013, DOI 10.1155/2013/741403
   Lepri D, 2015, SCI COMPUT PROGRAM, V99, P128, DOI 10.1016/j.scico.2014.06.006
   de la Vara JL, 2016, INFORM SOFTWARE TECH, V72, P16, DOI 10.1016/j.infsof.2015.11.008
   Min-Jo Kim, 2013, 2013 Second International Conference on Informatics & Applications (ICIA), P198, DOI 10.1109/ICoIA.2013.6650255
   Mitchell I., 2004, TR200409 UBC CS
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   OSHER S, 1993, SIAM J MATH ANAL, V24, P1145, DOI 10.1137/0524066
   Panesar-Walawege RK, 2013, INFORM SOFTWARE TECH, V55, P836, DOI 10.1016/j.infsof.2012.11.009
   Pinto A, 2006, LECT NOTES COMPUT SC, V3927, P491
   Platzer A, 2008, LECT NOTES ARTIF INT, V5195, P171, DOI 10.1007/978-3-540-71070-7_15
   Ratschan S., HSOLVER VERIFICATION
   Sanghyun Yoon, 2015, Journal of KIISE, V42, P823, DOI 10.5626/JOK.2015.42.7.823
   Schrammel P., 2012, HYBRID DATA FLOW LAN
   Sipser M., 2013, INTRO THEORY COMPUTA, V3
   Stiver JA, 1995, LECT NOTES COMPUT SC, V999, P462
   van Beek B, 2003, PROCEEDINGS OF THE 2003 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P632, DOI 10.1109/WSC.2003.1261478
   Visser W, 2012, SOFTW SYST MODEL, V11, P541, DOI 10.1007/s10270-012-0281-9
   Wang Farn., 2006, Proceedings of the 2nd International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, ISOLA 06, P341, DOI DOI 10.1109/IS0LA.2006.68
   Yoon S., 2014, KOREA COMPUTER SOFTW, P2
   Yoon S., 2015, TRDS201501
   Zeigler BP., 2000, Theory of Modeling and Simulation
   강성주, 2013, [The Journal of Korean Institute of Communications and Information Sciences C, 한국통신학회논문지C], V38, P1228
NR 81
TC 2
Z9 2
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 121
EP 144
DI 10.1016/j.infsof.2017.07.014
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200009
DA 2024-07-18
ER

PT J
AU Nguyen, PH
   Ali, S
   Yue, T
AF Nguyen, Phu H.
   Ali, Shaukat
   Yue, Tao
TI Model-based security engineering for cyber-physical systems: A
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cyber-physical systems; Security; Model-based engineering; Security
   engineering; Systematic mapping; Snowballing; Survey
AB Context: Cyber-physical systems (CPSs) have emerged to be the next generation of engineered systems driving the so-called fourth industrial revolution. CPSs are becoming more complex, open and more prone to security threats, which urges security to be engineered systematically into CPSs. Model-Based Security Engineering (MBSE) could be a key means to tackle this challenge via security by design, abstraction, and automation.
   Objective: We aim at providing an initial assessment of the state of the art in MBSE for CPSs (MBSE4CPS). Specifically, this work focuses on finding out I) the publication statistics of MBSE4CPS studies; 2) the characteristics of MBSE4CPS studies; and 3) the open issues of MBSE4CPS research.
   Method: We conducted a systematic mapping study (SMS) following a rigorous protocol that was developed based on the state-of-the-art SMS and systematic review guidelines. From thousands of relevant publications, we systematically identified 48 primary MBSE4CPS studies for data extraction and synthesis to answer predefined research questions.
   Results: SMS results show that for three recent years (2014-2016) the number of primary MBSE4CPS studies has increased significantly. Within the primary studies, the popularity of using Domain-Specific Languages (DSLs) is comparable with the use of the standardised UML modelling notation. Most primary studies do not explicitly address specific security concerns (e.g., confidentiality, integrity) but rather focus on security analyses in general on threats, attacks or vulnerabilities. Few primary studies propose to engineer security solutions for CPSs. Many focus on the early stages of development lifecycle such as security requirement engineering or analysis.
   Conclusion: The SMS does not only provide the state of the art in MBSE4CPS, but also points out several open issues that would deserve more investigation, e.g., the lack of engineering security solutions for CPSs, limited tool support, too few industrial case studies, and the challenge of bridging DSLs in engineering secure CPSs. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Nguyen, Phu H.; Ali, Shaukat; Yue, Tao] Simula Res Lab, Martin Linges Vei 25, N-1364 Fornebu, Norway.
   [Yue, Tao] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo
RP Nguyen, PH (corresponding author), Simula Res Lab, Martin Linges Vei 25, N-1364 Fornebu, Norway.
EM phu@simula.no
RI Nguyen, Phu H./P-7109-2019; yue, tao/H-6783-2013
OI Nguyen, Phu H./0000-0003-1773-8581; Yue, Tao/0000-0003-3262-5577
FU RCN; EU Horizon 2020 funded project U-Test (Testing Cyber-Physical
   Systems under Uncertainty); RFF Hovedstaden
FX The authors would like to thank the anonymous reviewers for their
   suggestions to improve this paper. This research was supported by RCN
   funded MBT4CPS project. Phu Hong Nguyen, Tao Yue, and Shaukat Ali are
   also supported by the EU Horizon 2020 funded project U-Test (Testing
   Cyber-Physical Systems under Uncertainty). Tao Yue and Shaukat Ali are
   also supported by RCN funded Zen-Configurator project, RFF Hovedstaden
   funded MBE-CR project, and RCN funded Certus SFI.
CR [Anonymous], PRIV SMART GRID
   [Anonymous], P 2 ACM IEEE INT S E
   [Anonymous], ALL AN
   [Anonymous], 67905 ES COPPEUFRI S
   [Anonymous], 2013, PROC C SYSTEM ENG
   [Anonymous], P TMCE
   [Anonymous], P 18 INT C EV ASS SO
   [Anonymous], SEC DEV LIF
   [Anonymous], INT J ADV SECUR
   [Anonymous], DEMO ABSTRACT SURE E
   [Anonymous], SOFTWARE ATTACK CENT
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], RES CONTR SYST ISRCS
   [Anonymous], 28 INT C DISTR COMP
   [Anonymous], MODEL BASED SECURITY
   [Anonymous], UNDERSTANDING DENIAL
   [Anonymous], PRIVACY ASSESSMENT D
   [Anonymous], 9 IEEE EUR MOD S MAT
   [Anonymous], ATTACK DEFENSE TREES
   [Anonymous], PRED 2016 CYB SWINGS
   [Anonymous], THREAT ANAL METHODOL
   [Anonymous], 2014, TRARISE2014001 U TEX
   [Anonymous], TIMED MODEL BASED ME
   [Anonymous], INTRO CYBER SECURITY
   [Anonymous], TECHNICAL REPORT
   [Anonymous], DES AUT C DAC 2014 5
   [Anonymous], REACTIVE SECURITY SM
   [Anonymous], SURVEY TESTING CYBER
   [Anonymous], P 52 ANN DES AUT C
   [Anonymous], ADV MODEL DRIVEN SEC
   [Anonymous], QUANTIFYING RISKS DA
   [Anonymous], 2014, COMPUT SCI-RES DEV
   [Anonymous], P 47 DES AUT C
   [Anonymous], PREVENTING UNIFYING
   [Anonymous], SECURITY ATTACK ANAL
   [Anonymous], SYST SCI HICSS 2010
   [Anonymous], NEW TECHN DISTR SYST
   [Anonymous], 12 INT C EV ASS SOFT
   [Anonymous], CYBERSAGE TOOL AUTOM
   [Anonymous], SECURITY ANAL URBAN
   [Anonymous], P INT C DEP SYST NET
   [Anonymous], P 2010 IEEE ACM INT
   [Anonymous], EXTRACTING VULNERABI
   [Anonymous], MODEL DRIVEN ENG EME
   [Anonymous], USING MODEL DRIVEN E
   [Anonymous], HOLISTIC VIEWPOINT B
   [Anonymous], SOFTW SYST MODEL
   [Anonymous], CYB PHYS SYST CPS PR
   [Anonymous], SPIE DEFENSE SECURIT
   Bannour B, 2014, IEEE ICST WORKSHOP, P26, DOI 10.1109/ICSTW.2014.50
   Bishop M., 2012, Computer security: art and science, V200
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Chen TM, 2011, IEEE T SMART GRID, V2, P741, DOI 10.1109/TSG.2011.2160000
   Cheung H, 2008, IEEE POW ENER SOC GE, P2301
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Cysneiros LM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P699, DOI 10.1109/ICSE.2002.1008036
   Eby M, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P221
   Fletcher K. K., 2011, 2011 5th International Conference on Secure Software Integration & Reliability Improvement Companion, P106, DOI 10.1109/SSIRI-C.2011.25
   France R, 2004, IEE P-SOFTW, V151, P173, DOI 10.1049/ip-sen:20040920
   Gunes V, 2014, KSII T INTERNET INF, V8, P4242, DOI 10.3837/tiis.2014.12.001
   Hahn A., 2013, P 8 ANN CYBER SECURI, DOI [10.1145/2459976.2460007, DOI 10.1145/2459976.2460007]
   Jauhar S, 2015, IEEE PAC RIM INT SYM, P319, DOI 10.1109/PRDC.2015.37
   Jensen JC, 2011, INT WIREL COMMUN, P1666, DOI 10.1109/IWCMC.2011.5982785
   Karnouskos S, 2011, IEEE IND ELEC, P4490
   Khaitan SK, 2015, IEEE SYST J, V9, P350, DOI 10.1109/JSYST.2014.2322503
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Lemaire L., 2014, P 2 INT S ICS SCADA, P1
   Lun Y. Z., 2016, ARXIV160509641
   McGraw G., 2006, SOFTWARE SECURITY BU, V1
   Mitchell R, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2542049
   Nasr PM, 2014, INT ISC CONF INFO SE, P55, DOI 10.1109/ISCISC.2014.6994022
   Neureiter C, 2016, ELECTRONICS-SWITZ, V5, DOI 10.3390/electronics5020024
   Nguyen PH, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P246, DOI 10.1109/MODELS.2015.7338255
   Nguyen PH, 2015, INFORM SOFTWARE TECH, V68, P62, DOI 10.1016/j.infsof.2015.08.006
   Nguyen PH, 2013, ASIA PAC SOFWR ENG, P432, DOI 10.1109/APSEC.2013.64
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Oates F., 2013, PROC 1 INT S ICS SCA, P78
   Orojloo H, 2014, INT ISC CONF INFO SE, P131, DOI 10.1109/ISCISC.2014.6994036
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Roudier Y, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P655
   Ruiz J. F., 2012, Proceedings of the 2012 20th Euromicro International Conference on Parallel, Distributed and Network-Based Processing (PDP 2012), P261, DOI 10.1109/PDP.2012.36
   Saxena N, 2016, IEEE T INF FOREN SEC, V11, P907, DOI 10.1109/TIFS.2015.2512525
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Sridhar S, 2012, P IEEE, V100, P210, DOI 10.1109/JPROC.2011.2165269
   Suleiman H, 2015, INFORM SYST, V53, P147, DOI 10.1016/j.is.2014.12.002
   Suleiman H, 2013, REQUIR ENG, V18, P251, DOI 10.1007/s00766-012-0153-4
   Tabrizi FM, 2014, IEEE HI ASS SYS ENGR, P17, DOI 10.1109/HASE.2014.12
   Vasilevskaya M, 2014, SECUR COMMUN NETW, V7, P2815, DOI 10.1002/sec.819
   Wang WY, 2013, COMPUT NETW, V57, P1344, DOI 10.1016/j.comnet.2012.12.017
   Weigert T., 2006, Proceedings. IEEE International Conference on Sensor Networks, Ubiquitous and Trustworthy Computing
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Wu KH, 2016, IEEJ T ELECTR ELECTR, V11, P216, DOI 10.1002/tee.22209
   Yampolskiy M, 2015, INT J CRIT INFR PROT, V8, P40, DOI 10.1016/j.ijcip.2014.09.003
   Zafar N, 2014, SYSTEMS ENG, V17, P77, DOI 10.1002/sys.21252
   Zhang M, 2016, LECT NOTES COMPUT SC, V9764, P247, DOI 10.1007/978-3-319-42061-5_16
NR 96
TC 59
Z9 66
U1 2
U2 54
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2017
VL 83
BP 116
EP 135
DI 10.1016/j.infsof.2016.11.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ1YO
UT WOS:000393006700007
DA 2024-07-18
ER

PT J
AU Torres, A
   Galante, R
   Pimenta, MS
   Martins, AJB
AF Torres, Alexandre
   Galante, Renata
   Pimenta, Marcelo S.
   Martins, Alexandre Jonatan B.
TI Twenty years of object-relational mapping: A survey on patterns,
   solutions, and their implications on application design
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object-relational mapping; Design patterns; Impedance mismatch problem;
   Enterprise patterns; Class models
AB Context: Almost twenty years after the first release of TopLink for Java, Object-Relational Mapping Solutions (ORMS5) are available at every popular development platform, providing useful tools for developers to deal with the impedance mismatch problem. However, no matter how ubiquitous these solutions are, this essential problem remains as challenging as ever. Different solutions, each with a particular vocabulary, are difficult to learn, and make the impedance problem looks deceptively simpler than it really is.
   Objective: The objective of this paper is to identify, discuss, and organize the knowledge concerning ORMS5, helping designers towards making better informed decisions about designing and implementing their models, focusing at the static view of persistence mapping.
   Method: This paper presents a survey with nine ORMS5, selected from the top ten development platforms in popularity. Each ORMS was assessed, by documentation review and experience, in relation to architectural and structural patterns, selected from literature, and its characteristics and implementation options, including platform specific particularities.
   Results: We found out that all studied ORMSs followed architectural and structural patterns in the literature, but often with distinct nomenclature, and some singularities. Many decisions, depending on how patterns are implemented and configured, affect how class models should be adapted, in order to create practical mappings to the database.
   Conclusion: This survey identified what structural patterns each ORMS followed, highlighting major structural decisions a designer must take, and its consequences, in order to turn analysis models into object oriented systems. It also offers a pattern based set of characteristics that developers can use as a baseline to make their own assessments of ORMSs. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Torres, Alexandre; Galante, Renata; Pimenta, Marcelo S.] Univ Fed Rio Grande do Sul, Inst Informat, Av Bento Goncalves 9500, BR-91501970 Porto Alegre, RS, Brazil.
   [Martins, Alexandre Jonatan B.] TAGMATEC, Rodovia SC-401,600,ParqTEC Alfa,Sala 405, BR-88030911 Florianopolis, SC, Brazil.
C3 Universidade Federal do Rio Grande do Sul
RP Torres, A (corresponding author), Univ Fed Rio Grande do Sul, Inst Informat, Av Bento Goncalves 9500, BR-91501970 Porto Alegre, RS, Brazil.
EM atorres@inf.ufrgs.br
RI TORRES LAGARES, ALEXANDRE/HLX-3202-2023; Torres, Alexandre/C-6537-2016
OI Torres, Alexandre/0000-0002-2816-407X
FU CAPES (Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior);
   CNPq (Conselho Nacional de Desenvolvimento Cientifico e Tecnologico)
FX This work was partially financed by CAPES (Coordenacao de
   Aperfeicoamento de Pessoal de Nivel Superior) and CNPq (Conselho
   Nacional de Desenvolvimento Cientifico e Tecnologico).
CR Adya Atul., 2007, SIGMOD '07: Proceedings of the 2007 ACM SIGMOD international conference on Management of data, P877
   Ambler S.W., 1998, BUILDING OBJECT APPL
   Ambler Scott., 2003, AGILE DATABASE TECHN
   [Anonymous], 2014, The Java Language Specification, Java SE
   [Anonymous], 2014, HIB TOOLS JBOSS COMM
   Apache Foundation, 2015, AP CAYENN
   Apple inc, 2015, CORE DATA PROGRAMMIN
   Atkinson M., 1989, The Object-Oriented Database System Manifesto
   ATKINSON MP, 1987, COMPUT SURV, V19, P105, DOI 10.1145/62070.45066
   Atzeni P, 2013, SIGMOD REC, V42, P64
   Bauer C., 2004, HIBERNATE ACTION
   Bayer M., 2015, SQLAlchemy: The Database Toolkit for Python
   Begin C., 2007, IBATIS IN ACTION
   Berler M., 2000, The Object Data Standard: ODMG 3.0
   Bernstein P.A., 2007, SIGMOD 07, P1, DOI DOI 10.1145/1247480.1247482
   Brown K., 1996, PATTERN LANGUAGES PR, V2, P227
   Buff H. W., 1988, SIGMOD Record, V17, P79
   Cabibbo L, 2005, LECT NOTES COMPUT SC, V3520, P135
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Code Synthesis, 2015, ODB C OBJECT RELATIO
   Copeland G., 1984, SIGMOD Record, V14, P316, DOI 10.1145/971697.602300
   David Maier., 1990, Advances in Database Programming Languages, P377
   DAYAL U, 1982, ACM T DATABASE SYST, V7, P381, DOI 10.1145/319732.319740
   DeMichiel L., 2013, JSR 000338 JAVA PERS
   Derstadt J., 2009, POCO PROXIES       1
   Doctrine team, 2015, WELC DOCTR 2 ORMS DO
   Elmasri R., 2015, FUNDAMENTALS DATABAS, V7th
   Fowler M., ORMHATE
   Fowler M., 2000, M FOWLER BLIKI POJO
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gamma E., 1994, ANAL PATTERNS REUSAB
   Garcia-Molina Hector, 2008, DATABASE SYSTEMS COM
   Griesser T., 2015, BOOKSHELF JS
   Hansson D.H., 2015, ACTIVERECORD RUBYGEM
   Hohpe G., 2015, SOA PATTERNS NEW INS
   IDC, 2000, ENT DAT MAN SYST MAR
   Ireland C, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN DATABASES, KNOWLEDGE, AND DATA APPLICATIONS, P36, DOI 10.1109/DBKDA.2009.11
   Karwin B., 2010, SQL ANTIPATTERNS AVO
   Keller ArthurM., 1985, P 1985 ACM SIGMOD IN, P154, DOI [DOI 10.1145/325405.325423, 10. 1145/325405.325423]
   Keller W., 1996, P PLOP 96 ALL PARK
   Keller W., 1997, P 1997 EUR PATT LANG
   Keller W., 1998, P 3 EUR C PATT LANG, P1
   Lämmel R, 2006, LECT NOTES COMPUT SC, V4143, P169
   Martin James, 1983, Managing the data-base environment
   Microsoft, 2015, ENTITYOBJECT CLASS S
   Microsoft Entity Framework, 2015, OFF MICR ASP NET SIT
   Neward T., INTEROPERABILITY HAP
   Object Management Group (OMG), 2015, UML 2 5 UML 2 5
   Pressman Roger, 2015, SOFTWARE ENG PRACTIT, V8TH
   rubyonrails.org, 2015, ACT REC NEST ATTR
   Smith D., 2003, BRIEF HIST TOPLINK
   Yoder J.W., 1998, CONNECTING BUSINESS
NR 53
TC 28
Z9 32
U1 0
U2 23
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 1
EP 18
DI 10.1016/j.infsof.2016.09.009
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000001
DA 2024-07-18
ER

PT J
AU Misra, J
AF Misra, Janardan
TI Terminological inconsistency analysis of natural language requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 21st Asia-Pacific Software Engineering Conference (APSEC)
CY DEC 01-04, 2014
CL Jeju, SOUTH KOREA
DE Requirements analysis; Requirements management; Terminological
   inconsistency analysis; Alias identification; Entity disambiguation;
   Latent semantic analysis
AB Context: Terminological inconsistencies owing to errors in usage of terms in requirements specifications could result into subtle yet critical problems in interpreting and applying these specifications into various phases of SDLC.
   Objective: In this paper, we consider special class of terminological inconsistencies arising from term-aliasing, wherein multiple terms spread across a corpus of natural language text requirements may be referring to the same entity. Identification of such alias entity-terms is a difficult problem for manual analysis as well as for developing tool support.
   Method: We consider the case of syntactic as well as semantic aliasing and propose a systematic approach for identifying these. Identification of syntactic aliasing involves automated generation of patterns for identifying syntactic variances of terms including abbreviations and introduced-aliases. Identification of semantic aliasing involves extracting multidimensional features (linguistic, statistical, and locational) from given requirement text to estimate semantic relatedness among terms. Based upon the estimated relatedness and standard language database based refinement, clusters of potential semantic aliases are generated. Results of these analyses with user refinement lead to generation of entity-term alias glossary and unification of term usage across requirements.
   Results: A prototype tool was developed to assess the effectiveness of the proposed approach for an automated analysis of term-aliasing in the requirements given as plain English language text. Experimental results suggest that approach is effective in identifying syntactic as well as semantic aliases, however, when aiming for higher recall on larger corpus, user selection is necessary to eliminate false positives.
   Conclusion: This proposed approach reduces the time-consuming and error-prone task of identifying multiple terms which might be referring to the same entity to a process of tool assisted identification of such term aliases. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Misra, Janardan] Accenture Technol Labs, Bangalore, Karnataka, India.
C3 Accenture
RP Misra, J (corresponding author), Accenture Technol Labs, Bangalore, Karnataka, India.
EM janardan.misra@accenture.com
CR Bhattacharya I, 2006, SIAM PROC S, P47
   Bird S., 2009, NATURAL LANGUAGE PRO
   de Gea JMC, 2012, INFORM SOFTWARE TECH, V54, P1142, DOI 10.1016/j.infsof.2012.04.005
   Christen P, 2012, DATA MATCHING CONCEP, DOI [DOI 10.1007/978-3-642-31164-2, 10.1007/978-3-642- 31164-2]
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Deza MM, 2009, Encyclopedia of distances, P1, DOI [10.1007/978-3-642-00234-2, DOI 10.1007/978-3-642-00234-2]
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Dwarakanath A, 2013, S VIS LANG HUM CEN C, P314, DOI 10.1109/RE.2013.6636736
   Fan X., 2011, Journal of Data and Information Quality, V2, P1, DOI [10.1145/1891879.1891883, DOI 10.1145/1891879.1891883]
   Fellbaum C, 1998, LANG SPEECH & COMMUN, P1
   Fellbaum C, 2010, THEORY AND APPLICATIONS OF ONTOLOGY: COMPUTER APPLICATIONS, P231, DOI 10.1007/978-90-481-8847-5_10
   Gabrilovich E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1606
   Gungor T., 2010, HDB NATURAL LANGUAGE
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Hill E., 2008, P 2008 INT WORKING C, P79
   Ikeda M., 2009, P 18 WWW C 2 WEB PEO
   JAIN P, 2009, P 2 IND SOFTW ENG C, P37, DOI DOI 10.1145/1506216.1506224
   Jiang LL, 2012, SIGIR 2012: PROCEEDINGS OF THE 35TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P1155, DOI 10.1145/2348283.2348516
   Jorge-Botana G, 2010, J QUANT LINGUIST, V17, P1, DOI 10.1080/09296170903395890
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Kukich K., 1992, Computing Surveys, V24, P377, DOI 10.1145/146370.146380
   Lami G., 2005, QUARS TOOL ANAL REQU
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Marcus M. P., 1993, Computational Linguistics, V19, P313, DOI DOI 10.21236/ADA273556
   Maynard D, 2008, FRONT ARTIF INTEL AP, V167, P107
   Misra J, 2013, ASIA PAC SOFWR ENG, P239, DOI 10.1109/APSEC.2013.41
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Navigli R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459355
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Oates T., 2002, P 4 INT WORKSH WEB I, P31, DOI [10.1145/584931.584939, DOI 10.1145/584931.584939]
   Pedersen T, 2004, HLT NAACL 2004, VHLTNAACL, P38, DOI DOI 10.3115/1614025.1614037
   Ponzetto S, 2006, Proceedings of the HLT Conference of the NAACL, P192
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sarawagi Sunita, 2002, P 8 ACM SIGKDD INT C, P269, DOI DOI 10.1145/775047.775087
   Schaeffer SE, 2007, COMPUT SCI REV, V1, P27, DOI 10.1016/j.cosrev.2007.05.001
   Talburt JR, 2011, ENTITY RESOLUTION AND INFORMATION QUALITY, P1, DOI 10.1016/B978-0-12-381972-7.00001-4
   Turney PD, 2010, J ARTIF INTELL RES, V37, P141, DOI 10.1613/jair.2934
   U.S. Environmental Protection Agency, APP E SAMPL FUNCT RE
   Verma K, 2008, LECT NOTES COMPUT SC, V5318, P751, DOI 10.1007/978-3-540-88564-1_48
NR 40
TC 9
Z9 9
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 183
EP 193
DI 10.1016/j.infsof.2015.11.006
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ7BX
UT WOS:000374368000013
DA 2024-07-18
ER

PT J
AU Aversano, L
   Grasso, C
   Tortorella, M
AF Aversano, Lerina
   Grasso, Carmine
   Tortorella, Maria
TI Managing the alignment between business processes and software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software evolution; Business process modeling; Alignment evaluation;
   Software quality
ID VALIDATING STRATEGIC ALIGNMENT; INFORMATION-TECHNOLOGY; TASK
AB Context: The alignment degree existing between a business process and the supporting software systems strongly affects the performance of the business process execution. Methodologies and tools are needed for detecting the alignment level and keeping a business process aligned with the supporting software systems even when they evolve.
   Objective: This paper aims to provide an adequate support for managing such a kind of alignment and suggesting evolution actions if misalignment is detected. It proposes an approach including modeling and measuring activities for evaluating the alignment level and suggesting evolution activities, if needed. Method: The proposed approach is composed of three main phases. The first phase regards the modeling of business process and software systems supporting it by applying a modeling notation based on UML and adequately extended for representing business processes. The second phase concerns the evaluation of the alignment degree through the assessment of a set of metrics codifying the alignment concept. Finally, the last phase analyses the evaluation results for suggesting evolution activities if misalignment is detected.
   Results: The paper analyses the application of the proposed approach to a case study regarding a working business process and related software system. The obtained results provided useful suggestion for evolving the supporting software system and improving the alignment level existing between them and the supported business process.
   Conclusion: The approach contributes in all phases of the process and software system evolution, even if its improvement can be needed for identifying the impact of the changes. The proposed approach facilitates the understanding of business processes, software systems and related models. This favors the interaction of the software and business analysts, as it was possible to better formulate the interviews to be conducted with regard to the objectives and, thus, to collect the required data. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Aversano, Lerina; Grasso, Carmine; Tortorella, Maria] Univ Sannio, Dept Engn, Via Traiano 1, I-82100 Benevento, Italy.
C3 University of Sannio
RP Aversano, L (corresponding author), Univ Sannio, Dept Engn, Via Traiano 1, I-82100 Benevento, Italy.
EM aversano@unisannio.it; grasso@unisannio.it; tortorella@unisannio.it
RI Aversano, Lerina/AAG-3855-2019
OI Aversano, Lerina/0000-0003-2436-6835
CR [Anonymous], 1992, Information retrieval: Data structures and algorithms
   [Anonymous], 2005, PATTERN BASED ANAL B
   Aversano L, 2012, PROC TECH, V5, P462, DOI 10.1016/j.protcy.2012.09.051
   Aversano L, 2009, EUR CON SFTWR MTNCE, P233, DOI 10.1109/CSMR.2009.53
   AVERSANO T, 2012, P 14 INT C ENT INF S, P155
   AVERSANO T, 2010, P ACM S APPL COMP SA, P2330
   AVERSANO T, 2005, P ACM S APPL COMP SA, P1338
   AVERSARO L, 2010, ADV SOFTWARE ENG COM, V109, P385
   Avison D, 2004, J STRATEGIC INF SYST, V13, P223, DOI 10.1016/j.jsis.2004.08.002
   Baghdadi Y, 2013, SEM: PROCEEDINGS OF THE 1ST INTERNATIONAL WORKSHOP IN SOFTWARE EVOLUTION AND MODERNIZATION, P103, DOI 10.5220/0004600301030110
   Baghdadi Y, 2013, SEM: PROCEEDINGS OF THE 1ST INTERNATIONAL WORKSHOP IN SOFTWARE EVOLUTION AND MODERNIZATION, P3, DOI 10.5220/0004574100030011
   BASIL V, 2007, P 28 INT C INF SYST
   BASIL V, 2014, FRAUNHOFER IESE SERI
   Bleistein SJ, 2006, J SYST SOFTWARE, V79, P362, DOI 10.1016/j.jss.2005.04.033
   Bleistein SJ, 2006, INFORM SOFTWARE TECH, V48, P846, DOI 10.1016/j.infsof.2005.12.001
   Bruno G, 2012, INT J HUM CAP INF TE, V3, P42, DOI 10.4018/jhcitp.2012070104
   Byrd TA, 2006, INFORM MANAGE-AMSTER, V43, P308, DOI 10.1016/j.im.2005.07.002
   CARVALHO R, 2008, P INT WORKSH BUS IT
   CHAN HM, 2008, P 41 HAW INT C SYST, P114
   Chan YE, 1997, INFORM SYST RES, V8, P125, DOI 10.1287/isre.8.2.125
   Chan YE, 2007, J INF TECHNOL-UK, V22, P297, DOI 10.1057/palgrave.jit.2000109
   Chen RS, 2008, INT J INFORM MANAGE, V28, P366, DOI 10.1016/j.ijinfomgt.2008.01.015
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   CINORNA CU, 1997, SCAND J INF SYS, V9, P67
   COUGALAA J, 2005, J INF MANAGE, V25, P303
   De Castro V, 2011, INFORM SOFTWARE TECH, V53, P87, DOI 10.1016/j.infsof.2010.09.002
   de Leede J, 2002, INT J TECHNOL MANAGE, V23, P353, DOI 10.1504/IJTM.2002.003015
   ELHARI K, 2011, J COMPUT SCI ISSUES, V8, P1694
   Elvesaeter B., 2010, P 1 INT WORKSH MOD D, P61
   Etien A, 2005, REQUIR ENG, V10, P184, DOI 10.1007/s00766-005-0003-8
   Henderson JC, 1999, IBM SYST J, V38, P472, DOI 10.1147/SJ.1999.5387096
   Hooper VA, 2010, DATA BASE ADV INF SY, V41, P36
   Karagiannis D., 2007, ICEC '07, P97, DOI [DOI 10.1145/1282100.1282122, 10.1145/1282100.1282122]
   Kearns GS, 2003, DECISION SCI, V34, P1, DOI 10.1111/1540-5915.02289
   KORHERR B, 2006, P 18 INT C ADV INF S, P19
   Lee-Klenz S., 2010, P ACM S APPL COMPUTI, P111
   Li JZ, 2009, IEEE T KNOWL DATA EN, V21, P1218, DOI 10.1109/TKDE.2008.202
   LONCHAMP J, 2005, KLUWER INT SERIES SO, V10
   Luftman J.N., 2007, MIS Quarterly Executive, V6
   Maij E, 2002, INT J MED INFORM, V65, P179, DOI 10.1016/S1386-5056(02)00028-X
   MANDIE V, 2010, P ACM IEEE INT S EMP
   MCKEEN JD, 2003, MAKING IT HAPPER CRI
   Monsalve C, 2011, INT J SOFTW ENG KNOW, V21, P311, DOI 10.1142/S0218194011005359
   Papp R, 2001, STRATEGIC INFORMATION TECHNOLOGY: OPPORTUNITIES FOR COMPETITIVE ADVANTAGE, P1
   Peak D, 2005, INFORM MANAGE-AMSTER, V42, P635, DOI [10.1016/j.im.2004.02.009, 10.1016/j.im.2004.02.010, 10.1016/S0378-7206(04)00077-1]
   PEREIRA C, 2003, P 10 EUR C INF TECHN
   Raja V, 2008, SPRINGER SER ADV MAN, P1, DOI 10.1007/978-1-84628-856-2_1
   Ramel S, 2009, P INT COMP SOFTW APP, P349, DOI 10.1109/COMPSAC.2009.53
   Recker J.C., 2006, Proceedings of the 18th International Conference on Advanced Information Systems Engineering, Workshops and Doctoral Consortium, P521
   Reich B. H., 1993, THESIS
   REICH BH, 2000, MIS Q, V24, P31
   Rolland C, 2010, FRONT ARTIF INTEL AP, V217, P137, DOI 10.3233/978-1-60750-629-4-137
   SMACZNV I, 2001, MANAGE DECIS, V39, P797
   *SOC INF MAN, 2006, MAN CONC SURV WHAT K
   *SPEM, 2002, 021114 OMG SPEM
   THEVENET L, 2006, P AUST WORKSH REQ EN
   THEVENET L, 2007, P 19 C ADV INF SYST, P279
   Ullah Azmat, 2013, Journal of Software, V8, P1, DOI 10.4304/jsw.8.1.1-10
   Ullah A, 2013, ACM TRANS MANAG INF, V4, DOI 10.1145/2445560.2445564
   VELCU O, 2010, J INF MANAGE, V44, P138
   WEGMANN A, 2005, LECT NOTES COMPUT SC, P113
   Wegmann A, 2007, IEEE INT ENTERP DIST, P111, DOI 10.1109/EDOC.2007.54
   WEISS D, 2008, P PRIMIUM SUBC MULT
   *WFMC, 2005, PROC DEF INT XML PRO
   Wieringa RJ, 2003, LECT NOTES COMPUT SC, V2681, P209
   ZARVI CN, 2008, P ACM S APPL COMP SA, P607
   Zou Y, 2009, J SOFTW MAINT EVOL-R, V21, P315, DOI 10.1002/smr.410
NR 67
TC 30
Z9 32
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2016
VL 72
BP 171
EP 188
DI 10.1016/j.infsof.2015.12.009
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DX9HP
UT WOS:000384704500011
DA 2024-07-18
ER

PT J
AU Heaton, D
   Carver, JC
AF Heaton, Dustin
   Carver, Jeffrey C.
TI Claims about the use of software engineering practices in science: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Computational science; Systematic literature review; Scientific software
ID SIMULATIONS; SCIENTISTS; MANAGEMENT; TOOLS; CODE
AB Context: Scientists have become increasingly reliant on software in order to perform research that is too time-intensive, expensive, or dangerous to perform physically. Because the results produced by the software drive important decisions, the software must be correct and developed efficiently. Various software engineering practices have been shown to increase correctness and efficiency in the development of traditional software. It is unclear whether these observations will hold in a scientific context.
   Objective: This paper evaluates claims from software engineers and scientific software developers about 12 different software engineering practices and their use in developing scientific software.
   Method: We performed a systematic literature review examining claims about how scientists develop software. Of the 189 papers originally identified, 43 are included in the literature review. These 43 papers contain 33 different claims about 12 software engineering practices.
   Results: The majority of the claims indicated that software engineering practices are useful for scientific software development. Every claim was supported by evidence (i.e. personal experience, interview/survey, or case study) with slightly over half supported by multiple forms of evidence. For those claims supported by only one type of evidence, interviews/surveys were the most common. The claims that received the most support were: "The effectiveness of the testing practices currently used by scientific software developers is limited" and "Version control software is necessary for research groups with more than one developer." Additionally, many scientific software developers have unconsciously adopted an agile-like development methodology.
   Conclusion: Use of software engineering practices could increase the correctness of scientific software and the efficiency of its development. While there is still potential for increased use of these practices, scientific software developers have begun to embrace software engineering practices to improve their software. Additionally, software engineering practices still need to be tailored to better fit the needs of scientific software development. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Heaton, Dustin; Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 University of Alabama System; University of Alabama Tuscaloosa
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM dwheaton@crimson.ua.edu; carver@cs.ua.edu
RI Carver, Jeffrey/AAM-8202-2020; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
FU NSF grant [1445344]; Direct For Computer & Info Scie & Enginr; Office of
   Advanced Cyberinfrastructure (OAC) [1445344] Funding Source: National
   Science Foundation; Office of Advanced Cyberinfrastructure (OAC); Direct
   For Computer & Info Scie & Enginr [1445347] Funding Source: National
   Science Foundation
FX The authors acknowledge support from NSF grant 1445344.
CR Ackroyd KS, 2008, IEEE SOFTWARE, V25, P44, DOI 10.1109/MS.2008.93
   Ahalt S, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P40, DOI 10.1109/SECSE.2013.6615098
   Babuska I, 2004, COMPUT METHOD APPL M, V193, P4057, DOI 10.1016/j.cma.2004.03.002
   Basili VR, 2008, IEEE SOFTWARE, V25, P29, DOI 10.1109/MS.2008.103
   Betz RM, 2014, COMPUT SCI ENG, V16, P10, DOI 10.1109/MCSE.2014.9
   Carver J.C., 2006, CTWatch Quarterly, V2, P33
   CARVER JC, 2008, P 30 INT C SOFTW ENG, P1071, DOI DOI 10.1145/1370175.1370252
   Carver JC, 2007, PROC INT CONF SOFTW, P550
   Carver JC, 2009, COMPUT SCI ENG, V11, P14, DOI 10.1109/MCSE.2009.203
   Crabtree CA, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P22, DOI 10.1109/SECSE.2009.5069158
   Dubois PF, 2012, COMPUT SCI ENG, V14, P69, DOI 10.1109/MCSE.2012.84
   Dubois PF, 2005, COMPUT SCI ENG, V7, P80, DOI 10.1109/MCSE.2005.54
   Easterbrook SM, 2009, COMPUT SCI ENG, V11, P64
   Elwasif W.R., 2007, Proceedings of the 2007 Symposium on Component and Framework Technology in High-performance and Scientific Computing, P21, DOI DOI 10.1145/1297385.1297390
   Faulk S, 2009, COMPUT SCI ENG, V11, P30, DOI 10.1109/MCSE.2009.205
   George A, 1999, SIAM J MATRIX ANAL A, V20, P953, DOI 10.1137/S0895479897317739
   Gorton I., 2013, Proceedings of the 16th International ACM Sigsoft Symposium on Component-based Software Engineering, P159, DOI DOI 10.1145/2465449.2465460
   Hall L, 2001, AEROSP CONF PROC, P2871, DOI 10.1109/AERO.2001.931308
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Heroux MA, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P15, DOI 10.1109/SECSE.2009.5069157
   Higdon D, 2004, SIAM J SCI COMPUT, V26, P448, DOI 10.1137/S1064827503426693
   Hinsen K, 2013, COMPUT SCI ENG, V15, P60, DOI 10.1109/MCSE.2013.91
   Hinsen K, 2009, COMPUT SCI ENG, V11, P84, DOI 10.1109/MCSE.2009.194
   Hochstein L, 2008, COMPUTER, V41, P50, DOI 10.1109/MC.2008.101
   Huang X., 2013, Proceedings of the 2013 Conference on Computer Supported Cooperative Work, P423, DOI [DOI 10.1145/2441776.2441825, 10.1145/2441776.2441825]
   IEEE Standard Computer Dictionary: A Compilation of IEEE Standard Computer Glossaries, 1991, 610 IEEE, P1, DOI DOI 10.1109/IEEESTD.1991.106963
   Insfran E, 2008, LECT NOTES COMPUT SC, V5176, P81, DOI 10.1007/978-3-540-85200-1_10
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kanewala U, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P48, DOI 10.1109/SECSE.2013.6615099
   Karhu Katja, 2009, 2009 2nd International Conference on Software Testing Verification and Validation (ICST 2009), P201, DOI 10.1109/ICST.2009.16
   Kelly D, 2011, COMPUT SCI ENG, V13, P7, DOI 10.1109/MCSE.2011.86
   Kelly D, 2011, IEEE SOFTWARE, V28, P84, DOI 10.1109/MS.2010.88
   Kelly D, 2009, COMPUT SCI ENG, V11, P48, DOI 10.1109/MCSE.2009.139
   Kendall R, 2008, IEEE SOFTWARE, V25, P59, DOI 10.1109/MS.2008.86
   Ketcheson DI, 2012, SIAM J SCI COMPUT, V34, pC210, DOI 10.1137/110856976
   Killcoyne S, 2009, COMPUT SCI ENG, V11, P20, DOI 10.1109/MCSE.2009.198
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Li Y., 2011, Proceedings of the 4th International Workshop on Software Engineering for Computational Science and Engineering, P41, DOI DOI 10.1145/1985782.1985789
   Li Y, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P848, DOI 10.1145/1985793.1985922
   Martinez C, 2009, SIAM J DISCRETE MATH, V23, P1776, DOI 10.1137/080730706
   Matthews D, 2008, COMPUT SCI ENG, V10, P56, DOI 10.1109/MCSE.2008.144
   Misic M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P95, DOI 10.1109/ICST.2014.21
   Monteith J.Y., 2014, P 2014 EUROPEAN C SO, P1
   Morris C., 2009, P 5 IEEE INT C E SCI
   Nanthaamornphong A, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P9, DOI 10.1109/SECSE.2013.6615094
   Nguyen-Hoan L., 2010, P 2010 ACM IEEE INT
   Nori R, 2013, 2013 IEEE INT C EL T, P1
   Omar C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P524, DOI 10.1145/2591062.2591129
   Pawlik A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P113, DOI 10.1109/CHASE.2012.6223004
   Pluquet F, 2008, SIAM PROC S, P37
   Post D., 2006, ADV COMPUT
   Post DE, 2004, INT J HIGH PERFORM C, V18, P399, DOI 10.1177/1094342004048534
   Pouillon Y, 2011, COMPUT SCI ENG, V13, P62, DOI 10.1109/MCSE.2011.13
   Remmel H, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P58, DOI 10.1109/SECSE.2013.6615100
   Remmel H, 2012, COMPUT SCI ENG, V14, P38, DOI 10.1109/MCSE.2011.115
   Rilee M, 2014, PROCEEDINGS OF SEHPCCSE 2014: SECOND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR HIGH PERFORMANCE COMPUTING IN COMPUTATIONAL SCIENCE AND ENGINEERING, P20, DOI 10.1109/SE-HPCCSE.2014.5
   Samadi S., 2008, P IEEE INT C REM SEN, V25, P2196
   Sanders R, 2008, IEEE SOFTWARE, V25, P21, DOI 10.1109/MS.2008.84
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   Segal J., 2009, ICSE WORKSH SOFTW EN
   Segal J, 2009, COMPUT SUPP COOP W J, V18, P581, DOI 10.1007/s10606-009-9096-9
   Shull F., 2005, P INT S EMP SOFTW EN
   Sletholt M.T., 2011, Proceedings of the 4th International Workshop on Software Engineering for Computational Science and Engineering, P1, DOI DOI 10.1145/1985782.1985784
   Trainer E.H., 2014, P 18 INT C SUPP GROU, P111, DOI DOI 10.1145/2660398.2660420
   Trainer EH, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P417, DOI 10.1145/2675133.2675172
   Turk MatthewJ., 2013, Proceedings of the Conference on Extreme Science and Engineering Discovery Environment Gateway to Discovery - XSEDE'13. ACM Press, DOI DOI 10.1145/2484762.2484782
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
NR 68
TC 46
Z9 52
U1 1
U2 34
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 207
EP 219
DI 10.1016/j.infsof.2015.07.011
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT2AO
UT WOS:000362604600012
OA hybrid
DA 2024-07-18
ER

PT J
AU Possatto, MA
   Lucrédio, D
AF Possatto, Marcos Antonio
   Lucredio, Daniel
TI Automatically propagating changes from reference implementations to code
   generation templates
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Template-based code generation; Reference implementation; Code
   migration; Templatization; Round-trip engineering
AB Context: Code generators can automatically perform some tedious and error-prone implementation tasks, increasing productivity and quality in the software development process. Most code generators are based on templates, which are fundamentally composed of text expansion statements. To build templates, the code of an existing, tested and validated implementation may serve as reference, in a process known as templatization. With the dynamics of software evolution/maintenance and the need for performing changes in the code generation templates, there is a loss of synchronism between the templates and this reference code. Additional effort is required to keep them synchronized.
   Objective: This paper proposes automation as a way to reduce the extra effort needed to keep templates and reference code synchronized.
   Method: A mechanism was developed to semi-automatically detect and propagate changes from reference code to templates, keeping them synchronized with less effort. The mechanism was also submitted to an empirical evaluation to analyze its effects in terms of effort reduction during maintenance/evolution templatization.
   Results: It was observed that the developed mechanism can lead to a 50% reduction in the effort needed to perform maintenance/evolution templatization, when compared to a manual approach. It was also observed that this effect depends on the nature of the evolution/maintenance task, since for one of the tasks there was no observable advantage in using the mechanism. However, further studies are needed to better characterize these tasks.
   Conclusion: Although there is still room for improvement, the results indicate that automation can be used to reduce effort and cost in the maintenance and evolution of a template-based code generation infrastructure. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Possatto, Marcos Antonio; Lucredio, Daniel] Univ Fed Sao Carlos, Dept Comp, BR-13565905 Sao Carlos, SP, Brazil.
C3 Universidade Federal de Sao Carlos
RP Lucrédio, D (corresponding author), Univ Fed Sao Carlos, Dept Comp, Rod Washington Luis,Km 235,POB 676, BR-13565905 Sao Carlos, SP, Brazil.
EM daniel@dc.ufscar.br
RI Lucredio, Daniel/AAN-3070-2021
OI Lucredio, Daniel/0000-0002-1360-4036
FU FAPESP (Sao Paulo Research Foundation) [2012/04549-4]; Fundacao de
   Amparo a Pesquisa do Estado de Sao Paulo (FAPESP) [12/04549-4] Funding
   Source: FAPESP
FX We would like to thank FAPESP (Sao Paulo Research Foundation) - process
   number 2012/04549-4, for supporting this research. We also thank the
   anonymous referees who made important contributions to the final version
   of this paper.
CR Angyal L, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P463, DOI 10.1109/ECBS.2008.33
   Ciccozzi F, 2013, INFORM SOFTWARE TECH, V55, P1085, DOI 10.1016/j.infsof.2012.07.014
   CLEAVELAND JC, 1988, IEEE SOFTWARE, V5, P25, DOI 10.1109/52.17799
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Hettel T, 2008, LECT NOTES COMPUT SC, V5063, P31, DOI 10.1007/978-3-540-69927-9_3
   Hidaka S, 2009, PROC INT CONF SOFTW, P235, DOI 10.1109/ICSE-COMPANION.2009.5070990
   Jarzabek S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P920, DOI 10.1145/1985793.1985946
   Lucredio D., 2010, 1 BRAZ WORKSH MOD DR, P85
   Muszynski M., 2005, 5 OOPSLA WORKSH DOM, P5
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   Object Management Group (OMG), 2008, MOF Model to Text Transformation Language; Version 1.0, Document Formal/2008-01-16
   Van Paesschen E, 2006, LECT NOTES COMPUT SC, V3844, P347
   Voelter M., 2004, EUROPLOP, P525
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yoon Y., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P25
NR 15
TC 9
Z9 10
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 65
EP 78
DI 10.1016/j.infsof.2015.06.009
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600005
DA 2024-07-18
ER

PT J
AU Sharafi, Z
   Soh, Z
   Guéhéneuc, YG
AF Sharafi, Zohreh
   Soh, Zephyrin
   Gueheneuc, Yann-Gael
TI A systematic literature review on the usage of eye-tracking in software
   engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Eye-tracking; Software engineering; Experiment
ID MOVEMENTS; FIXATIONS; TOOL
AB Context: Eye-tracking is a mean to collect evidence regarding some participants' cognitive processes. Eye-trackers monitor participants' visual attention by collecting eye-movement data. These data are useful to get insights into participants' cognitive processes during reasoning tasks.
   Objective: The Evidence-based Software Engineering (EBSE) paradigm has been proposed in 2004 and, since then, has been used to provide detailed insights regarding different topics in software engineering research and practice. Systematic Literature Reviews (SLR) are also useful in the context of EBSE by bringing together all existing evidence of research and results about a particular topic. This SLR evaluates the current state of the art of using eye-trackers in software engineering and provides evidence on the uses and contributions of eye-trackers to empirical studies in software engineering.
   Method: We perform a SLR covering eye-tracking studies in software engineering published from 1990 up to the end of 2014. To search all recognised resources, instead of applying manual search, we perform an extensive automated search using Engineering Village. We identify 36 relevant publications, including nine journal papers, two workshop papers, and 25 conference papers.
   Results: The software engineering community started using eye-trackers in the 1990s and they have become increasingly recognised as useful tools to conduct empirical studies from 2006. We observe that researchers use eye-trackers to study model comprehension, code comprehension, debugging, collaborative interaction, and traceability. Moreover, we find that studies use different metrics based on eye-movement data to obtain quantitative measures. We also report the limitations of current eye-tracking technology, which threaten the validity of previous studies, along with suggestions to mitigate these limitations.
   Conclusion: However, not withstanding these limitations and threats, we conclude that the advent of new eye-trackers makes the use of these tools easier and less obtrusive and that the software engineering community could benefit more from this technology. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Sharafi, Zohreh; Soh, Zephyrin; Gueheneuc, Yann-Gael] Polytech Montreal, Ptidej Team, Dept Genie Informat & Genie Logiciel, Quebec City, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Soh, Z (corresponding author), Polytech Montreal, Ptidej Team, Dept Genie Informat & Genie Logiciel, Quebec City, PQ, Canada.
EM zohreh.sharafi@polymtl.ca; zephyrin.soh@polymtl.ca;
   yann-gael.gueheneuc@polymtl.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019; Sharafi, Zohreh/HRC-2499-2023
FU Fonds de Recherche du Quebec Nature et Technologies (FQRNT); Canada
   Research Chairs on Software Patterns and Patterns of Software and on
   Software Change and Evolution
FX We thank the editor and anonymous reviewers for their constructive
   comments, which helped us to improve the manuscript. This work has been
   partly funded by the Canada Research Chairs on Software Patterns and
   Patterns of Software and on Software Change and Evolution and by Fonds
   de Recherche du Quebec Nature et Technologies (FQRNT).
CR [Anonymous], 2000, EVIDENCE BASED MED P
   [Anonymous], 2007, Eye tracking methodology: Theory and practice, DOI DOI 10.1007/978-3-319-57883-5
   Ayres J, 2002, P 8 ACM SIGKDD INT C, V8, P429, DOI DOI 10.1145/775047.775109
   Bednarik R., 2004, Proceedings of the Third Nordic Conference on Human-Computer interaction (Tampere, Finland, October 23-27, V82, P331, DOI DOI 10.1145/1028014.1028066
   Bednarik Roman., 2005, CHI'05 Extended abstracts on human factors in computing systems, P1204, DOI DOI 10.1145/1056808.1056877
   Blackwell AF, 2000, LECT NOTES ARTIF INT, V1889, P162
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Cristino F, 2010, BEHAV RES METHODS, V42, P692, DOI 10.3758/BRM.42.3.692
   Dewhurst R, 2012, BEHAV RES METHODS, V44, P1079, DOI 10.3758/s13428-012-0212-2
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Duchowski AndrewT., 2010, P 2010 S EYE TRACKIN, P219, DOI DOI 10.1145/1743666.1743719
   Fehringer B. C. O. F., 2014, P S EYE TRACK RES AP, P259
   Gamma E., 1996, JAVA REPORT, P47
   Gamma R., 1995, Design_Patterns: Elements_of_Reusable_Object-Oriented_Software
   Goldberg J. H., 2002, Proceedings ETRA 2002. Eye Tracking Research and Applications Symposium, P51, DOI 10.1145/507072.507082
   Goldberg J. H., 2002, MINDS EYE COGNITIVE
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Goldberg Joseph H, 2010, P 3 BELIV 10 WORKSHO, P71
   Guéhéneuc YG, 2009, INT C PROGRAM COMPRE, P278
   HART S G, 1988, P139
   Henderson JM, 2008, PSYCHON B REV, V15, P566, DOI 10.3758/PBR.15.3.566
   Jacob RJK, 2003, MIND'S EYE: COGNITIVE AND APPLIED ASPECTS OF EYE MOVEMENT RESEARCH, P573, DOI 10.1016/B978-044451020-4/50031-1
   Jansen AR, 2003, BEHAV RES METH INS C, V35, P57, DOI 10.3758/BF03195497
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   JUST MA, 1976, COGNITIVE PSYCHOL, V8, P441, DOI 10.1016/0010-0285(76)90015-3
   Kitchenham B, 2004, Procedures for Undertaking Systematic Reviews
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2007, LECT NOTES COMPUT SC, V4336, P25
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lankford C., 2000, Proceedings of the 2000 Symposium on Eye Tracking Research Applications, P51
   Lavallée M, 2014, IEEE T EDUC, V57, P175, DOI 10.1109/TE.2013.2292570
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Nevalainen S., 2004, Proceedings of the 16th Annual Workshop of the Psychology of Programming Interest Group, P151
   PONSODA V, 1995, ACTA PSYCHOL, V88, P167, DOI 10.1016/0001-6918(95)94012-Y
   Poole A., 2006, Encyclopedia of human computer interaction, P211, DOI [10.4018/978-1-59140-562-7.ch034, DOI 10.4018/978-1-59140-562-7.CH034]
   Privitera CM, 2000, IEEE T PATTERN ANAL, V22, P970, DOI 10.1109/34.877520
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   Romero P, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P207, DOI 10.1109/HCC.2002.1046373
   Schauer R, 1998, PROG COMPREHEN, P4, DOI 10.1109/WPC.1998.693273
   Sharif B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P544, DOI 10.1109/ICSM.2011.6080828
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   SHARIF B., 2011, Proceedings of the 6th International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE), P67, DOI DOI 10.1145/1987856.1987872
   Sibert J. L., 2000, UIST. Proceedings of the 13th Annual ACM Symposium on User Interface Software and Technology, P101, DOI 10.1145/354401.354418
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   SR Research Ltd, 2006, EYELINK 2 US MAN VER
   Turner M., BCS Learn Dev, P110, DOI DOI 10.14236/EWIC/EASE2008.12
   Walters B, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P51, DOI 10.1109/TEFSE.2013.6620154
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 53
TC 128
Z9 145
U1 6
U2 83
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 79
EP 107
DI 10.1016/j.infsof.2015.06.008
PG 29
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CT2AO
UT WOS:000362604600006
DA 2024-07-18
ER

PT J
AU Borrego, D
   Gasca, RM
   Gómez-López, MT
AF Borrego, Diana
   Gasca, Rafael M.
   Gomez-Lopez, Maria Teresa
TI Automating correctness verification of artifact-centric business process
   models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Artifact-centric business process model; Verification; Constraint
   programming
ID CONSTRAINTS
AB Context: The artifact-centric methodology has emerged as a new paradigm to support business process management over the last few years. This way, business processes are described from the point of view of the artifacts that are manipulated during the process.
   Objective: One of the research challenges in this area is the verification of the correctness of this kind of business process models where the model is formed of various artifacts that interact among them.
   Method: In this paper, we propose a fully automated approach for verifying correctness of artifact-centric business process models, taking into account that the state (lifecycle) and the values of each artifact (numerical data described by pre and postconditions) influence in the values and the state of the others. The lifecycles of the artifacts and the numerical data managed are modeled by using the Constraint Programming paradigm, an Artificial Intelligence technique.
   Results: Two correctness notions for artifact-centric business process models are distinguished (reachability and weak termination), and novel verification algorithms are developed to check them. The algorithms are complete: neither false positives nor false negatives are generated. Moreover, the algorithms offer precise diagnosis of the detected errors, indicating the execution causing the error where the lifecycle gets stuck.
   Conclusion: To the best of our knowledge, this paper presents the first verification approach for artifact-centric business process models that integrates pre and postconditions, which define the behavior of the services, and numerical data verification when the model is formed of more than one artifact. The approach can detect errors not detectable with other approaches. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Borrego, Diana; Gasca, Rafael M.; Gomez-Lopez, Maria Teresa] Univ Seville, Dept Comp Languages & Syst, E-41012 Seville, Spain.
C3 University of Sevilla
RP Borrego, D (corresponding author), Univ Seville, Dept Comp Languages & Syst, Ave Reina Mercedes S-N, E-41012 Seville, Spain.
EM dianabn@us.es; gasca@us.es; maytegomez@us.es
RI Borrego, Diana/K-9966-2014; Gómez-López, María Teresa/L-1845-2014; M.
   Gasca, Rafael/F-5857-2015
OI Gómez-López, María Teresa/0000-0002-3562-875X; M. Gasca,
   Rafael/0000-0003-2348-7424
FU Spanish Ministry of Science and Education [TIN2009-13714]; FEDER (under
   the ERDF Program)
FX This work has been partially funded by the Spanish Ministry of Science
   and Education (under Grant TIN2009-13714), and by FEDER (under the ERDF
   Program).
CR [Anonymous], 2009, IEEE Data Engineering Bulletin
   [Anonymous], 1989, Constraint Satisfaction in Logic Programming
   [Anonymous], 2003, Principles of Constraint Programming
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Awad A, 2010, LECT NOTES BUS INF P, V43, P5
   Belardinelli F., 2012, Service-Oriented Computing, V7636. Lecture Notes in Computer Science, P17, DOI [DOI 10.1007/978-3-642-34321-6_2, 10.1007/978-3-642-34321-6_2]
   Borrego D, 2013, DATA KNOWL ENG, V87, P167, DOI 10.1016/j.datak.2013.04.008
   Bulatov A, 2005, SIAM J COMPUT, V34, P720, DOI 10.1137/S0097539700376676
   Cheeseman P.C., 1991, PROC 12 IJCAI, V91, P331, DOI [DOI 10.5555/1631171.1631221, 10.5555/1631171.1631221]
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Damaggio E, 2012, ACM T DATABASE SYST, V37, DOI 10.1145/2338626.2338628
   Deutsch A., 2009, Proc. Int. Conf. on Database Theory (ICDT), P252, DOI DOI 10.1145/1514894.1514924
   Eshuis Rik, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P259, DOI 10.1007/978-3-642-40176-3_22
   Eshuis R, 2010, DATA KNOWL ENG, V69, P816, DOI 10.1016/j.datak.2010.03.003
   Fahland Dirk, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P345, DOI 10.1007/978-3-642-23059-2_26
   Gerede CE, 2007, LECT NOTES COMPUT SC, V4749, P181
   Gerede CE, 2007, IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED COMPUTING AND APPLICATIONS, PROCEEDINGS, P133, DOI 10.1109/SOCA.2007.42
   Gomez-Lopez M.T., 2014, LNBIP, V176, P86, DOI [10.1007/978-3-319- 06695-0, DOI 10.1007/978-3-319-06695-0]
   Gonzalez P., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P25, DOI 10.1109/ICWS.2012.31
   Haralick R.M., 1979, Proceedings of the 6th International Joint Conference on Artificial Intelligence, P356
   Hull R, 2008, LECT NOTES COMPUT SC, V5332, P1152
   Lohmann N, 2013, INFORM SYST, V38, P606, DOI 10.1016/j.is.2012.07.003
   Meyer Andreas, 2013, Business Process Management. 11th International Conference, BPM 2013. Proceedings: LNCS 8094, P171, DOI 10.1007/978-3-642-40176-3_14
   Meyer A., 2012, SERVICES THEIR COMPO, P74
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   OMG, 2011, OBJ MAN GROUP BUS PR
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Gómez-López MT, 2015, INFORM SYST, V48, P26, DOI 10.1016/j.is.2014.07.007
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Weber I, 2010, DISTRIB PARALLEL DAT, V27, P271, DOI 10.1007/s10619-010-7060-9
NR 31
TC 18
Z9 18
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 187
EP 197
DI 10.1016/j.infsof.2015.02.010
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000010
OA Green Published
DA 2024-07-18
ER

PT J
AU Stroppi, LJR
   Chiotti, O
   Villarreal, PD
AF Ramon Stroppi, Luis Jesus
   Chiotti, Omar
   David Villarreal, Pablo
TI Defining the resource perspective in the development of processes-aware
   information systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process-aware information system; Resource perspective; Workflow; BPMN;
   Business process
ID BUSINESS; CONSTRAINTS; SECURITY
AB Context: The resource perspective has impact on the performance of business processes. However, current Workflow Management Systems (WfMSs) provide disparate support to its implementation and business process modeling languages provide limited capabilities for its definition. Thus, it is difficult to specify requirements regarding this perspective and to select an appropriate WfMS to support them in order to obtain a technological solution aligned with the organizational needs.
   Objective: To provide support to the definition, implementation, verification and validation of resource perspective requirements in the development of Process-Aware Information Systems (PAISs) based on WfMSs.
   Method: The following activities were carried out: (i) identification of resource perspective aspects in executable workflow specifications, (ii) analysis of the elements provided by the BPMN modeling language to represent these aspects, (iii) development of a framework based on BPMN for defining and implementing these aspects by using the extension mechanism provided by this language, (iv) development of a model-driven development method that leverages the framework to develop PAISs, and (v) validation of the proposed framework and method through the development of a tool supporting them, a case study, and the evaluation against the Workflow Resource Patterns.
   Results: A framework, a method and a tool that support the definition of the resource perspective in the development of PAISs.
   Conclusion: By using the proposed framework and method, practitioners are able to: define the resource perspective requirements in conceptual process models, select a WfMS as implementation platform, and define the implementation of these requirements maintaining the consistency between the conceptual process models and the workflow specifications. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Ramon Stroppi, Luis Jesus; David Villarreal, Pablo] Natl Technol Univ, CIDISI, Santa Fe Fac, Buenos Aires, DF, Argentina.
RP Stroppi, LJR (corresponding author), Natl Technol Univ, CIDISI, Santa Fe Fac, Lavaise 610,S3004EWB, Buenos Aires, DF, Argentina.
EM lstroppi@frsf.utn.edu.ar; chiotti@santafe-conicet.gov.ar;
   pvillarr@frsf.utn.edu.ar
OI Chiotti, Omar/0000-0003-2499-8998
CR Agrawal A., 2010, WEB SERVICES HUMANTA
   Altuhhova O, 2012, LECT NOTES BUS INF P, V112, P1
   [Anonymous], ADV INFORM SYSTEMS E
   [Anonymous], 2011, BPMN method and style: with BPMN implementer's guide
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   [Anonymous], P 14 IB C SOFTW ENG
   Awad A., 2009, TECHNICAL REPORT
   Bertino E., 1999, ACM T INFORM SYST SE, V2, P65
   Brucker A.D., 2012, Proceedings of the 17th ACM symposium on access control models and technologies (SACMAT '12), P123, DOI [DOI 10.1145/2295136.2295160, 10.1145/2295136.2295160]
   Cabanillas C, 2012, LECT NOTES BUS INF P, V99, P50
   Cabanillas C, 2011, LECT NOTES COMPUT SC, V7084, P477, DOI 10.1007/978-3-642-25535-9_32
   Decker G., 2008, BUSINESS PROCESS MAN
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Dumas M, 2005, PROCESS-AWARE INFORMATION SYSTEMS: BRIDGING PEOPLE AND SOFTWARE THROUGH PROCESS TECHNOLOGY, P1, DOI 10.1002/0471741442
   Gro Alexander, 2007, EXTENDED RESOURCE IN
   Hollingsworth D., 1993, Workflow management coalition the workflow reference model
   Hummer W, 2013, INFORM SOFTWARE TECH, V55, P1884, DOI 10.1016/j.infsof.2013.05.001
   Kumar A., 2002, J MANAGE INFORM SYST, V18
   Leitner M., 2011, J WIRELESS MOBILE NE, V2, P4
   Leitner M, 2014, INFORM SOFTWARE TECH, V56, P273, DOI 10.1016/j.infsof.2013.12.004
   Link S., 2008, 3 INT C SOFTW ENG AD
   Muehlen M. Zur, 2004, INFORM TECHNOL MANAG, V5
   O. MDA, 2003, MDA GUIDE VERSION 1
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pesic M., 2007, INT J SOFTW TOOLS TE, P9
   Pesic M., 2005, BUSINESS PROCESS REF, P30
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Rosemann M., 1998, AUSTRAL J INFORM SYS, V6
   Rosemann M., 2007, SEC SUPP SYST, P43
   Russell N., 2007, EVALUATION BPEL4PEOP, V513
   Russell N., 2006, P 3 AS PAC C CONC MO, V53
   Schefer-Wenzl S, 2012, LECT NOTES BUS INF P, V117, P60
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Stefansen Christian, 2008, 2008 IEEE International Conference on Web Services (ICWS), P441, DOI 10.1109/ICWS.2008.41
   Stroppi L.J.R., 2012, CIBSE, P56
   Stroppi L.J.R., 2011, LECT NOTES BUS INFOR, V95
   Tran H., 2008, MODEL DRIVEN ARCHITE
   Van Hee K.M., 2004, Workflow management: models, methods, and systems [Book]
   Wohed P., 2006, BUSINESS PROCESS MAN
   Wohed P., 2009, INFORM SOFTW TECHNOL, P51
   Wolter C, 2007, LECT NOTES COMPUT SC, V4714, P64
   Zhang CX, 2006, INT J COMPUT SCI NET, V6, P211
   Zur Muehlen M., 1999, P 1999 WORKFL MAN C, V70
NR 44
TC 9
Z9 9
U1 2
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 86
EP 108
DI 10.1016/j.infsof.2014.10.006
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200006
OA Green Published
DA 2024-07-18
ER

PT J
AU Holm, H
   Korman, M
   Ekstedt, M
AF Holm, Hannes
   Korman, Matus
   Ekstedt, Mathias
TI A Bayesian network model for likelihood estimations of acquirement of
   critical software vulnerabilities and exploits
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cyber security; Vulnerabilities; Exploits; Statistical model; Security
   metrics
ID COMPROMISE
AB Context: Software vulnerabilities in general, and software vulnerabilities with publicly available exploits in particular, are important to manage for both developers and users. This is however a difficult matter to address as time is limited and vulnerabilities are frequent.
   Objective: This paper presents a Bayesian network based model that can be used by enterprise decision makers to estimate the likelihood that a professional penetration tester is able to obtain knowledge of critical vulnerabilities and exploits for these vulnerabilities for software under different circumstances.
   Method: Data on the activities in the model are gathered from previous empirical studies, vulnerability databases and a survey with 58 individuals who all have been credited for the discovery of critical software vulnerabilities.
   Results: The proposed model describes 13 states related by 17 activities, and a total of 33 different datasets.
   Conclusion: Estimates by the model can be used to support decisions regarding what software to acquire, or what measures to invest in during software development projects. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Holm, Hannes; Korman, Matus; Ekstedt, Mathias] Royal Inst Technol, Dept Ind Informat & Control Syst, S-10044 Stockholm, Sweden.
C3 Royal Institute of Technology
RP Holm, H (corresponding author), Royal Inst Technol, Dept Ind Informat & Control Syst, S-10044 Stockholm, Sweden.
EM hannesh@ics.kth.se
RI Ekstedt, Mathias/U-7557-2019
CR Ablon Lillian, 2014, Markets for Cybercrime Tools and Stolen Information: Hackers' Bazaa
   AKAIKE H, 1987, PSYCHOMETRIKA, V52, P317, DOI 10.1007/BF02294359
   Alhazmi OH, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/ISSRE.2005.30
   Alhazmi OH, 2008, IEEE T RELIAB, V57, P14, DOI 10.1109/TR.2008.916872
   [Anonymous], P 2007 ACM WORKSH QU
   [Anonymous], 2002, MODEL SELECTION MULT
   [Anonymous], 1991, EXPERTS UNCERTAINTY
   [Anonymous], 2001, PRINCIPLES FORECASTI
   [Anonymous], 2009, Project Management: A Systems Approach to Planning, Scheduling and Controlling-10th Edition
   Bilge L., 2012, CCS 12, P833, DOI [10.1145/2382196.2382284, DOI 10.1145/2382196.2382284]
   Bishop M., 2004, Introduction to computer security
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Buttner A., 2009, Common platform enumeration (cpe) specification
   Cavusgil S.T., 1998, EUR J MARKETING, V32, P1165
   Cooke RM, 2008, RELIAB ENG SYST SAFE, V93, P657, DOI 10.1016/j.ress.2007.03.005
   Cowan C., 2003, IEEE Security & Privacy, V1, P38, DOI 10.1109/MSECP.2003.1176994
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Goodyear M., 2010, Cybersecurity management in the states: The emerging role of chief information security officers
   Greenberg A., 2012, SHOPPING ZERO DAYS P
   Holm H, 2014, IEEE T DEPEND SECURE, V11, P2, DOI 10.1109/TDSC.2013.21
   Holm H, 2013, P ANN HICSS, P5029, DOI 10.1109/HICSS.2013.190
   Holm H, 2012, IEEE T DEPEND SECURE, V9, P825, DOI 10.1109/TDSC.2012.66
   Homer J., 2009, A sound and practical approach to quantifying security risk in enterprise networks
   HyunChul Joh, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P299, DOI 10.1109/ISSRE.2008.32
   Ingols K, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P117, DOI 10.1109/ACSAC.2009.21
   Jonsson E, 1997, IEEE T SOFTWARE ENG, V23, P235, DOI 10.1109/32.588541
   Kim J, 2007, HASE 2007: 10TH IEEE HIGH ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P141, DOI 10.1109/HASE.2007.55
   Marconato G.V., 2012, The Computer Journal
   McQueen MA, 2006, ADV INFORM SECUR, P49
   Mell P, 2006, IEEE SECUR PRIV, V4, P85, DOI 10.1109/MSP.2006.145
   Miller C., 2007, WORKSH EC INF SEC WE, P7
   Nyanchama M., 2005, Information Systems Security, V14, P29, DOI 10.1201/1086.1065898X/45390.14.3.20050701/89149.6
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Radianti J., 2009, SYSTEM SCI, P1
   Shahzad M, 2012, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2012.6227141
   Sommestad T., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5564, DOI 10.1109/HICSS.2012.238
   Sommestad T., 2012, SYST IEEE, V7, P363
   Woo S.-W., 2006, P 10 IASTED SEA, V6, P13
NR 40
TC 11
Z9 11
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 304
EP 318
DI 10.1016/j.infsof.2014.07.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800018
DA 2024-07-18
ER

PT J
AU Stojanovic, S
   Radivojevic, Z
   Cvetanovic, M
AF Stojanovic, Sasa
   Radivojevic, Zaharije
   Cvetanovic, Milos
TI Approach for estimating similarity between procedures in differently
   compiled binaries
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software clone; Clone detection; Semantic clone; Software metric; Binary
   code analysis
ID CLONE DETECTION; CODE; SOFTWARE
AB Context: Detection of an unauthorized use of a software library is a clone detection problem that in case of commercial products has additional complexity due to the fact that only binary code is available.
   Objective: The goal of this paper is to propose an approach for estimating the level of similarity between the procedures originating from different binary codes. The assumption is that the clones in the binary codes come from the use of a common software library that may be compiled with different toolsets.
   Method: The approach uses a set of software metrics adapted from the high level languages and it also extends the set with new metrics that take into account syntactical changes that are introduced by the usage of different toolsets and optimizations. Moreover, the approach compares metric values and introduces transformers and formulas that can use training data for production of measure of similarities between the two procedures in binary codes. The approach has been evaluated on programs from STAMP benchmark and BusyBox tool, compiled with different toolsets in different modes.
   Results: The experiments with programs from STAMP benchmark show that detecting the same procedures recall can be up to 1.44 times higher using new metrics. Knowledge about the used compiling toolset can bring up to 2.28 times improvement in recall. The experiment with BusyBox tool shows 43% recall for 43% precision.
   Conclusion: The most useful newly proposed metrics are those that consider the frequency of arithmetic instructions, the number and frequency of occurrences for instructions, and the number of occurrences for target addresses in calls. The best way to combine the results of comparing metrics is to use a geometric mean or when previous knowledge is available, to use an arithmetic mean with appropriate transformer. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Stojanovic, Sasa; Radivojevic, Zaharije; Cvetanovic, Milos] Univ Belgrade, Sch Elect Engn, Belgrade 11000, Serbia.
C3 University of Belgrade
RP Cvetanovic, M (corresponding author), Univ Belgrade, Sch Elect Engn, Bulevar Kralja Aleksandra 73, Belgrade 11000, Serbia.
EM stojsasa@etf.bg.ac.rs; zaki@ettbg.ac.rs; cmilos@etf.bg.ac.rs
RI Cvetanovic, Milos/AAO-5296-2020
FU Ministry of Education, Science, and Technological Development of the
   Republic of Serbia [11144009, TR32047]
FX Work on this project was cofounded by the Ministry of Education,
   Science, and Technological Development of the Republic of Serbia
   (11144009 and TR32047). The authors gratefully acknowledge the support.
CR Al-Omari F., 2012, P WCRE, P405
   [Anonymous], P 12 ACM SIGKDD INT
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Baker BS, 2007, IEEE T SOFTWARE ENG, V33, P608, DOI 10.1109/TSE.2007.70720
   Basit HA, 2009, IEEE T SOFTWARE ENG, V35, P497, DOI 10.1109/TSE.2009.16
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bourquin M., 2013, P 2 ACM SIGPLAN PROG, P10
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P139, DOI 10.1145/301631.301655
   Cosma G, 2012, IEEE T COMPUT, V61, P379, DOI 10.1109/TC.2011.223
   Davey N., 1995, International Journal of Applied Software Technology, V1, P219
   Davis I.J., 2010, 17 WORK C REV ENG WC, P242
   De Sutter B, 2002, ACM SIGPLAN NOTICES, V37, P275, DOI 10.1145/583854.582445
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   Di Penta M., 2010, P 32 ACM IEEE INT C, P145
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Dullien T, 2005, S SEC TECHN INF COMM, V5, P3
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Keivanloo I., 2012, P IWSC, P36
   Kraft N., 2008, P 20 INT C SOFTW ENG, P54
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Merlo E., 2006, P DAGST SEM 06301 DU, P1
   Minh C.C., 2008, P IEEE INT S WORKL C, P35, DOI DOI 10.1109/IISWC.2008.4636089
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy, 2007, 2007541 QUEENS U
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Santos I, 2010, LECT NOTES COMPUT SC, V5965, P35, DOI 10.1007/978-3-642-11747-3_3
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Uddin M.S., 2011, P WCRE, P13
   Zeidman B, 2010, IEEE SPECTRUM, V47, P32, DOI 10.1109/MSPEC.2010.5583460
NR 35
TC 9
Z9 10
U1 0
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 259
EP 271
DI 10.1016/j.infsof.2014.06.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800015
DA 2024-07-18
ER

PT J
AU Gómez, A
   Penadés, MC
   Canós, JH
   Borges, MRS
   Llavador, M
AF Gomez, Abel
   Carmen Penades, M.
   Canos, Jose H.
   Borges, Marcos R. S.
   Llavador, Manuel
TI A framework for variable content document generation with multiple
   actors
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Variable data printing; Document product line; Feature modeling; Model
   driven engineering; Document generation; Document workflow
AB Context: Advances in customization have highlighted the need for tools supporting variable content document management and generation in many domains. Current tools allow the generation of highly customized documents that are variable in both content and layout. However, most frameworks are technology-oriented, and their use requires advanced skills in implementation-related tools, which means their use by end users (i.e. document designers) is severely limited.
   Objective: Starting from past and current trends for customized document authoring, our goal is to provide a document generation alternative in which variants are specified at a high level of abstraction and content reuse can be maximized in high variability scenarios.
   Method: Based on our experience in Document Engineering, we identified areas in the variable content document management and generation field open to further improvement. We first classified the primary sources of variability in document composition processes and then developed a methodology, which we called DPL - based on Software Product Lines principles - to support document generation in high variability scenarios.
   Results: In order to validate the applicability of our methodology we implemented a tool - DPLFW - to carry out DPL processes. After using this in different scenarios, we compared our proposal with other state-of-the-art tools for variable content document management and generation.
   Conclusion: The DPLFW showed a good capacity for the automatic generation of variable content documents equal to or in some cases surpassing other currently available approaches. To the best of our knowledge, DPLFW is the only framework that combines variable content and document workflow facilities, easing the generation of variable content documents in which multiple actors play different roles. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Gomez, Abel] Ecole Mines Nantes INRIA LINA, AtlanMod, F-44307 Nantes, France.
   [Carmen Penades, M.; Canos, Jose H.] Univ Politecn Valencia, ISSI DSIC, Valencia 46022, Spain.
   [Borges, Marcos R. S.] Univ Fed Rio de Janeiro, Inst Matemat, Dept Ciencia Comp, Programa Pas Grad Informat, BR-21941 Rio De Janeiro, Brazil.
   [Llavador, Manuel] Univ Politecn Valencia, Inst Tecnol Informat, Valencia 46022, Spain.
C3 IMT - Institut Mines-Telecom; IMT Atlantique; Universitat Politecnica de
   Valencia; Universidade Federal do Rio de Janeiro; Universitat
   Politecnica de Valencia
RP Gómez, A (corresponding author), Ecole Mines Nantes INRIA LINA, AtlanMod, 4 Rue Alfred Kastler, F-44307 Nantes, France.
EM agomez@dsic.upv.es; mpenades@dsic.upv.es; jhcanos@dsic.upv.es;
   mborges@nce.ufrj.br; mllavador@iti.upv.es
RI Gómez, Abel/J-8652-2012; Borges, Marcos/P-5773-2019; Penades Gramage,
   Maria Carmen/H-9486-2015; Canos-Cerda, Jose H./L-7499-2014
OI Gómez, Abel/0000-0003-1344-8472; Borges, Marcos/0000-0002-2992-3429;
   Penades Gramage, Maria Carmen/0000-0001-6674-4705; Canos-Cerda, Jose
   H./0000-0001-8139-5195
FU Spanish Ministerio de Economia y Competitividad under Grant TIPEx
   [TIN2010-19859-C03-03]
FX This work has been partially funded by the Spanish Ministerio de
   Economia y Competitividad under Grant TIPEx (TIN2010-19859-C03-03).
CR Aedo I., P 8 INT ISCRAM C
   Anderson Robert D., 2012, DITA OPEN TOOLKIT
   [Anonymous], 1990, SGML HDB
   [Anonymous], ECL MOD FRAM PROJ EM
   Balinsky H, 2011, IEEE INT CONF TRUST, P631, DOI 10.1109/TrustCom.2011.81
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berners-Lee T., 2005, RFC 3986 UNIFORM RES
   Beuche D., 2007, Software Product Lines, P143
   Canos J.H., 2013, P 5 INT WORKSH MULT, P69
   Penadés MC, 2010, DOCENG2010: PROCEEDINGS OF THE 2010 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P203
   Chen L, P 13 INT SOFTW PROD
   *ECL FDN, 2003, ECL PLATF TECHN OV
   Eclipse Foundation, 2012, CDO MOD REP CDO
   Gomez Abel, 2012, P 16 INT SOFTW PROD, V1, P96, DOI [10.1145/2362536.2362552, DOI 10.1145/2362536.2362552]
   Gomez Liana A., ACT 17 JORN ING SOFT, P629
   Groher I., WORKSH MAN VAR SOFTW
   Havey Michael., 2005, ESSENTIAL BUSINESS P
   Hewlett-Packard Development Company L.P., 2012, HP DIAL LIV SFOTW
   Hurst N, 2009, DOCENG'09: PROCEEDINGS OF THE 2009 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P99
   ISA Research Group, 2012, FAMA TOOL SUIT
   Kahn R, 2006, INT J DIGIT LIBRARIE, V6, P115, DOI 10.1007/s00799-005-0128-x
   Kang ICC., SOFTW PROD LIN C SPL
   Kang K. C., 1990, Technical Report
   Karol S, 2010, DOCENG2010: PROCEEDINGS OF THE 2010 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P259
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Lumley J, 2005, P 2005 ACM S DOC ENG, P32, DOI DOI 10.1145/1096601.1096615
   McAffer J., 2009, ECLIPSE SERIES
   MCAFFER J., 2005, ECLIPSE RICH CLIENT
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   OASIS, 2010, DARW INF TYP ARCH DI
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Objectif Lune Inc, 2012, PLANETPRESS SUIT
   OMG, 2003, MDA GUID VERS 1 0 1
   OSGi Alliance OSGi Service Platform Core Specification, 2008, TECHNICAL REPORT
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Penades M.C., 2011, ACT 16 JORN ING SOFT
   Penades M.C., P 8 INT ISCRAM C
   Penades M.C., 2012, P 2012 ACM S DOC ENG, P237
   Piccoli R, 2011, DOCENG 2011: PROCEEDINGS OF THE 2011 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P153
   Pichler C., 2011, P 15 INT SOFTW PROD, V2
   Pichler C., 2012, P 6 INT WORKSH VAR M, P27
   Pichler C., 2010, P 2 INT WORKSH MOD D, P61
   PODi: The Digital Printing Initiative, 2012, PERS PRINT MARK LANG
   Powell A., 2007, DUBLIN CORE METADATA
   PTI Marketing Technologies&TRADE;, 2012, FUS FAM
   Rabiser R, 2010, LECT NOTES COMPUT SC, V6287, P47, DOI 10.1007/978-3-642-15579-6_4
   Sellman R, 2007, DOCENG'07: PROCEEDINGS OF THE 2007 ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P53
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Tsang E., 1995, FDN CONSTRAINT SATIS
   UN/CEFACT, 2009, COR COMP TECHN SPEC
   Walsh N., 2010, DEFINITIVE GUIDE SER
   [No title captured]
NR 53
TC 4
Z9 4
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2014
VL 56
IS 9
BP 1101
EP 1121
DI 10.1016/j.infsof.2013.12.006
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6ER
UT WOS:000337783000005
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Leitner, M
   Rinderle-Ma, S
AF Leitner, Maria
   Rinderle-Ma, Stefanie
TI A systematic review on security in Process-Aware Information Systems -
   Constitution, challenges, and future directions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Business Process Management; Business process security; Process-Aware
   Information Systems; Security; Systematic literature review; Workflow
   security
ID ACCESS-CONTROL; AUTHORIZATION CONSTRAINTS; SEMANTIC CONSTRAINTS;
   BUSINESS PROCESSES; MODEL; CHECKING; SUPPORT; SPECIFICATION; RECOVERY;
   RBAC
AB Context: Security in Process-Aware Information Systems (PAIS) has gained increased attention in current research and practice. However, a common understanding and agreement on security is still missing. In addition, the proliferation of literature makes it cumbersome to overlook and determine state of the art and further to identify research challenges and gaps. In summary, a comprehensive and systematic overview of state of the art in research and practice in the area of security in PAIS is missing.
   Objective: This paper investigates research on security in PAIS and aims at establishing a common understanding of terminology in this context. Further it investigates which security controls are currently applied in PAIS.
   Method: A systematic literature review is conducted in order to classify and define security and security controls in PAIS. From initially 424 papers, we selected in total 275 publications that related to security and PAIS between 1993 and 2012. Furthermore, we analyzed and categorized the papers using a systematic mapping approach which resulted into 5 categories and 12 security controls.
   Results: In literature, security in PAIS often centers on specific (security) aspects such as security policies, security requirements, authorization and access control mechanisms, or inter-organizational scenarios. In addition, we identified 12 security controls in the area of security concepts, authorization and access control, applications, verification, and failure handling in PAIS. Based on the results, open research challenges and gaps are identified and discussed with respect to possible solutions.
   Conclusion: This survey provides a comprehensive review of current security practice in PAIS and shows that security in PAIS is a challenging interdisciplinary research field that assembles research methods and principles from security and PAIS. We show that state of the art provides a rich set of methods such as access control models but still several open research challenges remain. (C) 2013 The Authors. Published by Elsevier B.V. All rights reserved.
C1 [Leitner, Maria; Rinderle-Ma, Stefanie] Univ Vienna, Fac Comp Sci, Res Grp Workflow Syst & Technol, A-1090 Vienna, Austria.
C3 University of Vienna
RP Leitner, M (corresponding author), Univ Vienna, Fac Comp Sci, Res Grp Workflow Syst & Technol, Waehringerstr 29, A-1090 Vienna, Austria.
EM maria.leitner@univie.ac.at; stefanie.rinderle-ma@univie.ac.at
RI Leitner, Maria/IZD-8371-2023; Leitner, Maria/AAX-5521-2020; Rinderle-Ma,
   Stefanie/A-5920-2015
OI Leitner, Maria/0000-0003-1371-5446
CR Accorsi R, 2013, ENTERP MODELLING INF, V8, P75, DOI 10.1007/BF03345930
   Accorsi R, 2010, LECT NOTES BUS INF P, V47, P207
   Agrawal A., 2007, WS BPEL EXTENSION PE
   Ahsant M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P17, DOI 10.1109/ARES.2009.92
   Alam M, 2008, J COMPUT SECUR, V16, P223, DOI 10.3233/JCS-2008-16206
   Alberti M., 2007, NORM MULT SYST DAGST, P1
   Altunay M, 2005, LECT NOTES COMPUT SC, V3826, P382
   Anderson R., 2008, Security engineering, V2nd
   [Anonymous], 1998, WFMCTC1019, V1
   [Anonymous], 2001, P 9 INT C TEL SYST M
   [Anonymous], QUALITATIVE DATA ANA
   [Anonymous], 2012, P ACM S APPL COMP SA, DOI DOI 10.1145/2245276.2232051
   [Anonymous], 27000 ISOIEC
   [Anonymous], 2007, OASIS WEB SERV BUS P
   [Anonymous], 2009, Cloud security and privacy: an enterprise perspective on risks and compliance
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2004, PROCEDURES PERFORMIN
   [Anonymous], 2003, Policies for Distributed Systems and Networks, DOI DOI 10.1109/POLICY.2003.1206966
   [Anonymous], 1998, P IFIP TC11 WG11 3 1
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Armando A, 2010, LECT NOTES COMPUT SC, V5983, P66
   Atluri V., 1997, Journal of Computer Security, V5, P303
   Atluri V., 1996, Computer Security-ESORICS 96. 4th European Symposium on Research in Computer Security Proceedings, P44
   Atluri V., 2000, Journal of Computer Security, V8, P3
   Atluri V., 2004, Journal of Computer Security, V12, P799
   Atluri V., 1996, P 10 IFIP WG 11 3 WO, P199
   Atluri Vijayalakshmi., 2001, INFORM SECURITY TECH, V6, P59
   Awad A, 2010, LECT NOTES BUS INF P, V43, P182
   Awad A, 2009, LECT NOTES COMPUT SC, V5900, P500, DOI 10.1007/978-3-642-10383-4_37
   Ayed S, 2008, I C COMP SYST APPLIC, P702, DOI 10.1109/AICCSA.2008.4493605
   Backes M, 2003, LECT NOTES COMPUT SC, V2678, P168
   Barkaoui K, 2008, CRISIS: 2008 THIRD INTERNATIONAL CONFERENCE ON RISKS AND SECURITY OF INTERNET AND SYSTEMS, PROCEEDINGS, P77, DOI 10.1109/CRISIS.2008.4757466
   Barletta Michele, 2009, 2009 International Conference on Computational Science and Engineering (CSE), P289, DOI 10.1109/CSE.2009.172
   Basin D., 2003, Proceedings 8th ACM Symposium on Access Control Models and Technologies (SACMAT '03), P100, DOI DOI 10.1145/775412.775425
   BASKERVILLE R, 1993, COMPUT SURV, V25, P375, DOI 10.1145/162124.162127
   Baumgrass A, 2012, LECT NOTES BUS INF P, V100, P435
   Berthold Michael R., 2009, SIGKDD Explor. Newsl., V11, P26, DOI [10.1145/1656274.1656280, DOI 10.1145/1656274.1656280, :10.1145/1656274.1656280]
   Bertino E., 1999, ACM T INFORM SYST SE, V2, P65
   Bertino E., 2010, SECURITY WEB SERVICE
   Bertino E., 1997, P 2 ACM WORKSHOP ROL, P1
   Bertino E, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P275
   Bezerra F, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL AIDSS, P11
   Bezerra F, 2009, LECT NOTES BUS INF P, V29, P149
   Botha R., 1998, Proc. of the Information Security - from Small System to Management of Secure Infrastructure, P43
   Botha RA, 2001, IBM SYST J, V40, P666, DOI 10.1147/sj.403.0666
   Carminati B, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P489
   Casati F, 2001, INFORM SYST FRONT, V3, P319, DOI 10.1023/A:1011461409620
   Casati F, 1999, ACM T DATABASE SYST, V24, P405, DOI 10.1145/328939.328996
   Chebbi I, 2005, LECT NOTES COMPUT SC, V3760, P112
   Cooper HM., 2009, HDB RES SYNTHESIS ME, V2nd edn
   Crampton J, 2008, INT J INF SECUR, V7, P123, DOI 10.1007/s10207-007-0044-8
   Crampton J, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P31
   Curbera F, 2008, LECT NOTES COMPUT SC, V5331, P100
   Decker M., 2009, P 5 INT C MOB MULT C
   Doganata Y, 2009, LECT NOTES COMPUT SC, V5701, P310, DOI 10.1007/978-3-642-03848-8_21
   Domingos D, 2003, LECT NOTES COMPUT SC, V2808, P23
   Domingos Dulce., 2004, INT C ENTERPRISE INF, P18
   Eder J, 2005, LECT NOTES COMPUT SC, V3760, P502
   Eder J., 1996, Proceedings First IFCIS International Conference on Cooperative Information Systems, P124, DOI 10.1109/COOPIS.1996.555004
   Eder J, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P219, DOI 10.1109/SERVICES-I.2009.49
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   Frankova C, 2007, INT FED INFO PROC, V238, P407
   Fritsch S, 2006, LECT NOTES COMPUT SC, V4043, P154
   Fuchs L, 2011, COMPUT SECUR, V30, P748, DOI 10.1016/j.cose.2011.08.002
   Fung CK, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P761
   Fung CK, 2005, ISORC 2005: EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P149
   Gaaloul Khaled, 2008, 2008 Second International Conference on Emerging Security Information, Systems and Technologies (SECUREWARE), P10, DOI 10.1109/SECURWARE.2008.21
   Giraldo FD, 2011, IEEE INT ENTERP, P42, DOI 10.1109/EDOCW.2011.11
   Gruschka N, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P142
   Gudes E, 2002, DATA KNOWL ENG, V43, P1, DOI 10.1016/S0169-023X(02)00058-7
   Gudes E., 1999, Journal of Computer Security, V7, P287
   Hafner M, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P533
   Hafner M, 2005, LECT NOTES COMPUT SC, V3713, P39
   Hafner M, 2006, INTERNET RES, V16, P491, DOI 10.1108/10662240610710978
   Hafner M, 2009, J UNIVERS COMPUT SCI, V15, P2916
   Hagen C, 2000, IEEE T SOFTWARE ENG, V26, P943, DOI 10.1109/32.879818
   Hamadi R, 2004, LECT NOTES COMPUT SC, V3306, P439
   Hasebe K., 2010, Proceedings 2010 IEEE/IFIP 8th International Conference on Embedded and Ubiquitous Computing (EUC 2010), P711, DOI 10.1109/EUC.2010.112
   Herrmann P., 2006, Electronic Commerce Research, V6, P305, DOI 10.1007/s10660-006-8677-7
   Huang WK, 1999, FOURTH ACM WORKSHOP ON ROLE-BASED ACCESS CONTROL, PROCEEDINGS, P83, DOI 10.1145/319171.319179
   Hung P.C., 2003, Proceedings of the Australasian information security workshop conference on ACSW frontiers 2003, V21, P33
   Hung P. C. K., 2002, Information Technology & Management, V3, P329, DOI 10.1023/A:1019720823789
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jensen M, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P35, DOI 10.1109/ECOWS.2007.9
   Jensen M, 2009, COMPUT SCI-RES DEV, V24, P185, DOI 10.1007/s00450-009-0092-6
   Jensen M, 2009, 16TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P340, DOI 10.1109/ECBS.2009.14
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kandala S, 2002, INT FED INFO PROC, V87, P45
   Kang M. H., 1999, Advanced Information Systems Engineering. 11th International Conference, CAiSE'99. Proceedings (Lecture Notes in Computer Science Vol. 1626), P271
   Kang M. H., 2001, P 6 ACM S ACC CONTR, P66, DOI 10.1145/373256.373266
   Khoury R, 2012, ACM T INFORM SYST SE, V15, DOI 10.1145/2240276.2240281
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Klarl H., 2008, MOD 2008 WORKSH VERH, P14
   Knuplesch D, 2010, LECT NOTES COMPUT SC, V6412, P332, DOI 10.1007/978-3-642-16373-9_24
   Kohler M, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P709, DOI 10.1109/ARES.2008.131
   Koshutanski H, 2004, INT FED INFO PROC, V147, P151
   Koshutanski H., 2003, P 2003 ACM WORKSHOP, P15
   Leitner Maria, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P262, DOI 10.1109/ARES.2013.34
   Leitner M., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P27, DOI 10.1109/ARES.2011.15
   Leitner M., 2012, LNCS, V7651, P652, DOI [10.1007/978-3-642-35063-449, DOI 10.1007/978-3-642-35063-449]
   Leitner M., 2011, J WIRELESS MOBILE NE, V2, P4
   Leitner M, 2013, LECT NOTES BUS INF P, V132, P719
   Leitner M, 2013, LECT NOTES BUS INF P, V165, P236
   Leitner M, 2013, LECT NOTES COMPUT SC, V8111, P507, DOI 10.1007/978-3-642-53856-8_64
   Ly LT, 2011, LECT NOTES COMPUT SC, V7044, P82, DOI 10.1007/978-3-642-25109-2_7
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Long D. L., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P129, DOI 10.1109/CSAC.1999.816020
   Lowis L, 2011, IEEE T SERV COMPUT, V4, P230, DOI 10.1109/TSC.2010.37
   Luo ZW, 2000, APPL INTELL, V13, P125, DOI 10.1023/A:1008388412284
   Ly LT, 2008, DATA KNOWL ENG, V64, P3, DOI 10.1016/j.datak.2007.06.007
   Ly LT, 2012, INFORM SYST FRONT, V14, P195, DOI 10.1007/s10796-009-9185-9
   Ly LT, 2006, LECT NOTES COMPUT SC, V3812, P177
   Maggi Fabrizio Maria, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P132, DOI 10.1007/978-3-642-23059-2_13
   Makni M, 2010, LECT NOTES COMPUT SC, V6426, P523
   Mangler J, 2010, CONCURR COMP-PRACT E, V22, P2036, DOI 10.1002/cpe.1437
   Mendling J, 2008, LECT NOTES BUS INF P, V7, P273
   Menzel M, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P41, DOI 10.1109/ARES.2009.90
   Mikolajczak B., 2005, P ICCIMCA ICIAWTIC V, P958
   Montali M., 2011, DEISLIA00211 U STUD
   Moody DL, 2005, DATA KNOWL ENG, V55, P243, DOI 10.1016/j.datak.2004.12.005
   Muller G., 2013, FESTSCHRIFT J BUCHMA
   Muller Jens, 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P35, DOI 10.1109/ECOWS.2010.24
   Nepal S, 2005, LECT NOTES COMPUT SC, V3760, P40
   Neubauer T, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P231, DOI 10.1109/ICIS.2008.64
   Neubauer T, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P187, DOI 10.1109/ARES.2008.174
   Neubauer T, 2006, FIRST INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P457, DOI 10.1109/ARES.2006.121
   Neubauer T, 2010, SECOND INTERNATIONAL CONFERENCE ON INFORMATION, PROCESS, AND KNOWLEDGE MANAGEMENT: EKNOW 2010, P74, DOI 10.1109/eKNOW.2010.8
   Oh S, 2003, INFORM SYST, V28, P533, DOI 10.1016/S0306-4379(02)00029-7
   Olivier MS, 2002, DATA KNOWL ENG, V43, P281, DOI 10.1016/S0169-023X(02)00129-5
   Orgill G.L., 2004, ACM P 5 C INFORM TEC, P177, DOI [DOI 10.1145/1029533.1029577, 10.1145/1029533.1029577]
   Payne C., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P134, DOI 10.1109/CSAC.1999.816021
   Pesic M, 2006, LECT NOTES COMPUT SC, V4103, P169
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Ray I, 2004, LECT NOTES COMPUT SC, V3180, P24
   Ribeiro C., 1999, Proceedings. IEEE 8th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises (WET ICE'99), P190, DOI 10.1109/ENABL.1999.805198
   Riesner M., 2010, P 21 AUSTR C INF SYS, P1
   Rinderle S, 2006, LECT NOTES COMPUT SC, V4001, P273, DOI 10.1007/11767138_19
   Rinderle-Ma Stefanie, 2010, Proceedings 2010 IEEE 12th International Conference on Commerce and Enterprise Computing (CEC 2010), P128, DOI 10.1109/CEC.2010.17
   Rinderle-Ma S., 2011, Proceedings of EMISA, P51
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   Röhm AW, 1998, 14TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P155, DOI 10.1109/CSAC.1998.738608
   Rohrig S., 2004, Electronic Commerce Research, V4, P59, DOI 10.1023/B:ELEC.0000009282.06809.c5
   Rudolph C, 2009, ELECTRON NOTES THEOR, V236, P33, DOI 10.1016/j.entcs.2009.03.013
   Russell N., 2005, Advanced Information Systems Engineering, V3520, P11
   Russell N, 2006, LECT NOTES COMPUT SC, V4001, P288, DOI 10.1007/11767138_20
   Russello G, 2008, 2008 IEEE WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P153, DOI 10.1109/POLICY.2008.22
   Russello G, 2008, 2008 22ND INTERNATIONAL WORKSHOPS ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOLS 1-3, P111, DOI 10.1109/WAINA.2008.131
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Sadiq SW, 2005, INFORM SYST, V30, P349, DOI 10.1016/j.is.2004.05.002
   Samiha A., 2008, P 6 AUSTRALASIAN C I, P9
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Schaad A., 2006, SACMAT 2006. Proceedings of Eleventh ACM Symposium on Access Control Models and Technologies, P139
   Schaad A., 2007, J INFORM ASSURANCE S, V2
   Schefer S, 2011, LECT NOTES BUS INF P, V83, P660
   Schefer S, 2011, LECT NOTES COMPUT SC, V7044, P329, DOI 10.1007/978-3-642-25109-2_22
   Schneier B., 2004, Secrets and Lies: Digital Security in a Networked World
   Séguran M, 2008, PROCEEDINGS OF THE SIXTH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P125, DOI 10.1109/ECOWS.2008.13
   Song M, 2008, DECIS SUPPORT SYST, V46, P300, DOI 10.1016/j.dss.2008.07.002
   Strembeck M, 2010, LECT NOTES COMPUT SC, V6426, P204
   Sun YQ, 2006, LECT NOTES COMPUT SC, V3865, P525
   Tan A.-H., 1999, P PAKDD 1999 WORKSH, V8, P65
   Tan KJ, 2004, P IEEE CSFW, P155
   Tang J, 1998, LECT NOTES COMPUT SC, V1377, P484
   Thiel K., 2012, 120403F KNIME AG
   Thomas J, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P60
   Thomas R. K., 1994, Proceedings. The Computer Security Foundations Workshop VII, CSFW 7 (Cat. No.94TH0686-6), P66, DOI 10.1109/CSFW.1994.315946
   Thomas R.K., 1993, P 1992 1993 WORKSH N, P138
   van der Aalst WMP, 2005, ELECTRON NOTES THEOR, V121, P3, DOI 10.1016/j.entcs.2004.10.013
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2012, LECT NOTES COMPUT SC, V7481, P1
   van der Aalst WMP, 2008, ACM T INTERNET TECHN, V8, DOI 10.1145/1361186.1361189
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Venter K., 2002, P 2 ANN C INF SEC S, P1
   Wainer J, 2003, INT J COOP INF SYST, V12, P455, DOI 10.1142/S0218843003000814
   Wainer J., 2004, P 2004 ACM S APPL CO, P498
   Wainer J, 2007, INFORM SYST, V32, P365, DOI 10.1016/j.is.2005.11.008
   Wang QH, 2010, ACM T INFORM SYST SE, V13, DOI 10.1145/1880022.1880034
   Warner J., 2006, SACMAT 2006. Proceedings of Eleventh ACM Symposium on Access Control Models and Technologies, P190
   Weber B, 2005, LECT NOTES COMPUT SC, V3760, P59
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Weidlich Matthias, 2011, Business Process Management. Proceedings of the 9th International Conference (BPM 2011), P182, DOI 10.1007/978-3-642-23059-2_16
   Wendler R, 2012, INFORM SOFTWARE TECH, V54, P1317, DOI 10.1016/j.infsof.2012.07.007
   Whitman M. E., 2011, PRINCIPLES INFORM SE
   Winter R., 2006, J ENTERPRISE ARCHITE, V3, P7
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Wolter C, 2007, LECT NOTES COMPUT SC, V4714, P64
   Wolter C, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P51
   Wu SG, 2002, J INTELL INF SYST, V18, P71, DOI 10.1023/A:1012972608697
   Yu M, 2009, J NETW COMPUT APPL, V32, P158, DOI 10.1016/j.jnca.2008.03.007
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang Yi, 2004, Journal of Network and Systems Management, V12, P507, DOI 10.1007/s10922-004-0674-3
   Zhu YJ, 2005, LECT NOTES COMPUT SC, V3588, P14
   Zuccato A, 2004, COMPUT SECUR, V23, P63, DOI [10.1016/S0167-4048(04)00065-3, 10.1016/S0167-4048(03)00003-8]
NR 194
TC 42
Z9 46
U1 0
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2014
VL 56
IS 3
BP 273
EP 293
DI 10.1016/j.infsof.2013.12.004
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA8NU
UT WOS:000331353000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhang, H
   Li, J
   Zhu, LM
   Jeffery, R
   Liu, Y
   Wang, Q
   Li, MS
AF Zhang, He
   Li, Juan
   Zhu, Liming
   Jeffery, Ross
   Liu, Yan
   Wang, Qing
   Li, Mingshu
TI Investigating dependencies in software requirements for change
   propagation analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirement dependency; Requirement traceability; Requirement
   relationship; Change propagation; Impact analysis; Case study
ID IMPACT ANALYSIS; TRACEABILITY
AB Context: The dependencies between individual requirements have an important influence on software engineering activities e.g., project planning, architecture design, and change impact analysis. Although dozens of requirement dependency types were suggested in the literature from different points of interest, there still lacks an evaluation of the applicability of these dependency types in requirements engineering.
   Objective: Understanding the effect of these requirement dependencies to software engineering activities is useful but not trivial. In this study, we aimed to first investigate whether the existing dependency types are useful in practise, in particular for change propagation analysis, and then suggest improvements for dependency classification and definition.
   Method: We conducted a case study that evaluated the usefulness and applicability of two well-known generic dependency models covering 25 dependency types. The case study was conducted in a real-world industry project with three participants who offered different perspectives.
   Results: Our initial evaluation found that there exist a number of overlapping and/or ambiguous dependency types among the current models; five dependency types are particularly useful in change propagation analysis; and practitioners with different backgrounds possess various viewpoints on change propagation. To improve the state-of-the-art, a new dependency model is proposed to tackle the problems identified from the case study and the related literature. The new model classifies dependencies into intrinsic and additional dependencies on the top level, and suggests nine dependency types with precise definitions as its initial set.
   Conclusions: Our case study provides insights into requirement dependencies and their effects on change propagation analysis for both research and practise. The resulting new dependency model needs further evaluation and improvement. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Zhang, He] Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Zhu, Liming; Jeffery, Ross] Univ New S Wales, NICTA, Sydney, NSW 2052, Australia.
   [Li, Juan; Wang, Qing; Li, Mingshu] Chinese Acad Sci, Inst Software, Beijing 100864, Peoples R China.
   [Liu, Yan] Concordia Univ, Fac Engn & Comp Sci, Montreal, PQ, Canada.
C3 Nanjing University; University of New South Wales Sydney; Australian
   National University; Chinese Academy of Sciences; Institute of Software,
   CAS; Concordia University - Canada
RP Zhang, H (corresponding author), Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM dr.hezhang@gmail.com; lijuan@itechs.iscas.ac.cn;
   liming.zhu@nicta.com.au; ross.jeffery@nicta.com.au;
   yan.liu@concordia.ca; wq@itechs.iscas.ac.cn; mingshu@itechs.iscas.ac.cn
RI wang, qi/ITT-9652-2023; Zhu, Li/GXH-9801-2022
OI Zhu, Liming/0000-0001-5839-3765
FU NICTA; Australian Government's Backing Australia's Ability initiative,
   in part through the Australian Research Council; National Natural
   Science Foundation of China [60803023, 60873072, 90718042]; National
   Basic Research Program (973 program) [2007CB310802]; Hi-Tech Research
   and Development Program of China (863 Program) [2007AA0 10303]
FX This work is supported by NICTA which is funded through the Australian
   Government's Backing Australia's Ability initiative, in part through the
   Australian Research Council. This work is also supported by the National
   Natural Science Foundation of China under grants No. 60803023, No.
   60873072, No. 90718042, the National Basic Research Program (973
   program) under Grant No. 2007CB310802, and the Hi-Tech Research and
   Development Program of China (863 Program) under Grant No. 2007AA0
   10303.
CR Abate P, 2009, INT SYMP EMP SOFTWAR, P89, DOI 10.1109/ESEM.2009.5316017
   Aizenbud-Reshef N, 2006, IBM SYST J, V45, P515, DOI 10.1147/sj.453.0515
   [Anonymous], ADV SOFTWARE DEV SER
   [Anonymous], P EARL ASP WORKSH IC
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   Bohner SA, 2002, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSM.2002.1167777
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Carlshamre P, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P961, DOI 10.1109/DEXA.2000.875142
   Chitchyan R., 2006, P WORKSH EARL ASP BO
   Dahlstedt A., 2005, ENG MANAGING SOFTWAR
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P21, DOI 10.1109/FOSM.2008.4659245
   Fasolino AR, 1999, PROG COMPREHEN, P58, DOI 10.1109/WPC.1999.777744
   Godfrey MW, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P129, DOI 10.1109/FOSM.2008.4659256
   Hamza-Lup G., 2008, P 2 IEEE INT SYST C, P1
   Hassine J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P81, DOI 10.1109/IWPSE.2005.8
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Juan Li, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P62, DOI 10.1049/ic.2012.0009
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Khan SS, 2008, LECT NOTES COMPUT SC, V5074, P243
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Li J, 2012, LECT NOTES COMPUT SC, V7481, P200, DOI 10.1007/978-3-642-32885-5_16
   Li Y, 2008, LECT NOTES COMPUT SC, V5007, P100
   Robinson WN, 2003, ACM COMPUT SURV, V35, P132, DOI 10.1145/857076.857079
   Sellier D, 2008, REQUIR ENG, V13, P299, DOI 10.1007/s00766-008-0066-4
   von Knethen A, 2003, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSM.2003.1235427
   von Knethen A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ICRE.2002.1048538
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   YAN YQ, 2009, P INT AS C INF CONTR, P423
   Zhou JH, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P1146
   Zhu LZ, 2008, 2008 INTERNATIONAL WORKSHOP ON INFORMATION TECHNOLOGY AND SECURITY, P24, DOI 10.1109/EDOC.2008.14
   Zhu LM, 2008, LECT NOTES COMPUT SC, V5007, P112
   Zimmermann O, 2009, J SYST SOFTWARE, V82, P1249, DOI 10.1016/j.jss.2009.01.039
NR 34
TC 38
Z9 42
U1 0
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2014
VL 56
IS 1
BP 40
EP 53
DI 10.1016/j.infsof.2013.07.001
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 282EA
UT WOS:000329151900005
DA 2024-07-18
ER

PT J
AU Pinto, M
   Fuentes, L
   Troya, JM
AF Pinto, Monica
   Fuentes, Lidia
   Maria Troya, Jose
TI Specifying aspect-oriented architectures in AO-ADL
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Engineering; Software Architectures; Languages; Aspect-Oriented
   Software Development; Metrics
ID SOFTWARE ARCHITECTURES; MODEL
AB Context: Architecture description languages (ADLs) are a well-accepted approach to software architecture representation. The majority of well-known ADLs are defined by means of components and connectors. Architectural connectors are mainly used to model interactions among components, specifying component communication and coordination separately. However, there are other properties that cut across several components and also affect component interactions (e.g. security).
   Objective: It seems reasonable therefore to model how such crosscutting properties affect component interactions as part of connectors.
   Method: Using an aspect-oriented approach, the AO-ADL architecture description language extends the classical connector semantics with enough expressiveness to model the influences of such crosscutting properties on component interactions (defined as 'aspectual compositions' in connectors).
   Results: This paper describes the AO-ADL language putting special emphasis on the extended connectors used to specify aspectual and non-aspectual compositions between concrete components. The contributions of AO-ADL are validated using concern-oriented metrics available in the literature.
   Conclusion: The measured indicators show that using AO-ADL it is possible to specify more reusable and scalable software architectures. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Pinto, Monica; Fuentes, Lidia; Maria Troya, Jose] Univ Malaga, Dpto Lenguajes & Ciencias Comp, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Pinto, M (corresponding author), Univ Malaga, Dpto Lenguajes & Ciencias Comp, Campus Teatinos S-N, E-29071 Malaga, Spain.
EM pinto@lcc.uma.es; lff@lcc.uma.es; troya@lcc.uma.es
RI Pinto, Monica/G-1891-2015; Fuentes, Lidia/M-5580-2014
OI Pinto, Monica/0000-0002-5376-742X; Fuentes, Lidia/0000-0002-5677-7156
FU Spanish Project [TIN2008-01942]; regional project FamWare [P09-TIC-5231]
FX This research was funded by the Spanish Project TIN2008-01942 and by the
   regional project FamWare P09-TIC-5231.
CR Ali N, 2010, J SYST SOFTWARE, V83, P937, DOI 10.1016/j.jss.2009.12.009
   Batista T.s., 2006, P 2006 INT WORKSHOP, P3, DOI DOI 10.1145/1137639.1137642
   Booch G., 2005, 20 ANN ACM SIGPLAN C, P8
   Canal C, 2003, IEEE T SOFTWARE ENG, V29, P242, DOI 10.1109/TSE.2003.1183935
   Chavez C, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P111
   Chitchyan R., 2006, AOSD EUROPE NOE PUBL
   Chitchyan R., 2005, AOSDEUROPEULANC9
   Chitchyan R, 2007, LECT NOTES COMPUT SC, V4640, P3
   Figueiredo E, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P183
   Fuentes L, 2007, SOFTWARE PRACT EXPER, V37, P21, DOI 10.1002/spe.744
   Fuentes L, 2007, LECT NOTES COMPUT SC, V4758, P292
   Garcia A, 2006, LECT NOTES COMPUT SC, V4344, P82
   Garlan D., 2001, WILEY ENCY SOFTWARE, P1
   Greenwood P, 2007, P EARL ASP ICSE WORK, P8
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Gui G, 2009, J COMPUT, V4, P797
   Harrison W., 2002, RC22685 IBM
   Hoare C.A.R., 1984, Communicating Sequential Processes
   Jackson A., 2008, AOSDEUROPETCDD111
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kienzle Jorg., 2006, AOSD 06, P202
   Koppen C., 1 EUR INT WORKSH ASP, P1
   Landuyt D.V., 2008, BUILDING NEXT GENERA
   Lopes C.V., 1997, D LANGUAGE FRAMEWORK
   Lopes CV, 2006, LECT NOTES COMPUT SC, V3880, P1
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Molesini A, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P29, DOI 10.1109/WICSA.2008.26
   Montero F, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P230, DOI 10.1109/ICECCS.2009.21
   Navasa A, 2009, INFORM SOFTWARE TECH, V51, P306, DOI 10.1016/j.infsof.2008.03.009
   Pérez J, 2008, INFORM SOFTWARE TECH, V50, P969, DOI 10.1016/j.infsof.2007.08.007
   Pessemier N, 2006, LECT NOTES COMPUT SC, V4089, P259
   Pinto M, 2003, LECT NOTES COMPUT SC, V2830, P118
   Pinto M, 2001, 21ST INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P97, DOI 10.1109/CDCS.2001.918692
   Pinto M., 2008, AOSDEUROPESIEMENS11
   Pinto M, 2007, LECT NOTES COMPUT SC, V4765, P94
   Pinto M, 2009, LECT NOTES COMPUT SC, V5872, P360, DOI 10.1007/978-3-642-05290-3_48
   Sánchez P, 2007, LECT NOTES COMPUT SC, V4640, P54
   Sánchez P, 2010, INFORM SOFTWARE TECH, V52, P249, DOI 10.1016/j.infsof.2009.09.001
   Sant'Anna C., 2008, AOSDEUROPEUTD85
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   Suvée D, 2006, LECT NOTES COMPUT SC, V4063, P114
   Tekinerdogan B., 2004, Early aspects: aspect-oriented requirements engineering and architecture design
   Weston N, 2008, INT REQUIR ENG CONF, P173, DOI 10.1109/RE.2008.42
NR 45
TC 15
Z9 15
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2011
VL 53
IS 11
BP 1165
EP 1182
DI 10.1016/j.infsof.2011.04.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 820CQ
UT WOS:000294883500001
DA 2024-07-18
ER

PT J
AU Lavazza, L
   Morasca, S
AF Lavazza, Luigi
   Morasca, Sandro
TI Convertibility of Function Points into COSMIC Function Points: A study
   using Piecewise Linear Regression
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE COSMIC Function Points; Function Point analysis; Functional Size
   Measurement; Functional size measure convertibility; Data analysis;
   Outliers
AB Background: COSMIC Function Points and traditional Function Points (i.e., IFPUG Function Points and more recent variation of Function Points, such as NESMA and FISMA) are probably the best known and most widely used Functional Size Measurement methods. The relationship between the two kinds of Function Points still needs to be investigated. If traditional Function Points could be accurately converted into COSMIC Function Points and vice versa, then, by measuring one kind of Function Points, one would be able to obtain the other kind of Function Points, and one might measure one or the other kind interchangeably. Several studies have been performed to evaluate whether a correlation or a conversion function between the two measures exists. Specifically, it has been suggested that the relationship between traditional Function Points and COSMIC Function Points may not be linear, i.e., the value of COSMIC Function Points seems to increase more than proportionally to an increase of traditional Function Points.
   Objective: This paper aims at verifying this hypothesis using available datasets that collect both FP and CFP size measures.
   Method: Rigorous statistical analysis techniques are used, specifically Piecewise Linear Regression, whose applicability conditions are systematically checked. The Piecewise Linear Regression curve is a series of interconnected segments. In this paper, we focused on Piecewise Linear Regression curves composed of two segments. We also used Linear and Parabolic Regressions, to check if and to what extent Piecewise Linear Regression may provide an advantage over other regression techniques. We used two categories of regression techniques: Ordinary Least Squares regression is based on the usual minimization of the sum of squares of the residuals, or, equivalently, on the minimization of the average squared residual; Least Median of Squares regression is a robust regression technique that is based on the minimization of the median squared residual. Using a robust regression technique helps filter out the excessive influence of outliers.
   Results: It appears that the analysis of the relationship between traditional Function Points and COSMIC Function Points based on the aforementioned data analysis techniques yields valid significant models. However, different results for the various available datasets are achieved. In practice, we obtained statistically valid linear, piecewise linear, and non-linear conversion formulas for several datasets. In general, none of these is better than the others in a statistically significant manner.
   Conclusions: Practitioners interested in the conversion of FP measures into CFP (or vice versa) cannot just pick a conversion model and be sure that it will yield the best results. All the regression models we tested provide good results with some datasets. In practice, all the models described in the paper - in particular, both linear and non-linear ones - should be evaluated in order to identify the ones that are best suited for the specific dataset at hand. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Lavazza, Luigi; Morasca, Sandro] Univ Insubria, Dipartimento Informat & Comunicaz, I-21100 Varese, Italy.
C3 University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Dipartimento Informat & Comunicaz, Via Mazzini 5, I-21100 Varese, Italy.
EM luigi.lavazza@uninsubria.it; sandro.morasca@uninsubria.it
RI Lavazza, Luigi/AAF-5323-2020
OI Lavazza, Luigi/0000-0002-5226-4337; Morasca, Sandro/0000-0003-4598-7024
CR ABRAN A, 1994, J SYSTEMS SOFTWARE, V25
   Abran Alain., 2005, 15 INT WORKSHOP SOFT, P227
   Albrecht A. J., 1979, P JOINT SHAR GUID IB
   [Anonymous], FUNCT POINT COUNT PR
   [Anonymous], 20 INT WORKSH SOFTW
   Cook RD, 1982, RESIDUALS INFLUENCE
   COSMIC, 2007, ADV REL TOP
   *COSMIC, 2007, 19761 ISOIEC COSMIC
   CUADRADOGALLEGO JJ, 2007, 8 INT C PROD FOC SOF
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   Desharnais J.-M., 2006, INT C SOFTW PROC PRO
   FETCKE T, 1999, 199920 TU BERL FACHB
   Kitchenham B., 2002, J SYSTEMS SOFTWARE, V64
   LAVAZZA L, 2009, CONVERTIBILITY FUNCT
   Lavazza L., 2008, 2 INT S EMP SOFTW EN
   Lavazza L., 2010, WORKSH ADV FUNCT SIZ
   MORASCA S, 2009, INT C PRED MOD SOFTW
   Shapiro S. S., 1965, BIOMETRIKA, V52, P3
   VANHEERINGEN H, 2007, CHANGING FPA COSMIC
   Vogelezang F., 2003, 13 INT WORKSH SOFTW
NR 20
TC 13
Z9 13
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2011
VL 53
IS 8
SI SI
BP 874
EP 884
DI 10.1016/j.infsof.2011.02.005
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 784RQ
UT WOS:000292176300006
DA 2024-07-18
ER

PT J
AU Peng, X
   Yu, YJ
   Zhao, WY
AF Peng, Xin
   Yu, Yijun
   Zhao, Wenyun
TI Analyzing evolution of variability in a software product line: From
   contexts and requirements to features
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product line; Variability; Evolution; Feature; Requirements;
   Context
AB Context: In the long run, features of a software product line (SPL) evolve with respect to changes in stakeholder requirements and system contexts. Neither domain engineering nor requirements engineering handles such co-evolution of requirements and contexts explicitly, making it especially hard to reason about the impact of co-changes in complex scenarios.
   Objective: In this paper, we propose a problem-oriented and value-based analysis method for variability evolution analysis. The method takes into account both kinds of changes (requirements and contexts) during the life of an evolving software product line.
   Method: The proposed method extends the core requirements engineering ontology with the notions to represent variability-intensive problem decomposition and evolution. On the basis of problemorientation, the analysis method identifies candidate changes, detects influenced features, and evaluates their contributions to the value of the SPL.
   Results and Conclusion: The process of applying the analysis method is illustrated using a concrete case study of an evolving enterprise software system, which has confirmed that tracing back to requirements and contextual changes is an effective way to understand the evolution of variability in the software product line. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Peng, Xin; Zhao, Wenyun] Fudan Univ, Sch Comp Sci, Shanghai 200433, Peoples R China.
   [Yu, Yijun] Open Univ, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Fudan University; Open University - UK
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai 200433, Peoples R China.
EM pengxin@fudan.edu.cn; y.yu@open.ac.uk; wyzhao@fudan.edu.cn
OI Yu, Yijun/0000-0002-7154-8570
FU National Natural Science Foundation of China [90818009]; National High
   Technology Development 863 Program of China [2009AA010307]; Shanghai
   Committee of Science and Technology, China [08DZ2271800, 09DZ2272800];
   EU
FX We would like to thank the anonymous reviewers for their valuable
   comments and suggestions that allowed us to improve our paper. This work
   is supported by National Natural Science Foundation of China under Grant
   No. 90818009, National High Technology Development 863 Program of China
   under Grant No. 2009AA010307, and Shanghai Committee of Science and
   Technology, China under Grant Nos. 08DZ2271800, 09DZ2272800. The work is
   partially supported by EU FP7 Secure Change project.
CR ALI R, 2009, P 4 INT WORKSH SOFTW
   Ali R, 2010, REQUIR ENG, V15, P439, DOI 10.1007/s00766-010-0110-z
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   BOEHM B, 2005, VALUE BASED SOFTWARE
   CLASSEN A, 2007, VAMOS 07, P109
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   DAMBROS M, 2008, ICSM 08
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Hall J.G., 2005, SOFTW SYST MODEL, V4, P189
   Hall JG, 2008, IEEE T SOFTWARE ENG, V34, P226, DOI 10.1109/TSE.2007.70769
   JACKSON M, 2001, PROBLEM FRAMES ANALY
   JURETA I, 2008, RE, P71
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Liaskos S., 2007, VAMOS 07, V7, P17
   Liaskos S, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P79
   MacLean A., 1991, Human-Computer Interaction, V6, P201, DOI 10.1207/s15327051hci0603&4_2
   MIKYEONG M, 2005, TSE, V31, P551
   MOREIRA A, 2006, CAISE 06, P544
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   PENG X, 2006, ICSR 06
   Peng X, 2009, J COMPUT SCI TECH-CH, V24, P319, DOI 10.1007/s11390-009-9227-2
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   SALIFU M, 2007, VAMOS, P149
   Savolainen J., 2001, Software Engineering Notes, V26, P133, DOI 10.1145/379377.375277
   Svahnberg Mikael., 2000, Variability in Evolving Software Product Lines
   THURIMELLA A, 2007, RE 07 IEEE, P254
   Yu YH, 2008, SITIS 2007: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SIGNAL IMAGE TECHNOLOGIES & INTERNET BASED SYSTEMS, P645, DOI 10.1109/SITIS.2007.149
   Yu Y, 2008, PACIIA: 2008 PACIFIC-ASIA WORKSHOP ON COMPUTATIONAL INTELLIGENCE AND INDUSTRIAL APPLICATION, VOLS 1-3, PROCEEDINGS, P1
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 30
TC 6
Z9 8
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2011
VL 53
IS 7
BP 707
EP 721
DI 10.1016/j.infsof.2011.01.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 767DU
UT WOS:000290836300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pancur, M
   Ciglaric, M
AF Pancur, Matjaz
   Ciglaric, Mojca
TI Impact of test-driven development on productivity, code and tests: A
   controlled experiment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical software engineering; Controlled experiment; Test-driven
   development; Iterative test-last development
ID STATISTICAL POWER; DESIGN
AB Context: Test-driven development is an approach to software development, where automated tests are written before production code in highly iterative cycles. Test-driven development attracts attention as well as followers in professional environment; however empirical evidence of its superiority regarding its effect on productivity, code and tests compared to test-last development is still fairly limited. Moreover, it is not clear if the supposed benefits come from writing tests before code or maybe from high iterativity/short development cycles.
   Objective: This paper describes a family of controlled experiments comparing test-driven development to micro iterative test-last development with emphasis on productivity, code properties (external quality and complexity) and tests (code coverage and fault-finding capabilities).
   Method: Subjects were randomly assigned to test-driven and test-last groups. Controlled experiments were conducted for two years, in an academic environment and in different developer contexts (pair programming and individual programming contexts). Number of successfully implemented stories, percentage of successful acceptance tests, McCabe's code complexity, code coverage and mutation score indicator were measured.
   Results: Experimental results and their selective meta-analysis show no statistically significant differences between test-driven development and iterative test-last development regarding productivity (chi(2)(6) = 4.799, p = 1.0, r = .107, 95% Cl (confidence interval): -.149 to .349), code complexity (chi(2)(6) = 8.094, p = .46, r = .048, 95% Cl: -.254 to .341), branch coverage (chi(2)(6) = 13.996, p = .059, r = .182, 95% Cl: -.081 to .421), percentage of acceptance tests passed (one experiment, Mann-Whitney U = 125.0, p = .98, r = .066) and mutation score indicator (chi(2)(4) = 3.807, p = .87, r = .128, 95% Cl: -.162 to .398).
   Conclusion: According to our findings, the benefits of test-driven development compared to iterative test-last development are small and thus in practice relatively unimportant, although effects are positive. There is an indication of test-driven development endorsing better branch coverage, but effect size is considered small. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Pancur, Matjaz; Ciglaric, Mojca] Univ Ljubljana, Fac Comp & Informat Sci, Ljubljana, Slovenia.
C3 University of Ljubljana
RP Pancur, M (corresponding author), Univ Ljubljana, Fac Comp & Informat Sci, Trzaska 25, Ljubljana, Slovenia.
EM matjaz.pancur@fri.uni-lj.si; mojca.ciglaric@fri.uni-lj.si
CR [Anonymous], 2007, ESEM 07 INT S EMP SO
   [Anonymous], ESEM 07
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2008, P INT C SOFTW ENG, DOI DOI 10.1145/1370788.1370793
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], ISESE 06
   *ATL PTY LTD, CLOV PROJ
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Broy M., 2006, P 2006 INT WORKSH SO, P21, DOI [10.1145/1137702, DOI 10.1145/1137702]
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   Cornett Steve., Code Coverage Analysis
   Crispin I, 2006, IEEE SOFTWARE, V23, P70, DOI 10.1109/MS.2006.157
   Desai Chetan, 2008, SIGCSE Bulletin, V40, P97, DOI 10.1145/1383602.1383644
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Flohr T, 2006, LECT NOTES COMPUT SC, V4034, P305
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Glantz S. A, 2002, PRIMER BIOSTATISTICS
   HAYES JH, 2009, P 2009 ICSE WORKSH T, P26
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Huang L, 2009, INFORM SOFTWARE TECH, V51, P182, DOI 10.1016/j.infsof.2008.03.007
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Janzen DS, 2006, CONF SOFTW ENG EDUC, P141, DOI 10.1109/CSEET.2006.25
   Janzen DS, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P532, DOI 10.1145/1352322.1352315
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Kaner C., 2004, METRICS 2004 IEEE CS
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Levitt S.D., 2009, NBER WORKING PAPER S
   Lindvall M., 2002, LNCS, V2418, P197, DOI DOI 10.1007/3-540-45672-4_19
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   MADEYSKI L, 2005, SOFTWARE ENG EVOLUTI
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4034, P278
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Madeyski L, 2010, IET SOFTW, V4, P32, DOI 10.1049/iet-sen.2008.0038
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Miller J, 1997, INFORM SOFTWARE TECH, V39, P285, DOI 10.1016/S0950-5849(96)01139-1
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Mugridge R., 2003, Extreme Programming and Agile Processes in Software Engineering. 4th International Conference, XP 2003. Proceedings (Lecture Notes in Computer Science Vol.2675), P410
   MUGRIDGE R, 2003, P 4 INT C EXTR PROGR
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   MULLER MM, 2001, P INT C SOFTW ENG IC
   MULLER MM, 2005, LECT NOTES INFORM LN
   Pancur M, 2003, IEEE REGION 8 EUROCON 2003, VOL B, PROCEEDINGS, P83
   PORTER A, 1995, EMPIR SOFTW ENG, P355
   SANCHEZ JC, 2007, P AG 2007 C
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Succi G., 2001, EXTREME PROGRAMMING
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Turhan B, 2010, LECT NOTES BUS INF P, V48, P232
   Vu JH, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P229, DOI 10.1109/ITNG.2009.11
   Wohlin C, 2001, INFORM SOFTWARE TECH, V43, P921, DOI 10.1016/S0950-5849(01)00200-2
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   FIT FRAMEWORK INTEGR
   JUDY MUTATION TESTIN
   METRICS ECLIPSE PLUG
NR 61
TC 23
Z9 26
U1 7
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 557
EP 573
DI 10.1016/j.infsof.2011.02.002
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900001
DA 2024-07-18
ER

PT J
AU Iden, J
   Tessem, B
   Päivärinta, T
AF Iden, Jon
   Tessem, Bjornar
   Paivarinta, Tero
TI Problems in the interplay of development and IT operations in system
   development projects: A Delphi study of Norwegian IT experts
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE System development; IT operations; Interplay; Problems; The Delphi
   method
ID CRITICAL SUCCESS FACTORS; INFORMATION-SYSTEMS; SOFTWARE-DEVELOPMENT;
   ISSUES; TOOL
AB Context: The assumption of the presented work is that the ability of system developers and IT operations personnel to cooperate effectively in system development projects has great impact on the quality of the final system solution, as well as on the service level of its subsequent operation.
   Objective: The present research explores the interplay of system development and IT operations and the challenges they are meeting. We are especially interested in identifying problems encountered between these two parties in system development projects.
   Method: We identify and rank problems by using a ranking-type Delphi study. We involved 42 Norwegian IT experts and split them into three expert panels: system developers, IT operations personnel and system owners. We then guided them through the three phases of the Delphi method - brainstorming, reduction and ranking.
   Results: A comprehensive list of 66 problems, organized into seven groups, is compiled. Through a selection and ranking procedure, the panels found the following to be the six most serious problems in the interplay of system development and IT operations: (1) IT operations not being involved in the requirements specification; (2) poor communication and information flow; (3) unsatisfactory test environments; (4) lack of knowledge transfer; (5) systems being put into production before they are complete; and (6) operational routines not being established prior to deployment.
   Conclusion: The sheer amount and variety of problems mentioned and the respondents' explanations confirm that this interplay needs attention; the parties agree that they do not cooperate effectively in development projects. The results imply that IT operations should be regarded as an important stakeholder throughout several systems development activities, especially requirements analysis, testing and deployment. Moreover, such involvement should be facilitated by an increased focus on enhancing cooperation and communication. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Iden, Jon] Norwegian Sch Econ & Business Adm, Dept Strategy & Management, N-5045 Bergen, Norway.
   [Tessem, Bjornar] Univ Bergen, Dept Informat Sci & Media Studies, N-5020 Bergen, Norway.
   [Paivarinta, Tero] Univ Agder, Grimstad, Norway.
C3 Norwegian School of Economics (NHH); University of Bergen; University of
   Agder
RP Iden, J (corresponding author), Norwegian Sch Econ & Business Adm, Dept Strategy & Management, Helleveien 30, N-5045 Bergen, Norway.
EM jon.iden@nhh.no
OI Paivarinta, Tero/0000-0002-7477-0783
CR [Anonymous], 2002, 35 HAW INT C SYST SC
   [Anonymous], 2004, XP Ser
   Baddoo N., 2002, Software Process Improvement and Practice, V7, P17, DOI 10.1002/spip.151
   Bahli B, 2005, OMEGA-INT J MANAGE S, V33, P175, DOI 10.1016/j.omega.2004.04.003
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   BRAADLAND S, 2007, COOPERATION DEV TEAM, P67
   Conradi R., 2006, SOFTWARE PROCESS IMP
   DEHAES S, 2008, 41 HAW INT C SYST SC, P1
   Dix A.J., 1998, HUMAN COMPUTER INTER, V2nd
   Fowler J. J., 2007, Journal of Organizational and End User Computing, V19, P1, DOI 10.4018/joeuc.2007040101
   GUILLEMETTE M, 2007, CAHIER GRESI, P1
   Gupta UG, 1996, TECHNOL FORECAST SOC, V53, P185, DOI 10.1016/S0040-1625(96)00094-7
   HALLERAKER H, 2007, CASE STUDY IT OPERAT
   Hofstede Geert., 2004, CULTURES ORG SOFTWAR
   IDEN J, 2008, NOKOBIT
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jordan P.W., 1998, INTRO USABILITY
   Kling R., 1999, D-Lib Magazine
   Lyytinen K, 1999, INFORM SYST J, V9, P85, DOI 10.1046/j.1365-2575.1999.00051.x
   McNurlin B.C., 2006, Information systems management in practice, V7th
   MURRY JW, 1995, REV HIGH EDUC, V18, P423, DOI 10.1353/rhe.1995.0008
   Nelson KM, 1996, MIS QUART, V20, P409, DOI 10.2307/249562
   *O O G COMM, 2007, OFF INTR ITIL SERV L
   *O O G COMM, 2002, APPL MAN
   *O O G COMM, 2007, SERV STRAT
   Okoli C, 2004, INFORM MANAGE-AMSTER, V42, P15, DOI 10.1016/j.im.2003.11.002
   Peppard J, 2004, J STRATEGIC INF SYST, V13, P167, DOI 10.1016/j.jsis.2004.02.002
   Pollard C, 2009, INFORM SYST MANAGE, V26, P164, DOI 10.1080/10580530902797540
   Pollard CE, 2010, INFORM SYST MANAGE, V27, P113, DOI 10.1080/10580531003684959
   RICHMOND WB, 1992, DECIS SUPPORT SYST, V8, P459, DOI 10.1016/0167-9236(92)90029-O
   Rognerud H., 2009, 3 INT S EMP SOFTW EN
   Rowe G, 1999, INT J FORECASTING, V15, P353, DOI 10.1016/S0169-2070(99)00018-7
   ROWE G, 1991, TECHNOL FORECAST SOC, V39, P235, DOI 10.1016/0040-1625(91)90039-I
   Royce W.W., 1970, Proceedings of WESCON, P1
   Sabherwal R, 1999, COMMUN ACM, V42, P80, DOI 10.1145/293411.293485
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Schmidt RC, 1997, DECISION SCI, V28, P763, DOI 10.1111/j.1540-5915.1997.tb01330.x
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Shneiderman B., 2010, DESIGNING USER INTER
   Sommerville I, 1997, ANN SOFTW ENG, V3, P101, DOI 10.1023/A:1018946223345
   Sommerville I., 2004, Software Engineering
   STADHEIM O, 2007, FOKUS INNHOLD IKKJEF, P76
   Story V., 2001, The Marketing Review, V1, P487, DOI DOI 10.1362/1469347002562579
   Teo TSH, 1999, INT J INFORM MANAGE, V19, P173, DOI 10.1016/S0268-4012(99)00007-9
   TESSEM B, 2007, NOKOBIT 2007, P15
   WEIL P, 2004, IT GOVERNANACE TOP P
   YEO JKT, 2002, INT J PROJ MANAG, V20, P241
NR 47
TC 19
Z9 23
U1 1
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2011
VL 53
IS 4
SI SI
BP 394
EP 406
DI 10.1016/j.infsof.2010.12.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 739QK
UT WOS:000288732700008
DA 2024-07-18
ER

PT J
AU von Wangenheim, CG
   da Silva, DA
   Buglione, L
   Scheidt, R
   Prikladnicki, R
AF von Wangenheim, Christiane Gresse
   da Silva, Djoni Antonio
   Buglione, Luigi
   Scheidt, Rafael
   Prikladnicki, Rafael
TI Best practice fusion of CMMI-DEV v1.2 (PP, PMC, SAM) and PMBOK 2008
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software project management; CMMI; PMBOK; Mapping; Basic process areas
AB Context: The establishment of effective and efficient project management practices still remains a challenge to software organizations. In striving to address these needs, "best practice" models, such as, CMMI or PMBOK, are being developed to assist organizations interested in improving project management. And, although, those models share overlapping content, there are still differences and, therefore, each of the models offers different advantages.
   Objective: This paper proposes a set of unified project management best practices by integrating and harmonizing on a high-level perspective PMBOK (4th ed.) processes and CMMI-DEV v1.2 specific practices of the basic project management process areas PP, PMC and SAM.
   Method: Based on the analysis of both models, a unified set of best practices has been defined by a group of researchers with theoretical and practical expertise on the CMMI framework and software process improvement as well as project management and the PMBOK. The proposed set has been revised by different researchers from different institutions in several review rounds until consensus was achieved.
   Results: As a result, a set of unified best practices is defined and explicitly mapped to the correspondent PMBOK processes and CMMI specific practices of the current versions of both models. Conclusion: We can conclude that an integration and harmonization of both models is possible and may help to implement and assess project management processes more effectively and efficiently, optimizing software process improvement investments. (C) 2010 Elsevier B.V. All rights reserved.
C1 [von Wangenheim, Christiane Gresse; Scheidt, Rafael] Univ Fed Santa Catarina, Programa Posgrad Ciencia Computacao, Florianopolis, SC, Brazil.
   [da Silva, Djoni Antonio] Univ Vale Itajai, Sao Jose, SC, Brazil.
   [Buglione, Luigi] Ecole Technol Super, Montreal, PQ, Canada.
   [Buglione, Luigi] Engn IT, I-00148 Rome, Italy.
   [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Fac Informat, Porto Alegre, RS, Brazil.
C3 Universidade Federal de Santa Catarina (UFSC); Universidade do Vale do
   Itajai; University of Quebec; Ecole de Technologie Superieure - Canada;
   Pontificia Universidade Catolica Do Rio Grande Do Sul
RP von Wangenheim, CG (corresponding author), Univ Fed Santa Catarina, Programa Posgrad Ciencia Computacao, Florianopolis, SC, Brazil.
EM gresse@gmail.com
RI Buglione, Luigi/KFQ-4612-2024; Incod, Inct/J-8375-2013; von Wangenheim,
   Christiane Gresse/H-3685-2013; von Wangenheim, Aldo/AAL-7158-2020
OI von Wangenheim, Christiane Gresse/0000-0002-6566-1606; von Wangenheim,
   Aldo/0000-0003-4532-1417
FU CNPq (Conselho Nacional de Desenvolvimento Cientifico e Tecnologico)
FX This work was supported by the CNPq (Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico - www.cnpq.br), an entity of
   the Brazilian government focused on scientific and technological
   development.
CR [Anonymous], 2008, A Guide to the Project Management Body of Knowledge (PMBOK Guide), V4th
   [Anonymous], 2009, CHAOS REP
   [Anonymous], 2008, Organizational project management maturity model (OPM3)
   BELLO Y, 2004, P 9 EUROPEAN SEPG 20
   BUGLIONE L, 2008, P 22 IPMA WORLD C RO
   *CMMI PROD TEAM, 2006, CMMI DEV VERS 1 2 TE
   *CMMI PROD TEAM, 2009, CMMI SERV VERS 1 2 C
   CMMI Product Team, 2007, CMUSEI2007TR017 CMMI
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   *FED AV ADM, 2001, FAA INT CAP MAT MOD
   Ibrahim L., 2008, P 4 WORLD C SOFTW QU
   Jones C., 2004, Software Project Management Practices: Failure Versus Success
   Saint S., 1994, RULES REACHING CONSE
   SHEAKLEY CA, 2002, PMBOK GUID DISTILLED
   SHERER W, 2006, P SSTC 2006 SALT LAK
   THIRY M, 2009, P 2 WORKSH ADV SOFTW
NR 16
TC 14
Z9 22
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2010
VL 52
IS 7
BP 749
EP 757
DI 10.1016/j.infsof.2010.03.008
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 605JA
UT WOS:000278342600004
DA 2024-07-18
ER

PT J
AU Yoon, KA
   Bae, DH
AF Yoon, Kyung-A
   Bae, Doo-Hwan
TI A pattern-based outlier detection method identifying abnormal attributes
   in software project data
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Outlier detection; Noise detection; Data cleaning; Data quality
AB Despite the importance of the quality of software project data, problematic data inevitably occurs during data collection. These data are the outliers with abnormal values on certain attributes, which we call the abnormal attributes of outliers. Manually detecting outliers and their abnormal attributes is laborious and time consuming. Although few existing approaches identify outliers and their abnormal attributes, these approaches are not effective in (1) identifying the abnormal attributes when the outlier has abnormal values on more than the specific number of its attributes or (2) discovering accurate rules to detect outliers and their abnormal attributes. In this paper, we propose a pattern-based outlier detection method that identifies abnormal attributes in software project data: after discovering the reliable frequent patterns that reflect the typical characteristics of the software project data, outliers and their abnormal attributes are detected by matching the software project data with those patterns. Empirical studies were performed on three industrial data sets and 48 artificial data sets with injected outliers. The results demonstrate that our approach outperforms five other approaches by an average of 35.27% and 107.5% in detecting the outliers and abnormal attributes, respectively, on the industrial data sets, and an average of 35.44% and 46.57%, respectively on the artificial data sets. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Yoon, Kyung-A; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Coll Informat Sci & Technol, Div Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Yoon, KA (corresponding author), Korea Adv Inst Sci & Technol, Coll Informat Sci & Technol, Div Comp Sci, 373-1 Guseong Dong, Taejon 305701, South Korea.
EM kayoon@se.kaist.ac.kr; bae@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011
FU MKE (Ministry of Knowledge Economy), Korea
   [NIPA-2009-(C1090-0902-0032)]; Defense Acquisition Program
   Administration; Agency for Defense Development
FX We are especially grateful to Oh-Sung Kwon and two professional quality
   engineers for evaluating our approach with the industrial data set. In
   addition, we would like to thank Miryung Kim for providing useful
   comments to improve this paper. This research was supported by the MKE
   (Ministry of Knowledge Economy), Korea, under the ITRC (Information
   Technology Research Center) support program supervised by the NIPA
   (National IT Industry Promotion Agency) (NIPA-2009-(C1090-0902-0032)),
   and partially supported by Defense Acquisition Program Administration
   and Agency for Defense Development under the contract.
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   ARISHOLM E, 2006, 5 ACM IEEE INT S EMP, P8
   Barnett V., 1984, OUTLIERS STAT DATA
   Choi K, 2009, INFORM SOFTWARE TECH, V51, P162, DOI 10.1016/j.infsof.2008.03.001
   FLORAC WA, 1999, SEI S SOFTW, P1
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Han JW, 2004, DATA MIN KNOWL DISC, V8, P53, DOI 10.1023/B:DAMI.0000005258.31418.83
   Hayter A.J., 2007, PROBABILITY STAT ENG, Vthird
   He Zengyou, 2005, Computer Science and Information Systems, V2, P103, DOI DOI 10.2298/CSIS0501103H
   Hodge VJ, 2004, ARTIF INTELL REV, V22, P85, DOI 10.1023/B:AIRE.0000045502.10941.a9
   Huang K., 1999, Quality Information and Knowledge
   HULSE JV, 2007, KNOWL INF SYST, V11, P170
   Khoshgoftaar TM, 2006, INTELL DATA ANAL, V10, P251, DOI 10.3233/IDA-2006-10305
   Liebchen Gemot, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P99
   Mendenhall William., 2005, Introduction to Probability and Statistics, V12th
   NGHE NT, 2007, P 37 ASEE IEEE FRONT
   Parsons L., 2004, ACM SIGKDD EXPLOR NE, V6, P90, DOI DOI 10.1145/1007730.1007731
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Redman T. C., 1997, DATA QUALITY INFORM
   Seo YS., 2008, P 4 INT WORKSH PRED, P25, DOI DOI 10.1145/1370788.1370796
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   XHU X, 2004, ARTIF INTELL, V22, P117
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   YOON K, 2007, P 1 INT S EMP SOFTW, P443
NR 27
TC 12
Z9 14
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2010
VL 52
IS 2
BP 137
EP 151
DI 10.1016/j.infsof.2009.08.005
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 540WW
UT WOS:000273372400002
DA 2024-07-18
ER

PT J
AU Lucas, FJ
   Molina, F
   Toval, A
AF Lucas, Francisco J.
   Molina, Fernando
   Toval, Ambrosio
TI A systematic review of UML model consistency management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE UML; Model consistency; Systematic literature review
ID INCONSISTENCIES; DIAGNOSIS; CHECKING
AB Information System (IS) development has been beset by consistency problems since its infancy. These problems are greater still in UML software development. and are principally caused by the existence of multiple views (models) for the same system. and may involve potentially contradictory system specifications. Since a considerable amount of work takes place within the scope of model consistency management, this paper presents a systematic literature review (SLR) which was carried out to discover the various current model consistency conceptions. proposals, problems and solutions provided. To do this, a total of 907 papers related to UML model consistency published in literature and extracted from the most relevant scientific sources (IEEE Computer Society, ACM Digital Library, Google Scholar, ScienceDirect, and the SCOPUS Database) were considered, of which 42 papers were eventually analyzed This systematic literature review resulted in the identification of the current state-of-the-art with regard to UML model consistency management research along with open issues, trends and future research within this scope. A formal approach for the handling of inconsistency problems which fulfils the identified limitations is also briefly presented. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Lucas, Francisco J.; Molina, Fernando; Toval, Ambrosio] Univ Murcia, Dept Informat & Syst, Software Engn Res Grp, E-30001 Murcia, Spain.
C3 University of Murcia
RP Lucas, FJ (corresponding author), Univ Murcia, Dept Informat & Syst, Software Engn Res Grp, E-30001 Murcia, Spain.
EM fjlucas@um.es; fmolina@um.es; atoval@um.es
RI Toval, Ambrosio/P-1180-2014
OI Toval, Ambrosio/0000-0002-8273-5937
FU Spanish Ministry of Science and Technology [TIN2006-15175-COS-03]
FX Partially financed by the Spanish Ministry of Science and Technology,
   project DEDALO TIN2006-15175-COS-03
CR Amálio N, 2004, LECT NOTES COMPUT SC, V3308, P418
   Amaya P, 2006, ELECTRON NOTES THEOR, V163, P31, DOI 10.1016/j.entcs.2006.07.006
   Beckert B, 2006, IEEE INTELL SYST, V21, P71, DOI 10.1109/MIS.2006.117
   BIOLCHLNI J, 2005, RTES67905 U FED RIO
   *BORL TOG, 2007, VIS MOD SOFTW ARCH D
   Chiorean D., 2004, ELECTRON NOTES THEOR, V102, P99, DOI DOI 10.1016/J.ENTCS.2003.09.005
   CLAVEL M, 2007, TALCORE MAUDE 2 3 MA
   Cuadrado LS, 2007, IEEE SOFTWARE, V24, P48, DOI 10.1109/MS.2007.135
   Diethers K, 2004, LECT NOTES COMPUT SC, V2988, P139
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   *ECL, 2007, GEN MOD TECHN GMT
   Egyed A, 2004, LECT NOTES COMPUT SC, V2984, P37
   EGYED A, 2007, 29 INT C SOFTW ENG I, P793
   EGYED A, 2006, ICSE, P381
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   EHRIG H, 1985, FUNDAMENTALS ALGEBRA
   Engels G., 2001, Software Engineering Notes, V26, P186, DOI 10.1145/503271.503235
   Engels G., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P212
   Engels G., 2002, INT WORKSH PRINC SOF, P129, DOI [10.1145/512035.512066, DOI 10.1145/512035.512066]
   ENGELS G, 2001, P 8 EUR SOFTW ENG C, P186
   FRYZ L, 2007, INT C DEP COMP SYST, P51
   GOGOLLA M, 2004, P 9 AD EUR INT C REL, P1
   GRAAF B, 2007, P 4 INT WORKSH MOD B
   Habrias H., 2006, SOFTWARE SPECIFICATI
   Hausmann J.H., 2002, P UML 2002 WORKSHOP, P61
   HECKEL R, 2001, ELECT NOTES THEOR CO, V50, P257
   HUZAR Z, 2003, P WORKSH CONS PROBL
   HUZAR Z, 2004, LNCS, V3297
   Inverardi P, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P346, DOI 10.1109/ASE.2001.989826
   JOUAULR F, 2006, 21 ANN ACM SIGPLAN C
   Kholkar D., 2005, P 2005 ACM S SOFTWAR, P77
   KITCHENHAM B, 2007, EBSE200701 U DURH SC
   KLEPEE AG, 2003, MDA EXPLAINED MODEL
   Kuster J.M., 2004, ELECTRON NOTES THEOR, V109, P57, DOI DOI 10.1016/J.ENTCS.2004.02.056
   Küster JM, 2003, LECT NOTES COMPUT SC, V3188, P157
   Laleau R, 2008, INFORM SOFTWARE TECH, V50, P797, DOI 10.1016/j.infsof.2007.10.007
   Lam VSW, 2005, LECT NOTES COMPUT SC, V3771, P347
   LUCAS FJ, 2008, 12008 LSI U MUR DEP
   LUCAS FJ, LNCS, V3770
   MAIGOUYRES H, 2006, SAC 06, P1804
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Muskens J, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P169
   *OMG, 2001, MDA GUID VERS 1 0 1
   *OMG, 2007, UN MOD LANG SUP VERS
   *OMG, 2004, MOF METAOBJECT FAC S
   *OMG, 2007, MOF QVT FIN AD SPEC
   OSSAMI DDO, 2005, LNCS, P386
   Paige R.F., 2002, J OBJECT TECHNOL, V1, P77
   Paige RF, 2007, ACM T SOFTW ENG METH, V16, pB1, DOI 10.1145/1243987.1243989
   Paige RF, 2005, ELECTRON NOTES THEOR, V137, P151, DOI 10.1016/j.entcs.2005.04.029
   RASCH H, 2003, LECT NOTES COMPUTER
   SAPNA PG, 2007, 10 INT C INF TECHN, P217
   Schmechtig S, 2006, NEW ELECTRON, V39, P31
   Schrefl M, 2002, ACM T SOFTW ENG METH, V11, P92, DOI 10.1145/504087.504091
   Selonen P., 2003, Journal of Database Management, V14, P37, DOI 10.4018/jdm.2003070103
   SHINKAWA Y, 2006, 13 AS PAC SOFTW ENG
   SMITH AJ, 1990, IEEE COMPUT, V23, P65
   SOURROUILLE JL, 2002, SEKE, P217
   Spanoudakis G, 2004, INT J SOFTW ENG KNOW, V14, P141, DOI 10.1142/S0218194004001610
   Spanoudakis G, 2002, J SYST SOFTWARE, V64, P3, DOI 10.1016/S0164-1212(02)00018-3
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   STRAETEN RVD, 2004, ADL 04 3 INT WORKSH
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   Van Der Straeten R., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1210, DOI 10.1145/1141277.1141564
   Van Der Straeten R, 2007, SOFTW SYST MODEL, V6, P139, DOI 10.1007/s10270-006-0025-9
   van Hee K, 2004, LECT NOTES COMPUT SC, V3080, P1
   Wagner R, 2003, P INT C UN MOD LANG
   WANG H, 2005, ISCIT 2005
   WARMER J, 1999, OBJECT CONSTRAING LA
   Yao SZ, 2006, CIC 2006: 15TH INTERNATIONAL CONFERENCE ON COMPUTING, PROCEEDINGS, P289
   Yeung WL, 2004, J UNIVERS COMPUT SCI, V10, P1540
   Zhao R, 2006, GREEN CHEM, V8, P459, DOI 10.1039/b517656e
NR 72
TC 93
Z9 104
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2009
VL 51
IS 12
BP 1631
EP 1645
DI 10.1016/j.infsof.2009.04.009
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 510ZR
UT WOS:000271133600002
DA 2024-07-18
ER

PT J
AU Katsaros, P
AF Katsaros, Panagiotis
TI A roadmap to electronic payment transaction guarantees and a Colored
   Petri Net model checking approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Electronic payments; Atomicity; Fault tolerance; E-commerce
   transactions; Security; Colored Petri Nets; Model checking
AB Electronic payment systems play a vital role in modern business-to-consumer and business-to-business e-commerce. Atomicity, fault tolerance and security concerns form a problem domain of interdependent issues that are taken into account to assure the transaction guarantees of interest. We focus on the most notable payment transaction guarantees: money conservation, no double spending, goods atomicity, distributed payment atomicity, certified delivery or validated receipt and the high-level guarantees of fairness and protection of payment participants' interests. Apart from a roadmap to the forenamed transaction guarantees, this work's contribution is basically a full-fledged methodology for building and validating high-level protocol models and for proving payment transaction guarantees by model checking them from different participants perspectives (payer perspective, as well as payee perspective). Our approach lies on the use of Colored Petri Nets and the CPN Tools environment (i) for editing and analyzing protocol models, (ii) for proving the required transaction guarantees by CTL-based (Computation Tree Temporal Logic) model checking and (iii) for evaluating the need of candidate security requirements. (C) 2008 Elsevier B.V. All rights reserved.
C1 Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54121, Greece.
C3 Aristotle University of Thessaloniki
RP Katsaros, P (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54121, Greece.
EM katsaros@csd.auth.gr
RI Katsaros, Panagiotis/JBR-8825-2023; Katsaros, Panagiotis/D-2546-2012
OI Katsaros, Panagiotis/0000-0002-4309-5295
CR Al-Azzoni I., 2005, Nord. J. Comput, V12, P200
   Alaraj A., 2007, LECT NOTES COMPUTER, V1, P248
   [Anonymous], CPN Tools
   Asokan N, 1997, COMPUTER, V30, P28, DOI 10.1109/2.612244
   ASOKAN N, 1998, THESIS U WATERLOO ON
   AUSTRY D, 1989, THEORETICAL COMPUTER, V1, P91
   Basagiannis S, 2007, LECT NOTES COMPUT SC, V4680, P238
   Basagiannis S, 2006, LECT NOTES COMPUT SC, V4330, P317
   Berard B., 2001, Systems and Software Verification
   Bernardeschi C, 2002, SOFTW TEST VERIF REL, V12, P251, DOI 10.1002/stvr.258
   Billington J, 2004, LECT NOTES COMPUT SC, V3098, P210, DOI 10.1007/978-3-540-27755-2_6
   Bouali A., 1994, Bulletin of the European Association for Theoretical Computer Science, P207
   CHENG A, 1996, P INT WORKSH DISCR E, P169
   Cox B, 1995, PROCEEDINGS OF THE FIRST USENIX WORKSHOP OF ELECTRONIC COMMERCE, P77
   DEFERREIRA L, 1998, P 14 ANN COMP SEC AP, P137
   Deitel H.M., 2001, E-business and e-commerce for managers
   DENICOLA R, 1990, LECT NOTES COMPUT SC, V469, P407
   DIERKS T, 1999, 2246 IETF NETW WORK
   DILL D, P 8 INT C COMP AID
   Franklin M.K., 1997, Proceedings of the 4th ACM Conference on Computer and Communications Security, P1
   GARCIAFANJUL J, 1998, P 4 INT WORKSH AUT T, P195
   Georgiadis C. K., 2006, P IADIS INT C E COMM, P297
   Heintze N, 1996, PROCEEDINGS OF THE SECOND USENIX WORKSHOP ON ELECTRONIC COMMERCE, P147
   Jensen K., 1997, MONOGRAPHS THEORETIC, V1-3
   JENSEN K, 1998, LECT NOTES COMPUTER, V1492, P237, DOI DOI 10.1007/3-540-65307-4_50
   KATSAROS P, 2005, DAIMI PB, V576, P267
   Kempster T., 1999, P 2 INT C TEL EL COM
   Ketchpel SP, 1996, INT CON DISTR COMP S, P270, DOI 10.1109/ICDCS.1996.507925
   LYON J, 1998, 2371 IETF NETW WORK
   Mu Y, 2001, LECT NOTES COMPUT SC, V2040, P20
   NENADIC A, 2004, P INT C INF TECHN CO
   O'Mahony Donal., 2001, ELECT PAYMENT SYSTEM, V2nd
   Ouyang C, 2002, LECT NOTES COMPUT SC, V2455, P377
   OUYANG C, 2004, P 2004 ACM S APPL CO, P779
   Papazoglou MP, 2003, WORLD WIDE WEB, V6, P49, DOI 10.1023/A:1022308532661
   PFITZMANN B, 1996, 2823 RZ IBM RES DIV
   POMBORTSIS A, 2002, INTRO ELECT COMMERCE
   Ray I, 2005, DECIS SUPPORT SYST, V39, P267, DOI 10.1016/j.dss.2003.10.011
   Roscoe A.W., 2005, THEORY PRACTICE CONC
   ROY V, 1991, LECT NOTES COMPUT SC, V531, P65, DOI 10.1007/BFb0023720
   Schuldt H, 2000, PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, VOL I, P434, DOI 10.1109/WISE.2000.882423
   Shmatikov V, 2002, THEOR COMPUT SCI, V283, P419, DOI 10.1016/S0304-3975(01)00141-4
   Shyamasundar RK, 2002, LECT NOTES COMPUT SC, V2550, P220
   SU J, 1996, P 6 USENIX UNIX SEC
   TYGAR JD, 1998, NETWORKER, V2, P32
   Wang GD, 2001, LECT NOTES COMPUT SC, V2115, P121
   WONG HL, 2000, CMUCS00160 CARN MELL
   Xu SH, 1999, LECT NOTES COMPUT SC, V1729, P14
NR 48
TC 25
Z9 29
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 235
EP 257
DI 10.1016/j.infsof.2008.01.005
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kampenes, VB
   Dybå, T
   Hannay, JE
   Sjoberg, DIK
AF Kampenes, Vigdis By
   Dyba, Tore
   Hannay, Jo E.
   Sjoberg, Dag I. K.
TI A systematic review of quasi-experiments in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quasi-experiments; Randomization; Field experiments; Empirical software
   engineering; Selection bias; Effect size
ID DESIGN AFFECTS OUTCOMES; ASSIGNMENT; TRIALS; THERAPY; EFFICACY
AB Background: Experiments in which study units are assigned to experimental groups nonrandomly are called quasi-experiments. They allow investigations of cause-effect relations in settings in which randomization is inappropriate, impractical, or too costly.
   Problem outline: The procedure by which the nonrandom assignments are made might result in selection bias and other related internal validity problems. Selection bias is a systematic (not happening by chance) pre-experimental difference between the groups that Could influence the results. By detecting the cause of the selection bias, and designing and analyzing the experiments accordingly, the effect of the bias may be reduced or eliminated.
   Research method: To investigate how quasi-experiments are performed in software engineering (SE), we conducted a systematic review of the experiments published in nine major SE journals and three conference proceedings in the decade 1993-2002.
   Results: Among the 113 experiments detected, 35% were quasi-experiments. In addition to Held experiments, we found several applications for quasi-experiments in SE. However, there seems to be little awareness of the precise nature of quasi-experiments and the potential for selection bias in them. The term "quasi-experiment" was used in only 10% of the articles reporting quasi-experiments; only half of the quasi-experiments measured a pretest score to control for selection bias, and only 8% reported a threat of selection bias. On average, larger effect sizes were seen in randomized than in quasi-experiments, which might be due to selection bias in the quasi-experiments.
   Conclusion: We conclude that quasi-experimentation is useful in many settings in SE, but their design and analysis must be improved (in ways described in this paper), to ensure that inferences made from this kind of experiment are valid. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Kampenes, Vigdis By; Dyba, Tore; Hannay, Jo E.; Sjoberg, Dag I. K.] Simula Res Lab, Dept Software Engn, NO-1325 Lysaker, Norway.
   [Kampenes, Vigdis By; Hannay, Jo E.; Sjoberg, Dag I. K.] Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
   [Dyba, Tore] SINTEF ICT, NO-7465 Trondheim, Norway.
C3 University of Oslo; SINTEF
RP Kampenes, VB (corresponding author), Simula Res Lab, Dept Software Engn, POB 134, NO-1325 Lysaker, Norway.
EM vigdis@simula.no; tore.dyba@sintef.no; johannay@simula.no;
   dagsj@simula.no
FU Research Council of Norway through INCO project
FX We thank the Research Council of Norway for financing this work through
   the INCO project; the editor, Barbara Kitchenham, and the anonymous
   reviewers for valuable comments; Gunnar Bergersen for useful
   discussions; and Chris Wright for proofreading.
CR Aiken LS, 1998, EVALUATION REV, V22, P207, DOI 10.1177/0193841X9802200203
   Altman DG, 2001, ANN INTERN MED, V134, P663, DOI 10.7326/0003-4819-134-8-200104170-00012
   [Anonymous], 2013, Clinical trials: a practical approach
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Campbell, 2002, EXPT QUASIEXPERIMENT
   CAMPBELL DT, 1957, PSYCHOL BULL, V54, P297, DOI 10.1037/h0040950
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   CHALMERS TC, 1983, NEW ENGLAND J MED
   COLDITZ GA, 1989, STAT MED, V8, P441, DOI 10.1002/sim.4780080408
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Corrin WJ, 1998, ADV EDUC PR, V7, P35
   DERSIMONIAN R, 1982, NEW ENGL J MED, V306, P1332, DOI 10.1056/NEJM198206033062204
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   FELDT LS, 1958, PSYCHOMETRIKA, V23, P335, DOI 10.1007/BF02289783
   GRIMSTAD S, 2006, ISESE 2006, P58
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Harris AD, 2006, J AM MED INFORM ASSN, V13, P16, DOI 10.1197/jamia.M1749
   HEINSMAN D, 1993, THESIS MEMPHIS STATE
   Heinsman DT, 1996, PSYCHOL METHODS, V1, P154, DOI 10.1037/1082-989X.1.2.154
   Hotopf M, 1997, J EPIDEMIOL COMMUN H, V51, P354, DOI 10.1136/jech.51.4.354
   ICH, 1998, STAT PRINC CLIN TRIA
   Jones B, 2003, DESIGN ANAL CROSS OV
   KAMPENES VB, 2007, THESIS U OSLO
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   KITCHENHAM B, 2004, 11 ANN INT WORKSH SO
   Kitchenham B., 2004, Procedures for undertaking systematic reviews
   Kitchenham B, 2007, LECT NOTES COMPUT SC, V4336, P25
   LAITENBERGER O, 2003, SERIES SOFTWARE ENG, V12, P167
   Lipsey M.W., 2006, Journal of Experimental Criminology, V2, P517, DOI 10.1007/s11292-006-9022-9
   Lipsey MW, 2000, ANNU REV PSYCHOL, V51, P345, DOI 10.1146/annurev.psych.51.1.345
   LIPSEY MW, 1993, AM PSYCHOL, V48, P1181, DOI 10.1037/0003-066X.48.12.1181
   McKay JR, 1998, J CONSULT CLIN PSYCH, V66, P697, DOI 10.1037/0022-006X.66.4.697
   MEYER BD, 1994, 170 NAT BUR EC RES
   MILLER JN, 1989, STAT MED, V8, P455, DOI 10.1002/sim.4780080409
   MYERS JL, 1972, FUNDAMENTALS EXPT DE
   NOVICK MR, 1981, REANALYZING PROGRAM
   OTTENBACHER K, 1992, CONTROL CLIN TRIALS, V13, P50, DOI 10.1016/0197-2456(92)90029-Y
   Reichardt C.S., 2000, Research design: Donald campbell's legacy, P89
   ROOS LL, 1975, POLICY SCI, V6, P249, DOI 10.1007/BF00139969
   RUBIN DB, 1991, BIOMETRICS, V47, P1213, DOI 10.2307/2532381
   Shadish WR, 1996, J CONSULT CLIN PSYCH, V64, P1290, DOI 10.1037/0022-006X.64.6.1290
   SHADISH WR, 2000, RES DESIGN D CAMPBEL, P13
   SHAPIRO DA, 1982, PSYCHOL BULL, V92, P581, DOI 10.1037/0033-2909.92.3.581
   Shepherd JP, 2003, EVALUATION REV, V27, P290, DOI 10.1177/0193841X03027003005
   Simester DI, 2000, J MARKETING RES, V37, P102, DOI 10.1509/jmkr.37.1.102.18721
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smith M.L., 1980, BENEFITS PSYCHOTHERA
   Thornley B, 1998, BRIT MED J, V317, P1181, DOI 10.1136/bmj.317.7167.1181
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Weisburd D, 2001, ANN AM ACAD POLIT SS, V578, P50, DOI 10.1177/0002716201578001004
   Wilkinson L, 1999, AM PSYCHOL, V54, P594, DOI 10.1037/0003-066X.54.8.594
   Wilson DB, 2001, PSYCHOL METHODS, V6, P413, DOI 10.1037//1082-989X.6.4.413
   Wilson DB, 2001, J QUANT CRIMINOL, V17, P247, DOI 10.1023/A:1011050217296
NR 54
TC 42
Z9 48
U1 1
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 71
EP 82
DI 10.1016/j.infsof.2008.04.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 389FU
UT WOS:000262077500009
DA 2024-07-18
ER

PT J
AU Dijkman, RM
   Dumas, M
   Ouyang, C
AF Dijkman, Remco M.
   Dumas, Marlon
   Ouyang, Chun
TI Semantics and analysis of business process models in BPMN
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process modelling and analysis; BPMN; Petri nets
ID CONTROL FLOW; VERIFICATION; LANGUAGE; BPEL; NETS
AB The Business Process Modelling Notation (BPMN) is a standard for capturing business processes in the early phases of systems development. The mix of constructs found in BPMN makes it possible to create models with semantic errors. Such errors are especially serious, because errors in the early phases of systems development are among the most costly and hardest to correct. The ability to statically check the semantic correctness of models is thus a desirable feature for modelling tools based on BPMN. Accordingly, this paper proposes a mapping from BPMN to a formal language, namely Petri nets, for which efficient analysis techniques are available. The proposed mapping has been implemented as a tool that, in conjunction with existing Petri net-based tools, enables the static analysis of BPMN models. The formalisation also led to the identification of deficiencies in the BPMN standard specification. (c) 2008 Elsevier B.V. All rights reserved.
C1 [Dumas, Marlon; Ouyang, Chun] Queensland Univ Technol, Fac Informat Technol, Brisbane, Qld 4001, Australia.
   [Dijkman, Remco M.] Eindhoven Univ Technol, Dept Technol Management, NL-5600 MB Eindhoven, Netherlands.
   [Dumas, Marlon] Univ Tartu, Inst Comp Sci, EE-50409 Tartu, Estonia.
C3 Queensland University of Technology (QUT); Eindhoven University of
   Technology; University of Tartu
RP Ouyang, C (corresponding author), Queensland Univ Technol, Fac Informat Technol, GPO Box 2434, Brisbane, Qld 4001, Australia.
EM r.m.dijkman@tue.nl; marlon.dumas@ut.ee; c.ouyang@qut.edu.au
RI Dumas, Marlon/H-2757-2015; Dijkman, Remco/P-4281-2019; Dijkman, Remco
   M/B-2721-2014
OI Dumas, Marlon/0000-0002-9247-7476; Dijkman, Remco/0000-0003-4083-0036;
   Ouyang, Chun/0000-0001-7098-5480
CR [Anonymous], 7115 QUEENSL U TECHN
   [Anonymous], 2007, Web services business process execution language version 2.0
   Billington J, 2003, LECT NOTES COMPUT SC, V2679, P483
   DIJKMAN RM, 2006, WP181 BETA EINDH U T
   *FORM SYST EUR LTD, 1998, FAIL DIV REF FDR2 US
   Hinz S, 2005, LECT NOTES COMPUT SC, V3649, P220, DOI 10.1007/11538394_15
   Kiepuszewski B, 2003, ACTA INFORM, V39, P143, DOI 10.1007/s00236-002-0105-4
   Lu SY, 2006, THEOR COMPUT SCI, V353, P71, DOI 10.1016/j.tcs.2005.10.035
   *OMG, 2005, UN MOD LANG SUP UML
   *OMG, 2006, BUS PROC MOD NOT BPM
   OMG, 2002, OMG XML MET INT XMI
   OUYANG C, INT J WEB S IN PRESS
   Ouyang C, 2007, SCI COMPUT PROGRAM, V67, P162, DOI 10.1016/j.scico.2007.03.002
   Puhlmann F, 2006, LECT NOTES COMPUT SC, V4102, P145
   van der Aalst W. M. P., 2002, DAIMI, V560, P1
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 2000, INFORM SYST, V25, P43, DOI 10.1016/S0306-4379(00)00008-9
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   WFMC, 2002, WORKFL MAN COAL WORK
   WONG PYH, 2007, PROCESS SEMANTICS BP
   Wynn MT, 2005, LECT NOTES COMPUT SC, V3536, P423
NR 23
TC 387
Z9 429
U1 3
U2 119
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2008
VL 50
IS 12
BP 1281
EP 1294
DI 10.1016/j.infsof.2008.02.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 358CS
UT WOS:000259894800007
OA Green Published
DA 2024-07-18
ER

PT J
AU Guo, XJ
   Lim, J
AF Guo, Xiaojia
   Lim, John
TI Negotiation support systems and team negotiations: The coalition
   formation perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE negotiation support system; team negotiation; coalition formation;
   cultural diversity; negotiation outcome
ID PERFORMANCE; FAULTLINES; DIVERSITY; CONFLICT; CULTURE; NSS
AB The use of software to support negotiations has captured the attention of academics and practitioners for some three decades and the research stream of negotiation support systems (NSS) has emerged. Over the years, many NSS have been developed and used in training and research but they have been rarely deployed in organizations. Our speculation is that much existing research is confined to dyadic (i.e., one-to-one) settings which may not adequately reflect the real-world situations in which teams, rather than individuals, often engage in negotiations. To address the gap, our current research aspires to conceptualize the NSS in supporting team negotiations and to theoretically examine their impact. Coalition formation has been a prevalent organizational phenomenon that constitutes important dynamics in any negotiating team; it will be conceptualized as the mechanism through which NSS impacts upon team negotiation outcomes in our paper. Globalization has rendered cross-cultural negotiations a commonplace; at the same time, culture serves as a most salient attribute in activating coalitions. In light of the above, cultural diversity is studied as the antecedent to coalition fort-nation and moderates the influence of NSS on the extent of coalition formation. A set of research propositions, derived from a theoretical framework, are raised and their implications discussed. (C) 2006 Elsevier B.V. All rights reserved.
C1 Natl Univ Singapore, Sch Comp, Singapore 117543, Singapore.
C3 National University of Singapore
RP Lim, J (corresponding author), Natl Univ Singapore, Sch Comp, 3 Sci Dr 2, Singapore 117543, Singapore.
EM jlim@nus.edu.sg
RI Guo, Xiaojia/KVZ-2135-2024
CR Adair WL, 2005, ORGAN SCI, V16, P33, DOI 10.1287/orsc.1040.0102
   [Anonymous], 2004, INT NEGOT
   [Anonymous], 1995, INDIVIDUALISM COLLEC
   BEZRUKOVA K, 2001, ANN M AC MAN WASH DC
   BUI T, 1996, P 29 ANN HAW INT C S, P198
   BUI T, 1992, P 25 ANN HAW INT C S, V4, P152
   Byrne D., 1971, The attraction paradigm
   Chidambaram L., 1996, Group Decision and Negotiation, V6, P159
   Clark M.A., 2000, Group Dynamics: Theory, Research, and Practice, V4, P211, DOI DOI 10.1037/1089-2699.4.3.211
   Cox T.H., 1994, CULTURAL DIVERSITY O
   Fisher R., 1983, GETTING YES NEGOTIAT
   Foroughi A, 1995, GROUP DECIS NEGOT, V4, P485, DOI 10.1007/BF01409712
   Hamilton D.L., 1994, Handbook of social cognition. Volume 2: Applications, V2, P1
   HINSZ VB, 1990, J PERS SOC PSYCHOL, V59, P705, DOI 10.1037/0022-3514.59.4.705
   Hofstede G., 1980, CULTURAL CONSEQUENCE
   Hogg MichaelA., 1992, The Social Psychology of Group Cohesiveness: From Attraction to Social Identity
   Holsapple CW, 1998, GROUP DECIS NEGOT, V7, P203, DOI 10.1023/A:1008679331142
   HORDIJK L, 1991, ENVIRON SCI TECHNOL, V25, P596, DOI 10.1021/es00016a002
   Jablin F.M., 1987, HDB ORG COMMUNICATIO, P679
   JENNINGS N, 2002, INT J GROUP DECISION, V10, P199
   JURMA WE, 1978, SMALL GROUP BEHAV, V9, P124, DOI 10.1177/009055267800900114
   Keen P. G. W., 1978, DECISION SUPPORT SYS
   Kersten G., 2003, J INFORM TECHNOLOGY, V5, P1
   KERSTEN GE, 2004, 0404 INR
   KIM J, 2003, IEEE C EC CITM
   LAI H, 1989, THESIS PURDUE U
   Lau DC, 1998, ACAD MANAGE REV, V23, P325, DOI 10.2307/259377
   Leidner DE, 2006, MIS QUART, V30, P357
   Lewicki R.J., 1999, NEGOTIATION, V3rd
   Lim J, 2000, BEHAV INFORM TECHNOL, V19, P329, DOI 10.1080/014492900750000036
   Lim J, 2003, INFORM SOFTWARE TECH, V45, P469, DOI 10.1016/S0950-5849(03)00027-2
   Lim K., 1993, Journal of Management Information Systems, V9, P27
   Mennecke BE, 1992, P 25 ANN HAW INT C S
   MURNIGHAN JK, 1986, RES NEGOTIATION ORG, P155
   NUNAMAKER JF, 1991, COMMUN ACM, V34, P40, DOI 10.1145/105783.105793
   Nyhart J., 1987, International Conference of the Society for General System Research, Hungarian Academy of Science: Budapest, P40
   Postmes T., 1999, SOCIAL IDENTITY CONT, P164
   PSATHAS G, 1965, SOCIOMETRY, V28, P124, DOI 10.2307/2785646
   Reicher S.D., 1987, REDISCOVERING SOCIAL
   RICE RE, 1993, HUM COMMUN RES, V19, P451, DOI 10.1111/j.1468-2958.1993.tb00309.x
   ROUSE WB, 1986, PSYCHOL BULL, V100, P349, DOI 10.1037/0033-2909.100.3.349
   Salacuse Jeswald W., 1991, MAKING GLOBAL DEAL N
   Salacuse JW, 1999, GROUP DECIS NEGOT, V8, P217, DOI 10.1023/A:1008660330550
   Sebenius JamesK., 1984, NEGOTIATING LAW SEA
   Short J., 1976, The social psychology of telecommunications
   SIEGEL J, 1986, ORGAN BEHAV HUM DEC, V37, P157, DOI 10.1016/0749-5978(86)90050-6
   STARKE K, 1999, ENCY MICROCOMPUTERS, V26
   STEVENSON WB, 1985, ACAD MANAGE REV, V10, P256, DOI 10.2307/257967
   SYCARA KP, 1991, MANAGE SCI, V37, P1248, DOI 10.1287/mnsc.37.10.1248
   Tajfel Henri., 1978, Studies in the Social Psychology of Intergroup Relations
   Thatcher SMB, 2003, GROUP DECIS NEGOT, V12, P217, DOI 10.1023/A:1023325406946
   Thompson L, 1996, J PERS SOC PSYCHOL, V70, P66
   Walsham G, 2002, MIS QUART, V26, P359, DOI 10.2307/4132313
   Walton R.E., 1965, A behavioral theory of labour negotiations: An analysis of a social interaction system
   Wanis-St John A, 2003, NEGOTIATION J, V19, P389, DOI 10.1023/A:1026098922238
   WEISS SE, 1994, SLOAN MANAGE REV, V35, P51
   Zebrowitz L.A., 1996, FDN STEREOTYPES STER, P79
NR 57
TC 4
Z9 5
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2007
VL 49
IS 11-12
BP 1121
EP 1127
DI 10.1016/j.infsof.2006.11.006
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 227RS
UT WOS:000250676100004
DA 2024-07-18
ER

PT J
AU Hatton, L
AF Hatton, Les
TI Language subsetting in an industrial context: A comparison of MISRA C
   1998 and MISRA C 2004
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE safer language subsets; MISRA C; embedded control systems; vehicle
   systems
AB The MISRA (Motor Industry Software Research Association) C standard first appeared in 1998 with the object of restricting the use of features in the ISO C programming language of known undefined or otherwise dangerous behaviour in embedded control systems in the motor car industry. The first edition gained significant attention around the world and in October 2004, a further edition was issued to a wider intended target audience, with the intention of correcting ambiguous wording undermining the effectiveness of the first edition and also improving its ability to restrict features of dangerous behaviour. This paper measures how well the two versions of this document compare on the same population of software and also determines how well the 2004 version achieved its stated goals. Given its increasing influence, the results raise important concerns, specifically that the false positive rate is still unacceptably high with the accompanying danger that compliance may make things worse not better. (c) 2006 Elsevier B.V. All rights reserved.
C1 Kingston Univ, CISM, Kingston upon Thames KT1 2EE, Surrey, England.
C3 Kingston University
RP Hatton, L (corresponding author), Kingston Univ, CISM, Kingston upon Thames KT1 2EE, Surrey, England.
EM l.hatton@kingston.ac.uk
CR ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   Boehm BW., 1981, Software Engineering Economics
   Carre B., 1990, Proceedings TRI-Ada '90, P392, DOI 10.1145/255471.255563
   COUSOT PA, 2001, STAT ANAL
   Hatton L, 2005, INFORM SOFTWARE TECH, V47, P181, DOI 10.1016/j.infsof.2004.08.001
   Hatton L, 2004, INFORM SOFTWARE TECH, V46, P465, DOI 10.1016/j.infsof.2003.09.016
   HATTON L, 1995, DEV SOFTWARE HIGH IN
   KOENIG A, 1989, TRAPS PITFALLS
   *MICRA LTD, 1998, GUID US PROGR LANG C
   MOORE J, 2005, PROPOSAL SC 22 FUTUR
   PARKER S, 2001, COMP MISRA C TESTING
   PFLEEGER SL, 1997, IEEE COMPUT, V30, P33
NR 12
TC 7
Z9 8
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2007
VL 49
IS 5
BP 475
EP 482
DI 10.1016/j.infsof.2006.07.004
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161VS
UT WOS:000246045200004
DA 2024-07-18
ER

PT J
AU Mammar, A
   Laleau, R
AF Mammar, A
   Laleau, R
TI From a B formal specification to an executable code: application to the
   relational database domain
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE development methodologies; database applications; B formal method;
   refinement; coding
ID SYSTEMS
AB This paper presents a formal approach for the development of trustworthy database applications. This approach consists of three complementary steps. Designers start by modeling applications using UML diagrams dedicated to database applications domain. These diagrams are then automatically translated into B specifications Suitable not only for reasoning about data integrity checking but also for the derivation of trustworthy implementations. In this paper, we present a process based oil the B refinement technique for the derivation of a SQL relational implementation, embedded in the JAVA language (JAVA/SQL), from a B specification obtained by the first translation phase. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Luxembourg, L-1359 Kirchberg, Luxembourg.
   Univ Paris 12, LACL, IUT Fontainebleau, F-77300 Fontainebleau, France.
C3 University of Luxembourg; Universite Paris-Est-Creteil-Val-de-Marne
   (UPEC)
RP Mammar, A (corresponding author), Univ Luxembourg, SE2C,6 Rue Richard Courdenhove Kalergi, L-1359 Kirchberg, Luxembourg.
EM amel.mammar@univ.lu; laleau@univ-paris12.fr
RI Laleau, Regine/ABA-9759-2021
OI Laleau, Regine/0000-0002-2019-4936
CR Abrial J-R., 1996, The B Book
   [Anonymous], INGENIERIE SYSTEMES
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   BERT D, 2003, LNCS, V2805
   CHAILLOUX E, 2000, DEV APPL AVEC OBJECT
   CLEARSY AB, MANUAL REFERENCE BP
   CODD EF, 1970, COMMUNICATIONS ACM, V13
   DOLLE J, 2003, THESIS EVRY
   DUPUY S, 2000, LNCS, V1789
   EDMOND D, 1995, LNCS, V967
   EDMOND D, 1992, INFORM MODELING
   Elmasri R., 2000, FUNDAMENTAL DATABASE, V3rd
   GUNTHER T, 1993, LNCS, V670
   JEAN S, 2000, 18 INFORSID C LYON F
   Laleau R, 2001, INFORM SOFTWARE TECH, V43, P693, DOI 10.1016/S0950-5849(01)00178-1
   LALEAU R, 2000, 86 CEDRIC LAB
   LALEAU R, 2000, ICEIS2000 2 INT C EN
   LALEAU R, 2000, ASE 00 15 IEEE INT C
   LALEAU R, 2002, THESIS U EVRY
   LALEAU R, 2000, LNCS, V1878
   LALEAU R, 2002, LNCS, V2272
   MAMMAR A, 2002, THESIS CEDRIC LAB PA
   MAMMAR A, 2004, UB2SQL INTEGRATED EN
   MAMMAR A, 2003, LNCS, V2805
   MAMMER A, 2004, SE2C LAB LUX
   MANDER KC, 1995, INFORM SOFTWARE TECH, V37, P285, DOI 10.1016/0950-5849(95)99364-S
   Melton J., 1993, UNDERSTANDING NEW SQ
   NGUYEN HP, 1998, THESIS CEDRIC LAB PA
   QIAN XL, 1993, ACM T DATABASE SYST, V18, P626, DOI 10.1145/169725.169716
   SCHEWE KD, 1991, LNCS, V551
   TATIBOUET B, 2003, LNCS, V2885
NR 31
TC 17
Z9 18
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2006
VL 48
IS 4
BP 253
EP 279
DI 10.1016/j.infsof.2005.05.002
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027PP
UT WOS:000236427800004
DA 2024-07-18
ER

PT J
AU Dingsoyr, T
AF Dingsoyr, T
TI Postmortem reviews: purpose and approaches in software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE postmortem review; knowledge management; software engineering
AB Conducting postmortems is a simple and practical method for organisational learning. Yet, not many companies have implemented such practices, and in a survey, few expressed satisfaction with how postmortems were conducted. In this article, we discuss the importance of postmortem reviews as a method for knowledge sharing in software projects, and give an overview of known such processes in the field of software engineering. In particular, we present three lightweight methods for conducting postmortems found in the literature, and discuss what criteria companies should use in defining their way of conducting postmortems. (c) 2004 Elsevier B.V. All rights reserved.
C1 SINTEF, Informat & Commun Technol, N-7465 Trondheim, Norway.
C3 SINTEF
RP SINTEF, Informat & Commun Technol, SP Andersens Vei 15B, N-7465 Trondheim, Norway.
EM torgeir.dingsoyr@sintef.no
RI Dingsøyr, Torgeir/AAJ-7360-2020; Dingsøyr, Torgeir/J-5862-2012
OI Dingsøyr, Torgeir/0000-0003-0725-345X; Dingsøyr,
   Torgeir/0000-0003-0725-345X
CR [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 1996, ORG LEARNING
   [Anonymous], COMMUNITIES PRACTISE
   [Anonymous], 1989, Webster's Encyclopedia Unabriged Dictionary of The English Language Gramercy Books
   Argyris C., 1990, Overcoming organizational defenses: Facilitating organizational learning
   BASILI VR, 1985, P 1 PAN PAC COMP C
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   Birk A, 2002, IEEE SOFTWARE, V19, P43, DOI 10.1109/MS.2002.1003452
   Collier B, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.526833
   Collison C., 2001, LEARNING FLY PRACTIC
   CONDON R, 2002, GAME DEV, P42
   CUSOMANO MA, 1995, MICROSOFT SECRETS WO
   DINGSOYR T, 2001, 3 INT C PROD FOC SOF, P167
   DYBA T, 2004, PROCESS IMPROVEMENT
   DYBA T, 2001, THESIS NORWEGIAN U S, P332
   Feldmann R.L., 2001, LEARN SOFTW ORG WORK, P2
   GARVIN DA, 1993, HARVARD BUS REV, V71, P78
   Greenwood D.J., 1998, INTRO ACTION RES
   HANSEN MT, 1994, HARVARD BUS REV, P61
   Huber GP, 1991, ORGAN SCI, V2, P88, DOI 10.1287/orsc.2.1.88
   Huber GP, 1996, INT J TECHNOL MANAGE, V11, P821
   HUMPHREY WS, 1999, INTRO TEAM SOFTWARE, P185
   Keegan A, 2001, MANAGE LEARN, V32, P77, DOI 10.1177/1350507601321006
   Kerth N.L., 2001, Project retrospectives: A handbook for team reviews
   Kransdorff A., 1996, LEARN ORGAN, V3, P11
   Lave J., 1991, SITUATED LEARNING LE, DOI DOI 10.1017/CBO9780511815355
   Menke MM, 1997, RES TECHNOL MANAGE, V40, P40, DOI 10.1080/08956308.1997.11671169
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Raelin JA, 2001, MANAGE LEARN, V32, P11, DOI 10.1177/1350507601321002
   SCHNEIDER K, 2000, 2 INT C PROD FOC SOF, P407
   Scupin R, 1997, HUM ORGAN, V56, P233, DOI 10.17730/humo.56.2.x335923511444655
   Senge P. M., 1990, 5 DISCIPLINE ART PRA
   STALHANE T, 2001, EUROSPI
   Stata R., 1996, ORG LEARN, P316
   TIEDEMAN MJ, 1990, IEEE J SELECTED AREA, V8
   TOWNSEND PL, 1999, ORG LEARN
   von Zedtwitz M, 2002, R&D MANAGE, V32, P255, DOI 10.1111/1467-9310.00258
   VONKROGH G, 2000, ENABLING KNOWLEDGW C
   Whitten N., 1995, Managing software development projects, V2nd
NR 39
TC 48
Z9 50
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 31
PY 2005
VL 47
IS 5
BP 293
EP 303
DI 10.1016/j.infsof.2004.08.008
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 911VW
UT WOS:000228035400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tziallas, G
   Theodoulidis, B
AF Tziallas, G
   Theodoulidis, B
TI A controller synthesis algorithm for building self-adaptive software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE self-adaptive software; ontological models; supervisory control;
   controller synthesis
ID MODEL
AB A novel approach for building self-adaptive software based on a controller synthesis algorithm is presented. Self-adaptive software is a relatively new idea aiming at producing applications that can readily adapt in the face of changing user needs, desires and environment. Self-adaptive software has multiple ways of accomplishing its purpose, enough knowledge of its construction and is capable of changing behaviour when it does not accomplish its goal or when better functionality or performance is possible. The presented approach for building self-adaptive software uses ontological models of software components, which represent the environment, the composition, the required behaviour, and the possible configurations for the self-adaptive software. Self-adaptation is based on a supervisory control algorithm that reconfigures and controls software components in order to achieve their required behaviour. (C) 2004 Elsevier B.V. All rights reserved.
C1 Technol Educ Inst Lamia, Dept Elect, Lamia, Greece.
   Univ Manchester, Dept Computat, Manchester M60 1QD, Lancs, England.
C3 University of Manchester
RP Tziallas, G (corresponding author), Technol Educ Inst Lamia, Dept Elect, Lamia, Greece.
EM gt@teilam.gr
RI Theodoulidis, Babis/G-9698-2014
OI Theodoulidis, Babis/0000-0003-4698-1193
CR [Anonymous], 1979, ONTOLOGY 2 AWORLD SY
   BALCLAWSKI K, 2000, SELF ADAPTIVE SOFTWA
   BOOCH G, 1997, UNIFIED MODELLING LA
   Bunge M., 1977, Treatise on Basic Philosophy Volume 3. Ontology I: The Furniture of the World., V3
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Karsai G, 1999, IEEE INTELL SYST APP, V14, P46, DOI 10.1109/5254.769884
   Kokar MM, 1999, IEEE INTELL SYST APP, V14, P37, DOI 10.1109/5254.769883
   Laddaga R, 1999, IEEE INTELL SYST APP, V14, P26, DOI 10.1109/MIS.1999.769879
   Laddaga R., 1998, SELF ADAPTIVE SOFTWA SELF ADAPTIVE SOFTWA
   Laddaga R., 2000, Self Adaptive Software: A Position Paper
   LEDECZI A, 2000, SELF ADAPTIVE SOFTWA
   Musliner DJ, 1999, IEEE INTELL SYST APP, V14, P23, DOI 10.1109/5254.784081
   MUSLINER DJ, 2000, SELF ADAPTIVE SOFTWA
   NORDSTROM G, 1999, P IEEE C WORKSH ENG
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   PAVLOVIC D, 2000, SELF ADAPTIVE SOFTWA
   Ramadge P. J., 1987, SIAM J CONTROL OPTIM
   RAMADGE PJ, 1998, P IEEE
   Robertson P, 1999, IEEE INTELL SYST APP, V14, P30, DOI 10.1109/5254.769882
   SZTIPANOVITS J, 1997, IEEE COMPUTER
   Wand Y, 1999, ACM T DATABASE SYST, V24, P494, DOI 10.1145/331983.331989
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   WONHAM WM, NOTES CONTROL DISCRE
   Zhang Z, 2001, THESIS U TORONTO
NR 25
TC 6
Z9 7
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 1
PY 2004
VL 46
IS 11
BP 719
EP 727
DI 10.1016/j.infsof.2003.12.005
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 827LP
UT WOS:000221901600002
DA 2024-07-18
ER

PT J
AU Etzkorn, LH
   Gholston, SE
   Fortune, JL
   Stein, CE
   Utley, D
   Farrington, PA
   Cox, GW
AF Etzkorn, LH
   Gholston, SE
   Fortune, JL
   Stein, CE
   Utley, D
   Farrington, PA
   Cox, GW
TI A comparison of cohesion metrics for object-oriented systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE object-oriented; metrics; cohesion
ID QUALITY; DESIGN; SUITE; SOFTWARE
AB Cohesion is the degree to which the elements of a class or object belong together. Many different object-oriented cohesion metrics have been developed; many of them are based on the notion of degree of similarity of methods. No consensus has yet arisen as to which of these metrics best measures cohesion; this is a problem for software developers since there are so many suggested metrics, it is difficult to make an informed choice. This research compares various cohesion metrics with ratings of two separate teams of experts over two software packages, to determine which of these metrics best match human-oriented views of cohesion. Additionally, the metrics are compared statistically, to determine which tend to measure the same kinds of cohesion. Differences in results for different object-oriented metrics tools are discussed. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
   Univ Alabama, Dept Ind & Syst Engn & Engn Management, Huntsville, AL 35899 USA.
C3 University of Alabama System; University of Alabama Huntsville;
   University of Alabama System; University of Alabama Huntsville
RP Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
EM letzkorn@cs.uah.edu; gholston@ise.uah.edu
CR [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1988, **DROPPED REF**, DOI DOI 10.1026/2191-9186
   BACKER A, 1991, GENERIC INTERACTIVE
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bieman J, 1994, P ACM S SOFTW REUS S, P259
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P246, DOI 10.1109/METRIC.1998.731251
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, P OOPSLA 91, P197
   DEVANBU PT, 1992, P 14 INT C SOFTW ENG, P307
   Dillon W.R., 1984, MULTIVARIATE ANAL ME
   Etzkorn L, 1998, J OBJECT-ORIENT PROG, V11, P27
   Etzkorn L, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P71, DOI 10.1109/TOOLS.2000.868960
   Etzkorn LH, 2001, INFORM SOFTWARE TECH, V43, P295, DOI 10.1016/S0950-5849(00)00169-5
   Henderson-Sellers B., 1996, Software Metrics
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   HOPKINS WG, 2003, NEW VIEW STAT SPORTS
   Li W, 1998, J SYST SOFTWARE, V44, P155, DOI 10.1016/S0164-1212(98)10052-3
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   SMART J, 2003, WXWINDOWS USERS MANU
NR 24
TC 28
Z9 35
U1 1
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 1
PY 2004
VL 46
IS 10
BP 677
EP 687
DI 10.1016/j.infsof.2003.12.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DF
UT WOS:000221589200004
DA 2024-07-18
ER

PT J
AU Taulavuori, A
   Niemelä, E
   Kallio, P
AF Taulavuori, A
   Niemelä, E
   Kallio, P
TI Component documentation -: a key issue in software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE third-party component; component documentation; software product line
AB Product lines embody a strategic reuse of both intellectual effort and existing artefacts, such as software architectures and components. Third-party components are increasingly being used in product line based software engineering, in which case the integration is controlled by the product line architecture. However, the software integrators have difficulties in finding out the capabilities of components, because components are not documented in a standard way. Documentation is often the only way of assessing the applicability, credibility and quality of a third-party component.
   Our contribution is a standard documentation pattern for software components. The pattern provides guidelines and structure for component documentation and ensures the quality of documentation. The pattern has been validated by applying and analysing it in practice. (C) 2004 Elsevier B.V. All rights reserved.
C1 VTT Elect, Embedded Software, Software Architectures Grp, FIN-90571 Oulu, Finland.
C3 VTT Technical Research Center Finland
RP VTT Elect, Embedded Software, Software Architectures Grp, POB 1100,Kaitovayla 1, FIN-90571 Oulu, Finland.
EM anne.taulavuori@vtt.fi
OI Ovaska, Eila/0000-0003-2114-3257
CR *AM NUCL SOC, 1995, ANSIANS1031995
   [Anonymous], ISOIEC9126
   [Anonymous], 1997, Software engineering with reusable components
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Bass Len, 2012, SEI S SOFTW
   BOSCH J, 2000, DESIGN USE SOFTWARE, P354
   *ESA, 1995, PSS0503 ESA
   FORSELL M, 2002, IMPROVING COMPONENT, P117
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   *IEE, 1985, GUID DOC SOFTW IND C
   *IEEE, 2002, 7302002 IEEE
   *IEEE, 1993, 101611993 IEEE
   *IEEE, 1988, 10631987 IEEE
   *IEEE, 1998, 8291998 IEEE
   IRIBARNE L, 2001, P 27 EUR C COMP BAS, P22
   KALLIO P, 2001, 4 ICSE WORKSH COMP B, P111
   KARLSSON A, 1996, SOFTWARE REUSE HOLIS
   MATINLASSI M, 2002, VTT PUBLICATIONS, V456
   Meyers B.C., 2001, MANAGING SOFTWARE AC
   NIEMELA E, 2000, IND SOFTWARE COMPONE
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   NORTHROP L, 2002, FRAMEWORK SOFTWARE P
   OGUSH M, 2000, TEMPLATE DOCUMENTING
   *OP SOURC INT, 2003, OP SOURC DEF VERS 1
   Purhonen A, 2004, J SYST SOFTWARE, V69, P57, DOI 10.1016/S0164-1212(03)00050-5
   SALMELA M, 1999, QWE 99
   SEPPANEN V, 2001, VTT RES NOTES, V2095
   *SER CONS, 1996, 9809 SER CONS
   Sommerville I., 1992, SOFTWARE ENG, V4th
   TAULAVUORI A, 2002, VTT PUBLICATIONS, V484
   TAULAVUORI A, 2002, P 15 INT C SOFTW SYS, V2
   Van Hoff A., 1997, The Open Software Description Format (OSD)
   VOAS JM, 1998, CHALLENGES USING COT
   WALLACE D, 1999, 4909 NISTIR
NR 34
TC 16
Z9 18
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2004
VL 46
IS 8
BP 535
EP 546
DI 10.1016/j.infsof.2003.10.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 814JJ
UT WOS:000220970700004
DA 2024-07-18
ER

PT J
AU Kuo, JY
AF Kuo, JY
TI A document-driven agent-based approach for business processes management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE mobile agent; business process management; document-driven approach
ID WORKFLOW MANAGEMENT
AB Due to the development of Internet and the desire of almost all departments of business organizations to be interconnected and to make data accessible at any time and any place, more and more workflow management systems are applied to business process management. In this paper, a mobile, intelligent and document-driven agent framework is proposed to model business process management system. Each mobile agent encapsulates a single document, which includes a set of business logic. It can achieve (1) trace ability: a function that enables administrators to monitor document processes easily, (2) document life cycle: a feature using agent life cycle to manage document life cycle and concurrent processing, and (3) dynamic scheduling: a document agent can dynamically schedule its itinerary, and a document control agent can dynamically schedule its services. We also implemented an official document management system explaining our approach by Aglets. (C) 2003 Elsevier B.V. All rights reserved.
C1 Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, Taipei 242, Taiwan.
C3 Fu Jen Catholic University
RP Kuo, JY (corresponding author), Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, Taipei 242, Taiwan.
EM jykuo@csie.fju.edu.tw
CR Abecker A, 2000, KNOWL-BASED SYST, V13, P271, DOI 10.1016/S0950-7051(00)00087-3
   [Anonymous], XSL TRANSFORMATIONS
   [Anonymous], OVUM EVALUATES WORKF
   Aridor Y., 1998, Proceedings of the Second International Conference on Autonomous Agents, P108, DOI 10.1145/280765.280784
   CABRI G, 2000, IEEE COMPUT, V33, P82
   DAYAL U, 1988, LECT NOTES COMPUT SC, V334, P129
   Fakas G, 1999, INFORM SOFTWARE TECH, V41, P907, DOI 10.1016/S0950-5849(99)00046-4
   Finin T., 1997, Software agents, P291
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   Georgakopoulos D, 1999, INFORM SYST, V24, P429, DOI 10.1016/S0306-4379(99)00026-5
   Geppert A, 1998, MIDDLEWARE'98: IFIP INTERNATIONAL CONFERENCE ON DISTRIBUTED SYSTEMS PLATFORMS AND OPEN DISTRIBUTED PROCESSING, P427
   GOU H, 2000, P IEEE INT C SYST MA, V1, P271
   Ho KS, 2001, DOA'01: 3RD INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS & APPLICATIONS, PROCEEDINGS, P176, DOI 10.1109/DOA.2001.954083
   JENNINGS N.R., 1998, ACM SIGMOD Record, V27, P32, DOI DOI 10.1145/306101.306112
   Jennings NR, 1996, INT J COOP INF SYST, V5, P105, DOI 10.1142/S0218843096000051
   Jennings NR, 2000, APPL ARTIF INTELL, V14, P145, DOI 10.1080/088395100117106
   Joeris G, 1997, EIGHTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P68, DOI 10.1109/DEXA.1997.617238
   Karjoth G., 1997, IEEE Internet Computing, V1, P68, DOI 10.1109/4236.612220
   KUO JY, 2001, 12 WORKSH OBJ OR TEC, P103
   KUO JY, 2001, SCI ENG, V35, P53
   Lange D. B., 1998, PROGRAMMING DEPLOYIN
   MANOLA F, 1992, INT J INTELLIGENT CO, V1
   NORMAN TJ, 1996, ECAI 96 WORKSH AG TH, P149
   Papaioannou T, 1999, ROBOT AUTON SYST, V27, P45, DOI 10.1016/S0921-8890(98)00082-7
   PAPAIOANNOU T, 1998, 3 IEEE IFIP INT C IN, P23
   RAIFFA H., 1982, The Art and Science of Negotiation
   SMITH T, 1993, INFORM           APR
   TARUMI H, 1997, P ACM INT C SUPP GRO, P299
   van der Aalst WMP, 1999, COMPUT IND, V39, P97, DOI 10.1016/S0166-3615(99)00007-X
   WEWERS T, 1998, 31 HAW INT C, V4, P332
   YEN J, 1993, IEEE EXPERT, V8, P8, DOI 10.1109/64.193050
   OBJECT SPACES VOYAGW
NR 32
TC 17
Z9 18
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2004
VL 46
IS 6
BP 373
EP 382
DI 10.1016/j.infsof.2003.08.002
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OT
UT WOS:000220241100002
DA 2024-07-18
ER

PT J
AU Dong, J
AF Dong, J
TI Adding pattern related information in structural and behavioral diagrams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 18th ACM Symposium on Applied Computing
CY MAR 09-12, 2003
CL MELBOURNE, FL
SP ACM
DE design patterns; unified modeling language; notations; extensions
AB Design patterns capture the distilled experience of expert designers. The compositions of design patterns may reuse design experience and solve a set of problems. Design patterns and their compositions are usually modeled using unified modeling language (UML). When a design pattern is applied or composed with other patterns, the pattem-related information may be lost because UML does not track this information. Thus, it is hard for a designer to identify a design pattern when it is applied or composed. The benefits of design patterns are compromised because the designers cannot communicate with each other in terms of the design patterns they use when the design patterns are applied or composed. ln this paper, we present notations to explicitly represent the structural and behavioral aspects of each pattern in the applications and compositions of design patterns. The notations allow us to maintain pattem-related information in class and collaboration diagrams. Thus, a design pattern is identifiable and traceable from its application and composition with others in these diagrams. A case study is used to illustrate our approach. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Dong, J (corresponding author), Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
EM jdong@utdallas.edu
CR Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   D'Souza D, 1999, LECT NOTES COMPUT SC, V1723, P265
   DONG J, 2000, P 7 ANN IEEE INT C W, P279, DOI DOI 10.1109/ECBS.2000.839887]
   Fontoura M, 2000, LECT NOTES COMPUT SC, V1850, P63
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Lauder A., 1998, Precise Visual Speci cation of Design Patterns, P114
   VLISSIDES J, 1998, COMPOSITE DESIGN PAT
   VLISSIDES J, 1998, NOTATION NOTATION NO
   [No title captured]
NR 9
TC 5
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2004
VL 46
IS 5
BP 293
EP 300
DI 10.1016/j.infsof.2003.09.003
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 778FU
UT WOS:000189229500004
DA 2024-07-18
ER

PT J
AU Tansel, AU
AF Tansel, AU
TI On handling time-varying data in the relational data model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE data modeling; integrity constraints; temporal query languages; temporal
   relations; time in databases
ID QUERY LANGUAGE
AB The article addresses the key issues in modeling and querying temporal data within the relational framework. These issues include representation of temporal data, temporal grouping (object) identifiers and primary keys of temporal relations, temporal integrity constraints, and fundamental operations of a temporal query language. The paper develops taxonomy for temporal relational databases and establishes criteria to evaluate various proposed extensions to the relational data model. We expect that it will benefit the researchers and guide the practitioners in choosing the right approach for managing temporal data in their applications. (C) 2003 Elsevier B.V. All rights reserved.
C1 CUNY Bernard M Baruch Coll, New York, NY 10010 USA.
C3 City University of New York (CUNY) System; Baruch College (CUNY)
RP CUNY Bernard M Baruch Coll, 55 Lexington Ave,Box 11-220, New York, NY 10010 USA.
EM tansel@baruch.cuny.edu
RI Tansel, Abdullah/AAC-8314-2021
CR [Anonymous], 1993, Temporal Databases: Theory, Design, and Implementation
   BETTENI C, 1998, TIME GRANULARITIES D
   BHARGAVA G, 1993, IEEE T KNOWL DATA EN, V5, P76, DOI 10.1109/69.204093
   CLIFFORD J, 1994, ACM T DATABASE SYST, V19, P64, DOI 10.1145/174638.174642
   CLIFFORD J, 1985, P ACM SIGMOD INT C M, P247
   CLIFFORD J, 1993, TEMPORAL DATABASES D
   CODD EF, 1972, DATA BASE SYSTEMS
   GADIA SK, 1988, ACM T DATABASE SYST, V13, P418, DOI 10.1145/49346.50065
   GADIA SK, 1991, INFORM SCIENCES, V54, P1, DOI 10.1016/0020-0255(91)90042-S
   LORENTZOS NA, 1988, INFORM SYST, V13, P289, DOI 10.1016/0306-4379(88)90040-3
   McKenzie E., 1991, ACM COMPUT SURV, V23, P501
   NAVATHE SB, 1987, P C TEMP ASP INF SYS, P113
   SARDA NL, 1987, IEEE T SYSTEMS, V12, P247
   SNODGRASS R, 1987, ACM T DATABASE SYST, V12, P247, DOI 10.1145/22952.22956
   SNODGRASS R, 2000, DEV TIME ORIENTED AP
   Tansel A. U., 1987, Proceedings of the Third International Conference on Data Engineering (Cat. No.87CH2407-5), P538
   TANSEL AU, 1989, SIGMOD REC, V18, P284, DOI 10.1145/66926.66953
   Tansel AU, 1997, IEEE T KNOWL DATA EN, V9, P120, DOI 10.1109/69.567055
   Tansel AU, 1997, IEEE T KNOWL DATA EN, V9, P464, DOI 10.1109/69.599934
   TANSEL AU, 1989, IEEE T SOFTWARE ENG, V15, P464, DOI 10.1109/32.16597
   TANSEL AU, 1986, INFORM SYST, V11, P343, DOI 10.1016/0306-4379(86)90014-1
   TANSEL AU, 2003, TEMPORAL DATA MODELI
   TOMAN D, 1998, TEMPORAL DATABASES R
NR 23
TC 9
Z9 9
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2004
VL 46
IS 2
BP 119
EP 126
DI 10.1016/S0950-5849(03)00114-9
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763PD
UT WOS:000188094000004
DA 2024-07-18
ER

PT J
AU Aurum, A
   Wohlin, C
AF Aurum, A
   Wohlin, C
TI The fundamental nature of requirements engineering activities as a
   decision-making process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th International Workshop on Requirements Engineering-Foundation for
   Software Quality (REFSQ 02)
CY SEP 09-10, 2002
CL ESSEN, GERMANY
DE requirement engineering activities; requirements decisions; classical
   decision-making model; project management
ID FRAMEWORK; MANAGEMENT
AB The requirements engineering (RE) process is a decision-rich complex problem solving activity. This paper examines the elements of organization-oriented macro decisions as well as process-oriented micro decisions in the RE process and illustrates how to integrate classical decision-making models with RE process models. This integration helps in formulating a common vocabulary and model to improve the manageability of the RE process, and contributes towards the learning process by validating and verifying the consistency of decision-making in RE activities. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
   Blekinge Inst Technol, Dept Software Engn & Comp Sci, SE-37225 Ronneby, Sweden.
C3 University of New South Wales Sydney; Blekinge Institute Technology
RP Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
EM aybuke@unsw.edu.au
OI Aurum, Aybuke/0000-0003-2416-4555; Wohlin, Claes/0000-0003-0460-5253
CR ANDRIOLE S, 1998, IEEE SOFTWARE    NOV, P82
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 14 INT S COMP INF SC
   Anthony R. N., 1965, PLANNING CONTROL SYS
   Ashrafi N, 1998, INT J TECHNOL MANAGE, V16, P532, DOI 10.1504/IJTM.1998.002666
   AURUM A, 1998, 3 AUSTR C REQ ENG AC, P29
   AURUM A, 2002, 8 INT WORKSH REQ ENG
   BOEHM B, 2001, DEV GROUPWARE REQUIR, P46
   Carr M., 2002, Information Technology & Management, V3, P181, DOI 10.1023/A:1013125112217
   *CREWS, COOP REQ ENG SCEN
   Davis A.M., 1990, SOFTWARE REQUIREMENT
   ELEMAM K, 1995, 2 INT S REQ ENG, P68
   Evans R, 1997, INTERNATIONAL CONFERENCE AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P435, DOI 10.1109/ECBS.1997.581926
   Goldenson D. R., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P10, DOI 10.1109/METRIC.1999.809721
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Holsapple C., 1996, Decision Support Systems: A Knowledge-Based Approach
   Houdek F, 2000, 11TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATION, PROCEEDINGS, P983, DOI 10.1109/DEXA.2000.875146
   KORSON TD, 1992, COMMUN ACM, V35, P101, DOI 10.1145/130994.131000
   Kotonya G., 1998, Requirements engineering
   Loucopoulos P., 1995, SYSTEM REQUIREMENTS
   LOWE D, 2001, 6 AUSTR WORKSH REQ E, P4
   MACAULAY LA, 1996, SPRINGERVERLAG SERIE
   Mallick S., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P392, DOI 10.1109/DEXA.1999.795199
   MARCH L, 1991, IEEE C MAN DES DIV, P3
   Martin S., 2002, 7 AUSTR WORKSHOP REQ, P141
   MINTZBERG H, 1976, ADMIN SCI QUART, V21, P246, DOI 10.2307/2392045
   Morgenstern O., 1953, THEORY GAMES EC BEHA
   NGUYEN L, 2001, P 7 INT WORKSH REQ E, P1
   REGNELL B, 2001, 1 SWED C SOFTW ENG R, P49
   Rodrigues AG, 1997, EUR J INFORM SYST, V6, P51, DOI 10.1057/palgrave.ejis.3000256
   ROLLAND C, 1995, INFORM SYST, V20, P337, DOI 10.1016/0306-4379(95)00018-Y
   Rolland C, 1999, INFORM SOFTWARE TECH, V41, P985, DOI 10.1016/S0950-5849(99)00073-7
   Saaty TL., 2001, INT SERIES OPERATION
   Simon H. A, 1960, The new science of management decision, DOI 10.1037/13978-000
   STRIGINI L, 1996, IEEE SOFTWARE    JAN, P101
   TAWBI M, 1999, P MFPE 99 2 INT WORK
   VLIEGEN HJW, 1990, IEEE T ENG MANAGE, V37, P185, DOI 10.1109/17.104287
   WILD C, 1994, TENCON 94, V2, P781
   WOOD JRG, 1983, J INFORMATION SYSTEM, V3, P85
NR 39
TC 93
Z9 102
U1 1
U2 12
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2003
VL 45
IS 14
BP 945
EP 954
DI 10.1016/S0950-5849(03)00096-X
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 732QT
UT WOS:000185957600002
DA 2024-07-18
ER

PT J
AU Hélouët, L
AF Hélouët, L
TI Distributed system requirement modeling with message sequence charts::
   the case of the RMTP2 protocol
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE message sequence charts; requirement modeling; real time
AB This document describes a case study realized for the INTERVAL european project. The aim of this study was to test time features of MSC'2000 and the real time extensions proposed by the INTERVAL partners The starting point for this study, was an IETF document describing requirements for a multicast protocol called RMTP2. Some significant requirements could not be modeled with MSC 2000, which C lead to extension proposals for MSC. The main extension proposed is the introduction of multicast communications in MSC. (C) 2003 Elsevier B.V. All rights reserved.
C1 INRIA, IRISA, F-35042 Rennes, France.
C3 Inria; Universite de Rennes
EM loic.helouet@irisa.fr
CR Alur R., 1996, 2 INT C TOOLS ALGORI, P35
   BENADALLAH H, 1997, 9704 U WAT DEP EL CO
   Gunter E. L., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P496
   Helouet L., 2001, SDL 2001: Meeting UML. 10th International SDL Forum. Proceedings (Lecture Notes in Computer Science Vol.2078), P348
   KATOEN JP, 1998, P SAM98 1 C SDL MSC, P281
   KRUGER IH, 2000, THESIS TU MUNCHEN
   Loidl S, 1997, SDL '97 - TIME FOR TESTING, P213, DOI 10.1016/B978-044482816-3/50015-0
   Mauw S, 1997, SDL '97 - TIME FOR TESTING, P291, DOI 10.1016/B978-044482816-3/50020-4
   MONTGOMERY T, 1998, RMTP2 PROTOCOL IETF
   NEUKIRCHEN H, 2001, REAL TIME EXTENSIONS
   Rudolph E, 1996, COMPUT NETWORKS ISDN, V28, P1629, DOI 10.1016/0169-7552(95)00122-0
   RUDOLPH E, PUTTING EXTENDED MSC
NR 12
TC 2
Z9 2
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG 15
PY 2003
VL 45
IS 11
BP 701
EP 714
DI 10.1016/S0950-5849(03)00067-3
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 720DG
UT WOS:000185245800002
DA 2024-07-18
ER

PT J
AU Laguna, MA
   Marqués, JM
   García, FJ
AF Laguna, MA
   Marqués, JM
   García, FJ
TI DocFlow:: workflow based requirements elicitation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE requirements engineering; CASE tool; workflow; use case; data flow
   diagrams
AB Use cases are the favoured technique for defining the functional requirements of a software system, but their use implies that the desired functionality of the new system is well known. The aim of this work is to present an alternative technique-and a supporting tool-to accurately define this functionality, expressed as use cases, starting from the workflows that describe the end user work. The use of hypergraphs in the proposed algorithm of transformation reinforces the generation process. In addition, the technique is independent of the development paradigm and a variation in the algorithm allows obtaining Data Flow Diagrams. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Univ Valladolid, Dept Informat, Valladolid 47011, Spain.
   Univ Salamanca, Dept Informat & Automat, Salamanca 37008, Spain.
C3 Universidad de Valladolid; University of Salamanca
RP Laguna, MA (corresponding author), Univ Valladolid, Dept Informat, Campus M Delibes, Valladolid 47011, Spain.
RI Laguna, Miguel A/M-3822-2019; GARCÍA-PEÑALVO, Francisco José/D-5445-2013
OI Laguna, Miguel A/0000-0001-9107-749X; GARCÍA-PEÑALVO, Francisco
   José/0000-0001-9987-5584
CR ALONSO MBS, 1999, GESTION INTERVENCION
   BERARD E, 1995, BE CAREFUL USE CASES
   Berge C., 1989, Hypergraphs
   BOOCH G, 1999, UNIFIED MODELLING LA
   Cockburn A, 1997, J OBJECT-ORIENT PROG, V10, P35
   COLLONGUES A, 1987, MERISE METHODE CONCE
   DIAZ O, 1998, ACT 3 JORN ING SOFTW
   DOMINGUEZ L, 2001, HERRAMIENTA DISENO D
   DURAN A, 1999, WER 99 P BUEN AIR AR
   *EL IND ASS, 1996, EIAIS106
   GALLO G, 1993, DISCRETE APPL MATH, V42, P177, DOI 10.1016/0166-218X(93)90045-P
   Hammer M., 1994, REENGINEERING CORPOR
   Jacobson I., 1993, OBJECT ORIENTED SOFT
   Jacobson I., 1994, The Object Advantage: Business Process Reengineering with Object Technology
   LAGUNA MA, 2001, ACM SIGSOFT SOFTWARE, V26, P35
   *OMG, 1998, AD981005 OMG
   *RAT SOFTW CORP, 2001, RAT ROS
   ROSENBERG D, 1999, USE CASE DRIVEN MODE
   Schmidt MT, 1999, IEEE CONCURR, V7, P44, DOI 10.1109/4434.788778
   TARDIEU H, 1983, METHODE MERISE
   WAGNER A, 1990, PROTOTYPING DAY LIFE
   WfMC, 1996, WFMCTC1011
   YOURDON E, 1991, MODERN STRUCTURED AN
NR 23
TC 1
Z9 2
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2003
VL 45
IS 6
BP 357
EP 369
DI 10.1016/S0950-5849(03)00031-4
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 673GN
UT WOS:000182572500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nurcan, S
   Rolland, C
AF Nurcan, S
   Rolland, C
TI A multi-method for defining the organizational change
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE organizational change; change process modeling; enterprise modeling;
   intention driven modeling; guidance
ID WORKING
AB The assumption of the work presented in this paper is the situatedness of the change process. The Enterprise Knowledge Development-Change Management Method (EKD-CMM) provides multiple and dynamically constructed ways of working to organize and to guide the change management. The method is built on the notion of labeled graph of intentions and strategies called a road map and the associated guidelines. The EKD-CMM road map is a navigational structure that supports the dynamic selection of the intention to be achieved next and the appropriate strategy to achieve it whereas guidelines help in the operationalization of the selected intention following the selected strategy. This paper presents the EKD-CMM road map and guidelines and exemplifies their use with a real case study. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Univ Paris 01, Ctr Rech Informat, F-75634 Paris 13, France.
   Univ Paris 01, IAE Paris, F-75005 Paris, France.
C3 heSam Universite; Universite Pantheon-Sorbonne; heSam Universite;
   Universite Pantheon-Sorbonne
RP Nurcan, S (corresponding author), Univ Paris 01, Ctr Rech Informat, 90 Rue Tolbiac, F-75634 Paris 13, France.
CR [Anonymous], 1971, Problem solving methods in artificial intelligence
   [Anonymous], 1989, VIABLE SYSTEM MODEL
   BARRETT JL, 1994, INFORM SYST MANAGE, V11, P14, DOI 10.1080/10580539408964631
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BUBENKO J, 1997, EKD USER GUIDE
   Bubenko J., 1994, INGENIERIE SYSTEMES, V2
   Checkland P.Scholes., 1990, SOFT SYSTEMS METHODO
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   DECKER S, 1997, LECT NOTES ARTIFICIA
   DeMarco T., 1979, STRUCTURED ANAL SYST
   Dowson M., 1994, EUR WORKSH SOFTW PRO
   DOWSON M, 1987, 9 INT C SOFTW ENG
   ELLIS CA, 1979, AUG P ACM C SIM MOD, P225
   ELLIS CA, 1994, COLLABORATIVE COMPUT, V1
   EMMERICH W, 1991, 1ST EUR WORKSH SOFTW
   Finkelstein A., 1994, Software process modelling and technology
   FINKELSTEIN A, 1990, C GEN LOG SES APPL T, P337
   Flood R.L., 1991, CREATIVE PROBLEM SOL
   GOTEL O, 1996, 1 IEEE INT C ICRE 94
   GROSZ G, 1997, REQUIREMENTS ENG J, V2, P115
   GROVER V, 1994, IEEE T ENG MANAGE, V41, P276, DOI 10.1109/17.310142
   Guha S., 1993, Information Systems Management, V10, P13, DOI 10.1080/10580539308906939
   Hammer M., 1994, REENGINEERING CORPOR
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   HUNG K, 1998, INT C OBJ OR INF SYS, P183
   JACHERRI L, 1992, 4 INT C SOFTW ENG KN
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jacobson I., 1993, OBJECT ORIENTED SOFT
   JARKE M, 1992, ACM T INFORMATION SY, V10
   Jarzabek S, 1996, INFORM SOFTWARE TECH, V38, P355, DOI 10.1016/0950-5849(95)01047-5
   KAVAKLI V, 1998, 10 INT C ADV INF SYS, P305
   LONCHAMP J, 1993, INT C SOFTW PROC
   LOUCOPOULOS P, 1998, SYSTEM DESIGN SPECIF
   LOUCOPOULOS P, 1995, INT J INTELLIGENT CO, V4, P44
   Loucopoulos P., 1997, Using the EKD approach: the modelling component
   LOUCOPOULOS P, 1998, EVALUATION DESIGN AL
   LOUCOPOULOS P, 1998, 2 IMACS INT C CIRC S, P352
   Marca DA., 1993, IDEF0SADT BUSINESS P
   MCCARTHY DR, 1993, IEEE SPECIAL ISSUE W, V16
   MEDINAMORA R, 1992, CSCW 92 ACM TOR CANA
   NADIN M, 1987, INTELLIGENT CAD SYST, V1
   NURCAN S, 1998, 10 INT C ADV INF SYS, P339
   POTTS C, 1989, 11 INT C SOFTW ENG
   Ramesh B., 1993, A model of requirements traceability to support systems development
   Rolland C, 1997, ASSOCIATION FOR INFORMATION SYSTEMS PROCEEDING OF THE AMERICAS CONFERENCE ON INFORMATION SYSTEMS, P922
   ROLLAND C, 1995, INFORM SYST, V20, P337, DOI 10.1016/0306-4379(95)00018-Y
   Rolland C, 1998, NINTH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P907, DOI 10.1109/DEXA.1998.707513
   Rolland C., 1998, Information Systems in the WWW Environment. IFIP TC8/WG8.1 Working Conference, P89
   ROLLAND C, 1998, 31 ANN HAW INT C SYS
   ROLLAND C, 1999, INFORMATION MANAGEME, V36
   ROLLAND C, 1998, GOAL DEPLOYMENT APPR
   ROLLAND C, 1996, GUIDING EKD PROCESS
   ROLLAND C, 2000, INFORMATION SOFTWARE, V42
   ROLLAND C, 1998, 2 IMACS INT C CIRC S, P330
   ROLLAND C, 1996, IFIP WORLD C CAMB AU
   ROLLAND C, 1994, IEEE C SYST MAN CYB
   Rolland C., 1997, INT RES S, P201
   ROSE T, 1991, IEEE SOFTWARE ENG J, V6
   ROSS DT, 1985, IEEE COMPUTER    JUL, P80
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SELIGMANN PS, 1989, 1 C INF SYST AM NETH
   STODDARD DB, 1995, J MANAGEMENT INFORMA, V12
   SWENSON KD, 1993, C ORG COMP SYST ACM
   Tomiyama T., 1989, Research in Engineering Design, V1, P19
   *VENT CORP, VENT GROUP SYST WIND
   WYNEKOOP J, 1993, 14TH P INT C INF SYS, P181
NR 67
TC 18
Z9 24
U1 1
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2003
VL 45
IS 2
BP 61
EP 82
AR PII S0950-5849(02)00162-3
DI 10.1016/S0950-5849(02)00162-3
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 640QC
UT WOS:000180698600001
DA 2024-07-18
ER

PT J
AU Chen, TY
   Tse, TH
   Zhou, ZQ
AF Chen, TY
   Tse, TH
   Zhou, ZQ
TI Fault-based testing without the need of oracles
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE fault-based testing; metamorphic testing; oracle problem; symbolic
   execution
AB There are two fundamental limitations in software testing, known as the reliable test set problem and the oracle problem. Fault-based testing is an attempt by Morell to alleviate the reliable test set problem. In this paper, we propose to enhance fault-based testing to alleviate the oracle problem as well. We present an integrated method that combines metamorphic testing with fault-based testing using real and symbolic inputs. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Swinburne Univ Technol, Sch Informat Technol, Hawthorn, Vic 3122, Australia.
   Univ Hong Kong, Dept Comp Sci & Informat Syst, Hong Kong, Hong Kong, Peoples R China.
C3 Swinburne University of Technology; University of Hong Kong
RP Swinburne Univ Technol, Sch Informat Technol, POB 218, Hawthorn, Vic 3122, Australia.
EM tychen@it.swin.edu.au
RI Tse, T.H./C-6590-2008
OI Tse, T.H./0000-0002-0460-8377; Chen, Tsong/0000-0003-3578-0994; Zhou,
   Zhi Quan/0000-0003-1769-9367
CR AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   [Anonymous], 1980, Software Manual for the Elementary Functions
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], P COMPASS 90 5 ANN C
   BLUM M, 1995, J ACM, V42, P269, DOI 10.1145/200836.200880
   BLUM M, 1993, J COMPUT SYST SCI, V47, P549, DOI 10.1016/0022-0000(93)90044-W
   Budd T. A., 1981, Computer Program Testing. Proceedings of the Summer School on Computer Program Testing, P129
   Chan F., 1998, P IASTED INT C SOFTW, P191
   Chen HY, 2001, ACM T SOFTW ENG METH, V10, P56, DOI 10.1145/366378.366380
   Chen TY, 2001, P INT COMP SOFTW APP, P172, DOI 10.1109/CMPSAC.2001.960614
   CHEN TY, 1998, KHUSTCS9801 DEP COMP
   CHEN TY, 2002, P 26 ANN INT C COMPT
   Clarke L. A., 1981, Computer Program Testing. Proceedings of the Summer School on Computer Program Testing, P65
   CLARKE LA, 1985, J SYST SOFTWARE, V5, P15, DOI 10.1016/0164-1212(85)90004-4
   Colman G., 1992, Unified Computation Laboratory, Modelling Specifications, and Tools. Based on the Proceedings of a Conference, P367
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Howden W. E., 1976, IEEE Transactions on Software Engineering, VSE-2, P208, DOI 10.1109/TSE.1976.233816
   HOWDEN WE, 1977, IEEE T SOFTWARE ENG, V3, P266, DOI 10.1109/TSE.1977.231144
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Myers Glenford J., 2011, The Art of Software Testing
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Voas J.M., 1998, SOFTWARE FAULT INJEC
   WAH KSH, 1995, VERIFICATION RELIABI, V5, P3
   Wah KSHT, 2000, SOFTW TEST VERIF REL, V10, P3, DOI 10.1002/(SICI)1099-1689(200003)10:1<3::AID-STVR196>3.0.CO;2-P
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
NR 29
TC 118
Z9 131
U1 0
U2 6
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2003
VL 45
IS 1
BP 1
EP 9
AR PII S0950-5849(02)00129-5
DI 10.1016/S0950-5849(02)00129-5
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 633RD
UT WOS:000180295500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rico, S
   Bin Ali, N
   Engström, E
   Höst, M
AF Rico, Sergio
   Bin Ali, Nauman
   Engstrom, Emelie
   Host, Martin
TI Experiences from conducting rapid reviews in collaboration with
   practitioners - Two industrial cases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Literature reviews; Systematic review; Rapid reviews; Research
   relevance; Industry-academia collaboration
ID SOFTWARE ENGINEERING RESEARCH; ACADEMIA COLLABORATIONS
AB Context: Evidence-based software engineering (EBSE) aims to improve research utilization in practice. It relies on systematic methods to identify, appraise, and synthesize existing research findings to answer questions of interest for practice. However, the lack of practitioners' involvement in these studies' design, execution, and reporting indicates a lack of appreciation for the need for knowledge exchange between researchers and practitioners. The resultant systematic literature studies often lack relevance for practice. Objective: This paper explores the use of Rapid Reviews (RRs), in fostering knowledge exchange between academia and industry. Through the lens of two case studies, we delve into the practical application and experience of conducting RRs. Methods: We analyzed the conduct of two rapid reviews by two different groups of researchers and practitioners. We collected data through interviews, and the documents produced during the review (like review protocols, search results, and presentations). The interviews were analyzed using thematic analysis. Results: We report how the two groups of researchers and practitioners performed the rapid reviews. We observed some benefits, like promoting dialogue and paving the way for future collaborations. We also found that practitioners entrusted the researchers to develop and follow a rigorous approach and were more interested in the applicability of the findings in their context. The problems investigated in these two cases were relevant but not the most immediate ones. Therefore, rapidness was not a priority for the practitioners. Conclusion: The study illustrates that rapid reviews can support researcher-practitioner communication and industry-academia collaboration. Furthermore, the recommendations based on the experiences from the two cases complement the detailed guidelines researchers and practitioners may follow to increase interaction and knowledge exchange.
C1 [Rico, Sergio; Engstrom, Emelie; Host, Martin] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
   [Bin Ali, Nauman] Blekinge Inst Technol, Dept Software Engn, Karlskrona SE-37179, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Rico, S (corresponding author), Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
EM Sergio.Rico@cs.lth.se; nauman.ali@bth.se; emelie.engstrom@cs.lth.se;
   martin.host@cs.lth.se
RI Ali, Nauman bin/J-4293-2015; Höst, Martin/KDN-4323-2024; Rico,
   Sergio/KEJ-0444-2024
OI Ali, Nauman bin/0000-0001-7266-5632; Höst, Martin/0000-0002-9360-8693;
   Rico, Sergio/0000-0002-9348-2912
FU ELLIIT - Swedish Government; GIST project by the Knowledge Foundation in
   Sweden [20220235]
FX This work has been supported by ELLIIT, a Strategic Area within IT and
   Mobile Communications, funded by the Swedish Government. The work has
   also been supported by a research grant for the GIST project (reference
   number 20220235) by the Knowledge Foundation in Sweden. We would like to
   thank the researchers and practitioners who participated in the
   interviews for their time and valuable insights. Additionally, we extend
   our gratitude to the anonymous reviewers whose dedicated comments and
   constructive feedback significantly contributed to improving the quality
   of this paper.
CR Ali N.B., 2016, P 10 ACMIEEE INT S E, P1
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   bin Ali N, 2022, E-INFORMATICA, V16, DOI 10.37190/e-Inf220106
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   bin Ali N, 2019, INFORM SOFTWARE TECH, V112, P48, DOI 10.1016/j.infsof.2019.04.006
   Bjarnason E, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10288-w
   Borg M, 2021, LECT NOTES BUS INF P, V404, P66, DOI 10.1007/978-3-030-65854-0_6
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Budgen D, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106840
   Budgen D, 2020, E-INFORMATICA, V14, P7, DOI 10.37190/e-Inf200101
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Cartaxo B., 2020, Rapid Reviews in Software Engineering, P357
   Cartaxo B, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962603
   Cartaxo Bruno, 2018, 22 INT C EV ASS SOFT, P24, DOI DOI 10.1145/3210459.3210462
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   dos Santos V., 2021, P 15 ACM IEEE INT S
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Engstrom E., 2012, P 2 INT WORKSH EV AS, P15
   Engström E, 2017, SOFTWARE QUAL J, V25, P1269, DOI 10.1007/s11219-016-9322-x
   Featherstone RM, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0040-4
   Felizardo KR, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110734
   Garousi V, 2020, IEEE SOFTWARE, V37, P65, DOI 10.1109/MS.2019.2914663
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Garousi V, 2019, EMPIR SOFTW ENG, V24, P2540, DOI 10.1007/s10664-019-09711-y
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Hislop D., 2018, Knowledge management in organizations: A critical introduction
   Ivanov V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P890, DOI 10.1145/3106237.3117778
   King VJ, 2022, SYST REV-LONDON, V11, DOI 10.1186/s13643-022-02011-5
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Le Goues C, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.3571235
   Lonetti F, 2023, INFORM SOFTWARE TECH, V164, DOI 10.1016/j.infsof.2023.107326
   Martin Rico Sergio, 2020, Technical Report, DOI [10.5281/zenodo.4327725, DOI 10.5281/ZENODO.4327725]
   Matalonga S, 2022, INFORM SOFTWARE TECH, V149, DOI 10.1016/j.infsof.2022.106937
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Pizard S, 2023, INFORM SOFTWARE TECH, V154, DOI 10.1016/j.infsof.2022.107101
   Ponce F, 2019, P INT C CHIL COMPUT, DOI [10.1109/sccc49216.2019.8966423, 10.1109/SCCC49216.2019.8966423]
   Popay J., 2006, Guidance on the conduct of narrative synthesis in systematic reviews: a product from the ESRC Methods Programme, DOI DOI 10.13140/2.1.1018.4643
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Song Q, 2022, P CAIN 22 1 C AI ENG
   Song Qunying, 2022, arXiv
   Storey MA, 2017, INT SYMP EMP SOFTWAR, P181, DOI 10.1109/ESEM.2017.28
   Wohlin C, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106678
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
NR 44
TC 0
Z9 0
U1 1
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107364
DI 10.1016/j.infsof.2023.107364
EA DEC 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CX8S5
UT WOS:001128629400001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Yang, Z
   Keung, JW
   Sun, ZY
   Zhao, YF
   Li, G
   Jin, Z
   Liu, S
   Li, YS
AF Yang, Zhen
   Keung, Jacky Wai
   Sun, Zeyu
   Zhao, Yunfei
   Li, Ge
   Jin, Zhi
   Liu, Shuo
   Li, Yishu
TI Improving domain-specific neural code generation with few-shot
   meta-learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code generation; Few-shot learning; Meta-learning; Transfer learning
AB Context: Neural code generation aims to automatically generate code snippets guided by Natural Language Descriptions (NLDs). In recent years, various neural code generation models for mainstream Programming Languages (PLs), such as Java and Python, have been proposed and demonostrated significant success in prior studies. Nonetheless, due to the scarcity of available training examples for some domain-specific PLs, such as Solidity, Bash, and Clojure, simply adopting previous neural models may lead to overfitting and inadequate learning. Objective: To overcome this challenge, we propose MetaCoder, a novel meta-learning code generation approach that efficiently extracts general-purpose knowledge from a large-scale source language and rapidly adapts to domain-specific scenarios, even with relatively few samples. Method: MetaCoder employs MAML, a powerful few-shot meta-learning method, to construct a transfer learning framework. This framework learns general-purpose knowledge from large-scale source languages and applies it in domain-specific target languages. To acquire more general-purpose knowledge, heterogeneous sub-tasks are constructed from the source language during the pre-training phase of MAML. As such, combining with CodeBERT and K-means, we design an unsupervised category assignment method for code generation samples, thereby exploiting the n-way k-shot rule to construct the heterogeneous sub-tasks. Consequently, MetaCoder can be applied to the code generation field. Results: We evaluate MetaCoder with both tree-based (e.g., TreeGen) and sequence-based (e.g., CodeGPT) backbones on two domain-specific PLs, including Solidity and Bash. Extensive experiments demonstrate the superior performance of our approach compared to baselines and verified its capability of code generation visually in practice. Conclusion: MetaCoder effectively extracts general-purpose knowledge from large-scale source languages, thereby enhancing model performance. Therefore, we highly recommend MetaCoder as a code generation approach for domain-specific PLs.
C1 [Yang, Zhen; Keung, Jacky Wai; Sun, Zeyu; Zhao, Yunfei; Li, Ge; Jin, Zhi; Liu, Shuo; Li, Yishu] Shandong Univ, Sch Comp Sci & Technol, Qingdao, Peoples R China.
   [Keung, Jacky Wai; Liu, Shuo; Li, Yishu] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Sun, Zeyu] Zhongguancun Lab, Beijing, Peoples R China.
   [Zhao, Yunfei; Li, Ge; Jin, Zhi] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.
   [Zhao, Yunfei; Li, Ge; Jin, Zhi] Peking Univ, Sch Comp Sci, 5 Yiheyuan Rd, Beijing, Peoples R China.
C3 Shandong University; City University of Hong Kong; Zhongguancun
   Laboratory; Peking University; Peking University
RP Li, G; Jin, Z (corresponding author), Shandong Univ, Sch Comp Sci & Technol, Qingdao, Peoples R China.; Li, G; Jin, Z (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.; Li, G; Jin, Z (corresponding author), Peking Univ, Sch Comp Sci, 5 Yiheyuan Rd, Beijing, Peoples R China.
EM zhenyang@sdu.edu.cn; Jacky.Keung@cityu.edu.hk; szy_@pku.edu.cn;
   zhaoyunfei@pku.edu.cn; lige@pku.edu.cn; zhijin@pku.edu.cn;
   sliu273-c@my.cityu.edu.hk; lige@pku.edu.cn
RI Sun, Zeyu/KVY-3066-2024
OI LI, Yishu/0000-0003-4017-4294; Zhao, Yunfei/0009-0002-7034-3191; Keung,
   Jacky/0000-0002-3803-9600; Jin, Zhi/0000-0003-1087-226X; Yang,
   Zhen/0000-0003-0670-4538; Sun, Zeyu/0000-0002-9990-9120; LIU,
   Shuo/0000-0002-8877-3678
FU General Research Fund (GRF)of the Research Grants Council of Hong Kong;
   Industry research funds of the City University of Hong Kong [7005217,
   9220097, 9220103, 9229029, 9229098, 9678149]; National Natural Science
   Foundation of China [62072007, 62192733, 61832009, 62192731, 62192730];
   Key Program of Hubei [JD2023008]
FX This work is supported in part by the General Research Fund (GRF)of the
   Research Grants Council of Hong Kong, and the industry research funds of
   the City University of Hong Kong (7005217, 9220097, 9220103, 9229029,
   9229098, 9678149) The National Natural Science Foundation of China under
   Grant Nos 62072007, 62192733, 61832009, 62192731, 62192730, the Key
   Program of Hubei under Grant JD2023008.
CR Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Chai YT, 2022, PROC INT CONF SOFTW, P487, DOI 10.1145/3510003.3510125
   Chen Boxing, 2014, P 9 WORKSHOP STAT MA, P362, DOI DOI 10.3115/V1/W14-3346
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   CHENG YZ, 1995, IEEE T PATTERN ANAL, V17, P790, DOI 10.1109/34.400568
   Chollet F, 2017, PROC CVPR IEEE, P1800, DOI 10.1109/CVPR.2017.195
   Dannen Chris, 2017, Introducing Ethereum and solidity, V1
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Finn C, 2017, PR MACH LEARN RES, V70
   Halloway S. D., 2012, PROGRAMMING CLOJURE
   Hayati SA, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P925
   Hu X, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P5, DOI 10.1109/ASE51524.2021.9678552
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jiang H, 2022, IEEE-ACM T AUDIO SPE, V30, P468, DOI 10.1109/TASLP.2021.3138717
   Jiang H, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P5076
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Ling W, 2016, Arxiv, DOI arXiv:1603.06744
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Ma X., 2023, IEEE Trans. Reliab.
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Moon TK, 1996, IEEE SIGNAL PROC MAG, V13, P47, DOI 10.1109/79.543975
   Mou LL, 2015, Arxiv, DOI arXiv:1510.07211
   Newham C., 2005, Learning the bash Shell, V3rd
   Nichol A, 2018, Arxiv, DOI [arXiv:1803.02999, DOI 10.48550/ARXIV.1803.02999]
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parvez R, 2021, Arxiv, DOI arXiv:2108.11601
   Pian W., 2023, P AAAI C ARTIFICIAL, V37, P5239
   Pigott D., 2020, Online historical encyclopaedia of programming languages
   Radford A., 2019, LANGUAGE MODELS ARE
   Shen SJ, 2022, Arxiv, DOI arXiv:2208.10091
   Snell J, 2017, ADV NEUR IN, V30
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Thorndike R.L., 1953, Psychometrika, DOI DOI 10.1007/BF02289263
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang DC, 1997, PROCEEDINGS OF THE CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES, P213
   Wang S, 2018, IEEE INT VEH SYM, P108, DOI 10.1109/IVS.2018.8500488
   Wang YQ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3386252
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Xie BB, 2021, AAAI CONF ARTIF INTE, V35, P14121
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Yang Z, 2023, ACM T SOFTW ENG METH, V32, DOI [10.1145/3534117, 10.11686/cyxb2022405]
   Yang Z, 2021, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC52881.2021.00010
   Yang Z, 2020, P INT COMP SOFTW APP, P892, DOI 10.1109/COMPSAC48688.2020.0-153
   Yin PC, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P7
   Yin Pengcheng, 2017, arXiv
   Yu C, 2022, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSME55016.2022.00016
   Zhang Fengji, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106922
   Zhao WX, 2023, Arxiv, DOI arXiv:2303.18223
NR 54
TC 1
Z9 1
U1 4
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2024
VL 166
AR 107365
DI 10.1016/j.infsof.2023.107365
EA NOV 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CD3P7
UT WOS:001123276200001
DA 2024-07-18
ER

PT J
AU Verdecchia, R
   Engstroem, E
   Lago, P
   Runeson, P
   Song, QY
AF Verdecchia, Roberto
   Engstroem, Emelie
   Lago, Patricia
   Runeson, Per
   Song, Qunying
TI Threats to validity in software engineering research: A critical
   reflection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Threats to validity; Software engineering; Empirical research
AB Context: In the contemporary body of software engineering literature, some recurrent shortcomings characterize how threats to validity (TTV) are considered in studies. Objective: With this position paper, we aim to open a discourse on the current use of TTV sections. The goal of our position is to jointly reflect and systematically improve how we, as a research community, consider TTV in our studies. Methods: Based on our personal experience as researchers, authors, reviewers, and editors, we critically reflect on the treatment of TTV in current empirical software engineering literature. Results: We discuss the key shortcomings of TTV consideration, including the failure to acknowledge different types of validity categorizations and the tendency to treat threats just as an afterthought. For each identified problem, we propose a vision for an improved state, intending to catalyze thoughtful engagement and improvements the way our community addresses TTV. Conclusion: We posit there is an urgent need to reconsider how we approach, document, and evaluate TTV in software engineering research.
C1 [Verdecchia, Roberto] Univ Florence, Florence, Italy.
   [Engstroem, Emelie; Runeson, Per; Song, Qunying] Lund Univ, Lund, Sweden.
   [Lago, Patricia] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 University of Florence; Lund University; Vrije Universiteit Amsterdam
RP Verdecchia, R (corresponding author), Univ Florence, Florence, Italy.
EM roberto.verdecchia@unifi.it; emelie.engstrom@cs.lth.se; p.lago@vu.nl;
   per.runeson@cs.lth.se; qunying.song@cs.lth.se
RI Lago, Patricia/ABH-2308-2020; Engström, Emelie/AAG-7808-2019
OI Lago, Patricia/0000-0002-2234-0845; Engström,
   Emelie/0000-0001-6736-9425; Song, Qunying/0000-0002-8653-0250;
   Verdecchia, Roberto/0000-0001-9206-6637; Runeson,
   Per/0000-0003-2795-4851
CR Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Engström E, 2020, EMPIR SOFTW ENG, V25, P2630, DOI 10.1007/s10664-020-09818-7
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sjoberg DIK, 2023, IEEE T SOFTWARE ENG, V49, P1374, DOI 10.1109/TSE.2022.3176725
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
NR 9
TC 1
Z9 1
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107329
DI 10.1016/j.infsof.2023.107329
EA SEP 2023
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T1XN7
UT WOS:001075984100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Song, ZH
   Wang, JF
   Yang, KY
   Wang, JG
AF Song, Zihua
   Wang, Junfeng
   Yang, Kaiyuan
   Wang, Jigang
TI HGIVul: Detecting inter-procedural vulnerabilities based on hypergraph
   convolution
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability detection; Inter-procedural vulnerability; Hypergraph
   neural network; Software security engineering; Static analysis
ID CODE; CLONES
AB Context: Detecting source code vulnerabilities is one way to block cyber attacks from an early stage. Vulnerability-triggered code typically involves one or more function procedures, while current research pays more attention to the code on a single procedure. Due to lacking a comprehensive analysis of multiple vulnerability-related procedures, current methods suffer disorder false-positive and false-negative rates, especially in detecting inter-procedural vulnerability.Objective: This paper proposes HGIVul, an inter-procedural vulnerability detection method for source code based on hypergraph convolution. The key of HGIVul is to derive the syntax-semantic characteristic from multiple procedures in a suitable code information space, which brings more balanced detection.Methods: Firstly, the potential vulnerability-related code trace across multiple procedures is located via static analyzer Infer. Then, HGIVul reconstructs the soft inter-procedural control flow graph (ICFG) from the trace to restore the complex relationship between multiple-procedural codes. Next, HGIVul performs multi-level graph convolution on the soft ICFG to grasp holistic code characteristics within multiple procedures. Finally, a classifier is applied to the extracted code features for vulnerability detection.Results: The experimental results show that HGIVul outperforms in detecting vulnerabilities and identifying vulnerability types, with the F1-measure of 66.33% and 79.58% for detection and identification, respectively. Moreover, the experiment on cross-projects indicates HGIVul has a better detection ability. Conclusion: The proposed HGIVul achieves a balanced detection performance than the related state-of-the-art methods, which proves that fusing syntactic-semantic information from multiple procedures benefits inter -procedural vulnerability detection. In addition, the results applied to five actual projects indicate that HGIVul has the feasibility of detection in practical.
C1 [Song, Zihua] Sichuan Univ, Sch Cyber Sci & Engn, Chengdu 610207, Peoples R China.
   [Wang, Junfeng; Yang, Kaiyuan] Sichuan Univ, Coll Comp Sci, Chengdu 610065, Peoples R China.
   [Wang, Jigang] ZTE Corp, Chengdu 610041, Peoples R China.
C3 Sichuan University; Sichuan University; ZTE
RP Wang, JF (corresponding author), Sichuan Univ, Coll Comp Sci, Chengdu 610065, Peoples R China.
EM wangjf@scu.edu.cn
RI Yang, kaiyuan/HPH-7334-2023
FU National Key Research and Development Program [2022YFB3305203]; National
   Natural Science Foundation of China [U2133208, 62101368]; Sichuan Youth
   Science and Technology Innovation Team, China [2022JDTD0014]; Major
   Science and Technology Special Project of Sichuan Province
   [2022ZDZX0008]
FX This work was supported in part by the National Key Research and
   Development Program under Grant 2022YFB3305203; in part by the National
   Natural Science Foundation of China under Grant U2133208 and Grant
   62101368; and in part by the Sichuan Youth Science and Technology
   Innovation Team, China under Grant 2022JDTD0014; and in part by the
   Major Science and Technology Special Project of Sichuan Province under
   Grant 2022ZDZX0008.
CR Harer JA, 2018, Arxiv, DOI [arXiv:1803.04497, 10.48550/arXiv.1803.04497]
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   [Anonymous], 2011, 5 USENIX WORKSH OFF
   Apple Inc, 2022, CLANG STAT AN
   Bai S, 2021, PATTERN RECOGN, V110, DOI 10.1016/j.patcog.2020.107637
   Buratti L, 2020, Arxiv, DOI arXiv:2006.12641
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Checkmarx, 2022, Checkmarx
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cheng Xiao, 2022, IEEE Transactions on Dependable and Secure Computing, P1
   Cui L, 2021, IEEE T INF FOREN SEC, V16, P2004, DOI 10.1109/TIFS.2020.3047756
   Deqing Zou, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P325, DOI 10.1007/978-3-319-60876-1_15
   Feng YF, 2019, AAAI CONF ARTIF INTE, P3558
   Infer, 2022, LIST ALL ISS TYP
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Johnson A, 2015, ACM SIGPLAN NOTICES, V50, P291, DOI [10.1145/2813885.2737957, 10.1145/2737924.2737957]
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Meta, 2022, INFER
   Meta, 2022, FINDING INTERPROCEDU
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nadim M, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00326-0
   O'Hearn P, 2019, COMMUN ACM, V62, P86, DOI 10.1145/3211968
   Phan Nam FL, 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE'10, (New York, NY, USA), P447
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Reynolds JC, 2002, IEEE S LOG, P55, DOI 10.1109/LICS.2002.1029817
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   S. Software, 2022, ROUGH AUDIT TOOL SEC
   Sahu Madhusmita, 2021, Intelligent and Cloud Computing. Proceedings of ICICC 2019. Smart Innovation, Systems and Technologies (SIST 153), P317, DOI 10.1007/978-981-15-6202-0_32
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Sonatype, 2022, STAT SOFTW SUPPL CHI
   Sui YL, 2020, IEEE T SOFTWARE ENG, V46, P812, DOI 10.1109/TSE.2018.2869336
   Wagner D., 2000, NDSS, P2000
   Wheeler D.A., 2022, FLAWFINDER
   Wu DY, 2021, I C DEPEND SYS NETWO, P543, DOI 10.1109/DSN48987.2021.00063
   Xiao Y, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1165
   Xutong Ma, 2021, 2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE), P880, DOI 10.1109/ASE51524.2021.9678836
   Yamaguchi F., 2013, P 2013 ACM SIGSAC C, P499
   Yamaguchi F, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P359
   Yamaguchi F, 2015, P IEEE S SECUR PRIV, P797, DOI 10.1109/SP.2015.54
   Yan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P327, DOI 10.1145/3180155.3180178
   Zheng WN, 2021, PROC INT SYMP SOFTW, P457, DOI 10.1109/ISSRE52982.2021.00054
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou YaQin, 2019, P 33 INT C NEUR INF, DOI DOI 10.5555/3454287.3455202
NR 55
TC 1
Z9 1
U1 10
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107219
DI 10.1016/j.infsof.2023.107219
EA APR 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G5PW9
UT WOS:000989684300001
DA 2024-07-18
ER

PT J
AU Klück, F
   Li, YH
   Tao, JB
   Wotawa, F
AF Klueck, Florian
   Li, Yihao
   Tao, Jianbo
   Wotawa, Franz
TI An empirical comparison of combinatorial testing and search-based
   testing in the context of automated and autonomous driving systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test generation; Ontologies; Combinatorial testing; Search -based
   testing; Genetic algorithm
ID EFFICIENCY
AB Context: More automated and autonomous systems are becoming daily use that implements safety-critical functions, e.g., autonomous driving or mobile robots. Testing such systems people depend on is challenging because some environmental interactions may not be expected during development but occur when those systems are in operation. Deciding when to stop testing or answering how to ensure sufficient testing is challenging and very expensive.Objectives: For generating critical environmental interactions, i.e., critical scenarios, we present and compare two testing solutions focusing on generating critical scenarios utilizing combinatorial and search-based testing, respectively.Methods: For combinatorial testing, we suggest using ontologies that describe the environment of an autonomous or highly automated system. For search-based testing, we rely on genetic algorithms. We experimentally compared the two testing approaches using two implementations of an industrial emergency braking function and random testing as the baseline. Furthermore, we compared the approaches qualitatively using several categories.Results: From the experiments, we see that the combinatorial testing approach can find all different types of faults listed in Table 5 considering a combinatorial strength of 3. This is not the case for search-based and random testing in all experiments. Combinatorial testing comes with the highest combinatorial coverage. However, all approaches can reveal faulty behavior utilizing appropriate environmental models.Conclusion: We present the results of an in-depth comparison of combinatorial and search-based testing. The be as fair as possible, the comparison relied on the same environmental model and other parameters like the number of generated test cases. The results show that combinatorial testing comes with the highest coverage and can find all different kinds of failures summarized in Table 5 providing a certain strength. Meanwhile, search-based testing is also capable of finding different failures depending on the coverage it can reach. Both approaches seem complementary and of use for the application domain of autonomous and automated driving functions.
C1 [Klueck, Florian; Wotawa, Franz] Graz Univ Technol, Inst Software Technol, Christian Doppler Lab Qual Assurance Methodol Auto, Inffeldgasse 16b-2, A-8010 Graz, Austria.
   [Tao, Jianbo] AVL List GmbH, Hans List Pl 1, A-8020 Graz, Austria.
   [Li, Yihao] Ludong Univ, Sch Informat & Elect Engn, Yantai, Peoples R China.
C3 Graz University of Technology; Anstalt fur Verbrennungskraftmaschinen
   List; Ludong University
RP Wotawa, F (corresponding author), Graz Univ Technol, Inst Software Technol, Christian Doppler Lab Qual Assurance Methodol Auto, Inffeldgasse 16b-2, A-8010 Graz, Austria.; Li, YH (corresponding author), Ludong Univ, Sch Informat & Elect Engn, Yantai, Peoples R China.
EM fklueck@ist.tugraz.at; yihao.li@ldu.edu.cn; Jianbo.Tao@avl.com;
   wotawa@ist.tugraz.at
RI li, yihao/AAS-2033-2020
OI li, yihao/0000-0001-9874-0338; Wotawa, Franz/0000-0002-0462-2283
FU Austrian Federal Ministry for Digital and Economic Affairs; National
   Foundation for Research, Technology and Development, Austria; Christian
   Doppler Research Association
FX The financial support by the Austrian Federal Ministry for Digital and
   Economic Affairs, the National Foundation for Research, Technology and
   Development, Austria and the Christian Doppler Research Association is
   gratefully acknowledged.
CR Almansour FM, 2020, IEEE ACCESS, V8, P12884, DOI 10.1109/ACCESS.2020.2966433
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Bajaj A, 2019, IEEE ACCESS, V7, P126355, DOI 10.1109/ACCESS.2019.2938260
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Betts KM, 2016, MOD SIMUL ENG, V2016, DOI 10.1155/2016/5309348
   Bühler O, 2008, COMPUT OPER RES, V35, P3144, DOI 10.1016/j.cor.2007.01.015
   Buhler O., 2004, SAE TECHNICAL PAPERS, DOI [10.4271/2004-01-0459, DOI 10.4271/2004-01-0459]
   Chandrasekaran J, 2021, IEEE ICST WORKSHOP, P57, DOI 10.1109/ICSTW52544.2021.00022
   Rainville FM, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION COMPANION (GECCO'12), P85
   Dhadyalla G, 2014, IEEE ICST WORKSHOP, P51, DOI 10.1109/ICSTW.2014.6
   Duan JL, 2022, IEEE INTEL TRANSP SY, V14, P115, DOI 10.1109/MITS.2019.2926269
   El Mostadi M, 2021, IEEE INT VEH SYM, P16, DOI 10.1109/IV48863.2021.9575953
   Feilmayr C, 2016, DATA KNOWL ENG, V101, P1, DOI 10.1016/j.datak.2015.11.003
   Felbinger H, 2019, INT CONF CONNECT VEH, DOI 10.1109/iccve45908.2019.8965209
   Ghandehari LS, 2020, IEEE T SOFTWARE ENG, V46, P616, DOI 10.1109/TSE.2018.2865935
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Hu LH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10017-1
   Hu LH, 2020, EMPIR SOFTW ENG, V25, P2661, DOI 10.1007/s10664-019-09799-2
   Ibañez-Guzmán J, 2012, HANDBOOK OF INTELLIGENT VEHICLES, VOLS 1 AND 2, P1271, DOI 10.1007/978-0-85729-085-4_50
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Klück F, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P418, DOI 10.1109/QRS.2019.00058
   Kluck Florian, 2021, P 8 INT C DEP SYST T, P213
   Klück F, 2019, LECT NOTES COMPUT SC, V11812, P140, DOI 10.1007/978-3-030-31280-0_9
   Klück F, 2018, IEEE INT SYMP SOFTW, P118, DOI 10.1109/ISSREW.2018.00-20
   Koopman P, 2016, SAE INT J TRANSP SAF, V4, P15, DOI 10.4271/2016-01-0128
   Kuhn D., 2013, Chapman & Hall/CRC Innovations in Software Engineering and Software Development Series
   Kuhn R, 2009, COMPUTER, V42, P94, DOI 10.1109/MC.2009.253
   Li YH, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106200
   NCAP Euro, 2017, TEST PROTOCOL AEB SY
   NCAP Euro, 2017, AEB VRU TEST PROT TE
   Niu XT, 2020, IEEE T SOFTWARE ENG, V46, P584, DOI 10.1109/TSE.2018.2865772
   Oimoen S., 2019, COEREPORT352018 STAT
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Shu H, 2021, IEEE ACCESS, V9, P115019, DOI 10.1109/ACCESS.2021.3103912
   Siddiqui F., SELF DRIVING VEHICLE
   Soltani M, 2020, IEEE T SOFTWARE ENG, V46, P1294, DOI 10.1109/TSE.2018.2877664
   Tao JB, 2019, IEEE ICST WORKSHOP, P234, DOI 10.1109/ICSTW.2019.00058
   Wotawa F, 2018, LECT NOTES COMPUT SC, V11146, P155, DOI 10.1007/978-3-319-99927-2_14
   Wu HY, 2020, IEEE T SOFTWARE ENG, V46, P302, DOI 10.1109/TSE.2018.2852744
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Zeller A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P49, DOI 10.1109/SBST.2017.3
NR 43
TC 1
Z9 1
U1 6
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2023
VL 160
AR 107225
DI 10.1016/j.infsof.2023.107225
EA APR 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F6ZF5
UT WOS:000983799600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Laghouaouta, Y
   Laforcade, P
AF Laghouaouta, Youness
   Laforcade, Pierre
TI Maintainability enhancement based on uncertain model transformations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model driven engineering; Model transformation; Uncertainty;
   Maintainability
ID FORMAL FOUNDATION
AB Context: Managing uncertainty while expressing model transformations is problematic. Indeed, we are constrained to express various transformation specifications implementing the different possibilities. These possibilities are driven by the need to realize the relevance of each scenario to choose the best one (uncertainty on a transformation scenario) or result from the need to propose other alternatives to a given scenario if it is not feasible (uncertainty on the feasibility of a transformation scenario). In both cases, we face maintainability issues related to handling separated and frequently changed transformation specifications.Objective: This paper gives a global overview of our approach to deal with uncertainty in model transforma-tions while focusing on maintainability aspect.Methods: We have proposed a new approach for dealing with uncertainty in model transformations. Basically, our approach makes use of partiality to allow expressing a transformation specification that covers different possibilities. The current paper focuses on the impact of our proposal to enhance changeability. This has been demonstrated by carrying out comparative experiments involving three other transformation techniques while considering the effort required to implement a change.Results: Our experiments show that our approach has proven useful and effective for implementing changes, mainly for complex ones. Conclusion: This paper provides an overview of our approach for managing uncertainty within model transformations. Mainly, it focuses on the impact of our proposal to enhance changeability. The experiment results reveal that our proposal allows expressing highly changeable specifications.
C1 [Laghouaouta, Youness] Natl Inst Posts & Telecommun INPT, Rabat, Morocco.
   [Laforcade, Pierre] Le Mans Univ LIUM, Comp Sci Lab, Le Mans, France.
RP Laghouaouta, Y (corresponding author), Natl Inst Posts & Telecommun INPT, Rabat, Morocco.
EM laghouaouta@inpt.ac.ma; pierre.laforcade@univ-lemans.fr
CR [Anonymous], 2005, ATL TRANSF EX UML JA
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Biermann E, 2012, SOFTW SYST MODEL, V11, P227, DOI 10.1007/s10270-011-0199-7
   Budinsky F., 2004, Eclipse modeling framework: a developer's guide
   Córdoba-Pachón JR, 2009, ROUTL SER INFORM SYS, P1
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   de Lara J., 2004, Electron. Notes Theor. Comput. Sci, V109, P17, DOI [10.1016/j.entcs.2004.02.053, DOI 10.1016/J.ENTCS.2004.02.053]
   de Lara J, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P67, DOI 10.1145/3239372.3239377
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Gray J, 2006, COMPUTER, V39, P51, DOI 10.1109/MC.2006.45
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kapova L, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P141, DOI 10.1109/SEAA.2009.67
   Kolandouz-Rahimi S, 2014, SCI COMPUT PROGRAM, V85, P5, DOI 10.1016/j.scico.2013.07.013
   Kolovos D., 2017, THE EPSILON BOOK, V2017
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kolovos DS, 2017, IEEE ACM INT WORKS M, P54, DOI 10.1109/MiSE.2017.8
   Laforcade P, 2018, LECT NOTES COMPUT SC, V11082, P151, DOI 10.1007/978-3-319-98572-5_12
   Laghouaouta Y, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1595, DOI 10.1145/3341105.3373971
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3543, P108
   Olsen G.K., 2006, P ECMDA COMPOSITION, P21
   Rensink Arend., 2009, ELECTR COMMUN, V18
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Sijtema Marten., 2010, PROC MTATL, V10, P39
   Strüber D, 2018, FORM ASP COMPUT, V30, P133, DOI 10.1007/s00165-017-0441-3
   Strüber D, 2015, LECT NOTES COMPUT SC, V9033, P283, DOI 10.1007/978-3-662-46675-9_19
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
NR 30
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107177
DI 10.1016/j.infsof.2023.107177
EA FEB 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C8UZ8
UT WOS:000964619700001
DA 2024-07-18
ER

PT J
AU Song, QY
   Runeson, P
AF Song, Qunying
   Runeson, Per
TI Industry-academia collaboration for realism in software engineering
   research: Insights and recommendations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Industry-academia collaboration
AB Context: Effective industry-academia collaboration may increase software engineering research relevance by increased realism, yet very challenging for reasons like confidentiality concerns, different objectives and priorities.Objective: We analyse industry-academia collaboration scenarios based on our own experiences as Ph.D. student and supervisor, and provide insights and recommendations to facilitate future collaborations with industry.Method: We first present our industry-academia collaboration experiences that span over two and a half years with different companies. Then, we analyse both facilitators and problems from those scenarios and synthesize recommendations based on that.Results: Five different scenarios are analysed, including both success and failure scenarios. Reflections and insights into these experiences as well as some general recommendations are presented.Conclusion: We believe such experiences and insights are helpful for academic researchers to pursue industryacademia collaboration. We plan to continuously report our experience and provide our suggestions for effective collaboration with industry.
C1 [Song, Qunying; Runeson, Per] Lund Univ, Box 118, SE-22100 Lund, Sweden.
C3 Lund University
RP Song, QY (corresponding author), Lund Univ, Box 118, SE-22100 Lund, Sweden.
EM qunying.song@cs.lth.se; per.runeson@cs.lth.se
OI Song, Qunying/0000-0002-8653-0250; Runeson, Per/0000-0003-2795-4851
CR Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Rico S, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2372
   Sandberg AB, 2011, IEEE SOFTWARE, V28, P74, DOI 10.1109/MS.2011.49
   Song Qunying, 2021, 2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN), P74, DOI 10.1109/WAIN52551.2021.00018
   Song QY, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P81, DOI 10.1109/AITEST52744.2021.00024
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
NR 9
TC 3
Z9 3
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107135
DI 10.1016/j.infsof.2022.107135
EA DEC 2022
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7U0MB
UT WOS:000911831500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Stradowski, S
   Madeyski, L
AF Stradowski, Szymon
   Madeyski, Lech
TI Machine learning in software defect prediction: A business-driven
   systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Machine learning; Systematic mapping study;
   Business applicability; Effort and cost minimisation
AB Context: Machine learning is a valuable tool in software engineering allowing fair defect prediction capabilities at a relatively small expense. However, although the practical usage of machine learning in defect prediction has been studied over many years, there is not sufficient systematic effort to analyse its potential for business application.Objective: The following systematic mapping study aims to analyse the current state-of-the-art in terms of machine learning software defect prediction modelling and to identify and classify the emerging new trends. Notably, the analysis is done from a business perspective, evaluating the opportunities to adopt the latest techniques and methods in commercial settings to improve software quality and lower the cost of development life cycle.Method: We created a broad search universe to answer our research questions, performing an automated query through the Scopus database to identify relevant primary studies. Next, we evaluated all found studies using a classification scheme to map the extent of business adoption of machine learning software defect prediction based on the keywords used in the publications. Additionally, we use PRISMA 2020 guideline to validate reporting.Results: After the application of the selection criteria, the remaining 742 primary studies included in Scopus until February 23, 2022 were mapped to classify and structure the research area. The results confirm that the usage of commercial datasets is significantly smaller than the established datasets from NASA and open-source projects. However, we have also found meaningful emerging trends considering business needs in analysed studies.Conclusions: There is still a considerable amount of work to fully internalise business applicability in the field. Performed analysis has shown that purely academic considerations dominate in published research; however, there are also traces of in vivo results becoming more available. Notably, the created maps offer insight into future machine learning software defect prediction research opportunities.
C1 [Stradowski, Szymon] Nokia, Szybowcowa 2, PL-54206 Wroclaw, Dolnoslaskie, Poland.
   [Stradowski, Szymon; Madeyski, Lech] Wroclaw Univ Sci & Technol, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Dolnoslaskie, Poland.
C3 Nokia Corporation; Wroclaw University of Science & Technology
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Dolnoslaskie, Poland.
EM lech.madeyski@pwr.edu.pl
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357; Stradowski,
   Szymon/0000-0002-3532-3876
FU Polish Ministry of Science and Higher Education 'Implementation
   Doctorate' program [DWD/5/0178/2021]
FX This research was financed by the Polish Ministry of Science and Higher
   Education 'Implementation Doctorate' program (ID: DWD/5/0178/2021).
CR Adadi A, 2018, IEEE ACCESS, V6, P52138, DOI 10.1109/ACCESS.2018.2870052
   Afzal W, 2010, ASIA PAC SOFWR ENG, P414, DOI 10.1109/APSEC.2010.54
   Agrawal B, 2021, INT CON DISTR COMP S, P1110, DOI 10.1109/ICDCS51616.2021.00113
   Phan AV, 2017, PROC INT C TOOLS ART, P45, DOI 10.1109/ICTAI.2017.00019
   Phan AV, 2017, 2017 21ST ASIA PACIFIC SYMPOSIUM ON INTELLIGENT AND EVOLUTIONARY SYSTEMS (IES), P37, DOI 10.1109/IESYS.2017.8233558
   [Anonymous], 2008, PROC 12 INT C EVAL A
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   B.V. Elsevier, 2022, SCOPUS
   Basili V., 1994, The Goal Question Metric Approach, P528
   Blincoe K, 2019, EMPIR SOFTW ENG, V24, P1610, DOI 10.1007/s10664-018-9656-z
   Bowes D, 2017, IEEE INT SYMP SOFTW, P44, DOI 10.1109/ISSREW.2017.11
   Briem J A, 2020, P IEEEACM 42 INT C S, P203
   Cartaxo Bruno, 2018, 22 INT C EV ASS SOFT, P24, DOI DOI 10.1145/3210459.3210462
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Elsner D, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P491, DOI 10.1145/3460319.3464834
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Ferenc R, 2010, COMM COM INF SC, V117, P283
   Garousi V, 2017, IEEE SOFTWARE, V34, P38, DOI 10.1109/MS.2017.3641116
   Gökçeoglu M, 2021, J SYST SOFTWARE, V179, DOI 10.1016/j.jss.2021.110993
   Gomes L., 2020, INFORM SOFTWARE TECH, V132, DOI [10.1016/j.infsof.2020.106508, DOI 10.1016/J.INFSOF.2020.106508]
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hershkovich E., 2021, PRIORITIZED TEST GEN, P218, DOI [10.1109/ICSTW52544.2021.00045, DOI 10.1109/ICSTW52544.2021.00045]
   Hosseini S., 2019, IEEE T SOFTWARE ENG, V45, P111, DOI [10.1109/TSE.2017.2770124, DOI 10.1109/TSE.2017.2770124]
   Huanjing Wang, 2019, 2019 18th IEEE International Conference On Machine Learning And Applications (ICMLA), P1045, DOI 10.1109/ICMLA.2019.00176
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kang J, 2021, SOFTWARE PRACT EXPER, V51, P748, DOI 10.1002/spe.2927
   Kawalerowicz Marcin, 2021, Advances and Trends in Artificial Intelligence. From Theory to Practice: 34th International Conference on Industrial, Engineering and Other Applications of Applied Intelligent Systems, IEA/AIE 2021, Proceedings. Lecture Notes in Computer Science. Lecture Notes in Artifical Intelligence (12799), P426, DOI 10.1007/978-3-030-79463-7_36
   Kawalerowicz M., 2021, LNCS, P412, DOI 10.1007/978-3-030-79463-7_35
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P255, DOI 10.1023/A:1024424811345
   Kim Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3345628
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2016, Evidence-Based Software Engineering and Systematic Reviews
   Koch P, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P25, DOI 10.1145/3183399.3183402
   Krasner H., 2021, P CONSORTIUM INF SOF
   Lanza M, 2016, IEEE SOFTWARE, V33, P102, DOI 10.1109/MS.2016.156
   Lee S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P814, DOI 10.1145/2568225.2568307
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Marijan D, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P123, DOI 10.1109/AITEST49225.2020.00025
   Meinke K., 2017, Machine Learning for Software Engineering Models, Methods, and Applications, DOI DOI 10.1145/3183440.3183461
   Page MJ, 2021, BMJ-BRIT MED J, V372, DOI [10.1136/bmj.n71, 10.1016/j.ijsu.2021.105906, 10.1136/bmj.n160]
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Pradhan S, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P374, DOI 10.1109/QRS51102.2020.00056
   Ramler R, 2012, LECT NOTES COMPUT SC, V6927, P384
   Rana R, 2014, INITIAL IND VALIDATI, V466, DOI [10.1007/978-3-319-11854-3_23, DOI 10.1007/978-3-319-11854-3_23]
   Sellik H., 2021, LEARNING BYONE MISTA
   She DD, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P737, DOI 10.1145/3368089.3409723
   She DD, 2019, P IEEE S SECUR PRIV, P803, DOI 10.1109/SP.2019.00052
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shirabad JS, 2003, PROC IEEE INT CONF S, P95
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Sosnicki Marek, 2021, Computational Science - ICCS 2021. 21st International Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12744), P362, DOI 10.1007/978-3-030-77967-2_30
   Stradowski S, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107067
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   van Eck NJ, 2010, SCIENTOMETRICS, V84, P523, DOI 10.1007/s11192-009-0146-3
   Wallwork Adrian, 2016, ENGLISH WRITING RES
   Wang SM, 2023, IEEE T SOFTWARE ENG, V49, P1188, DOI 10.1109/TSE.2022.3173346
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Wolpert DH, 1996, NEURAL COMPUT, V8, P1341, DOI 10.1162/neco.1996.8.7.1341
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zhu ZY, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3565
   Zong L., 2019, P 2019 3 INT C SOFTW, P6065, DOI [10.1145/3374549.3374553, DOI 10.1145/3374549.3374553]
NR 71
TC 9
Z9 9
U1 3
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107128
DI 10.1016/j.infsof.2022.107128
EA DEC 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200011
DA 2024-07-18
ER

PT J
AU Alabood, L
   Aminolroaya, Z
   Yim, D
   Addam, O
   Maurer, F
AF Alabood, Lorans
   Aminolroaya, Zahra
   Yim, Dianna
   Addam, Omar
   Maurer, Frank
TI A systematic literature review of the Design Critique method
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Design Critique; Human -centered design; User -experience research;
   AgileUX; Systematic literature review
AB Context: The Design Critique (DC) method is becoming more common in Human-Computer Interaction (HCI) and User Experience (UX) studies as the need for new evaluation methods of emerging technologies is increasing. However, there is an clear lack of guidelines on how to conduct DC studies in the UX context.Objective: The goal of this paper is to provide an overview of the DC method in the fields of UX. In addition, this paper aims to propose a generic process of running DC studies in the same context.Methods: We present a systematic literature review of the DC method. Moreover, we conduct a course of thematic analysis on the selected papers to identify the various DC processes and explore the following attributes: participant categories, data collection methods, and data analysis methods in each process.Results: We identified three different trends of DC processes: detailed, moderate and minimal. In addition, we proposed a generic DC process consisting of 10 steps divided into three main phases: preparation, conducting design critique, and pro-processing. We found that domain experts represent the majority of studies participants. Using interviews to collect qualitative data and using script coding analysis are the two most common methods of collecting and analyzing data.Conclusion: Conducting DC studies can improve overall systems usability by addressing design flaws at an early stage of development. The process of conducting a DC varies, depending on the project goals and states. The DC method aligns well with the small light-weight steps approach in Agile methods.
C1 [Alabood, Lorans; Aminolroaya, Zahra; Yim, Dianna; Addam, Omar; Maurer, Frank] Univ Dr NW Univ Calgary, Dept Comp Sci, SEER Lab, ICT Bldg,2500 Univ Dr NW, Calgary, AB T2N1N4, Canada.
RP Alabood, L (corresponding author), Univ Dr NW Univ Calgary, Dept Comp Sci, SEER Lab, ICT Bldg,2500 Univ Dr NW, Calgary, AB T2N1N4, Canada.
EM lorans.alabood@ucalgary.ca; zahra.aminolroaya@ucalgary.ca;
   dyim@ucalgary.ca; okaddam@ucalgary.ca; lorans.alabood@ucalgary.ca
OI alabood, lorans/0000-0003-2155-6449; Aminolroaya,
   Zahra/0000-0001-7930-0900; Maurer, Frank/0000-0002-0240-715X
CR Alabood L., 2022, P 3D INT WORKSH EMP, V3172, P10
   AMABILE TM, 1983, J PERS SOC PSYCHOL, V45, P357, DOI 10.1037/0022-3514.45.2.357
   Aminolroaya Z, 2020, ISS '20 COMPANION: COMPANION PROCEEDINGS OF THE 2020 CONFERENCE ON INTERACTIVE SURFACES AND SPACES, P85, DOI 10.1145/3380867.3426423
   [Anonymous], 2009, 42 HAWAII INT C SYST, DOI DOI 10.1109/HICSS.2009.241
   Antona M, 2006, INT J HUM-COMPUT INT, V20, P79, DOI 10.1207/s15327590ijhc2002_2
   Arakelyan A, 2014, LECT NOTES COMPUT SC, V8699, P274, DOI 10.1007/978-3-319-13296-9_30
   Asha A.Z, 2020, 12 INT C AUT US INT, P74, DOI [10.1145/3409120.3410658, DOI 10.1145/3409120.3410658]
   Ayalon O, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P4752
   Billinghurst M, 2021, EXTENDED ABSTRACTS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'21), DOI 10.1145/3411763.3445002
   Blevis E, 2007, LECT NOTES COMPUT SC, V4564, P22
   Bonnardel N, 1996, ACTA PSYCHOL, V91, P221, DOI 10.1016/0001-6918(95)00057-7
   Braun V, 2019, QUAL RES SPORT EXERC, V11, P589, DOI 10.1080/2159676X.2019.1628806
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Charleer S, 2017, INT J TECHNOL ENHANC, V9, P227, DOI 10.1504/IJTEL.2017.084501
   Christensen BT, 2016, DESIGN STUD, V45, P116, DOI 10.1016/j.destud.2015.12.005
   Clark C, 2016, LECT NOTES COMPUT SC, V9737, P172, DOI 10.1007/978-3-319-40250-5_17
   Clarke R.I, DEFAULT DESIGN DESIG
   Conley M, 2017, CRITIQUE YOUR OWN DE
   Coram J.L., 2013, P 2013 ACM INT C INT, P11
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Czar J, 2019, MASTERING DESIGN CRI
   Da Silva TS, 2018, INFORM SOFTWARE TECH, V102, P1, DOI 10.1016/j.infsof.2018.04.008
   Dannels DP, 2008, J BUS TECH COMMUN, V22, P135, DOI 10.1177/1050651907311923
   Dow SP, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2807
   Dunlap M.A., 2013, THESIS U CALGARY
   Easterday Matthew W, 2014, P 2014 C DES INT SYS, P405, DOI [10.1145/2598510.2600889, DOI 10.1145/2598510.2600889]
   Ferreira J, 2007, AGILE 2007, PROCEEDINGS, P50, DOI 10.1109/AGILE.2007.8
   Forlizzi Jodi., 2011, CHI 11 EXTENDED ABST, P823, DOI DOI 10.1145/1979742.1979497
   Fox D, 2008, AGILE 2008, PROCEEDINGS, P63, DOI 10.1109/Agile.2008.78
   Frauenberger C., 2013, International Journal of Child-Computer Interaction, V1, P38
   Garcia A, 2019, LECT NOTES BUS INF P, V355, P102, DOI 10.1007/978-3-030-19034-7_7
   Grasser Rebecca, 2011, P 16 ANN JOINT C INN, P23, DOI [10.1145/1999747.1999757., DOI 10.1145/1999747.1999757]
   Greenberg S, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P111
   Hallnas L, 2008, P 5 NORDIC C HUMAN C, P565
   Harris J., 2011, TANGIBLE USER INTERF
   Harrison S., 2006, Designing Interactive Systems. DIS2006, P261
   Harrison S., 2006, INVENTIVITY TEACHING, V1, P61
   Hokanson B., 2012, The next generation of distance education, P71, DOI DOI 10.1007/978-1-4614-1785-9_5
   Hundhausen C., 2011, Proceedings of the Seventh International Workshop on Computing Education Research, P117
   Hundhausen CD, 2012, ACM T COMPUT-HUM INT, V19, DOI 10.1145/2395131.2395133
   Hundhausenm C., 2010, PROTOTYPE WALKTHROUG
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kun A, 2021, IEEE PERVAS COMPUT, V20, P49, DOI 10.1109/MPRV.2021.3066826
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Li Jiannan, 2013, HUMAN FACTORS COMPUT, P1665
   Li Y, 2021, 2021 IEEE CONFERENCE ON VIRTUAL REALITY AND 3D USER INTERFACES ABSTRACTS AND WORKSHOPS (VRW 2021), P585, DOI 10.1109/VRW52623.2021.00175
   Liez K, 2013, SELF CRITIQUE YOUR D
   Lowgren J., 1995, DIS '95. Symposium on Designing Interactive Systems: Processes, Practices, Medthods, and Techniques. Conference Proceedings, P87, DOI 10.1145/225434.225444
   Luther K, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P473, DOI 10.1145/2675133.2675283
   Macefield R., 2014, UX MATTERS, V2, P2
   Martin-Hammond A, 2018, INT CONF PER COMP, P280, DOI 10.1145/3240925.3240972
   Miller SR, 2014, HUM-COMPUT INTERACT, V29, P487, DOI 10.1080/07370024.2013.870393
   Mostafa A. E., 2013, PhD thesis
   Nebeling M, 2021, USER EXPERIENCE INTE
   Nielsen J., 1989, Designing and Using Human-Computer Interfaces and Knowledge Based Systems. Proceedings of the Third International Conference on Human Computer Interaction. Vol.II, P394
   Reimer Y.J., 2012, Proceedings of the 43rd ACM Technical Symposium on Computer Science Education, P625, DOI DOI 10.1145/2157136.2157315
   Remy C, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173790
   Rose Emma., 2016, Proceedings of the 34th ACM International Conference on the Design of Communication - SIGDOC'16, P1, DOI [DOI 10.1145/2987592.2987608, 10.1145/2987592.2987608]
   Saad J, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106688
   Schneider H, 2016, DIS 2016: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON DESIGNING INTERACTIVE SYSTEMS, P415, DOI 10.1145/2901790.2901814
   Sens R., 2019, UX DESIGN 101 ARTICU
   Seyed T., 2013, Proc. ITS'13, P15
   Silva da Silva T., 2011, Proceedings of the 2011 Agile Conference, P77, DOI 10.1109/AGILE.2011.24
   Somanath S, 2015, LECT NOTES COMPUT SC, V9296, P340, DOI 10.1007/978-3-319-22701-6_26
   Stolterman E., 2008, DES PHILOS PAP, V1
   Sultanum N., 2010, ACM INT C INTERACTIV, P105
   Tozser M., 2012, P 2012 ACM INT C INT, P81
   Wang H., 2009, METHODOLOGY IDEATION
   Watanabe WM, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106395
   Wright T, 2005, P 7 AUSTRALASIAN C C, V42, P187
   Xu AB, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1637, DOI 10.1145/2675133.2675140
   Yen YCG, 2016, DIS 2016: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON DESIGNING INTERACTIVE SYSTEMS, P773, DOI 10.1145/2901790.2901820
   Yubo Kou, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134695
NR 73
TC 3
Z9 9
U1 3
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107081
DI 10.1016/j.infsof.2022.107081
EA OCT 2022
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5M1OI
UT WOS:000870873400006
DA 2024-07-18
ER

PT J
AU Khaliq, Z
   Farooq, SU
   Khan, DA
AF Khaliq, Zubair
   Farooq, Sheikh Umar
   Khan, Dawood Ashraf
TI A deep learning-based automated framework for functional User Interface
   testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; UI functional testing; Transformers; Deep learning;
   Automated testing
AB Context: The use of automation tools in software testing helps keep pace with the timeline of the deliverables. Over time with the inclusion of continuous integration/continuous delivery (CI/CD) pipelines, automation tools are becoming less effective. The testing community is turning to AI to help keep the pace.
   Objective: We study the use of transformers to automate the process of test case generation directly from the User Interface (UI) element description instead of relying on the test specification document from which test cases are extracted manually. We also demonstrate the capability of the proposed approach in repairing flaky tests.
   Method: We employ object detection algorithms EfficientDet and DEtectionTRansformer for detecting the elements from an application UI automatically without requiring a tester to locate complex-scripted UI elements. We also use Tesseract to automatically identify the text present on the UI elements. We transform the generated UI element description to actual test designer-written test cases using text-generation transformers like GPT-2 and T5. The generated test cases are then translated into executable test scripts using a simple parser. We carry out our cases study on 30 e-commerce applications.
   Results: The percentage of correct executable test cases generated by the framework employing EfficientDet is 93.82% and employing DEtectionTRansformer is 98.08%. The framework eliminates an average of 96.05% flakiness across the applications selected for the study.
   Conclusion: It is concluded that the proposed approach can be used with current automation tools in the industry to enhance their capability in generating test cases and repairing the flaky tests.
C1 [Khaliq, Zubair; Farooq, Sheikh Umar; Khan, Dawood Ashraf] Univ Kashmir, Srinagar, India.
C3 University of Kashmir
RP Khaliq, Z (corresponding author), Univ Kashmir, Srinagar, India.
EM zikayem@gmail.com; suf.cs@uok.edu.in; dawood.khan@uok.edu.in
OI Khaliq, Zubair/0000-0003-1986-2084
CR Alégroth E, 2016, INFORM SOFTWARE TECH, V73, P66, DOI 10.1016/j.infsof.2016.01.012
   [Anonymous], TESSERACT OCR
   Brisset S, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106754
   Carion N, 2020, Arxiv, DOI [arXiv:2005.12872, DOI 10.48550/ARXIV.2005.12872]
   Chang NN, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P215, DOI 10.1109/QRS.2018.00035
   Contan A, 2018, IEEE INT CONF AUTO, DOI 10.1109/AQTR.2018.8402699
   Coppola R, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110845
   Coppola R, 2019, EMPIR SOFTW ENG, V24, P3205, DOI 10.1007/s10664-019-09722-9
   Dyutiman Choudhary Dyutiman Choudhary, 2011, Pro-poor value chain development for high value products in mountain regions: Indian Bay Leaf
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Khaliq Z., MOST REVIEWED E COMM
   Khaliq Z., 2022, arXiv
   Khaliq Z, 2022, COMPUTER, V55, P64, DOI 10.1109/MC.2021.3136791
   Kulkarni A., E COMMERCE ANDROID
   Marchetto A, 2011, EMPIR SOFTW ENG, V16, P103, DOI 10.1007/s10664-010-9149-1
   Mariani L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1013, DOI 10.1145/1985793.1985979
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Memon AM, 2004, S MACH PERC, V56, P51
   Mingxing Tan, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P10778, DOI 10.1109/CVPR42600.2020.01079
   Nass M, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106625
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   NOSOFSKY RM, 1986, J EXP PSYCHOL GEN, V115, P39, DOI 10.1037/0096-3445.115.1.39
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pol S., ECOMMERCE ANDROID AP
   Q. Labs, GROCERYSTORE WITH SE
   Raffel C, 2020, J MACH LEARN RES, V21
   Raina Shikha, 2013, Software Engineering Notes, V38, P1, DOI 10.1145/2492248.2492272
   Russakovsky O, 2015, PROC CVPR IEEE, P2121, DOI 10.1109/CVPR.2015.7298824
   Said M., SOUQ SHOPONLINE
   Si Huang, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P245, DOI 10.1109/ICST.2010.39
   Stocco A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P503, DOI 10.1145/3236024.3236063
   Vaswani A, 2023, Arxiv, DOI [arXiv:1706.03762, DOI 10.48550/ARXIV.1706.03762, 10.48550/arXiv.1706.03762]
   YANIK M., SHOEARSTORE
NR 33
TC 4
Z9 5
U1 1
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106969
DI 10.1016/j.infsof.2022.106969
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4P3BJ
UT WOS:000855271700007
DA 2024-07-18
ER

PT J
AU Wartschinski, L
   Noller, Y
   Vogel, T
   Kehrer, T
   Grunske, L
AF Wartschinski, Laura
   Noller, Yannic
   Vogel, Thomas
   Kehrer, Timo
   Grunske, Lars
TI VUDENC: Vulnerability Detection with Deep Learning on a Natural Codebase
   for Python
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Static analysis; Vulnerability detection; Deep learning; Long-short-term
   memory network; Natural codebase; Software repository mining
AB Context: Identifying potential vulnerable code is important to improve the security of our software systems. However, the manual detection of software vulnerabilities requires expert knowledge and is time-consuming, and must be supported by automated techniques. Objective: Such automated vulnerability detection techniques should achieve a high accuracy, point developers directly to the vulnerable code fragments, scale to real-world software, generalize across the boundaries of a specific software project, and require no or only moderate setup or configuration effort. Method: In this article, we present VUDENC (Vulnerability Detection with Deep Learning on a Natural Codebase), a deep learning-based vulnerability detection tool that automatically learns features of vulnerable code from a large and real-world Python codebase. VUDENC applies a word2vec model to identify semantically similar code tokens and to provide a vector representation. A network of long-short-term memory cells (LSTM) is then used to classify vulnerable code token sequences at a fine-grained level, highlight the specific areas in the source code that are likely to contain vulnerabilities, and provide confidence levels for its predictions. Results: To evaluate VUDENC, we used 1,009 vulnerability-fixing commits from different GitHub repositories that contain seven different types of vulnerabilities (SQL injection, XSS, Command injection, XSRF, Remote code execution, Path disclosure, Open redirect) for training. In the experimental evaluation, VUDENC achieves a recall of 78%-87%, a precision of 82%-96%, and an F1 score of 80%-90%. VUDENC's code, the datasets for the vulnerabilities, and the Python corpus for the word2vec model are available for reproduction. Conclusions: Our experimental results suggest that VUDENC is capable of outperforming most of its competitors in terms of vulnerably detection capabilities on real-world software. Comparable accuracy was only achieved on synthetic benchmarks, within single projects, or on a much coarser level of granularity such as entire source code files.
C1 [Wartschinski, Laura; Noller, Yannic; Vogel, Thomas; Kehrer, Timo; Grunske, Lars] Humboldt Univ Zu Berlin, Dept Comp Sci, Unter Linden 6, D-10099 Berlin, Germany.
   [Vogel, Thomas] Univ Paderborn, Dept Comp Sci, Warburger Str 100, D-33098 Paderborn, Germany.
   [Kehrer, Timo] Univ Bern, Dept Comp Sci, Hochschulstr 6, CH-3012 Bern, Switzerland.
C3 Humboldt University of Berlin; University of Paderborn; University of
   Bern
RP Kehrer, T (corresponding author), Humboldt Univ Zu Berlin, Dept Comp Sci, Unter Linden 6, D-10099 Berlin, Germany.; Kehrer, T (corresponding author), Univ Bern, Dept Comp Sci, Hochschulstr 6, CH-3012 Bern, Switzerland.
EM wartschinski@informatik.hu.berlin.de; noller@informatik.hu.berlin.de;
   thomas.vogel@informatik.hu.berlin.de; kehrer@informatik.hu.berlin.de;
   grunske@informatik.hu.berlin.de
RI Kehrer, Timo/AAI-6563-2020; Grunske, Lars/AAH-4550-2019; Noller,
   Yannic/C-4064-2018
OI Kehrer, Timo/0000-0002-2582-5557; Grunske, Lars/0000-0002-8747-3745;
   Noller, Yannic/0000-0002-9318-8027
CR Alammar Jay., 2019, The Illustrated Word2vec
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2020, CWE 601 OPEN REDIREC
   [Anonymous], 2020, CROSS SITE SCRIPTING
   [Anonymous], 2020, SQL INJECTION
   [Anonymous], 2020, CROSS SITE REQUEST F
   [Anonymous], 2017, ARXIV PREPRINT ARXIV
   [Anonymous], 2020, CODE INJECTION
   [Anonymous], 2020, COMMAND INJECTION
   [Anonymous], 2018, IEEE Transactions on Software Engineering
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bürger J, 2020, LECT NOTES BUS INF P, V385, P437, DOI 10.1007/978-3-030-50316-1_26
   Ceccato M, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962611
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Cuthbert A, 2019, 8 TOP PROGRAMMING LA
   Dam H. K., 2016, FSE 2016, P1
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Dwivedi V, 2019, TOP 10 PROGRAMMING L
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Github, 2019, GITH STAT OCT 2018
   Goodin D., 2017, NSA DERIVED RANSOMWA
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harer J., 2018, Advances in Neural Information Processing Systems, P7933
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Dam HK, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/2950290.2983985
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hovsepyan A., 2012, P 4 INT WORKSH SEC M, P7
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kingma D. P., 2014, arXiv
   Kumar H., 2019, ARXIV PREPRINT ARXIV
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Medeiros I, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P63, DOI 10.1145/2566486.2568024
   Morrison P., 2015, P 2015 S BOOTCAMP SC
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Pang YL, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P543, DOI 10.1109/ICMLA.2015.99
   Peldszus S, 2021, DATA KNOWL ENG, V134, DOI 10.1016/j.datak.2021.101907
   Rolim Reudismam, 2018, ARXIV180303806
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shar LK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P642, DOI 10.1109/ICSE.2013.6606610
   Shar LK, 2013, INFORM SOFTWARE TECH, V55, P1767, DOI 10.1016/j.infsof.2013.04.002
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Wang K, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P121, DOI 10.1145/3385412.3385999
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wartschinski L., 2020, VUDENC DATASET DIFF, DOI DOI 10.5281/ZENODO.3559203
   Wartschinski L, 2020, VUDENC GITHUB REPOSI
   Wartschinski L, 2019, VUDENC PYTHON CORPUS, DOI [DOI 10.5281/ZENODO.3559480, 10.5281/zenodo.3559480]
   Wartschinski L., 2020, VUDENC DATASETS VULN, DOI DOI 10.5281/ZENODO.3559841
   Yamaguchi F., 2011, P 5 USENIX C OFFENSI, P13
   Yamaguchi F, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P359
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 67
TC 31
Z9 34
U1 5
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106809
DI 10.1016/j.infsof.2021.106809
EA JAN 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800011
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zhou, ZY
   Yu, HQ
   Fan, GS
   Huang, ZJ
   Yang, XG
AF Zhou, Ziyi
   Yu, Huiqun
   Fan, Guisheng
   Huang, Zijie
   Yang, Xingguang
TI Summarizing source code with hierarchical code representation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code summarization; Program comprehension; Deep learning; Hierarchical
   attention
AB Context: Code summarization aims to automatically generate natural language descriptions for code, and has become a rapidly expanding research area. Data-driven code summarization models based on neural networks have proliferated in recent few years. Objective: Almost all of existing neural models are built upon the granularity of token or AST node. This has several drawbacks: a) Code summarization requires high-level knowledge of code while token representations are limited to provide a global view; b) Such approaches can hardly model the hierarchy of code; c) Long input codes challenge such models to handle long-range dependencies due to the large number of tokens and AST nodes. Method: To address these issues, we propose a novel framework to utilize hierarchical representation of code to generate better summaries. We consider two levels of code hierarchy: token-level and statement-level. Our framework contains a pair of customized encoder-decoder models for tokens and AST of code respectively. Each of them has a hierarchical encoder that aims to extract both token and statement-level code features, and an attentional decoder with the ability to attend to those different levels of representation during decoding. They are then combined to predict summaries via ensemble learning. Results: We conduct extensive experiments to evaluate our models on a large Java corpus. The experimental results show that our approach outperforms several state-of-the-art baselines by a substantial margin. Conclusion: In conclusion, our approach could better learn global information of code and shift attention between important statements during summary generation. With the help of hierarchical attention, the models are able to locate keywords more accurately in a top-down way. Ensemble learning is also proved to be an effective way to benefit from multiple input sources.
C1 [Zhou, Ziyi; Yu, Huiqun; Fan, Guisheng; Huang, Zijie; Yang, Xingguang] East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai, Peoples R China.
C3 East China University of Science & Technology
RP Yu, HQ (corresponding author), East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM zhouziyi@mail.ecust.edu.cn; yhq@ecust.edu.cn; yhq@ecust.edu.cn
RI Huang, Zijie/JUF-4746-2023
OI Huang, Zijie/0000-0002-8911-9889; Zhou, Ziyi/0000-0002-8267-8178
FU National Natural Science Foundation of China [61772200]; Shanghai
   Natural Science Foundation [21ZR1416300]
FX This work was supported by the National Natural Science Foundation of
   China (No. 61772200), Shanghai Natural Science Foundation (No.
   21ZR1416300).
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U., 2019, 7 INT C LEARNING REP
   Nguyen AT, 2017, PROC IEEE ACM INT C, P164, DOI 10.1109/ICSE-C.2017.118
   Chen Boxing, 2014, P 9 WORKSHOP STAT MA, P362, DOI DOI 10.3115/V1/W14-3346
   Chen QY, 2018, IEEE INT CONF AUTOM, P826, DOI 10.1145/3238147.3240471
   Cho B, 2014, P 2014 C EMP METH NA, P1724
   Cho Kyunghyun, 2014, SYNTAX SEMANTICS STR, P5, DOI [10.3115/v1/w14-4012, 10.3115 /v1/D14-1179, DOI 10.3115/V1/D14-1179]
   Denkowski Michael, 2014, P 9 WORKSH STAT MACH, DOI [10.3115/v1/W14-3348, DOI 10.3115/V1/W14-3348]
   Fernandes P, 2019, 7 INT C LEARNING REP
   Glorot X., 2010, P INT C ART INT STAT, P249
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Hu Xing, 2020, EMPIR SOFTW ENG, V25, P2179, DOI DOI 10.1007/s10664-019-09730-9
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kingma D. P., 2014, arXiv
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Liu Shangqing, 2020, CoRR abs/2006.05405
   Luong M.-T., 2015, P 2015 C EMPIRICAL M, DOI DOI 10.18653/V1/D15-1166
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Movshovitz-Attias Dana, 2013, ACL
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sutskever I, 2014, ADV NEUR IN, V27
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang W., 2020, IEEE Trans. Softw. Eng, P1
   Wei B, 2019, ADV NEURAL INFORM PR
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Wu Y., 2016, GOOGLES NEURAL MACHI
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Yang Z., 2016, P 2016 C N AM CHAPT, P1480, DOI [DOI 10.18653/V1/N16-1174, 10.18653/v1/n16-1174]
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Ye W, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2309, DOI 10.1145/3366423.3380295
   Zhang JL, 2020, IEEE ICC, DOI 10.1109/icc40277.2020.9149402
   Zhou ZY, 2020, SOFTWARE PRACT EXPER, V50, P2313, DOI 10.1002/spe.2893
NR 42
TC 8
Z9 9
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106761
DI 10.1016/j.infsof.2021.106761
EA NOV 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300009
DA 2024-07-18
ER

PT J
AU Zhang, ZY
   Wang, P
   Guo, HJ
   Wang, ZY
   Zhou, YQ
   Huang, ZQ
AF Zhang, Zhiyi
   Wang, Pu
   Guo, Hongjing
   Wang, Ziyuan
   Zhou, Yuqian
   Huang, Zhiqiu
TI DeepBackground: Metamorphic testing for Deep-Learning-driven image
   recognition systems accompanied by Background-Relevance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Metamorphic testing; Deep learning; Image recognition system; Test data
   generation; Robust systems
AB Context: Recently, advances in Deep Learning (DL) have promoted the development of DL-driven image recognition systems in various fields, such as medical treatment, face detection, etc., almost achieving the same level of performance as the human brain. Nevertheless, using DL-driven image recognition systems in these safety-critical domains requires ensuring the accuracy and the stability of these systems. Recent research in this direction mainly focuses on using the image transformations for the overall image to detect the inconsistency of image recognition systems. However, the influence of the image background region (i.e., the region of the image other than the target object) on the recognition result of the systems and the robustness evaluation of the systems are not considered.
   Objective: To evaluate the robustness of DL-driven image recognition systems about image background region changes, this paper introduces DeepBackground, a novel metamorphic testing method for DL-driven image recognition systems.
   Method: First, we define a new metric, termed Background-Relevance (BRC) to assess the influence degree of the image background region on the recognition result of the image recognition systems. DeepBackground defines a series of domain-specific metamorphic relations (MRs) combined with BRC and automatically generates many follow-up test images based on these MRs. Finally, DeepBackground detects the inconsistency of these systems and evaluates their robustness about image background changes according to BRC.
   Results: Our empirical validation on 3 commercial image recognition services and 6 popular convolutional neural networks (CNNs) models shows that DeepBackground can not only evaluate the robustness of these image recognition systems about image background changes according to BRC, but also can detect their inconsistent behaviors.
   Conclusion: DeepBackground is capable of automatically generating high-quality test input images to detect the inconsistency of the image recognition systems, and evaluating the robustness of these systems about image background changes according to BRC.
C1 [Zhang, Zhiyi; Wang, Pu; Guo, Hongjing; Zhou, Yuqian; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211100, Peoples R China.
   [Zhang, Zhiyi; Zhou, Yuqian] State Key Lab Cryptol, POB 5159, Beijing 100878, Peoples R China.
   [Zhou, Yuqian; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Minist Key Lab Safety Crit Software Dev & Verific, Nanjing 211100, Peoples R China.
   [Zhang, Zhiyi] Nanjing Univ, Natl Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Wang, Ziyuan] Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University of
   Aeronautics & Astronautics; Nanjing University; Nanjing University of
   Posts & Telecommunications
RP Wang, ZY (corresponding author), Nanjing Univ Posts & Telecommun, Sch Comp Sci & Technol, Nanjing 210023, Peoples R China.
EM wangziyuan@njupt.edu.cn
RI Wang, Ziyuan/GSE-4594-2022; zhang, ZY/HJH-6535-2023; jin,
   li/IWU-4648-2023
FU National Key Research and Development Program of China [2018YFB1003902];
   National Natural Science Foundation of China [62002162, 61901218,
   61772259]; Natural Science Foundation of Jiangsu Province, China
   [BK20200442, BK20190407]; Open Fund of the State Key Laboratory for
   Novel Software Technology [KFKT2019B11]
FX This research is supported, in part, by The National Key Research and
   Development Program of China (Grant No. 2018YFB1003902), National
   Natural Science Foundation of China (Grant No. 62002162, No. 61901218
   and No. 61772259), Natural Science Foundation of Jiangsu Province, China
   (Grant No. BK20200442 and No. BK20190407), by the Open Fund of the State
   Key Laboratory for Novel Software Technology (Grant No. KFKT2019B11).
CR Al-Qizwini M, 2017, IEEE INT VEH SYM, P89, DOI 10.1109/IVS.2017.7995703
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bolya D, 2019, IEEE I CONF COMP VIS, P9156, DOI 10.1109/ICCV.2019.00925
   Chen T.Y., 1998, ABS200212543 CORR
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Deng L, 2013, INT CONF ACOUST SPEE, P8599, DOI 10.1109/ICASSP.2013.6639344
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Grigorescu S, 2020, J FIELD ROBOT, V37, P362, DOI 10.1002/rob.21918
   Hannun Awni, 2014, ARXIV
   Hariharan B, 2011, IEEE I CONF COMP VIS, P991, DOI 10.1109/ICCV.2011.6126343
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hu G, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION WORKSHOP (ICCVW), P384, DOI 10.1109/ICCVW.2015.58
   Huang G, 2017, PROC CVPR IEEE, P2261, DOI 10.1109/CVPR.2017.243
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kuhn Rick, 2008, IT Professional, V10, P19, DOI 10.1109/MITP.2008.54
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Lo D, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P460
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Nair V., 2010, P 27 INT C MACHINE L, P807
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Parkhi OM, 2015, DEEP FACE RECOGNITIO
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Romera-Paredes B, 2016, LECT NOTES COMPUT SC, V9910, P312, DOI 10.1007/978-3-319-46466-4_19
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Segura S, 2020, IEEE SOFTWARE, V37, P46, DOI 10.1109/MS.2018.2875968
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P111, DOI 10.1109/ICSE-Companion.2019.00051
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Uhrig J., 2018, IEEE INT VEH SYM, P292
   Wang S., 2019, ABS191212162 CORR
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Wong W Eric, 2001, MUTATION TESTING NEW, V24
   Xiao K.Y., 2020, ABS200609994 CORR
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Ye YF, 2018, KNOWL INF SYST, V54, P265, DOI 10.1007/s10115-017-1058-9
   Yuan ZL, 2014, SIGCOMM'14: PROCEEDINGS OF THE 2014 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P371, DOI [10.1145/2619239.2631434, 10.1145/2740070.2631434]
   Zhang, 2019, ARXIV PREPRINT ARXIV
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 56
TC 16
Z9 17
U1 2
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106701
DI 10.1016/j.infsof.2021.106701
EA AUG 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600006
DA 2024-07-18
ER

PT J
AU Salman, HE
AF Salman, Hamzeh Eyal
TI Feature-based insight for forks in social coding platforms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Forks insight; FCA; Feature; Source code; Repositories; Reuse
ID SOURCE CODE; REUSE
AB Context: Recently, fork-based development has shown to be an easy and straightforward technique to reuse the source code of existing projects (upstream projects and their forks) in open source communities (for example, GitHub) and industry. This technique allows developers to tailor the existing forks to build their applications and thus reduce the development's burden. Objective: However, when the number of forks of a given repository increases, it is difficult to manually maintain and keep track of the development activities across all existing forks. Consequently, this leads to redundant development activities and to lose the efforts of the developers and maintainers. In this article, an automatic approach is proposed to overcome the above-mentioned problems. Method: The proposed approach incorporates a mathematical research technique called formal concept analysis with other proposed algorithms. Results: To evaluate the effectiveness of the proposed approach, it is applied on four software projects from different domains and sizes. The results show that the proposed approach gives promising results according to well-known metrics in the subject. Conclusion: Also, it significantly outperforms the existing state-of-the-art and gives developers in open source communities and industry a development overview about forks of a given repository.
C1 [Salman, Hamzeh Eyal] 61710 Mutah Univ, IT Fac, CIS Dept, Al Karak, Jordan.
RP Salman, HE (corresponding author), 61710 Mutah Univ, IT Fac, CIS Dept, Al Karak, Jordan.
EM hamzehmu@mutah.edu.jo
RI Eyal Salman, Hamzeh/HKF-2536-2023
OI Eyal Salman, Hamzeh/0000-0003-3258-7304
CR [Anonymous], 2007, THESIS U MAGDEBURG
   Asadi F, 2010, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2010.17
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Barbut M., 1970, ORDRE CLASSIFICATION
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Berry A, 2014, ANN MATH ARTIF INTEL, V72, P45, DOI 10.1007/s10472-014-9418-6
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Carbonnel J, 2020, DISCRETE APPL MATH, V273, P43, DOI 10.1016/j.dam.2019.06.008
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Chochlov M, 2017, INFORM SOFTWARE TECH, V88, P110, DOI 10.1016/j.infsof.2017.04.003
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Duc Anh, 2014, ESEM, DOI DOI 10.1145/2652524.2652546
   Duley A., 2010, INT C AUTOMATED SOFT, P477
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Eyal-Salman Hamzeh, 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P209, DOI 10.1109/IRI.2013.6642474
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Ganter B, 1999, Formal concept analysis: Mathematical foundations
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Hassine J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P81, DOI 10.1109/IWPSE.2005.8
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Li Z, 2017, P 9 ASIA PACIFIC S I
   Lormans M, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P349
   Maletic JI, 2000, PROC INT C TOOLS ART, P46, DOI 10.1109/TAI.2000.889845
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Martinez J, 2018, INFORM SOFTWARE TECH, V104, P46, DOI 10.1016/j.infsof.2018.07.005
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nyman Linus, 2011, International Journal of Open Source Software & Processes, V3, P1, DOI 10.4018/jossp.2011070101
   Nyman L., 2012, 8 IFIP WG 2 3 INT C, P274, DOI DOI 10.1007/978-3-642-33442-9_21FF.FFHAL-01519038F
   Petrenko M, 2008, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2008.14
   Ren LY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P230, DOI [10.1109/SANER.2019.8668023, 10.1109/saner.2019.8668023]
   Ren LY, 2018, PROC IEEE ACM INT C, P179, DOI 10.1145/3183440.3195085
   Robles G., 2012, OPEN SOURCE SYSTEMS, P1, DOI DOI 10.1007/978-3-642-33442-91
   Rubin Julia., 2012, P SOFTWARE PRODUCT L, P156, DOI DOI 10.1145/2362536.2362558
   Safyallah H, 2006, INT C PROGRAM COMPRE, P84, DOI 10.1109/ICPC.2006.19
   Salman Hamzeh Eyal, 2016, Journal of Theoretical and Applied Information Technology, V84, P183
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Savage T., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P255, DOI 10.1145/1810295.1810345
   Seriai A.-D., 2013, 25 INT C SOFTWARE EN, P244
   Shepherd D., 2006, Proc. of the International Conference on Aspect-Oriented Software Development (AOSD'06), P3
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   Wang QY, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI [10.1007/s11104-019-04156-0, 10.1145/3361242.3361254]
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Yinxing Xue, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P145, DOI 10.1109/WCRE.2012.24
   Yinxing Xue, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P109, DOI 10.1109/WCRE.2010.20
   Zhou SR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P105, DOI 10.1145/3180155.3180205
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
   Zowghi D, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P247, DOI 10.1109/ISRE.1997.566875
NR 57
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106679
DI 10.1016/j.infsof.2021.106679
EA JUL 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600001
DA 2024-07-18
ER

PT J
AU Filippetto, AS
   Lima, R
   Barbosa, JLV
AF Filippetto, Alexsandro Souza
   Lima, Robson
   Barbosa, Jorge Luis Victoria
TI A risk prediction model for software project management based on
   similarity analysis of context histories
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Risk management; Software management; Risk prediction; Risk
   identification; Risk response; Project management; Agile management
ID RESPONSE STRATEGIES; OPTIMIZATION METHOD
AB Context: Risk event management has become strategic in Project Management, where uncertainties are inevitable. In this sense, the use of concepts of ubiquitous computing, such as contexts, context histories, and mobile computing can assist in proactive project management. Objective: This paper proposes a computational model for the reduction of the probability of project failure through the prediction of risks. The purpose of the study is to show a model to assist teams to identify and monitor risks at different points in the life cycle of projects. The work presents as scientific contribution to the use of context histories to infer the recommendation of risks to new projects.
   Method: The research conducted a case study in a software development company. The study was applied in two scenarios. The first involved two teams that assessed the use of the prototype during the implementation of 5 projects. The second scenario considered 17 completed projects to assess the recommendations made by the ' Atropos model comparing the recommendations with the risks in the original projects. In this scenario, ' Atropos used 70% of each project's execution as learning for the recommendations of risks generated to the same projects. Thus, the scenario aimed to assess whether the recommended risks are contained in the remaining 30% of the executed projects. We used as context histories, a database with 153 software projects from a financial company. Results: A project team with 18 professionals assessed the recommendations, obtaining a result of 73% acceptance and 83% accuracy when compared to projects already being executed. The results demonstrated a high percentage of acceptance of the recommendation of risks compared to the other models that do not use the characteristics and similarities of projects.
   Conclusion: The results show the applicability of the risk recommendation to new projects, based on the similarity analysis of context histories. This study applies inferences on context histories in the development and planning of projects, focusing on risk recommendation. Thus, with recommendations considering the characteristics of each new project, the manager starts with a larger set of information to make more assertive project planning.
C1 [Filippetto, Alexsandro Souza; Lima, Robson; Barbosa, Jorge Luis Victoria] Univ Vale do Rio dos Sinos UNISINOS, Unisinos Ave 950, BR-93022000 Sao Leopoldo, RS, Brazil.
RP Filippetto, AS (corresponding author), Univ Vale do Rio dos Sinos UNISINOS, Unisinos Ave 950, BR-93022000 Sao Leopoldo, RS, Brazil.
EM alexsandrofilippetto@gmail.com; robsonklima@gmail.com;
   jbarbosa@unisinos.br
RI Barbosa, Jorge/L-9389-2013
OI Barbosa, Jorge/0000-0002-0358-2056
CR Allen D, 2011, J AM SOC INF SCI TEC, V62, P776, DOI 10.1002/asi.21441
   Barbosa J.L.V., 2015, VI IEEE INT C COMP I, P1, DOI DOI 10.1109/ICCIC.2015.7435625
   Batista Marcelo, 2011, IADIS International Conference of Applied Computing 2011. Proceedings, P410
   Cailliau A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P201, DOI 10.1109/RE.2012.6345805
   da Rosa JH, 2016, EXPERT SYST APPL, V45, P56, DOI 10.1016/j.eswa.2015.09.016
   Dupont D, 2020, PATTERN ANAL APPL, V23, P725, DOI 10.1007/s10044-019-00829-9
   Engestrom Y., 2014, LEARNING EXPANDING A, P338
   Fan ZP, 2015, EXPERT SYST APPL, V42, P2870, DOI 10.1016/j.eswa.2014.11.034
   Fang C, 2017, IEEE SYST J, V11, P1548, DOI 10.1109/JSYST.2016.2536701
   Gandodhar PoojaS., 2018, 2018_2nd_International_Conference_on_I-SMAC_, P605, DOI DOI 10.1109/I-SMAC.2018.8653786
   Kusner MJ, 2015, PR MACH LEARN RES, V37, P957
   Leontiev A.N., 2019, ACTIVITY CONSCIOUSNE
   Liu DP, 2009, INT SYMP EMP SOFTWAR, P303
   Liu S, 2019, IEEE INT CONF ELECTR, P230, DOI 10.1109/iceiec.2019.8784545
   Ocegueda-Miramontes V., 2019, STUDIES SYSTEMS DECI, V209, P65, DOI [10.1007/978-3-030-17985-4_4, DOI 10.1007/978-3-030-17985-4_4]
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pmbok Project Management Institute, 2017, GUID PROJ MAN BOD KN, P762
   PMI Project Management Institute, 2019, STAND RISK MAN PORTF, P175
   Pressman R.S., 2016, SOFTWARE ENG PRACTIT, P977
   Qazi A, 2016, INT J PROJ MANAG, V34, P1183, DOI 10.1016/j.ijproman.2016.05.008
   Rosa JH, 2015, INT J ARTIF INTELL E, V25, P455, DOI 10.1007/s40593-015-0047-y
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sangaiah AK, 2018, COMPUT ELECTR ENG, V71, P833, DOI 10.1016/j.compeleceng.2017.07.022
   Sommerville I., 2016, SOFTWARE ENG, P810
   Sutherland J., 2019, SCRUM BOOK SPIRIT GA, P540
   Vygotsky L.S., 2015, MIND SOC DEV HIGHER, P224
   Wu DS, 2018, INFORM SCIENCES, V467, P282, DOI 10.1016/j.ins.2018.07.013
   Xie W, 2017, ACM T MODEL COMPUT S, V27, DOI 10.1145/3154387
   Yang KC, 2019, HUM BEHAV EMERG TECH, V1, P48, DOI 10.1002/hbe2.115
   Zhang Y, 2016, INT J PROJ MANAG, V34, P819, DOI 10.1016/j.ijproman.2016.03.001
   Zhang Y, 2014, INT J PROJ MANAG, V32, P412, DOI 10.1016/j.ijproman.2013.06.006
   Zuo F, 2018, INT J PROJ MANAG, V36, P241, DOI 10.1016/j.ijproman.2017.11.002
NR 33
TC 56
Z9 56
U1 13
U2 71
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106497
DI 10.1016/j.infsof.2020.106497
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000001
DA 2024-07-18
ER

PT J
AU Hujainah, F
   Abu Bakar, RB
   Nasser, AB
   Al-haimi, B
   Zamli, KZ
AF Hujainah, Fadhl
   Bakar, Rohani Binti Abu
   Nasser, Abdullah B.
   Al-haimi, Basheer
   Zamli, Kamal Z.
TI SRPTackle: A semi-automated requirements prioritisation technique for
   scalable requirements of software system projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context: Requirement prioritisation (RP) is often used to select the most important system requirements as perceived by system stakeholders. RP plays a vital role in ensuring the development of a quality system with defined constraints. However, a closer look at existing RP techniques reveals that these techniques suffer from some key challenges, such as scalability, lack of quantification, insufficient prioritisation of participating stakeholders, overreliance on the participation of professional expertise, lack of automation and excessive time consumption. These key challenges serve as the motivation for the present research.
   Objective: This study aims to propose a new semiautomated scalable prioritisation technique called 'SRPTackle' to address the key challenges.
   Method: SRPTackle provides a semiautomated process based on a combination of a constructed requirement priority value formulation function using a multi-criteria decision-making method (i.e. weighted sum model), clustering algorithms (K-means and K-means++) and a binary search tree to minimise the need for expert involvement and increase efficiency. The effectiveness of SRPTackle is assessed by conducting seven experiments using a benchmark dataset from a large actual software project.
   Results: Experiment results reveal that SRPTackle can obtain 93.0% and 94.65% as minimum and maximum accuracy percentages, respectively. These values are better than those of alternative techniques. The findings also demonstrate the capability of SRPTackle to prioritise large-scale requirements with reduced time consumption and its effectiveness in addressing the key challenges in comparison with other techniques.
   Conclusion: With the time effectiveness, ability to scale well with numerous requirements, automation and clear implementation guidelines of SRPTackle, project managers can perform RP for large-scale requirements in a proper manner, without necessitating an extensive amount of effort (e.g. tedious manual processes, need for the involvement of experts and time workload).
C1 [Hujainah, Fadhl] Chalmers & Univ Gothenburg, Comp Sci & Engn Dept, S-41296 Gothenburg, Sweden.
   [Bakar, Rohani Binti Abu; Nasser, Abdullah B.; Zamli, Kamal Z.] Univ Malaysia Pahang, Fac Comp, Kuantan 26300, Malaysia.
   [Al-haimi, Basheer] Hebei Univ, Sch Management, Baoding, Peoples R China.
C3 Chalmers University of Technology; Universiti Malaysia Pahang Al-Sultan
   Abdullah (UMPSA); Hebei University
RP Hujainah, F (corresponding author), Chalmers & Univ Gothenburg, Comp Sci & Engn Dept, S-41296 Gothenburg, Sweden.
EM fadelhogina@gmail.com
RI Hujainah, Fadhl/T-4573-2019; Zamli, Kamal Z./F-6437-2010; Al-haimi,
   Basheer/JPK-9400-2023; Nasser, Abdullah B./AAX-5352-2020
OI Hujainah, Fadhl/0000-0002-8853-5231; Zamli, Kamal
   Z./0000-0003-4626-0513; Al-haimi, Basheer/0000-0001-5660-7977; Nasser,
   Abdullah B./0000-0002-5377-999X
FU Ministry of Education Malaysia, Universiti Malaysia Pahang (UMP);
   Ministry of Higher Education Yemen; Fundamental Research Grant from the
   Ministry of Education Malaysia from UMP [RDU1901209
   FRGS/1/2019/ICT02/UMP/02/13, RDU190164, PGRS170393]
FX The authors appreciate the efforts of the Ministry of Education
   Malaysia, Universiti Malaysia Pahang (UMP) and Ministry of Higher
   Education Yemen for supporting this research. This work is supported in
   part by the Fundamental Research Grant from the Ministry of Education
   Malaysia under Grants: RDU1901209 FRGS/1/2019/ICT02/UMP/02/13,
   RDU190164, and the PGRS170393 Grant from UMP. The authors also give
   special thanks to Professor Soo Ling Lim for her kind support in
   providing the benchmark dataset for this work.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Ahl V., 2005, Master's Thesis
   Alhroob E, 2019, IEEE ACCESS, V7, P56129, DOI 10.1109/ACCESS.2019.2911955
   Alhroob E, 2018, 2018 8TH IEEE INTERNATIONAL CONFERENCE ON CONTROL SYSTEM, COMPUTING AND ENGINEERING (ICCSCE 2018), P131, DOI 10.1109/ICCSCE.2018.8685029
   [Anonymous], 2013, Multi-Criteria Decision Analysis
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Asif SA, 2017, INT J ADV COMPUT SC, V8, P491
   Assaad M., 2010, SOI C SOI 2010 IEEE, P1, DOI DOI 10.1109/ICIET.2010.5625687
   Babar MI, 2015, KNOWL-BASED SYST, V84, P179, DOI 10.1016/j.knosys.2015.04.010
   Babar MI, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0121344
   Beg Rizwan, 2008, 2008 1st International Conference on Emerging Trends in Engineering and Technology (ICETET), P1216, DOI 10.1109/ICETET.2008.158
   Bukhsh FA, 2020, COMPUT STAND INTER, V69, DOI 10.1016/j.csi.2019.103389
   Carod N.M., 2009, REV COLOMB COMPUT, V10, P3283, DOI [10.1007/978-3-642-04425-0_55, DOI 10.1007/978-3-642-04425-0_55]
   Celebi ME, 2013, EXPERT SYST APPL, V40, P200, DOI 10.1016/j.eswa.2012.07.021
   Chourabi Z, 2019, J TEXT I, V110, P1092, DOI 10.1080/00405000.2018.1541434
   De Angelis D., 2011, JOHNSON SCH RES PAP, P39, DOI DOI 10.2139/SSRN.1710386
   Evans J.D., 1996, Straightforward statistics for the behavioral sciences
   Forouzani S., 2012, Proceedings of the 2012 8th International Conference on Computing Technology and Information Management (NCM and ICNIT), P787
   Gong GJ, 2011, ACCOUNT REV, V86, P1007, DOI 10.2308/accr.00000042
   Hair JF, 2011, J MARKET THEORY PRAC, V19, P139, DOI 10.2753/MTP1069-6679190202
   Hujainah Fadhl, 2020, 2020 10th IEEE International Conference on Control System, Computing and Engineering (ICCSCE), P97, DOI 10.1109/ICCSCE50387.2020.9204955
   Hujainah F., 2016, RES J APPL SCI, V11, P327
   Hujainah F, 2019, TEH VJESN, V26, P1186, DOI 10.17559/TV-20171129125407
   Hujainah F, 2019, DECIS SUPPORT SYST, V121, P94, DOI 10.1016/j.dss.2019.04.009
   Hujainah F, 2018, IEEE ACCESS, V6, P71497, DOI 10.1109/ACCESS.2018.2881755
   Hujainah F, 2018, ADV SCI LETT, V24, P7227, DOI 10.1166/asl.2018.12919
   Hujainah F, 2018, INFORM SOFTWARE TECH, V102, P85, DOI 10.1016/j.infsof.2018.05.008
   IBM Corp, 2013, IBM SPSS STAT WINDOW, V22
   Ibriwesh I, 2018, ARAB J SCI ENG, V43, P7995, DOI 10.1007/s13369-018-3283-2
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Kaur G., 2013, Int. J. Eng. Res. Technol, V2, P958
   Kukreja N, 2012, 2012 20 IEEE INT REQ, P303, DOI DOI 10.1109/RE.2012.6345819
   Lim S. L., 2010, Social networks and collaborative filtering for large-scale requirements elicitation
   Lim SL, 2013, ALIGNING ENTERPRISE, SYSTEM, AND SOFTWARE ARCHITECTURES, P118, DOI 10.4018/978-1-4666-2199-2.ch007
   Lim SL, 2012, IEEE T SOFTWARE ENG, V38, P707, DOI 10.1109/TSE.2011.36
   Ma Q., THESIS AUCKLAND U TE
   Masadeh Raja., 2018, Adv Syst Sci Appl, V18, P63, DOI [10.25728/assa.2018.18.2.576, DOI 10.25728/ASSA.2018.18.2.576]
   Medeiros J, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106194
   Motta RC, 2019, INFORM SOFTWARE TECH, V114, P231, DOI 10.1016/j.infsof.2019.07.001
   Perini A, 2013, IEEE T SOFTWARE ENG, V39, P445, DOI 10.1109/TSE.2012.52
   Prioritization R., 2018, REQUIREMENTS PRIORIT, P459
   Qaddoura R, 2017, 2017 INTERNATIONAL CONFERENCE ON NEW TRENDS IN COMPUTING SCIENCES (ICTCS), P258, DOI 10.1109/ICTCS.2017.55
   Rokach L, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P321, DOI 10.1007/0-387-25465-X_15
   SELIM SZ, 1984, IEEE T PATTERN ANAL, V6, P81, DOI 10.1109/TPAMI.1984.4767478
   Shao F, 2017, J SYST SOFTWARE, V126, P141, DOI 10.1016/j.jss.2016.09.043
   Sher F., 2019, Journal of Theoretical and Applied Information Technology, V97, P3969
   Sufian M., 2019, P 2018 INT C FRONT, P35, DOI 10.1109/
   Svensson RB, 2011, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2011.6051652
   Tice F. M., 2017, EXPLICIT RELATIVE PE
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Tscheikner-Gratl F, 2017, WATER-SUI, V9, DOI 10.3390/w9020068
   Tufail H, 2019, 5TH INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT (ICIM 2019), P227, DOI [10.1109/infoman.2019.8714709, 10.1109/INFOMAN.2019.8714709]
   Veerappa V., 2012, THESIS U COLL LONDON
   Wohlin C., 2012, Experimentation in Software Engineering
   Xu D., 2015, Annals of Data Science, V2, P165, DOI [DOI 10.1007/S40745-015-0040-1, 10.1007/s40745-015-0040-1]
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Yousuf M, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P3966
   Zaidan AA, 2015, DECIS SUPPORT SYST, V78, P15, DOI 10.1016/j.dss.2015.07.002
   Zubcoff J, 2019, INFORM SOFTWARE TECH, V106, P68, DOI 10.1016/j.infsof.2018.09.004
NR 60
TC 9
Z9 9
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2021
VL 131
AR 106501
DI 10.1016/j.infsof.2020.106501
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LB
UT WOS:000614250000014
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Ma, ZM
   Yuan, ZC
   Yan, L
AF Ma, Zongmin
   Yuan, Zhongchen
   Yan, Li
TI Two-level clustering of UML class diagrams based on semantics and
   structure
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Reuse; UML class diagram; Retrieval; Clustering; Similarity measure;
   Feature similarity
ID SOFTWARE COMPONENT; ALGORITHM; CLASSIFICATION; RETRIEVAL; REUSE
AB Context: The reuse of software design has been an important issue of software reuse. UML class diagrams are widely applied in software design and has become DE factor standard. As a result, the reuse of UML class diagrams has received more attention. With the increasing number of class diagrams stored in reuse repository, their retrieval becomes a time-consuming job. The clustering can narrow down retrieval range and improve the retrieval efficiency. But few efforts have been done in clustering UML class diagrams. This paper tries to propose a clustering approach for UML class diagrams.
   Objective: This paper proposes a two-level clustering of UML class diagrams, namely, semantic clustering and structural clustering. The UML class diagrams stored in reuse repository are clustered into a few domains based on semantics in the first level and a few categories based on structure in the second level.
   Method: We propose a clustering algorithm named CUFS, in which the idea of partitioning and hierarchical clustering is combined and feature similarity is proposed for the similarity measure between two clusters in order to merge clusters. A better feature representation of a cluster, namely, feature class diagram, is proposed in this paper. In order to form each sub-cluster, the semantic and structural similarities between UML class diagrams are defined, respectively.
   Results: A series of experimental results show that, the proposed feature similarity measure not only speeds up the clustering process, but also expresses the closeness degree between clusters for merging clusters. The proposed algorithm shows a good clustering quality and efficiency under the condition of different size and distribution of UML class diagrams.
   Conclusion: It is concluded that the proposed two-level clustering method considers both semantics and structure contained in a class diagram, which can flexibly adapt to different clustering requirements. Also, the proposed clustering algorithm performs better than other related algorithms, regardless of in semantic, structural and hybrid clustering.
C1 [Ma, Zongmin; Yan, Li] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
   [Yuan, Zhongchen] Shenyang Univ Technol, Sch Chem Proc Automat, Liaoyang 111004, Peoples R China.
   [Yuan, Zhongchen] Northeastern Univ, Sch Software, Shenyang 110819, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Shenyang University of
   Technology; Northeastern University - China
RP Yuan, ZC (corresponding author), Shenyang Univ Technol, Sch Chem Proc Automat, Liaoyang 111004, Peoples R China.; Yuan, ZC (corresponding author), Northeastern Univ, Sch Software, Shenyang 110819, Peoples R China.
EM yuanzhongchen@163.com
OI Ma, Zongmin/0000-0001-7780-6473
FU National Natural Science Foundation of China [61772269, 61370075]
FX The work was supported in part by the National Natural Science
   Foundation of China (61772269 and 61370075).
CR Agarwal R, 2003, COMMUN ACM, V46, P248, DOI 10.1145/903893.903944
   AHMED EB, 2013, APPL INTELL, V39, P236
   Ali FM, 2004, INFORM SOFTWARE TECH, V46, P499, DOI 10.1016/S0950-5849(03)00089-2
   [Anonymous], 1976, GRAPH THEORY APPL
   Ayramo S, 2006, REPORTS DEP MATH I C
   Baset S, 2018, INT J SOFTW ENG KNOW, V28, P1775, DOI 10.1142/S0218194018400284
   Bouguettaya A, 2015, EXPERT SYST APPL, V42, P2785, DOI 10.1016/j.eswa.2014.09.054
   Bunke H, 1998, PATTERN RECOGN LETT, V19, P255, DOI 10.1016/S0167-8655(97)00179-7
   Chen JY, 2019, APPL INTELL, V49, P1228, DOI 10.1007/s10489-018-1324-x
   Evermann J, 2005, REQUIR ENG, V10, P146, DOI 10.1007/s00766-004-0208-2
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Fraley C, 2002, J AM STAT ASSOC, V97, P611, DOI 10.1198/016214502760047131
   Gan G., 2007, SOC IND APPL MATH, V20
   Gao XB, 2010, PATTERN ANAL APPL, V13, P113, DOI 10.1007/s10044-008-0141-y
   Gomes P, 2004, AI COMMUN, V17, P13
   Guha S, 2000, INFORM SYST, V25, P345, DOI 10.1016/S0306-4379(00)00022-3
   Guha S, 2001, INFORM SYST, V26, P35, DOI 10.1016/S0306-4379(01)00008-4
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   JARDINE N, 1971, INFORM STORAGE RET, V7, P217, DOI 10.1016/0020-0271(71)90051-9
   Kanungo T, 2002, IEEE T PATTERN ANAL, V24, P881, DOI 10.1109/TPAMI.2002.1017616
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Li C, 2002, IEEE T KNOWL DATA EN, V14, P673, DOI 10.1109/TKDE.2002.1019208
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Meng L., 2013, Int. J. Hybrid Inf. Technol, V6, P1
   Miller George, 1998, WORDNET ELECT LEXICA
   Olga T., 2015, AUSTIN J PROTEOM BIO, V2
   Permuter H, 2006, PATTERN RECOGN, V39, P695, DOI 10.1016/j.patcog.2005.10.028
   Reddy M. V., 2017, Int. J. Comput. Sci. Trends Technol, V5, P6
   Robles K, 2012, INFORM SOFTWARE TECH, V54, P72, DOI 10.1016/j.infsof.2011.07.003
   Sake J. Swarndeep, 2016, INT J ADV RES COMPUT, V5
   Salami HO, 2014, INT JOINT CONF COMP, P324, DOI 10.1109/JCSSE.2014.6841889
   Salami HO, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P96, DOI 10.1109/ICMLA.2013.112
   Sander J, 1998, DATA MIN KNOWL DISC, V2, P169, DOI 10.1023/A:1009745219419
   Saxena A, 2017, NEUROCOMPUTING, V267, P664, DOI 10.1016/j.neucom.2017.06.053
   Sharma N., 2015, International Journal of Computer Applications, V127, P46
   Sreedhar Kumar S., 2019, Int J Eng Technol (UAE), V8, P29, DOI DOI 10.14419/IJET.V8I1.13971
   Srinivas C, 2014, PROCEDIA COMPUT SCI, V31, P1044, DOI 10.1016/j.procs.2014.05.358
   Srinivas C, 2015, PROC TECH, V19, P866, DOI 10.1016/j.protcy.2015.02.124
   Srinivas Chintakindi, 2015, P INT C ENG MIS 2015, DOI [10.1145/2832987.2833080, DOI 10.1145/2832987.2833080]
   Wang W, 1997, PROCEEDINGS OF THE TWENTY-THIRD INTERNATIONAL CONFERENCE ON VERY LARGE DATABASES, P186
   Yildirim P, 2017, ADV ELECTR COMPUT EN, V17, P77, DOI 10.4316/AECE.2017.04010
   Yuan ZC, 2020, REQUIR ENG, V25, P213, DOI 10.1007/s00766-019-00317-w
   Zafar Muhammad Husnain, 2015, International Journal of Intelligent Systems and Applications, V7, P55, DOI 10.5815/ijisa.2015.10.07
   Zhang T, 1997, DATA MIN KNOWL DISC, V1, P141, DOI 10.1023/A:1009783824328
   Zhang X., 2012, P 2012 INT C TRUSTW, P506
   Zhao Y, 2005, DATA MIN KNOWL DISC, V10, P141, DOI 10.1007/s10618-005-0361-3
NR 46
TC 5
Z9 6
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106456
DI 10.1016/j.infsof.2020.106456
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900010
DA 2024-07-18
ER

PT J
AU Pulparambil, S
   Baghdadi, Y
   Salinesi, C
AF Pulparambil, Supriya
   Baghdadi, Youcef
   Salinesi, Camille
TI A methodical framework for service oriented architecture adoption:
   Guidelines, building blocks, and method fragments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Method engineering; SOA maturity model; Methodical framework; SOA
   method; Method fragment; Methodical building block
AB Context: Rapidly-changing business requirements expect high business process flexibility that can be achieved using service oriented architecture (SOA). This requires enterprises to adopt SOA and assess their SOA adoption maturity to achieve continuous improvement. SOA realization demands service development with varying levels of granularity.
   Objectives: The research aims to develop a methodical framework for SOA realization based on Welke's SOA maturity model, a model that assumes a methodology dimension. The framework is concerned with formalizing knowledge on how to identify and shape the main building blocks of a method at each maturity level.
   Methods: The research applies the principles of design science research and method engineering to develop a methodical framework for SOA realization.
   Results: The research identifies the gaps in SOA realization methods and illustrates how a methodical framework based on a maturity model facilitates the SOA adoption process. The evaluation results revealed that the framework would help enterprises to select method fragments required at each maturity level to accomplish business excellence.
   Conclusion: The implications of this research are twofold: from a theoretical perspective, the researchers or practitioners can use the results for further study. From a practical standpoint, enterprises can use the methodical guidelines to assess their current maturity level and select and implement the required method fragments from the method base provided in the proposed framework.
C1 [Pulparambil, Supriya; Baghdadi, Youcef] Sultan Qaboos Univ, Dept Comp Sci, Muscat, Oman.
   [Salinesi, Camille] Univ Paris 01, Ctr Res Informat, Paris, France.
C3 Sultan Qaboos University; heSam Universite; Universite Pantheon-Sorbonne
RP Pulparambil, S (corresponding author), Sultan Qaboos Univ, Dept Comp Sci, Muscat, Oman.
EM s.pulparambil@squ.edu.com; ybaghdadi@squ.edu.om;
   camille.salinesi@univ-paris1.fr
FU Research Council (TRC) of the Sultanate of Oman [ORG/ICT/14/004]
FX This work was supported by The Research Council (TRC) of the Sultanate
   of Oman (ORG/ICT/14/004).
CR Al-Thuhli A, 2017, 2017 SECOND INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS ENGINEERING (ICISE), P45, DOI 10.1109/ICISE.2017.12
   [Anonymous], 2007, SOA MATURITY MODEL B, DOI DOI 10.1007/978-3-319-02453-0
   [Anonymous], 2009, SOA SOURC BOOK TOGAF
   [Anonymous], 2011, SERV COMP 2011 WORK
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], CHALLENGES STRATEGIE
   [Anonymous], 2015, J EC BUS MANAGE
   [Anonymous], 2007, SETLABS BRIEFINGS
   Arsanjani A, 2008, IBM SYST J, V47, P377, DOI 10.1147/sj.473.0377
   Arsanjani A., 2009, SOA MANIF WORK GR
   Arsanjani A, 2006, P IEEE I C SERV COMP, P515, DOI 10.1109/SCC.2006.104
   Baghdadi Youcef, 2015, International Journal of Systems and Service-Oriented Engineering, V5, P1, DOI 10.4018/IJSSOE.2015040101
   Baghdadi Y, 2018, P INT C COMP METH CO, DOI [10.1109/ICCMC.2017.8282628, DOI 10.1109/ICCMC.2017.8282628]
   Bani-Ismail B, 2019, INT J WEB INF SYST, V15, P285, DOI 10.1108/IJWIS-05-2018-0045
   Bani-Ismail B, 2019, INT J WEB GRID SERV, V15, P251, DOI 10.1504/IJWGS.2019.10022422
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Bukhari A, 2018, SERV ORIENTED COMPUT, V12, P169, DOI 10.1007/s11761-018-0232-6
   Cen Y, 2015, INT C AUT MECH CONTR
   Chang SH, 2007, P IEEE I C SERV COMP, P204
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   Deng SG, 2016, IEEE T SERV COMPUT, V9, P291, DOI 10.1109/TSC.2014.2361138
   Garro A., DEV SERVICE ORIENTED
   Gherib B, 2015, INT J WEB INF SYST, V11, P418, DOI 10.1108/IJWIS-03-2015-0004
   Gholami MF, 2014, SOFTW SYST MODEL, V13, P361, DOI 10.1007/s10270-011-0222-z
   Gu Q, 2011, SERV ORIENTED COMPUT, V5, P203, DOI 10.1007/s11761-011-0080-0
   Hachicha M, 2016, DATA KNOWL ENG, V105, P73, DOI 10.1016/j.datak.2015.12.002
   Hamzah MHI, 2019, J INF COMMUN TECHNOL, V18, P273, DOI 10.32890/jict2019.18.3.3
   Hashmi K, 2016, ACM TRANS MANAG INF, V7, DOI 10.1145/2893187
   Hasic F., 2020, IEEE T SERV COMPUT
   Henderson-Sellers B., 2014, Situational method engineering, DOI DOI 10.1007/978-3-642-41467-1
   Hirschheim R, 2010, MIS Q EXEC, V9, P37
   Holley K., 2010, 100 SOA Questions: Asked and Answered
   Jones S., 2006, ENTERPRISE SOA ADOPT
   Khadka Ravi, 2013, 2013 IEEE 7th International Symposium on the Maintenance and Evolution of Service-Oriented and Cloud-Based Systems (MESOCA), P2, DOI 10.1109/MESOCA.2013.6632729
   Khadka R., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P163, DOI 10.1109/ICSM.2011.6080783
   Kornyshova E, 2011, MADISE METHOD ENG BA
   Koumaditis K, 2013, J ENTERP INF MANAG, V26, P343, DOI 10.1108/JEIM-06-2012-0036
   Kulkarni N, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P423, DOI 10.1109/SERVICES-1.2008.86
   Lee D, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2161
   Lee J, 2015, IEEE T SERV COMPUT, V8, P240, DOI 10.1109/TSC.2014.2310213
   Lee S, 2006, IEEE INT CONF ROBOT, P2035, DOI 10.1109/ROBOT.2006.1642004
   Lesser Eric, 2016, Strategy & Leadership, V44, P41, DOI 10.1108/SL-11-2015-0083
   Megargel A., 2018, IDRBT Journal of Banking Technology, V02, P1
   Metzger D, 2017, INF SYST E-BUS MANAG, V15, P789, DOI 10.1007/s10257-016-0331-x
   Miao WK, 2013, IEEE T SERV COMPUT, V6, P536, DOI 10.1109/TSC.2012.22
   Moody D.L, 2003, ECIS 2003 P, P79
   Niknafs A, 2008, LECT NOTES COMPUT SC, V5074, P525
   Niknejad N, 2020, INFORM SYST, V91, DOI 10.1016/j.is.2020.101491
   Object Management Group, 2008, OMG STD REV, V2
   Offermann P, 2010, BUS INFORM SYST ENG+, V2, P295, DOI 10.1007/s12599-010-0120-x
   Owens I, 2012, PROCEEDINGS OF THE 6TH EUROPEAN CONFERENCE ON INFORMATION MANAGEMENT AND EVALUATION, P267
   Papazoglou M. P., 2006, International Journal of Web Engineering and Technology, V2, P412, DOI 10.1504/IJWET.2006.010423
   Peffers Ken, 2012, Design Science Research in Information Systems. Advances in Theory and Practice. Proceedings 7th International Conference, DESRIST 2012, P398, DOI 10.1007/978-3-642-29863-9_29
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Pulparambil S., 2018, 2018 9 INT C COMP CO, P1, DOI [10.1109/ICCCNT.2018.8494072, DOI 10.1109/ICCCNT.2018.8494072]
   Pulparambil S, 2019, COMPUT STAND INTER, V61, P65, DOI 10.1016/j.csi.2018.05.001
   Pulparambil S, 2017, SERV ORIENTED COMPUT, V11, P217, DOI 10.1007/s11761-017-0207-z
   Ricken J, 2013, SOA METHOD ENG FRAME
   Rodriguez-Mier P, 2016, IEEE T SERV COMPUT, V9, P537, DOI 10.1109/TSC.2015.2402679
   Rolland C, 2010, IEEE T SERV COMPUT, V3, P292, DOI 10.1109/TSC.2010.26
   San-Yih Hwang, 2008, IEEE Transactions on Services Computing, V1, P104, DOI 10.1109/TSC.2008.2
   Themistocleous M, 2015, INFORM TECHNOL DEV, V21, P460, DOI 10.1080/02681102.2014.939605
   Tundis A, 2011, DEV SERVICE ORIENTED
   van de Weerd I., 2009, HDB RES MODERN SYSTE, P35
   Vartiainen P.L., 2002, Evaluation, V8, P359, DOI DOI 10.1177/135638902401462484
   Wagner F, 2016, IEEE T SERV COMPUT, V9, P277, DOI 10.1109/TSC.2013.2295791
   Wang J., 2015, TSC, V1, P1, DOI [10.1109/ TSC.2015.2466544, DOI 10.1109/TSC.2015.2466544]
   Wei Jiang, 2010, 2010 IEEE International Conference on Web Services (ICWS), P42, DOI 10.1109/ICWS.2010.38
   Welke R, 2011, COMPUTER, V44, P61, DOI 10.1109/MC.2011.56
   Whalen MW., 2006, P INT S SOFTW TEST A, P25, DOI DOI 10.1145/1146238.1146242
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yao YL, 2008, 2008 11TH IEEE SINGAPORE INTERNATIONAL CONFERENCE ON COMMUNICATION SYSTEMS (ICCS), VOLS 1-3, P1436, DOI 10.1109/ICCS.2008.4737420
   Yvanov K, 2006, ARIS VALUE ENG SOA
   Zeshan F, 2017, IET SOFTW, V11, P64, DOI 10.1049/iet-sen.2016.0048
NR 74
TC 4
Z9 4
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106487
DI 10.1016/j.infsof.2020.106487
EA JAN 2021
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900002
DA 2024-07-18
ER

PT J
AU Ru, J
   Yang, Y
   Grundy, J
   Keung, J
   Hao, L
AF Ru, Jia
   Yang, Yun
   Grundy, John
   Keung, Jacky
   Hao, Li
TI A systematic review of scheduling approaches on multi-tenancy cloud
   platforms
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Survey; Cloud computing; Multi-tenancy; Scheduling
ID RESOURCE; ALGORITHM; WORKFLOW; MODEL
AB Context: Scheduling in cloud is complicated as a result of multi-tenancy. Diverse tenants have different requirements, including service functions, response time, QoS and throughput. Diverse tenants require different scheduling capabilities, resource consumption and competition. Multi-tenancy scheduling approaches have been developed for different service models, such as Software as a Service (SaaS), Platform as a service (PaaS), Infrastructure as a Service (IaaS), and Database as a Service (DBaaS).
   Objective: In this paper, we survey the current landscape of multi-tenancy scheduling, laying out the challenges and complexity of software engineering where multi-tenancy issues are involved. This study emphasises scheduling policies, cloud provisioning and deployment with regards to multi-tenancy issues. We conduct a systematic literature review of research studies related to multi-tenancy scheduling approaches on cloud platforms determine the primary scheduling approaches currently used and the challenges for addressing key multi-tenancy scheduling issues. Method: We adopted a systematic literature review method to search and review many major journal and conference papers on four major online electronic databases, which address our four predefined research questions. Defining inclusion and exclusion criteria was the initial step before extracting data from the selected papers and deriving answers addressing our enquiries.
   Results: Finally, 53 papers were selected, of which 62 approaches were identified. Most of these methods are developed without cloud layers' limitation (43.40%) and on SaaS, most of scheduling approaches are oriented to framework design (43.75%).
   Conclusion: The results have demonstrated most of multi-tenancy scheduling solutions can work at any delivery layer. With the difference of tenants' requirements and functionalities, the choice of cloud service delivery models is changed. Based on our study, designing a multi-tenancy scheduling framework should consider the following 3 factors: computing, QoS and storage resource. One of the potential research foci of multi-tenancy scheduling approaches is on GPU scheduling.
C1 [Ru, Jia; Yang, Yun] Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic 3122, Australia.
   [Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3145, Australia.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Hao, Li] Allianz Australia Insurance Ltd, Dept Business Intelligence, Sydney, NSW 2000, Australia.
C3 Swinburne University of Technology; Monash University; City University
   of Hong Kong
RP Ru, J (corresponding author), Swinburne Univ Technol, Sch Software & Elect Engn, Melbourne, Vic 3122, Australia.
EM jiaruweiwei@gmail.com; yyang@swin.edu.au; john.grundy@monash.edu;
   Jacky.Keung@cityu.edu.hk; liucoolhao@gmail.com
RI ; Grundy, John/I-6681-2012
OI Keung, Jacky/0000-0002-3803-9600; Grundy, John/0000-0003-4928-7076
FU Swinburne University of Technology, Australia
FX This research is supported by a scholarship from Swinburne University of
   Technology, Australia.
CR Almorsy M., 2013, AUTOM SOFTW ENG, P1
   [Anonymous], 2015, ACM COMPUT SURV, DOI DOI 10.1145/2843889
   [Anonymous], 2012, ENTERPRISE INTEROPER
   [Anonymous], 2008, P 2008 ACM SIGMOD IN
   [Anonymous], 2011, P 2 ACM S CLOUD COMP, DOI [DOI 10.1145/2038916.2038921, 10.1145/2038916.2038921]
   [Anonymous], 2014, 2014 24 INT C FIELD, DOI DOI 10.1109/FPL.2014.6927482
   Asnaghi A., 2016, 2016 19th IEEE International Conference on Computational Science and Engineering (CSE), IEEE 14th International Conference on Embedded and Ubiquitous Computing (EUC), and 15th International Symposium on Distributed Computing and Applications for Business Engineering (DCABES). Proceedings, P90, DOI 10.1109/CSE-EUC-DCABES.2016.166
   Azeez Afkham, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P458, DOI 10.1109/CLOUD.2010.50
   Azhar D., 2012, Proceedings ofthe 8th International Conference on Predictive Models in Software Engineering, PROMISE, V12, P49, DOI [10.1145/2365324.2365332, DOI 10.1145/2365324.2365332]
   Banks D., 2009, INFORM SYST J
   Bezemer C.-P., 2010, Proceedings of the Joint ERCIM Workshop on Software Evolution (EVOL) and International Workshop on Principles of Software Evolution (IWPSE), P88
   Bezemer Cor-Paul., 2010, SOFTWARE MAINTENANCE, P1, DOI DOI 10.1109/ICSM.2010.5609735
   Bijon Khalid., 2015, 20th Symposium on Access Control Models and Technologies, P63
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cheng X, 2009, JCPC: 2009 JOINT CONFERENCE ON PERVASIVE COMPUTING, P599, DOI 10.1109/JCPC.2009.5420114
   Chinnathambi S, 2019, CLUSTER COMPUT, V22, P14637, DOI 10.1007/s10586-018-2375-9
   Cui LZ, 2013, APPL MATH INFORM SCI, V7, P99, DOI 10.12785/amis/071L15
   Dalvandi A, 2017, IEEE T PARALL DISTR, V28, P947, DOI 10.1109/TPDS.2016.2607743
   den Haan J., 2010, MULTITENANCY MODEL D
   Duan J, 2017, IEEE T PARALL DISTR, V28, P2131, DOI 10.1109/TPDS.2017.2657633
   Espadas J, 2013, FUTURE GENER COMP SY, V29, P273, DOI 10.1016/j.future.2011.10.013
   Faniyi F, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2843890
   Fehling Christoph, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P252, DOI 10.1109/CLOUD.2010.33
   Fiaidhi J, 2012, IT PROF, V14, P16, DOI 10.1109/MITP.2012.6
   Frederick G.C., MULTITENANT DATA ARC
   Gohad A., 2012, Proceedings of the 2012 Annual SRII Global Conference (SRII), P11, DOI 10.1109/SRII.2012.12
   He SJ, 2012, INT CON ADV INFO NET, P15, DOI 10.1109/AINA.2012.74
   Jain N, 2015, INT C CLOUD COMP BIG, P145, DOI 10.1109/CCBD.2015.24
   Jain N, 2015, IEEE T SERV COMPUT, V8, P212, DOI 10.1109/TSC.2014.2381251
   Jamalian S, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P596, DOI 10.1109/CLOUD.2015.85
   Jamalian S, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON CLOUD ENGINEERING (IC2E 2015), P329, DOI 10.1109/IC2E.2015.56
   Jie Zhu, 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P564, DOI 10.1109/ICWS.2011.64
   Kai Tang, 2010, Proceedings 2010 IEEE 7th International Conference on e-Business Engineering (ICEBE 2010), P479, DOI 10.1109/ICEBE.2010.67
   Kalra Prabhakar S., 2018, P 11 ACM INT C INN S, P1
   Kaur P, 2017, J PARALLEL DISTR COM, V101, P41, DOI 10.1016/j.jpdc.2016.11.003
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krebs R, 2014, IEEE ACM INT SYMP, P122, DOI 10.1109/CCGrid.2014.80
   Krebs R, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P195, DOI 10.1109/CGC.2013.36
   Kwok T, 2008, LECT NOTES COMPUT SC, V5364, P633, DOI 10.1007/978-3-540-89652-4_57
   Lang W, 2012, PROC INT CONF DATA, P702, DOI 10.1109/ICDE.2012.101
   Li J, 2015, PROCEEDINGS OF THE 16TH ANNUAL MIDDLEWARE CONFERENCE, P222, DOI 10.1145/2814576.2814807
   Li Z., P 19 IEEE IEEE INT S, P171
   Lloyd W, 2014, INT CONF CLOUD ENG, P271, DOI 10.1109/IC2E.2014.40
   Mace J, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION (SIGCOMM '16), P144, DOI 10.1145/2934872.2934878
   Maplesden D, 2015, IEEE T SOFTWARE ENG, V41, P691, DOI 10.1109/TSE.2015.2396514
   Mietzner R, 2009, IEEE INT ENTERP DIST, P131, DOI 10.1109/EDOC.2009.13
   Momm C., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P255, DOI 10.1109/COMPSACW.2011.96
   Muller I., 2010, P 30 IEEE C AS PAC S
   Nagesh BhavaniB., 2014, IJRCCT, V3, P395
   Nghiem PP, 2016, J PARALLEL DISTR COM, V95, P29, DOI 10.1016/j.jpdc.2016.04.001
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Neto ECP, 2017, IEEE SYS MAN CYBERN, P1292, DOI 10.1109/SMC.2017.8122791
   Poddar R, 2015, INT CONF COMMUN SYST
   Polato I, 2014, J NETW COMPUT APPL, V46, P1, DOI 10.1016/j.jnca.2014.07.022
   Primas B, 2016, INT CONF UTIL CLOUD, P138, DOI 10.1145/2996890.2996897
   Rafique MM, 2011, IEEE INT C CL COMP, P353, DOI 10.1109/CLUSTER.2011.46
   Rahman MR, 2018, INT CONF CLOUD ENG, P113, DOI 10.1109/IC2E.2018.00034
   Rameshan N, 2016, IEEE ACM INT SYMP, P233, DOI 10.1109/CCGrid.2016.71
   Rangavittala SR, 2015, 6TH INTERNATIONAL CONFERENCE ON COMPUTER & COMMUNICATION TECHNOLOGY (ICCCT-2015), P51, DOI 10.1145/2818567.2818577
   Rimal BP, 2017, IEEE T PARALL DISTR, V28, P290, DOI 10.1109/TPDS.2016.2556668
   Rodriguez MA, 2018, FUTURE GENER COMP SY, V79, P739, DOI 10.1016/j.future.2017.05.009
   Rosinosky G, 2016, IEEE INT CONF CLOUD, P311, DOI [10.1109/CLOUD.2016.47, 10.1109/CLOUD.2016.0049]
   Ru J, 2015, INT CONF CLOUD COMP, P306, DOI 10.1109/CloudCom.2015.30
   Ru J, 2013, IEEE AUS SOFT ENGR, P78, DOI 10.1109/ASWEC.2013.19
   Schaner J., 2013, ACM INT C MANAGEMENT, P773, DOI 10.1145
   Sengupta D, 2014, INT CONF HIGH PERFOR, P513, DOI 10.1109/SC.2014.47
   Sengupta Dipanjan., 2013, Proceedings of the International Workshop on Virtualization Technologies in Distributed Computing (VTDC), P3, DOI 10.1145/2465829.2465830
   Shukla A, 2018, J PARALLEL DISTR COM, V117, P98, DOI 10.1016/j.jpdc.2018.02.003
   Simao J, 2013, INT CONF CLOUD COMP, P445, DOI 10.1109/CloudCom.2013.65
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Soualhia M, 2017, J SYST SOFTWARE, V134, P170, DOI 10.1016/j.jss.2017.09.001
   Sun HL, 2014, 2014 IEEE 8TH INTERNATIONAL SYMPOSIUM ON SERVICE ORIENTED SYSTEM ENGINEERING (SOSE), P140, DOI 10.1109/SOSE.2014.21
   Suresh L, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P611, DOI 10.1145/3127479.3132020
   Tortora G., 2017, P IEEE INT C FUZZ SY, P1
   Tsai W.-T., 2010, P 2010 IEEE INT C SE, P1
   Wei-Tek Tsai, 2010, Proceedings 2010 IEEE 7th International Conference on e-Business Engineering (ICEBE 2010), P484, DOI 10.1109/ICEBE.2010.103
   Wei-Tek Tsai, 2010, Proceedings of the 2010 IEEE Congress on Services (SERVICES-1), P473, DOI 10.1109/SERVICES.2010.127
   White T., 2012, HADOOP DEFINITIVE GU
   Won H, 2015, J COMMUN NETW-S KOR, V17, P592, DOI 10.1109/JCN.2015.000106
   Wood K., 2011, 2011 IEEE 8th International Conference on e-Business Engineering, P119, DOI 10.1109/ICEBE.2011.68
   Xiao Ding, 2010, Proceedings 2010 3rd IEEE International Conference on Broadband Network & Multimedia Technology (IC-BNMT 2010), P951, DOI 10.1109/ICBNMT.2010.5705230
   Yin SY, 2018, IEEE T KNOWL DATA EN, V30, P2213, DOI 10.1109/TKDE.2018.2817235
   Zaidman A., 2010, TUBSERG2010012 DELF
   Zeng JA, 2015, IEEE INT C CL COMP, P32, DOI 10.1109/CLUSTER.2015.14
   Zhang JT, 2016, J NETW COMPUT APPL, V64, P23, DOI 10.1016/j.jnca.2015.12.018
   Zhao T., 2013, P ACM IFIP USENIX IN, P16
NR 87
TC 11
Z9 11
U1 0
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106478
DI 10.1016/j.infsof.2020.106478
EA JAN 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900008
DA 2024-07-18
ER

PT J
AU Konishi, T
   Kojima, H
   Nakagawa, H
   Tsuchiya, T
AF Konishi, Tatsuya
   Kojima, Hideharu
   Nakagawa, Hiroyuki
   Tsuchiya, Tatsuhiro
TI Using simulated annealing for locating array construction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Locating arrays; Combinatorial interaction testing; Software testing;
   Simulated annealing
ID PARTICLE SWARM; SEARCH; CONSTRAINTS; FRAMEWORK
AB Context: Combinatorial interaction testing is known to be an efficient testing strategy for computing and information systems. Locating arrays are mathematical objects that are useful for this testing strategy, as they can be used as a test suite that permits fault localization as well as fault detection. In this application, each row of an array is used as an individual test.
   Objective: This paper proposes an algorithm for constructing locating arrays with a small number of rows. Testing cost increases as the number of tests increases; thus the problem of finding locating arrays of small sizes is of practical importance.
   Method: The proposed algorithm uses simulated annealing, a meta-heuristic algorithm, to find locating array of a given size. The whole algorithm repeatedly executes the simulated annealing algorithm with the input array size being dynamically varied.
   Results: Experimental results show (1) that the proposed algorithm is able to construct locating arrays for problem instances of large sizes and (2) that, for problem instances for which nontrivial locating arrays are known, the algorithm is often able to generate locating arrays that are smaller than or at least equal to the known arrays.
   Conclusion: Based on the results, we conclude that the proposed algorithm can produce small locating arrays and scale to practical problems.
C1 [Konishi, Tatsuya; Kojima, Hideharu; Nakagawa, Hiroyuki; Tsuchiya, Tatsuhiro] Osaka Univ, Grad Sch Informat Sci & Technol, 1-5 Yamadaoka, Suita, Osaka 5650871, Japan.
C3 Osaka University
RP Tsuchiya, T (corresponding author), Osaka Univ, Grad Sch Informat Sci & Technol, 1-5 Yamadaoka, Suita, Osaka 5650871, Japan.
EM t-tutiya@ist.osaka-u.ac.jp
OI Tsuchiya, Tatsuhiro/0000-0002-3329-9235; Kojima,
   Hideharu/0000-0001-5842-8120; Nakagawa, Hiroyuki/0000-0001-5280-4113
FU Grants-in-Aid for Scientific Research [20H04167] Funding Source: KAKEN
CR Ahmed BS, 2017, INFORM SOFTWARE TECH, V86, P20, DOI 10.1016/j.infsof.2017.02.004
   Ahmed BS, 2015, INFORM SOFTWARE TECH, V66, P13, DOI 10.1016/j.infsof.2015.05.005
   Aldaco Abraham N., 2015, ACM SIGOPS Operating Systems Review, V49, P31
   Alsewari ARA, 2012, INFORM SOFTWARE TECH, V54, P553, DOI 10.1016/j.infsof.2012.01.002
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Colbourn C. J., 2016, J ALGEBRA COMBINATOR, V3, P127, DOI DOI 10.13069/jacodesmath.17551
   Colbourn CJ, 2008, J COMB OPTIM, V15, P17, DOI 10.1007/s10878-007-9082-4
   Colbourn CJ, 2018, MATH COMPUT SCI, V12, P429, DOI 10.1007/s11786-018-0385-x
   Colbourn CJ, 2016, SIAM J DISCRETE MATH, V30, P2011, DOI 10.1137/16M1056390
   Colbourn CJ, 2016, IEEE ICST WORKSHOP, P19, DOI 10.1109/ICSTW.2016.38
   Compton Randy, 2016, 2016 IEEE Conference on Computer Communications: Workshops (INFOCOM WKSHPS), P650, DOI 10.1109/INFCOMW.2016.7562157
   Galinier P, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1288, DOI 10.1145/3071178.3071324
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Jin HY, 2020, J MATERN-FETAL NEO M, V33, P81, DOI 10.1080/14767058.2018.1487396
   Konishi T, 2020, FUND INFORM, V174, P27, DOI 10.3233/FI-2020-1929
   Konishi T, 2017, IEEE ICST WORKSHOP, P276, DOI 10.1109/ICSTW.2017.49
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   Martinez C, 2009, SIAM J DISCRETE MATH, V23, P1776, DOI 10.1137/080730706
   Moser RA, 2010, J ACM, V57, DOI 10.1145/1667053.1667060
   Nagamoto T, 2014, IEEE PAC RIM INT SYM, P155, DOI 10.1109/PRDC.2014.26
   Richard Kuhn D., 2013, Introduction to combinatorial testing
   Seidel SA, 2018, LECT NOTES COMPUT SC, V10979, P349, DOI 10.1007/978-3-319-94667-2_29
   Shi C, 2012, SCI CHINA MATH, V55, P197, DOI 10.1007/s11425-011-4307-5
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Tang Y, 2012, J STAT THEORY PRACT, V6, P20, DOI 10.1080/15598608.2012.647484
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Yokoi K, 2015, PROCEEDINGS OF INTERNATIONAL CONFERENCE ON ARTIFICIAL LIFE AND ROBOTICS (ICAROB2015), P1
NR 29
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106346
DI 10.1016/j.infsof.2020.106346
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Rebai, S
   Kessentini, M
   Alizadeh, V
   Ben Sghaier, O
   Kazman, R
AF Rebai, Soumaya
   Kessentini, Marouane
   Alizadeh, Vahid
   Ben Sghaier, Oussama
   Kazman, Rick
TI Recommending refactorings via commit message analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Commit message; Refactoring recommendation; Quality attributes
ID DEFECTS DETECTION; SOFTWARE; MODEL; EXAMPLES; TOOLS
AB Context: The purpose of software restructuring, or refactoring, is to improve software quality and developer productivity.
   Objective: Prior studies have relied mainly on static and dynamic analysis of code to detect and recommend refactoring opportunities, such as code smells. Once identified, these smells are fixed by applying refactorings which then improve a set of quality metrics. While this approach has value and has shown promising results, many detected refactoring opportunities may not be related to a developer's current context and intention. Recent studies have shown that while developers document their refactoring intentions, they may miss relevant refactorings aligned with their rationale.
   Method: In this paper, we first identify refactoring opportunities by analyzing developer commit messages and check the quality improvements in the changed files, then we distill this knowledge into usable context-driven refactoring recommendations to complement static and dynamic analysis of code.
   Results: The evaluation of our approach, based on six open source projects, shows that we outperform prior studies that apply refactorings based on static and dynamic analysis of code alone.
   Conclusion: This study provides compelling evidence of the value of using the information contained in existing commit messages to recommend future refactorings.
C1 [Rebai, Soumaya; Kessentini, Marouane; Alizadeh, Vahid; Ben Sghaier, Oussama] Univ Michigan, Dearborn, MI 48128 USA.
   [Kazman, Rick] Univ Hawaii, Honolulu, HI 96822 USA.
C3 University of Michigan System; University of Michigan; University of
   Hawaii System
RP Kessentini, M (corresponding author), Univ Michigan, Dearborn, MI 48128 USA.
EM srebal@umich.edu; marouane@umich.edu; alizadeh@umich.edu;
   oussama@umich.edu; kazman@hawaii.edu
RI Alizadeh, Vahid/S-2154-2018; Ben Sghaier, Oussama/HTR-2139-2023
OI Kazman, Rick/0000-0003-0392-2783; Alizadeh, Vahid/0000-0002-5030-9036
CR Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Alizadeh H.F. Vahid, 2019, P 19 IEEE INT WORK C, P12
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alizadeh V, 2018, IEEE INT CONF AUTOM, P464, DOI [10.1145/3238147.3238217, 10.114513238147.3238217]
   AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   [Anonymous], 2012, CS201210 U WAT DR CH
   Bachmann A., 2010, P 16
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Carriere J., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P149, DOI 10.1145/1810295.1810317
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Feathers Michael, 2004, Working Effectively With Legacy Code: Work Effect Leg Code
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 1999, REFACTORING IMPROVIN
   Ghannem A, 2016, SOFTWARE QUAL J, V24, P947, DOI 10.1007/s11219-015-9271-9
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kessentini M, 2014, J SYST SOFTWARE, V97, P1, DOI 10.1016/j.jss.2014.06.040
   Kessentini M, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P51, DOI 10.1109/CMSBSE.2013.6604438
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khatchadourian R, 2017, PROC INT CONF SOFTW, P82, DOI 10.1109/ICSE.2017.16
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   McBurney PW, 2018, IEEE T SOFTWARE ENG, V44, P897, DOI 10.1109/TSE.2017.2716950
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   O'Keeffe M., 2003, PPPJ 03, P59, DOI [10.1145/957289.957308, DOI 10.1145/957289.957308]
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Rebai S., 2019, P 19 IEEE INT WORK C, P12
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Wang HZ, 2016, LECT NOTES COMPUT SC, V9936, P352, DOI 10.1007/978-3-319-46295-0_22
   Yackley J.J., 2019, P 19 IEEE INT WORKIN, P12
   Zhang Y, 2012, ACM SIGPLAN NOTICES, V47, P233, DOI 10.1145/2398857.2384634
NR 71
TC 14
Z9 14
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106332
DI 10.1016/j.infsof.2020.106332
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800005
DA 2024-07-18
ER

PT J
AU Rueda, S
   Panach, JI
   Distante, D
AF Rueda, Silvia
   Ignacio Panach, Jose
   Distante, Damiano
TI Requirements elicitation methods based on interviews in comparison: A
   family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements elicitation; Empirical software engineering; Prototyping;
   Joint application design
ID DOMAIN KNOWLEDGE
AB Context: There are several methods to elicit requirements through interviews between an end-user and a team of software developers. The choice of the best method in this context is usually on subjective developers' preferences instead of objective reasons. There is a lack of empirical evaluations of methods to elicit requirements that help developers to choose the most suitable one.
   Objective: This paper designs and conducts a family of experiments to compare three methods to elicit requirements: Unstructured Interviews, where there is no specific protocol or artifacts; Joint Application Design (JAD), where each member of the development team has a specific role; Paper Prototyping, where developers contrast the requirements with the end-user through prototypes.
   Method: The experiment is a between-subjects design with next response variables: number of requirements, time, diversity, completeness, quality and performance. The experiment consists of a maximum of 4 rounds of interviews between students that play the role of developers and an instructor that plays the role of client. Subjects had to elaborate a requirements specification document as results of the interviews. We recruited 167 subjects in 4 replications in 3 years. Subjects were gathered in development teams of 6 developers at most, and each team was an experimental unit.
   Results: We found some significant differences. Paper Prototyping yields the best results to elicit as many requirements as possible, JAD requires the highest time to report the requirements and the least overlapping, and Unstructured Interviews yields the highest overlapping and the lowest time to report the requirements.
   Conclusions: Paper Prototyping is the most suitable for eliciting functional requirements, JAD is the most suitable for non-functional requirements and to avoid overlapping, Unstructured Interviews is the fastest but with poor quality in the results.
C1 [Rueda, Silvia; Ignacio Panach, Jose] Univ Valencia, Dept Informat, Escola Tecn Super Engn, Ave Univ S-N, Valencia 46100, Spain.
   [Distante, Damiano] Univ Rome Unitelma Sapienza, Viale Regina Elena 295, I-00161 Rome, Italy.
C3 University of Valencia; Universita degli Studi di Roma Unitelma Sapienza
RP Panach, JI (corresponding author), Univ Valencia, Dept Informat, Escola Tecn Super Engn, Ave Univ S-N, Valencia 46100, Spain.
EM silvia.rueda@uv.es; joigpana@uv.es; damiano.distante@unitelmasapienza.it
RI Distante, Damiano/ABE-2366-2020; Panach, Jose Ignacio/ABF-2099-2020;
   Rueda Pascual, Silvia/A-2132-2019
OI Panach, Jose Ignacio/0000-0002-7043-6227; Rueda Pascual,
   Silvia/0000-0002-1020-706X; Distante, Damiano/0000-0002-8467-535X
FU Spanish Ministry of Science and Innovation [TIN2016-80811-P]; ERDF
FX This project has been developed with the financial support of the
   Spanish Ministry of Science and Innovation through project DataME (ref:
   TIN2016-80811-P) and co-financed with ERDF.
CR Adam Sebastian, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P362, DOI 10.1007/978-3-642-37422-7_26
   Ambreen T, 2018, REQUIR ENG, V23, P63, DOI 10.1007/s00766-016-0258-2
   [Anonymous], INTERDISCIPLINARY J
   [Anonymous], 2009, PROTOTYPING
   [Anonymous], 2010, ISOMECIEEE 24765:2010, P1, DOI [DOI 10.1109/IEEESTD.2010.5733835, 10.1109/IEEESTD.2010.5733835]
   [Anonymous], **DATA OBJECT**, DOI DOI 10.17632/TNZPZ237K5.1
   Aranda AM, 2016, IEEE T SOFTWARE ENG, V42, P427, DOI 10.1109/TSE.2015.2494588
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Besrour S, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCES (ICCOINS), DOI 10.1109/ICCOINS.2014.6868446
   Brill O., 2010, VIDEOS VS USE CASES, P30
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Burnay C., 2017, S APPL COMP, P1094
   CARMEL E, 1993, COMMUN ACM, V36, P40, DOI 10.1145/153571.163265
   Carrizo D, 2014, INFORM SOFTWARE TECH, V56, P644, DOI 10.1016/j.infsof.2014.01.009
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Dalgaard P, 2008, STAT COMPUT SER, P127, DOI 10.1007/978-0-387-79054-1_7
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Farinha C., 2011, REQUIREMENTS ELICITA
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Ferrari A, 2017, INT REQUIR ENG CONF, P400, DOI 10.1109/RE.2017.15
   Gacitua R., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P5, DOI 10.1109/RE.2010.12
   Ghanbari H, 2015, J SYST SOFTWARE, V109, P32, DOI 10.1016/j.jss.2015.07.017
   Gralha C, 2016, INT REQUIR ENG CONF, P432, DOI 10.1109/RE.2016.28
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Ibriwesh I., 2017, P 8 INT C E ED E BUS, P56
   IEEE, 1998, 8301998 IEEE
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kumari SN, 2015, 2015 SCIENCE AND INFORMATION CONFERENCE (SAI), P889, DOI 10.1109/SAI.2015.7237247
   Leffingwell D., 2010, Agile Software Requirements: Lean Requirements Practices for Teams, Programs, and the Enterprise
   Lloyd WJ, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P311, DOI 10.1109/ICRE.2002.1048544
   Lombriser P, 2016, LECT NOTES COMPUT SC, V9619, P171, DOI 10.1007/978-3-319-30282-9_12
   Mahmood S, 2013, P INT COMP SOFTW APP, P437, DOI 10.1109/COMPSAC.2013.72
   Mannio M., 2001, REQUIREMENTS ELICITA, P283
   Morales-Ramirez I, 2019, INFORM SYST, V86, P94, DOI 10.1016/j.is.2018.08.003
   Nascimento E, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P93, DOI 10.1145/2973839.2973855
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Pajula J, 2016, COMPUT INTEL NEUROSC, V2016, DOI 10.1155/2016/2094601
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Riaz M, 2017, EMPIR SOFTW ENG, V22, P2127, DOI 10.1007/s10664-016-9481-1
   Sethia Neetu Kumari, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P285, DOI 10.1007/978-3-319-05843-6_21
   Sharma P., 2016, FUNCTIONAL NONFUNCTI, V9, P9005
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sommerville I., 2010, SOFTWARE ENG
   Spoletini P, 2018, LECT NOTES COMPUT SC, V10753, P101, DOI 10.1007/978-3-319-77243-1_7
   Tiwari S, 2015, INFORM SOFTWARE TECH, V67, P128, DOI 10.1016/j.infsof.2015.06.004
   Vijayan J, 2010, COMM COM INF SC, V117, P30
   Vitharana P, 2016, J ASSOC INF SYST, V17, P804, DOI 10.17705/1jais.00444
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Wong LR, 2017, J ENG SCI TECHNOL, V12, P296
   Yamanaka Takatoshi, 2010, Selected Topics in Applied Computing. Applied Computing Conference 2010 (ACC '10), P54
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
   Zuur AF, 2010, METHODS ECOL EVOL, V1, P3, DOI 10.1111/j.2041-210X.2009.00001.x
NR 53
TC 11
Z9 11
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106361
DI 10.1016/j.infsof.2020.106361
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NT9PE
UT WOS:000573271800002
DA 2024-07-18
ER

PT J
AU Vishnubhotla, SD
   Mendes, E
   Lundberg, L
AF Vishnubhotla, Sai Datta
   Mendes, Emilia
   Lundberg, Lars
TI Investigating the relationship between personalities and agile team
   climate of software professionals in a telecom company
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Personality traits; Team climate; Correlation; Regression; Agile
   software development
ID BRIGGS TYPE INDICATOR; 5 FACTOR MODEL; WORK PREFERENCES; GROUP
   INNOVATION; PERFORMANCE; TRAITS; CONSCIENTIOUSNESS; INTELLIGENCE;
   PERSPECTIVE; VALIDATION
AB Context: Previous research found that the performance of a team not only depends on the team personally composition, but also on the interactive effects of team climate. Although investigation on personalities associated with software development has been an active research area over the past decades, there has been very limited research in relation to team climate.
   Objective: Our study investigates the association between the five factor model personally traits (openness to experience, conscientiousness, extraversion, agreeableness and neuroticism) and the factors related to team climate (team vision, participative safety, support for innovation and task orientation) within the context of agile teams working in a telecom company.
   Method: A survey was used to gather data on personally characteristics and team climate perceptions of 43 members from eight agile teams. The data was initially used for correlation analysis; then, regression models were developed for predicting the personally traits related to team climate perception.
   Results: We observed a statistically significant positive correlation between openness to experience and support for innovation (r = 0.31). Additionally, agreeableness was observed to be positively correlated with overall team climate (r = 0.35). Further, from regression models, we observed that personally traits accounted to less than 15% of the variance in team climate.
   Conclusion: A person's ability to easily get along with team members (agreeableness) has a significant positive influence on the perceived level of team climate. Results from our regression analysis suggest that further data may be needed, and/or there are other human factors, in addition to personally traits, that should also be investigated with regard to their relationship with team climate. Overall, the relationships identified in our study are likely to be applicable to organizations within the telecommunications domain that use scrum methodology for software development.
C1 [Vishnubhotla, Sai Datta; Mendes, Emilia; Lundberg, Lars] BTH Blekinge Tekniska Hgsk, Karlshamn, Sweden.
C3 Blekinge Institute Technology
RP Vishnubhotla, SD (corresponding author), BTH Blekinge Tekniska Hgsk, Karlshamn, Sweden.
EM sai-datta.vishnubhotla@bth.se
RI Vishnubhotla, Sai Datta/AAF-8950-2021; Mendes, Maria E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322; Vishnubhotla, Sai
   Datta/0000-0002-0983-8817
FU KK-stiftelsen-HOG AgileSec research project
FX We would like to thank all practitioners who contributed their valuable
   time. This research was partially funded by the KK-stiftelsen-HOG
   AgileSec research project.
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Agrawal V., 2017, Requirements of commercial-off-the-shelf software-a comparison between manufacturing and service sectors
   AGRELL A, 1994, J OCCUP ORGAN PSYCH, V67, P143, DOI 10.1111/j.2044-8325.1994.tb00557.x
   Anderson G., 2018, EFFECT SOFTWARE TEAM, DOI [10.24251/HICSS.2018.059., DOI 10.24251/HICSS.2018.059]
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1971, The Psychology of Computer Programming
   Bain PG, 2001, SMALL GR RES, V32, P55, DOI 10.1177/104649640103200103
   Barnhart HX, 2016, STAT METHODS MED RES, V25, P2939, DOI 10.1177/0962280214534651
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Barrick MR, 2001, INT J SELECT ASSESS, V9, P9, DOI 10.1111/1468-2389.00160
   Barry B, 1997, J APPL PSYCHOL, V82, P62, DOI 10.1037/0021-9010.82.1.62
   Bender L.L., 2014, MEASUREMENT NONTECHN, P478
   Boehm B., 2003, CROSSTALK J DEF SOFT
   Boone Jr H.N., 2012, J EXT, P50
   BOYLE GJ, 1995, AUST PSYCHOL, V30, P71, DOI 10.1111/j.1742-9544.1995.tb01750.x
   Burch G.S.J., 2004, Journal of Managerial Psychology, V19, P406
   Burch GSJ, 2008, INT REV IND ORGAN PS, V23, P261
   Celikten A., 2017, ASSIGNING PRODUCT DE
   Chamorro-Premuzic T, 2003, J RES PERS, V37, P319, DOI 10.1016/S0092-6566(02)00578-0
   Chao J, 2006, AGILE 2006, PROCEEDINGS, P89, DOI 10.1109/AGILE.2006.20
   Chatzi SC, 2007, INT J ORGAN ANAL, V15, P341, DOI 10.1108/19348830710900142
   Chen CC, 2008, COMPUT STAT DATA AN, V53, P554, DOI 10.1016/j.csda.2008.09.026
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conard MA, 2006, J RES PERS, V40, P339, DOI 10.1016/j.jrp.2004.10.003
   Costa Jr P.T., 2008, The SAGE Handbook of Personality Theory and Assessment, V2, P179, DOI [10.4135/9781849200479.n9, DOI 10.4135/9781849200479.N9]
   Costa P.T., 1992, REVISED NEO PERSONAL
   Creasy T, 2013, PROJ MANAG J, V44, P36, DOI 10.1002/pmj.21372
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Deary, 2009, PERSONALITY TRAITS, V3rd, DOI [10.1017/CBO9780511812743, DOI 10.1017/CBO9780511812743]
   Donnellan MB, 2006, PSYCHOL ASSESSMENT, V18, P192, DOI 10.1037/1040-3590.18.2.192
   English A, 2004, SMALL GR RES, V35, P643, DOI 10.1177/1046496404266320
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Farsides T, 2003, PERS INDIV DIFFER, V34, P1225, DOI 10.1016/S0191-8869(02)00111-3
   Fay D., 2004, Eur. J. Work Organ. Psychol., V13, P241, DOI DOI 10.1080/13594320444000083
   Feldt R., 2008, INT WORKSHOP COOPERA, P49, DOI DOI 10.1145/1370114.1370127
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   Ganesh MP, 2013, ASIAN ACAD MANAG J, V18, P55
   Ganesh M P, 2006, P 20 AUST NZ AC MAN, V20, P1
   Ghasemi A, 2012, INT J ENDOCRINOL MET, V10, P486, DOI 10.5812/ijem.3505
   Goldberg L.R., 1999, Personality psychology in Europe, V7, P7, DOI DOI 10.1037/0022-3514.86.1.174
   Goldberg LR, 2006, J RES PERS, V40, P84, DOI 10.1016/j.jrp.2005.08.007
   Gosling S., 2002, The Influence of Professional and Organisational Factors On Health Professionals' Use of Online Evidence: An Evaluation of the Clinical Information Access Program (CIAP)
   Gulati Jayati, 2016, ACM SIGSOFT Software Engineering Notes, V41, P1, DOI 10.1145/2853073.2853089
   Hanneman RobertA., 2012, Basic Statistics for Social Research
   Hayward MN, 2017, BMC HEALTH SERV RES, V17, DOI 10.1186/s12913-017-2175-6
   Jia JD, 2015, INT CONF SOFTW ENG, P7, DOI 10.1109/ICSESS.2015.7338995
   Johannisson T, 2016, PEERJ, V4, DOI 10.7717/peerj.2245
   John O.P., 1991, BIG 5 INVENTORY VERS, DOI DOI 10.1037/T07550-000
   Johnson J.A., 2009, DESCRIPTIONS USED IP
   Johnson JA, 2014, J RES PERS, V51, P78, DOI 10.1016/j.jrp.2014.05.003
   Kanij T, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P1, DOI 10.1109/CHASE.2015.7
   Karimi Z, 2016, J SYST SOFTWARE, V111, P228, DOI 10.1016/j.jss.2015.09.011
   Karn JS, 2006, BEHAV RES METHODS, V38, P495, DOI 10.3758/BF03192804
   Keissami A, 2019, ACM SIGGRAPH 2019 APPY HOUR (SIGGRAPH '19), P5, DOI 10.1145/3305365.3329731
   Klebanov B.B., 2006, Using people and WordNet to measure semantic relatedness
   Kline P, 2013, Handbook of psychological testing, DOI DOI 10.4324/9781315812274
   Kosti MV, 2016, EMPIR SOFTW ENG, V21, P1509, DOI 10.1007/s10664-015-9395-3
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Lee HK, 2017, INFORM SYST J, V27, P589, DOI 10.1111/isj.12111
   Lee J.M., 1978, P 1978 ANN C, V2, P561, DOI [10.1145/800178.810092, DOI 10.1145/800178.810092]
   Lengel GJ, 2017, PSYCHOL ASSESSMENT, V29, P1, DOI 10.1037/pas0000321
   Liu Jinyuan, 2016, Shanghai Arch Psychiatry, V28, P115, DOI 10.11919/j.issn.1002-0829.216045
   Loewen P., 2004, The Learning Organization, V11, P260, DOI [10.1108/09696470410533012, DOI 10.1108/09696470410533012]
   Mathisen GE, 2004, SCAND J PSYCHOL, V45, P383, DOI 10.1111/j.1467-9450.2004.00420.x
   Matturro G., 2015, Soft skills in scrum teams. a survey of the most valued to have by product owners and scrum masters, P42, DOI DOI 10.18293/SEKE2015-026
   Matzler K, 2008, J ECON PSYCHOL, V29, P301, DOI 10.1016/j.joep.2007.06.004
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Molleman E, 2004, SMALL GR RES, V35, P515, DOI 10.1177/1046496404264361
   Murukannaiah PK, 2017, INT REQUIR ENG CONF, P512, DOI 10.1109/RE.2017.74
   Murukannaiah PK, 2016, INT REQUIR ENG CONF, P176, DOI 10.1109/RE.2016.68
   Nurdiani I., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P36, DOI 10.1109/ICGSE-W.2011.16
   O'Connor DB, 2009, ANN BEHAV MED, V37, P184, DOI 10.1007/s12160-009-9087-6
   Omheni N, 2017, INT J DIST EDUC, V15, P28, DOI 10.4018/IJDET.2017010103
   Ospina R, 2019, FRONT APPL MATH STAT, V5, DOI 10.3389/fams.2019.00043
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Petersen V.C., 2006, MBTI DISTORTED REFLE
   Peterson M., 2011, Handbook of organizational culture and climate
   Pirola-Merlo A, 2002, LEADERSHIP QUART, V13, P561, DOI 10.1016/S1048-9843(02)00144-3
   Ragazzoni P., 2002, Journal of Managerial Psychology, V17, P325, DOI DOI 10.1108/02683940210428128
   Rahmani C., 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P679, DOI 10.1109/ICIS.2010.11
   Reiter-Palmon R., 2017, Team creativity and innovation
   Rodrigues N, 2019, INT J SELECT ASSESS, V27, P1, DOI 10.1111/ijsa.12232
   Rodrigues Nuno, 2013, Rev. psicol. trab. organ., V29, P21
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Rothstein M. G., 2006, Human Resources Management Review, V16, P155, DOI 10.1016/j.hrmr.2006.03.004
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Salman I, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P130, DOI 10.1145/3202710.3203148
   Shameem M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P912, DOI 10.1109/CCAA.2017.8229936
   Shuto M, 2017, 2017 18TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNDP 2017), P167, DOI 10.1109/SNPD.2017.8022718
   Silva DS, 2019, IEEE SYS MAN CYBERN, P2939, DOI 10.1109/SMC.2019.8914670
   Smith EK, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P15, DOI [10.1145/2897586.2897596, 10.1109/CHASE.2016.011]
   Soomro AB, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P259, DOI 10.1109/MySEC.2015.7475230
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Soto C J., 2015, The encyclopedia of adulthood and aging, P1
   Stidham H., 2018, DS 92, P2145, DOI [https://doi.org/10.21278/idc.2018.0508, DOI 10.21278/IDC.2018.0508]
   Sumner M, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P34
   Usman M, 2018, INFORM SOFTWARE TECH, V99, P21, DOI 10.1016/j.infsof.2018.02.009
   van Assen M.F., 2000, INTI J AGILE MANAGEM, V2, P142, DOI [10.1108/14654650010337168, DOI 10.1108/14654650010337168]
   van der Linden D, 2010, J RES PERS, V44, P315, DOI 10.1016/j.jrp.2010.03.003
   VERSIONONE, 2018, 12th annual State of Agile report
   Vishnubhotla SD, 2018, PROCEEDINGS OF 2018 7TH INTERNATIONAL CONFERENCE ON SOFTWARE AND COMPUTER APPLICATIONS (ICSCA 2018), P10, DOI 10.1145/3185089.3185096
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
NR 109
TC 19
Z9 20
U1 4
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2020
VL 126
AR 106335
DI 10.1016/j.infsof.2020.106335
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NT9PE
UT WOS:000573271800015
DA 2024-07-18
ER

PT J
AU Behutiye, W
   Karhapää, P
   López, L
   Burgués, X
   Martínez-Fernández, S
   Vollmer, AM
   Rodríguez, P
   Franch, X
   Oivo, M
AF Behutiye, Woubshet
   Karhapaa, Pertti
   Lopez, Lidia
   Burgues, Xavier
   Martinez-Fernandez, Silverio
   Vollmer, Anna Maria
   Rodriguez, Pilar
   Franch, Xavier
   Oivo, Markku
TI Management of quality requirements in agile and rapid software
   development: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Quality requirements; Non-functional requirements; Agile software
   development; Rapid software development; Systematic mapping study;
   Systematic literature reviews
ID ENGINEERING PRACTICES; NONFUNCTIONAL REQUIREMENTS; CHALLENGES; CONTEXT
AB Context: Quality requirements (QRs) describe the desired quality of software, and they play an important role in the success of software projects. In agile software development (ASD), QRs are often ill-defined and not well addressed due to the focus on quickly delivering functionality. Rapid software development (RSD) approaches (e.g., continuous delivery and continuous deployment), which shorten delivery times, are more prone to neglect QRs. Despite the significance of QRs in both ASD and RSD, there is limited synthesized knowledge on their management in those approaches.
   Objective: This study aims to synthesize state-of-the-art knowledge about QR management in ASD and RSD, focusing on three aspects: bibliometric, strategies, and challenges.
   Research method: Using a systematic mapping study with a snowballing search strategy, we identified and structured the literature on QR management in ASD and RSD.
   Results: We found 156 primary studies: 106 are empirical studies, 16 are experience reports, and 34 are theoretical studies. Security and performance were the most commonly reported QR types. We identified various QR management strategies: 74 practices, 43 methods, 13 models, 12 frameworks, 11 advices, 10 tools, and 7 guidelines. Additionally, we identified 18 categories and 4 non-recurring challenges of managing QRs. The limited ability of ASD to handle QRs, time constraints due to short iteration cycles, limitations regarding the testing of QRs and neglect of QRs were the top categories of challenges.
   Conclusion: Management of QRs is significant in ASD and is becoming important in RSD. This study identified research gaps, such as the need for more tools and guidelines, lightweight QR management strategies that fit short iteration cycles, investigations of the link between QRs challenges and technical debt, and extension of empirical validation of existing strategies to a wider context. It also synthesizes QR management strategies and challenges, which may be useful for practitioners.
C1 [Behutiye, Woubshet; Karhapaa, Pertti; Rodriguez, Pilar; Oivo, Markku] Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
   [Lopez, Lidia; Burgues, Xavier; Franch, Xavier] Univ Politecn Cataluna, Barcelona, Spain.
   [Martinez-Fernandez, Silverio; Vollmer, Anna Maria] Fraunhofer Inst Expt Software Engn IESE, Kaiserslautern, Germany.
C3 University of Oulu; Universitat Politecnica de Catalunya; Fraunhofer
   Gesellschaft
RP Behutiye, W (corresponding author), Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
EM woubshet.behutiye@oulu.fi
RI Martínez-Fernández, Silverio/P-5615-2014; López, Lidia/HGE-0751-2022;
   Franch, Xavier/A-8588-2008; Lopez, Lidia/Q-3925-2019; Rodriguez,
   Pilar/HSE-9989-2023; Burgues, Xavier/G-2152-2016
OI Martínez-Fernández, Silverio/0000-0001-9928-133X; Lopez,
   Lidia/0000-0002-6901-9223; Vollmer, Anna Maria/0000-0002-3563-8253;
   Behutiye, Woubshet/0000-0002-9015-9941; Burgues,
   Xavier/0000-0001-6974-9886
FU European Union [732253]
FX This work is the result of the Q-Rapids project, which has received
   funding from the European Union's Horizon 2020 research and innovation
   program under grant agreement no. 732253.
CR Alsaqaf W, 2017, LECT NOTES COMPUT SC, V10153, P219, DOI 10.1007/978-3-319-54045-0_17
   Ameller D., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P41, DOI 10.1109/RE.2012.6345838
   Ameller D, 2013, IEEE SOFTWARE, V30, P61, DOI 10.1109/MS.2012.176
   [Anonymous], 2018, WORLD QUALITY REPORT
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2011, 25010 ISOIEC
   [Anonymous], [No title captured]
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Bartsch S., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P479, DOI 10.1109/ARES.2011.82
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Bellomo S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P982, DOI 10.1109/ICSE.2013.6606648
   Boehm B.W., 1978, Characteristics of Software Quality
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2017, LECT NOTES BUS INF P, V283, P201, DOI 10.1007/978-3-319-57633-6_13
   Curcio K, 2018, J SYST SOFTWARE, V139, P32, DOI 10.1016/j.jss.2018.01.036
   Doerr J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P373, DOI 10.1109/RE.2005.47
   Farid WeamM., 2012, 2012 Proceedings of IEEE Southeastcon, P1, DOI DOI 10.1109/SECON.2012.6196989
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Glass RL, 1998, IEEE SOFTWARE, V15, P103, DOI 10.1109/52.676973
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Heck P, 2018, SOFTWARE QUAL J, V26, P127, DOI 10.1007/s11219-016-9336-4
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jabeen J., 2014, Asia-Pacific World Congress on Computer Science and Engineering, P1, DOI DOI 10.1109/APWCCSE.2014.7053838
   Karvonen T, 2017, INFORM SOFTWARE TECH, V86, P87, DOI 10.1016/j.infsof.2017.01.009
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Little T, 2005, IEEE SOFTWARE, V22, P28, DOI 10.1109/MS.2005.60
   Magues D.A., 2016, P INT SOFTW ENG KNOW, P537, DOI [10.18293/SEKE2016-057, DOI 10.18293/SEKE2016-057]
   Maiti RR, 2015, IEEE SOUTHEASTCON
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Martini A, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2015.31
   McCall J., 1977, Factors in software quality, V1
   Medeiros J, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P236, DOI [10.1109/QUATIC.2016.49, 10.1109/QUATIC.2016.058]
   Medeiros Juliana, 2015, CIBSE, P460
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Sachdeva V, 2017, PROCEEDINGS OF THE 7TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, DATA SCIENCE AND ENGINEERING (CONFLUENCE 2017), P216, DOI 10.1109/CONFLUENCE.2017.7943152
   Sanghoon Jeon, 2011, 2011 9th International Conference on Software Engineering Research, Management and Applications, P203, DOI 10.1109/SERA.2011.24
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Shaw M., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P181, DOI 10.1109/IWSSD.1996.501165
   Silva da Silva T., 2011, Proceedings of the 2011 Agile Conference, P77, DOI 10.1109/AGILE.2011.24
   Soares HF, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P385, DOI 10.1109/ITNG.2015.68
   Svensson RB, 2010, EUROMICRO CONF PROC, P261, DOI 10.1109/SEAA.2010.55
   Theisen C, 2017, PROC IEEE ACM INT C, P402, DOI 10.1109/ICSE-C.2017.51
   Villamizar H, 2018, EUROMICRO CONF PROC, P454, DOI 10.1109/SEAA.2018.00080
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zou J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P446, DOI 10.1109/MSR.2015.60
NR 68
TC 29
Z9 30
U1 5
U2 61
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106225
DI 10.1016/j.infsof.2019.106225
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200010
OA Green Accepted, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Theisen, C
   Williams, L
AF Theisen, Christopher
   Williams, Laurie
TI Better together: Comparing vulnerability prediction models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security; Vulnerabilities; Prediction model; Software engineering
ID STATIC CODE ATTRIBUTES; SOFTWARE; METRICS
AB Context: Vulnerability Prediction Models (VPMs) are an approach for prioritizing security inspection and testing to find and fix vulnerabilities. VPMs have been created based on a variety of metrics and approaches, yet widespread adoption of VPM usage in practice has not occurred. Knowing which VPMs have strong prediction and which VPMs have low data requirements and resources usage would be useful for practitioners to match VPMs to their project's needs. The low density of vulnerabilities compared to defects is also an obstacle for practical VPMs.
   Objective: The goal of the paper is to help security practitioners and researchers choose appropriate features for vulnerability prediction through a comparison of Vulnerability Prediction Models.
   Method: We performed replications of VPMs on Mozilla Firefox with 28,750 source code files featuring 271 vulnerabilities using software metrics, text mining, and crash data. We then combined features from each VPM and reran our classifiers.
   Results: We improved the F-score of the best VPM (.20 to 0.28) by combining features from three types of VPMs and using Naive Bayes as the classifier. The strongest features in the combined model were the number of times a file was involved in a crash, the number of outgoing calls from a file, and the string "nullptr".
   Conclusion: Our results indicate that further work is needed to develop new features for input into classifiers. In addition, new analytic approaches for VPMs are needed for VPMs to be useful in practical situations, due to the low density of vulnerabilities in software (less than 1% for our dataset).
C1 [Theisen, Christopher; Williams, Laurie] 890 Oval Dr, Raleigh, NC 27606 USA.
   [Theisen, Christopher; Williams, Laurie] North Carolina State Univ, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Theisen, C (corresponding author), 16255 NE 36th Way, Redmond, WA 98052 USA.
EM chtheise@microsoft.com; lawilli3@ncsu.edu
CR [Anonymous], 2017, PyTokenize Tool
   [Anonymous], 2017, Mozilla Crash Reports
   [Anonymous], 2011, PROC INT C INFR MILL, P1, DOI [DOI 10.1145/1988630.1988632, DOI 10.1109/IRMMW-THZ.2011.6105031]
   [Anonymous], 2014, PHP Security vulnerability dataset: Replication Dataset
   [Anonymous], 2014, Android Study: Predicting Vulnerable Software Components via Text Mining
   [Anonymous], 2017, Mozilla Foundation Security Advisories
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Czerwonka J, 2013, IEEE SOFTWARE, V30, P64, DOI 10.1109/MS.2013.68
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Gegick M, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P181, DOI 10.1109/ICST.2009.36
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Kratkiewicz K.J., 2005, TECHNICAL REPORT
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   Massacci F., 2010, P 6 INT WORKSH SEC M, P4
   Meneely A., 2010, P 2010 ACM IEEE INT, P1, DOI 10.1145/1852786.1852798
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Morrison P., 2015, P 2015 S BOOTCAMP SC
   Moser A, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P421, DOI 10.1109/ACSAC.2007.21
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nair V., 2017, ARXIV170108106
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   O'Sullivan Bryan., 2009, Mercurial: The Definitive Guide
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   SciTools, 2017, UND
   Sharma M., 2011, INT J COMPUT APPL, V30
   Sharma S, 2015, IIM KOZHIKODE SOC MA, V4, P1, DOI 10.1177/2277975215587811
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shin Y., 2008, WORKSHOP QUALITY PRO, P47
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Smith B., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P220, DOI 10.1109/ICST.2011.15
   Theisen C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P273, DOI 10.1109/ICSE-SEIP.2017.9
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Voas J, 2017, COMPUTER, V50, P88, DOI 10.1109/MC.2017.144
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 45
TC 11
Z9 12
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106204
DI 10.1016/j.infsof.2019.106204
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100003
DA 2024-07-18
ER

PT J
AU Bigonha, MAS
   Ferreira, K
   Souza, P
   Sousa, B
   Januário, M
   Lima, D
AF Bigonha, Mariza A. S.
   Ferreira, Kecia
   Souza, Priscila
   Sousa, Bruno
   Januario, Marcela
   Lima, Daniele
TI The usefulness of software metric thresholds for detection of bad smells
   and fault prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software metrics; Software quality; Thresholds; Detection strategies;
   Bad smell; Fault prediction
ID VALIDATION
AB Context Software metrics may be an effective tool to assess the quality of software, but to guide their use it is important to define their thresholds. Bad smells and fault also impact the quality of software. Extracting metrics from software systems is relatively low cost since there are tools widely used for this purpose, which makes feasible applying software metrics to identify bad smells and to predict faults.
   Objective: To inspect whether thresholds of object-oriented metrics may be used to aid bad smells detection and fault predictions.
   Method: To direct this research, we have defined three research questions (RQ), two related to identification of bad smells, and one for identifying fault in software systems. To answer these RQs, we have proposed detection strategies for the bad smells: Large Class, Long Method, Data Class, Feature Envy, and Refused Bequest, based on metrics and their thresholds. To assess the quality of the derived thresholds, we have made two studies. The first one was conducted to evaluate their efficacy on detecting these bad smells on 12 systems. A second study was conducted to investigate for each of the class level software metrics: DIT, LCOM, NOF, NOM, NORM, NSC, NSF, NSM, SIX, and WMC, if the ranges of values determined by thresholds are useful to identify fault in software systems.
   Results: Both studies confirm that metric thresholds may support the prediction of faults in software and are significantly and effective in the detection of bad smells.
   Conclusion: The results of this work suggest practical applications of metric thresholds to identify bad smells and predict faults and hence, support software quality assurance activities.Their use may help developers to focus their efforts on classes that tend to fail, thereby minimizing the occurrence of future problems.
C1 [Bigonha, Mariza A. S.; Souza, Priscila; Sousa, Bruno] Univ Fed Minas Gerais, Comp Sci Dept, Belo Horizonte, MG, Brazil.
   [Ferreira, Kecia; Januario, Marcela; Lima, Daniele] CEFET MG, Dept Comp, Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais
RP Bigonha, MAS (corresponding author), Univ Fed Minas Gerais, Comp Sci Dept, Belo Horizonte, MG, Brazil.
EM mariza@dcc.ufmg.br; kecia@decom.cefetmg.br; priscilinhapsouza@gmail.com;
   bruno.luan.sousa@dcc.ufmg.br; marcelajanuario92@hotmail.com;
   danieleddelima@gmail.com
RI Bigonha, Mariza/AAK-5829-2020; Bigonha, Mariza/ABE-3200-2020
OI Bigonha, Mariza/0000-0002-3471-0452; Sousa, Bruno/0000-0002-8217-3524
FU CAPES; CNPq; UFMG; CEFET-MG
FX Sponsors: CAPES, UFMG, CEFET-MG, CNPq.
CR Abaei G, 2015, KNOWL-BASED SYST, V74, P28, DOI 10.1016/j.knosys.2014.10.017
   Al Dallal J, 2018, INFORM SOFTWARE TECH, V95, P86, DOI 10.1016/j.infsof.2017.11.001
   Alves T. L., 2010, 2010 IEEE 26th International Conference on Software Maintenance (ICSM 2010), DOI 10.1109/ICSM.2010.5609747
   [Anonymous], 2016, P 12 INT C PRED MOD
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Benlarbi S, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.2000.885858
   Cardoso B., 2015, P ANN C BRAZ S INF S, V1, P347
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Couto C., 2013, BRAZ C SOFTW THEOR P, P1
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   da Rosa JA, 2017, ZOOKEYS, P1, DOI 10.3897/zookeys.675.12024
   Fernandes E., 2016, P 20 EASE, P18
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Ferreira M, 2015, INT CONF CLOUD COMP, P1, DOI 10.1109/CloudCom.2015.83
   Filo T.G.S., 2015, P 1 SOFTENG, P48
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P1, DOI 10.1109/SAM.2015.8
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Januario M. L. C., 2016, TECHNICAL REPORT
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Kaur S., 2013, INT J ENG RES TECHNO, V2
   Lanza M., 2010, OBJECT ORIENTED METR
   Li PW, 2012, INT J ENERGY ENVIR E, V3, DOI 10.1186/2251-6832-3-2
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Min Zhang, 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P458, DOI 10.1109/ICSTW.2011.69
   Morasca S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915997
   Morasca S, 2017, INFORM SOFTWARE TECH, V89, P37, DOI 10.1016/j.infsof.2017.03.005
   Murphy-Hill E, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P5
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nunes H., 2014, THESIS
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Padilla JJ., 2013, Proceedings of the Emerging MS Applications in Industry Academia/Modeling and Humanities Symposium, P1
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Shatnawi R, 2010, J SOFTW MAINT EVOL-R, V22, P1, DOI 10.1002/smr.404
   Singh S., 2014, CSIT, V2, P191, DOI DOI 10.1007/S40012-014-0057-1
   Sousa BL, 2017, INT C PROGRAM COMPRE, P360, DOI 10.1109/ICPC.2017.8
   Souza P. P., 2017, P 11 BRAZ S SOFTW CO, P1
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Terra R., 2013, SIGSOFT Softw. Eng. Not., V38, P1, DOI [10.1145/2507288.2507314, DOI 10.1145/2507288.2507314]
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Vale G., 2015, PROC INT SOFTWARE PR, P176
   Vidal S., 2015, 2015 34 INT C CHIL C, P1, DOI DOI 10.1109/SCCC.2015.7416572
   Wohlin C., 2012, Experimentation in Software Engineering
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Wu F, 2017, PROC IEEE ACM INT C, P195, DOI 10.1109/ICSE-C.2017.72
   Zhang M., 2008, P WORKSH DEF LARG SO, P43
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zhang M, 2009, IEEE ANNU SOFTW ENG, P161, DOI 10.1109/SEW.2008.26
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 61
TC 15
Z9 17
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 79
EP 92
DI 10.1016/j.infsof.2019.08.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700007
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, Magne
TI Evaluating probabilistic software development effort estimates:
   Maximizing informativeness subject to calibration
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Probabilistic effort estimates; Estimation error measurement; Effort
   prediction intervals; Estimated effort distributions
AB Context: Probabilistic effort estimates inform about the uncertainty and may give useful input to plans, budgets and investment analyses.
   Objective & method: This paper introduces, motivates and illustrates two principles on how to evaluate the accuracy and other performance criteria of probabilistic effort estimates in software development contexts.
   Results: The first principle emphasizes a consistency between the estimation error measure and the loss function of the chosen type of probabilistic single point effort estimates. The second principle points at the importance of not just measuring calibration, but also informativeness of estimated prediction intervals and distributions. The relevance of the evaluation principles is illustrated by a performance evaluation of estimates from twenty-eight software professionals using two different uncertainty assessment methods to estimate the effort of the same thirty software maintenance tasks.
C1 [Jorgensen, Magne] Norway & Oslo Metropolitan Univ, Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
RP Jorgensen, M (corresponding author), Norway & Oslo Metropolitan Univ, Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
EM magnej@simula.no
CR Gneiting T, 2007, J R STAT SOC B, V69, P243, DOI 10.1111/j.1467-9868.2007.00587.x
   Gneiting T, 2014, ANNU REV STAT APPL, V1, P125, DOI 10.1146/annurev-statistics-062713-085831
   Gneiting T, 2011, J AM STAT ASSOC, V106, P746, DOI 10.1198/jasa.2011.r10138
   JORGENSEN M, 2002, INT C PROJ MAN PROMA, P343
   Jorgensen Magne, 2014, P 18 INT C EV ASS SO, DOI [10.1145/2601248.2601262, DOI 10.1145/2601248.2601262]
   Morley SK, 2018, SPACE WEATHER, V16, P69, DOI 10.1002/2017SW001669
   Volden G.H., 2017, The Oxford Handbook of Megaproject Management, P406
NR 7
TC 6
Z9 6
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2019
VL 115
BP 93
EP 96
DI 10.1016/j.infsof.2019.08.006
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IX7GL
UT WOS:000485851700008
OA Green Published
DA 2024-07-18
ER

PT J
AU bin Ali, N
   Usman, M
AF bin Ali, Nauman
   Usman, Muhammad
TI A critical appraisal tool for systematic literature reviews in software
   engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic literature reviews; Quality assessment; Software engineering;
   Critical appraisal tools; AMSTAR
ID AMSTAR
AB Context: Methodological research on systematic literature reviews (SLRs) in Software Engineering (SE) has so far focused on developing and evaluating guidelines for conducting systematic reviews. However, the support for quality assessment of completed SLRs has not received the same level of attention.
   Objective: To raise awareness of the need for a critical appraisal tool (CAT) for assessing the quality of SLRs in SE. To initiate a community-based effort towards the development of such a tool.
   Method: We reviewed the literature on the quality assessment of SLRs to identify the frequently used CATs in SE and other fields. Results: We identified that the CATs currently used is SE were borrowed from medicine, but have not kept pace with substantial advancements in the field of medicine.
   Conclusion: In this paper, we have argued the need for a CAT for quality appraisal of SLRs in SE. We have also identified a tool that has the potential for application in SE. Furthermore, we have presented our approach for adapting this state-of-the-art CAT for assessing Silts in SE.
C1 [bin Ali, Nauman; Usman, Muhammad] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP bin Ali, N (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM nauman.ali@bth.se; muu@bth.se
RI Ali, Nauman bin/J-4293-2015
OI Ali, Nauman bin/0000-0001-7266-5632
FU Knowledge Foundation in Sweden [20180127]; ELLIIT, a Strategic Area
   within IT and Mobile Communications - Swedish Government
FX The authors would like to thank Prof. Claes Wohlin for providing
   feedback on the paper. This work has been supported by a research grant
   for the VITS project (reference number 20180127) by the Knowledge
   Foundation in Sweden and by ELLIIT, a Strategic Area within IT and
   Mobile Communications, funded by the Swedish Government.
CR Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Bin Ali N, 2018, INFORM SOFTWARE TECH, V99, P133, DOI 10.1016/j.infsof.2018.02.002
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Cartaxo B, 2018, INFORM SOFTWARE TECH, V97, P80, DOI 10.1016/j.infsof.2018.01.001
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Shea BJ, 2007, BMC MED RES METHODOL, V7, DOI 10.1186/1471-2288-7-10
   Shea BJ, 2017, BMJ-BRIT MED J, V358, DOI 10.1136/bmj.j4008
   Shea BJ, 2007, PLOS ONE, V2, DOI 10.1371/journal.pone.0001350
NR 10
TC 7
Z9 7
U1 1
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 48
EP 50
DI 10.1016/j.infsof.2019.04.006
PG 3
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Borg, M
   Chatzipetrou, P
   Wnuk, K
   Alégroth, E
   Gorschek, T
   Papatheocharous, E
   Shah, SMA
   Axelsson, J
AF Borg, Markus
   Chatzipetrou, Panagiota
   Wnuk, Krzysztof
   Alegroth, Emil
   Gorschek, Tony
   Papatheocharous, Efi
   Shah, Syed Muhammad Ali
   Axelsson, Jakob
TI Selecting component sourcing options: A survey of software engineering's
   broader make-or-buy decisions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Component-based software engineering; Sourcing; Software architecture;
   Decision making; Survey
ID IN-HOUSE; COTS; ARCHITECTURE; AGILITY; ORIGINS; OSS
AB Context Component-based software engineering (CBSE) is a common approach to develop and evolve contemporary software systems. When evolving a system based on components, make-or-buy decisions are frequent, i.e., whether to develop components internally or to acquire them from external sources. In CBSE, several different sourcing options are available: (1) developing software in-house, (2) outsourcing development, (3) buying commercial-off-the-shelf software, and (4) integrating open source software components.
   Objective: Unfortunately, there is little available research on how organizations select component sourcing options (CSO) in industry practice. In this work, we seek to contribute empirical evidence to CSO selection.
   Method: We conduct a cross-domain survey on CSO selection in industry, implemented as an online questionnaire.
   Results: Based on 188 responses, we find that most organizations consider multiple CSOs during software evolution, and that the CSO decisions in industry are dominated by expert judgment. When choosing between candidate components, functional suitability acts as an initial filter, then reliability is the most important quality.
   Conclusion We stress that future solution-oriented work on decision support has to account for the dominance of expert judgment in industry. Moreover, we identify considerable variation in CSO decision processes in industry. Finally, we encourage software development organizations to reflect on their decision processes when choosing whether to make or buy components, and we recommend using our survey for a first benchmarking.
C1 [Borg, Markus; Papatheocharous, Efi; Axelsson, Jakob] RISE Res Inst Sweden AB, Scheelevagen 17, SE-22370 Lund, Sweden.
   [Chatzipetrou, Panagiota; Wnuk, Krzysztof; Alegroth, Emil; Gorschek, Tony] Blekinge Inst Technol, Valhallavagen 1, SE-37141 Karlskrona, Sweden.
   [Chatzipetrou, Panagiota] Orebro Univ, Sch Business, SE-70182 Orebro, Sweden.
   [Shah, Syed Muhammad Ali] iZettle, Regeringsgatan 59, SE-11156 Stockholm, Sweden.
C3 RISE Research Institutes of Sweden; Blekinge Institute Technology;
   Orebro University
RP Borg, M (corresponding author), RISE Res Inst Sweden AB, Scheelevagen 17, SE-22370 Lund, Sweden.
EM markus.borg@ri.se
RI Borg, Markus/F-3609-2010; Axelsson, Jakob/AAE-3249-2020; Harrison,
   Dylan/AFP-8142-2022
OI Borg, Markus/0000-0001-7879-4371; Axelsson, Jakob/0000-0002-3986-1196;
   Chatzipetrou, Panagiota/0000-0002-0311-1502
FU ORION project from The Stiftelsen for Kunskapsoch Kompetensutveckling in
   Sweden [20140218]
FX The work is partially supported by a research grant for the ORION
   project (reference number 20140218) from The Stiftelsen for Kunskapsoch
   Kompetensutveckling in Sweden. The authors have no competing interests
   to declare.
CR Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Adams B, 2016, EMPIR SOFTW ENG, V21, P960, DOI 10.1007/s10664-015-9371-y
   Agresti A, 2002, CATEGORICAL DATA ANA
   Alexy O, 2013, RES POLICY, V42, P1325, DOI 10.1016/j.respol.2013.04.007
   [Anonymous], P 2 INT WORKSH COND
   [Anonymous], 2015, Journal of Software Engineering Research and Development, DOI [10.1186/s40411-015-0023-0, DOI 10.1186/S40411-015-0023-0]
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   AXELSSON J., 2017, P ANN IEEE INT SYSTE, P1
   Axelsson J, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P101, DOI 10.1109/WICSA.2009.5290796
   Ayala C., 2018, EMPIR SOFTW ENG, P1
   Ayala C, 2011, J SYST SOFTWARE, V84, P620, DOI 10.1016/j.jss.2010.10.019
   Badampudi D, 2018, J SYST SOFTWARE, V135, P88, DOI 10.1016/j.jss.2017.09.033
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Borg M., 2018, 201871 RISE
   Borg M, 2018, PROC INT CONF SOFTW, P37, DOI 10.1145/3183428.3183434
   Botwe D. A., 2015, INT J COMPUT SCI MOB, V4, P154
   Brownsword L, 2000, IEEE SOFTWARE, V17, P48, DOI 10.1109/52.854068
   Busari SA, 2017, PROC INT CONF SOFTW, P552, DOI 10.1109/ICSE.2017.57
   Chatzipetrou P, 2018, EUROMICRO CONF PROC, P198, DOI 10.1109/SEAA.2018.00039
   Cicchetti A., 2016, P 1 INT WORKSH DEC M
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cortellessa V, 2008, COMPUT OPER RES, V35, P3090, DOI 10.1016/j.cor.2007.01.011
   Daneshgar F, 2013, INFORM SOFTWARE TECH, V55, P1741, DOI 10.1016/j.infsof.2013.03.009
   de Mello RM, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962632
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fenton N, 2014, IEEE SOFTWARE, V31, P21, DOI 10.1109/MS.2014.32
   Field A, 2018, Discovering Statistics Using IBM SPSS Statistics, Vfifth
   Fogelstrom ND, 2010, J SOFTW MAINT EVOL-R, V22, P53, DOI [10.1002/spip.420, 10.1002/smr.453]
   Geiger R. S., 2017, ARXIV170602777CS
   Gerea M. M., 2007, TECHNICAL REPORT
   Goode S, 2005, INFORM MANAGE-AMSTER, V42, P669, DOI 10.1016/j.im.2004.01.011
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Hauge O, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P42, DOI 10.1109/FLOSS.2009.5071359
   Holzer A, 2009, L N INST COMP SCI SO, V12, P55
   International Organization for Standardization, 2011, SYST SOFTW ENG SYST
   Jadhav AS, 2009, INFORM SOFTWARE TECH, V51, P555, DOI 10.1016/j.infsof.2008.09.003
   Jalali S, 2014, J SYST SOFTWARE, V98, P172, DOI 10.1016/j.jss.2014.08.067
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jingyue Li, 2006, 28th International Conference on Software Engineering Proceedings, P897
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Katina PF, 2014, REQUIR ENG, V19, P45, DOI 10.1007/s00766-012-0157-0
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kokkoras F, 2012, EUROMICRO CONF PROC, P200, DOI 10.1109/SEAA.2012.55
   Kontio J, 1996, PROC INT CONF SOFTW, P201, DOI 10.1109/ICSE.1996.493416
   KRALJIC P, 1983, HARVARD BUS REV, V61, P109
   Kurokawa S, 1997, IEEE T ENG MANAGE, V44, P124, DOI 10.1109/17.584921
   Lavallee M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P677, DOI 10.1109/ICSE.2015.83
   Li J, 2006, EMPIR SOFTW ENG, V11, P433, DOI 10.1007/s10664-006-9005-5
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Linaker J., 2015, TECHNICAL REPORT
   Lyu MR, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P153, DOI 10.1109/FOSE.2007.24
   Magazinius A, 2012, J SYST SOFTWARE, V85, P1770, DOI 10.1016/j.jss.2012.03.026
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Mavridis Androklis, 2009, 2009 3rd IEEE International Conference on Digital Ecosystems and Technologies (DEST), P613, DOI 10.1109/DEST.2009.5276768
   Miller J, 2008, EMPIR SOFTW ENG, V13, P223, DOI 10.1007/s10664-008-9063-y
   Moe NB, 2014, EMPIR SOFTW ENG, V19, P1225, DOI 10.1007/s10664-013-9272-x
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Papatheocharous E., 2017, GRADE DECISION CANVA, P187
   Papatheocharous E, 2018, INFORM SOFTWARE TECH, V100, P1, DOI 10.1016/j.infsof.2018.02.007
   Petersen K, 2018, IEEE T SOFTWARE ENG, V44, P237, DOI 10.1109/TSE.2017.2677909
   Rea L.M., 2014, Designing and conducting survey research: A comprehensive guide
   Ruffin M, 2004, IEEE SOFTWARE, V21, P82, DOI 10.1109/MS.2004.1259227
   Sahaf Z., 2014, PROC INT C SOFTW SYS, P149, DOI [10.1145/2600821.2600832, DOI 10.1145/2600821.2600832]
   Sentilles S, 2018, PROC IEEE ACM INT C, P45, DOI 10.1145/3183440.3183482
   Sentilles S, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P165, DOI 10.1109/SEAA.2016.26
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Sulaman SM, 2014, EUROMICRO CONF PROC, P17, DOI 10.1109/SEAA.2014.25
   Tofan Dan, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P192, DOI 10.1007/978-3-642-39031-9_17
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   Turk D, 2005, J DATABASE MANAGE, V16, P62, DOI 10.4018/jdm.2005100104
   Ulkuniemi P, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.38
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   van Vliet H, 2016, J SYST SOFTWARE, V117, P638, DOI 10.1016/j.jss.2016.01.017
   Wallnau K., 2002, Building systems from commercial components
   Wnuk K, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P129, DOI 10.1109/ICSAW.2017.68
   Wnuk K, 2016, IEEE T SOFTWARE ENG, V42, P47, DOI 10.1109/TSE.2015.2445347
   Wohlin C, 2016, LECT NOTES BUS INF P, V240, P1, DOI 10.1007/978-3-319-40515-5_1
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
NR 83
TC 13
Z9 13
U1 2
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 18
EP 34
DI 10.1016/j.infsof.2019.03.015
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IA9TG
UT WOS:000469899100002
OA Green Published
DA 2024-07-18
ER

PT J
AU Vázquez, HC
   Bergel, A
   Vidal, S
   Pace, JAD
   Marcos, C
AF Vazquez, H. C.
   Bergel, A.
   Vidal, S.
   Diaz Pace, J. A.
   Marcos, C.
TI Slimming javascript applications: An approach for removing unused
   functions from javascript libraries
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Javascript; Unused functions; Library dependencies; Software
   maintenance; Performance overhead
AB Context A common practice in JavaScript development is to ship and deploy an application as a large file, called bundle, which is the result of combining the application code along with the code of all the libraries the application depends on. Despite the benefits of having a single bundle per application, this approach leads to applications being shipped with significant portions of code that are actually not used, which unnecessarily inflates the JavaScript bundles and could slow down website loading because of the extra unused code. Although some static analysis techniques exist for removing unused code, our investigations suggest that there is still room for improvements.
   Objective: The goal of this paper is to address the problem of reducing the size of bundle files in JavaScript applications.
   Method: In this context, we define the notion of Unused Foreign Function (UFF) to denote a JavaScript function contained in dependent libraries that is not needed at runtime. Furthermore, we propose an approach based on dynamic analysis that assists developers to identify and remove UFFs from JavaScript bundles.
   Results: We report on a case-study performed over 22 JavaScript applications, showing evidence that our approach can produce size reductions of 26% on average (with reductions going up to 66% in some applications).
   Conclusion: It is concluded that removing unused foreign functions from JavaScript bundles helps reduce their size, and thus, it can boost the results of existing static analysis techniques.
C1 [Vazquez, H. C.; Vidal, S.; Diaz Pace, J. A.; Marcos, C.] UNICEN, ISISTAN, Tandil, Argentina.
   [Bergel, A.] Univ Chile, Dept Comp Sci DCC, Santiago, Chile.
   [Vazquez, H. C.; Vidal, S.; Diaz Pace, J. A.] Consejo Nacl Invest Cient & Tecn, Buenos Aires, DF, Argentina.
   [Marcos, C.] CIC, Buenos Aires, DF, Argentina.
C3 Universidad de Chile; Consejo Nacional de Investigaciones Cientificas y
   Tecnicas (CONICET)
RP Vidal, S (corresponding author), UNICEN, ISISTAN, Tandil, Argentina.; Vidal, S (corresponding author), Consejo Nacl Invest Cient & Tecn, Buenos Aires, DF, Argentina.
EM hvazquez@exa.unicen.edu.ar; abergel@dcc.uchile.cl;
   svidal@exa.unicen.edu.ar; adiaz@exa.unicen.edu.ar;
   cmarcos@exa.unicen.edu.ar
OI Vidal, Santiago/0000-0003-2440-3034
CR Andreasen E., 2012, Proc. of International Workshop on Scripts to Programs. Beijing, P67
   Andreasen E, 2014, ACM SIGPLAN NOTICES, V49, P17, DOI [10.1145/2714064.2660214, 10.1145/2660193.2660214]
   [Anonymous], 2015, Ase, DOI [DOI 10.1145/2491411.2491417, 10.1145/2491411.2491417]
   Benschop S., 2014, THESIS
   Crockford D., 2008, JAVASCRIPT GOOD PART
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Feldthaus A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P752, DOI 10.1109/ICSE.2013.6606621
   Guha A., 2009, P 18 INT C WORLD WID, P561
   Haverbeke M., 2018, ELOQUENT JAVASCRIPT
   Jensen S.H., 2011, P 19 ACM SIGSOFT S 1, P59
   Jensen SH, 2010, LECT NOTES COMPUT SC, V6337, P320, DOI 10.1007/978-3-642-15769-1_20
   Jensen SH, 2009, LECT NOTES COMPUT SC, V5673, P238, DOI 10.1007/978-3-642-03237-0_17
   Meenan P, 2013, COMMUN ACM, V56, P49, DOI [10.1145/2436256.2436270, 10.1145/2436258.2436270]
   Richards G, 2010, ACM SIGPLAN NOTICES, V45, P1, DOI 10.1145/1809028.1806598
   Souders S, 2008, COMMUN ACM, V51, P36, DOI 10.1145/1409360.1409374
   Souders Steve., 2007, High Performance Web Sites
   Thiagarajan Narendran., 2012, P 21 INT C WORLD WID, P41, DOI DOI 10.1145/2187836.2187843
   Wohlin C., 2012, Experimentation in Software Engineering
NR 18
TC 12
Z9 16
U1 1
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 18
EP 29
DI 10.1016/j.infsof.2018.10.009
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200003
DA 2024-07-18
ER

PT J
AU Delgado-Pérez, P
   Medina-Bulo, I
AF Delgado-Perez, Pedro
   Medina-Bulo, Inmaculada
TI Search-based mutant selection for efficient test suite improvement:
   Evaluation and results
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based software engineering; Mutation testing; Evolutionary
   algorithm; Genetic algorithm
ID MUTATION OPERATORS
AB Context: Search-based techniques have been applied to almost all areas in software engineering, especially to software testing, seeking to solve hard optimization problems. However, the problem of selecting mutants to improve the test suite at a lower cost has not been explored to the same extent as other problems, such as mutant selection for test suite evaluation or test data generation.
   Objective: In this paper, we apply search-based mutant selection to enhance the quality of test suites efficiently. Namely, we use the technique known as Evolutionary Mutation Testing (EMT), which allows reducing the number of mutants while preserving the power to refine the test suite. Despite reported benefits of its application, the existing empirical results were derived from a limited number of case studies, a particular set of mutation operators and a vague measure, which currently makes it difficult to determine the real performance of this technique.
   Method: This paper addresses the shortcomings of previous studies, providing a new methodology to evaluate EMT on the basis of the actual improvement of the test suite achieved by using the evolutionary strategy. We make use of that methodology in new experiments with a carefully selected set of real-world C + + case studies.
   Results: EMT shows a good performance for most case studies and levels of demand of test suite improvement (around 45% less mutants than random selection in the best case). The results reveal that even a reduced subset of mutants selected with EMT can serve to increase confidence in the test suite, especially in programs with a large set of mutants.
   Conclusions: These results support the use of search-based techniques to solve the problem of mutant selection for a more efficient test suite refinement. Additionally, we identify some aspects that could foreseeably help enhance EMT.
C1 [Delgado-Perez, Pedro; Medina-Bulo, Inmaculada] Univ Cadiz, Escuela Super Ingn, Cadiz, Spain.
C3 Universidad de Cadiz
RP Delgado-Pérez, P (corresponding author), Univ Cadiz, Escuela Super Ingn, Cadiz, Spain.
EM pedro.delgado@uca.es
RI Delgado-Pérez, Pedro/N-4289-2018; Medina-Bulo, Inmaculada/L-5523-2014
OI Delgado-Pérez, Pedro/0000-0003-1568-9288; Medina-Bulo,
   Inmaculada/0000-0002-7543-2671
FU European Commission (FEDER); Spanish Government [TIN2015-65845-C3-3-R,
   TIN2015-71841-REDT]
FX This work was partially supported by the European Commission (FEDER) and
   the Spanish Government projects DArDOS (TIN2015-65845-C3-3-R) and the
   Excellence Network SEBASEnet (TIN2015-71841-REDT).
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   [Anonymous], 2004, ANT COLONY OPTIMIZAT
   [Anonymous], 1980, Order No. 8025191
   [Anonymous], 2014, SEARCH METHODOLOGIES, DOI DOI 10.1007/978-1-4614-6940-7_4
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Banzi AS, 2012, EXPERT SYST APPL, V39, P12131, DOI 10.1016/j.eswa.2012.04.041
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   Bashir M. B., 2013, P 9 INT C EM TECHN I, P1, DOI 10.1109/ICET.2013
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Delgado-Perez P., 2017, P S APPL COMP SAC 17, P1387, DOI [10.1145/3019612.3019828, DOI 10.1145/3019612.3019828]
   Delgado-Pérez P, 2017, IEEE C EVOL COMPUTAT, P596, DOI 10.1109/CEC.2017.7969365
   Delgado-Pérez P, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1630
   Delgado-Pérez P, 2017, INFORM SOFTWARE TECH, V81, P169, DOI 10.1016/j.infsof.2016.07.002
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   Eiben A., 2015, INTRO EVOLUTIONARY C, V2nd, DOI DOI 10.1007/978-3-662-44874-8
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   Harman M., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P397
   Harman M., TR0903 DEP COMP SCI
   Hussain S., 2008, THESIS
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Domínguez-Jiménez JJ, 2009, ECOWS'09: PROCEEDINGS OF THE 7TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P97, DOI 10.1109/ECOWS.2009.18
   Kim J., 2017, EVALUATING CAVM NEW, P143, DOI [10.1007/978-3-319-66299-2_12, DOI 10.1007/978-3-319-66299-2_12]
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Lima JAP, 2016, I BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING (SAST 2016), DOI 10.1145/2993288.2993292
   de Oliveira AAL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P829
   Ma YS, 2009, ETRI J, V31, P140, DOI 10.4218/etrij.09.0108.0356
   Omar E, 2014, IEEE ICST WORKSHOP, P165, DOI 10.1109/ICSTW.2014.19
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Usaola MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2010.79
   Lima JAP, 2017, II BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING (SAST 2017), DOI 10.1145/3128473.3128479
   Mateo PR, 2015, SOFTW TEST VERIF REL, V25, P464, DOI 10.1002/stvr.1534
   Schwarz B., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P382, DOI 10.1109/ICSTW.2011.56
   Shamshiri S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1367, DOI 10.1145/2739480.2754696
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yao XJ, 2015, IET SOFTW, V9, P103, DOI 10.1049/iet-sen.2014.0058
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
NR 45
TC 13
Z9 14
U1 0
U2 11
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 130
EP 143
DI 10.1016/j.infsof.2018.07.011
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900009
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Garousi, V
   Özkan, R
   Betin-Can, A
AF Garousi, Vahid
   Ozkan, Ramazan
   Betin-Can, Aysu
TI Multi-objective regression test selection in practice: An empirical
   study in the defense software industry
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regression testing; Multi-objective optimization; Genetic algorithms;
   Empirical study; Defence software industry; Action-research
ID TEST-CASE PRIORITIZATION
AB Context: Executing an entire regression test-suite after every code change is often costly in large software projects. To cope with this challenge, researchers have proposed various regression test-selection techniques.
   Objective: This paper was motivated by a real industrial need to improve regression-testing practices in the context of a safety-critical industrial software in the defence domain in Turkey. To address our objective, we set up and conducted an "action-research" collaborative project between industry and academia.
   Method: After a careful literature review, we selected a conceptual multi-objective regression-test selection framework (called MORTO) and adopted it to our industrial context by developing a custom-built genetic algorithm (GA) based on that conceptual framework. GA is able to provide full coverage of the affected (changed) requirements while considering multiple cost and benefit factors of regression testing. e.g., minimizing the number of test cases, and maximizing cumulative number of detected faults by each test suite.
   Results: The empirical results of applying the approach on the Software Under Test (SUT) demonstrate that this approach yields a more efficient test suite (in terms of costs and benefits) compared to the old (manual) test selection approach, used in the company, and another applicable approach chosen from the literature. With this new approach, regression selection process in the project under study is not ad-hoc anymore. Furthermore, we have been able to eliminate the subjectivity of regression testing and its dependency on expert opinions.
   Conclusion: Since the proposed approach has been beneficial in saving the costs of regression testing, it is currently in active use in the company. We believe that other practitioners can apply our approach in their regression-testing contexts too, when applicable. Furthermore, this paper contributes to the body of evidence in regression testing by offering a success story of successful implementation and application of multi-objective regression testing in practice.
C1 [Garousi, Vahid] Wageningen Univ, Informat Technol Grp, NL-6800 Wageningen, Netherlands.
   [Betin-Can, Aysu] Middle East Tech Univ, Informat Inst, Ankara, Turkey.
C3 Wageningen University & Research; Middle East Technical University
RP Garousi, V (corresponding author), Wageningen Univ, Informat Technol Grp, NL-6800 Wageningen, Netherlands.
EM vahid.garousi@wur.n1; betincan@metu.edu.tr
RI Betin Can, Aysu/HTN-8580-2023
OI Betin Can, Aysu/0000-0002-4828-0190; Garousi, Vahid/0000-0001-6590-7576
CR Adler M., 1996, Gazing Into the Oracle: The Delphi Method and Its Application to Social Policy and Public Health
   Akhin Marat, 2009, 2009 5th Central and Eastern European Software Engineering Conference in Russia (CEE-SECR 2009), P19, DOI 10.1109/CEE-SECR.2009.5501231
   [Anonymous], Introduction to genetic algorithms
   Aranha Eduardo, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P107
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   Bai XY, 2001, FIFTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P140, DOI 10.1109/EDOC.2001.950430
   Bates S., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P384, DOI 10.1145/158511.158694
   Boehm BW., 1981, Software Engineering Economics
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Chen Yanping., 2007, 3rd international workshop on Advances in model-based testing, P54, DOI 10.1145/1291535.1291541
   Claes Wohlin Per, 2000, EXPT SOFTWARE ENG IN
   COBB HG, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P523
   De Jong K., 1988, Machine Learning, V3, P121, DOI 10.1023/A:1022606120092
   De Lucia A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P145, DOI 10.1109/IWAST.2012.6228983
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Eiben A.E., 2015, NAT COMP SER, P223, DOI 10.1007/978-3-662-44874-8_15
   Eichfelder G, 2008, VECTOR OPTIM, P1, DOI 10.1007/978-3-540-79159-1
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Gandomani T.J., 2014, International Journal of Software Engineering and Its Applications, V8, P173
   Garousi Vahid, 2017, Software Quality Journal, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Garousi V., 2016, INT C EV ASS SOFTW E, P277
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gotshall S., 2000, P GEN EV COMP C, P1
   Gupta R., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P299, DOI 10.1109/ICSM.1992.242531
   Hagen C., 2015, CROSSTALK, P24
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P111, DOI 10.1109/ICSTW.2011.60
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Ishibuchi H, 2006, LECT NOTES COMPUT SC, V4193, P493
   Jolly S. A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P400, DOI 10.1109/ICST.2012.52
   Jones JA, 2001, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSM.2001.972715
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Karim MR, 2016, J SOFTW-EVOL PROC, V28, P1025, DOI 10.1002/smr.1777
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Miettinen K, 2002, OR SPECTRUM, V24, P193, DOI 10.1007/s00291-001-0092-9
   Mondal D., 2015, 8th International Conference on Software Testing, Verification and Validation, ICST15, P1
   Mosterman P, 2011, Model-based testing for embedded systems
   MUHLENBEIN H, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P416
   Patil V., 2015, Int. J. Appl. Eng. Technol, V5, P38
   Qing Gu, 2010, 2010 International Symposium on Parallel and Distributed Processing with Applications (ISPA 2010), P419, DOI 10.1109/ISPA.2010.62
   Qu B, 2007, P INT COMP SOFTW APP, P465
   Rai A., 2017, International Journal of Applied Engineering Research, V12, P3228
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Rothermel G., 1996, Efficient, effective regression testing using safe test selection techniques
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   SHUMSKAS A, 1989, PROCEEDINGS : THE THIRTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P526, DOI 10.1109/CMPSAC.1989.65141
   Singh Y, 2012, INFORM-J COMPUT INFO, V36, P379
   Torres Edwin, 2018, IEEE Potentials, V37, P9, DOI 10.1109/MPOT.2015.2404341
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 87
TC 25
Z9 26
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 40
EP 54
DI 10.1016/j.infsof.2018.06.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Abualkishik, AZ
   Lavazza, L
AF Abualkishik, Abedallah Zaid
   Lavazza, Luigi
TI IFPUG Function Points to COSMIC Function Points convertibility: A
   fine-grained statistical approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional size measurement; IFPUG Function Points; COSMIC Function
   Points; Measures conversion; Functional measures convertibility;
   Measurement accuracy
ID CONVERSION; ACCURACY
AB Background: Functional size measurement is widely used in software organizations because it supports the estimation of software development effort. Function Point Analysis was the first functional size measurement method and became quite popular. The COSMIC method is considered a second-generation method, due to its novel design, and has also gained wide acceptance. Since the proposal of the COSMIC method, the measure convertibility issue arose. Many studies have investigated this issue: several conversion techniques have been proposed and their accuracy has been evaluated through empirical studies.
   Objective: The goal of the paper is to explore statistic conversion criteria that leverage the similarity between the Base Functional Components of the considered functional measurement methods, especially concerning elementary processes and functional processes.
   Method: Statistical models of the relationship between the considered measures were built, using Least Median of Squares linear regression. The models use measures of Function Point Analysis Base Functional Components and COSMIC Base Functional Components as independent and dependent variables, respectively. Accuracy of conversion was assessed via leave-one-out cross validation.
   Results: The proposed method was tested on three datasets, and was compared with other conversion methods. The proposed method achieved results that are never less accurate - and sometimes much more accurate - than alternative methods'.
   Conclusions: The proposed method requires that when traditional Function Points are measured, information concerning Base Functional Components are recorded. If such information is available, the proposed approach is - according to the collected evidence - preferable to other conversion methods, with respect to both the effort required to obtain the results and their accuracy.
C1 [Abualkishik, Abedallah Zaid] Amer Univ Emirates, Coll Comp & Informat Technol, Dubai, U Arab Emirates.
   [Lavazza, Luigi] Univ Insubria, Dipartimento Sci Teor & Applicate, Varese, Italy.
C3 University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Dipartimento Sci Teor & Applicate, Varese, Italy.
EM azasoft1@gmail.com; luigi.lavazza@uninsubria.it
RI Abualkishik, Abedallah Zaid Zaid/AAX-2698-2021; Lavazza,
   Luigi/AAF-5323-2020
OI Lavazza, Luigi/0000-0002-5226-4337; Abualkishik, Abedallah
   Zaid/0000-0003-0920-6454
FU "Fondo di ricerca d'Ateneo" - Universita degli Studi dell'Insubria;
   American University in the Emirates
FX Parts of this work have been supported by the "Fondo di ricerca d'Ateneo
   2017" funded by the Universita degli Studi dell'Insubria, and by the
   American University in the Emirates under research project grant
   "Factors of conversion accuracy between IFPUG and COSMIC measurement
   methods."
CR Abran A., 2016, COSMIC FUNCTION POIN, P215
   Abualkishik AZ, 2017, INFORM SOFTWARE TECH, V86, P1, DOI 10.1016/j.infsof.2017.02.005
   Abualkishik AZ, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P143, DOI 10.1109/IWSM-MENSURA.2012.30
   Abualkishik AZ, 2012, INFORM SOFTWARE TECH, V54, P1250, DOI 10.1016/j.infsof.2012.06.006
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], P SOFTW MEAS EUR FOR
   [Anonymous], 2003, P 13 INT WORKSH SOFT
   [Anonymous], 2018, US COSMIC FUNCT SIZ
   [Anonymous], 2017, PROC 21 INT C EVAL A
   Cohen J., 1988, STAT POWER ANAL BEHA
   Common Software Measurement International Consortium (COSMIC), 2015, COSMIC FUNCT SIZE ME
   COSMIC, 2016, CONV 1 GEN FUNCT POI
   Cuadrado-Gallego JJ, 2007, LECT NOTES COMPUT SC, V4589, P273
   Cuadrado-Gallego JJ, 2008, J SYST SOFTWARE, V81, P661, DOI 10.1016/j.jss.2007.07.042
   Cuadrado-Gallego JJ, 2010, INFORM SOFTWARE TECH, V52, P347, DOI 10.1016/j.infsof.2009.12.001
   Cuadrado-Gallego JJ, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P427, DOI 10.1109/SEAA.2008.75
   Dasgupta A., PROCESS IMPROVE ACCU, P46
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   Desharnais J.-M., 2006, P 2006 INT C SOFTW P
   Ferrucci F, 2011, EUROMICRO CONF PROC, P461, DOI 10.1109/SEAA.2011.70
   Function Point Counting Practices, 2005, CAS STUD 4 VERS 2 0
   Gencel C, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P170, DOI 10.1109/IWSM-MENSURA.2012.33
   IFPUG, 2004, TECHNICAL REPORT
   International Function Point Users Group (IFPUG), 2010, FUNCT POINT COUNT PR
   International Standardization Organization (ISO), 2005, 247502005 ISO ISOIEC
   International Standardization Organization (ISO), 2003, 209262003 ISO ISOIEC
   International Standardization Organization (ISO), 2011, 197612011 ISO ISOIEC
   ISO/IEC, 2007, ISO/IEC 14143-1:2007 Information technology-Software measurement-Functional size measurement
   Khelifi A., 2004, P 14 INT WORKSH STAT, P3
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Lavazza Luigi, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P196, DOI 10.1109/IWSM.Mensura.2014.28
   Lavazza  L., 2009, P 5 INT C PRED MOD S, P9
   Lavazza L., 2014, INT J ADV SOFTW, V7
   Lavazza L., 2010, P 20 INT WORKSH SOFT
   Lavazza L, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P160, DOI 10.1109/IWSM-MENSURA.2012.32
   Lavazza L, 2011, INFORM SOFTWARE TECH, V53, P874, DOI 10.1016/j.infsof.2011.02.005
   MacDonell S.G., 2010, P 2010 ACM IEEE INT
   Rousseeuw P. J., 2005, Robust Regression and Outlier Detection
   ROUSSEEUW PJ, 1984, J AM STAT ASSOC, V79, P871, DOI 10.2307/2288718
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sigweni B, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916005
   Simple Function Point Association (SiFPA), 2014, SIMPL FUNCT POINT FU
   Symons C.R.:., 1991, Software Sizing and Estimating: Mk II FPA
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
NR 45
TC 6
Z9 8
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 179
EP 191
DI 10.1016/j.infsof.2018.01.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600014
DA 2024-07-18
ER

PT J
AU Mumtaz, H
   Alshayeb, M
   Mahmood, S
   Niazi, M
AF Mumtaz, Haris
   Alshayeb, Mohammad
   Mahmood, Sajjad
   Niazi, Mahmood
TI An empirical study to improve software security through the application
   of code refactoring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring; Secured software; Empirical study; Code bad smells
ID QUALITY
AB Context: Code bad smells indicate design flaws that can degrade the quality of software and can potentially lead to the introduction of faults. They can be eradicated by applying refactoring techniques. Code bad smells that impact the security perspective of software should be detected and removed from their code base. However, the existing literature is insufficient to support this claim and there are few studies that empirically investigate bad smells and refactoring opportunities from a security perspective.
   Objective: In this paper, we investigate how refactoring can improve the security of an application by removing code bad smell.
   Method: We analyzed three different code bad smells in five software systems. First, the identified code bad smells are filtered against security attributes. Next, the object-oriented design and security metrics are calculated for the five investigated systems. Later, refactoring is applied to remove security-related code bad smells. The correctness of detection and refactoring of investigated code smells are then validated. Finally, both traditional object-oriented and security metrics are again calculated after removing bad smells to assess its impact on the design and security attributes of systems.
   Results: We found 'feature envy' to be the most abundant security bad smell in investigated projects. The 'move method' and 'move field' are commonly applied refactoring techniques because of the abundance of feature envy.
   Conclusion: The results of security metrics indicate that refactoring helps improve the security of an application without compromising the overall quality of software systems.
C1 [Mumtaz, Haris; Alshayeb, Mohammad; Mahmood, Sajjad; Niazi, Mahmood] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
EM g201405820@kfupm.edu.sa; alshayeb@lcfupm.edu.sa; smahmood@kfupm.edu.sa;
   mkniazi@kfupm.edu.sa
RI Niazi, Mahmood/C-8873-2015; Mahmood, Sajjad/B-2295-2010; Alshayeb,
   Mohammad/B-5941-2015
FU King Fahd University of Petroleum and Minerals, Saudi Arabia
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at King Fahd University of Petroleum and
   Minerals, Saudi Arabia.
CR Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Alshammari Bandar, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P55, DOI 10.1109/ASWEC.2010.34
   Alshammari B, 2012, NATL WORKSHOP INFORM, P1
   ALSHAMMARI B, 2010, 2010 17 AS PAC SOFTW, P186, DOI DOI 10.1109/APSEC.2010.30
   Alshammari B, 2009, INT CONF QUAL SOFTW, P11, DOI 10.1109/QSIC.2009.11
   [Anonymous], P INT C ADV INF SYST
   [Anonymous], 2011, J SYST SOFTW
   [Anonymous], 2005, Secure Systems Development with UML
   Arcelli Fontana F., 2015, Scientific Workshop Proceedings of the XP2015 Conference, DOI [10.1145/2764979.2764986, DOI 10.1145/2764979.2764986]
   Arendt T., 2010, P BENEVOL WORKSH
   Artelsmair C., 2002, Database and Expert Systems Applications. 13th International Conference, DEXA 2002. Proceedings (Lecture Notes in Computer Science Vol.2453), P557
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   BEVAN N, 1995, SOFTWARE QUAL J, V4, P115, DOI 10.1007/BF00402715
   Bhalla Deepak., 2009, Automatic Detection of Bad Smells in Java Code
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cais P. P. Stepan, 2014, 3 INT C INF ENG INF, P67
   Campbell D.T., 2015, EXPT QUASIEXPERIMENT
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chowdhury I., 2008, Proceedings of the fourth international workshop on Software engineering for secure systems, P57, DOI DOI 10.1145/1370905.1370913
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Counsell S, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P181, DOI 10.1109/TAIC-PART.2006.33
   Cushman W., 1991, FACTORS PRODUCT DESI
   Enckevort T.v., 2009, Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P635, DOI DOI 10.1145/1639950.1639959
   Fernandez E. B., 2004, METHODOLOGY SECURE S, P130
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fontana F.A., 2015, Scientific Workshop Proceedings of the XP2015, P7
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Gorton I., 2006, ESSENTIAL SOFTWARE A
   Howard M., 2004, MICROSOFT MSDN MAGAZ
   Jalbani A. A., 2009, INTEGRATED QUALITY A, P63
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Lange CFJ, 2006, 13TH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P7
   Manadhata PK, 2011, IEEE T SOFTWARE ENG, V37, P371, DOI 10.1109/TSE.2010.60
   Marinescu R, 2005, PROC IEEE INT CONF S, P701
   Massoni T., 2003, TECHNICAL REPORT
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   NIST C., 2006, Glossary of Key Information Security Terms," ed
   Opdyke W.F., 1992, REFACTORING OBJECT O
   Paiva T., 2015, EXPT EVALUATION CODE
   Roberts D.B., 1999, Practical Analysis for Refactoring
   Ruhroth T, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P360, DOI 10.1109/SEAA.2009.39
   Saeki M., 2006, The First Workshop on Quality in Modeling, P31
   Saika T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 4, P1, DOI 10.1109/SANER.2016.117
   Shatnawi R, 2006, THIRD INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, PROCEEDINGS, P161, DOI 10.1109/ITNG.2006.31
   Siponen M., 2001, Advances in Information Security Management and Small Systems Security. IFIP TC11 WG11.1/WG11.2 Eighth Annual Working Conference on Information Security Management and Small Systems Security, P99, DOI 10.1007/0-306-47007-1_8
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Suryanarayana G., 2015, Refactoring for Software Design Smells, P9, DOI 10.1016/B978-0-12-801397-7.00002-3
   v Kempen M., 2005, P THE2005 ANN RES C, P252
   Van Gorp P., 2003, Formal UML Support for the semiautomatic Application of object-oriented Refactorings," in
   Veerappa Varsha, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P271, DOI 10.1109/ESEM.2013.37
   Vivas J. L., 2003, BUSINESS PROCESS DRI, P381
   Wake WC., 2004, Refactoring Workbook
   Whitman M. E., 2011, PRINCIPLES INFORM SE
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 72
TC 31
Z9 36
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2018
VL 96
BP 112
EP 125
DI 10.1016/j.infsof.2017.11.010
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW8GG
UT WOS:000425567200008
DA 2024-07-18
ER

PT J
AU Mammar, A
   Nguyen, TM
   Laleau, R
AF Mammar, Amel
   Nguyen, Thi Mai
   Laleau, Regine
TI A formal approach to derive an aspect oriented programming-based
   implementation of a secure access control filter
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID SPECIFICATION; UML
AB Context: Nowadays, Information Systems (IS) are at the heart of most companies and constitute then a critical element that needs an adequate attention regarding security issues of sensitive data it manages.
   Objective: This paper presents a formal approach for the development of a filter to secure access to sensitive resources of information systems.
   Method: The proposed approach consists of three complementary steps. Designers start by modeling the functionalities of the system and its security requirements using dedicated UML diagrams. These diagrams are then automatically translated into a formal B specification suitable not only for reasoning about data integrity checking but also for the derivation of a trustworthy implementation. Indeed, a formal refinement process is applied on the generated B specification to obtain a relational-like B implementation which is then translated into an AspectJ implementation, connected to a SQL Server (release 2014) relational database system. Such a generation is performed following the aspect oriented programming paradigm which permits a separation of concerns by making a clear distinction between functional and security aspects.
   Results: A systematic formal approach to derive a secure filter that regulates access to the sensitive data of an information system. The filter considers both static and dynamic access rules. A tool that supports the proposed approach is also provided.
   Conclusion: The approach has been applied on several case studies that demonstrate that the development of a tool permits to free the developers from tedious and error-prone tasks since they have just to push a button to generate the Aspect) code of an application. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Mammar, Amel; Nguyen, Thi Mai] Univ Paris Saclay, CNRS, Telecom SudParis, SAMOVAR, 9 Rue Charles Fourier, F-91011 Evry, France.
   [Laleau, Regine] Univ Paris Est, LACL, UPEC, IUT Senart Fontainebleau, Champs Sur Marne, France.
C3 Centre National de la Recherche Scientifique (CNRS); IMT - Institut
   Mines-Telecom; Institut Polytechnique de Paris; Telecom SudParis;
   Universite Paris Saclay; Universite Paris Cite; Institut Mines-Telecom
   Business School; Universite Gustave-Eiffel; Universite
   Paris-Est-Creteil-Val-de-Marne (UPEC)
RP Mammar, A (corresponding author), Univ Paris Saclay, CNRS, Telecom SudParis, SAMOVAR, 9 Rue Charles Fourier, F-91011 Evry, France.
EM amel.mammar@telecom-sudparis.eu; thimai.nguyen@telecom-sudparis.eu;
   laleau@u-pec.fr
RI Laleau, Regine/ABA-9759-2021
OI Laleau, Regine/0000-0002-2019-4936
CR Alam M., 2007, JSW, V2
   [Anonymous], 1977, Technical Report
   [Anonymous], 2005, B BOOK ASSIGNING PRO
   [Anonymous], 2011, UN MOD LANG SUP
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Bell D.-E., 1996, J COMPUT SECUR, V4
   Bert D., 2003, FME 2003 FORM METH I
   Borek M., 2015, INTEGRATING MODEL DR
   Clarke E.M., 1982, DES SYNTH SYNCHR SKE
   Clearsy, AT GEN LOG PERM DEV
   Deubler M., 2004, SOUND DEV SECURE SER
   Ferraiolo David F., 2009, ABS09032171 CORR
   Frappier M., 2008, ISSE, V4
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Haddad A., 2007, LECT NOTES COMPUTER, V4355
   Idani A., 2014, INGENIERIE SYSTEMES, V19
   Jiirjens J., 2005, LECT NOTES COMPUTER, V3713
   Jrjens J., 2010, Secure Systems Development with UML
   Kiczales G., 2002, LECT NOTES COMPUTER, V2591
   Klatt B., 2007, LANG J, V10
   Kuhlmann M., 2008, FORMAL ASPECTS COMPU, V20
   Laleau R., 2000, OVERVIEW METHOD ITS
   Lampson B. W., 1974, OPER SYST REV, V8
   Leuschel M., 2003, LECT NOTES COMPUTER, V2805
   LODDERSTEDT T, 2002, P 5 INT C UN MOD LAN
   Mammar A, 2006, INFORM SOFTWARE TECH, V48, P253, DOI 10.1016/j.infsof.2005.05.002
   MAMMAR A, 2016, 17 IEEE INT S HIGH A, P173
   Mammar A., 2006, AUTOM SOFTW ENG, V13
   Milhau J., 2011, ISSE, V7
   Montrieux L, 2010, TOOL SUPPORT CODE GE
   Nguyen T.-M., 2016, 10 IEEE INT C RES CH
   OMG, UML SPECIFICATION2 5
   Pnueli A., 1977, 18 ANN S FDN COMP SC
   Preda S., 2010, ENG SEC SOFTW SYST 2
   Qamar N., 2011, LECT NOTES COMPUTER, V6991
   Radhouani Amira, 2015, Transactions on Petri Nets and Other Models of Concurrency X (ToPNoC). LNCS 9410, P131, DOI 10.1007/978-3-662-48650-4_7
   Sandhu Ravi, 1996, IEEE COMPUT, V29, P2
   Stenzel K, 2015, SOFTW SYST MODEL, V14, P981, DOI 10.1007/s10270-013-0351-7
   Toahchoodee M., 2009, 14 ACM S ACC CONTR M
NR 39
TC 1
Z9 1
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2017
VL 92
BP 158
EP 178
DI 10.1016/j.infsof.2017.08.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FJ9UO
UT WOS:000413127200011
DA 2024-07-18
ER

PT J
AU Karvonen, T
   Behutiye, W
   Oivo, M
   Kuvaja, P
AF Karvonen, Teemu
   Behutiye, Woubshet
   Oivo, Markku
   Kuvaja, Pasi
TI Systematic literature review on the impacts of agile release engineering
   practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Release engineering; Agile; Continuous integration; Rapid release;
   Continuous delivery; Continuous deployment
ID SOFTWARE-DEVELOPMENT; CONTINUOUS INTEGRATION
AB Context: Agile release engineering (ARE) practices are designed to deliver software faster and cheaper to end users; hence, claims of such impacts should be validated by rigorous and relevant empirical studies.
   Objective: The study objective was to analyze both direct and indirect impacts of ARE practices as well as to determine how they have been empirically studied.
   Method: The study applied the systematic literature review research method. ARE practices were identified in empirical studies by searching articles for "rapid release," "continuous integration," "continuous delivery," and "continuous deployment." We systematically analyzed 619 articles and selected 71 primary studies for deeper investigation. The impacts of ARE practices were analyzed from three viewpoints: impacts associated with adoption of the practice, prevalence of the practice, and success of software development.
   Results: The results indicated that ARE practices can create shorter lead times and better communication Within and between development teams. However, challenges and drawbacks were also found in change management, software quality assurance, and stakeholder acceptance. The analysis revealed that 33 out of 71 primary studies were casual experience reports that had neither an explicit research method nor a data collection approach specified, and 23 out of 38 empirical studies applied qualitative methods, such as interviews, among practitioners. Additionally, 12 studies applied quantitative methods, such as mining of software repositories. Only three empirical studies combined these research approaches.
   Conclusion: ARE practices can contribute to improved efficiency of the development process. Moreover, release stakeholders can develop a better understanding of the software project's status. Future empirical studies should consider the comprehensive reporting of the context and how the practice is implemented instead of merely referring to usage of the practice. In addition, different stakeholder points of view, such as customer perceptions regarding ARE practices, still clearly require further research. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Karvonen, Teemu; Behutiye, Woubshet; Oivo, Markku; Kuvaja, Pasi] Univ Oulu, Pentti Kaiteran Katu 1, Oulu 90014, Finland.
C3 University of Oulu
RP Karvonen, T (corresponding author), Univ Oulu, Pentti Kaiteran Katu 1, Oulu 90014, Finland.
EM teemu.3.karvonen@oulu.fi; woubshet.behutiye@oulu.fi;
   markku.oivo@oulu.fi; pasi.kuvaja@oulu.fi
RI Behutiye, Woubshet/AAM-6438-2020
OI Behutiye, Woubshet/0000-0002-9015-9941; Oivo,
   Markku/0000-0002-1698-2323; Karvonen, Teemu/0000-0001-6957-959X
FU TEKES as part of the Need for Speed Project of DIMECC (Digital,
   Internet, Materials & Engineering Co-Creation)
FX This work was supported by TEKES as part of the Need for Speed Project
   (http://www.n4s.fi/) of DIMECC (Digital, Internet, Materials &
   Engineering Co-Creation).
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Adams B, 2015, IEEE SOFTWARE, V32, P41
   Adams B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1545
   Agarwal P., 2011, P 4 IND SOFTW ENG C, P51
   [Anonymous], REQUIREMENTS PERVASI
   [Anonymous], 2014, LNBIP, DOI DOI 10.1007/978-3-319-06862-6_27
   [Anonymous], SENSE OF URGENCY
   [Anonymous], DEVOPS DEFINITION PE
   [Anonymous], 2004, XP Ser
   [Anonymous], LNCS
   [Anonymous], CONTINUOUS INTEGRATI
   [Anonymous], SOFTWARE DEV EXPT SY
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 2015, J SYST SOFTW
   [Anonymous], P ANN HAW INT C SYST
   [Anonymous], P SPIE INT SOC OPTIC
   [Anonymous], TRANSITIONING CONTIN
   [Anonymous], 28 SPAC SIM C EXTR E
   [Anonymous], DIMENSIONS OF DEVOPS
   [Anonymous], CONTINUOUS SOFTWARE
   [Anonymous], CONTIN SOFTW ENG
   [Anonymous], AGILE PROCESSES SOFT
   [Anonymous], 2015, 2015 IEEE 8 INT C SO
   [Anonymous], J SYST SOFTW
   [Anonymous], IEEE SOFTW
   [Anonymous], 2010, Product Release planning: methods, Tools and Applications
   [Anonymous], RES PREVIEW SUPPORTI
   [Anonymous], 20 AM C INF SYST AMC
   [Anonymous], ENHANCING TESTING TE
   [Anonymous], BUILDING PRODUCTS IN
   [Anonymous], 2014, 8 ACMIEEE INT S EMPI
   Asnawi A. L., 2012, Proceedings of the 2012 AGILE India Conference, P30, DOI 10.1109/AgileIndia.2012.14
   Baker CP, 2005, Twenty-Third Annual Pacific Northwest Software Quality Conference, Proceedings, P445
   Basarke C., 2007, Journal of Aerospace Computing, Information, and Communication, V4, P1158, DOI DOI 10.2514/1.33453
   Bass J. M., 2012, Proceedings of the 2012 AGILE India Conference, P1, DOI 10.1109/AgileIndia.2012.15
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Bellomo S, 2014, I C DEPEND SYS NETWO, P702, DOI 10.1109/DSN.2014.104
   Bellomo S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P982, DOI 10.1109/ICSE.2013.6606648
   Betz RM, 2014, COMPUT SCI ENG, V16, P10, DOI 10.1109/MCSE.2014.9
   Betz RM, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P68, DOI 10.1109/SECSE.2013.6615101
   Botsali MS, 2012, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON INFORMATION MANAGEMENT AND EVALUATION, P347
   Brooks G, 2008, AGILE 2008, PROCEEDINGS, P294, DOI 10.1109/Agile.2008.41
   Cannizzo F, 2008, AGILE 2008, PROCEEDINGS, P501, DOI 10.1109/Agile.2008.31
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Clark S, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1256, DOI 10.1145/2660267.2660320
   Cohan S, 2008, AGILE 2008, PROCEEDINGS, P284, DOI 10.1109/Agile.2008.70
   Cukier D., 2013, Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, Applications: Software for Humanity, P143, DOI DOI 10.1145/2508075.2508432
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   Debbiche A, 2014, LECT NOTES COMPUT SC, V8892, P17, DOI 10.1007/978-3-319-13835-0_2
   Deshpande A, 2008, INT FED INFO PROC, V275, P273
   Downs J., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P82, DOI 10.1109/ICSEA.2010.20
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Ferreira C., 2008, P 2008 ANN RES C S A, V338, P48
   Goodman D, 2008, AGILE 2008, PROCEEDINGS, P112, DOI 10.1109/Agile.2008.87
   Hemmati H., 2015, 2015 IEEE 8 INT C SO, P1
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Ivanovs J, 2013, FRONT ARTIF INTEL AP, V249, P303, DOI 10.3233/978-1-61499-161-8-303
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jixiang Lu, 2014, 2014 International Conference on Power System Technology (POWERCON 2014), P2441, DOI 10.1109/POWERCON.2014.6993503
   Karvonen T, 2015, LECT NOTES BUS INF P, V210, P117, DOI 10.1007/978-3-319-19593-3_10
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Khomh F, 2015, EMPIR SOFTW ENG, V20, P336, DOI 10.1007/s10664-014-9308-x
   Kim E, 2012, P INT COMP SOFTW APP, P476, DOI 10.1109/COMPSAC.2012.83
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Lacoste FJ, 2009, AGILE 2009 CONFERENCE, P387, DOI 10.1109/AGILE.2009.35
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Olsson H.H., 2014, CONTINUOUS SOFTWARE, P15
   Olsson H.H., 2013, IASTED, P798, DOI DOI 10.2316/P.2013.796-008
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Päivärinta T, 2015, SCI COMPUT PROGRAM, V101, P124, DOI 10.1016/j.scico.2014.11.012
   Poppendieck M, 2012, IEEE SOFTWARE, V29, P26, DOI 10.1109/MS.2012.107
   Procaccino JD, 2006, COMMUN ACM, V49, P79, DOI 10.1145/1145287.1145291
   Rahman MT, 2015, IEEE SOFTWARE, V32, P80
   Sfetsos P, 2006, EMPIR SOFTW ENG, V11, P269, DOI 10.1007/s10664-006-6404-6
   Souza R, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.30
   Souza R, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P31, DOI 10.1109/SBES.2014.10
   Sovik H, 2010, LECT NOTES BUS INF, V48, P353
   Ståhl D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P54, DOI 10.1145/2591062.2591186
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Stahl Daniel, 2013, P 2013 12 IASTED INT, P736
   Stolberg S, 2009, AGILE 2009 CONFERENCE, P369, DOI 10.1109/AGILE.2009.16
   Tingling P, 2007, LECT NOTES COMPUT SC, V4550, P242
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Vasilescu B, 2014, PROC IEEE INT CONF S, P401, DOI 10.1109/ICSME.2014.62
   Womack J., 2003, Lean Thinking: Banish Waste and Create Wealth in Your Corporation
   Yap M, 2005, AGILE 2005, Proceedings, P218, DOI 10.1109/ADC.2005.26
   Yüksel HM, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P741
   Zaytsev YV, 2013, FRONT NEUROINFORM, V6, DOI 10.3389/fninf.2012.00031
NR 93
TC 21
Z9 26
U1 1
U2 53
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2017
VL 86
BP 87
EP 100
DI 10.1016/j.infsof.2017.01.009
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9DB
UT WOS:000399855200006
DA 2024-07-18
ER

PT J
AU Wu, F
   Nanavati, J
   Harman, M
   Jia, Y
   Krinke, J
AF Wu, Fan
   Nanavati, Jay
   Harman, Mark
   Jia, Yue
   Krinke, Jens
TI Memory mutation testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Memory mutation
AB Context
   Three decades of mutation testing development have given software testers a rich set of mutation operators, yet relatively few operators can target memory faults (as we demonstrate in this paper).
   Objective
   To address this shortcoming, we introduce Memory Mutation Testing, proposing 9 Memory Mutation Operators each of which targets common forms of memory fault. We compare Memory Mutation Operators with traditional Mutation Operators, while handling equivalent and duplicate mutants.
   Method
   We extend our previous workshop paper, which introduced Memory Mutation Testing, with a more extensive and precise analysis of 18 open source programs, including 2 large real-world programs, all of which come with well-designed unit test suites. Specifically, our empirical study makes use of recent results on Trivial Compiler Equivalence (TCE) to identify both equivalent and duplicate mutants. Though the literature on mutation testing has previously deployed various techniques to cater for equivalent mutants, no previous study has catered for duplicate mutants.
   Results
   Catering for such extraneous mutants improves the precision with which claims about mutation scores can be interpreted. We also report the results of a new empirical study that compares Memory Mutation Testing with traditional Mutation Testing, providing evidence to support the claim that traditional mutation testing inadequately captures memory faults; 2% of the memory mutants are TCE-duplicates of traditional mutants and average test suite effectiveness drops by 44% when the target shifts from traditional mutants to memory mutants.
   Conclusions
   Introducing Memory Mutation Operators will cost only a small portion of the overall testing effort, yet generate higher quality mutants compared with traditional operators. Moreover, TCE technique does not only help with reducing testing effort, but also improves the precision of assessment on test quality, therefore should be considered in other Mutation Testing studies. (C) 2016 Published by Elsevier B.V.
C1 [Wu, Fan; Nanavati, Jay; Harman, Mark; Jia, Yue; Krinke, Jens] UCL, CREST, London WC1E 6BT, England.
C3 University of London; University College London
RP Wu, F (corresponding author), UCL, CREST, London WC1E 6BT, England.
EM fan.wu@ucl.ac.uk; jaysnanavati@hotmail.co.uk; mark.harman@ucl.ac.uk;
   yue.jia@ucl.ac.uk; krinke@ucl.ac.uk
RI Krinke, Jens/E-9011-2011
OI Krinke, Jens/0000-0003-1009-2861
FU Chinese Scholarship Council; UK EPSRC [EP/J017515, EP/I033688];
   Microsoft Azure Grant; EPSRC [EP/J017515/1] Funding Source: UKRI
FX Fan Wu is sponsored by Chinese Scholarship Council. Mark Harman is
   supported by the UK EPSRC project EP/J017515 (DAASE) and the UK EPSRC
   projects EP/I033688 (GISMO). Yue Jia is supported by the Microsoft Azure
   Grant 2014.
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2015, 8 IEEE INT C SOFTWAR
   [Anonymous], 2011, CWE SANS TOP 25 MOST
   [Anonymous], 2006, 2 WORKSHOP MUTATION
   [Anonymous], RN
   [Anonymous], THESIS
   [Anonymous], SOFTWARE ENG APPL
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 37 INT C SOFTW ENG I
   [Anonymous], IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2014.2372785
   Berger ED, 2006, ACM SIGPLAN NOTICES, V41, P158, DOI 10.1145/1133981.1134000
   Budd T.A., 1980, POPL '80: Proceedings of the 7th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, (New York, NY, USA), P220
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Dan H., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P654, DOI 10.1109/ICST.2012.155
   Derezinska A, 2012, LECT NOTES COMPUT SC, V7054, P229
   Gould NIM, 2015, COMPUT OPTIM APPL, V60, P545, DOI 10.1007/s10589-014-9687-3
   Griffith A., 2002, GCC COMPLETE REFEREN
   Hastings Reed., 1992, WINTER USENIX C, P125
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kam BWY, 2010, LECT NOTES COMPUT SC, V6303, P104, DOI 10.1007/978-3-642-15585-7_10
   Kosmatov N, 2013, LECT NOTES COMPUT SC, V8174, P167, DOI 10.1007/978-3-642-40787-1_10
   Kusano M, 2013, IEEE INT CONF AUTOM, P722, DOI 10.1109/ASE.2013.6693142
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Riener Heinz, 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P234, DOI 10.1007/978-3-642-31759-0_17
   Rinard M., 2004, Proceedings. 20th Annual Computer Security Applications Conference, P82
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Sezer EC, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P562
   Shahriar Hossain, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P979, DOI 10.1109/COMPSAC.2008.123
   van der Veen Victor, 2012, Research in Attacks, Intrusions, and Defenses. Proceedings of the 15th International Symposium, RAID 2012, P86, DOI 10.1007/978-3-642-33338-5_5
   XU J., 2005, P 12 ACM C COMPUTER, P223, DOI DOI 10.1145/1102120.1102151
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang S., PROC CASCON 2006 ART
NR 41
TC 19
Z9 21
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 97
EP 111
DI 10.1016/j.infsof.2016.03.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200008
DA 2024-07-18
ER

PT J
AU Fanjiang, YY
   Syu, Y
   Kuo, JY
AF Fanjiang, Yong-Yi
   Syu, Yang
   Kuo, Jong-Yih
TI Search based approach to forecasting QoS attributes of web services
   using genetic programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web service; Qos attribute forecasting; Genetic programming;
   Search-based software engineering
ID ALGORITHM; SELECTION; TIME
AB Context: Currently, many service operations performed in service-oriented software engineering (SOSE) such as service composition and discovery depend heavily on Quality of Service (QoS). Due to factors such as varying loads, the real value of some dynamic QoS attributes (e.g., response time and availability) changes over time. However, most of the existing QoS-based studies and approaches do not consider such changes; instead, they are assumed to rely on the unrealistic and static QoS information provided by service providers, which may seriously impair their outcomes.
   Objective: To predict dynamic QoS values, the objective is to devise an approach that can generate a predictor to perform QoS forecasting based on past QoS observations.
   Method: We use genetic programming (GP), which is a type of evolutionary computing used in search based software engineering (SBSE), to forecast the QoS attributes of web services. In our proposed approach, GP is used to search and evolve expression-based, one-step-ahead QoS predictors. To evaluate the performance (accuracy) of our GP-based approach, we also implement most current time series forecasting methods; a comparison between our approach and these other methods is discussed in the context of real-world QoS data.
   Results: Compared with common time series forecasting methods, our approach is found to be the most suitable and stable solution for the defined QoS forecasting problem. In addition to the numerical results of the experiments, we also analyze and provide detailed descriptions of the advantages and benefits of using GP to perform QoS forecasting. Additionally, possible validity threats using the GP approach and its validity for SBSE are discussed and evaluated.
   Conclusions: This paper thoroughly and completely demonstrates that under a realistic situation (with real-world QoS data), the proposed GP-based QoS forecasting approach provides effective, efficient, and accurate forecasting and can be considered as an instance of SBSE. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Fanjiang, Yong-Yi] Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, New Taipei 24205, Taiwan.
   [Syu, Yang; Kuo, Jong-Yih] Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
C3 Fu Jen Catholic University; National Taipei University of Technology
RP Fanjiang, YY (corresponding author), Fu Jen Catholic Univ, Dept Comp Sci & Informat Engn, New Taipei 24205, Taiwan.
EM yyfanj@csie.fju.edu.tw; a29066049@gmail.com; jykuo@ntut.edu.tw
FU Ministry of Science and Technology (Taiwan) [MOST103-2221-E-030-010-MY2]
FX This research is partially sponsored by the Ministry of Science and
   Technology (Taiwan) under the Grant MOST103-2221-E-030-010-MY2.
CR Amin A., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P74, DOI 10.1109/ICWS.2012.37
   Amin A, 2012, IEEE INT CONF AUTOM, P130, DOI 10.1145/2351676.2351695
   [Anonymous], 2014, IEEE T SERV COMPUT
   [Anonymous], P 10 ANN C GEN EV CO
   [Anonymous], 2007, OASIS WEB SERVICES B
   [Anonymous], 2010, INT J ADV INTERNET T
   [Anonymous], IEEE T SERV COMPUT
   [Anonymous], IEEE T SERV COMPUT
   [Anonymous], 6 IEEE EUR C WEB SER
   Barros Mrciode Oliveira., 2011, RELATE DIA, V5
   Bartalos P, 2011, COMPUT INFORM, V30, P793
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Cavallo B, 2010, P 2 INT WORKSH PRINC, P64, DOI DOI 10.1145/1808885.1808899
   Dustdar S., 2005, International Journal of Web and Grid Services, V1, P1, DOI 10.1504/IJWGS.2005.007545
   FanJiang YY, 2014, INFORM SOFTWARE TECH, V56, P352, DOI 10.1016/j.infsof.2013.12.001
   Godse Manish, 2010, 2010 IEEE International Conference on Web Services (ICWS), P534, DOI 10.1109/ICWS.2010.58
   Han Xiaotao, 2011, P IEEE POW EN SOC GE, P1, DOI DOI 10.1109/PES.2011.6039741
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hyndman R., FORECASTING FUNCTION
   Hyndman RJ., 2014, FORECASTING PRINCIPL
   Iba H., 1999, Evolutionary Computation, 1999, V1, P251
   Jiang W, 2014, IEEE T SERV COMPUT, V7, P681, DOI 10.1109/TSC.2013.41
   Kritikos K, 2009, IEEE T SERV COMPUT, V2, P320, DOI 10.1109/TSC.2009.26
   Li M, 2009, 2009 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 1, P395
   Liang QH, 2009, IEEE T SERV COMPUT, V2, P108, DOI 10.1109/TSC.2009.13
   Lin CF, 2011, INFORM SOFTWARE TECH, V53, P1370, DOI 10.1016/j.infsof.2011.06.010
   Meffert Klaus., JGAP JAVA GENETIC AL
   Michlmayr A, 2010, IEEE T SERV COMPUT, V3, P193, DOI 10.1109/TSC.2010.20
   Mitchell T. M., 1997, MACHINE LEARNING
   Moraru A, 2009, INT C INTELL COMP CO, P343, DOI 10.1109/ICCP.2009.5284738
   Obrenovic Zeljko, 2008, IEEE Transactions on Services Computing, V1, P229, DOI 10.1109/TSC.2008.16
   Rambold M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P192, DOI 10.1109/SCC.2009.59
   Rao JH, 2005, LECT NOTES COMPUT SC, V3387, P43
   Santini M, 2001, LECT NOTES COMPUT SC, V2038, P361
   Senivongse T, 2011, LECT NOTES ENG COMP, P388
   Sheng QZ, 2014, INFORM SCIENCES, V280, P218, DOI 10.1016/j.ins.2014.04.054
   Shi Yulu, 2011, 2011 3rd International Conference on Multimedia Information Networking and Security, P283, DOI 10.1109/MINES.2011.118
   Syu Y, 2015, IEEE INT CONF MO, P217, DOI [10.1109/MobServ.2015.39, 10.1109/MS.2015.39]
   Syu Y, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P170, DOI 10.1109/SOSE.2013.55
   Wagner F., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P89, DOI 10.1109/ICWS.2011.32
   Wagner N, 2007, IEEE T EVOLUT COMPUT, V11, P433, DOI 10.1109/TEVC.2006.882430
   Wang L, 2012, PROCEEDINGS OF 2012 IEEE 14TH INTERNATIONAL CONFERENCE ON COMMUNICATION TECHNOLOGY, P567, DOI 10.1109/ICCT.2012.6511421
   Xia YN, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P192, DOI 10.1109/SOSE.2013.8
   Yang Syu, 2012, 2012 IEEE International Conference on Services Computing (SCC), P290, DOI 10.1109/SCC.2012.91
   Zadeh MH, 2010, INT CONF COMP SCI, P659, DOI 10.1109/ICCSIT.2010.5563998
   Zhang YL, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P210, DOI 10.1109/ISSRE.2011.17
   Zheng Z., 2012, IEEE T SERV COMPUT, P1
   Zheng Z, 2010, PROCEEDINGS OF THE 2010 INTERNATIONAL CONFERENCE ON APPLICATION OF MATHEMATICS AND PHYSICS, VOL 2, P89
   Zheng ZB, 2013, IEEE T SERV COMPUT, V6, P289, DOI 10.1109/TSC.2011.59
   Zheng ZB, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430548
   Zheng ZB, 2011, IEEE T SERV COMPUT, V4, P140, DOI 10.1109/TSC.2010.52
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
   Zhovtobryukh D, 2007, SIMUL-T SOC MOD SIM, V83, P33, DOI 10.1177/0037549707079226
NR 54
TC 19
Z9 20
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 158
EP 174
DI 10.1016/j.infsof.2016.08.009
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800010
DA 2024-07-18
ER

PT J
AU Zahedi, M
   Babar, MA
AF Zahedi, Mansooreh
   Babar, Muhammad Ali
TI Why does site visit matter in global software development: A
   knowledge-based perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development (gsd); Knowledge sharing; Knowledge
   management; Face-to-Face interaction; Empirical; Case study
ID DISTANCE; TEAMS; CHALLENGES; PROJECTS
AB Context: Face-to-Face (F2F) interaction is a strong means to foster social relationships and effective knowledge sharing within a team. However, communication in Global Software Development (GSD) teams is usually restricted to computer-mediated conversation that is perceived to be less effective and interpersonal. Temporary collocation of dispersed members of a software development team is a well-known practice in GSD. Despite broad realization of the benefits of visits, there is lack of empirical evidence that explores how temporary F2F interactions are organized in practice and how they can impact knowledge sharing between sites.
   Objective: This study aimed at empirically investigating activities that take place during temporary collocation of dispersed members and analyzing the outcomes of the visit for supporting and improving knowledge sharing.
   Method: We report a longitudinal case study of a GSD team distributed between Denmark and Pakistan. We have explored a particular visit organized for a group of offshore team members visiting onshore site for two weeks. Our findings are based on a systematic and rigorous analysis of the calendar entries of the visitors during the studied visit, several observations of a selected set of the team members' activities during the visit and 13 semi-structured interviews.
   Results: Looking through the lens of knowledge-based theory of the firm, we have found that social and professional activities organized during the visit, facilitated knowledge sharing between team members from both sites. The findings are expected to contribute to building a common knowledge and understanding about the role and usefulness of the site visits for supporting and improving knowledge sharing in GSD teams by establishing and sustaining social and professional ties. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Zahedi, Mansooreh; Babar, Muhammad Ali] IT Univ Copenhagen, Copenhagen, Denmark.
   [Babar, Muhammad Ali] Univ Adelaide, Adelaide, SA 5005, Australia.
C3 IT University Copenhagen; University of Adelaide
RP Zahedi, M (corresponding author), IT Univ Copenhagen, Copenhagen, Denmark.
EM mzah@itu.dk; ali.babar@adelaide.edu.au
OI Zahedi, Mansooreh/0000-0001-6276-9956
FU project "NexGSD" [10-092313]
FX We are grateful to the participants of this study. This research has
   been partially funded by the project "NexGSD" through grant number
   #10-092313.
CR AGERFALK PJ, 2005, P INT WORKSH DISTR S
   Al-Ani B., 2011, P 2011 6 IEEE INT C
   Ali M. Babar, 2013, UNDERSTANDING STRUCT
   Allen T. J., 1977, Managing the flow of technology: technology transfer and the dissemination of technical information within RD organizations
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2012, Applications of Case Study Research
   Avram G., 2007, P INT C GLOB SOFTW E
   Betz S, 2014, EXPERT SYST, V31, P282, DOI 10.1111/exsy.12005
   Bhat JM, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.137
   Bjorn P, 2014, ACM T COMPUT-HUM INT, V21, DOI 10.1145/2670534
   Boden A, 2012, J SOFTW-EVOL PROC, V24, P139, DOI 10.1002/smr.473
   Boden A, 2010, IEEE SOFTWARE, V27, P58, DOI 10.1109/MS.2009.113
   Braun V., 2006, QUALITATIVE RES PSYC, V3
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Casey V., 2006, P 2006 INT WORKSH GL
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Choo CW, 2010, J KNOWL MANAG, V14, P592, DOI 10.1108/13673271011059545
   Chua AL, 2008, OMEGA-INT J MANAGE S, V36, P267, DOI 10.1016/j.omega.2006.06.008
   Clerc V., 2011, P 2011 6 IEEE INT C
   Cohen Susan., 2003, Virtual Teams That Work: Creating Conditions for Virtual Team Efficiencies, P21
   CONWAY ME, 1968, DATAMATION, V14, P28
   Corbin J.M., 1990, QUALITATIVE SOCIOL, V13
   Cramton CD, 2001, ORGAN SCI, V12, P346, DOI 10.1287/orsc.12.3.346.10098
   Cummings JN, 2004, MANAGE SCI, V50, P352, DOI 10.1287/mnsc.1030.0134
   Damian D.E., 2002, REQ ENG 2002 P IEEE
   Damian D, 2007, IEEE SOFTWARE, V24, P21, DOI 10.1109/MS.2007.55
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   Davis A, 2007, AM J BUS, V22, P57, DOI 10.1108/19355181200700010
   Dibbern J, 2008, MIS QUART, V32, P333
   Dorairaj S., 2012, P 2012 AG C 2012 AG
   Glaser B. G., 1978, [No title captured]
   Grant RM, 1996, STRATEGIC MANAGE J, V17, P109, DOI 10.1002/smj.4250171110
   Gregory R., 2009, P 42 ANN HAW INT C S
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Gupta A, 2009, J STRATEGIC INF SYST, V18, P147, DOI 10.1016/j.jsis.2009.07.001
   Herbsleb J.D., 2001, SOFTW ENG 2001 ICSE
   Herbsleb J.D., 2005, INT C SOFTW ENG ICSE
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hinds PJ, 2014, ORGAN SCI, V25, P794, DOI 10.1287/orsc.2013.0869
   Huong N.T., 2014, ELECT J INF SYST DEV, V64
   Jensen M., 2007, P INT C GLOB SOFTW E
   Kotlarsky J., 2005, EUR J INF SYST, V14
   Kotlarsky J, 2007, J INF TECHNOL-UK, V22, P161, DOI 10.1057/palgrave.jit.2000084
   LINGS B, 2007, INT C GLOB SOFTW ENG
   Manteli C., 2011, INT C GLOB SOFTW ENG
   Newell S, 2007, KNOWL PROCESS MANAG, V14, P158, DOI 10.1002/kpm.284
   Nicholson Brian., 2004, Information and Organization, V14, P329
   Nidhra S, 2013, INT J INFORM MANAGE, V33, P333, DOI 10.1016/j.ijinfomgt.2012.11.004
   Noll J., 2011, ACM INROADS, V1, P66, DOI [10.1145/1835428.1835445, DOI 10.1145/1835428.1835445]
   Noll J., 2010, ACM INROADS, V1
   Nordio M., 2011, INT C GLOB SOFTW ENG
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Oshri I., 2007, J STRAT INF SYST, V16
   Oshri I, 2008, COMMUN ACM, V51, P76, DOI 10.1145/1330311.1330327
   Parviainen P., 2011, EXPERT SYST
   Robinson M., 2004, Offshore Outsourcing: Business Models, ROI and Best Practices
   Rottman JW, 2008, INFORM SYST FRONT, V10, P259, DOI 10.1007/s10796-007-9061-4
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos V., 2014, EMPIR SOFTW ENG, P1
   Sarker S, 2005, IEEE T PROF COMMUN, V48, P201, DOI 10.1109/TPC.2005.849650
   Sarker S, 2011, DECISION SCI, V42, P339, DOI 10.1111/j.1540-5915.2011.00314.x
   Smith DW, 2012, ESSAYS ON DELEUZE, P1
   Sole D, 2002, BRIT J MANAGE, V13, pS17, DOI 10.1111/1467-8551.13.s2.3
   Treude C., 2011, P 19 ACM SIGSOFT S 1
   Verner J.M., 2009, INT C RES CHALL INF
   Von Stetten A., 2014, SIGMIS CPR 2014
   Wende E, 2010, LECT NOTES BUS INF, V55, P43
   Wendling Marcelo, 2013, Journal of Systems and Information Technology, V15, P239, DOI 10.1108/JSIT-09-2012-0054
   Wolf Timo, 2008, Software Process: Improvement and Practice, V13, P493, DOI 10.1002/spip.401
   Zahedi M., 2013, INT WORKSH COOP HUM
   Zahedi M., 2014, ACM INT C P SERIES
   Zimmermann A, 2014, INFORM SYST J, V24, P167, DOI 10.1111/isj.12027
NR 74
TC 11
Z9 13
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 36
EP 56
DI 10.1016/j.infsof.2016.08.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA EA2GM
UT WOS:000386410800003
DA 2024-07-18
ER

PT J
AU Bissi, W
   Neto, AGSS
   Emer, MCFP
AF Bissi, Wilson
   Serra Seca Neto, Adolfo Gustavo
   Figueiredo Pereira Emer, Maria Claudia
TI The effects of test driven development on internal quality, external
   quality and productivity: A systematic review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Test-driven development; Productivity; Internal quality; External
   quality; Systematic review
ID TEST AUTOMATION
AB Context: Test Driven Development (TDD) is an agile practice that has gained popularity when it was defined as a fundamental part in eXtreme Programming (XP).
   Objective: This study analyzed the conclusions of previously published articles on the effects of TDD on internal and external software quality and productivity, comparing TDD with Test Last Development (TLD).
   Method: In this study, a systematic literature review has been conducted considering articles published between 1999 and 2014.
   Results: In about 57% of the analyzed studies, the results were validated through experiments and in 32% of them, validation was performed through a case study. The results of this analysis show that 76% of the studies have identified a significant increase in internal software quality while 88% of the studies identified a meaningful increase in external software quality. There was an increase in productivity in the academic environment, while in the industrial scenario there was a decrease in productivity. Overall, about 44% of the studies indicated lower productivity when using TDD compared to TLD.
   Conclusion: According to our findings, TDD yields more benefits than TLD for internal and external software quality, but it results in lower developer productivity than TLD. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Bissi, Wilson] Global Village Telecom, Dept Informat Technol, 2197 Dario Lopes dos Santos Ave, BR-80210010 Curitiba, Parana, Brazil.
   [Serra Seca Neto, Adolfo Gustavo; Figueiredo Pereira Emer, Maria Claudia] Univ Tecnol Fed Parana, Acad Dept Informat, 3165 Sete de Setembro Ave, BR-80230901 Curitiba, Parana, Brazil.
C3 Universidade Tecnologica Federal do Parana
RP Bissi, W (corresponding author), Global Village Telecom, Dept Informat Technol, 2197 Dario Lopes dos Santos Ave, BR-80210010 Curitiba, Parana, Brazil.
EM wbissi@gmail.com; adolfo@utfpr.edu.br; mcemer@utfpr.edu.br
RI Emer, Maria Claudia/ABC-1365-2020; Serra-Seca-Neto, Adolfo
   G/AAH-5634-2019
OI Emer, Maria Claudia/0000-0002-0963-1891; Serra-Seca-Neto, Adolfo
   G/0000-0002-0260-5922
CR Aniche M. F., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P1, DOI 10.1109/SBES.2012.14
   Aniche Mauricio Finavaro, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P469, DOI 10.1109/ICSTW.2010.16
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2004, TECHNICAL REPORT
   [Anonymous], 2005, SYSTEMATIC REV SOCIA
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Beck Kent L., 2003, Test Driven Development By Example
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Damm LO, 2005, ELECTRON NOTES THEOR, V116, P3, DOI 10.1016/j.entcs.2004.02.090
   Damm LO, 2006, J SYST SOFTWARE, V79, P1001, DOI 10.1016/j.jss.2005.10.015
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Edwards S. H., 2004, P26, DOI 10.1145/971300.971312.
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Gupta Atul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P285
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Janzen DS, 2007, CONF SOFTW ENG EDUC, P89, DOI 10.1109/CSEET.2007.20
   Janzen DS, 2006, CONF SOFTW ENG EDUC, P141, DOI 10.1109/CSEET.2006.25
   Janzen DS, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P532, DOI 10.1145/1352322.1352315
   Jeffries R, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.75
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koltai B., 2011, ACM T COMPUT LOGIC T, P1
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4764, P200
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Massol V., 2010, COMPONENT BASED SOFT
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Melo C.d. O., 2013, Journal of the Brazilian Computer Society, V19, P523
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Pancur M, 2003, IEEE REGION 8 EUROCON 2003, VOL B, PROCEEDINGS, P83
   Pancur M, 2011, INFORM SOFTWARE TECH, V53, P557, DOI 10.1016/j.infsof.2011.02.002
   PETERSEN K, 2013, P JOINT C 23 INT WOR, P81, DOI DOI 10.1109/IWSM-MENSURA.2013.22
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Sanchez JC, 2007, AGILE 2007, PROCEEDINGS, P5, DOI 10.1109/AGILE.2007.43
   Sfetsos P, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P44, DOI 10.1109/QUATIC.2010.17
   Siniaalto Maria, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P275
   Slyngstad Odd Petter N., 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P214, DOI 10.1109/ICSEA.2008.8
   Tahir A, 2013, J SYST SOFTWARE, V86, P2877, DOI 10.1016/j.jss.2013.06.064
   Turnu I, 2006, J SYST ARCHITECT, V52, P610, DOI 10.1016/j.sysarc.2006.06.005
   VersionOne Inc., 2014, TECHNICAL REPORT
   Vu JH, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P229, DOI 10.1109/ITNG.2009.11
   Yenduri S., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P126
NR 48
TC 39
Z9 40
U1 6
U2 37
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 45
EP 54
DI 10.1016/j.infsof.2016.02.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DJ7BX
UT WOS:000374368000003
DA 2024-07-18
ER

PT J
AU Tosi, D
   Morasca, S
AF Tosi, Davide
   Morasca, Sandro
TI Supporting the semi-automatic semantic annotation of web services: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Ontologies; Semantic web services; Functional and non-functional
   aspects; Systematic literature review
ID GENERATION
AB Context: Semantically annotating web services is gaining more attention as an important aspect to support the automatic matchmaking and composition of web services. Therefore, the support of well-known and agreed ontologies and tools for the semantical annotation of web services is becoming a key concern to help the diffusion of semantic web services.
   Objective: The objective of this systematic literature review is to summarize the current state-of-the-art for supporting the semantical annotation of web services by providing answers to a set of research questions.
   Method: The review follows a predefined procedure that involves automatically searching well-known digital libraries. As a result, a total of 35 primary studies were identified as relevant. A manual search led to the identification of 9 additional primary studies that were not reported during the automatic search of the digital libraries. Required information was extracted from these 44 studies against the selected research questions and finally reported.
   Results: Our systematic literature review identified some approaches available for semantically annotating functional and non-functional aspects of web services. However, many of the approaches are either not validated or the validation done lacks credibility.
   Conclusion: We believe that a substantial amount of work remains to be done to improve the current state of research in the area of supporting semantic web services. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Tosi, Davide; Morasca, Sandro] Univ Insubria, Dept Theoret & Appl Sci, I-21100 Varese, Italy.
C3 University of Insubria
RP Tosi, D (corresponding author), Univ Insubria, Dept Theoret & Appl Sci, Via Mazzini 5, I-21100 Varese, Italy.
EM davide.tosi@uninsubria.it; sandro.morasca@uninsubria.it
RI TOSI, DAVIDE/AAI-1310-2020
OI TOSI, DAVIDE/0000-0003-3815-2512; Morasca, Sandro/0000-0003-4598-7024
FU FP7 Collaborative Project S-CASE - European Commission [610717]; project
   "Metodi, tecniche e strumenti per l'analisi, l'implementazione e la
   valutazione di sistemi software," - Universita degli Studi dell'Insubria
FX Parts of this work have been supported by the FP7 Collaborative Project
   S-CASE (Grant Agreement No 610717), funded by the European Commission
   and by project "Metodi, tecniche e strumenti per l'analisi,
   l'implementazione e la valutazione di sistemi software," funded by the
   Universita degli Studi dell'Insubria.
CR Agarwal S., 2004, J WEB SEMANT, V33, P1
   ALDERSON P, 2003, COCHRANE REV HDB 4 2
   [Anonymous], WEB SERV SEM WSDL S
   [Anonymous], 2006, P INT C WORLD WIDE W
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Belhajjame K, 2008, ACM T WEB, V2, DOI 10.1145/1346237.1346239
   Belqasmi F, 2011, IEEE COMMUN MAG, V49, P66, DOI 10.1109/MCOM.2011.6094008
   Bouhissi H.E., 2009, CIIA
   Cho E., 2009, 42 HAW INT C SYST SC, P1
   Denaro G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P253, DOI 10.1145/1595696.1595734
   Dill S., 2003, P 12 INT C WORLD WID
   Dillon TS, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P13, DOI 10.1109/ASWEC.2008.77
   Ding L., 2007, INTEGRATED SERIES IN, V14, ppp
   Ding YH, 2006, LECT NOTES COMPUT SC, V4185, P400
   Duggan D., 2012, ENTERPRISE SOFTWARE
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Farooq A., 2007, INT S HIGH CAPACITY, P1
   Ghoula N, 2007, PROCEEDINGS OF THE IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, P435, DOI 10.1109/WI.2007.45
   Gomadam K., 2008, P 2008 IEEE WIC ACM
   Govindaraju M, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P365, DOI 10.1109/GRID.2004.60
   Gu Q, 2009, SERV ORIENTED COMPUT, V3, P171, DOI 10.1007/s11761-009-0046-7
   He A., 2004, INT SEM WEB C ISWC
   Islam N., 2010, 2010 International Conference on Information and Emerging Technologies, P1, DOI [DOI 10.1109/ICIET.2010.5625736, 10.1109/ICIET.2010, DOI 10.1109/ICIET.2010]
   Jean-Mary YR, 2009, J WEB SEMANT, V7, P235, DOI 10.1016/j.websem.2009.04.001
   Joon Shim, 2008, 2008 4th International Conference on Next Generation Web Services Practices, P97, DOI 10.1109/NWeSP.2008.38
   Kiryakov A., 2004, Services and Agents on the World Wide Web, V2, P49, DOI [DOI 10.1016/J.WEBSEM.2004.07.005, 10.1016/j.websem.2004.07.005]
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Klusch M., 2006, Proceedings of the fifth international joint conference on Autonomous agents and multiagent systems, P915
   Klusch M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P335, DOI 10.1109/ICWS.2009.76
   Klusch M, 2009, J WEB SEMANT, V7, P121, DOI 10.1016/j.websem.2008.10.001
   Kopecky J., 2008, P 10 INT C EL COMM I
   Kritikos K., 2007, 1 INT JOINT WORKSHOP, P123
   Lathem J, 2007, ICSC 2007: INTERNATIONAL CONFERENCE ON SEMANTIC COMPUTING, PROCEEDINGS, P469, DOI 10.1109/ICSC.2007.94
   Li D, 2008, ICICSE: 2008 INTERNATIONAL CONFERENCE ON INTERNET COMPUTING IN SCIENCE AND ENGINEERING, PROCEEDINGS, P187
   Lin HK, 2007, COMPUT IND, V58, P428, DOI 10.1016/j.compind.2006.09.015
   MAYNARD D, 2005, UK E SCI PROGR ALL H
   Moormann Zaremski A., 1997, ACM Transactions on Software Engineering and Methodology, V6, P333, DOI 10.1145/261640.261641
   Narock T, 2014, DECIS SUPPORT SYST, V64, P90, DOI 10.1016/j.dss.2014.04.007
   Park GC, 2006, THIRD INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, PROCEEDINGS, P382
   Patii AbhijitA., 2004, WWW 04, P553
   Quan TT, 2006, IEEE T IND INFORM, V2, P155, DOI 10.1109/TII.2006.873363
   Reeve Lawrence., 2005, SAC 05, P1634, DOI DOI 10.1145/1066677.1067049
   Rusli H., 2011, COMMUN IBIMA
   Sheth A.P., 2003, IEEE Data Eng. Bull, V26, P40
   Sycara Katia., 2003, WEB SEMANTICS SCI SE, V1, P27
   Tahir A, 2013, J SYST SOFTWARE, V86, P2877, DOI 10.1016/j.jss.2013.06.064
   Talantikite HN, 2009, COMPUT STAND INTER, V31, P1108, DOI 10.1016/j.csi.2008.09.041
   Vitvar T., 2008, P 5 EUR SEM WEB C
   W3C, 2004, WEB SERV GLOSS
   W3C, 2010, WSMO LIT LIGHTW SEM
   W3C, 2010, SA REST SEM ANN WEB
   W3C, 2004, RDFA SYNT PROC RUL E
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   World Wide Web Consortium (W3C), 2004, OWL S SEMANTIC MARKU
   Yang F., 2009, International Conference on Computational Intelligence and Software Engineering, P1
   Zhang Z, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P280, DOI 10.1109/SOSE.2013.34
   Zhao YJ, 2009, IEEE T SERV COMPUT, V2, P303, DOI 10.1109/TSC.2009.20
   Zuniga Juan Carlos, 2010, 2010 21st International Conference on Database and Expert Systems Applications, P201, DOI 10.1109/DEXA.2010.54
   [No title captured]
NR 59
TC 36
Z9 40
U1 0
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 16
EP 32
DI 10.1016/j.infsof.2015.01.007
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CF7PI
UT WOS:000352748400002
DA 2024-07-18
ER

PT J
AU Cortes-Cornax, M
   Matei, A
   Dupuy-Chessa, S
   Rieu, D
   Mandran, N
   Letier, E
AF Cortes-Cornax, M.
   Matei, A.
   Dupuy-Chessa, S.
   Rieu, D.
   Mandran, N.
   Letier, E.
TI Using intentional fragments to bridge the gap between organizational and
   intentional levels
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process modeling; Business process management; Goal-oriented
   requirements modeling; Choreography; KAOS; BPMN 2.0
ID BUSINESS PROCESS; PROCESS MODELS; SUPPORT; BPMN
AB Context: Business process models provide a natural way to describe real-world processes to be supported by software-intensive systems. These models can be used to analyze processes in the system-as-is and describe potential improvements for the system-to-be. But, how well does a given business process model satisfy its business goals? How can different perspectives be integrated in order to describe an inter-organizational process?
   Objective: The aim of the present paper is to link the local and the global perspectives of the inter-organizational business process defined in BPMN 2.0 (Business Process Model and Notation) to KAOS goal models (Keep All Objectives Satisfied). We maintain a separation of concerns between the intentional level captured by the goal model and the organizational level captured by the process model. The paper presents the concept of intentional fragment (a set of flow elements of the process with a common purpose) and assess its usefulness.
   Method: We conducted empirical experiments where the proposed concepts - here the intentional fragments - are validated by users. Our method relies on an iterative improvement process led by users feedback.
   Results: We find that the concept of intentional fragment is useful for (1) analyzing the business process model (2) reasoning about the relations between the goal model and the business process model and (3) identifying new goals. In a previous work we focused on BPMN 2.0 collaboration models (local view). This paper extends the previous work by integrating the global view given by choreography models in the approach.
   Conclusion: We conclude that the notion of intentional fragment is a useful mean to relate business process models and goal models while dealing with their different nature (activity oriented vs goal oriented). Intentional fragments can also be used to analyze the process model and to infer new goals in an iterative manner. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Cortes-Cornax, M.; Dupuy-Chessa, S.; Rieu, D.; Mandran, N.] Univ Grenoble, LIG, F-38041 Grenoble 9, France.
   [Matei, A.; Letier, E.] UCL, London WC1E 6BT, England.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); University of London; University College
   London
RP Cortes-Cornax, M (corresponding author), Univ Grenoble, LIG, 110 Av Chim,BP 53, F-38041 Grenoble 9, France.
EM Mario.Cortes-Cornax@imag.fr
RI Matei, Alexandru/Q-6707-2017
OI Matei, Alexandru/0000-0001-9643-1873; CORTES-CORNAX,
   Mario/0000-0003-2635-319X
CR Anaya V, 2010, COMPUT IND, V61, P99, DOI 10.1016/j.compind.2009.10.013
   [Anonymous], 1998, Applied Abstract Algebra
   Bruseberg A, 2002, APPL ERGON, V33, P27, DOI 10.1016/S0003-6870(01)00053-9
   Cappelli C, 2009, EA'09: EARLY ASPECT WORKSHOP, P7
   Cardoso E., INT J BUSINESS PROCE, V5
   Cheng R, 2011, LECT NOTES BUS INF P, V87, P13
   Cortes-Cornax M., 2012, 20 INT C COOP INF SY
   Cortes-Cornax M, 2011, LECT NOTES BUS INF P, V95, P103
   Davidow W.H., 1992, VIRTUAL CORPORATION
   de la Vara JL, 2013, LECT NOTES BUS INF P, V147, P168
   Decker G, 2011, INFORM SYST, V36, P292, DOI 10.1016/j.is.2010.06.005
   Eberle H., 2010, Proceedings of the 2010 Asia-Pacific Services Computing Conference (APSCC 2010), P157, DOI 10.1109/APSCC.2010.72
   Hepp M., 2007, WIRTSCHAFTSINF, P423
   Hindus D., 2001, CHI 2001 Conference Proceedings. Conference on Human Factors in Computing Systems, P325, DOI 10.1145/365024.383749
   Indulska M, 2009, LECT NOTES COMPUT SC, V5565, P501, DOI 10.1007/978-3-642-02144-2_39
   KAVAKLI E, 2004, P 2004 ACM S APPL CO, P1339
   Koliadis G, 2006, LECT NOTES COMPUT SC, V4303, P25
   Lapouchnian A, 2007, LECT NOTES COMPUT SC, V4714, P246
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Letier E., 2002, Software Engineering Notes, V27, P119, DOI 10.1145/605466.605485
   Letier E, 2008, AUTOMAT SOFTW ENG, V15, P175, DOI 10.1007/s10515-008-0027-7
   Lin Y, 2007, LECT NOTES COMPUT SC, V4495, P355
   de la Vara JL, 2008, LECT NOTES COMPUT SC, V5074, P213
   Magee J., 1999, STATE MODELS JAVA PR
   Morrison E., 2011, SERVICE ORIENTED COM
   Ouyang C, 2008, INT J WEB SERV RES, V5, P42, DOI 10.4018/jwsr.2008010103
   Pavlovski C.J., 2008, Proceedings of the fifth Asia-Pacific conference on Conceptual Modelling-, V79, P103
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Priego-Roche Luz Maria, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P549, DOI 10.1007/978-3-642-31095-9_36
   Rolland C., 2000, Requirements Engineering, V5, P180, DOI 10.1007/PL00010350
   Rolland C, 2010, IEEE T SERV COMPUT, V3, P292, DOI 10.1109/TSC.2010.26
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Silver Bruce., 2009, BPMN Method and Style: A levels-based methodology for BPM process modeling and improvement using BPMN 2.0. s.l
   Simiand F., 1960, ANN ECON SOC CIVIL, V15, P83
   van Lamsweerde A, 2003, LECT NOTES COMPUT SC, V2804, P25
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
NR 38
TC 4
Z9 5
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 1
EP 19
DI 10.1016/j.infsof.2014.09.010
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6HE
UT WOS:000347022800001
DA 2024-07-18
ER

PT J
AU França, ACC
   da Silva, FQB
   Felix, ADC
   Carneiro, DES
AF Franca, A. Cesar C.
   da Silva, Fabio Q. B.
   Felix, Adelnei de L. C.
   Carneiro, David E. S.
TI Motivation in software engineering industrial practice: A cross-case
   analysis of two software organisations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Motivation; Software engineer; Qualitative research; Multi-case
   replication design; Meta-ethnography; Software engineering
ID WORK MOTIVATION
AB Context: The research about motivation in software engineering has provided important insights into characterizing factors and outcomes related to motivation. However, the complex relationships among these factors, including the moderating and mediating effects of organisational and individual characteristics, still require deeper explanatory investigation.
   Objective: Our general goal is to build explanatory theories of motivation in different software organisations and to integrate these local theories towards a comprehensive understanding of the role of motivation in the effectiveness of the individuals and the teams in which they work. In this article, we describe the integrative synthesis of the results of two case studies performed with software organisations in different business contexts.
   Method: We performed two case studies using a multiple-case, replication design, focusing on the software engineers as the unit of analysis. For 13 months, we conducted semi structured interviews, diary studies, and document analyses, and analysed the collected data using grounded theory procedures. The results of the two cases were synthesized using a meta-ethnography supported process.
   Results: We built translations of the concepts and propositions from the two studies into one another. We then used the translations to build a central story of motivation that synthesizes the individual stories. This synthesis is contextualized by the differences in organisational and individual characteristics.
   Conclusion: The differences in organisational contexts and in the characteristics of the software engineers in each study provided rich explanations for contrasts in perceptions and feelings about motivation in both organisations. The theory that emerged from the synthesis, supported by these explanations, provides a deeper understanding of the interplay between motivators and outcomes, and the needs and personal goals of the software engineers. This theory also characterises the role of team cohesion in motivation, advancing previous models about motivation in software engineering. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Franca, A. Cesar C.; da Silva, Fabio Q. B.; Felix, Adelnei de L. C.; Carneiro, David E. S.] Univ Fed Pernambuco, Ctr Informat, BR-50540740 Recife, PE, Brazil.
   [Franca, A. Cesar C.] FAFICA, Fac Filosofia Ciencias & Letras Caruaru, Caruaru, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP da Silva, FQB (corresponding author), Univ Fed Pernambuco, Ctr Informat, Cidade Univ, BR-50540740 Recife, PE, Brazil.
EM fabio@cin.ufpe.br
RI da Silva, Fabio Queda Bueno/A-6524-2012
OI da Silva, Fabio Queda Bueno/0000-0002-3734-040X
FU Brazilian National Research Council (CNPq) [314523/2009-0]; CNPq
   [141156/2010-4]
FX Fabio Q.B. da Silva holds a research Grant from the Brazilian National
   Research Council (CNPq), process #314523/2009-0. A. Cesar C. Franca has
   a doctoral scholarship from CNPq, process #141156/2010-4. We would like
   to thank all participants in all phases of this research and the
   organisations involved for granting access for data collection.
CR [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], 1980, Motivating and Managing Computer Personnel
   [Anonymous], 2007, Basics of qualitative research: Techniques and procedures for developing grounded theory
   [Anonymous], 2008, Managing Motivation
   BANDURA A, 1982, AM PSYCHOL, V37, P122, DOI 10.1037/0003-066X.37.2.122
   Beecham S., 2007, P AGILE 2007 AGILE 0
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Britten Nicky, 2002, J Health Serv Res Policy, V7, P209, DOI 10.1258/135581902320432732
   Cohen S.G., 1993, SERIS SELF MANAGED W, V1
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1, DOI DOI 10.1145/1852786.1852788
   DALTON GW, 1977, ORGAN DYN, V6, P19, DOI 10.1016/0090-2616(77)90033-X
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Dearman D., 2008, P 2009 ACM C COMP SU
   Denzin NK, SAGE HDB QUALITATIVE
   Fabio Q.B., 2012, REPLICATION EMPIRICA, DOI [10.1007/s10664-012-9227-7, DOI 10.1007/S10664-012-9227-7]
   Frana A.C.C., 2011, P C EV ASS SOFTW ENG, P154, DOI [10.1049/ic.2011.0019, DOI 10.1049/IC.2011.0019]
   Franca A.C.C., 2011, JSS, DOI DOI 10.1016/JJSS.2010.12.017
   Franca A.C.C., 2012003 HASE
   Franca A.C.C., 2012, P 26 BRAZ S SOFTW EN
   Franca A.C.C., 2012, 2012001 HASE
   Franca A.C.C., 2012, P 16 INT C EV ASS SO
   Furnham A, 2009, J MANAGE PSYCHOL, V24, P765, DOI 10.1108/02683940910996789
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Guzzo RichardA., 1979, ACAD MANAGE REV, V4, P75
   Hackman J. R., 1987, HDB ORG BEHAV, P315, DOI DOI 10.1016/0090-2616(78)90031-1
   HACKMAN JR, 1976, ORGAN BEHAV HUM PERF, V16, P250, DOI 10.1016/0030-5073(76)90016-7
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   Herzberg F., 1959, MOTIVATION WORK
   Hsu Maxwell K, 2003, DATA BASE ADV INF SY, V34, P64
   KATZELL RA, 1990, AM PSYCHOL, V45, P144, DOI 10.1037/0003-066X.45.2.144
   Latham G. P., 2006, Human Resources Management Review, V16, P181, DOI 10.1016/j.hrmr.2006.03.014
   LOCKE EA, 1968, ORGAN BEHAV HUM PERF, V3, P157, DOI 10.1016/0030-5073(68)90004-4
   Lung J., 2008, ICSE 2008
   Maslow A.H., 1970, MOTIVATION PERSONALI
   McClelland D.C., 1961, ACHIEVING SOC, DOI DOI 10.1037/14359-000
   Merriam S. B., 2015, Qualitative research: A guide to design and implementation
   Perry J.L., 1982, Academy of Management Journal, V7, P89, DOI [10.2307/257252, DOI 10.5465/AMR.1982.4285475]
   Reid M.F., 2006, P 2006 ACM SIGMIS CP
   RIEMAN J, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P321
   Rogers S., 1997, MOTIVATION LEARNING
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sach R, 2011, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/ESEM.2011.50
   Sandelowski M., 2007, Handbook for synthesizing qualitative research
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Skinner B.F., 1963, OPERANT BEHAV
   Steers RM, 2004, ACAD MANAGE REV, V29, P379, DOI 10.2307/20159049
   Tessem J, 2007, LECT NOTES COMPUT SC, V4536, P54
   Vroom V. H., 1964, Work and motivation
   Wright BE, 2001, J PUBL ADM RES THEOR, V11, P559, DOI 10.1093/oxfordjournals.jpart.a003515
   Yeatts D.E., 1998, High-performing self-managed work teams: A comparison of theory to practice
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 53
TC 28
Z9 33
U1 0
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2014
VL 56
IS 1
BP 79
EP 101
DI 10.1016/j.infsof.2013.06.006
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 282EA
UT WOS:000329151900007
DA 2024-07-18
ER

PT J
AU Shah, H
   Harrold, MJ
   Sinha, S
AF Shah, Hina
   Harrold, Mary Jean
   Sinha, Saurabh
TI Global software testing under deadline pressure: Vendor-side experiences
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Software testing; Global software
   engineering; Global software development
AB Context: In the era of globally-distributed software engineering, the practice of global software testing (GST) has witnessed increasing adoption. Although there have been ethnographic studies of the development aspects of global software engineering, there have been fewer studies of GST, which, to succeed, can require dealing with unique challenges.
   Objective: To address this limitation of existing studies, we conducted, and in this paper, report the findings of, a study of a vendor organization involved in one kind of GST practice: outsourced, offshored software testing.
   Method: We conducted an ethnographically-informed study of three vendor-side testing teams over a period of 2 months. We used methods, such as interviews and participant observations, to collect the data and the thematic-analysis approach to analyze the data.
   Findings: Our findings describe how the participant test engineers perceive software testing and deadline pressures, the challenges that they encounter, and the strategies that they use for coping with the challenges. The findings reveal several interesting insights. First, motivation and appreciation play an important role for our participants in ensuring that high-quality testing is performed. Second, intermediate onshore teams increase the degree of pressure experienced by the participant test engineers. Third, vendor team participants perceive productivity differently from their client teams, which results in unproductive-productivity experiences. Lastly, participants encounter quality-dilemma situations for various reasons.
   Conclusion: The study findings suggest the need for (1) appreciating test engineers' efforts, (2) investigating the team structure's influence on pressure and the GST practice, (3) understanding culture's influence on other aspects of GST, and (4) identifying and addressing quality-dilemma situations. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Shah, Hina; Harrold, Mary Jean] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
   [Sinha, Saurabh] IBM Res, New Delhi, India.
C3 University System of Georgia; Georgia Institute of Technology;
   International Business Machines (IBM)
RP Shah, H (corresponding author), Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
EM hinashah@cc.gatech.edu; harrold@cc.gatech.edu; saurabhsinha@in.ibm.com
CR Ahonen JJ, 2004, EMPIR SOFTW ENG, V9, P275, DOI 10.1023/B:EMSE.0000039880.99096.af
   [Anonymous], CHEAPERS NOT ALWAYS
   [Anonymous], EXECUTION IS EVERYTH
   [Anonymous], IND BASED EXAMINATIO
   [Anonymous], P ICGSE 06 16 19 OCT
   [Anonymous], 2004, QUEUE
   [Anonymous], TOP SOFTWARE TESTING
   [Anonymous], QUEUE QUALITY ASSURA
   [Anonymous], SOFTWARE ENG APPL
   [Anonymous], P 2010 ICSE WORKSH C
   [Anonymous], P INT C INT COLL
   [Anonymous], SOFTWARE TESTING GLO
   [Anonymous], P ICGSE
   [Anonymous], P ICGSE
   Aspray W., 2006, GLOBALIZATION OFFSHO
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   Braun V., 2011, Qualitative Research in Psychology, V3, P77, DOI DOI 10.1191/1478088706QP063OA
   Costello S. H., 1984, SIGSOFT Software Engineering Notes, V9, P15, DOI 10.1145/1010941.1010947
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Hinds P, 2011, ACAD MANAG ANN, V5, P135, DOI 10.1080/19416520.2011.586108
   Hofstede G., 1991, Cultures and organizations, DOI DOI 10.1016/S0005-7967(02)00184-5
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   LYTLE AL, 1995, RES ORGAN BEHAV, V17, P167
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Philip T., 2009, ICIS 2009 Proc, P77
   Ronkko K, 2010, ENCY SOFTWARE ENG, P278
   Rooksby J, 2009, COMPUT SUPP COOP W J, V18, P559, DOI 10.1007/s10606-009-9098-7
   Shore B., 1996, Culture in mind: Cognition, culture, and the problem of meaning
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Spradley J. P., 2016, PARTICIPANT OBSERVAT
   Spradley J.P., 2016, The ethnographic interview
   Taipale Ossi., 2006, Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering, P262
   Winkler JK, 2008, INFORM SYST FRONT, V10, P243, DOI 10.1007/s10796-008-9068-5
NR 33
TC 29
Z9 30
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2014
VL 56
IS 1
BP 6
EP 19
DI 10.1016/j.infsof.2013.04.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 282EA
UT WOS:000329151900002
DA 2024-07-18
ER

PT J
AU Verner, JM
   Brereton, OP
   Kitchenham, BA
   Turner, M
   Niazi, M
AF Verner, J. M.
   Brereton, O. P.
   Kitchenham, B. A.
   Turner, M.
   Niazi, M.
TI Risks and risk mitigation in global software development: A tertiary
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global software development; Systematic literature review; Tertiary
   review; Risk; Risk mitigation; Evidence
ID SYSTEMATIC LITERATURE-REVIEWS; DEVELOPMENT OUTSOURCING VENDORS; SCRUM
AB Context
   There is extensive interest in global software development (GSD) which has led to a large number of papers reporting on GSD. A number of systematic literature reviews (SLRs) have attempted to aggregate information from individual studies.
   Objective: We wish to investigate GSD SLR research with a focus on discovering what research has been conducted in the area and to determine if the SLRs furnish appropriate risk and risk mitigation advice to provide guidance to organizations involved with GSD.
   Method: We performed a broad automated search to identify GSD SLRs. Data extracted from each study included: (1) authors, their affiliation and publishing venue, (2) SLR quality, (3) research focus, (4) GSD risks, (5) risk mitigation strategies and, (6) for each SLR the number of primary studies reporting each risk and risk mitigation strategy.
   Results: We found a total of 37 papers reporting 24 unique GSD SLR studies. Major GSD topics covered include: (1) organizational environment, (2) project execution, (3) project planning and control and (4) project scope and requirements. We extracted 85 risks and 77 risk mitigation advice items and categorized them under four major headings: outsourcing rationale, software development, human resources, and project management. The largest group of risks was related to project management. GSD outsourcing rationale risks ranked highest in terms of primary study support but in many cases these risks were only identified by a single SLR.
   Conclusions: The focus of the GSD SLRs we identified is mapping the research rather than providing evidence-based guidance to industry. Empirical support for the majority of risks identified is moderate to low, both in terms of the number of SLRs identifying the risk, and in the number of primary studies providing empirical support. Risk mitigation advice is also limited, and empirical support for these items is low. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Verner, J. M.; Brereton, O. P.; Kitchenham, B. A.; Turner, M.; Niazi, M.] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Verner, J. M.] Univ New S Wales, Sydney, NSW, Australia.
   [Niazi, M.] King Fand Univ Petr & Minerals, Dhahran, Saudi Arabia.
   [Niazi, M.] Riphah Int Univ, Islamabad, Pakistan.
C3 Keele University; University of New South Wales Sydney; King Fahd
   University of Petroleum & Minerals
RP Verner, JM (corresponding author), Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM june.verner@gmail.com; o.p.brereton@keele.a-c.uk;
   b.a.kitchenham@keele.ac.uk; m.turner@kee-le.ac.uk; mkniazi@kfupm.edu.sa
RI Kitchenham, Barbara/AAL-4311-2020; Niazi, Mahmood/C-8873-2015
OI Kitchenham, Barbara/0000-0002-6134-8460; Niazi,
   Mahmood/0000-0001-7318-7644
FU European Union
FX Verner's work is supported by the European Union Seventh Research
   Framework. She is a Marie Curie Fellow at Keele University.
CR Abdullah L.M., 2009, IEEE RES CHALLENGES, P309
   Agerfalk P.J., 2005, P INT WORKSHOP DISTR, P47
   Ali N., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P347, DOI 10.1109/ICGSE.2010.48
   Alsudairi M, 2010, J ENTERP INF MANAG, V23, P215, DOI 10.1108/17410391011019787
   [Anonymous], ADV SOFTWARE ENG
   [Anonymous], 2009, SYSTEMATIC REV
   Beulen E., 2005, European Management Journal, V23, P133, DOI 10.1016/j.emj.2005.02.010
   Bicacro E, 2012, 2012 9TH IEEE INTERNATIONAL SYMPOSIUM ON BIOMEDICAL IMAGING (ISBI), P134, DOI 10.1109/ISBI.2012.6235502
   Bondi AB, 2009, INT CONF GLOBAL SOFT, P254, DOI 10.1109/ICGSE.2009.34
   Casey, 2008, P EUR SYST SOFTW PRO
   Casey V, 2009, INT CONF GLOBAL SOFT, P8, DOI 10.1109/ICGSE.2009.9
   Costa C., 2011, P EASE, P2
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva Fabio Q. B., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P87, DOI 10.1109/ICGSE.2010.18
   da Silva F.Q.B., 2011, INFORM SOFTWAR UNPUB
   da Silva F.Q.B., 2011, J SOFTWARE MAINTENAN, V24, P625
   da Silva F.Q.B., 2010, ACM IEEE INT S EMP S
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   DeHondt G., 2009, P 15 AM C INF SYST A
   Ebling Thais, 2009, Proceedings of the 11th International Conference on Enterprise Information Systems. ISAS, P363
   Fabriek M., 2008, ECIS, P446
   Fauzi SSM, 2010, ASIA PAC SOFWR ENG, P404, DOI 10.1109/APSEC.2010.53
   Hanssen G. K., 2011, 2011 Sixth IEEE International Conference on Global Software Engineering Workshop, P17, DOI 10.1109/ICGSE-W.2011.12
   Hossain E., 2009, CAN AGILE PRACTICES, P81
   Hossain E, 2009, ASIA PAC SOFWR ENG, P457, DOI 10.1109/APSEC.2009.56
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Howitt D., 2011, INTRO RES METHODS 3
   Huang H., 2007, AMCIS P, P254
   Iacovou CL, 2008, COMMUN ACM, V51, P89, DOI 10.1145/1349026.1349044
   *IEEE COMP SOC, GUID SOFTW ENG BOD K
   IEEE Computer Society, 2004, GUID PROJ MAN BOD KN
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jimenez M., 2010, HDB RES SOFTWARE ENG, P209
   Jiménez M, 2009, LECT NOTES BUS INF P, V16, P107
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Khan SU, 2009, ASIA PAC SOFWR ENG, P79, DOI 10.1109/APSEC.2009.16
   Khan SU, 2009, INT CONF GLOBAL SOFT, P207, DOI 10.1109/ICGSE.2009.28
   Kitchenham B., 2007, Joint Report
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kliem R., 2004, EDPACS, V32, P12
   Kommeren R, 2007, EMPIR SOFTW ENG, V12, P647, DOI 10.1007/s10664-007-9047-3
   Kroll J., 2010, ICEIS, P260
   Lings B, 2006, INT FED INFO PROC, V206, P119
   Lopez Alejandro, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P394, DOI 10.1109/ICGSE.2009.62
   McCue A., 2005, ZDNET NEWS      0622
   Monasor Miguel J., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P177, DOI 10.1109/ICGSE.2010.28
   Nakatsu RT, 2009, INFORM MANAGE-AMSTER, V46, P57, DOI 10.1016/j.im.2008.11.005
   Noll J., 2010, ACM INROADS, V1
   Nurdiani I., 2011, PARIS WORKSH ICGSE
   Persson JS, 2010, IEEE SOFTWARE, V27, P20, DOI 10.1109/MS.2009.157
   Persson JS, 2009, IEEE T ENG MANAGE, V56, P508, DOI 10.1109/TEM.2009.2013827
   Prikladnicki R., 2008, EVALUATION ASSESSMEN, P1
   Prikladnicki R, 2010, INFORM SOFTWARE TECH, V52, P779, DOI 10.1016/j.infsof.2010.03.009
   Prikladnicki R, 2010, IEEE SOFTWARE, V27, P12, DOI 10.1109/MS.2010.48
   Rocha R.G.C., 2011, CLEI ELECT J, V14
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Singh R., 1996, 12007 ISOIEC
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Smite D, 2011, IEEE SOFTWARE, V28, P15, DOI 10.1109/MS.2011.70
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Smith Jr D. W., 2012, J EMPIR SOFTW ENG, P1
   Steinmacher I, 2010, LECT NOTES COMPUT SC, V6257, P185, DOI 10.1007/978-3-642-15714-1_15
   Treude C., 2009, DCS331IR U VICT
   Verner J. M., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P2, DOI 10.1049/ic.2012.0001
   Verner JM, 2012, INFORM SOFTWARE TECH, V54, P866, DOI 10.1016/j.infsof.2011.11.001
   Yalaho A., 2006, 10 IEEE INT ENT DIST, P47
NR 69
TC 94
Z9 103
U1 2
U2 36
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2014
VL 56
IS 1
BP 54
EP 78
DI 10.1016/j.infsof.2013.06.005
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 282EA
UT WOS:000329151900006
DA 2024-07-18
ER

PT J
AU Ferrer, J
   Chicano, F
   Alba, E
AF Ferrer, Javier
   Chicano, Francisco
   Alba, Enrique
TI Estimating software testing complexity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Evolutionary testing; Complexity; Branch coverage; Search based software
   engineering; Evolutionary algorithms; Testability
ID GENERATION; PATHS
AB Context: Complexity measures provide us some information about software artifacts. A measure of the difficulty of testing a piece of code could be very useful to take control about the test phase.
   Objective: The aim in this paper is the definition of a new measure of the difficulty for a computer to generate test cases, we call it Branch Coverage Expectation (BCE). We also analyze the most common complexity measures and the most important features of a program. With this analysis we are trying to discover whether there exists a relationship between them and the code coverage of an automatically generated test suite.
   Method: The definition of this measure is based on a Markov model of the program. This model is used not only to compute the BCE, but also to provide an estimation of the number of test cases needed to reach a given coverage level in the program. In order to check our proposal, we perform a theoretical validation and we carry out an empirical validation study using 2600 test programs.
   Results: The results show that the previously existing measures are not so useful to estimate the difficulty of testing a program, because they are not highly correlated with the code coverage. Our proposed measure is much more correlated with the code coverage than the existing complexity measures.
   Conclusion: The high correlation of our measure with the code coverage suggests that the BCE measure is a very promising way of measuring the difficulty to automatically test a program. Our proposed measure is useful for predicting the behavior of an automatic test case generator. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Ferrer, Javier; Chicano, Francisco; Alba, Enrique] Univ Malaga, Dept Lenguajes & Ciencias Computac, ETS Ingn Informat, E-29071 Malaga, Spain.
C3 University of Sevilla; Universidad de Malaga
RP Ferrer, J (corresponding author), Univ Malaga, Dept Lenguajes & Ciencias Computac, ETS Ingn Informat, Campus Teatinos, E-29071 Malaga, Spain.
EM ferrer@lcc.uma.es; chicano@lcc.uma.es; eat@lcc.uma.es
RI Ferrer, Javier/A-2498-2011; Alba, Enrique/KCZ-2486-2024; Chicano,
   Francisco/I-5650-2015; Alba, Enrique/L-8604-2014
OI Ferrer, Javier/0000-0002-1074-0139; Chicano,
   Francisco/0000-0003-1259-2990; Alba, Enrique/0000-0002-5520-8875
FU Spanish Ministry of Science and Innovation; FEDER [TIN2011-28194]
FX This work has been partially funded by the Spanish Ministry of Science
   and Innovation and FEDER under contract TIN2011-28194 (the roadME
   project).
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Anand S., 2013, Journal of Systems and Software
   [Anonymous], 2002, TECHNICAL REPORT
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   Arcuri A, 2011, APPL SOFT COMPUT, V11, P3494, DOI 10.1016/j.asoc.2011.01.023
   Back T., 1997, Handbook of evolutionary computation, V1st
   Basili V., 1980, QUANTITATIVE SOFTWAR
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bertolino A, 1996, J SYST SOFTWARE, V35, P95, DOI 10.1016/0164-1212(95)00089-5
   Curtis B., 1979, 3 TIME CHARM STRONGE
   DeMarco T, 1986, CONTROLLING SOFTWARE
   Dixon M., 2008, TECHNICAL REPORT, V1
   Ferrer J., 2010, INT J SOFTWARE ENG I, V4, P57
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   Khoshgoftaar T., 1990, IEEE J SELECTED AREA
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kobayash H., 2011, PROBABILITY RANDOM P
   Lakhotia K, 2013, INFORM SOFTWARE TECH, V55, P112, DOI 10.1016/j.infsof.2012.03.009
   Lam SSB, 2012, PROCEDIA ENGINEER, V30, P191, DOI 10.1016/j.proeng.2012.01.851
   Malevris N, 2006, INFORM SOFTWARE TECH, V48, P676, DOI 10.1016/j.infsof.2005.07.006
   May P.S., 2007, THESIS COMPUTING LAB
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Misra S., 2007, ACM SIGSOFT Software Engineering Notes, V32, P1
   Nogueira AF, 2012, IEEE INT CONF AUTOM, P402, DOI 10.1145/2351676.2351759
   Piwowarski P., 1982, SIGPLAN Notices, V17, P44, DOI 10.1145/947955.947960
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Software C., 2012, SOURC MON
   Thomson William, 1882, MATH PHYS PAPERS
   Tu HL, 2009, 2009 INTERNATIONAL FORUM ON COMPUTER SCIENCE-TECHNOLOGY AND APPLICATIONS, VOL 1, PROCEEDINGS, P131, DOI 10.1109/IFCSTA.2009.39
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu LG, 2012, QUAL TECHNOL QUANT M, V9, P421, DOI 10.1080/16843703.2012.11673302
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
NR 37
TC 19
Z9 19
U1 1
U2 21
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2013
VL 55
IS 12
BP 2125
EP 2139
DI 10.1016/j.infsof.2013.07.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 242QW
UT WOS:000326258100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Céret, E
   Dupuy-Chessa, S
   Calvary, G
   Front, A
   Rieu, D
AF Ceret, Eric
   Dupuy-Chessa, Sophie
   Calvary, Gaelle
   Front, Agnes
   Rieu, Dominique
TI A taxonomy of design methods process models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process models; Taxonomy; Design methods; Characterization
ID REQUIREMENTS
AB Context: Designers and developers are increasingly expected to deliver high quality systems, i.e. systems that are usable, robust, consistent as well as evolutionary, and that fulfill users' needs. To produce such systems, Design Methods suggest many approaches. However, the important number of existing approaches makes the choice of a method among the others particularly difficult. In addition to this, and because of the time required for understanding (and then operationalizing) new methods, designers tend to use already known methods, even though those which sometimes may not really be adapted to their needs.
   Objective: This paper proposes a classification of characteristics of design methods process models. In other terms, it proposes a taxonomy that aims to facilitate the discovery and the choice of methods for designers and developers.
   Method: From a study of process models of several design methods, we identify six main axes, namely Cycle, Collaboration, Artifacts, Recommended Use, Maturity and Flexibility, which are in turn divided into 34 characteristics.
   Results: This paper provides a deep theorical insight. For each characteristic identified from relevant literature, a definition and a gradation, illustrated using examples, are given. Moreover, it presents a web site that offers various tools for exploring the axes of our taxonomy. This web site provides an overview of process models as well as means for comparing them, textually or graphically. Finally, the paper relates the first evaluation conducted in order to estimate designers' adhesion to the taxonomy in terms of easiness of learning, completeness and intention to use.
   Conclusion: We show, based on evaluation results, that our taxonomy of process models facilitates the discovery of new methods and helps designers in choosing suitable methods, really adapted to their needs. Therefore, it enhances chances to conduct high quality projects. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Ceret, Eric] Univ Grenoble 1, Grenoble Informat Lab LIG, F-38041 Grenoble 9, France.
   [Dupuy-Chessa, Sophie; Front, Agnes; Rieu, Dominique] Pierre Mendes France Univ, Grenoble Informat Lab LIG, F-38041 Grenoble 9, France.
   [Calvary, Gaelle] Grenoble Inst Technol, Grenoble Informat Lab LIG, F-38041 Grenoble 9, France.
C3 Communaute Universite Grenoble Alpes; Universite Grenoble Alpes (UGA);
   Communaute Universite Grenoble Alpes; Universite Grenoble Alpes (UGA);
   Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble
RP Céret, E (corresponding author), Univ Grenoble 1, Grenoble Informat Lab LIG, 41 Rue Math, F-38041 Grenoble 9, France.
EM Eric.Ceret@imag.fr
CR Ågerfalk PJ, 2006, COMMUN ACM, V49, P26, DOI 10.1145/1164394.1164416
   Alexander L. C., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P521, DOI 10.1109/CMPSAC.1991.170231
   AMBLARD H, 1996, NOUVELLES APPROCHES
   Anderson D.J., 2004, FEATURE DRIVEN DEV T
   [Anonymous], 2000, Planning Extreme Programming
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2011, US SEARCH ENG RANK
   [Anonymous], 1993, IEEE INT S REQ ENG I
   [Anonymous], PROJ SIZ SMALL MED L
   [Anonymous], 2003, Rational Unified Process Made Easy: A Practitioner's Guide to the RUP
   [Anonymous], 1995, ANN SOFTW ENG
   AUSSENACGILLES N, 1994, INT J HUM-COMPUT ST, V40, P193, DOI 10.1006/ijhc.1994.1010
   Barry C., 2001, IEEE Multimedia, V8, P52, DOI 10.1109/93.917971
   Barthet M., 1996, Computer-aided design of user interfaces, P95
   Beaudouin-Lafon M., 2004, Proceedings of the working conference on Advanced visual interfaces, P15, DOI DOI 10.1145/989863.989865
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Benabdellatif M, 2002, MANAG INFORMAT SYST, V6, P251
   Benediktsson O, 2003, SOFTWARE QUAL J, V11, P265, DOI 10.1023/A:1025809010217
   Blomkvist S, 2005, HUM COM INT, V8, P219, DOI 10.1007/1-4020-4113-6_12
   Boehm B. W., 1975, SIGPLAN Notices, V10, P105, DOI 10.1145/390016.808430
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Booch G., 1993, Object-Oriented Analysis and Design with Applications, V2nd ed.
   Borstler J., 2001, Computer Science Education, V11, P111, DOI 10.1076/csed.11.2.111.3840
   Bresciani P., 2003, TROPOS AGENT ORIENTE
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Brinkkemper S., 1998, P CAISE 98 PIS IT
   Cain B. G., 1996, Annals of Software Engineering, V2, P259, DOI 10.1007/BF02063813
   Calvary G, 2001, LECT NOTES COMPUT SC, V2254, P173
   Card StuartK., 1995, Proceedings of a workshop on Human-computer interface design: success stories, emerging methods, and real-world context: success stories, emerging methods, and real-world context, P122
   Carter JA, 2005, HUM COM INT, V8, P147, DOI 10.1007/1-4020-4113-6_9
   Ceret E., 2010, RCIS, P507
   Ceron R., 2000, Software Architectures for Product Families. International Workshop IW-SAPF-3. Proceedings (Lecture Notes in Computer Science Vol.1951), P158
   Charette RN, 1996, IEEE SOFTWARE, V13, P110, DOI 10.1109/52.526838
   Chklovski T., 2005, P IUI ACM, P130
   Coad P., 1999, Java modeling in color With UML: enterprise components and process
   Cockburn A. A. R., 1995, Object Magazine, V4, P49
   CONSTANTINE L, 2003, P 2003 INT C SOFTW E, P106
   Cook JE, 1999, ACM T SOFTW ENG METH, V8, P147, DOI 10.1145/304399.304401
   Cross N., 1989, ENG DESIGN METHODS
   Cusumano M, 1997, COMMUN ACM, V40, P53, DOI 10.1145/255656.255698
   DAVIS FD, 1993, INT J MAN MACH STUD, V38, P475, DOI 10.1006/imms.1993.1022
   Descartes R., 1861, DISCOURS METHODE
   Desmarais MC, 2005, HUMAN CTR SOFTWARE E, V1st, DOI DOI 10.1007/1-4020-4113-6
   Django Software Foundation Django, 2005, WEB FRAM PROF DEADL
   Doemges R., 1994, P WORKSH RES ISS INT
   Dowson M., 1987, P 9 INT C SOFTW ENG, P36
   Dubois E., ENG MIXED REALITY SY
   Eckstein J, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P289, DOI 10.1007/978-3-642-12442-6_19
   Ferre X, 2005, HUM COM INT, V8, P173, DOI 10.1007/1-4020-4113-6_10
   Ferreira J, 2007, PROJECT MANAGEMENT AND RISK MANAGEMENT IN COMPLEX PROJECTS: STUDIES IN ORGANIZATIONAL SEMIOTICS, P211, DOI 10.1007/978-1-4020-5837-0_12
   Feynman RP., 1986, Personal observations on reliability of shuttle
   Fitzgerald B, 1997, INFORM SYST J, V7, P201, DOI 10.1046/j.1365-2575.1997.d01-18.x
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Fowler M., 2001, AGILE MANIFESTO SOFT, P28
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garzotto F, 2007, J WEB ENG, V6, P73
   GONG R, 1994, HUMAN FACTORS IN COMPUTING SYSTEMS, CHI '94 CONFERENCE PROCEEDINGS - CELEBRATING INTERDEPENDENCE, P351, DOI 10.1145/191666.191782
   Gould JD., 1995, Handbook of Human-Computer Interaction, P93, DOI [10.1016/B978-0-08-051574-8.50014-5, DOI 10.1016/B978-0-08-051574-8.50014-5]
   Graf R.F., 1999, MODERN DICT ELECT
   GRAHAM DR, 1989, INFORM SOFTWARE TECH, V31, P7, DOI 10.1016/0950-5849(89)90049-9
   Greenbaum J., 1991, Design at Work: Cooperative Design of Computer Systems
   Gulliksen J, 2005, HUM COM INT, V8, P17, DOI 10.1007/1-4020-4113-6_2
   Guzelian G., 2007, THESIS U P CEZANNE
   Handy C., 1993, UNDERSTANDING ORG, V4th
   Harmsen, 1997, SITUATIONAL METHOD E
   HARMSEN F, 1994, IFIP TRANS A, V55, P169
   Harrison N. B., 1996, Bell Labs Technical Journal, V1, P138, DOI 10.1002/1538-7305(199622)1:1<138::AID-BLTJ2010>3.0.CO;2-M
   Helms J. W., 2001, DEV EVALUATING LUCID
   HENDERSONSELLERS B, 1990, COMMUN ACM, V33, P142, DOI 10.1145/83880.84529
   Hug C., 2008, INT WORKSH MODISE EU
   Humphrey W. S., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P331, DOI 10.1145/74587.74631
   Humphrey W.S., 1988, P 4 INT SOFTW PROC W, P82
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   ISO, 1999, HUM CTR DES PROC INT
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Jayaratna N., 1994, Understanding and Evaluating Methodologies
   Karat J., 1996, Interactions, V3, P18, DOI [10.1145/234813.234814, DOI 10.1145/234813.234814]
   Kim YM, 2003, CONF P INDIUM PHOSPH, P145
   Kolodner J. L., 1985, PROC 9 INT JOINT C A, P284
   Laanti Maarit, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1383, DOI 10.1109/COMPSAC.2008.116
   Lindgaard G, 2006, INTERACT COMPUT, V18, P47, DOI 10.1016/j.intcom.2005.06.003
   LITTLE JW, 1990, TEACH COLL REC, V91, P509
   Maguire M, 2002, INT FED INFO PROC, V99, P133
   Maguire M, 2001, INT J HUM-COMPUT ST, V55, P587, DOI 10.1006/ijhc.2001.0503
   Mao J.-Y., 2001, PROCEEDING C CTR ADV, P12
   Martin J., 1991, Rapid Application Development
   McDermid J., 1984, Life Cycle Support in the ADA Environment New York
   McDermid J., 1983, ADA LETT, VIII, P57
   Moody D. L., 2003, ECIS
   Moody DL, 2002, LECT NOTES COMPUT SC, V2503, P380
   Morgan D.L., 1998, PLANNING FOCUS GROUP
   Morley C., 1998, GESTION PROJET SYSTE
   NIELSEN J, 1993, COMPUTER, V26, P32, DOI 10.1109/2.241424
   Norman D.A., 1986, USER CTR SYSTEM DESI, DOI 10.1201/b15703
   Nurcan S., 2008, P 41 ANN HAWAII INT
   O'Reilly M., 2003, EXTREME PROGRAMMING
   Paulk M.C., 1999, SOFTWARE QUALITY PRO, V1, P19
   Perez G., 1995, Software Process Technology. 4th European Workshop, EWSPT'95. Proceedings, P70
   Phalp K, 2000, J SYST SOFTWARE, V52, P105, DOI 10.1016/S0164-1212(99)00136-3
   Pieper M, 2005, LECT NOTES COMPUT SC, V3041, P271
   Pizka M, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P131
   Potts C., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P217, DOI 10.1145/74587.74616
   RALYTE J, 2003, LNCS, V2681, P1029
   RALYTE J, 2001, THESIS U PARIS 1 SOR
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Rogues P., 2002, UML ACTION
   Rolland C., 1999, Requirements Engineering, V4, P169, DOI 10.1007/s007660050018
   Rolland C, 1998, LECT NOTES COMPUT SC, V1413, P1, DOI 10.1007/BFb0054216
   ROLLAND C, 1994, SEKE '94 - THE 6TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, P28
   Rolland C., 2005, E REV TECHNOLOGIES I
   Rolland C, 2006, LECT NOTES COMPUT SC, V4215, P5
   Rolland C, 2009, LECT NOTES COMPUT SC, V5600, P398, DOI 10.1007/978-3-642-02463-4_21
   Rollo T., 2006, P SOFTW MEAS EUR FOR, P259
   Root R.W., 1983, P SIGCHI C HUMAN FAC, P83, DOI DOI 10.1145/800045.801586
   ROTA VM, 2009, GESTION PROJET VERS
   Royce W. W., 1987, P 9 INT C SOFTW ENG
   Scacchi W., 2002, ENCY SOFTWARE ENG
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Segrouchni O., 2002, SMC 02
   Sharon I, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P34
   Sommerville I, 1996, ACM COMPUT SURV, V28, P269, DOI 10.1145/234313.234420
   Sommerville I., 2001, SOFTWARE ENG, P10
   Spencer R., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P353, DOI 10.1145/332040.332456
   Stapleton J., 1997, DSDM DYNAMIC SYSTEMS, P163
   Stromboni J.-P., 1997, 16 C TRAIT SIGN IM G, P1299
   Tardieu H., 1985, METHODE MERISE
   Turner M., 2006, MICROSOFT SOLUTIONS
   WALLACE D, 2002, EXTREME PROGRAMMING
   Wells Don., EXTREME PROGRAMMING
   Westfall L., 2000, ANN QUAL C P WASH DC
   Williams H, 2007, AGILE 2007, PROCEEDINGS, P285, DOI 10.1109/AGILE.2007.61
   Yourdon E. E., 1999, DEATH MARCH COMPLETE
NR 133
TC 15
Z9 16
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2013
VL 55
IS 5
BP 795
EP 821
DI 10.1016/j.infsof.2012.11.002
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 122OI
UT WOS:000317327000002
DA 2024-07-18
ER

PT J
AU Xie, XY
   Wong, WE
   Chen, TY
   Xu, BW
AF Xie, Xiaoyuan
   Wong, W. Eric
   Chen, Tsong Yueh
   Xu, Baowen
TI Metamorphic slice: An application in spectrum-based fault localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Spectrum-based fault localization; Slice; Metamorphic slice; Test
   oracle; Metamorphic testing
AB Context: Because of its simplicity and effectiveness, Spectrum-Based Fault Localization (SBFL) has been one of the popular approaches towards fault localization. It utilizes the execution result of failure or pass, and the corresponding coverage information (such as program slice) to estimate the risk of being faulty for each program entity (such as statement). However, all existing SBFL techniques assume the existence of a test oracle to determine the execution result of a test case. But, it is common that test oracles do not exist, and hence the applicability of SBFL has been severely restricted.
   Objective: We aim at developing a framework that can extend the application of SBFL to the common situations where test oracles do not exist.
   Method: Our approach uses a new concept of metamorphic slice resulting from the integration of metamorphic testing and program slicing. In SBFL, instead of using the program slice and the result of failure or pass for an individual test case, a metamorphic slice and the result of violation or non-violation of a metamorphic relation are used. Since we need not know the execution result for an individual test case, the existence of a test oracle is no longer a requirement to apply SBFL.
   Results: An experimental study involving nine programs and three risk evaluation formulas was conducted. The results show that our proposed solution delivers a performance comparable to the performance observed by existing SBFL techniques for the situations where test oracles exist.
   Conclusion: With respect to the problem that SBFL is only applicable to programs with test oracles, we propose an innovative solution. Our solution is not only intuitively appealing and conceptually feasible, but also practically effective. Consequently, test oracles are no longer mandatory for SBFL, and hence the applicability of SBFL is significantly extended. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Xie, Xiaoyuan; Chen, Tsong Yueh] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
   [Wong, W. Eric] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Xie, Xiaoyuan] Southeast Univ, Sch Comp Sci & Engn, Nanjing 210096, Jiangsu, Peoples R China.
   [Xie, Xiaoyuan; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Xie, Xiaoyuan; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210093, Jiangsu, Peoples R China.
C3 Swinburne University of Technology; University of Texas System;
   University of Texas Dallas; Southeast University - China; Nanjing
   University; Nanjing University
RP Xie, XY (corresponding author), Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
EM xxie@swin.edu.au; ewong@utdallas.edu; tychen@groupwise.swin.edu.au;
   bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296; Chen, Tsong/0000-0003-3578-0994
FU Australian Research Council Discovery Project [DP120104773]; National
   Natural Science Foundation of China [90818027, 60873050]; USA National
   Science Foundation [NSF DUE-1023071]
FX This project is partially supported by Australian Research Council
   Discovery Project (DP120104773), the National Natural Science Foundation
   of China (90818027, 60873050), and the USA National Science Foundation
   (NSF DUE-1023071).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   [Anonymous], P 9 INT C SOFTW MAIN
   [Anonymous], J SYST SOFTWARE
   [Anonymous], P 11 ANN INT WORKSH
   [Anonymous], P 4 IB S SOFTW ENG K
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Chen T. Y., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   COLLOFELLO JS, 1989, J SYST SOFTWARE, V9, P191, DOI 10.1016/0164-1212(89)90039-3
   Corder G.W., 2009, NONPARAMETRIC STAT N
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Hierons R, 2002, SOFTW TEST VERIF REL, V12, P23, DOI 10.1002/stvr.232
   Hu P., 2006, Proc. of the 3rd International Workshop on Software Quality Assurance, P6
   Jiang H, 2008, BIOINFORMATICS, V24, P2395, DOI 10.1093/bioinformatics/btn429
   Jones J A., 2007, Debugging in parallel, P16
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Wong WE, 2005, J SYST SOFTWARE, V76, P15, DOI 10.1016/j.jss.2004.06.026
   Xiaoyuan Xie, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P1, DOI 10.1109/QSIC.2011.20
   Xie XY, 2009, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2009.26
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zhang Zhen-Yu, 2009, Journal of Software, V20, P2637, DOI 10.3724/SP.J.1001.2009.00578
NR 32
TC 69
Z9 80
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2013
VL 55
IS 5
BP 866
EP 879
DI 10.1016/j.infsof.2012.08.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 122OI
UT WOS:000317327000006
DA 2024-07-18
ER

PT J
AU Hattori, L
   D'Ambros, M
   Lanza, M
   Lungu, M
AF Hattori, Lile
   D'Ambros, Marco
   Lanza, Michele
   Lungu, Mircea
TI Answering software evolution questions: An empirical evaluation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE 19th International Conference on Program Comprehension (ICPC)
CY JUN 22-24, 2011
CL Kingston, CANADA
SP IEEE, Queens Univ, RIM, Comp Associates, Univ Saskatchewan, Reverse engn Forum
DE Software evolution; Empirical evaluation; Controlled experiment;
   Software change history; Mining software repositories
ID PROGRAM COMPREHENSION
AB Context: Developers often need to find answers to questions regarding the evolution of a system when working on its code base. While their information needs require data analysis pertaining to different repository types, the source code repository has a pivotal role for program comprehension tasks. However, the coarse-grained nature of the data stored by commit-based software configuration management systems often makes it challenging for a developer to search for an answer.
   Objective: We present Replay, an Eclipse plug-in that allows developers to explore the change history of a system by capturing the changes at a finer granularity level than commits, and by replaying the past changes chronologically inside the integrated development environment, with the source code at hand.
   Method: We conducted a controlled experiment to empirically assess whether Replay outperforms a baseline (SVN client in Eclipse) on helping developers to answer common questions related to software evolution.
   Results: The experiment shows that Replay leads to a decrease in completion time with respect to a set of software evolution comprehension tasks.
   Conclusion: We conclude that there are benefits in using Replay over the state of the practice tools for answering questions that require fine-grained change information and those related to recent changes. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Hattori, Lile; D'Ambros, Marco; Lanza, Michele] Univ Lugano, REVEAL Fac Informat, Lugano, Switzerland.
   [Lungu, Mircea] Univ Bern, Software Composit Grp, CH-3012 Bern, Switzerland.
C3 Universita della Svizzera Italiana; University of Bern
RP Hattori, L (corresponding author), Univ Lugano, REVEAL Fac Informat, Lugano, Switzerland.
EM lile.hattori@usi.ch
RI Lanza, Michele/JNQ-9470-2023
OI Lanza, Michele/0000-0003-4391-0197
CR Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   de Alwis B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P21, DOI 10.1145/1368088.1368092
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Dig D., 2007, THESIS U ILLINOIS UR
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gîrba T, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P2, DOI 10.1109/CSMR.2005.15
   Grinter R. E., 1996, Computer Supported Cooperative Work (CSCW), V5, P447, DOI 10.1007/BF00136714
   Guzzi A., P ICSM2010 IEEE INT, P1
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P377, DOI 10.1145/1810295.1810397
   Hattori L., P IWPSE EVOL 2010 JO, P13
   Hattori L., P ICSE 2010 32 ACM I, P235
   Hattori L., P ICPC 2011 19 IEEE, P161
   Hindle A, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P129, DOI 10.1109/VISSOF.2007.4290711
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Lanza M, 2005, PROC INT CONF SOFTW, P672
   Lanza M., 2001, Proceedings of the 4th International Workshop on Principles of Software Evolution, P37
   Lanza M, 2010, EUR CON SFTWR MTNCE, P202, DOI 10.1109/CSMR.2010.37
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lungu M, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91
   Oezbek C., P ICSM 2007 IEEE INT, P64
   Parnin C, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P93
   Quante J, 2008, INT C PROGRAM COMPRE, P73, DOI 10.1109/ICPC.2008.15
   ROBBES R, 2008, THESIS U LUGANO SWIT
   Robbes R, 2007, ELECTRON NOTES THEOR, V166, P93, DOI 10.1016/j.entcs.2006.06.015
   Robbes R, 2007, INT C PROGRAM COMPRE, P155
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Storey M.-A. D., P IWPC 2005 13 INT W, P181
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wettel R, 2008, WORK CONF REVERSE EN, P219, DOI 10.1109/WCRE.2008.55
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 34
TC 12
Z9 12
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2013
VL 55
IS 4
BP 755
EP 775
DI 10.1016/j.infsof.2012.09.001
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 111NE
UT WOS:000316527200009
OA Green Published
DA 2024-07-18
ER

PT J
AU Behjati, R
   Yue, T
   Briand, L
   Selic, B
AF Behjati, Razieh
   Yue, Tao
   Briand, Lionel
   Selic, Bran
TI SimPL: A product-line modeling methodology for families of integrated
   control systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product-line engineering; Variability modeling; Integrated control
   systems; UML; MARTE
ID VARIABILITY
AB Context: Integrated control systems (ICSs) are heterogeneous systems where software and hardware components are integrated to control and monitor physical devices and processes. A family of ICSs share the same software code base, which is configured differently for each product to form a unique installation. Due to the complexity of ICSs and inadequate automation support, product configuration in this context is typically error-prone and costly.
   Objective: As a first step to overcome these challenges, we propose a UML-based product-line modeling methodology that provides a foundation for semi-automated product configuration in the specific context of ICSs.
   Method: We performed a comprehensive domain analysis to identify characteristics of ICS families, and their configuration challenges. Based on this, we formulated the characteristics of an adequate configuration solution, and derived from them a set of modeling requirements for a model-based solution to configuration. The SimPL methodology is proposed to fulfill these requirements.
   Results: To evaluate the ability of SimPL to fulfill the modeling requirements, we applied it to a large-scale industrial case study. Our experience with the case study shows that SimPL is adequate to provide a model of the product family that meets the modeling requirements. Further evaluation is still required to assess the applicability and scalability of SimPL in practice. Doing this requires conducting field studies with human subjects and is left for future work.
   Conclusion: We conclude that configuration in ICSs requires better automation support, and UML-based approaches to product family modeling can be tailored to provide the required foundation. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Behjati, Razieh; Yue, Tao; Briand, Lionel; Selic, Bran] Simula Res Lab, Lysaker, Norway.
   [Behjati, Razieh] Univ Oslo, Oslo, Norway.
   [Briand, Lionel] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
   [Selic, Bran] Malina Software Corp, Ottawa, ON, Canada.
C3 University of Oslo; University of Luxembourg
RP Behjati, R (corresponding author), Simula Res Lab, Lysaker, Norway.
EM raziehb@simula.no; tao@simula.no; briand@simula.no; bselic@simula.no
RI yue, tao/H-6783-2013; Selic, Bran/AAV-7565-2021
OI Selic, Bran/0000-0002-3703-8593; Yue, Tao/0000-0003-3262-5577; Behjati,
   Razieh/0000-0003-3302-2751
CR [Anonymous], 2009, UML PROFILE MARTE MO
   [Anonymous], 2010, OCL OBJECT CONSTRAIN
   [Anonymous], 2010, UML SUPERSTRUCTURE S
   [Anonymous], 2011, UNIFIED PROFILE DODA
   [Anonymous], 2011, RATIONAL SOFTWARE AR
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Becker M., 2003, WORKSH SOFTW VAR MAN
   Behjati R., 2012, MODELS
   Behjati R., 2011, 14 SIMULATR
   Behjati R., 2012, MODEL BASED AUTOMATE, V7349, P226
   Bosch J., 2000, GCSE, V2177, P147
   Clarke S., 2005, ASPECT ORIENTED ANAL
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2005, WORKSH SOFTW FACT OO
   Czarnecki K., 2006, GPCE, P211
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Deelstra S., 2005, J SYST SOFTW, V74
   Dhungana D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P319, DOI 10.1109/SPLC.2008.26
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Gomaa H., 2007, Proceedings of the 40th Annual Hawaii International Conference on System Sciences, P285
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   Krueger C.W., 1992, ACM COMPUT SURV, V24
   Morin B, 2009, LECT NOTES COMPUT SC, V5795, P690, DOI 10.1007/978-3-642-04425-0_56
   Panesar-Walawege RK, 2011, LECT NOTES COMPUT SC, V6998, P362, DOI 10.1007/978-3-642-24606-7_27
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R., 2010, INFORM SOFTW TECHNOL, V52
   Santos A.L., 2006, NORD J COMPUT, V13
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Stephan M., 2008, TECHNICAL REPORT
   Usman M, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P57, DOI 10.1109/ASEA.2008.40
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Yue T., 2012, 06 SIMULATR
   Ziadi T., 2006, SOFTW PRODUCT LINES
NR 37
TC 25
Z9 26
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 607
EP 629
DI 10.1016/j.infsof.2012.09.006
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200009
OA Green Published
DA 2024-07-18
ER

PT J
AU Sohr, K
   Kuhlmann, M
   Gogolla, M
   Hu, HX
   Ahn, GJ
AF Sohr, Karsten
   Kuhlmann, Mirco
   Gogolla, Martin
   Hu, Hongxin
   Ahn, Gail-Joon
TI Comprehensive two-level analysis of role-based delegation and revocation
   policies with UML and OCL
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML; OCL; RBAC; Delegation; Revocation
ID SECURITY; DESIGN
AB Context: Role-based access control (RBAC) has become the de facto standard for access management in various large-scale organizations. Often role-based policies must implement organizational rules to satisfy compliance or authorization requirements, e.g., the principle of separation of duty (SoD). To provide business continuity, organizations should also support the delegation of access rights and roles, respectively. This, however, makes access control more complex and error-prone, in particular, when delegation concepts interplay with SoD rules.
   Objective: A systematic way to specify and validate access control policies consisting of organizational rules such as SoD as well as delegation and revocation rules shall be developed. A domain-specific language for RBAC as well as delegation concepts shall be made available.
   Method: In this paper, we present an approach to the precise specification and validation of role-based policies based on UML and OCL. We significantly extend our earlier work, which proposed a UML-based domain-specific language for RBAC, by supporting delegation and revocation concepts.
   Result: We show the appropriateness of our approach by applying it to a banking application. In particular, we give three scenarios for validating the interplay between SoD rules and delegation/revocation.
   Conclusion: To the best of our knowledge, this is the first attempt to formalize advanced RBAC concepts, such as history-based SoD as well as various delegation and revocation schemes, with UML and OCL With the rich tool support of UML, we believe our work can be employed to validate and implement real-world role-based policies. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Sohr, Karsten; Kuhlmann, Mirco; Gogolla, Martin] Univ Bremen, Ctr Comp Technol TZI, Bremen, Germany.
   [Hu, Hongxin; Ahn, Gail-Joon] Arizona State Univ, Tempe, AZ USA.
C3 University of Bremen; Arizona State University; Arizona State
   University-Tempe
RP Sohr, K (corresponding author), Univ Bremen, Ctr Comp Technol TZI, Bremen, Germany.
EM sohr@tzi.de
RI Hu, Hongxin/O-1328-2013
OI Ahn, Gail-Joon/0000-0002-4271-1666; Sohr, Karsten/0000-0001-6781-4226
FU US National Science Foundation; US Department of Energy
FX The work of Gail-Joon Ahn and Hongxin Hu was partially supported by the
   grants from US National Science Foundation and US Department of Energy.
CR Ahn GJ, 2001, PROCEEDINGS OF THE TENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, P157, DOI 10.1109/ENABL.2001.953406
   *AM NAT STAND I IN, 2004, 3592004 ANSIINCITS
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   [Anonymous], OBJ CONSTR LANG VERS
   Atluri V., 2005, Proceedings of the 10th ACM symposium on Access control models and technologies. SACMAT '05, P49, DOI DOI 10.1145/1063979.1063990
   Barka E, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P168, DOI 10.1109/ACSAC.2000.898870
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Basin D, 2009, INFORM SOFTWARE TECH, V51, P815, DOI 10.1016/j.infsof.2008.05.011
   Becker MY, 2010, J COMPUT SECUR, V18, P619, DOI 10.3233/JCS-2009-0364
   Booch G., 2004, OBJECT TECHNOLOGY SE
   Chandramouli R., 2000, Proceedings International Conference on Information Technology: Coding and Computing (Cat. No.PR00540), P11, DOI 10.1109/ITCC.2000.844176
   Crampton J, 2008, INT J INF SECUR, V7, P123, DOI 10.1007/s10207-007-0044-8
   Fernández-Medina E, 2004, LECT NOTES COMPUT SC, V3273, P380
   Georgiadis ChristosK., 2001, ACM SACMAT, P21, DOI DOI 10.1145/373256.373259
   Gligor VD, 1998, 1998 IEEE SYMPOSIUM ON SECURITY AND PRIVACY - PROCEEDINGS, P172, DOI 10.1109/SECPRI.1998.674833
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gogolla M, 2009, LECT NOTES COMPUT SC, V5668, P90
   Hagström A, 2001, P IEEE CSFW, P44, DOI 10.1109/CSFW.2001.930135
   Harrison M.S., COMMUNICATIONS ACM, V19
   HOHN S, 2003, 6 WORK C INT INT CON
   Indrakshi RAY., 2004, Proceedings of the ninth ACM symposium on Access control models and technologies, SACMAT '04, P115, DOI DOI 10.1145/990036.990054
   Jaeger T., 2001, ACM Transactions on Information and Systems Security, V4, P158, DOI 10.1145/501963.501966
   Joshi J. B. D., 2006, SACMAT 2006. Proceedings of Eleventh ACM Symposium on Access Control Models and Technologies, P81
   Joshi JBD, 2005, IEEE T KNOWL DATA EN, V17, P4, DOI 10.1109/TKDE.2005.1
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kuhlmann M., 2011, Proceedings of the 2011 Fifth International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2011), P108, DOI 10.1109/SSIRI.2011.18
   Kuhlmann M., 2011, USE SPECIFICATIONS M
   Kuhlmann M., MATH STRUCT IN PRESS
   Kuhlmann M., RBAC METAMODEL SOURC
   Kuhlmann M, 2008, FORM ASP COMPUT, V20, P79, DOI 10.1007/s00165-007-0062-3
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Nash M. J., 1990, Proceedings. 1990 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.90CH2884-5), P201, DOI 10.1109/RISP.1990.63851
   Object Management Group, 2010, OMG UN MOD LANG OMG
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   SERSCIS, SERSCIS ACC MOD
   Simon RT, 1997, P IEEE CSFW, P183, DOI 10.1109/CSFW.1997.596811
   Sohr K, 2008, IEEE T KNOWL DATA EN, V20, P924, DOI 10.1109/TKDE.2008.28
   Sohr K, 2008, ANN COMPUT SECURITY, P257, DOI 10.1109/ACSAC.2008.35
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   Wainer J., 2005, Proceedings of the tenth ACM symposium on Access control models and technologies, P59, DOI DOI 10.1145/1063979.1063991
   Yu LJ, 2008, LECT NOTES COMPUT SC, V5301, P234
   Zhang L., 2003, ACM Transactions on Information and Systems Security, V6, P404, DOI 10.1145/937527.937530
   Zhang Xinwen., 2003, Proceedings of the 8th ACM symposium on Access control models and technologies (SACMAT), P149
   Zurko ME, 1999, P IEEE S SECUR PRIV, P57, DOI 10.1109/SECPRI.1999.766718
NR 44
TC 10
Z9 11
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2012
VL 54
IS 12
BP 1396
EP 1417
DI 10.1016/j.infsof.2012.06.008
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 015HE
UT WOS:000309436200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Borte, K
   Ludvigsen, SR
   Morch, AI
AF Borte, Kristin
   Ludvigsen, Sten R.
   Morch, Anders I.
TI The role of social interaction in software effort estimation: Unpacking
   the "magic step" between reasoning and decision-making
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Group work; Software effort estimation; Planning poker; Qualitative
   methods; Interaction analysis
AB Context: Software effort estimation is a core task regarding planning, budgeting and controlling software development projects. However, providing accurate effort estimates is challenging. Estimation work is increasingly group based, and to support it, there is a need to reveal how work practices are carried out as collaborative efforts.
   Objective: This paper examines the use of concepts in software effort estimation by analysing group work as communicative practice. The objective is to improve our understanding of how software professionals invoke different types of knowledge when talking, reasoning and reaching a decision on a software effort estimate.
   Method: Estimation meetings in the industry where planning poker was used as the estimation method have been video recorded and analysed by means of the interaction analysis technique, focusing on the communicative and collaborative aspects of the group work.
   Results: The user story mediates the types of resources and knowledge needed to solve the task. Concepts from the knowledge domain are used to frame the task and allow the participants to reach consensus, sufficient to take the next step in the problem-solving activity. Individual knowledge seems to be the dominating orientation when it comes to specifying the work needed for solving the tasks.
   Conclusion: The step from reasoning to decision-making has been called the "magic step" in software effort estimation. We argue that the magic step is found in the analysis of the social interaction in which the concepts used are anchored in the knowledge domain of software engineering and in the historical experiences of the participants and subsequently become activated. We propose that by taking a socio-cultural perspective on concepts in activities, the ways in which software professionals reach a decision can be unpacked. The paper contributes to an understanding of the role of concepts in group work and of software effort estimation as a specific work practice. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Borte, Kristin] Simula Res Lab, NO-1325 Lysaker, Norway.
   [Borte, Kristin] Univ Oslo, Dept Educ Res, NO-0317 Oslo, Norway.
   [Ludvigsen, Sten R.; Morch, Anders I.] Univ Oslo, InterMedia, NO-0318 Oslo, Norway.
C3 University of Oslo; University of Oslo
RP Borte, K (corresponding author), Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM kristin.borte@simula.no
RI Mørch, Anders I./AAH-1874-2020
OI Mørch, Anders I./0000-0002-1470-5234
CR [Anonymous], DILEMMAS GEN THEORY
   [Anonymous], EUR J INF SYST
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Borte Kristin, 2010, Scandinavian Journal of Information Systems, V22, P65
   Borte K., CHALLENGES UTI UNPUB
   Bowker GC, 1999, Sorting Things Out
   Cohn Mike, 2006, AGILE ESTIMATING PLA
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   De Graaf W., 1994, SOCIOGENESIS REEXAMI, P1
   Derry SJ, 2010, J LEARN SCI, V19, P3, DOI 10.1080/10508400903452884
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Dittrich Y, 2009, COMPUT SUPP COOP W J, V18, P393, DOI 10.1007/s10606-009-9106-y
   Fugelli Pal., 2010, Intersubjectivity and Objects of Knowledge: Making sense across sites in software development
   Furberg A, 2008, INT J SCI EDUC, V30, P1775, DOI 10.1080/09500690701543617
   Grenning J., 2002, PLANNING POKER AVOID
   Halkjelsvik T., PSYCHOL B
   Hannay J.E., 2010, INT S EMP SOFTW ENG
   Haugen N.C., 2007, EST SEM 24 OCT 2007
   Haugen NC, 2006, AGILE 2006, PROCEEDINGS, P23, DOI 10.1109/AGILE.2006.16
   HIHN J, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P276, DOI 10.1109/ICSE.1991.130653
   Jordan B, 1995, J LEARN SCI, V4, P39, DOI 10.1207/s15327809jls0401_2
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M., 2005, INT C COGN EC, P105
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kjaergaard A., 2010, SCANDINAVIAN J INFOR, V22, P3
   Konkola R, 2007, J EDUC WORK, V20, P211, DOI 10.1080/13639080701464483
   LineII Per, 1998, APPROACHING DIALOGUE
   Linell P, 2009, ADV CULT PSYCHOL CON, pXXI
   Ludvigsen S., 2010, Learning across Sites. New tools, P105
   Lutters WG, 2007, INFORM SOFTWARE TECH, V49, P576, DOI 10.1016/j.infsof.2007.02.013
   Makitalo A., 2002, Text, V22, P57
   Matusov E, 1998, HUM DEV, V41, P326, DOI 10.1159/000022595
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Molokken-Ostvold K, 2004, EMPIR SOFTW ENG, V9, P315, DOI 10.1023/B:EMSE.0000039882.39206.5a
   Molokken-Ostvold K, 2008, J SYST SOFTWARE, V81, P2106, DOI 10.1016/j.jss.2008.03.058
   Olson G.M., 1996, DESIGN RATIONALE CON, P217
   Passing U, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P120, DOI 10.1109/ISESE.2003.1237971
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Rommetveit R., 1992, DIALOGICAL ALTERNATI
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H, 2004, INT J HUM-COMPUT ST, V61, P219, DOI 10.1016/j.ijhcs.2003.12.011
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   Silverman D., 1998, HARVEY SACKS SOCIAL
   Sommerville Ian, 2016, Software engineering 8
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Valsiner Jaan., 2000, The Social Mind: Construction of the Idea
   Valsiner Jaan., 1994, Sociogenesis Reexamined, P47
   Van der Veer R., 1994, SOCIOGENESIS REEXAMI, P117
   Vygotsky L. S., 1978, Mind in Society: The Development of Higher Psychological Processes, DOI 10.2307/j.ctvjf9vz4
NR 49
TC 13
Z9 13
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2012
VL 54
IS 9
BP 985
EP 996
DI 10.1016/j.infsof.2012.03.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 977BP
UT WOS:000306631700005
DA 2024-07-18
ER

PT J
AU Wallin, P
   Larsson, S
   Fröberg, J
   Axelsson, J
AF Wallin, Peter
   Larsson, Stig
   Froberg, Joakim
   Axelsson, Jakob
TI Problems and their mitigation in system and software architecting
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE System and software architecture; Experience from practice; Success
   factors; Embedded systems
ID EXPERIENCE
AB Context: Today, software and embedded systems act as enablers for developing new functionality in traditional industries such as the automotive, process automation, and manufacturing automation domains. This differs from 25-30 years ago when these systems where based on electronics and electro-mechanical solutions. The architecture of the embedded system and of the software is important to ensure the qualities of these applications. However, the effort of designing and evolving the architecture is in practice often neglected during system development, whilst development efforts are centered on implementing new functionality.
   Objective: We present problems and success factors that are central to the architectural development of software intensive systems in the domain of automotive and automation products as judged by practitioners.
   Method: The method consisted of three steps. First, we used semi-structured interviews to collect data in an exploratory manner. As a second step, a survey based on problems extracted from the interview data was used to investigate the occurrence of these problems at a wider range of organizations. In order to identify and suggest how to mitigate the problems that were considered important, we finally performed root cause analysis workshops, and from these a number of success factors were elicited.
   Results: A total of 21 problems have been identified based on the interview data, and these are related to the technical, organizational, project, and agreement processes. Based on the survey results, the following four problems were selected for a root cause analysis: (1) there is a lack of process for architecture development, (2) there is a lack of method or model to evaluate the business value when choosing the architecture, (3) there is a lack of clear long-term architectural strategy, and (4) processes and methods are less valued than knowledge and competence of individuals.
   Conclusion: In conclusion, the following identified success factors are crucial components to be successful in developing software intensive systems: (1) define an architectural strategy, (2) implement a process for architectural work, (3) ensure authority for architects, (4) clarify the business impact of the architecture, and (5) optimize on the project portfolio level instead of optimizing each project. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Wallin, Peter; Larsson, Stig; Froberg, Joakim; Axelsson, Jakob] Malardalen Univ, SE-72123 Vasteras, Sweden.
C3 Malardalen University
RP Wallin, P (corresponding author), Malardalen Univ, POB 883, SE-72123 Vasteras, Sweden.
EM peter.wallin@mdh.se; stig.larsson@mdh.se; joakim.froberg@mdh.se;
   jakob.axelsson@mdh.se
RI Axelsson, Jakob/AAE-3249-2020
OI Wallin, Peter/0000-0002-2726-4503; Axelsson, Jakob/0000-0002-3986-1196
CR [Anonymous], P 25 INT C SOFTW ENG
   [Anonymous], IEEE COMPUTER
   [Anonymous], NORTHROP SOFTWARE PR
   [Anonymous], 152882008 IEEE STD
   [Anonymous], SIGMIS DATABASE
   [Anonymous], ADV PSYCHOL
   [Anonymous], 7 WORK IEEE IFIP C S
   [Anonymous], 2000, ATAM: Method for Architecture Evaluation
   [Anonymous], APPL SOFTWARE PRODUC
   [Anonymous], J ORG CHANGE MANAGEM
   [Anonymous], 5 INT C QUAL SOFTW M
   [Anonymous], JOINT WORK IEEE IFIP
   [Anonymous], P 21 INT C SOFTW ENG
   [Anonymous], 2001, P DETC ASME DES ENG
   [Anonymous], IEEE C WORKSH ENG CO
   [Anonymous], SIGSOFT SOFTWARE ENG
   [Anonymous], P 28 INT C SOFTW ENG
   [Anonymous], P 4 EUR C SOFTW ARCH
   [Anonymous], THESIS
   [Anonymous], FUTURE SOFTWARE ENG
   [Anonymous], EUR SOFTW PROC IMPR
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Beyerlein M., 2003, Journal of Organizational Excellence, V22, P51, DOI [10.1002/npr.10067, DOI 10.1002/NPR.10067]
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Bjornson FO, 2009, INFORM SOFTWARE TECH, V51, P150, DOI 10.1016/j.infsof.2008.02.003
   Broy M, 2007, P IEEE, V95, P356, DOI 10.1109/JPROC.2006.888386
   CONWAY ME, 1968, DATAMATION, V14, P28
   Favaro JM, 1998, ANN SOFTW ENG, V5, P5, DOI 10.1023/A:1018976424679
   Ferrari R, 2008, J SYST SOFTWARE, V81, P1470, DOI 10.1016/j.jss.2007.12.764
   Graaf H, 2003, IEEE SOFTWARE, V20, P61, DOI 10.1109/MS.2003.1241368
   Grant S, 1999, CHEST, V116, P1208, DOI 10.1378/chest.116.5.1208
   Leen G, 2002, COMPUTER, V35, P88, DOI 10.1109/2.976923
   Maier M. W., 2006, Systems Engineering, V9, P146, DOI 10.1002/sys.20050
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Robson C., 2002, Real world research
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Scupin R, 1997, HUM ORGAN, V56, P233, DOI 10.17730/humo.56.2.x335923511444655
   Sengupta K, 2008, HARVARD BUS REV, V86, P94
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Thomke S, 2000, J PROD INNOVAT MANAG, V17, P128, DOI 10.1111/1540-5885.1720128
   TJOSVOLD D, 1988, GROUP ORGAN STUD, V13, P274, DOI 10.1177/105960118801300303
   Wallin P., 2009, 42st Hawaii International International Conference on Systems Science, P1, DOI [10.1109/HICSS.2009.276, DOI 10.1109/HICSS.2009.276]
   Wallin P, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P87, DOI 10.1109/ECBS.2008.46
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin RK, 2002, Applied Social Research Methods Series, V34
NR 45
TC 3
Z9 4
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 686
EP 700
DI 10.1016/j.infsof.2012.01.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 946WG
UT WOS:000304387600003
DA 2024-07-18
ER

PT J
AU Díaz-Pace, JA
   Soria, A
   Rodríguez, G
   Campo, MR
AF Diaz-Pace, J. A.
   Soria, Alvaro
   Rodriguez, Guillermo
   Campo, Marcelo R.
TI Assisting conformance checks between architectural scenarios and
   implementation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Conformance checking; Behavioral scenarios; Tool
   support; UCMs
ID SUPPORT; DESIGN
AB Context: Conformance between architecture and implementation is a key aspect of architecture-centric development. Unfortunately, the architecture "as documented" and the architecture "as implemented" tend to diverge from each other over time. As this gap gets wider, the architects' reliance on architecture-level analyses is compromised. Thus, conformance checks should be run periodically on the system in order to detect and correct differences. In practice, tool support is very beneficial for these checks.
   Objective: Despite having a structural conformance analysis, assessing whether the main scenarios describing the architectural behavior are faithfully implemented in the code is still challenging. Checking conformance to architectural scenarios is usually a time-consuming and error-prone activity. In this article, we describe a tool approach called ArchSync that helps architects to reconcile a scenario-based architectural description with its source code, as changes are being made on the code.
   Method: The architecture is specified with Use-Case Maps (UCMs), a notation for modeling both high-level structure and behavior. ArchSync applies heuristics that incrementally detect code deviations with respect to predetermined UCMs, based on the analysis of system execution traces for those UCMs. Also, ArchSync provides suggestions for re-synchronizing the UCMs with the code.
   Results: We have evaluated a prototype of ArchSync in three medium-size case-studies, involving developers with moderate architecture experience. We compared time consumed, code browsed and suggestions for re-synchronizing the UCMs by these developers, with and without the support of ArchSync.
   Conclusion: The results from case-studies and lessons learned have shown that the ArchSync approach is practical and reduces conformance checking efforts. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Rodriguez, Guillermo] UNICEN Univ, ISISTAN Res Inst, Natl Council Sci & Tech Res, Buenos Aires, DF, Argentina.
   [Diaz-Pace, J. A.; Rodriguez, Guillermo; Campo, Marcelo R.] Natl Council Sci & Tech Res, CONICET, Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Rodríguez, G (corresponding author), UNICEN Univ, ISISTAN Res Inst, Natl Council Sci & Tech Res, Campus Univ,B7001BBO Tandil, Buenos Aires, DF, Argentina.
EM adiaz@exa.unicen.edu.ar; asoria@exa.unicen.edu.ar;
   grodri@exa.unicen.edu.ar; mcampo@exa.unicen.edu.ar
RI Rodriguez, Guillermo/JPA-4743-2023
OI Rodriguez, Guillermo Horacio/0000-0003-4125-3998; Campo,
   Marcelo/0000-0002-3555-835X
CR Abi-Antoun M, 2009, ACM SIGPLAN NOTICES, V44, P321, DOI 10.1145/1639949.1640113
   ABIANTOUN M, 2005, WORKSH ARCH DEP SYST
   Amandi A, 2005, COMPUT LANG SYST STR, V31, P17, DOI 10.1016/j.cl.2004.03.001
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bordeleaus F., 2000, IRISA SDL FOR 2 WORK, P123
   Buckley J, 2008, J SOFTW MAINT EVOL-R, V20, P107, DOI 10.1002/smr.364
   Buhr R.J. A., 1996, USE CASE MAPS OBJECT
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   Buhrs R. J. A., 1999, 32 ANN HAW C SYST SC
   Campo M, 2002, SOFTWARE PRACT EXPER, V32, P837, DOI 10.1002/spe.462
   Clements P., 2002, DOCUMENTING SOFTWARE
   de Sousa FC, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P50
   Diaz-Pace JA, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P151, DOI 10.1109/WICSA.2009.5290801
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Gagliardi M., 2009, J DEFENSE SOFTWARE E
   Ganesan D, 2009, INFORM SOFTWARE TECH, V51, P1586, DOI 10.1016/j.infsof.2009.06.007
   GARLAN D, 2001, WORK C COMPL DYN SYS
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Kelly D, 2004, J SYST SOFTWARE, V73, P361, DOI 10.1016/j.jss.2003.10.027
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   Koschke R., 2010, IEEE COMP SOC 14 EUR
   Koschke R, 2009, SOFTWARE QUAL J, V17, P331, DOI 10.1007/s11219-009-9077-8
   MEDVIDOVIC N, 2003, STRAW 03
   Merson P, 2007, CMUSEI2007TN019 CMUSEI2007TN019
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Murta LGP, 2006, IEEE INT CONF AUTOM, P135
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Parnas D. L., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P132
   Postma A, 2003, INFORM SOFTWARE TECH, V45, P171, DOI 10.1016/S0950-5849(02)00193-3
   Rotschke T., 2002, IEEE COMP SOC INT C
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Schmerl B, 2006, IEEE T SOFTWARE ENG, V32, P454, DOI 10.1109/TSE.2006.66
   Soria A, 2009, EUR CON SFTWR MTNCE, P59, DOI 10.1109/CSMR.2009.42
NR 35
TC 7
Z9 8
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2012
VL 54
IS 5
BP 448
EP 466
DI 10.1016/j.infsof.2011.12.005
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 906CR
UT WOS:000301323000002
DA 2024-07-18
ER

PT J
AU Shar, LK
   Tan, FBK
AF Shar, Lwin Khin
   Tan, Flee Beng Kuan
TI Automated removal of cross site scripting vulnerabilities in web
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cross site scripting; Injection vulnerability; Character escaping;
   Encoding; Web security; Automated bug fixing
ID INPUT VALIDATION; SQL INJECTION
AB Context: Cross site scripting (XSS) vulnerability is among the top web application vulnerabilities according to recent surveys. This vulnerability occurs when a web application uses inputs received from users in web pages without properly checking them. This allows an attacker to inject malicious scripts in web pages via such inputs such that the scripts perform malicious actions when a client visits the exploited web pages. Such an attack may cause serious security violations such as account hijacking and cookie theft. Current approaches to mitigate this problem mainly focus on effective detection of XSS vulnerabilities in the programs or prevention of real time XSS attacks. As more sophisticated attack vectors are being discovered, vulnerabilities if not removed could be exploited anytime.
   Objective: To address this issue, this paper presents an approach for removing XSS vulnerabilities in web applications.
   Method: Based on static analysis and pattern matching techniques, our approach identifies potential XSS vulnerabilities in program source code and secures them with appropriate escaping mechanisms which prevent input values from causing any script execution.
   Results: We developed a tool, saferXSS, to implement the proposed approach. Using the tool, we evaluated the applicability and effectiveness of the proposed approach based on the experiments on five Java-based web applications.
   Conclusion: Our evaluation has shown that the tool can be applied to real-world web applications and it automatically removed all the real XSS vulnerabilities in the test subjects. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Shar, Lwin Khin; Tan, Flee Beng Kuan] Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Shar, LK (corresponding author), Nanyang Technol Univ, Sch Elect & Elect Engn, Block S2,Nanyang Ave, Singapore 639798, Singapore.
EM shar0035@ntu.edu.sg; ibktan@ntu.edu.sg
OI Shar, Lwin Khin/0000-0001-5130-0407
CR [Anonymous], HTML 4 01 SPEC
   [Anonymous], 2005, International Conference on World Wide Web, DOI [10.1145/1060745.1060809, DOI 10.1145/1060745.1060809]
   [Anonymous], P IEEE S SEC PRIV
   Balzarotti D, 2008, P IEEE S SECUR PRIV, P387, DOI 10.1109/SP.2008.22
   Bisht P, 2008, LECT NOTES COMPUT SC, V5137, P23, DOI 10.1007/978-3-540-70542-0_2
   CWE, 2010, CWE79
   CWE/SANS, 2010, TOP 25 MOST DANG PRO
   ESAPI, 2009, OWASP ENT SEC API
   Hayes JH, 2006, EMPIR SOFTW ENG, V11, P493, DOI 10.1007/s10664-006-9025-1
   Huang Y.-W., 2004, P 13 INT C WORLD WID, P40, DOI [10.1145/988672.988679, DOI 10.1145/988672.988679]
   Jim Trevor., 2007, WWW 07, P601, DOI [10.1145/1242572.1242654, DOI 10.1145/1242572.1242654]
   Johns M, 2008, ANN COMPUT SECURITY, P335, DOI 10.1109/ACSAC.2008.36
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Kirda E, 2009, COMPUT SECUR, V28, P592, DOI 10.1016/j.cose.2009.04.008
   Klein Amit., 2005, DOM Based Cross Site Scripting or XSS of the Third Kind
   Lam MS, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P3, DOI 10.1145/1328408.1328410
   Liu H, 2008, J SYST SOFTWARE, V81, P222, DOI 10.1016/j.jss.2007.05.007
   Liu H, 2009, INFORM SOFTWARE TECH, V51, P546, DOI 10.1016/j.infsof.2008.07.001
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Martin M.C., 2008, USENIX SECURITY S, P31
   Mueller A., 2009, CROSS SIT SCRIPT XSS
   OWASP, 2009, OWASP TOP 10 PROJ 20
   OWASP, 2010, XSS CROSS SIT SCRIPT
   Robertson W., 2009, P 18 C USENIX SECURI, P283, DOI DOI 10.5555/1855768.1855786
   RSnake, 2010, XSS CROSS SIT SCRIPT
   Shahriar H, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P47, DOI 10.1109/IWSESS.2009.5068458
   Shar LK, 2010, SECRYPT 2010: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SECURITY AND CRYPTOGRAPHY, P505
   Sinha S, 2001, ACM T SOFTW ENG METH, V10, P209, DOI 10.1145/367008.367022
   Soot, 2008, SOOT JAVA OPTIMIZATI
   Thomas S, 2009, INFORM SOFTWARE TECH, V51, P589, DOI 10.1016/j.infsof.2008.08.002
   US-CERT, 2006, MICR NET FRAM CONT C
   W3C, 2002, XHTML 1 0 SPEC
   Wassermann G., 2008, P 2008 INT S SOFTW T, P249, DOI DOI 10.1145/1390630.1390661
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   Xie YC, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P179
   </xssed>, 2010, XXS HELPS YOU TRAC U
   Yip A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P291
NR 37
TC 51
Z9 57
U1 1
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2012
VL 54
IS 5
BP 467
EP 478
DI 10.1016/j.infsof.2011.12.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 906CR
UT WOS:000301323000003
OA Green Published
DA 2024-07-18
ER

PT J
AU Vanya, A
   Premraj, R
   van Vliet, H
AF Vanya, Adam
   Premraj, Rahul
   van Vliet, Hans
TI Resolving unwanted couplings through interactive exploration of
   co-evolving software entities - An experience report
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software; Evolution; Interactivity; Co-evolution; Assessment;
   Visualization
ID EVOLUTION
AB Context: Frequent changes to groups of software entities belonging to different parts of the system may indicate unwanted couplings between those parts. Visualizations of co-changing software entities have been proposed to help developers identify unwanted couplings. Identifying unwanted couplings, however, is only the first step towards an important goal of a software architect: to improve the decomposition of the software system. An in-depth analysis of co-changing entities is needed to understand the underlying reasons for co-changes, and also determine how to resolve the issues.
   Objective: In this paper we discuss how interactive visualizations can support the process of analyzing the identified unwanted couplings.
   Method: We applied a tool that interactively visualizes software evolution in 10 working sessions with architects and developers of a large embedded software system having a development history of more than a decade.
   Results: The participants of the working sessions were overall very positive about their experiences with the interactive visualizations. In 70% of the cases investigated, a decision could be taken on how to resolve the unwanted couplings.
   Conclusion: Our experience suggests that interactive visualization not only helps to identify unwanted couplings but it also helps experts to reason about and resolve them. (C) 2011 Published by Elsevier B.V.
C1 [Vanya, Adam; Premraj, Rahul; van Vliet, Hans] Vrije Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam
RP Vanya, A (corresponding author), Vrije Univ Amsterdam, De Boelelaan 1081, NL-1081 HV Amsterdam, Netherlands.
EM vanya@cs.vu.nl; rpremraj@cs.vu.nl; hans@cs.vu.nl
RI Vanya, Ádám/ABB-6283-2021
OI Vanya, Adam/0000-0002-8969-8489
FU Dutch Ministry of Economic Affairs under the BSIK
FX This work has been carried out as part of the DARWIN project at Philips
   Healthcare under the responsibility of the Embedded Systems Institute.
   This project is partially supported by the Dutch Ministry of Economic
   Affairs under the BSIK program. More information on the DARWIN project
   can be found at: http://www.esi.nl/
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Antoniol G., 2005, P 8 INT WORKSH PRINC, P23
   BALL T, 1997, P ICSE WORKSH PROC M
   Beyer D, 2005, PROG COMPREHEN, P259, DOI 10.1109/WPC.2005.12
   Beyer D, 2006, WORK CONF REVERSE EN, P199
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   Fischer M, 2006, WORK CONF REVERSE EN, P179
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Hanakawa N, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P214, DOI 10.1109/ASPEC.2007.36
   Harel D, 2009, COMMUN ACM, V52, P67, DOI 10.1145/1467247.1467274
   Hindle A, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P129, DOI 10.1109/VISSOF.2007.4290711
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Muller H. A., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P80, DOI 10.1109/ICSE.1988.93690
   PERRY D, 2000, FUTURE SOFTWARE ENG, P345
   Pinzger M, 2008, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2008.23
   *PREF, PREF INF VIS TOOLK
   Ratzinger J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P103, DOI 10.1109/IWPSE.2005.16
   Ratzinger J., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI DOI 10.1145/1082983.1083155
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   TRYAN RC, 1939, CLUSTER ANAL
   van de Laar P, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P187, DOI 10.1109/MSR.2009.5069502
   VANDERLINDEN FJ, 1995, IEEE SOFTWARE, V12, P51, DOI 10.1109/52.469760
   Vanya A., 2010, P 14 EUR C SOFTW MAI, P269
   Vanya A, 2008, INT C PROGRAM COMPRE, P192, DOI 10.1109/ICPC.2008.34
   Vanya A, 2009, WORK CONF REVERSE EN, P227, DOI 10.1109/WCRE.2009.30
   Yourdon E., 1975, STRFUCTURED DESIGN
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
NR 33
TC 5
Z9 5
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2012
VL 54
IS 4
BP 347
EP 359
DI 10.1016/j.infsof.2011.11.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 900AN
UT WOS:000300859100002
DA 2024-07-18
ER

PT J
AU Kalaji, AS
   Hierons, RM
   Swift, S
AF Kalaji, Abdul Salam
   Hierons, Robert Mark
   Swift, Stephen
TI An integrated search-based approach for automatic testing from extended
   finite state machine (EFSM) models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based testing; EFSM; Feasible transition paths; Automatic test
   derivation
ID SOFTWARE TEST DATA; COMMUNICATION PROTOCOLS; SYMBOLIC EXECUTION;
   SPECIFICATIONS; GENERATION; TESTABILITY; CONFORMANCE; COVERAGE
AB Context: The extended finite state machine (EFSM) is a modelling approach that has been used to represent a wide range of systems. When testing from an EFSM, it is normal to use a test criterion such as transition coverage. Such test criteria are often expressed in terms of transition paths (TPs) through an EFSM. Despite the popularity of EFSMs, testing from an EFSM is difficult for two main reasons: path feasibility and path input sequence generation. The path feasibility problem concerns generating paths that are feasible whereas the path input sequence generation problem is to find an input sequence that can traverse a feasible path.
   Objective: While search-based approaches have been used in test automation, there has been relatively little work that uses them when testing from an EFSM. In this paper, we propose an integrated search-based approach to automate testing nom an EFSM.
   Method: The approach has two phases, the aim of the first phase being to produce a feasible TP (FTP) while the second phase searches for an input sequence to trigger this TP. The first phase uses a Genetic Algorithm whose fitness function is a TP feasibility metric based on dataflow dependence. The second phase uses a Genetic Algorithm whose fitness function is based on a combination of a branch distance function and approach level.
   Results: Experimental results using five EFSMs found the first phase to be effective in generating FTPs with a success rate of approximately 96.6%. Furthermore, the proposed input sequence generator could trigger all the generated feasible TPs (success rate = 100%).
   Conclusion: The results derived from the experiment demonstrate that the proposed approach is effective in automating testing from an EFSM. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Hierons, Robert Mark; Swift, Stephen] Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
   [Kalaji, Abdul Salam] Aleppo Univ, Fac Informat Engn, Dept Software Engn & Informat Syst, Aleppo, Syria.
C3 Brunel University; University of Aleppo
RP Hierons, RM (corresponding author), Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
EM abdulsalam.kalaji@gmail.com; rob.hierons@bru-nel.ac.uk;
   stephen.swift@brunel.ac.uk
RI Swift, Stephen/AAE-6174-2020
OI Swift, Stephen/0000-0001-8918-3365; Hierons, Robert/0000-0002-4771-1446;
   Kalaji, Abdulsalam/0009-0006-7896-0417
CR BOCHMANN GV, 1990, COMPUT NETWORKS ISDN, V18, P335, DOI 10.1016/0169-7552(90)90121-8
   Boehm B.W., 1981, Software Engineering Economics, P768
   BOURHFIR C, 1996, TR1043 U MONTR, P1
   Briand L, 2010, SOFTW TEST VERIF REL, V20, P177, DOI 10.1002/stvr.410
   BUDKOWSKI S, 1987, COMPUT NETWORKS ISDN, V14, P3, DOI 10.1016/0169-7552(87)90084-5
   Carroll DL, 1996, AIAA J, V34, P338, DOI 10.2514/3.13069
   CHANSON ST, 1993, 12 ANN JOINT C IEEE
   CHANSON ST, 1994, 13 IEEE NETW GLOB CO
   Cheng K., 1996, ACM Transactions on Design Automation of Electronic Systems, V1, P57
   CLARK J, 2003, SOFTWARE IEE P, V150, P161
   Cohen J., 1988, STAT POWER ANAL BEHA
   DAHBURA AT, 1990, P IEEE, V78, P1317, DOI 10.1109/5.58319
   DARRINGER JA, 1978, COMPUTER, V11, P51, DOI 10.1109/C-M.1978.218139
   DERDERIAN K, 2005, GENETIC EVOLUTIONARY
   Derderian K, 2010, AUTOMAT SOFTW ENG, V17, P33, DOI 10.1007/s10515-009-0057-9
   Dssouli R, 1999, COMPUT NETW, V31, P1835, DOI 10.1016/S1389-1286(99)00063-8
   Duale AY, 2004, IEEE T COMPUT, V53, P614, DOI 10.1109/TC.2004.1275300
   DUALE AY, 1999, IEEE MIL COMM C P MI
   Goldberg D. E., 1992, Complex Systems, V6, P333
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   HARMAN M, 2004, 10 INT S SOFTW METR
   Hierons RM, 2004, THEOR COMPUT SCI, V323, P191, DOI 10.1016/j.tcs.2004.04.002
   Hierons RM, 2004, COMPUT NETW, V44, P681, DOI 10.1016/j.comnet.2003.06.001
   Hierons RM, 2001, INFORM SOFTWARE TECH, V43, P137, DOI 10.1016/S0950-5849(00)00145-2
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   HOGREFE D, 1991, IAM91012 U BERN, P5
   Holland J.H., 1975, Adaptation in Natural and Artificial Systems, V1st, P211
   KALAJI AS, 2010, 3 IEEE INT C SOFTW T
   KALAJI AS, 2009, TESTING
   KALAJI AS, 2009, 2 IEEE INT C SOFTW T
   Keum C, 2006, LECT NOTES COMPUT SC, V3964, P103
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOH LS, 1994, INT C NETW PROT ICNP
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   KOREL B, 2002, INT C SOFTW MAINT IC
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LEE D, 1943, COMPUTERS IEEE T, V43, P306
   LEFTICARU R, 2008, 1 INT C SOFTW TEST V
   LORENZOLI D, 2008, 30 INT C SOFTW ENG
   *MATH WORKS, 1984, MATL MATH WORKS OPT
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Nilsson R, 2006, ELECTRON NOTES THEOR, V164, P97, DOI 10.1016/j.entcs.2006.10.010
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Petrenko A, 1996, COMPUT NETWORKS ISDN, V29, P81, DOI 10.1016/S0169-7552(96)00019-0
   POHLHEIM H, 1994, GEATBX GENETIC EVOLU
   Ramalingom T, 2003, COMPUT COMMUN, V26, P1622, DOI 10.1016/S0140-3664(03)00116-6
   Sait Sadiq M, 1999, ITERATIVE COMPUTER A, P387
   SARIKAYA B, 1987, IEEE T SOFTWARE ENG, V13, P518, DOI 10.1109/TSE.1987.233197
   SHIH CH, 2005, 10 ANN IEEE INT HIGH
   SINHA A, 2007, 6 INT WORKSH SCEN ST
   SRINIVAS M, 1994, COMPUTER, V27, P17, DOI 10.1109/2.294849
   TAHAT LH, 2001, 25 ANN INT COMP SOFT
   TAI KC, 1984, 7 INT C SOFTW ENG IC
   TRACEY N, 1998, ACM SIGSOFT INT S SO
   TRACEY N, 1998, IFIP INT WORKSH DEP
   TRACEY N, 1998, 13 IEEE INT C AUT SO
   URAL H, 1991, IEEE T COMMUN, V39, P514, DOI 10.1109/26.81739
   Ural H, 2000, COMPUT COMMUN, V23, P609, DOI 10.1016/S0140-3664(99)00227-3
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   WEISER M, 1981, 5 INT C SOFTW ENG IC
   Wenzel I, 2008, COMM COM INF SC, V17, P430
   Wong WE, 2009, INFORM SOFTWARE TECH, V51, P1505, DOI 10.1016/j.infsof.2009.06.005
   ZHANG J, 2004, 2 INT C SOFTW ENG FO
   Zhang J, 2008, LECT NOTES COMPUT SC, V4171, P539
NR 66
TC 44
Z9 56
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2011
VL 53
IS 12
BP 1297
EP 1318
DI 10.1016/j.infsof.2011.06.004
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 847QF
UT WOS:000296986900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU van Valkenhoef, G
   Tervonen, T
   de Brock, B
   Postmus, D
AF van Valkenhoef, Gert
   Tervonen, Tommi
   de Brock, Bert
   Postmus, Douwe
TI Quantitative release planning in extreme programming
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Extreme programming; Project management; Customer role; Integer
   programming
ID SOFTWARE-DEVELOPMENT
AB Context: Extreme Programming (XP) is one of the most popular agile software development methodologies. XP is defined as a consistent set of values and practices designed to work well together, but lacks practices for project management and especially for supporting the customer role. The customer representative is constantly under pressure and may experience difficulties in foreseeing the adequacy of a release plan.
   Objective: To assist release planning in XP by structuring the planning problem and providing an optimization model that suggests a suitable release plan.
   Method: We develop an optimization model that generates a release plan taking into account story size, business value, possible precedence relations, themes, and uncertainty in velocity prediction. The running-time feasibility is established through computational tests. In addition, we provide a practical heuristic approach to velocity estimation.
   Results: Computational tests show that problems with up to six themes and 50 stories can be solved exactly. An example provides insight into uncertainties affecting velocity, and indicates that the model can be applied in practice.
   Conclusion: An optimization model can be used in practice to enable the customer representative to take more informed decisions faster. This can help adopting XP in projects where plan-driven approaches have traditionally been used. (C) 2011 Elsevier B.V. All rights reserved.
C1 [van Valkenhoef, Gert; Postmus, Douwe] Univ Med Ctr Groningen, Dept Epidemiol, NL-9700 RB Groningen, Netherlands.
   [van Valkenhoef, Gert; de Brock, Bert] Univ Groningen, Fac Econ & Business, NL-9700 AB Groningen, Netherlands.
   [Tervonen, Tommi] Erasmus Univ, Inst Econometr, Rotterdam, Netherlands.
C3 University of Groningen; University of Groningen; Erasmus University
   Rotterdam - Excl Erasmus MC; Erasmus University Rotterdam
RP van Valkenhoef, G (corresponding author), Univ Med Ctr Groningen, Dept Epidemiol, POB 30-001, NL-9700 RB Groningen, Netherlands.
EM g.h.m.van.valkenhoef@rug.nl; tervonen@ese.eur.nl; e.o.de.brock@rug.nl;
   d.postmus@epi.umcg.nl
RI Postmus, Douwe/AAF-5454-2021; van Valkenhoef, Gert/H-2993-2019
OI Postmus, Douwe/0000-0002-9458-7038; van Valkenhoef,
   Gert/0000-0001-9231-2770
FU Dutch Top Institute Pharma [T6-202]
FX This study was partly supported by the Escher project (T6-202), which is
   a project of the Dutch Top Institute Pharma.
CR Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Al-Emran A, 2010, INFORM SOFTWARE TECH, V52, P446, DOI 10.1016/j.infsof.2009.11.003
   [Anonymous], 1960, IRE Trans. Commun. Syst., DOI DOI 10.1109/TCOM.1960.1097606
   [Anonymous], 2005, Extreme programming explained: Embrace change
   Beck K., 2001, Planning extreme programming
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berkelaar M., IPSOLVE 5 5 OPEN SOU
   Boehm B., 2003, BALANCING AGILITY DI
   Bourque P, 2007, J COMPUT SCI TECH-CH, V22, P348, DOI 10.1007/s11390-007-9051-5
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cohn M., 2005, RC MARTIN SERIES
   Denne M, 2004, IEEE SOFTWARE, V21, P39, DOI 10.1109/MS.2004.1293071
   Denne M., 2003, Software by Numbers: Low-Risk, High-Return Development
   DUDZINSKI K, 1987, EUR J OPER RES, V28, P3, DOI 10.1016/0377-2217(87)90165-2
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Grisham PaulS., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1
   Hartmann D, 2006, AGILE 2006, Proceedings, P126, DOI 10.1109/AGILE.2006.17
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Keeney R. L., 1976, DECISION MULTIPLE OB
   Koponen J., 2008, THESIS
   Li C, 2010, REQUIR ENG, V15, P375, DOI 10.1007/s00766-010-0104-x
   Martin A, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P42
   Miranda E, 2002, COMPUTER, V35, P73, DOI 10.1109/2.989933
   *NASA, 1990, MAN HDB SOFTW DEV
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   Pisinger D, 1997, OPER RES, V45, P758, DOI 10.1287/opre.45.5.758
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Stapleton J., 1997, DSDM DYNAMIC SYSTEMS
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   van Valkenhoef G., 2010, P 11 INT C AG SOFTW, DOI [10.1007/978-3-642-13054-0_25, DOI 10.1007/978-3-642-13054-0_25]
   Wood WA, 2003, IEEE SOFTWARE, V20, P30, DOI 10.1109/MS.2003.1196317
NR 40
TC 18
Z9 21
U1 3
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2011
VL 53
IS 11
BP 1227
EP 1235
DI 10.1016/j.infsof.2011.05.007
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 820CQ
UT WOS:000294883500005
DA 2024-07-18
ER

PT J
AU Boden, A
   Müller, C
   Nett, B
AF Boden, Alexander
   Mueller, Claudia
   Nett, Bernhard
TI Conducting a Business Ethnography in Global Software Development
   projects of small German enterprises
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Global Software Engineering; Qualitative research; Business Ethnography;
   Offshoring; Small to medium-sized enterprises; Methodology
AB Context: Studying work practices in the context of Global Software Development (GSD) projects entails multiple opportunities and challenges for the researchers. Understanding and tackling these challenges requires a careful and rigor application of research methods.
   Objective: We want to contribute to the understanding of the challenges of studying GSD by reflecting on several obstacles we had to deal with when conducting ethnographically-informed research on offshoring in German small to medium-sized enterprises.
   Method: The material for this paper is based on reflections and field notes from two research projects: an exploratory ethnographic field study, and a study that was framed as a Business Ethnography. For the analysis, we took a Grounded Theory-oriented coding and analysis approach in order to identify issues and challenges documented in our research notes.
   Results: We introduce the concept of Business Ethnography and discuss our experiences of adapting and implementing this action research concept for our study. We identify and discuss three primary issues: understanding complex global work practices from a local perspective, adapting to changing interests of the participants, and dealing with micro-political frictions between the cooperating sites.
   Conclusions: We identify common interests between the researchers and the companies as a challenge and chance for studies on offshoring. Building on our experiences from the field, we argue for an active conceptualization of struggles and conflicts in the field as well as for extending the role of the ethnographer to that of a learning mediator. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Boden, Alexander; Mueller, Claudia; Nett, Bernhard] Univ Siegen, D-57076 Siegen, Germany.
C3 Universitat Siegen
RP Boden, A (corresponding author), Univ Siegen, Holderlinstr 3, D-57076 Siegen, Germany.
EM alexander.boden@uni-siegen.de; claudia.mueller@uni-siegen.de;
   bernhard.nett@uni-siegen.de
FU German Research Foundation (DFG)
FX This paper was supported by the German Research Foundation (DFG) within
   the project "ARTOS - Articulation work in offshoring projects of small
   and medium-sized enterprises of the software branch"
   (http://www.artos.uni-siegen.de).
CR ANDERSON RJ, 1997, ENCY MICROCOMPUTING, P159
   [Anonymous], 1998, ESSENTIAL PEIRCE
   [Anonymous], ICSE WORKSH BEG BORR
   [Anonymous], ENCY SOFTWARE ENG
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Argyris C., 1985, ACTION SCI
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   BODEN A, SOFTWARE MA IN PRESS
   Boden A, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P235
   Boden A, 2010, IEEE SOFTWARE, V27, P58, DOI 10.1109/MS.2009.113
   Boden A, 2009, ECSCW 2009: PROCEEDINGS OF THE 11TH EUROPEAN CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P123, DOI 10.1007/978-1-84882-854-4_7
   Bodker K., 2004, PARTICIPATORY IT DES
   Dittrich Y, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P243
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Dourish P., 2006, P SIGCHI C HUM FACT, P541, DOI [DOI 10.1145/1124772.1124855, https://doi.org/10.1145/1124772.1124855]
   Fischer G, 2000, KNOWL-BASED SYST, V13, P527, DOI 10.1016/S0950-7051(00)00065-4
   Floyd C., 1992, Software Development and Reality Construction, P86, DOI DOI 10.1007/978-3-642-76817-0_10
   Gobo G., 2008, DOING ETHNOGRAPHY
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Hine C., 2000, Virtual ethnography
   Hofmann B., 2003, Advances in Learning Software Organizations. 4th International Workshop, LSO 2002. Revised Papers. (Lecture Notes in Comput. Sci. Vol.2640), P25
   KING WR, 2008, MIS Q, V32
   KNOBLAUCH H, 2001, SOZIALER SINN, P123
   NETT B, 1998, ENDE GROSSER THEORIE
   NETT B, 2010, THESIS U SIEGEN SIEG
   Randall D., 2007, Fieldwork for design: theory and practice
   SCHUTZ A, 1983, STRUCTURES LIFEWORLD
   Shapiro D., 1994, P 1994 ACM C COMPUTE, P417, DOI DOI 10.1145/192844.193064
   STEVENS G, 2009, SCHNITTE DURCH HIER
   Strauss AL., 2017, Social organization of medical work
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Wittel A., 2000, Forum: Qualitative Social Research, V1, DOI DOI 10.17169/FQS-1.1.1131
   Wulf V., 1995, DIS '95. Symposium on Designing Interactive Systems: Processes, Practices, Medthods, and Techniques. Conference Proceedings, P55, DOI 10.1145/225434.225441
NR 34
TC 8
Z9 14
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 1012
EP 1021
DI 10.1016/j.infsof.2011.01.009
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 795DC
UT WOS:000292950700010
DA 2024-07-18
ER

PT J
AU Höst, M
   Orucevic-Alagic, A
AF Host, Martin
   Orucevic-Alagic, Alma
TI A systematic review of research on open source software in commercial
   software product development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Open source software; Proprietary; Commercial; Component based software
   engineering; Business models
AB Context: The popularity of the open source software development in the last decade, has brought about an increased interest from the industry on how to use open source components, participate in the open source community, build business models around this type of software development, and learn more about open source development methodologies. There is a need to understand the results of research in this area.
   Objective: Since there is a need to understand conducted research, the aim of this study is to summarize the findings of research that has ben carried out on usage of open source components and development methodologies by the industry, as well as companies' participation in the open source community.
   Method: Systematic review through searches in library databases and manual identification of articles from the open source conference. The search was first carried out in May 2009 and then once again in May 2010.
   Results: In 2009, 237 articles were first found, from which 19 were selected based on content and quality, and in 2010, 76 new articles were found from which four were selected. Twenty three articles were identified in total.
   Conclusions: The articles could be divided into four categories: open source as part of component based software engineering, business models with open source in commercial organization, company participation in open source development communities, and usage of open source processes within a company. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Host, Martin; Orucevic-Alagic, Alma] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 Lund University
RP Höst, M (corresponding author), Lund Univ, Dept Comp Sci, POB 118, SE-22100 Lund, Sweden.
EM martin.host@cs.lth.se; alma.orucevic-alagic@cs.lth.se
RI Höst, Martin/KDN-4323-2024
OI Höst, Martin/0000-0002-9360-8693; Orucevic-Alagic,
   Alma/0000-0001-5639-8167
FU Industrial Excellence Center EASE - Embedded Applications Software
   Engineering
FX This work was partly funded by the Industrial Excellence Center EASE -
   Embedded Applications Software Engineering, (http://ease.cs.lth.se).
CR Abdelkafi N, 2009, MANAGE DECIS, V47, P1610, DOI 10.1108/00251740911004718
   [Anonymous], 2001, CATHEDRAL BAZAAR
   CHEN L, 2008, P EV ASS SOFTW ENG E
   DIESTE O, 2007, EMPIR SOFTW ENG, V14, P513
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Feller J., 2002, Understanding Open Source Software development
   Goode S, 2005, INFORM MANAGE-AMSTER, V42, P669, DOI 10.1016/j.im.2004.01.011
   HOST M, 2010, P EV ASS SOFTW ENG E
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Krishnamurthy S., 2006, Knowledge Technology & Policy, V18, P17, DOI 10.1007/s12130-006-1002-x
   Leavesley GH, 2002, HYDROL PROCESS, V16, P173, DOI 10.1002/hyp.344
   Lerner J, 2001, EUR ECON REV, V45, P819, DOI 10.1016/S0014-2921(01)00124-6
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Stol K., 2010, FLOSS-3, P17, DOI [10.1145/1833272.1833276, DOI 10.1145/1833272.1833276]
   Stol KJ, 2009, INT FED INFO PROC, V299, P156
   Weber Steve, 2004, The Success of Open Source, DOI DOI 10.4159/9780674044999
NR 16
TC 33
Z9 36
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2011
VL 53
IS 6
SI SI
BP 616
EP 624
DI 10.1016/j.infsof.2010.12.009
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 762FS
UT WOS:000290460900006
DA 2024-07-18
ER

PT J
AU Hoda, R
   Noble, J
   Marshall, S
AF Hoda, Rashina
   Noble, James
   Marshall, Stuart
TI The impact of inadequate customer collaboration on self-organizing Agile
   teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Customer collaboration; Agile Undercover;
   Grounded Theory
ID SOFTWARE-DEVELOPMENT; GROUNDED THEORY; SUCCESS FACTORS
AB Context: Customer collaboration is a vital feature of Agile software development.
   Objective: This article addresses the importance of adequate customer involvement on Agile projects, and the impact of different levels of customer involvement on real-life Agile projects.
   Method: We conducted a Grounded Theory study involving 30 Agile practitioners from 16 software development organizations in New Zealand and India, over a period of 3 years.
   Results: We discovered that Lack of Customer Involvement was one of the biggest challenges faced by Agile teams. Customers were not as involved on these Agile projects as Agile methods demand. We describe the causes of inadequate customer collaboration, its adverse consequences on self-organizing Agile teams, and Agile Undercover - a set of strategies used by the teams to practice Agile despite insufficient or ineffective customer involvement.
   Conclusion: Customer involvement is important on Agile projects. Inadequate customer involvement causes adverse problems for Agile teams. The Agile Undercover strategies we've identified can assist Agile teams facing similar lack of customer involvement. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Hoda, Rashina; Noble, James; Marshall, Stuart] Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington, New Zealand.
C3 Victoria University Wellington
RP Hoda, R (corresponding author), Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington, New Zealand.
EM rashina@ecs.vuw.ac.nz; kjx@ecs.vuw.ac.nz; stuart@ecs.vuw.ac.nz
RI Marshall, Stuart R/M-6350-2016
OI Hoda, Rashina/0000-0001-5147-8096; Noble, James/0000-0001-9036-5692
FU Agile Alliance academic grant; NZ BuildIT PhD scholarship
FX Our thanks to all the participants. This research is generously
   supported by an Agile Alliance academic grant and a NZ BuildIT PhD
   scholarship.
CR Adolph S., 2008, Conference of the Center for Advanced Studies on Collaborative Research CASCON, P166, DOI DOI 10.1145/1463788.1463806
   ALLAN G, 2003, EJBRM, V2
   [Anonymous], 2003, THESIS U OSLO NORWAY
   [Anonymous], 2003, 18 ANN ACM SIGPLAN C
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], P 18 ANN ACM SIGPLAN
   [Anonymous], 2005, GROUNDED THEORY PERS
   [Anonymous], 2001, SOFTW DEV MAG
   [Anonymous], 2008, ELECT J BUSINESS RES
   Augustine S, 2005, COMMUN ACM, V48, P85, DOI 10.1145/1101779.1101781
   BEAUMONT S, 2010, DEFINITION READY
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   BOEHM B, 2003, XP AGILE UNIVERSE 20, P1
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Chau T., 2004, Knowledge Sharing in Agile Software Teams
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   FRASER S, 2004, OOPSLA, P148
   Glaser B. G., 2004, FORUM QUAL SOC RES, V5
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Glazer B., 1978, Theoretical sensitivity: Advances in the methodology of grounded theory
   GRISHAM PS, 2005, HSSE 2005, P1
   HANSSEN GK, 2006, ISESE 06, P164
   Highsmith J. A., 2004, Agile Project Management: Creating Innovative Products
   Highsmith JamesA., 2000, ADAPTIVE SOFTWARE DE
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   HODA R, 2010, SPLASH OOPSLA2010
   Hoda R, 2010, LECT NOTES BUS INF P, V48, P73
   Judy K.H., 2008, P 41 ANN HAW INT C S
   Kan MM, 2004, LEADERSHIP QUART, V15, P467, DOI 10.1016/j.leaqua.2004.05.003
   Korkala M, 2006, AGILE 2006, PROCEEDINGS, P76, DOI 10.1109/AGILE.2006.1
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Lowery M, 2007, AGILE 2007, Proceedings, P328, DOI 10.1109/AGILE.2007.51
   Mangalaraj G, 2009, EUR J INFORM SYST, V18, P344, DOI 10.1057/ejis.2009.23
   Mann C, 2005, AGILE 2005, PROCEEDINGS, P70, DOI 10.1109/ADC.2005.1
   Martin A, 2009, AGILE 2009 CONFERENCE, P33, DOI 10.1109/AGILE.2009.68
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Misra SC, 2009, J SYST SOFTWARE, V82, P1869, DOI 10.1016/j.jss.2009.05.052
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Palmer S.R., 2001, A Practical Guide to Feature-Driven Development, V1st
   Parry KW, 1998, LEADERSHIP QUART, V9, P85, DOI 10.1016/S1048-9843(98)90043-1
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   SCHWABER K, SCRUM GUIDE SCRUM AL
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Stapleton J., 1997, DYNAMIC SYSTEMS DEV
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
NR 52
TC 133
Z9 152
U1 7
U2 95
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 521
EP 534
DI 10.1016/j.infsof.2010.10.009
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 742DI
UT WOS:000288919900009
DA 2024-07-18
ER

PT J
AU Domínguez, E
   Lloret, J
   Pérez, B
   Rodríguez, A
   Rubio, AL
   Zapata, MA
AF Dominguez, Eladio
   Lloret, Jorge
   Perez, Beatriz
   Rodriguez, Aurea
   Rubio, Angel L.
   Zapata, Maria A.
TI Evolution of XML schemas and documents from stereotyped UML class
   models: A traceable approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model evolution and maintenance; UML profiles; XML
ID TRANSFORMATION
AB Context: UML and XML are two of the most commonly used languages in software engineering processes. One of the most critical of these processes is that of model evolution and maintenance. More specifically, when an XML schema is modified, the changes should be propagated to the corresponding XML documents, which must conform with the new, modified schema.
   Objective: The goal of this paper is to provide an evolution framework by which the XML schema and documents are incrementally updated according to the changes in the conceptual model (expressed as a UML class model). In this framework, we include the transformation and evolution of UML profiles specified in UML class models because they are widely used to capture domain specific semantics.
   Method: We have followed a metamodeling approach which allowed us to achieve a language independent framework, not tied to the specific case of UML-XML. Besides, our proposal considers a traceability setting as a key aspect of the transformation process which allows changes to be propagated from UML class models to both XML schemas and documents.
   Results: As a general framework, we propose a Generic Evolution Architecture (GEA) for the model-driven engineering context. Within this architecture and for the particular case of the UML-to-XML setting, our contribution is a UML-to-XML framework that, to our knowledge, is the only approach that incorporates the following four characteristics. Firstly, the evolution tasks are carried out in a conceptual model. Secondly, our approach includes the transformation to XML of UML profiles. Thirdly, the proposal allows stereotyped UML class models to be evolved, propagating changes to XML schemas and documents in such a way that the different elements are kept in synch. Finally, we propose a traceability setting that enables evolution tasks to be performed seamlessly.
   Conclusions: Generic frameworks such as that proposed in this paper help to reduce the work overload experienced by software engineers in keeping different software artifacts synchronized. (c) 2010 Elsevier B.V. All rights reserved.
C1 [Perez, Beatriz; Rubio, Angel L.] Univ La Rioja, Dpto Matemat & Computac, E-26004 La Rioja, Spain.
   [Dominguez, Eladio; Lloret, Jorge; Rodriguez, Aurea; Zapata, Maria A.] Univ Zaragoza, Dpto Informat & Ingn Sistemas, E-50009 Zaragoza, Spain.
C3 Universidad de La Rioja; University of Zaragoza
RP Rubio, AL (corresponding author), Univ La Rioja, Dpto Matemat & Computac, E-26004 La Rioja, Spain.
EM noesis@unizar.es; jlloret@unizar.es; beatriz.perez@unirioja.es;
   arv852@unizar.es; arubio@unirioja.es; mazapata@unizar.es
RI Zapata, María Antonia/L-7290-2014; Pérez, Beatriz/K-2176-2014; Garcia,
   Angel Luis Rubio/X-6828-2019
OI Zapata, María Antonia/0000-0002-9531-1586; Pérez,
   Beatriz/0000-0001-9235-7311; Garcia, Angel Luis
   Rubio/0000-0002-3052-6404; Dominguez Murillo, Eladio/0000-0002-3270-899X
FU Spanish Ministry of Science and Innovation [TIN2009-13584]; Spanish
   Ministry of Industry, Tourism and Commerce [TS1-020302-2008-8];
   Government of Aragon [PI108/08]
FX The authors would like to thank the referees for their valuable comments
   that have been of great help in improving the paper. This work has been
   partially supported by Spanish Ministry of Science and Innovation,
   Project TIN2009-13584, by the Spanish Ministry of Industry, Tourism and
   Commerce, Project LISBioBank (TS1-020302-2008-8) and by the Government
   of Aragon, Project LIS (PI108/08).
CR [Anonymous], SOFTWARE SYSTEM MODE
   [Anonymous], FORMAL20090202 OMG
   Bernauer M, 2004, LECT NOTES COMPUT SC, V3140, P440
   BERNAUER M, 2003, REPRESENTING XML SCH
   BERTLINO A, 2007, D09 IMSGL ORG
   BRIAND LC, 2006, SCE0606 CARL U
   CARLSON D, 2001, AW OBJ TECHNOL S, pR17
   CARLSON D, 2001, MODELING XML VOCAB 3
   CARLSON D, 2001, MODELING XML VOCAB 2
   CARLSON D, 2007, IMPORTING MIF UML GE
   Cortés M, 2006, J OBJECT TECHNOL, V5, P83, DOI 10.5381/jot.2006.5.1.a3
   *CTR EXC TRAC, 2006, GRAND CHALL TRAC
   CURINO C, 2009, C OBJ OR PROGR SYST
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   DAMODARAN S, 2005, P XML 2005 C EXH ATL
   DEVRIES D, 2004, WORKSH EV CHANG DAT, P429
   Dominguez E, 2007, INFORM SYST, V32, P181, DOI 10.1016/j.is.2005.07.001
   Domínguez E, 2005, LECT NOTES COMPUT SC, V3588, P343
   Dominguez E, 2010, METHOD INFORM MED, V49, P571, DOI 10.3414/ME09-01-0038
   Domínguez E, 2008, DATA KNOWL ENG, V65, P419, DOI 10.1016/j.datak.2007.12.001
   Domínguez E, 2007, LECT NOTES COMPUT SC, V4831, P184
   Domínguez E, 2007, LECT NOTES COMPUT SC, V4802, P44
   Domínguez E, 2006, LECT NOTES COMPUT SC, V4243, P48
   DRIVALOS N, 2008, ECMDA TW08
   Elmasri R, 2005, DATA KNOWL ENG, V54, P57, DOI 10.1016/j.datak.2004.10.003
   Elmasri R., 2007, Fundamentals of Database Systems, V5th
   ESPINOZA A, 2008, CEE SET WIP 2008 P B, P41
   Evans AS, 1999, 2ND IEEE WORKSHOP ON INDUSTRIAL STRENGTH FORMAL SPECIFICATION TECHNIQUES - PROCEEDINGS, P102, DOI 10.1109/WIFT.1998.766304
   Galvao I, 2007, IEEE INT ENTERP DIST, P313, DOI 10.1109/EDOC.2007.42
   Gogolla M, 1999, LECT NOTES COMPUT SC, V1618, P92
   Guerrini G., 2005, WIDM, P39, DOI DOI 10.1145/1097047.1097056
   HEIKKINEN B, 2002, COMPONENT BASED MODE
   HUCKA M, 2000, SCHUCS UML BASED APP
   Hunter D., 2004, BEGINNING XML, V3rd
   JECKLE M, 2001, P 2 INT C ADV INFR E
   KLETTKE M, 2007, WORKSH P DAT BUS TEC, P53
   KRAMER DK, 2001, THESIS WORCESTER POL
   KRUMBEIN T, 2003, THESIS HTWK LEIPZIG
   Krumbein Tobias., 2003, Berliner XML Tage, V2003, P213
   KURTEV I, 2005, THESIS U TWENTE
   KURTEV I, 2003, P FOR SPEC DES LANG
   Lerner BS, 2000, ACM T DATABASE SYST, V25, P83, DOI 10.1145/352958.352983
   MAIER E, 2002, XML C EXP BALT CONV
   MALETIC JI, 2005, TEFSE 05, P67
   MARCHETTI E, ELEKTROTECHNIK INFOR, V122
   MASSONI T, 2005, P 19 BRAZ S SOFTW EN, P152
   Miller I., 2003, MDA GUIDE VERSION 1
   NARAYANAN K, 2005, P 4 WORKSH SOFTW MOD
   *OASIS, 2001, EBXML BUS PROC SPEC
   *OMG, PTC031004 OMG
   *OMG, 2009, FORMAL20090204 OMG
   *OMG, 2002, AD020410 OMG
   PAIGE R, 2008, ECMDA TW08
   PEREZ B, 2010, J BIOMEDICAL INFORMA, DOI DOI 10.1016/JJBI.2010.02.009
   Peters RJ, 1997, ACM T DATABASE SYST, V22, P75, DOI 10.1145/244810.244813
   PORRES I, 2007, P CAISE 07 FOR TROND
   Porres I, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P210, DOI 10.1109/ECBS.2008.35
   PROVOST W, 2002, UML W3C XML SCHEMA D
   PROVOST W, 2002, ENFORCING ASS CARDIN
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   RODDICK JF, 1995, INFORM SOFTWARE TECH, V37, P383, DOI 10.1016/0950-5849(95)91494-K
   ROSE LM, 2009, JOINT MODELS 2009 WO
   Routledge N., 2002, 13 AUSTR DAT C ADC20
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sonneck G, 2002, LECT NOTES COMPUT SC, V2455, P294
   Suny┬u┬ G., 2001, LNCS, V2185, P134
   *W3C, 2004, XML SCHEM PART 0 PRI
   WU I, 2002, P 19 INT S AUT ROB C, P317
NR 68
TC 17
Z9 18
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2011
VL 53
IS 1
BP 34
EP 50
DI 10.1016/j.infsof.2010.08.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 692QV
UT WOS:000285171100004
DA 2024-07-18
ER

PT J
AU Oliveira, ALI
   Braga, PL
   Lima, RMF
   Cornélio, ML
AF Oliveira, Adriano L. I.
   Braga, Petronio L.
   Lima, Ricardo M. F.
   Cornelio, Marcio L.
TI GA-based method for feature selection and parameters optimization for
   machine learning regression applied to software effort estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Genetic algorithms; Feature selection;
   Support vector regression; Regression
ID EFFORT PREDICTION
AB Context: In software industry, project managers usually rely on their previous experience to estimate the number men/hours required for each software project. The accuracy of such estimates is a key factor for the efficient application of human resources. Machine learning techniques such as radial basis function (RBF) neural networks, multi-layer perceptron (MLP) neural networks, support vector regression (SVR), bagging predictors and regression-based trees have recently been applied for estimating software development effort. Some works have demonstrated that the level of accuracy in software effort estimates strongly depends on the values of the parameters of these methods. In addition, it has been shown that the selection of the input features may also have an important influence on estimation accuracy.
   Objective: This paper proposes and investigates the use of a genetic algorithm method for simultaneously (1) select an optimal input feature subset and (2) optimize the parameters of machine learning methods, aiming at a higher accuracy level for the software effort estimates.
   Method: Simulations are carried out using six benchmark data sets of software projects, namely, Desharnais, NASA, COCOMO, Albrecht, Kemerer and Koten and Gray. The results are compared to those obtained by methods proposed in the literature using neural networks, support vector machines, multiple additive regression trees, bagging, and Bayesian statistical models.
   Results: In all data sets, the simulations have shown that the proposed GA-based method was able to improve the performance of the machine learning methods. The simulations have also demonstrated that the proposed method outperforms some recent methods reported in the recent literature for software effort estimation. Furthermore, the use of GA for feature selection considerably reduced the number of input features for five of the data sets used in our analysis.
   Conclusions: The combination of input features selection and parameters optimization of machine learning methods improves the accuracy of software development effort. In addition, this reduces model complexity, which may help understanding the relevance of each input feature. Therefore, some input parameters can be ignored without loss of accuracy in the estimations. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Oliveira, Adriano L. I.; Braga, Petronio L.; Lima, Ricardo M. F.; Cornelio, Marcio L.] Univ Fed Pernambuco, Ctr Informat, BR-50732970 Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP Oliveira, ALI (corresponding author), Univ Fed Pernambuco, Ctr Informat, BR-50732970 Recife, PE, Brazil.
EM alio@cin.ufpe.br; plb@cin.ufpe.br; rmfl@cin.ufpe.br; mlc2@cin.ufpe.br
RI Ines, INCT/J-9550-2013; Oliveira, Adriano L. I./A-3532-2008; Oliveira,
   Adriano/C-2046-2017
OI Oliveira, Adriano/0000-0002-5614-229X
FU CNPq; FACEPE [573964/2008-4, APQ-1037-1.03/08]; Petrobras
FX This work was partially supported by the National Institute of Science
   and Technology for Software Engineering (INES), funded by CNPq and
   FACEPE, grants 573964/2008-4 and APQ-1037-1.03/08 and by Petrobras.
CR Agarwal R., 2001, Software Engineering Notes, V26, P60, DOI 10.1145/505482.505491
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Boehm BW., 1981, Software Engineering Economics
   Braga PL, 2007, PROC INT C TOOLS ART, P181, DOI 10.1109/ICTAI.2007.172
   Braga PL, 2007, IEEE IJCNN, P1595, DOI 10.1109/IJCNN.2007.4371196
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Charette RN, 2005, IEEE SPECTRUM, V42, P42, DOI 10.1109/MSPEC.2005.1502528
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Tronto IFD, 2008, J SYST SOFTWARE, V81, P356, DOI 10.1016/j.jss.2007.05.011
   Elish MO, 2009, EXPERT SYST APPL, V36, P10774, DOI 10.1016/j.eswa.2009.02.013
   Engelbrecht A.P., 2006, Fundamentals of computational swarm intelligence
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Hassoun MH., 1995, FUNDAMENTALS ARTIFIC
   Haykin S., 1999, NEURAL NETWORKS COMP, DOI [10.1017/S0269888998214044, DOI 10.1017/S0269888998214044]
   Huang CL, 2006, EXPERT SYST APPL, V31, P231, DOI 10.1016/j.eswa.2005.09.024
   Ian E.F., 2005, Data Mining, Practical Machine Learning Tools and Technologies
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kumar KV, 2008, J SYST SOFTWARE, V81, P1853, DOI 10.1016/j.jss.2007.12.793
   Li Q, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P223
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   LING S, 2008, EXPERT SYSTEMS APPL, V35, P1817
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Quinlan J.R., 1992, P AI 92, P343, DOI DOI 10.1142/9789814536271
   Shin M, 2000, IEEE T SOFTWARE ENG, V26, P567, DOI 10.1109/32.852743
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   *STAND GROUP, 2004, STAND PROJ SUCC RAT
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P1056, DOI 10.1016/j.infsof.2006.01.001
   WANG Y, 1997, INDUCING MODEL TREES
NR 33
TC 129
Z9 136
U1 0
U2 33
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2010
VL 52
IS 11
SI SI
BP 1155
EP 1166
DI 10.1016/j.infsof.2010.05.009
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 663RL
UT WOS:000282905700002
DA 2024-07-18
ER

PT J
AU Alves, V
   Niu, N
   Alves, C
   Valença, G
AF Alves, Vander
   Niu, Nan
   Alves, Carina
   Valenca, George
TI Requirements engineering for software product lines: A systematic
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product lines; Requirements engineering; Systematic literature
   review
AB Context: Software product line engineering (SPLE) is a growing area showing promising results in research and practice. In order to foster its further development and acceptance in industry, it is necessary to assess the quality of the research so that proper evidence for adoption and validity are ensured. This holds in particular for requirements engineering (RE) within SPLE, where a growing number of approaches have been proposed.
   Objective: This paper focuses on RE within SPLE and has the following goals: assess research quality, synthesize evidence to suggest important implications for practice, and identify research trends, open problems, and areas for improvement.
   Method: A systematic literature review was conducted with three research questions and assessed 49 studies, dated from 1990 to 2009.
   Results: The evidence for adoption of the methods is not mature, given the primary focus on toy examples. The proposed approaches still have serious limitations in terms of rigor, credibility, and validity of their findings. Additionally, most approaches still lack tool support addressing the heterogeneity and mostly textual nature of requirements formats as well as address only the proactive SPLE adoption strategy.
   Conclusions: Further empirical studies should be performed with sufficient rigor to enhance the body of evidence in RE within SPLE. In this context, there is a clear need for conducting studies comparing alternative methods. In order to address scalability and popularization of the approaches, future research should be invested in tool support and in addressing combined SPLE adoption strategies. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Alves, Vander] Univ Brasilia, Dept Ciencia Comp, BR-70910900 Brasilia, DF, Brazil.
   [Niu, Nan] Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
   [Alves, Carina; Valenca, George] Univ Fed Pernambuco, Ctr Informat, BR-50740540 Recife, PE, Brazil.
C3 Universidade de Brasilia; Mississippi State University; Universidade
   Federal de Pernambuco
RP Alves, V (corresponding author), Univ Brasilia, Dept Ciencia Comp, Campus Darcy Ribeiro, BR-70910900 Brasilia, DF, Brazil.
EM valves@unb.br; niu@cse.msstate.edu; cfa@cin.ufpe.br; gavs@cin.ufpe.br
OI Alves, Vander/0000-0003-1573-048X
CR Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   Atkins D, 2004, BMJ, V328
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KANG KC, 1990, CMUSEI90TR21 CARN ME
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kitchenham B, 2004, Procedures for Undertaking Systematic Reviews
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Mannion M, 1998, IEEE SOFTWARE, V15, P95, DOI 10.1109/52.646889
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   NEIVA DFS, 2009, THESIS U FEDERAL PER
   Nicolás J, 2009, INFORM SOFTWARE TECH, V51, P1291, DOI 10.1016/j.infsof.2009.04.001
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   PERRY DE, 2006, P 28 INT C SOFTW ENG, P1045
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Tichy WF, 2007, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSECOMPANION.2007.33
   Zave P, 1997, ACM COMPUT SURV, V29, P315, DOI 10.1145/267580.267581
NR 27
TC 111
Z9 116
U1 0
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2010
VL 52
IS 8
BP 806
EP 820
DI 10.1016/j.infsof.2010.03.014
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 614DI
UT WOS:000279035100003
DA 2024-07-18
ER

PT J
AU Gupta, A
   Li, JY
   Conradi, R
   Ronneberg, H
   Landre, E
AF Gupta, Anita
   Li, Jingyue
   Conradi, Reidar
   Ronneberg, Harald
   Landre, Einar
TI Change profiles of a reused class framework vs. two of its applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software reuse; Software change profile; Case study; Class framework
ID SOFTWARE MAINTENANCE; QUALITY
AB Software reuse is expected to improve software productivity and quality. Although many empirical studies have investigated the benefits and challenges of software reuse from development viewpoints, few studies have explored reuse from the perspective of maintenance. This paper reports on a case study that compares software changes during the maintenance and evolution phases of a reused Java class framework with two applications that are reusing the framework. The results reveal that: (I) The reused framework is more stable, in terms of change density, than the two applications that are reusing it. (2) The reused framework has profiles for change types that are similar to those of the applications, where perfective changes dominate. (3) The maintenance and evolution lifecycle of both the reused framework and its applications is the same: initial development, followed by a stage with extending capabilities and functionality to meet user needs, then a stage in which only minor defect repairs are made, and finally, phase-out. However, the reused framework goes faster from the stage of extending capabilities to the stage in which only minor defect repairs are made than its applications. (4) We have validated that several factors, such as are functionalities, development practice, complexity, size, and age, have affected the change densities and change profiles of the framework and applications. Thus, all these factors must be considered to predict change profiles in the maintenance and evolution phase of software. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Gupta, Anita; Li, Jingyue; Conradi, Reidar] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, IDI, N-7034 Trondheim, Norway.
   [Ronneberg, Harald; Landre, Einar] StatoilHydro ASA, KTJ IT, Stavanger, Norway.
C3 Norwegian University of Science & Technology (NTNU); Equinor
RP Gupta, A (corresponding author), Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, IDI, N-7034 Trondheim, Norway.
EM anitaash@idi.ntnu.no; jingyue@idi.ntnu.no; conradi@idi.ntnu.no;
   haro@statoilhydro.com; einla@statoilhydro.com
CR ABRAN A, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P104, DOI 10.1109/ICSM.1991.160315
   Algestam H, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P65, DOI 10.1109/APSEC.2002.1182976
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   Burch E, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P40, DOI 10.1109/ICSM.1997.624229
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   CHAPIN N, 1985, AFIPS C P, V54, P328
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Evanco W. M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P179, DOI 10.1109/METRIC.1999.809739
   FENTON N., 1996, SOFTWARE METRICS, V2nd
   Frakes WB, 2001, J SYST SOFTWARE, V57, P99, DOI 10.1016/S0164-1212(00)00121-7
   Gefen D, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P134, DOI 10.1109/ICSM.1996.564998
   Gupta A, 2009, EMPIR SOFTW ENG, V14, P227, DOI 10.1007/s10664-008-9081-9
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   JORGENSEN M, 1995, ACM SIGSOFT SOFTWARE, V20, P71
   Kamiya T, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P253, DOI 10.1109/ISORC.1999.776386
   Kemerer CF, 1997, J SOFTW MAINT-RES PR, V9, P235, DOI 10.1002/(SICI)1096-908X(199707/08)9:4<235::AID-SMR153>3.0.CO;2-3
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Krogstie J, 2006, INFORM SOFTWARE TECH, V48, P993, DOI 10.1016/j.infsof.2005.12.008
   Lee MG, 2005, PROC IEEE INT CONF S, P571
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   *MCC ASS, 1994, MCC OBJ OR TOOL US I
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mohagheghi P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Pigoski ThomasM., 1997, PRACTICAL SOFTWARE M
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Postema M, 2001, 14TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P127, DOI 10.1109/CSEE.2001.913829
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   ROSENBERG LH, 1998, APPL INTERPRETING OB
   Satpathy M, 2002, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2002.1167815
   Schach SR, 2003, EMPIR SOFTW ENG, V8, P351, DOI 10.1023/A:1025368318006
   Schach StephenR., 2002, Object-oriented and classical software engineering
   SCHAEFER H, 1985, P C SOFTW MAINT, P114
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Sommerville I., 2004, Software Engineering
   SOUSA M, 1998, P 14 IEEE INT C SOFT, P268
   WOHLIN C, 2002, SOFTWARE ENG INTRO
   Yip S. W. L., 1994, Proceedings. 1994 First Asia-Pacific Software Engineering Conference, P70, DOI 10.1109/APSEC.1994.465272
   Zhang WS, 2005, LECT NOTES COMPUT SC, V3714, P57
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 46
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2010
VL 52
IS 1
BP 110
EP 125
DI 10.1016/j.infsof.2009.08.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 527ND
UT WOS:000272372900008
DA 2024-07-18
ER

PT J
AU Ribeiro, JCB
   Zenha-Rela, MA
   de Vega, FF
AF Bregieiro Ribeiro, Jose Carlos
   Zenha-Rela, Mario Alberto
   Fernandez de Vega, Francisco
TI Test Case Evaluation and Input Domain Reduction strategies for the
   Evolutionary Testing of Object-Oriented software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Evolutionary Testing; Search-Based Software Engineering; Test Case
   Evaluation; Input Domain Reduction
AB In Evolutionary Testing, meta-heuristic search techniques are used for generating test data. The focus of our research is on employing evolutionary algorithms for the structural unit-testing of Object-Oriented programs. Relevant contributions include the introduction of novel methodologies for automation. search guidance and Input Domain Reduction; the strategies proposed were empirically evaluated with encouraging results.
   Test cases are evolved using the Strongly-Typed Genetic Programming technique. Test data quality evaluation includes instrumenting the test object, executing it with the generated test cases, and tracing the structures traversed in order to derive coverage metrics. The methodology for efficiently guiding the search process towards achieving full structural coverage involves favouring test cases that exercise problematic structures. Purity Analysis is employed as a systematic strategy for reducing the search space. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Bregieiro Ribeiro, Jose Carlos] Polytech Inst, Alto Do Vieiro, Leiria, Portugal.
   [Zenha-Rela, Mario Alberto] Univ Coimbra, CISUC, DEI, P-3030290 Coimbra, Portugal.
   [Fernandez de Vega, Francisco] Univ Extremadura, Merida 38, Spain.
C3 Universidade de Coimbra; Universidad de Extremadura
RP Ribeiro, JCB (corresponding author), Polytech Inst, Alto Do Vieiro, Leiria, Portugal.
EM jose.ribeiro@estg.ipleiria.pt; mzrela@dei.uc.pt; fcofdez@unex.es
RI de Vega, Francisco Fernández/M-1385-2014; Zenha-Rela, Mário/J-5626-2019;
   Ribeiro, José Carlos Bregieiro/AAD-1407-2019
OI Zenha-Rela, Mário/0000-0003-1985-9344; Ribeiro, José Carlos
   Bregieiro/0000-0003-3019-1330
FU Spanish Ministry of Education and Culture [TIN2007-68083-C02]; Junta de
   Extremadura, Consejeria de Economia-Comercio e Innovacion [GRU09105];
   FEDER
FX This paper has been partially funded by Projects TIN2007-68083-C02
   (Spanish Ministry of Education and Culture, NoHNES - Non-Hierarchical
   Network Evolutionary System Project), and Project GRU09105, Junta de
   Extremadura, Consejeria de Economia-Comercio e Innovacion and FEDER.
CR [Anonymous], 1994, Genetic Algorithms + Data Structures = Evolution Programs
   [Anonymous], 1990, Software testing techniques {
   ARCURI A, 2007, CSR073 U BIRM SCH CO
   Arcuri A, 2007, IEEE C EVOL COMPUTAT, P2048, DOI 10.1109/CEC.2007.4424725
   Arcuri A, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P72, DOI 10.1109/TAIC.PART.2007.11
   Back T., 1997, Handbook of evolutionary computation, V1st
   BARBEY S, 1994, SOFTWARE QUALITY MANAGEMENT II, VOL 2: BUILDING QUALITY INTO SOFTWARE, P411
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   De Jong KA, 2002, Evolutionary Computation
   Eckel Bruce., 2002, THINKING JAVA
   Harman M., 2007, Second Int. Work. Autom. Softw. Test (AST'07), V30, P2, DOI DOI 10.1109/AST.2007.4
   HARMAN M, 2007, ESEC FSE 07, P155
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   HAYNES TD, 1996, ADV GENETIC PROGRAMM, V2, P359
   Hinterding R, 1997, PROCEEDINGS OF 1997 IEEE INTERNATIONAL CONFERENCE ON EVOLUTIONARY COMPUTATION (ICEC '97), P65, DOI 10.1109/ICEC.1997.592270
   Holland I.H., 1975, ADAPTATION NATURAL A
   INKUMSAH K, 2007, P 22 IEEE ACM INT C, P425
   INKUMSAH K, 2008, P 23 IEEE ACM INT C
   Kinnula VL, 2007, EUR RESPIR J, V29, P51, DOI 10.1183/09031936.00023606
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   LEAVENS GT, 2006, ENG NOTES, V31, P1
   Li K., 2004, EFFECTIVE SOFTWARE T
   LIU XY, 2005, MIC 05
   LUKE S, 2007, ECJ 16 JAVA EVOLUTIO
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P, 2003, STATE PROBLEM EVOLUT
   Montana DJ, 1995, EVOL COMPUT, V3, P199, DOI 10.1162/evco.1995.3.2.199
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   RIBEIRO JCB, 2008, GECCO 08 P 10 ANN C, V7, P1783
   RIBEIRO JCB, 2008, GECCO 08 P 2008 GECC, V7, P1819
   RIBEIRO JCB, 2007, SBRC WTF 2007, P143
   RIBEIRO JCB, 2008, AST 08, P85
   Ribeiro JC, 2008, STUD COMPUT INTELL, V129, P379
   Sagarna R, 2007, IEEE C EVOL COMPUTAT, P438, DOI 10.1109/CEC.2007.4424504
   Salcianu A, 2005, LECT NOTES COMPUT SC, V3385, P199
   SALCIANU A, 2004, MITCSAILTR949
   Seesing A., 2006, ITSSA, V1, P127
   TONELLA P, 2004, ISSTA 04, P119, DOI DOI 10.1145/1007512.1007528
   Tracey N, 2002, SYSTEMS ENGINEERING FOR BUSINESS PROCESS CHANGE, P174
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Vincenzi AMR, 2006, SOFTWARE PRACT EXPER, V36, P1513, DOI 10.1002/spe.726
   Wappler S, 2006, IEEE C EVOL COMPUTAT, P851, DOI 10.1109/CEC.2006.1688400
   Wappler S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1925
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   WHALEY J, 1999, OOPSLA, P187
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   XIE T, 2008, P WORKSH STAT SPAC E
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
NR 49
TC 18
Z9 23
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1534
EP 1548
DI 10.1016/j.infsof.2009.06.009
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300005
DA 2024-07-18
ER

PT J
AU Ha, YM
   Park, S
   Kim, SW
   Won, JI
   Yoon, JH
AF Ha, You-Min
   Park, Sanghyun
   Kim, Sang-Wook
   Won, Jung-Im
   Yoon, Jee-Hee
TI A stock recommendation system exploiting rule discovery in stock
   databases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Stock databases; Rule discovery; Rule matching
ID ALGORITHM
AB This paper addresses an approach that recommends investment types to stock investors by discovering useful rules from past changing patterns of stock prices in databases. First, we define a new rule model for recommending stock investment types. For a frequent pattern of stock prices, if its subsequent stock prices are matched to a condition of an investor, the model recommends a corresponding investment type for this stock. The frequent pattern is regarded as a rule head, and the subsequent part a rule body. We observed that the conditions on rule bodies are quite different depending on dispositions of investors while rule heads are independent of characteristics of investors in most cases. With this observation, we propose a new method that discovers and stores only the rule heads rather than the whole rules in a rule discovery process. This allows investors to impose various conditions on rule bodies flexibly, and also improves the performance of a rule discovery process by reducing the number of rules to be discovered. For efficient discovery and matching of rules, we propose methods for discovering frequent patterns, constructing a frequent pattern base, and its indexing. We also suggest a method that finds the rules matched to a query from a frequent pattern base, and a method that recommends an investment type by using the rules. Finally, we verify the effectiveness and the efficiency of our approach through extensive experiments with real-life stock data. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Kim, Sang-Wook; Won, Jung-Im] Hanyang Univ, Coll Informat & Commun, Seoul 133791, South Korea.
   [Ha, You-Min; Park, Sanghyun] Yonsei Univ, Dept Comp Sci, Seoul 120749, South Korea.
   [Yoon, Jee-Hee] Hallym Univ, Div Informat Engn & Telecommun, Chunchon, South Korea.
C3 Hanyang University; Yonsei University; Hallym University
RP Kim, SW (corresponding author), Hanyang Univ, Coll Informat & Commun, 17 Haeng Dang, Seoul 133791, South Korea.
EM ymha@cs.yonsei.ac.kr; sanghyun@cs.yonsei.ac.kr; wook@hanyang.ac.kr;
   jiwon@hanyang.ac.kr; jhyoon@hallym.ac.kr
RI Park, Sanghyun/G-8591-2012
OI Won, JungIm/0000-0003-3591-7735
FU Korea government (MEST) [R01-2008-000-20872-0]; MKE (The Ministry of
   Knowledge Economy), Korea [IITA-2009-C1090-0902-0040]
FX This research was supported by the Korea Science and Engineering
   Foundation (KOSEF) Grant (No. R01-2008-000-20872-0) funded by the Korea
   government (MEST) and also was supported by the MKE (The Ministry of
   Knowledge Economy), Korea, under the ITRC (Information Technology
   Research Center) support program (No. IITA-2009-C1090-0902-0040)
   supervised by the IITA (institute for Information Technology
   Advancement).
CR Agrawal R., 1995, VLDB '95. Proceedings of the 21st International Conference on Very Large Data Bases, P490
   AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Agrawal R., 1993, Proceedings of the International Conference on Foundations of Data Organization and Algorithms, Chicago, IL, P69
   [Anonymous], 1988, P IEEE INT C NEURAL
   [Anonymous], 1971, The Statistical Analysis of Time Series
   BLOOMFIELD P, 2000, ANAL TIME SERIES
   CHU WW, 1994, P AAAI WORKSH KNOWL, P133
   Das G., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P16
   Faloutsos Christos., 1994, ACM SIGMOD Record, V23, P419
   FU T, 2006, P INT C INF SCI JCIS
   Guha S, 2001, INFORM SYST, V26, P35, DOI 10.1016/S0306-4379(01)00008-4
   Han J., 2012, Data Mining, P393, DOI [DOI 10.1016/B978-0-12-381479-1.00009-5, 10.1016/B978-0-12-381479-1.00009-5]
   Kim SW, 2001, PROC INT CONF DATA, P607, DOI 10.1109/ICDE.2001.914875
   Kwon YK, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P2061
   Loh WK, 2004, DATA MIN KNOWL DISC, V9, P5, DOI 10.1023/B:DAMI.0000026902.89522.a3
   Park S., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P23, DOI 10.1109/ICDE.2000.839384
   Park SH, 2001, FUND INFORM, V47, P75
   Saad EW, 1998, IEEE T NEURAL NETWOR, V9, P1456, DOI 10.1109/72.728395
   SEHGAL V, 2007, P 7 IEEE INT C DAT M, P21
   WAH B, 2002, AAAI IAAI, P211
NR 21
TC 4
Z9 4
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2009
VL 51
IS 7
SI SI
BP 1140
EP 1149
DI 10.1016/j.infsof.2008.06.004
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 456JD
UT WOS:000266840500005
DA 2024-07-18
ER

PT J
AU Guerra, E
   de Lara, J
   Malizia, A
   Díaz, P
AF Guerra, Esther
   de Lara, Juan
   Malizia, Alessio
   Diaz, Paloma
TI Supporting user-oriented analysis for multi-view domain-specific visual
   languages
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain-specific visual languages; Consistency; Back-annotation; Formal
   methods; Model transformation; Modelling environments
ID TRANSFORMATION; SECURITY; TOOL
AB The integration Of usable and flexible analysis support in modelling environments is a key success factor in Model-Driven Development. In this paradigm, models are the core asset from which code is automatically generated, and thus ensuring model correctness is a fundamental quality control activity. For this purpose, a common approach is to transform the system models into formal semantic domains for verification. However, if the analysis results are not shown in a proper way to the end-user (e.g. in terms of the original language) they may become useless.
   In this paper we present a novel DSVL called BaVeL that facilitates the flexible annotation of verification results obtained in semantic domains to different formats, including the context of the original language. BaVeL is used in combination with a consistency framework, providing support for all steps in a verification process: acquisition of additional input data. transformation of the system models into semantic domains, verification, and flexible annotation of analysis results.
   The approach has been validated analytically by the cognitive dimensions framework, and empirically by its implementation and application to several DSVLs. Here we present a case study of a notation in the area of Digital Libraries, where the analysis is performed by transformations into Petri nets and a process algebra. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Guerra, Esther; de Lara, Juan; Malizia, Alessio; Diaz, Paloma] Univ Carlos III Madrid, Dept Comp Sci, Madrid 28911, Spain.
C3 Universidad Carlos III de Madrid
RP Guerra, E (corresponding author), Univ Carlos III Madrid, Dept Comp Sci, Av Univ 30, Madrid 28911, Spain.
EM eguerra@inf.uc3m.es; jdelara@uam.es; amalizia@inf.uc3m.es;
   pdp@inf.uc3m.es
RI GARCÍA-PEÑALVO, Francisco José/D-5445-2013; Alier, Marc/AAB-8169-2019;
   Vilchez, Lisbe/N-7055-2013; Diaz, Paloma/E-8606-2016; de Lara,
   Juan/B-5422-2014; Conde, Miguel Ángel/L-3882-2014; Guerra,
   Esther/B-4977-2014; Malizia, Alessio/F-5452-2013
OI GARCÍA-PEÑALVO, Francisco José/0000-0001-9987-5584; Alier,
   Marc/0000-0003-3922-1516; Vilchez, Lisbe/0000-0002-6952-2195; Conde,
   Miguel Ángel/0000-0001-5881-7775; DIAZ PEREZ, MARIA
   PALOMA/0000-0002-9493-7739; Guerra, Esther/0000-0002-2818-2278; Malizia,
   Alessio/0000-0002-2601-7009
FU Spanish Ministry of Education and Science; MOSAIC
   [TS12005-08225-C07-06]; MODUWEB [TIN2006-09678]
FX Work supported by the Spanish Ministry of Education and Science,
   projects MOSAIC (TS12005-08225-C07-06) and MODUWEB (TIN2006-09678). We
   thank the referees for their useful comments.
CR [Anonymous], 1999, Concurrency-state models and Java programs
   Baresi L, 2005, ACM T SOFTW ENG METH, V14, P42, DOI 10.1145/1044834.1044836
   Berry DM, 2002, SCI COMPUT PROGRAM, V42, P11, DOI 10.1016/S0167-6423(01)00026-0
   BONDAVALLI A, 1999, P WORDS 99
   Buchholtz M, 2005, LECT NOTES COMPUT SC, V3582, P286
   Clarke Edmund M., 2001, Model Checking
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   EHRIG H, 1997, HDB GRAPH GRAMMARS C, V1
   Ermel C, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P125, DOI 10.1109/VLHCC.2005.18
   Foster H., 2007, Test and Analysis of Web Services, P87, DOI DOI 10.1007/978-3-540-72912-9_4
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Grundy JC, 2004, J VISUAL LANG COMPUT, V15, P243, DOI 10.1016/j.jvlc.2004.01.003
   Grundy JC, 1998, 1998 IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P236, DOI 10.1109/VL.1998.706168
   GUERRA E, 2007, VISUAL LANGUAGES INT
   GUERRA E, 2005, LNCS, V4178, P351
   Guerra E, 2008, J VISUAL LANG COMPUT, V19, P399, DOI 10.1016/j.jvlc.2007.09.002
   Guerra E, 2007, LECT NOTES COMPUT SC, V4607, P269
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   MALIZIA A, 2006, CEUR, V214
   MANNA Z, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P377, DOI 10.1145/93385.93442
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nentwich C, 2003, ACM T SOFTW ENG METH, V12, P28, DOI 10.1145/839268.839271
   Pohjonen Risto., 2002, Proc. of PLEES, V2, P49
   *QVT, QVT SPEC
   SCHURR A, 1995, LNCS, V903, P151
   Varró D, 2002, SCI COMPUT PROGRAM, V44, P205, DOI 10.1016/S0167-6423(02)00039-4
   Volter Markus., 2006, Model-Driven Software Development: Technology, Engineering, Management
   Xie F, 2002, LECT NOTES COMPUT SC, V2306, P331
   Zhu NP, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P254
NR 30
TC 34
Z9 40
U1 0
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2009
VL 51
IS 4
BP 769
EP 784
DI 10.1016/j.infsof.2008.09.005
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 409HA
UT WOS:000263495600007
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Rodríguez-Elias, OM
   Martínez-García, AI
   Vizcaíno, A
   Favela, J
   Piattini, M
AF Rodriguez-Elias, Oscar M.
   Martinez-Garcia, Ana I.
   Vizcaino, Aurora
   Favela, Jesus
   Piattini, Mario
TI A framework to analyze information systems as knowledge flow
   facilitators
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE knowledge management systems; analysis of technologies; knowledge
   management in software engineering; knowledge flow
ID MANAGEMENT-SYSTEMS; SOFTWARE; EXPERIENCE
AB This paper presents a framework which can be used to analyze information systems as knowledge flow facilitators in organizational processes. This framework may be useful, particularly to small organizations, for two main reasons: it can help them to start seeing the implications of KM in their current technical infrastructure, and as a result, they should be in a better position to know how to include their current working tools in part of a KM strategy, thus facilitating the alignment of such a strategy to the daily work of the organization. Second, identifying the role that their current tools play in the flow of knowledge should help such organizations to identify means by which to improve such tools as KM enablers, before becoming engaged in costly KM efforts that could require the acquisition of new tools and often also big changes in their current work processes. The applicability of the framework is illustrated with a case study conducted in a software development environment in which it was successfully applied. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Rodriguez-Elias, Oscar M.; Martinez-Garcia, Ana I.; Favela, Jesus] CICESE, Dept Comp Sci, Ensenada 22860, Baja California, Mexico.
   [Vizcaino, Aurora; Piattini, Mario] Univ Castilla La Mancha, Escuela Super Informat, E-13071 Ciudad Real, Spain.
C3 CICESE - Centro de Investigacion Cientifica y de Educacion Superior de
   Ensenada; Universidad de Castilla-La Mancha
RP Rodríguez-Elias, OM (corresponding author), CICESE, Dept Comp Sci, Km 107 Carretera Tijuana, Ensenada 22860, Baja California, Mexico.
EM orodrigu@cicese.mx; maritinea@cicese.mx; aurora.vizcaino@uclm.es;
   favela@cicese.mx; mario.piattini@uclm.es
RI Martinez Garcia, Ana/B-4798-2016; Rodriguez-Elias, Oscar
   Mario/A-7496-2008; Favela, Jesus/AAJ-7086-2021; Vizcaíno,
   Aurora/D-4452-2011; Piattini, Mario/F-6271-2013
OI Martinez Garcia, Ana/0000-0002-0798-1193; Rodriguez-Elias, Oscar
   Mario/0000-0002-3213-7808; Favela, Jesus/0000-0003-2967-9654; Vizcaíno,
   Aurora/0000-0002-2072-5581; Piattini, Mario/0000-0002-7212-8279
CR Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   Alavi M, 2002, J AM SOC INF SCI TEC, V53, P1029, DOI 10.1002/asi.10107
   ALAVI M, 1997, KMPG PEAT MARWICK US, P21
   [Anonymous], 1995, KNOWLEDGE CREATION C
   [Anonymous], 1999, P 32 HAWAII INT C SY
   Anquetil N, 2007, INFORM SOFTWARE TECH, V49, P515, DOI 10.1016/j.infsof.2006.07.007
   Aranda Gabriela, 2005, P EV COLL INF SYST S
   Aurum A., 2003, Managing Software Engineering Knowledge
   Banerjee R., 2005, Knowledge management tools and techniques: Practitioners and experts evaluate KM solutions, V1st, P283
   Basili VR, 2002, IEEE SOFTWARE, V19, P30
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   BEAVERS G, 2003, P AG COMP AUT AAMAS, P95
   Bleistein SJ, 2006, INFORM SOFTWARE TECH, V48, P846, DOI 10.1016/j.infsof.2005.12.001
   Bmney D., 2001, Journal of Knowledge Management, V5, P33
   Bonifacio M, 2002, J UNIVERS COMPUT SCI, V8, P652
   BONIFACIO M, 2002, NOVATICA INFORM INFO, V3, P23
   Bontis N., 2003, Journal of Knowledge Management, V7, P6, DOI 10.1108/13673270310463581
   Borghoff U., 1997, J UNIVERS COMPUT SCI, V3, P835
   Borghoff UweM., 1998, Information Technology for Knowledge Management
   BRAINOV S, 2001, P IJCAI01 WORKSH AUT, P27
   Carabelea C, 2003, P AG COMP AUT AAMAS, P103
   Conrad Kurt, 2000, P PRACT ASP KNOWL MA
   CUEL R, 2003, P I KNOW 03 GRAZ, P531
   Dalkir K., 2011, KNOWLEDGE MANAGEMENT
   Davenport T.H., 2000, WORKING KNOWLEDGE OR, DOI DOI 10.1145/347634.348775
   Davenport TH, 1998, SLOAN MANAGE REV, V39, P43
   DESOUSA KD, 2004, P 6 INT WORKSH LEARN, P67
   Desouza KC, 2003, COMMUN ACM, V46, P99
   Ding Y, 2002, J INFORM SCI, V28, P123, DOI 10.1177/0165551024234020
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Dingsoyr T, 2002, INT J SOFTW ENG KNOW, V12, P391, DOI 10.1142/S0218194002000962
   DINGSOYR T, 2001, LECT NOTES COMPUTER, V2188, P167
   Edwards JS, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P5
   Fischer M, 2004, J SOFTW MAINT EVOL-R, V16, P385, DOI 10.1002/smr.302
   Folkens F, 2004, LECT NOTES ARTIF INT, V3336, P23
   FRANKLIN S., 1997, INT WORKSHOP AGENT T, V1193, P21
   GARCIA S, 2005, P 1 INT WORKSH PROC, P309
   GREHAN R, 2005, INFOWORLD, V27, P16
   HAGGIE K, 2003, ELECT J KNOWLEDGE MA
   Harris M, 2007, COMMUN ACM, V50, P89, DOI 10.1145/1230819.1241669
   *HELP DESK TECHN, HELPSTAR
   Hexmoor H, 2001, IEEE T SYST MAN CY C, V31, P509, DOI 10.1109/5326.983934
   HEXMOOR H, 2000, P PRICAI 2000 WORKSH, P325
   Jennex ME, 2005, INT J KNOWL MANAG, V1, P33, DOI 10.4018/jkm.2005040104
   Kankanhalli A, 2003, COMMUN ACM, V46, P69, DOI 10.1145/903893.903896
   Kankanhalli A., 2004, P 37 HAW INT C SYST
   Kuhn O, 1998, INFORM TECHNOLOGY KN, P183
   Land LPW, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P108, DOI 10.1109/ASWEC.2001.948504
   Lee KC, 2005, INFORM MANAGE-AMSTER, V42, P469, DOI 10.1016/j.im.2004.02.003
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Lindvall M, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P73
   Maier R., 2002, KNOWL PROCESS MANAG, V9, P103, DOI DOI 10.1002/KPM.136
   Marwick AD, 2001, IBM SYST J, V40, P814, DOI 10.1147/sj.404.0814
   McElroy M., 2000, J KMCI, V1, P43
   Meehan B., 2002, Software Process Improvement and Practice, V7, P47, DOI 10.1002/spip.154
   Nissen M.E., 2002, Communication of the Association for Information Systems, V8, P251
   NONAKA I, 1991, HARVARD BUS REV, P26
   Qureshi S, 2004, LECT NOTES COMPUT SC, V3198, P25
   Rao M., 2005, KNOWLEDGE MANAGEMENT
   Rao M., 2005, KNOWLEDGE MANAGEMENT, P1
   Richardson I, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.12
   Rodriguez OM, 2004, PROCEEDINGS OF THE FIFTH MEXICAN INTERNATIONAL CONFERENCE IN COMPUTER SCIENCE (ENC 2004), P72, DOI 10.1109/ENC.2004.1342591
   Rodríguez OM, 2004, LECT NOTES COMPUT SC, V3198, P52
   RODRIGUEZELIAS OM, 2007, P JIISIC 07 LIM PER, P257
   RODRIGUEZELIAS OM, 2007, P 9 INT C ENT INF SY, P492
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   RUS I, 2001, KNOWLEDGE MANAGEMENT, P53
   Schneider K, 2002, IEEE SOFTWARE, V19, P46, DOI 10.1109/MS.2002.1003453
   Seaman CB, 2002, PROC IEEE INT CONF S, P141, DOI 10.1109/ICSM.2002.1167761
   Smith HA, 2005, COMMUN ASSOC INF SYS, V16, P233
   Sparrow J., 2001, Knowledge and Process Management, V8, P3, DOI DOI 10.1002/KPM.92
   STENMARK D, 2004, P HAW INT C SYST SCI
   Stewart T.A., 2002, Business 2.0, V3, P80
   Teevan J, 2006, COMMUN ACM, V49, P40, DOI 10.1145/1107458.1107488
   Tiwana A, 2001, IEEE INTERNET COMPUT, V5, P32, DOI 10.1109/4236.935173
   Tiwana A., 2000, The knowledge management toolkit: Practical techniques for building a knowledge management system
   Valente, 2002, Knowledge-Based Intelligent Information Engineering Systems and Allied Technologies. KES 2002, P291
   VANELST L, 2003, INT S AMKM STANF CA, P1
   Ward J, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P137, DOI 10.1109/ASWEC.2004.1290466
   Wenger E., 2009, COMMUNITIES PRACTICE
   Wiig K.M., 2004, PEOPLE FOCUSED KNOWL, DOI [DOI 10.4324/9780080479910, 10.4324/9780080479910]
   WOITSCH R, 2002, INT J INTELL SYST, V11, P253
   Wong KY, 2005, IND MANAGE DATA SYST, V105, P261, DOI 10.1108/02635570510590101
NR 83
TC 27
Z9 28
U1 2
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2008
VL 50
IS 6
BP 481
EP 498
DI 10.1016/j.infsof.2007.07.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 295WY
UT WOS:000255506100001
DA 2024-07-18
ER

PT J
AU Bouabana-Tebibel, T
   Belmesk, M
AF Bouabana-Tebibel, Thouraya
   Belmesk, Mounira
TI An object-oriented approach to formally analyze the UML 2.0 activity
   partitions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML 2.0; Object Petri Nets; activity partitions; sequence diagram;
   object diagram
ID REACTIVE PETRI NETS; MODELS
AB Nowadays, UML is the de-facto standard for object-oriented analysis and design. Unfortunately, the deficiency of its dynamic semantics limits the possibility of early specification analysis. UML 2.0 comes to precise and complete this semantics but it remains informal and still lacks tools for automatic validation. Tile main purpose of this study is to automate the formal validation, according a value-oriented approach, of the behavior of systems expressed in UML. The marriage of Petri nets with temporal logics seems a suitable formalism for translating and then validating UML state-based models. The contributions of the paper are threefold. We first, consider how UML 2.0 activity partitions call be transformed into Object Petri Nets to formalize the object dynamics, in an object-oriented context. Second, we develop ail approach based on the object and sequence diagram information to initialize the derived Petri nets in terms of objects and events. Finally, to thoroughly verify if the UML model meets the system required properties, we suggest to use tile OCL invariants exploiting their association end constructs. The verification is performed on a predicate/transition net explored by model checking. A case study is given to illustrate this methodology throughout tile paper. (c) 2006 Elsevier B.V. All rights reserved.
C1 Inst Natl Informat, Algiers, Algeria.
   Edouard MonPetit Coll, Longueuil, PQ, Canada.
RP Bouabana-Tebibel, T (corresponding author), Inst Natl Informat, BP 68 M Oued Smar, Algiers, Algeria.
EM t_tebibel@ini.dz; zoubeidi@college-em.qc.ca
CR Adam NR, 1998, J INTELL INF SYST, V10, P131, DOI 10.1023/A:1008656726700
   [Anonymous], P 2006 IEEE INT C SY
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], P 2004 IEEE INT C SY
   [Anonymous], P VER WORKSH FED LOG
   [Anonymous], UML 2 0 OCL SPEC
   [Anonymous], P 4 INT C FORM METH
   [Anonymous], LECT NOTES COMPUTER
   BALDAN P, 2001, LNCS, V2154, P502
   BARESI L, 2002, 6 WORLD C INT DES PR
   BARESIL L, 2001, ADV PETRI NETS, P276
   BEATO ME, 2004, P SPEC VER COMP BAS
   Bernardi S., 2002, 3 INT WORKSH SOFTW P
   DELATOUR J, 2003, THESIS U PAUL SABATI
   DUMAS M, 2001, P INT C UN MOD LANG
   Eshuis R, 2004, IEEE T SOFTWARE ENG, V30, P437, DOI 10.1109/TSE.2004.33
   Eshuis R, 2003, LECT NOTES COMPUT SC, V2472, P321
   Eshuis R, 2003, LECT NOTES COMPUT SC, V2679, P296
   ESHUIS R, 2002, THESIS CTR TELEMATIC
   FLAKE S, 2003, THESIS FACULTY COMPU
   GNESI S, 2003, 2003TR63 I SCIENZ TE
   HAREL D, 2005, FORMAL METHODS SOFTW, V3393
   Heckel R, 2003, LECT NOTES COMPUT SC, V2472, P281
   *HELS U TECHN, 2004, PROD 3 4 ADV TOOL EF
   HU Z, 2004, P 16 INT C SOFTW ENG
   JENSEN K, 1992, COLOURS PETRI NETS, V1
   Kim S., 1999, LECT NOTES COMPUTER, V1723
   LAKOS C, 1996, LECT NOTES COMPUTER, V1091, P380
   LAKOS C, 1994, TR943 U TASM COMP SC
   OBER I, 2003, P INT WORKSH SVERTS
   *OBJ MOD GROUP, 2003, OMG UN MOD LANG SPEC
   *OBJ MOD GROUP, 2004, UML 2 9 SUP SPEC
   *OBJ MOD GROUP, 2001, UML ACT SEM
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Saldhana JA, 2001, INT J SOFTW ENG KNOW, V11, P643, DOI 10.1142/S021819400100075X
   SALIMIFARD K, 2001, EUR J OPER RES, V134, P218
   SCHATTKOWSKY T, 2005, P DATE05 MUN IEEE CS
   SHALAER S, 1992, OBJECT LIFE CYCLES M
   TRUONG N, 2005, P INT C SOFTW ENG RE
   TRUONG N, 2004, P APPR FORM DANS ASS
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   Ziadi T, 2004, PROC INT CONF SOFTW, P242, DOI 10.1109/ICSE.2004.1317446
NR 43
TC 17
Z9 18
U1 1
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2007
VL 49
IS 9-10
BP 999
EP 1016
DI 10.1016/j.infsof.2006.10.007
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 199PQ
UT WOS:000248708100004
DA 2024-07-18
ER

PT J
AU Pilskalns, O
   Andrews, A
   Knight, A
   Ghosh, S
   France, R
AF Pilskalns, Orest
   Andrews, Anneliese
   Knight, Andrew
   Ghosh, Sudipto
   France, Robert
TI Testing UML designs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML design models; sequence diagrams; UML views; OCL pre-condition and
   post-condition; class diagrams
AB Early detection and correction of faults in the software design phase can reduce total cost and time to market of a software product. In this paper we describe an approach for testing UML design models to uncover inconsistencies. Our approach uses behavioral views such as Sequence Diagrams to simulate state change in an aggregate model. The aggregate model is the artifact of merging information from behavioral and structural UML views. OCL pre-conditions, post-conditions and invariants are used as a test oracle. (c) 2006 Elsevier B.V. All rights reserved.
C1 Washington State Univ, Sch Engn & Comp Sci, Vancouver, WA 98686 USA.
   Univ Denver, Dept Comp Sci, Denver, CO USA.
   Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99164 USA.
   Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
C3 Washington State University; University of Denver; Washington State
   University; Colorado State University
RP Pilskalns, O (corresponding author), Washington State Univ, Sch Engn & Comp Sci, Vancouver 14204 NE Salmon Creek Ave, Vancouver, WA 98686 USA.
EM orest@vancouver.wsu.edu; andrews@cs.du.edu; aknight@eecs.wsu.edu;
   ghosh@cs.colostate.edu; france@cs.colostate.edu
RI Ghosh, Sudipto/ABI-4888-2020
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   ANDREWS A, 2003, J SOFTWARE TESTING V, P95
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   *BORL SOFTW CORP, TOG 6 0 URL
   Briand LC, 2003, LECT NOTES COMPUT SC, V2863, P249
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Engels G, 1999, LECT NOTES COMPUT SC, V1723, P473
   FAGAN M, 1987, IBM SYST J, P259
   Gilb Tom, 1993, Software inspections
   Gogolla M, 2003, LECT NOTES COMPUT SC, V2863, P265
   GRINDAL M, 2005, COMBINATION TESTING, P167
   Harel D, 1997, COMPUTER, V30, P31, DOI 10.1109/2.596624
   Krause K., 1973, P 1973 IEEE S COMP S, P18
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   NICKEL UA, 2000, P 2 WORKSH SOFTW ENG
   OFALLON A, 2004, P SOFTW ENG KNOWL EN, P192
   Offutt A. J., 1999, Proceedings Fifth IEEE International Conference on Engineering of Complex Computer Systems (ICECCS'99) (Cat. No.PR00434), P119, DOI 10.1109/ICECCS.1999.802856
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   *OM GROUP, 2006, UML 2 0 SPEC
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pilskalns O, 2005, PROC IEEE INT CONF S, P49
   RIEHLE D, 2001, P 2001 C OBJ OR PROG, P327
   Runeson P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ISSRE.2003.1251026
   Scheetz M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P250, DOI 10.1109/ISSRE.1999.809330
   Traoré I, 2004, IEEE T SOFTWARE ENG, V30, P736, DOI 10.1109/TSE.2004.86
   WEYUKER EJ, 1980, IEEE T SOFTWARE ENG, V6, P236, DOI 10.1109/TSE.1980.234485
   2004, APACHE XML PROJECT B
   2005, USE UML BASED SPECIF
NR 30
TC 9
Z9 12
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2007
VL 49
IS 8
BP 892
EP 912
DI 10.1016/j.infsof.2006.10.002
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 187JR
UT WOS:000247844300006
OA Bronze
DA 2024-07-18
ER

PT J
AU Robinson, H
   Segal, J
   Sharp, H
AF Robinson, Hugh
   Segal, Judith
   Sharp, Helen
TI Ethnographically-informed empirical studies of software practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software practice; field studies; qualitative analysis
ID ENGINEERS; SYSTEMS; QUALITY
AB Over the past decade we have performed a sustained series of qualitative studies of software development practice, focusing on social factors. Using an ethnographically-informed approach, we have addressed four areas of software practice: software quality management systems, the emergence of object technology, professional end user development and agile development. Several issues have arisen from this experience, including the nature of research questions that such studies can address, the advantages and challenges associated with being a member of the community under study, and how to maintain rigour in data collection. In this paper, we will draw on our studies to illustrate our approach and to discuss these and other issues. (C) 2007 Elsevier B.V. All rights reserved.
C1 Open Univ, Ctr Res Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Sharp, H (corresponding author), Open Univ, Ctr Res Comp, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM h.m.robinson@open.ac.uk; j.a.segal@open.ac.uk; h.c.sharp@open.ac.uk
OI Sharp, Helen/0000-0003-4376-1734
CR [Anonymous], IEEE COMPUTER
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], 2005, Extreme programming explained: Embrace change
   Ball L. J., 2000, Design Studies, V21, P403, DOI 10.1016/S0142-694X(00)00009-0
   Beck K., 2000, EXTREME PROGRAMMING
   Beynon-Davies P, 1999, J INF TECHNOL-UK, V14, P107, DOI 10.1080/026839699344782
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   BUDGEN D, P ICSE 2005
   Button G., 1996, Computer Supported Cooperative Work (CSCW), V5, P369, DOI 10.1007/BF00136711
   CHONG J, P AG 2005 IEEE
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cortada JW, 2001, IEEE ANN HIST COMPUT, V23, P34, DOI 10.1109/85.910848
   DAHL OJ, 1966, COMMUN ACM, V9, P671, DOI 10.1145/365813.365819
   DAVIS H, 2001, THESIS U SHEFFIELD
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Hammersley M, 2000, OXFORD REV EDUC, V26, P393, DOI 10.1080/713688545
   Hammersley Martyn., 1983, ETHNOGRAPHY PRINCIPL
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P23
   Holtzblatt K., 2005, RAPID CONTEXTUAL DES
   Hovenden FM, 1996, SOFTWARE QUAL J, V5, P25, DOI 10.1007/BF02420942
   Huff D., 1991, How to lie with statistics
   KITCHENHAM B, 2003, P 2 WORKSH WORKSH SE, P7
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Mason Jennifer, 2018, Qualitative Researching
   Oates B. J., 2006, Researching information systems and computing
   Potter J., 1987, DISCOURSE SOCIAL PSY
   Robinson H, 2005, AGILE 2005, PROCEEDINGS, P49, DOI 10.1109/ADC.2005.36
   ROBINSON H, 2003, P 2 WORKSH WORKSH SE, P99
   ROBINSON H, 2004, P XP 2004 GERM JUN, P139
   ROBINSON HM, 2005, P 6 INT C EXTR PROGR
   Robson C., 2002, Real world research
   Schon D. A., 1983, The reflective practitioner: How professionals think in action
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   SEGAL J, 2005, 1 WORKSH END US SOFT
   SEGAL J, 2001, LECT NOTES COMPUTER, V2176, P68
   SEGAL J, P WORKSH REAL EV BAS
   Sharp H, 2005, EMPIR SOFTW ENG, V10, P343, DOI 10.1007/s10664-005-1451-y
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H, 2004, INT J HUM-COMPUT ST, V61, P219, DOI 10.1016/j.ijhcs.2003.12.011
   Sharp H, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.819967
   SHARP H, 2002, OOPSLA 02 COMPANION, P92
   Sharp H., 2007, INTERACTION DESIGN, V2nd
   Sharp H, 2006, AGILE 2006, PROCEEDINGS, P65, DOI 10.1109/AGILE.2006.56
   *SIGS, 1992, HAPP 25 ANN OBJ
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   SINGER J, 1997, CTR ADV STUD C CASCO, P1
   VILLER S, 1999, HUMAN COMPUTER INTER, P14
NR 51
TC 64
Z9 75
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 540
EP 551
DI 10.1016/j.infsof.2007.02.007
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 169NU
UT WOS:000246599700002
DA 2024-07-18
ER

PT J
AU Medvidovic, N
   Dashofy, EM
   Taylor, RN
AF Medvidovic, Nenad
   Dashofy, Eric M.
   Taylor, Richard N.
TI Moving architectural description from under the technology lamppost
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software architecture; software architecture description languages
ID SOFTWARE ARCHITECTURES; DESCRIPTION LANGUAGES
AB In 2000, we published an extensive study of existing software architecture description languages (ADLs), which has served as a useful reference to software architecture researchers and practitioners. Since then, circumstances have changed. The Unified Modeling Language (UML) has gained popularity and wide adoption, and many of the ADLs we studied have been pushed into obscurity. We argue that this progression can be attributed to early ADLs' nearly exclusive focus on technological aspects of architecture, ignoring application domain and business contexts within which software systems and development organizations exist. These three concerns - technology, domain, and business - constitute three "lampposts" needed to appropriately "illuminate" software architecture and architectural description. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ So Calif, Viterbi Sch Engn, Dept Comp Sci, Los Angeles, CA 90089 USA.
   Univ Calif Irvine, Donald Bren Sch Informat & Comp Sci, Dept Informat, Irvine, CA 92697 USA.
C3 University of Southern California; University of California System;
   University of California Irvine
RP Medvidovic, N (corresponding author), Univ So Calif, Viterbi Sch Engn, Dept Comp Sci, Los Angeles, CA 90089 USA.
EM neno@usc.edu; edashofy@ics.uci.edu; taylor@ics.uci.edu
CR ALLEN R, 1997, THESIS CARNEGIE MELL, P248
   Allen Robert., 2002, WOSP 02, P203
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], ACM SIGSOFT SOFTWARE
   BATORY D, 1995, P AIAA COMP AER 10 C
   Binns P, 1996, INT J SOFTW ENG KNOW, V6, P201, DOI 10.1142/S0218194096000107
   BOOCH G, 1998, UNIFIED MODELING LAN
   BOOCH G, 2005, ADDISONWESLEY OBJECT
   Booch G., 1993, Object-Oriented Analysis and Design with Applications, V2nd ed.
   BRAY NW, 1998, PERSPECTIVES FUNDAME, V1, P3
   *CARN MELL U, 2005, DO YOU DEF SOFTW ARC
   Dashofy E.M., 2001, P WORKSH XML TECHN S
   Dashofy EM, 2005, ACM T SOFTW ENG METH, V14, P199, DOI 10.1145/1061254.1061258
   FALLSIDE DC, 2001, W3C WORLD WID WEB CO
   FEILER PH, 2003, P RTAS 2003 WORKSH M
   GARLAN D, 1997, P CASCON 97 TOR ONT, P169
   GORLICK MM, 1991, P 13 INT C SOFTW ENG, P23
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   *I SOFTW RES, ARCHST ARCH BAS DEV
   INVERARDI P, 1995, IEEE T SOFTWARE ENG, V21, P373, DOI 10.1109/32.385973
   KHARE R, 2001, P 34 HAW INT C SYST
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P717, DOI 10.1109/32.464548
   LUCKHAM DC, 1996, P DIMACS PART ORD ME
   MAGEE J, 1995, P 5 EUR SOFTW ENG C, V989, P137
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MEDVIDOVIC N, 1996, JOINT P 2 INT SOFTW, P24, DOI [10.1145/243327.243340, DOI 10.1145/243327.243340]
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   MELTON R, AESOP SYSTEM TUTORIA
   Moriconi M., 1997, SRICSL9701
   Mukerji J., 2003, MDA GUIDE VERSION 10
   PRIETODIAZ R, 1986, J SYST SOFTWARE, V6, P307, DOI 10.1016/0164-1212(86)90002-6
   Rumbaugh James., 1990, OBJECT ORIENTED MODE, V1st
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   *SYSML PARTN SYSML, 2005, SPEC VERS 0 9 REP, P270
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   *TEL STAND SECT IT, 2002, Z100 ITU
   Tracz W., 1993, Proceedings Advances in Software Reuse. Selected Papers from the Second International Workshop on Software Reusability (Cat. No.93TH0495-2), P66, DOI 10.1109/ASR.1993.291716
   VONOMMERING R, 2000, IEEE COMPUT, V33, P78
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
NR 42
TC 58
Z9 60
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2007
VL 49
IS 1
BP 12
EP 31
DI 10.1016/j.infsof.2006.08.006
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115AK
UT WOS:000242706600003
DA 2024-07-18
ER

PT J
AU Liu, CH
AF Liu, Chien-Hung
TI Data flow analysis and testing of JSP-based Web applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 1st Workshop of Quality Assurance and Testing Web-Based Applications
CY SEP, 2004
CL Hong Kong, PEOPLES R CHINA
DE Web application testing; data flow testing; software testing; JSP
   testing
AB Web applications often rely on server-side scripts to handle HTTP requests, to generate dynamic contents, and to interact with other components. The server-side scripts are usually not checked by any compiler and, hence, can be error-prone. In this paper, we adapt traditional data flow testing techniques into the context of Java Server Pages (JSP), a very popular server-side script for developing Web applications with Java Technology. We point out that the JSP implicit objects and action tags can introduce several unique data flow test artifacts which need to be addressed. A test model is presented to capture the data flow information of JSP pages with considerations of various implicit objects and action tags. Based on the test model, we describe an approach to compute the intraprocedural, interprocedural, and sessional data flow test paths for uncovering the data anomalies of JSP pages. (C) 2006 Elsevier B.V. All rights reserved.
C1 Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, Taipei 106, Taiwan.
C3 National Taipei University of Technology
RP Liu, CH (corresponding author), Natl Taipei Univ Technol, Dept Comp Sci & Informat Engn, 1,Sec 3,Chung Hsiao E Rd, Taipei 106, Taiwan.
EM cliu@ntut.edu.tw
CR ANDREWS A, 2005, SOFTWARE SYSTEMS MOD, V4
   Benedikt M., 2002, P 11 INT WORLD WID W
   BERGSTEN H, 2002, JAVASERVER PAGES
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2002.1167787
   Elbaum S, 2003, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2003.1201187
   Ginige A., 2001, IEEE Multimedia, V8, P14, DOI 10.1109/93.923949
   HARROLD MJ, 1989, ACM SIGSOFT, V14, P158, DOI 10.1145/75309.75327
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Kung DC, 2000, P INT COMP SOFTW APP, V24, P537, DOI 10.1109/CMPSAC.2000.884778
   Liu CH, 2004, P INT COMP SOFTW APP, P114
   Liu CH, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2000.885863
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   PANDE HD, 1994, IEEE T SOFTWARE ENG, V20, P385, DOI 10.1109/32.286418
   Pressman RS, 1998, IEEE SOFTWARE, V15, P104, DOI 10.1109/MS.1998.714869
   RAPPS S, 1995, IEEE T SOFTWARE ENG, V20, P385
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Tonella P, 2002, FOURTH INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P43, DOI 10.1109/WSE.2002.1134088
   WEYUKER EJ, 1990, IEEE T SOFTWARE ENG, V16, P121, DOI 10.1109/32.44376
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   WU Y, 2002, ISETR0208 GMU
   Yang JT, 2002, J INF SCI ENG, V18, P59
NR 21
TC 14
Z9 20
U1 3
U2 49
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2006
VL 48
IS 12
BP 1137
EP 1147
DI 10.1016/j.infsof.2006.06.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 115XY
UT WOS:000242768300002
DA 2024-07-18
ER

PT J
AU King, SF
   Johnson, OA
AF King, Stephen F.
   Johnson, Owen A.
TI VBP: An approach to modelling process variety and best practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE business process modelling; best practice; Unified Modelling Language;
   patterns; electronic government
ID ENTERPRISE SYSTEMS; ERP
AB The concept of best practice is both attractive and highly problematic. Whilst organisations can learn from the practices of others there is also a danger that local variety may be squeezed out and that "one size fits all" solutions may stifle local context-specific innovations. This paper outlines an approach to modelling process specialisation hierarchies and best practice patterns with the Unified Modelling Language (UML). The process Variety and Best Practice approach, VBP, is applied to a recent e-government project that explored variety and best practice in citizens' access portals for four UK local authorities. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ Leeds, Sch Business, Leeds LS2 9JT, W Yorkshire, England.
   Univ Leeds, Sch Comp, Leeds LS2 9JT, W Yorkshire, England.
C3 University of Leeds; University of Leeds
RP King, SF (corresponding author), Univ Leeds, Sch Business, Leeds LS2 9JT, W Yorkshire, England.
EM sfk@lubs.leeds.ac.uk; owenj@comp.leeds.ac.uk
OI Johnson, Owen Ashby/0000-0003-3998-541X
CR Akkermans H, 2002, EUR J INFORM SYST, V11, P35, DOI 10.1057/palgrave/ejis/3000418
   [Anonymous], 1977, PATTERN LANGUAGE TOW
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1989, Modern structured analysis
   Bannister F, 2001, INFORM SYST J, V11, P65, DOI 10.1046/j.1365-2575.2001.00094.x
   *BASE GOV, 2002, PHAS 1 DES REP BAS G
   Beer S, 1979, BRAIN FIRM
   Bevir M, 2003, PUBLIC ADMIN, V81, P1, DOI 10.1111/1467-9299.00334
   Booch G., 1991, Object-Oriented Analysis and Design with Applications
   Booch G., 1998, UNIFIED MODELLING LA
   Coad P., 1990, Object-Oriented Analysis
   Davenport T.H., 1993, PROCESS INNOVATION R
   Davenport TH, 1998, HARVARD BUS REV, V76, P121
   DONZELLI P, 2003, P CAISE 2003, P601
   Eriksson H., 2000, Business modelling with UML
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gordijn J, 2000, LECT NOTES COMPUT SC, V1921, P40
   Hammer M., 1994, REENGINEERING CORPOR
   *KABLENET, EL GOV INT MARK OV
   KAGERMANN H, 2000, MYSAP COMP IND SOLUT
   Kawalek P, 2005, J GLOB INF MANAG, V13, P79, DOI 10.4018/jgim.2005010104
   Keller G., 1998, SAP R3 PROCESS ORIEN
   KING SF, 2000, INFORMATION SYSTEMS, V1, P109
   KING SF, 2000, INFORMATION SYSTEMS
   Kobryn C, 1999, COMMUN ACM, V42, P29, DOI 10.1145/317665.317673
   KRUTCHEN P, 2000, RATIONAL UNIFIED PRO
   *LEAP, 2003, LIF EV ACC PROJ
   LEE J, 2002, INFORMATION SYSTEMS, V28, P651
   Lindsay A, 2003, INFORM SOFTWARE TECH, V45, P1015, DOI 10.1016/S0950-5849(03)00129-0
   Malone TW, 1999, MANAGE SCI, V45, P425, DOI 10.1287/mnsc.45.3.425
   MARGETTS H, ELECT GOVT METH MADN
   MARSHALL C, 2000, ENTERPRISE MODELLING
   Newman J, 2001, PUBLIC MONEY MANAGE, V21, P61, DOI 10.1111/1467-9302.00262
   *ODPM, 2002, E GOVLOCAL NAT STRAT
   *ODPM, 2005, IEG4 DEL E GOV BEN 2
   *OMG, UML 2 0 INFR SPEC OB
   Pentland BT, 2003, ORGAN SCI, V14, P528, DOI 10.1287/orsc.14.5.528.16760
   Pentland BT, 2003, MANAGE SCI, V49, P857, DOI 10.1287/mnsc.49.7.857.16382
   Peristeras V, 2000, EUR J INFORM SYST, V9, P252, DOI 10.1057/palgrave/ejis/3000378
   Robey D, 2002, J MANAGE INFORM SYST, V19, P17, DOI 10.1080/07421222.2002.11045713
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Rummler G.A., 1995, IMPROVING PERFORMANC, V2nd
   Seruca I, 2003, J SYST SOFTWARE, V67, P1, DOI 10.1016/s0164-1212(02)00083-3
   Shang S, 2002, INFORM SYST J, V12, P271, DOI 10.1046/j.1365-2575.2002.00132.x
   Snowdon B, 2003, INFORM SOFTWARE TECH, V45, P1021, DOI 10.1016/S0950-5849(03)00130-7
   Soh C, 2000, COMMUN ACM, V43, P47, DOI 10.1145/332051.332070
   Swan J, 1999, EUR J INFORM SYST, V8, P284, DOI 10.1057/palgrave.ejis.3000336
   Taylor F., 1967, The principles of scientific management
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   WHITE A, WORKFLOW PATTERNS BP
   Wohed P, 2005, LECT NOTES COMPUT SC, V3716, P63
   Wyner G.M., 2003, Organizing Business Knowledge: The MIT Process Handbook, P131
   Yoshioka T, 2001, ACM T INFORM SYST, V19, P431, DOI 10.1145/502795.502798
NR 54
TC 3
Z9 4
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1104
EP 1114
DI 10.1016/j.infsof.2006.02.003
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 101CL
UT WOS:000241716400011
DA 2024-07-18
ER

PT J
AU Maamar, Z
AF Maamar, Zakaria
TI On coordinating personalized composite web services
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE web service; coordination; personalization; conversation; context
AB This paper presents a research project on the coordination of personalized composite web services. By coordination, it is meant the mechanisms that specify the orchestration of the component web services of a composite web service. The orchestration is about the execution chronology of the component web services, the data that the component web services exchange, the states that the component web services take, and the actions that the component web services perform. By personalization, it is meant the integration of user preferences into the specification that orchestrates the component web services. These preferences concern when the component web services are to be executed. In this research project, the operations of coordination and personalization are entrusted to software agents, which, for instance, monitor the context surrounding users and trigger as a result the appropriate component web services. In addition, software agents engage in conversations with their peers when it comes to tracking the personalized component web services. (C) 2005 Elsevier B.V. All rights reserved.
C1 Zayed Univ, Coll Informat Syst, Software Agents Res Grp, Dubai, U Arab Emirates.
C3 Zayed University
RP Maamar, Z (corresponding author), Zayed Univ, Coll Informat Syst, Software Agents Res Grp, POB 19282, Dubai, U Arab Emirates.
EM zakaria.maamar@zu.ac.ae
RI Maamar, Zakaria/A-1103-2012
CR AHUJA S, 1986, COMPUTER, V19, P26, DOI 10.1109/MC.1986.1663305
   Allen J.F., 1983, COMMUNICATIONS ACM, V26
   [Anonymous], ACM COMPUTING SURVEY
   ARPINAR IB, 2004, P IEEE INT C E COMM
   BARKHUUS L, 2003, P 5 INT C UB COMP UB
   Benatallah B, 2004, IEEE INTERNET COMPUT, V8, P46, DOI 10.1109/MIC.2004.1260703
   BENATALLAH B, 2003, IEEE INTERNET COMPUT, V7
   BERARDI D, 2003, 15 C ADV INF SYST EN
   BOUDRIGA N, 2004, COMPUTING SCI ENG, V6
   BREENER M, 2003, P 10 WORKSH OP VIEW
   BREZILLON P, 2003, IEEE INTELIGENT SYST, V18
   DEY AK, 2001, HUMAN COMPUTER INTER, V16
   KULKARNI N, 2005, IEEE IT PROFESSIONAL, V7
   LIN F, 2001, COMPUTERS IND, V46
   Ma KJ, 2005, IEEE IT PROFESSIONAL, V7
   MAAMAR Z, 2003, P ALT TRACKS 12 INT
   MAAMAR Z, 2005, P 7 AS PAC WEB C APW
   MAAMAR Z, 2005, IN PRESS INT J E BUS
   Milanovic N, 2004, IEEE INTERNET COMPUT, V8, P51, DOI 10.1109/MIC.2004.58
   PANAYIOTOU C, 2003, IN PRESS J ACM BALTZ
   PAPAZOGLOU D, 2003, COMMUNICATIONS ACM, V46
   SMITH IA, 1998, P 3 INT C MULT SYST
   VARRO D, 2002, P 1 INT C GRAPH TRAN
   Yi X., 2004, P DES AN SIM DISTR S
NR 24
TC 8
Z9 8
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 540
EP 548
DI 10.1016/j.infsof.2005.05.011
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900009
DA 2024-07-18
ER

PT J
AU Petit-Rozé, C
   Grislin-Le Strugeon, E
AF Petit-Rozé, C
   Grislin-Le Strugeon, E
TI MAPIS, a multi-agent system for information personalization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE multi-agent system; agent activity model; interaction model; information
   personalization
AB In the domain of multi-user and agent-oriented information systems, personalized information systems aim to give specific and customized responses to individual user requests. In addition to the ability to analyze user needs and to retrieve, understand and act on distributed data that is offered by any agent-oriented system, multi-agent systems also offer interesting possibilities for interaction, particularly with regard to information sharing and task coordination. Our approach exploits these interactive possibilities in order to make the system capable of personalizing information. In addition, reusable models at both the social and individual levels were chosen for this approach in order to facilitate subsequent information system design. With these two ideas in mind, several models of agent interaction (social) and the internal activity cycles (individual) have been proposed with the aim of creating a multi-agent system for information personalization. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Valencia, LAMIH, CNRS, UMR 8530, F-59313 Valence, France.
C3 Centre National de la Recherche Scientifique (CNRS); Universite
   Polytechnique Hauts-de-France
RP Univ Valencia, LAMIH, CNRS, UMR 8530, F-59313 Valence, France.
EM christelle.roze@univ-valenciennes.fr
RI Grislin-Le Strugeon, Emmanuelle/K-2111-2012
OI Grislin, Emmanuelle/0000-0002-8429-4012
CR ADAM E, 2001, JASS, V2, P100
   Bauer B., 2001, International Journal of Software Engineering and Knowledge Engineering, V11, P207, DOI 10.1142/S0218194001000517
   BILLSUS D, 2000, P 2000 INT C INT US, P94
   Brusilovsky P, 2001, USER MODEL USER-ADAP, V11, P87, DOI 10.1023/A:1011143116306
   CALVARY G., 2002, 1 INT WORKSHOP TASK, P127
   CAMACHO D, 2000, 2 INT BIC WORKSH AG
   CARENINI G, 2003, P 8 INT C INT US INT, P12
   *FIPA, 2002, SC00030H FIPA
   Gleizes MP, 2000, IEEE 9TH INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P59, DOI 10.1109/ENABL.2000.883705
   Goecks J., 2000, IUI 2000. 2000 International Conference on Intelligent User Interfaces, P129, DOI 10.1145/325737.325806
   Jennings NR, 2000, ARTIF INTELL, V117, P277, DOI 10.1016/S0004-3702(99)00107-1
   Klusch M, 2001, DATA KNOWL ENG, V36, P337, DOI 10.1016/S0169-023X(00)00049-5
   Krulwich B, 1997, IEEE EXPERT, V12, P22, DOI 10.1109/64.621224
   LASHKARI Y, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P444
   Lee WP, 2003, EXPERT SYST APPL, V24, P365, DOI 10.1016/S0957-4174(02)00186-0
   Li M, 2003, INFORM SOFTWARE TECH, V45, P691, DOI 10.1016/S0950-5849(03)00082-X
   Lieberman H, 1995, INT JOINT CONF ARTIF, P924
   MORAITIS P, 2003, 23 SGAI INT C INN TE
   NODINE M, 1999, P 2 INT S COOP DAT S
   PETITROZE C, 2001, USABILITY EVALUATION, P494
   PETITROZE C, 2003, P INT AG WEB TECHN I, P165
   PETITROZE C, 2003, AGENPERSO INTERFACES
   RAMOS MP, 2000, THESIS FRANCE
   Saleh K, 2004, INFORM SOFTWARE TECH, V46, P219, DOI 10.1016/j.infsof.2003.07.004
   Shakshuki E, 2003, KNOWL-BASED SYST, V16, P17, DOI 10.1016/S0950-7051(02)00048-5
   Shardanand U., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P210, DOI 10.1145/223904.223931
   SIMONS J, 2000, AGENT ORIENTED INFOR
   Sycara K, 2003, LECT NOTES COMPUT SC, V2603, P232
   WAGNER G, 1999, INT BIC WORKSH AG OR
   Weiss M, 2003, LECT NOTES COMPUT SC, V2814, P229
NR 30
TC 17
Z9 19
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2006
VL 48
IS 2
BP 107
EP 120
DI 10.1016/j.infsof.2005.03.004
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 999OD
UT WOS:000234398100003
DA 2024-07-18
ER

PT J
AU Sabaliauskaite, G
   Kusumoto, S
   Inoue, K
AF Sabaliauskaite, G
   Kusumoto, S
   Inoue, K
TI Assessing defect detection performance of interacting teams in
   object-oriented design inspection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software inspection; inspection meeting; false positives
ID READING TECHNIQUES; SOFTWARE; PROGRAM
AB Software inspection is one of the methods to ensure the quality of software by finding and repairing defect early in software development process. In a software inspection process, inspectors first review software artifacts individually and then meet in a team in order to find as many defects as possible and to eliminate false positives. However, several empirical studies suggest that inspection meeting may not be necessary since an insignificant number of new defects are found as a result of the meeting.
   In this paper we report on a controlled experiment with 54 undergraduate students who inspection Object-Oriented design documents. Firstly, we compare the performance of inspection teams using two reading techniques: Checklist-Based Reading (CBR) and Perspective-Based Reading (PBR). Secondly, we compare the performance of interacting and nominal teams. The results of comparison between CBR and PBR do not reveal a significant difference between these techniques. Meanwhile, the results of comparison between interacting and nominal teams show that interacting teams do not detect a significant number of new defects during a meeting, and they are less effective than nominal teams: however interacting teams reported fewer false positives as compared to nominal teams. (C) 2004 Elsevier B.V. All rights reserved.
C1 Osaka Univ, Grad Sch Engn Sci, Dept Informat & Math Sci, Inoue Lab, Toyonaka, Osaka 5608531, Japan.
   Osaka Univ, Grad Sch Informat Sci & Technol, Dept Comp Sci, Toyonaka, Osaka 5608531, Japan.
   Kaunas Univ Technol, Dept Informat Syst, LT-3036 Kaunas, Lithuania.
C3 Osaka University; Osaka University; Kaunas University of Technology
RP Osaka Univ, Grad Sch Engn Sci, Dept Informat & Math Sci, Inoue Lab, 1-3 Machikaneyama, Toyonaka, Osaka 5608531, Japan.
EM giedre@ics.es.osaka-u.ac.jp; kusumoto@ist.osaka-u.ac.jp
RI Sabaliauskaite, Giedre/GYD-8916-2022
OI Sabaliauskaite, Giedre/0000-0003-1183-7001
CR Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   BIANCHI A, 2001, P 7 INT SOFTW METR S, P42, DOI DOI 10.1109/METRIC.2001.915514
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Biffl S, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P107, DOI 10.1109/METRIC.2002.1011330
   BOOCH G, 1999, UNIFIED MODELLING LA
   Cheng B., 1996, Proceedings 1996 Australian Software Engineering Conference, P203, DOI 10.1109/ASWEC.1996.534137
   Chernak Y, 1996, IEEE T SOFTWARE ENG, V22, P866, DOI 10.1109/32.553635
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Gilb Tom, 1993, Software inspections
   Grünbacher P, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P4, DOI 10.1109/ASE.2003.1240289
   ITOH K, 2001, SOFTWARE ENG EXERCIS
   Jeffery R, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P539, DOI 10.1109/APSEC.2002.1183076
   Johnson P. M., 1998, Empirical Software Engineering, V3, P9, DOI 10.1023/A:1009787822215
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   Laitenberger O., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P494, DOI 10.1109/ICSE.1999.841039
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   LAITENBERGER O, 2000, THESIS U KAISERSLAUT
   Land LPW, 1997, AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE - PROCEEDINGS, P17, DOI 10.1109/ASWEC.1997.623751
   LANUBILE F, 1996, ISERN9601
   NORUSIS MJ, 1995, SPSS SPSS 6 1 GUID D
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P129, DOI 10.1109/32.585501
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Sabaliauskaite G, 2004, IEICE T INF SYST, VE87D, P475
   Sabaliauskaite G, 2003, INFORM SOFTWARE TECH, V45, P571, DOI 10.1016/S0950-5849(03)00044-2
   Sabaliauskaite G, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P148, DOI 10.1109/ISESE.2002.1166934
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Travassos G. H., 1999, SIGPLAN Notices, V34, P47, DOI 10.1145/320385.320389
   VOTTA L, 1993, ACM SOFTWARE ENG NOT, V18, P107
   Wohlin C, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P118, DOI 10.1109/METRIC.2002.1011331
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 34
TC 14
Z9 14
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2004
VL 46
IS 13
BP 875
EP 886
DI 10.1016/j.infsof.2004.03.004
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 843UJ
UT WOS:000223111800002
DA 2024-07-18
ER

PT J
AU Fakas, GJ
   Karakostas, B
AF Fakas, GJ
   Karakostas, B
TI A peer to peer (P2P) architecture for dynamic workflow management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE peer to peer; workflow management; business process management; Web
   services; XML; simple object access protocol; BPEL4WS
AB This paper presents the architecture of a novel Peer to Peer (P2P) workflow management system. The proposed P2P architecture is based on concepts such as a Web Workflow Peers Directory (WWPD) and Web Workflow Peer (WWP). The WWPD is an active directory system that maintains a list of all peers (WWPs) that are available to participate in Web workflow processes. Similar to P2P systems such as Napster and Gnutella, it allows peers to register with the system and offer their services and resources to other peers over the Internet. Furthermore, the architecture supports a novel notification mechanism to facilitate distributed workflow administration and management. Employing P2P principles can potentially simplify the workflow process and provide a more open, scalable process model that is shared by all workflow participants. This would enable for example a WWP to connect directly to another without going through an intermediary, currently represented by the workflow process management server. P2P workflow becomes more efficient as the number of peers performing the same role increases. Available peers can be discovered dynamically from the WWPD. The few currently existing P2P based workflow systems fail to utilise state of the art Web technologies such as Web Services. In contrast, using the approach described here it is possible to expose interoperable workflow processes over the Internet as services. A medical consultation case study is used to demonstrate the proposed system. (C) 2003 Elsevier B.V. All rights reserved.
C1 City Univ London, Sch Informat, Ctr HCI Design, London EC1V 0HB, England.
   Manchester Metropolitan Univ, Dept Comp & Math, Manchester M15 6BH, Lancs, England.
C3 City University London; Manchester Metropolitan University
RP City Univ London, Sch Informat, Ctr HCI Design, Northampton Sq, London EC1V 0HB, England.
EM g.fakas@mmu.ac.uk; billk@soi.city.ac.uk
CR BREIDENBACH S, 2001, NETWORK WORLD FU JUL
   COOMBS N, 2001, WORK C COMPL DYN SYS
   Fakas G, 1999, INFORM SOFTWARE TECH, V41, P907, DOI 10.1016/S0950-5849(99)00046-4
   FAKAS G, 2002, IN PRESS INT J S MAR
   FISCHER L, 2002, WORKFLOW HDB 200 MAR
   FLAMMIA G, 2001, IEEE INTELLIGENT MAY, P78
   Hayes JG, 2000, IEEE INTERNET COMPUT, V4, P37, DOI 10.1109/4236.845389
   *IBM BPEL, BUS PROC EX LANG WEB
   *IBM WSFL, 2001, WEB SERV FLOW LANG
   *JXTA, PROJ JXTA WEB SIT
   Karakostas B., 2002, Requirements Engineering, V7, P124, DOI 10.1007/s007660200009
   KARAKOSTAS B, 2000, 3 INT C MANCH UK
   KARAKOSTAS B, 1999, J CONCEPTUAL MOD DEC
   KILKKI K, 1999, DIFFERNENTIATED SERV
   MASTERS B, WORKFLOW HDB 2002
   METZ C, 1999, IEEE INTERNET CO APR
   Miller JA, 1998, J INTELL INF SYST, V10, P185, DOI 10.1023/A:1008660827609
   ORAM A, 2001, PEER PEERT HARNESSIN
   ORAM A, 2001, CONSILIENT WORKFLOW
   PAUL S, 1997, USENIX S INT TECHN S
   SCHNEIDER J, 2002, CONVERGENCE PEER WEB
   Thatte S., XLANG -Web services for business process design
   Tsalgatidou A, 2002, DISTRIB PARALLEL DAT, V12, P135, DOI 10.1023/A:1016599017660
   WFMC XPDL WORKFLOW P
   W3C SOAP SIMPLE OBJE
   WFMC RM WORKFLOW REF
   2002, W3C WS WEB SERVICES
   WFMC WFXML INTEROPER
   2001, W3C WSDL WEB SERVICE
NR 29
TC 47
Z9 55
U1 0
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2004
VL 46
IS 6
BP 423
EP 431
DI 10.1016/j.infsof.2003.09.015
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OT
UT WOS:000220241100007
DA 2024-07-18
ER

PT J
AU Lee, C
   Suh, W
   Lee, H
AF Lee, C
   Suh, W
   Lee, H
TI Implementing a community web site: a scenario-based methodology
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE web site development; scenario-based methodology; meta-data
ID CAPABILITIES; SYSTEM; RMM
AB The use of the Internet to facilitate commerce promises vast benefits. An important challenge in the age of Internet business is to fine-tune the Internet business system with customers. For this alignment, this paper proposes a scenario-based object-oriented methodology for developing a community web site. The methodology consists of five phases such as customer analysis, value analysis, web design, implementation design, and construction. Scenarios are used to analyze customers' needs in a natural fashion. A meta-data scheme is proposed for supporting our methodology. A real-life community web is illustrated to demonstrate the usefulness of the methodology. Scenario thinking can help companies use the Internet to buttress and extend their values. (C) 2003 Elsevier B.V. All rights reserved.
C1 Korea Adv Inst Sci & Technol, Grad Sch Management, Dept Management Informat Syst, Corp Informat Syst Lab, Seoul 130012, South Korea.
   Inha Univ, Coll Business Adm, Div Business Adm, Inchon 402751, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Inha
   University
RP Korea Adv Inst Sci & Technol, Grad Sch Management, Dept Management Informat Syst, Corp Informat Syst Lab, 207-43 Cheongryangri Dong, Seoul 130012, South Korea.
EM hsl@kgsm.kaist.ac.kr
RI Lee, Heeseok/C-1528-2011
CR Abels EG, 1997, INTERNET RES, V7, P252, DOI 10.1108/10662249710187141
   ABELS EG, 1999, OCLS SYSTEMS SERVICE, P35
   Afuah A., 2000, INTERNET BUSINESS MO
   [Anonymous], 1990, DESIGNING OBJECT ORI
   [Anonymous], 1977, MARKETING MANAGEMENT
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   [Anonymous], MODERN DATABASE SYST
   [Anonymous], 1995, BUSINESS ENG OBJECT
   [Anonymous], 1994, Human-Computer Interaction
   Artz JM, 1996, INTERNET RES, V6, P64, DOI 10.1108/10662249610127337
   ATZENI P, 1998, EDBT98, P436
   Barry C., 2001, IEEE Multimedia, V8, P52, DOI 10.1109/93.917971
   Bichler M, 1996, PROCEEDINGS OF THE 5TH WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WET ICE '96), P328, DOI 10.1109/ENABL.1996.555257
   BICHLER M, 1996, P 4 EUR C INF SYST, P1093
   Bishop B., 2000, The strategic enterprise
   BLAHA MR, 1988, COMMUN ACM, V31, P414, DOI 10.1145/42404.42407
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Brady Jim., 2001, SYSTEMS ENG, V4, P233, DOI DOI 10.1002/(ISSN)1520-6858
   CASTELEYN S, 2001, P 20 INT C CONC MOD
   Chen JQ, 2001, INFORM SYST MANAGE, V18, P68, DOI 10.1201/1078/43194.18.1.20010101/31266.8
   Cravens DW, 1997, LONG RANGE PLANN, V30, P493, DOI 10.1016/S0024-6301(97)00029-0
   Cunliffe D, 2000, INTERNET RES, V10, P295, DOI 10.1108/10662240010342577
   Delargy K. M., 2001, Manufacturing Engineer, V80, P169, DOI 10.1049/me:20010409
   Dix A.J., 1998, HUMAN COMPUTER INTER, V2nd
   Fong J., 1995, SIGMOD Record, V24, P18, DOI 10.1145/211990.212007
   Fowler Martin., 1999, UML Distilled: A Brief Guide to the Standard Object Modeling Language
   Fraternali P, 2000, ACM T INFORM SYST, V18, P323, DOI 10.1145/358108.358110
   GARZOTTO F, 1993, ACM T INFORM SYST, V11, P1, DOI 10.1145/151480.151483
   Gellersen HW, 1997, COMPUT NETWORKS ISDN, V29, P1429, DOI 10.1016/S0169-7552(97)00038-X
   Ginige A., 2001, IEEE Multimedia, V8, P14, DOI 10.1109/93.923949
   Govers CPM, 2001, INT J PROD ECON, V69, P151, DOI 10.1016/S0925-5273(00)00057-8
   GREENACRE M, 1987, J AM STAT ASSOC, V82, P437, DOI 10.2307/2289445
   Greenacre M.J., 1984, Theory and applications of correspondence analysis
   Gruhn V, 2002, INFORM SOFTWARE TECH, V44, P891, DOI 10.1016/S0950-5849(02)00109-X
   Hackbarth G, 2000, INFORM SYST MANAGE, V17, P78, DOI 10.1201/1078/43192.17.3.20000601/31243.10
   Hutt A., 1994, OBJECT ANAL DESIGN D
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   Isakowitz T, 1997, P ANN HICSS, P177, DOI 10.1109/HICSS.1997.665523
   Jacobson I., 1995, The Object Advantage: Business Process Reengineering with Object Technology
   Jarvenpaa SL, 1999, J STRATEGIC INF SYST, V8, P235, DOI 10.1016/S0963-8687(99)00025-6
   Killander AJ, 2001, INT J TECHNOL MANAGE, V21, P271, DOI 10.1504/IJTM.2001.002912
   KOTLER P, 1996, PRINCIIPLES MARKETIN
   Lange D. B., 1996, Journal of Organizational Computing and Electronic Commerce, V6, P269
   LANGE DB, 1993, P INF SCI 93, P296
   LANGE DB, 1994, P 27 HAW INT C SYST, P380
   LEE C, 2002, P ITS 14 BIENN C SEO
   Lee H, 2001, J ORG COMP ELECT COM, V11, P77, DOI 10.1207/S15327744JOCE1102_01
   Lee H, 1999, INFORM MANAGE, V36, P121, DOI 10.1016/S0378-7206(99)00011-7
   LEE H, 1999, J DATABASE MANAGE, V10, P3
   Marquis GP, 2002, INFORM SOFTWARE TECH, V44, P507, DOI 10.1016/S0950-5849(02)00050-2
   MAUGHAN G, 1993, P OOIS 94 INT C OBJ
   NOVAK TP, 2000, MARKET SCI, V19, P43
   ORFALI R, 1996, ESSENTIAL CLIENT SER
   Perkowitz M, 2000, ARTIF INTELL, V118, P245, DOI 10.1016/S0004-3702(99)00098-3
   Powell T., 2002, Web Design: The Complete Reference
   Rolland C., 1998, Requirements Engineering, V3, P23, DOI 10.1007/BF02802919
   ROLLAND CR, 1998, DATA KHOWL ENG, P125
   SCHWABE D, 1995, COMMUN ACM, V38, P45, DOI 10.1145/208344.208354
   Schwabe D., 2001, IEEE Multimedia, V8, P20, DOI 10.1109/93.923950
   SCHWABE DD, 1999, SIGWEBO NEWS LETT
   Seybold PB, 2001, HARVARD BUS REV, V79, P80
   Smart KL, 2001, INFORM MANAGE-AMSTER, V39, P177, DOI 10.1016/S0378-7206(01)00089-1
   Standing C, 2002, INFORM SOFTWARE TECH, V44, P151, DOI 10.1016/S0950-5849(02)00002-2
   TAKAHASHI K, 1997, P 6 WORLD WID WEB C
   Tannenbaum A., 1994, IMPLEMENTING CORPORA
   Taylor MJ, 2002, INFORM SOFTWARE TECH, V44, P381, DOI 10.1016/S0950-5849(02)00024-1
   TROYER MFD, 1998, P 7 INT WWW C BRISB
   Wheeler BC, 2002, INFORM SYST RES, V13, P125, DOI 10.1287/isre.13.2.125.89
   Woojung Suh, 2001, Journal of Database Management, V12, P25, DOI 10.4018/jdm.2001040103
   ZANG P, 2002, INT J ELECTRON COMM, V6, P9
NR 70
TC 5
Z9 5
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN 1
PY 2004
VL 46
IS 1
BP 17
EP 33
DI 10.1016/S0950-5849(03)00094-6
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 762HG
UT WOS:000187965600002
DA 2024-07-18
ER

PT J
AU Hu, JM
   Grefen, P
AF Hu, JM
   Grefen, P
TI Conceptual framework and architecture for service mediating workflow
   management
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE workflow management; service mediation; enactment flexibility; dynamic
   binding; business-to-business collaboration
AB This paper proposes a three-layer workflow concept framework to realize workflow enactment flexibility by dynamically binding activities to their implementations at run time. A service mediating layer is added to bridge business process definition and its implementation. Based on this framework, we propose an extended workflow management systems architecture, in which service contracting layer, service binding layer and service invocation layer are extensions to support the proposed service mediating concept. According to an enactment specification, different instances of the same activity can be bound to different services to achieve enactment flexibility. The conceptual framework and architecture together provide a comprehensive approach to flexible service enactment in B2B collaborative settings. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Twente, Dept Comp Sci, NL-7500 AE Enschede, Netherlands.
C3 University of Twente
RP Grefen, P (corresponding author), Univ Twente, Dept Comp Sci, POB 217, NL-7500 AE Enschede, Netherlands.
EM p.w.p.j.grefen@tm.tue.nl
RI Grefen, Paul W.P.J./C-2174-2014
CR Agostini A, 2000, LECT NOTES COMPUT SC, V1806, P218
   Alonso G, 1999, RIDE-VE '99 - NINTH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES ON DATA ENGINEERING: INFORMATION TECHNOLOGY FOR VIRTUAL ENTERPRISES, PROCEEDINGS, P132, DOI 10.1109/RIDE.1999.758645
   Angelov S., 2002, P 3 IFIP WORK C INFR, P143
   Casati F, 2001, INFORM SYST, V26, P143, DOI 10.1016/S0306-4379(01)00014-X
   Casati F, 1999, ACM T DATABASE SYST, V24, P405, DOI 10.1145/328939.328996
   Grefen P, 2000, COMPUT SYST SCI ENG, V15, P277
   GREFEN P, 2002, RC22378 IBM RES DIV
   HEINL P, 1999, P INT JOINT C WORK A, P79
   *HP, 2001, PROC MAN WHIT PAP TE
   *IBM CORP, 1999, IBM MQ SER WORKFL GE
   *IBM CORP, 2000, IBM WEB SERV ARCH TE
   Marton A., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P336, DOI 10.1109/RELDIS.1999.805120
   Pilioura T., 2001, Technologies for E-Services. Second International Workshop, TES 2001. Proceedings (Lecture Notes in Computer Science Vol.2193), P1
   VONK J, 2003, IN PRESS J DISTRIBUT
   Vossen G, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P587, DOI 10.1145/304181.304586
   *WFMC, 1995, WFMCTC001003
   2002, BPEL4WS
NR 17
TC 12
Z9 13
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2003
VL 45
IS 13
BP 929
EP 939
DI 10.1016/S0950-5849(03)00092-2
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 725AJ
UT WOS:000185520200004
OA Green Published
DA 2024-07-18
ER

PT J
AU Xu, ZW
   Khoshgoftaar, TM
   Allen, EB
AF Xu, ZW
   Khoshgoftaar, TM
   Allen, EB
TI Application of fuzzy expert systems in assessing operational risk of
   software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE fuzzy expert systems; operational risk assessment; independent
   verification and validation; risk matrix; fuzzy rules; subjective
   probability
ID PROBABILITY
AB Risk is the potential for realization of undesirable consequences of an event. Operational risk of software is the likelihood of untoward events occurring during operations due to software failures. NASA IV&V Facility is an independent institution which conducts Independent Assessments for various NASA projects. Its responsibilities, among others, include the assessments of operational risks of software. In this study, we investigate Independent Assessments that are conducted very early in the software development life cycle.
   Existing risk assessment methods are largely based on checklists and analysis of a risk matrix, in which risk factors are scored according to their influence on the potential operational risk. These scores are then arithmetically aggregated into an overall risk score. However, only incomplete project information is available during the very early phases of the software life cycle, and thus, a quantitative method, such as a risk matrix. must make arbitrary assumptions to assess operational risk.
   We have developed a fuzzy expert system, called the Research Prototype Early Assessment System, to support Independent Assessments of projects during the very early phases of the software life cycle. Fuzzy logic provides a convenient way to represent linguistic variables, subjective probability, and ordinal categories. To represent risk, subjective probability is a better way than quantitative objective probability of failure. Furthermore, fuzzy severity categories are more credible than numeric scores. We illustrated how fuzzy expert systems can infer useful results by using the limited facts about a current project, and rules about software development. This approach can be extended to add planned IV&V level. history of past NASA projects, and rules from NASA experts. (C) 2003 Published by Elsevier Science B.V.
C1 Florida Atlantic Univ, Dept Comp Sci & Engn, Empir Software Engn Lab, Boca Raton, FL 33431 USA.
   Mississippi State Univ, Mississippi State, MS 39762 USA.
   Motorola Inc, Labs, Schaumburg, IL 60196 USA.
C3 State University System of Florida; Florida Atlantic University;
   Mississippi State University
RP Khoshgoftaar, TM (corresponding author), Florida Atlantic Univ, Dept Comp Sci & Engn, Empir Software Engn Lab, Boca Raton, FL 33431 USA.
OI Xu, Zhiwei/0000-0002-0401-8481
CR [Anonymous], 1997, Fuzzy and neural approaches in engineering
   CALLAHAN JR, 1995, WVUSCSTR9411
   CHARETTE R, 1989, SOFTWARE ENG RISK AN
   CONVERSE RN, 1988, NSIA C SOFTW IN THEI
   DOWN A, 1994, RISK MANAGEMENT SOFT
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   GIARRATANO J., 1989, EXPERT SYSTEMS PRINC
   HENLEY E, 1992, PROBABILISTIC RISK A
   HENRY J, 1964, STUDIES SUBJECTIVE P
   JANG JSR, 1997, NEUROFUZZY SOFTWARE
   Kaufmann A., 1985, INT J APPROXIMATE RE
   KOSKO B, 1990, INT J GEN SYST, V17, P211, DOI 10.1080/03081079008935108
   Lyu M.R., 1995, HDB SOFTWARE RELIABI
   Orchard R.A., 1998, FUZZYCLIPS VERSION 6
   Rowe W.D., 1988, ANATOMY RISK
   XU Z, 2001, THESIS FLORIDA ATLAN
   Xu Z., 1997, THESIS GUANGXI U NAN
   Yager R R., 1987, Fuzzy sets and applications
   ZWICK R, 1989, INT J MAN MACH STUD, V30, P69, DOI 10.1016/S0020-7373(89)80021-5
NR 19
TC 42
Z9 47
U1 2
U2 8
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2003
VL 45
IS 7
BP 373
EP 388
DI 10.1016/S0950-5849(03)00010-7
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 680XC
UT WOS:000183004500001
DA 2024-07-18
ER

PT J
AU Zhang, XM
   Xu, H
   Yu, QL
   Zeng, SP
   Dai, S
   Yang, HW
   Wu, SH
AF Zhang, Ximing
   Xu, Huan
   Yu, Qiuling
   Zeng, Shipei
   Dai, Shan
   Yang, Haowen
   Wu, Shuhan
TI License recommendation for open source projects in the power industry
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Open source strategy; Open source software license; License
   recommendation method; Power industry
ID SYSTEMS
AB Context: Establishing secure and appropriate licensing procedures for open-source software is essential in the development of a decentralized renewable energy system within the smart grid industry. Nonetheless, software developers in the power industry encounter obstacles in comprehending and electing licenses on account of factors such as resemblances in terms, intricacies of the law, compatibility of licenses, and the slow development of the open source movement in the power industry.Objective: This paper aims to comprehensively examine the licenses of open source projects in the power industry, which is essential for the completion and popularity of projects. A novel framework consisting of two stages (i.e. data processing and recommendation) is proposed to analyze the current situation of open source license selection in the power industry. Method: By analyzing 274,442 open source repositories related to 40 electricity-related keywords from GitHub, we developed a machine learning-powered license recommendation methodology. We first employed the K -means method to cluster the selected repositories and identified 6 major clusters. Next, we utilized the random forest method to predict licenses for new repositories based on the clustering results. We evaluated the accuracy of the model by testing it on training and testing datasets and achieved 96% accuracy.Results: We found that open source repository clusters in the power industry have distinct licensing preferences reflecting their unique objectives, with MIT being the most popular due to its permissiveness, and GPL-3.0, Apache-2.0, and BSD-3-Clause being favored by clusters valuing copyleft principles, closed-source derivatives protection, and control over software use, respectively. In addition, the study recognizes the content of open source projects as a meaningful indicator for license recommendation.Conclusion: These insights substantially enhance comprehension of the distribution and the selection of open source licenses in the power industry, potentially aiding future research on license recommendation in this field.
C1 [Zhang, Ximing; Xu, Huan; Yu, Qiuling] China Southern Power Grid, Guangzhou, Peoples R China.
   [Zeng, Shipei; Dai, Shan; Wu, Shuhan] Shenzhen Res Inst Big Data, Shenzhen, Peoples R China.
   [Yang, Haowen] Chinese Univ Hong Kong, Shenzhen, Peoples R China.
   [Wu, Shuhan] Daoyuan Bldg,2001 Longxiang Rd, Shenzhen, Peoples R China.
C3 China Southern Power Grid; Shenzhen Research Institute of Big Data; The
   Chinese University of Hong Kong, Shenzhen
RP Wu, SH (corresponding author), Daoyuan Bldg,2001 Longxiang Rd, Shenzhen, Peoples R China.
EM shuhanwu@sribd.cn
RI Yang, Haowen/J-5928-2019
OI Yang, Haowen/0000-0002-3196-8917
FU Digital Grid Open Source Community Operation Model Research and Pilot
   Practice Project [000000HY41220001, 21000020220303012100026]; China
   Southern Power Grid, China
FX This study was supported by the "Digital Grid Open Source Community
   Operation Model Research and Pilot Practice Project'' (000000HY41220001)
   and the "Digital Grid Open Source Community Operation Model Design and
   Prototype Construction Project'' (21000020220303012100026) from China
   Southern Power Grid, China.
CR Bai H, 2022, ENERGY REP, V8, P390, DOI 10.1016/j.egyr.2022.10.328
   Balter B, 2015, GitHub Blog
   Battula S, 2020, APPL ENERG, V275, DOI 10.1016/j.apenergy.2020.115182
   Bicego M, 2023, IEEE T KNOWL DATA EN, V35, P830, DOI 10.1109/TKDE.2021.3086147
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Cai W, 2021, AUTOMOTIVE INNOV, V4, P3, DOI 10.1007/s42154-021-00139-z
   Cossart Q, 2020, IEEE PES INNOV SMART, P1025, DOI 10.1109/ISGT-Europe47291.2020.9248773
   CSG, 2019, The impact of the fourth industrial revolution on the transformation trend of the power grid
   Gandhi R, 2018, PROCEEDINGS OF THE 2018 ACM INTERNATIONAL CONFERENCE ON SUPPORTING GROUP WORK, GROUP 2018, P219, DOI 10.1145/3148330.3148333
   Hopkinson K, 2006, IEEE T POWER SYST, V21, P548, DOI 10.1109/TPWRS.2006.873129
   Howard C., 2021, Rethinking software development: How open source is defining a new era for energy and utilities
   IEA, 2022, GLOBAL EV OUTLOOK 20, DOI DOI 10.1787/C83F815C-EN
   IEA, 2022, WORLD EN OUTL, DOI DOI 10.1787/WEO-2018-EN
   Jiang S, 2021, INT C COMP SUPP COOP, P244, DOI 10.1109/CSCWD49262.2021.9437661
   Kapitsaki GM, 2021, IEEE T SOFTWARE ENG, V47, P919, DOI 10.1109/TSE.2019.2909021
   Kapitsaki GM, 2020, EUROMICRO CONF PROC, P72, DOI 10.1109/SEAA51224.2020.00022
   Kapitsaki GM, 2017, J SYST SOFTWARE, V131, P386, DOI 10.1016/j.jss.2016.06.064
   Markovic DS, 2013, RENEW SUST ENERG REV, V24, P566, DOI 10.1016/j.rser.2013.03.068
   Murray A, 2022, Open source licenses in 2022: Trends and predictions
   OSI, 2022, OSI approved licenses
   OSI, 2007, The Open Source Definition (v1.9)
   Qays MO, 2023, ENERGY REP, V9, P2440, DOI 10.1016/j.egyr.2023.01.085
   Rodriguez MZ, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0210236
   Sarajlic M, 2022, 2022 OPEN SOURCE MODELLING AND SIMULATION OF ENERGY SYSTEM (OSMSES), DOI 10.1109/OSMSES54027.2022.9769154
   Sioshansi F. P., 2022, Decentralized frameworks for future power systems, P1
   Strasser T, 2011, IEEE POW ENER SOC GE
   Tesfatsion L, 2023, Open source software (OSS) for electricity market research, teaching, and training
   The Data Science Lab, 2014, Finding the K in K-means clustering
   Tibshirani R, 2001, J ROY STAT SOC B, V63, P411, DOI 10.1111/1467-9868.00293
   Yun HY, 2017, INT CONF SOFTW ENG, P83, DOI 10.1109/ICSESS.2017.8342869
   Zhiyou Liu, 2021, 2021 IEEE International Conference on Software Engineering and Artificial Intelligence (SEAI), P30, DOI 10.1109/SEAI52285.2021.9477531
   Zimmerman RD, 2011, IEEE T POWER SYST, V26, P12, DOI 10.1109/TPWRS.2010.2051168
   Zitnik S., 2016, 2016 24 TELECOMMUNIC, P1
   Zuo H, 2023, ELECTR POW SYST RES, V216, DOI 10.1016/j.epsr.2022.109012
NR 34
TC 0
Z9 0
U1 3
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107391
DI 10.1016/j.infsof.2023.107391
EA DEC 2023
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI0U2
UT WOS:001138184100001
DA 2024-07-18
ER

PT J
AU Elias, P
   Campos, HD Jr
   Ogasawara, E
   Murta, P
AF Elias, Paulo
   Campos Jr, Heleno de S.
   Ogasawara, Eduardo
   Murta, Paulino
TI Towards accurate recommendations of merge conflicts resolution
   strategies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Merge; Conflict; Resolution; Recommendation; Data mining; Machine
   learning
ID SEMISTRUCTURED MERGE
AB Context: in software engineering, developers working concurrently on a project frequently need to merge changes in the source code. The manual resolution of merge conflicts is a laborious and time-consuming task. Some studies have investigated the nature of merge conflicts and proposed methods to predict, mitigate, and resolve conflicts. However, the automatic resolution of conflicts is still an open problem. Objective: in this paper, we design and evaluate MESTRE (MErge STrategy REcommender), a conflict resolution strategy recommender that predicts the merge resolution strategy among version 1, version 2, concatenation of version 1 and 2, concatenation of version 2 and 1, combination of lines from version 1 and 2, and manually writing new code. For the first four strategies, MESTRE is able to not only recommend the strategy but also automatically resolve the conflict.Methods: we collected data from 20 open-source projects with more than 1000 merge conflicts each. Using this data, we trained and evaluated a separate classifier for each project to predict the conflict resolution strategy for a conflicting chunk.Results: MESTRE achieved an overall average accuracy of 80.8% among all projects. It represents a normalized improvement of 54.8% over the majority class baseline. Furthermore, since MESTRE can provide the exact conflict resolution for the most frequent conflict resolution strategies, it could automatically resolve 70.5% of the conflicts. We also found that attributes related to the conflicting chunk notably impact the classification accuracy more than those related to the merge and the file. Conclusion: This paper makes the following contributions: (1) MESTRE, a tool to predict merge conflict resolutions based on attributes of a Git repository; (2) an analysis of the relevance of attributes to the prediction of resolution strategies; and (3) an ablation study to find the contribution of each group of attributes to MESTRE's performance.
C1 [Elias, Paulo; Campos Jr, Heleno de S.; Murta, Paulino] Univ Fed Fluminense, Niteroi, Brazil.
   [Ogasawara, Eduardo] Ctr Fed Educ Tecnol Celso Suckow Fonseca CEFET RJ, Rio De Janeiro, Brazil.
C3 Universidade Federal Fluminense; Centro Federal de Educacao Tecnologica
   Celso Suckow da Fonseca (CEFET-RJ)
RP Elias, P (corresponding author), Univ Fed Fluminense, Niteroi, Brazil.
EM pauloe@id.uff.br; helenocampos@id.uff.br; eogasawara@ieee.org;
   leomurta@ic.uff.br
RI Ogasawara, Eduardo/N-6438-2014
OI Ogasawara, Eduardo/0000-0002-0466-0626; de Souza Campos Junior,
   Heleno/0000-0001-5541-0021
FU CNPq, Brazil [309631/2021-1, 311955/2020-7]; FAPERJ, Brazil
   [E-26/200.591/2021, E-26/201.304/2021, E-26/010.101250/2018,
   E26/010.002285/2019, E26/201.038/2021]; Brazilian Navy
FX The authors would like to thank CNPq, Brazil (grants 309631/2021-1 and
   311955/2020-7), FAPERJ, Brazil (grants E-26/200.591/2021,
   E-26/201.304/2021, E-26/010.101250/2018, E26/010.002285/2019, and
   E26/201.038/2021) and Brazilian Navy for the financial support.
CR Accioly P, 2018, IEEE WORK CONF MIN S, P576, DOI 10.1145/3196398.3196437
   Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon Uri, 2019, INT C LEARN REPR
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Bird C., 2009, P 2009 6 IEEE INT WO, P1
   Brindescu C, 2020, EMPIR SOFTW ENG, V25, P562, DOI 10.1007/s10664-019-09735-4
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Campos HDS Jr, 2022, 36TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2022, P425, DOI 10.1145/3555228.3555229
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cavalcanti G, 2015, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2015.7321191
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Costa C, 2021, IEEE T SOFTWARE ENG, V47, P1198, DOI 10.1109/TSE.2019.2917191
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/2950290.2950339
   Costa C, 2014, INT J SOFTW ENG KNOW, V24, P1489, DOI 10.1142/S0218194014400166
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Dinella E, 2023, IEEE T SOFTWARE ENG, V49, P1599, DOI 10.1109/TSE.2022.3183955
   Fraternali P, 2020, LECT NOTES COMPUT SC, V12128, P228, DOI 10.1007/978-3-030-50578-3_16
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Han J., 2022, Data mining: concepts and techniques
   Kareshk M.O., 2020, Master's thesis
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Mantovani RG, 2016, PROCEEDINGS OF 2016 5TH BRAZILIAN CONFERENCE ON INTELLIGENT SYSTEMS (BRACIS 2016), P37, DOI [10.1109/BRACIS.2016.62, 10.1109/BRACIS.2016.018]
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Menezes J., 2020, ACM INT C P SERIES, P203
   Nelson N, 2019, EMPIR SOFTW ENG, V24, P2863, DOI 10.1007/s10664-018-9674-x
   Nishimura Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P661, DOI 10.1109/SANER.2016.46
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Pan R, 2021, PROC INT CONF SOFTW, P785, DOI 10.1109/ICSE43902.2021.00077
   Pappa GL, 2006, LECT NOTES COMPUT SC, V4212, P341
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Phillips S, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P9
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Shen B, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1291, DOI 10.1109/ASE51524.2021.9678937
   Sung CH, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P172, DOI 10.1145/3377813.3381362
   Svyatkovskiy A, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P822, DOI 10.1145/3540250.3549163
   Vale G, 2020, EMPIR SOFTW ENG, V25, P402, DOI 10.1007/s10664-019-09774-x
   Xing XQ, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P11, DOI [10.1109/ibf.2019.8665493, 10.1109/IBF.2019.8665493]
   Zhang JL, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P77, DOI 10.1145/3533767.3534396
   Zhu F, 2018, PROC ACM PROGRAM LAN
   Ziegler T., 2017, Master's thesis
   Zimmermann T, 2007, P ICSE 2007 WORKSH 4
NR 49
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107332
DI 10.1016/j.infsof.2023.107332
EA SEP 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X7QE0
UT WOS:001100342800001
DA 2024-07-18
ER

PT J
AU Vo, HD
   Nguyen, S
AF Vo, Hieu Dinh
   Nguyen, Son
TI Can an old fashioned feature extraction and a light-weight model improve
   vulnerability type identification performance?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Vulnerability type identification; Vulnerability resolution; Software
   vulnerability
ID NEURAL-NETWORKS
AB Recent advances in automated vulnerability detection have achieved potential results in helping developers determine vulnerable components. However, after detecting vulnerabilities, investigating to fix vulnerable code is a non-trivial task. In fact, the types of vulnerability, such as buffer overflow or memory corruption, could help developers quickly understand the nature of the weaknesses and localize vulnerabilities for security analysis. In this work, we investigate the problem of vulnerability type identification (VTI). The problem is modeled as the multi-label classification task, which could be effectively addressed by ''pre-training, then fine-tuning"framework with deep pre-trained embedding models. We evaluate the performance of the well-known and advanced pre-trained models for VTI on a large set of vulnerabilities. Surprisingly, their performance is not much better than that of the classical baseline approach with an old-fashioned bag-of-word, TF-IDF. Meanwhile, these deep neural network approaches cost much more resources and require GPU. We also introduce a lightweight independent component to refine the predictions of the baseline approach. Our idea is that the types of vulnerabilities could strongly correlate to certain code tokens (distinguishing tokens) in several crucial parts of programs. The distinguishing tokens for each vulnerability type are statistically identified based on their prevalence in the type versus the others. Our results show that the baseline approach enhanced by our component can outperform the state-of-the-art deep pre-trained approaches while retaining very high efficiency. Furthermore, the proposed component could also improve the neural network approaches by up to 92.8% in macro-average F1.
C1 [Vo, Hieu Dinh; Nguyen, Son] VNU Univ Engn & Technol, Fac Informat Technol, Hanoi, Vietnam.
C3 Vietnam National University Hanoi
RP Nguyen, S (corresponding author), VNU Univ Engn & Technol, Fac Informat Technol, Hanoi, Vietnam.
EM hieuvd@vnu.edu.vn; sonnguyen@vnu.edu.vn
OI Vo, Hieu/0000-0002-9407-1971
FU VNU University of Engineering and Technology [CN22.14]
FX This work has been supported by VNU University of Engineering and
   Technology under project number CN22.14.
CR Abuhamad M, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P101, DOI 10.1145/3243734.3243738
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Ameer I, 2023, EXPERT SYST APPL, V213, DOI 10.1016/j.eswa.2022.118534
   [Anonymous], 2023, Vulnerability distribution by types
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bui NDQ, 2021, PROC INT CONF SOFTW, P1186, DOI 10.1109/ICSE43902.2021.00109
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Chen ZM, 2023, IEEE T SOFTWARE ENG, V49, P147, DOI 10.1109/TSE.2022.3147265
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Covidence, US
   Manh CT, 2021, ASIA PAC SOFWR ENG, P492, DOI 10.1109/APSEC53868.2021.00056
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Ding YRB, 2022, EUR CON SFTWR MTNCE, P959, DOI 10.1109/SANER53432.2022.00114
   Ding YRB, 2020, IEEE INT CONF AUTOM, P275, DOI 10.1145/3324884.3416587
   Ding ZS, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10118-5
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   dwheeler, Flawfinder
   Elder S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10179-6
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Godbole S, 2004, LECT NOTES ARTIF INT, V3056, P22
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Gvero T, 2015, ACM SIGPLAN NOTICES, V50, P416, DOI [10.1145/2858965.2814295, 10.1145/2814270.2814295]
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Iannone E, 2023, IEEE T SOFTWARE ENG, V49, P44, DOI 10.1109/TSE.2022.3140868
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Kanade A, 2020, PR MACH LEARN RES, V119
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Krasner H., 2021, P CONSORTIUM INF SOF
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Nguyen H.A., 2022, 37 IEEE ACM INT C AU, P1
   Nguyen S, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111786
   Nguyen S, 2020, PROC INT CONF SOFTW, P1372, DOI 10.1145/3377811.3380926
   Okun V, 2013, Special Publication (NIST SP), DOI DOI 10.6028/NIST.SP.500-297
   Ott M, 2019, NAACL HLT 2019: THE 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES: PROCEEDINGS OF THE DEMONSTRATIONS SESSION, P48
   Pearce H, 2022, Arxiv, DOI [arXiv:2112.02125, DOI 10.48550/ARXIV.2112.02125]
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Son Nguyen, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P710, DOI 10.1109/ASE.2019.00072
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wartschinski L, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106809
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang ZL, 2019, ADV NEUR IN, V32
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang ML, 2006, IEEE T KNOWL DATA EN, V18, P1338, DOI 10.1109/TKDE.2006.162
   Zhou X, 2021, PROC IEEE INT CONF S, P425, DOI 10.1109/ICSME52107.2021.00044
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 62
TC 1
Z9 1
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107304
DI 10.1016/j.infsof.2023.107304
EA AUG 2023
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R6TX2
UT WOS:001065671700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Amin, A
   Rehman, M
   Basri, S
   Capretz, LF
   Goraya, MAS
   Akbar, R
AF Amin, Aamir
   Rehman, Mobashar
   Basri, Shuib
   Capretz, Luiz Fernando
   Goraya, Muhammad Awais Shakir
   Akbar, Rehan
TI The impact of stressors on the relationship between personality traits,
   knowledge collection behaviour and programmer creativity intention in
   software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Creativity; Stress; Knowledge collection behaviour; Personality traits;
   Software engineering; Programmer; Componential theory of creativity
ID EMPLOYEE CREATIVITY; CURVILINEAR RELATIONSHIPS; CONTEXTUAL FACTORS;
   WORK-ENVIRONMENT; JOB-PERFORMANCE; MODERATING ROLE; MEDIATING ROLE;
   ORGANIZATIONS; COMPLEXITY; EXPERIENCE
AB Context: Individual and contextual factors have a profound impact on an individual's creativity. In the first part of this research, we concluded that, for a programmer's creativity intention, individual factors including big 5 personality traits and knowledge collection behaviour play a key role. However, it is important to bring contextual factors into the model to provide a holistic understanding. Objectives: Hence, the objective of the present research is to expand the earlier work by (i) identifying the software engineering occupational stressors relevant to programmers, and (ii) examining their impact as moderators for the relationship between individual factors (i.e., big five personality traits and knowledge collection behaviour) and the creativity intention of the programmer. Methods: To analyse the moderating impact of 6 stressors, the survey questionnaire was used to collect data from 294 programmers working in software companies in Pakistan. The data were analysed using the Structural Equation Modelling (SEM) - Partial Least Square (PLS) technique. Results: The findings revealed that in the presence of a moderate level of stress, the relationship between knowledge collection behaviour and creativity intention was strengthened. Furthermore, stressors interacted differently with different personality traits. An overarching statement could be that most of the stressors positively moderated the relationships between different personality traits and creativity intentions. However, contrary to the prior research, the majority of the stressors negatively affected the impact of the openness to experience trait on creativity intention. Conclusion: The research significantly contributes to the body of knowledge of behavioural software engineering. The findings of this research are novel and intriguing in many aspects and will benefit software organizations to increase innovation, by increasing programmers' creativity through mitigating stress. The study is also one of the few studies which have attempted to understand the interaction between individual and contextual factors with a programmer's creativity.
C1 [Amin, Aamir; Goraya, Muhammad Awais Shakir] Univ Portsmouth, Fac Business & Law, Sch Org Syst & People, Portsmouth, England.
   [Rehman, Mobashar] Middlesex Univ, Fac Business & Law, Dept Management Leadership & Org, London, England.
   [Basri, Shuib] Univ Teknol PETRONAS, Dept Comp & Informat Sci, Seri Iskandar 32610, Perak, Malaysia.
   [Capretz, Luiz Fernando] Western Univ London, Dept Elect & Comp Engn, London, ON N6A5B9, Canada.
   [Akbar, Rehan] Florida Int Univ, Sch Comp & Informat Sci, Miami, FL USA.
   [Amin, Aamir] Richmond Bldg,Portland St, Portsmouth PO1 3DE, England.
C3 University of Portsmouth; Middlesex University; Universiti Teknologi
   Petronas; Western University (University of Western Ontario); State
   University System of Florida; Florida International University
RP Amin, A (corresponding author), Univ Portsmouth, Fac Business & Law, Sch Org Syst & People, Portsmouth, England.; Amin, A (corresponding author), Richmond Bldg,Portland St, Portsmouth PO1 3DE, England.
EM Aamir.amin@port.ac.uk
RI Amin, Aamir/IWU-5519-2023; Capretz, Luiz Fernando/K-5944-2013
OI Capretz, Luiz Fernando/0000-0001-6966-2369; Goraya, Dr Muhammad Awais
   Shakir/0000-0001-8207-5732; Amin, Aamir/0000-0001-6385-452X
CR Abrahamsson P., 2008, P 9 INT C LIM IR JUN, P1
   Akula B., 2008, 4 INT S MAN ENG INF, P94
   Alatis J.E., 2001, LANGUAGE OUR TIME BI
   Amabile T.M., 2013, ENCY MANAGEMENT THEO, DOI [DOI 10.4135/9781452276090.N50, 10.4135/9781452276090.n42, DOI 10.4135/9781452276090.N42]
   Amabile T.M, 2012, ENCY MANAG THEORY
   Amabile TM, 1997, CALIF MANAGE REV, V40, P39, DOI 10.2307/41165921
   Amabile TM, 1996, ACAD MANAGE J, V39, P1154, DOI 10.5465/256995
   Amin Aamir, 2015, 2015 International Symposium on Technology Management and Emerging Technologies (ISTMET), P108, DOI 10.1109/ISTMET.2015.7359011
   Amin A, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106405
   Anderson N, 2004, J ORGAN BEHAV, V25, P147, DOI 10.1002/job.236
   [Anonymous], 2022, PAK COMP SOFTW
   Arora V, 2013, ACAD BUSINESS RES I, P1
   Arroba T., 1987, PRESSURE WORK SURVIV
   Babin BJ, 1996, J RETAILING, V72, P57, DOI 10.1016/S0022-4359(96)90005-6
   Baer M, 2006, J APPL PSYCHOL, V91, P963, DOI 10.1037/0021-9010.91.4.963
   Bakker AB, 2010, J PERS PSYCHOL, V9, P3, DOI 10.1027/1866-5888/a000006
   Baron R.S., 1986, ADV EXP SOC PSYCHOL, V19, P1, DOI [10.1016/S0065-2601(08)60211-7, DOI 10.1016/S0065-2601(08)60211-7]
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Bartneck C., 2007, 2007 2nd Annual Conference on Human-Robot Interaction (HRI), P217, DOI 10.1145/1228716.1228746
   BASCHERA P, 1979, ERGONOMICS, V22, P377, DOI 10.1080/00140137908924622
   Beilock SL, 2005, PSYCHOL SCI, V16, P101, DOI 10.1111/j.0956-7976.2005.00789.x
   Berenbach B., 2006, P INT WORKSH GLOB SO, DOI [10.1145/1138506, DOI 10.1145/1138506]
   Bledow R, 2013, ACAD MANAGE J, V56, P432, DOI 10.5465/amj.2010.0894
   Bono JE, 2002, J PERS, V70, P311, DOI 10.1111/1467-6494.05007
   Brown J.A., 2018, BETTER UNDERSTANDING
   Brown JA, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P398, DOI 10.5220/0006794103980405
   Byrne KA, 2015, PERS INDIV DIFFER, V74, P22, DOI 10.1016/j.paid.2014.10.009
   Byron K, 2010, J APPL PSYCHOL, V95, P201, DOI 10.1037/a0017868
   Cabrera A, 2006, INT J HUM RESOUR MAN, V17, P245, DOI 10.1080/09585190500404614
   Chen IYL, 2009, EDUC TECHNOL SOC, V12, P134
   Chen WS, 2004, INFORM SYST J, V14, P197, DOI 10.1111/j.1365-2575.2004.00173.x
   Chilton MA, 2010, DATA BASE ADV INF SY, V41, P8
   Chin W.W., 2009, HDB PARTIAL LEAST SQ, P655, DOI DOI 10.1007/978-3-540-32827-8_29
   Choi JN, 2012, SOC BEHAV PERSONAL, V40, P681, DOI 10.2224/sbp.2012.40.4.681
   Choi JN, 2009, GROUP ORGAN MANAGE, V34, P330, DOI 10.1177/1059601108329811
   Chu X., 2015, Int J Soc Sci Stud, V3, P78, DOI [10.11114/ijsss.v3i4.857, DOI 10.11114/IJSSS.V3I4.857]
   CIBORRA C., 1996, Improvisation and information technology proceedings ln organizations
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Conboy K, 2009, IFIP ADV INF COMM TE, V301, P122, DOI 10.1007/978-3-642-02388-0_9
   Connor-Smith J., 2007, PSYCNET APA ORG, V103
   Dougherty TW, 2008, J MANAGE PSYCHOL, V23, P653, DOI 10.1108/02683940810894738
   Dybå T, 2000, IEEE SOFTWARE, V17, P82, DOI 10.1109/52.877872
   Eysenck H.J., 1995, Genius: The natural history of creativity
   FACTEAU JD, 1995, J MANAGE, V21, P1, DOI 10.1177/014920639502100101
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Gall Mark, 2006, P 1 INT WORKSH MULT, P4
   GARDNER DG, 1990, ORGAN BEHAV HUM DEC, V45, P209, DOI 10.1016/0749-5978(90)90012-X
   Gee Woo Bock, 2002, Information Resources Management Journal, V15, P14, DOI 10.4018/irmj.2002040102
   George B, 2004, IEEE INT C ENG COMP, P239, DOI 10.1109/ICECCS.2004.1310923
   George JM, 2001, J APPL PSYCHOL, V86, P513, DOI 10.1037//0021-9010.86.3.513
   Ghafoor A, 2022, PERS REV, V51, P644, DOI 10.1108/PR-08-2019-0443
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   Griffin B, 2004, INT J SELECT ASSESS, V12, P243, DOI 10.1111/j.0965-075X.2004.278_1.x
   Gulati J, 2015, PROCEEDING OF THE THIRD INTERNATIONAL SYMPOSIUM ON WOMEN IN COMPUTING AND INFORMATICS (WCI-2015), P209, DOI 10.1145/2791405.2791445
   Hair JF, 2013, LONG RANGE PLANN, V46, P1, DOI 10.1016/j.lrp.2013.01.001
   Halbesleben JRB, 2009, J APPL PSYCHOL, V94, P1452, DOI 10.1037/a0017595
   Hegde R., 2014, 26 INT C SOFTWARE EN, P229
   Henseler J, 2016, IND MANAGE DATA SYST, V116, P2, DOI 10.1108/IMDS-09-2015-0382
   Henseler J, 2009, ADV INT MARKETING, V20, P277, DOI 10.1108/S1474-7979(2009)0000020014
   Highsmith J., 2002, Agile software development ecosystems
   Hirst G, 2009, ACAD MANAGE J, V52, P280, DOI 10.5465/AMJ.2009.37308035
   Hon A.H.Y., 2018, CURR TOP MANAG, P193, DOI [10.4324/9780203794012-11, DOI 10.4324/9780203794012-11]
   Hon AHY, 2016, INT J CONTEMP HOSP M, V28, P862, DOI 10.1108/IJCHM-09-2014-0454
   Hon AHY, 2013, INT J HOSP MANAG, V33, P416, DOI 10.1016/j.ijhm.2012.11.001
   Hyman J, 2003, BRIT J IND RELAT, V41, P215, DOI 10.1111/1467-8543.00270
   Ismail A., 2009, RELATIONSHIP OCCUPAT
   Ivancevich J.M., 1984, STRESS DIAGNOSTIC SU
   IVANCEVICH JM, 1985, INFORM MANAGE, V9, P77, DOI 10.1016/0378-7206(85)90029-1
   Jacko JA, 2012, HUM FACTORS ERGON, P1, DOI 10.1201/b11963
   Janssen O, 2001, ACAD MANAGE J, V44, P1039, DOI 10.5465/3069447
   Jex SM, 2001, J APPL PSYCHOL, V86, P401, DOI 10.1037//0021-9010.86.3.401
   John O.P., 1999, HDB PERSONALITY THEO, P102, DOI DOI 10.1525/FQ.1998.51.4.04A00260
   John O.P., 1991, BIG 5 INVENTORY VERS, DOI DOI 10.1037/T07550-000
   Jose LD, 2020, STUD BUS ECON-ROM, V15, P21, DOI 10.2478/sbe-2020-0003
   Judge TA, 2002, J APPL PSYCHOL, V87, P797, DOI 10.1037//0021-9010.87.4.797
   Judge TA, 2007, NEW HORIZ INNO MANAG, P332
   Kaluzniacky E., 1998, Proceedings of the 1998 ACM SIGCPR Conference, P254, DOI 10.1145/279179.279217
   Kark R, 2009, J ORGAN BEHAV, V30, P785, DOI 10.1002/job.571
   Kim TY, 2010, CREATIVITY RES J, V22, P37, DOI 10.1080/10400410903579536
   Landon P.B., 2016, COMPLEX COGNITIVE PE, V34, P601, DOI [10.2466/Pms.1972.34.2.601, DOI 10.2466/PMS.1972.34.2.601]
   Lanubile F., 2003, SIGSOFT Softw. Eng. Notes, V28, P2, DOI DOI 10.1145/966221.966224
   Lazarus RS, 1984, Stress, appraisal, and coping
   Le H, 2011, J APPL PSYCHOL, V96, P113, DOI 10.1037/a0021016
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Madjar N., 2017, THERES NO PLACE HOME, V45, P757, DOI [10.5465/3069309, DOI 10.5465/3069309]
   Martensson M., 2000, J KNOWL MANAG, V4, P204
   Matzler K, 2011, J ECON PSYCHOL, V32, P317, DOI 10.1016/j.joep.2010.12.006
   *McCrae R.R., 1997, HDB PERSONALITY PSYC, P825, DOI [10.1016/B978-012134645-4/50032-9, DOI 10.1016/B978-012134645-4/50032-9]
   Mohan G., 2013, Great Lakes Herald, V7, P18
   Moran M., 2005, IT CAREER BUILDERS T
   Mount MK, 2008, PERS PSYCHOL, V61, P113, DOI 10.1111/j.1744-6570.2008.00107.x
   Mount MK, 2005, PERS PSYCHOL, V58, P447, DOI 10.1111/j.1744-6570.2005.00468.x
   Nicol JJ, 1996, CREATIVITY RES J, V9, P1, DOI 10.1207/s15326934crj0901_1
   Nikolaou I., 2015, CONT ISSUES THEORY P
   Nisar Q. A., 2014, INT J RES, V1, P231
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Ohly S, 2010, J ORGAN BEHAV, V31, P543, DOI 10.1002/job.633
   Oldham GR, 1996, ACAD MANAGE J, V39, P607, DOI 10.5465/256657
   Ostberg JP, 2020, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.286
   Pai J., 2010, SEOUL J BUS, V16
   Pirzade L., 2010, HUMAN FACTORS SOFTWA
   Qureshi M.R., 2014, Science International, V26, P117
   Raja U, 2004, ACAD MANAGE J, V47, P350, DOI [10.2307/20159586, 10.5465/20159586]
   Rajeswari K.S., 2003, P SIGMIS C COMP PERS
   Rashidi Z., 2009, J Independent Stud Res (MSSE), V7, P1
   Reychav I, 2010, J KNOWL MANAG, V14, P285, DOI 10.1108/13673271011032418
   Roberts BW, 2007, PERSPECT PSYCHOL SCI, V2, P313, DOI 10.1111/j.1745-6916.2007.00047.x
   Rubinstein G, 2008, PERS INDIV DIFFER, V45, P806, DOI 10.1016/j.paid.2008.08.012
   Salgado JF, 2017, J WORK ORGAN PSYCHOL, V33, P229, DOI 10.1016/j.rpto.2017.07.001
   Sangwan R., 2006, Global software development handbook
   Schneider K, 2008, REV: 2008 REQUIREMENTS ENGINEERING VISUALIZATION, P31, DOI 10.1109/REV.2008.1
   Selvarajan TTR, 2016, J VOCAT BEHAV, V94, P39, DOI 10.1016/j.jvb.2016.02.004
   Serrat O., 2017, KNOWLEDGE SOLUTIONS, P903, DOI [10.1007/978-981-10-0983-9_102, DOI 10.1007/978-981-10-0983-9_102]
   Shalley CE, 2004, J MANAGE, V30, P933, DOI 10.1016/j.jm.2004.06.007
   Shalley CE, 2004, LEADERSHIP QUART, V15, P33, DOI 10.1016/j.leaqua.2003.12.004
   Shalley CE, 2009, ACAD MANAGE J, V52, P489, DOI 10.5465/AMJ.2009.41330806
   Shamsi J.A., 2016, UNLEASHING PAKISTAN
   Silvia PJ, 2011, PERS INDIV DIFFER, V51, P687, DOI 10.1016/j.paid.2011.06.011
   Silvia PJ, 2010, PSYCHOL AESTHET CREA, V4, P2, DOI 10.1037/a0016494
   SONNENTAG S, 1994, J OCCUP ORGAN PSYCH, V67, P327, DOI 10.1111/j.2044-8325.1994.tb00571.x
   Sormaz H.W., 2003, PERFORMANCE PRESSURE
   SPECTOR PE, 1988, J APPL PSYCHOL, V73, P11, DOI 10.1037/0021-9010.73.1.11
   Standing C, 2016, INT J INNOV LEARN, V19, P44, DOI 10.1504/IJIL.2016.073288
   Sung SY, 2009, SOC BEHAV PERSONAL, V37, P941, DOI 10.2224/sbp.2009.37.7.941
   Tai C., 2011, ALTERNATIVE MODELS R, V12, P113
   TEICHNER WH, 1963, ERGONOMICS, V6, P83, DOI 10.1080/00140136308930678
   Thomson P, 2017, EXPL CREAT RES, P3, DOI 10.1016/B978-0-12-804051-5.00001-9
   Tierney P, 1999, PERS PSYCHOL, V52, P591, DOI 10.1111/j.1744-6570.1999.tb00173.x
   Tierney P, 2004, J MANAGE, V30, P413, DOI 10.1016/j.jm.2002.12.001
   Tominaga M, 2007, IND HEALTH, V45, P474, DOI 10.2486/indhealth.45.474
   Vaidya JG, 2002, J PERS SOC PSYCHOL, V83, P1469, DOI 10.1037//0022-3514.83.6.1469
   van den Berg PT, 2003, INT J SELECT ASSESS, V11, P326, DOI 10.1111/j.0965-075X.2003.00255.x
   van den Hooff B., 2004, Journal of Knowledge Management, V8, P117, DOI 10.1108/13673270410567675
   van Emmerik IH, 2008, PSYCHOL REP, V102, P484, DOI 10.2466/PR0.102.2.484-494
   Verhaeghen P, 2005, EMOTION, V5, P226, DOI 10.1037/1528-3542.5.2.226
   Wang S, 2010, HUM RESOUR MANAGE R, V20, P115, DOI 10.1016/j.hrmr.2009.10.001
   Warr P.B., 2007, DECISION LATITUDE JO, V4, P285, DOI [10.1080/02678379008256991, DOI 10.1080/02678379008256991]
   Watanabe S, 2011, JPN PSYCHOL RES, V53, P1, DOI 10.1111/j.1468-5884.2010.00447.x
   Weisberg R. W., 2006, Creativity: Understanding innovation in problem solving, science, invention, and the arts, DOI DOI 10.1017/CBO9780511816796.042
   Wiesche M, 2014, SIGMIS-CPR'14: PROCEEDINGS OF THE 2014 CONFERENCE ON COMPUTERS AND PEOPLE RESEARCH, P149, DOI 10.1145/2599990.2600012
   Yamaoka L., 2014, THESIS CLAREMONT GRA
   Ye Y., 2006, P INT WORKSHOP INTER, P15
   Zhou J, 2001, ACAD MANAGE J, V44, P682, DOI 10.5465/3069410
   Zivnuska S, 2002, J APPL SOC PSYCHOL, V32, P1344, DOI 10.1111/j.1559-1816.2002.tb01440.x
NR 144
TC 0
Z9 0
U1 3
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2023
VL 163
AR 107288
DI 10.1016/j.infsof.2023.107288
EA JUN 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L8NZ4
UT WOS:001025789400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Wang, J
   Ai, J
   Lu, MY
   Liu, JY
   Wu, ZL
AF Wang, Jie
   Ai, Jun
   Lu, Minyan
   Liu, Jingyu
   Wu, Zili
TI Predicting neural network confidence using high-level feature distance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Neural network; Uncertainty; Confidence prediction; Softmax
AB Context: Neural networks have achieved state-of-the-art performance in many fields. However, they are often reported to produce overconfident predictions, especially for misclassifications. Therefore, confidence prediction is vitally important in practical applications to enable models to provide reasonable confidence. Objective: The objective of this paper is to address the problem of overconfidence in neural networks. This is achieved by constructing a detector that can predict the probability of incorrect output of the neural network. The goal of the detector is to identify incorrect outputs and adjust their raw confidences to reduce the overconfidence of misclassification.Method: The idea of the detector is to learn the relationship between high-level features of inputs and their classification correctness. The high-level feature is the output of the deep hidden layer in the network, and for the CNNs, we chose the last convolutional layer. The training of the detector requires a hold-out validation set, which in practice can be the same set used for hyperparameter tuning. The detector predicts which inputs are likely to be misclassified by neural networks and estimates the probability of misclassification which is then used to adjust the raw softmax confidence, thereby reducing the confidence of misclassification. The detector is learned by deeply mining the classification results of the validation data produced during the training process of the neural network, no additional data such as disturbance samples needs to be collected.Results: Experimental results on the CIFAR-10 dataset and two typical neural network structures, ResNet20 and VGG16, show that our method is effective in reducing the confidence of misclassifications and maintaining the confidence of correct classifications. The effectiveness of our method is demonstrated on the non -disturbance i.i.d test set and three types of disturbance sets. It outperforms two baseline methods on all test sets, especially for the i.i.d set, on the misclassification identification task.Conclusion: This new method is proven to perform well on both misclassification identification and out -of-distribution detection tasks. In contrast to previous softmax calibration methods that aim to decrease the confidence of all classifications, the method proposed in this paper innovatively reduces the confidence of misclassification straightforwardly. As a result, it becomes feasible to visually interpret the correctness of classifications using confidence scores. This will lead to a better understanding of the model's behavior and facilitate more reliable decision-making. Overall, our proposed confidence prediction method represents a promising step towards addressing the overconfidence problem in classification tasks in deep learning, especially image classification, and is of great value for real-world deep learning applications.
C1 [Wang, Jie; Ai, Jun; Lu, Minyan; Liu, Jingyu; Wu, Zili] Beihang Univ, Sch Reliabil & Syst Engn, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
C3 Beihang University
RP Wang, J; Ai, J (corresponding author), Beihang Univ, Sch Reliabil & Syst Engn, 37 Xueyuan Rd, Beijing 100191, Peoples R China.
EM wang_jie@buaa.edu.cn; aijun@buaa.edu.cn; lmy@buaa.edu.cn;
   liujingyu1@buaa.edu.cn; wuzili@buaa.edu.cn
RI Ai, Jun/B-6085-2013
OI Wang, Jie/0000-0001-5813-3605
CR Akilan T, 2017, IEEE SYS MAN CYBERN, P566, DOI 10.1109/SMC.2017.8122666
   Amodei D, 2016, Arxiv, DOI arXiv:1606.06565
   Nguyen A, 2015, PROC CVPR IEEE, P427, DOI 10.1109/CVPR.2015.7298640
   [Anonymous], 2022, OFF YOLOV7
   [Anonymous], 2014, IMB LEARN DOC
   Cheng J., 2022, P IEEE CVF C COMP VI, P13709
   Chung Y, 2021, ADV NEUR IN, V34
   Dawood T, 2023, Arxiv, DOI arXiv:2301.13296
   DeVries T, 2018, Arxiv, DOI arXiv:1802.04865
   Fort S, 2020, Arxiv, DOI [arXiv:1912.02757, DOI 10.48550/ARXIV.1912.02757]
   Gal Y, 2016, PR MACH LEARN RES, V48
   Gal Yarin, 2016, Uncertainty in deep learning
   Goodfellow I.J., 2015, PROC 3 INT C LEARN R
   Guo CA, 2017, PR MACH LEARN RES, V70
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hein M, 2019, PROC CVPR IEEE, P41, DOI 10.1109/CVPR.2019.00013
   Hendrycks D., 2017, 5 INT C LEARNING REP
   Hendrycks Dan, 2019, ARXIV190312261
   Hinton G., 2015, COMPUT SCI, V2
   Kendall A, 2017, 31 ANN C NEURAL INFO, V30
   Klein B, 2016, WATER-SUI, V8, DOI 10.3390/w8040125
   Krizhevsky Alex, 2009, LEARNING MULTIPLE LA
   Kuleshov V, 2018, PR MACH LEARN RES, V80
   Lakshminarayanan B, 2017, ADV NEUR IN, V30
   Lee KM, 2018, Arxiv, DOI arXiv:1711.09325
   Leibig C, 2017, SCI REP-UK, V7, DOI 10.1038/s41598-017-17876-z
   Liang S., 2018, INT C LEARNING REPRE
   Lin TY, 2015, IEEE I CONF COMP VIS, P1449, DOI 10.1109/ICCV.2015.170
   Loquercio A, 2020, IEEE ROBOT AUTOM LET, V5, P3153, DOI 10.1109/LRA.2020.2974682
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Lyu Zongyao, 2023, 2023 IEEE/CVF Winter Conference on Applications of Computer Vision Workshops (WACVW), P439, DOI 10.1109/WACVW58289.2023.00048
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Naeini MP, 2015, AAAI CONF ARTIF INTE, P2901
   Nalisnick E, 2019, Arxiv, DOI arXiv:1810.09136
   Niculescu-Mizil A., 2012, AAAI C ARTIFICIAL IN
   Platt JC, 2000, ADV NEUR IN, P61
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sun M, 2018, PATTERN ANAL APPL, V21, P307, DOI 10.1007/s10044-016-0578-3
   Tran N., 2021, Int. J. Performability Eng., V17, P741
   Wang T., 2021, INT J PERFORMABILITY, V17, P263, DOI DOI 10.23940/IJPE.21.03.P2.263275
   Wang WL, 2018, Arxiv, DOI arXiv:1711.08534
   Zadrozny B., 2002, P 8 ACM SIGKDD INT C, P694, DOI [10.1145/775047.775151, DOI 10.1145/775047.775151]
   Zadrozny B, 2001, P 18 INT C MACH LEAR, P609, DOI DOI 10.5555/645530.655658
NR 44
TC 1
Z9 1
U1 2
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107214
DI 10.1016/j.infsof.2023.107214
EA APR 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F5EE0
UT WOS:000982569300001
DA 2024-07-18
ER

PT J
AU Yu, JJ
   Zhou, X
   Liu, X
   Liu, J
   Xie, ZW
   Zhao, KS
AF Yu, Jiaojiao
   Zhou, Xu
   Liu, Xiao
   Liu, Jin
   Xie, Zhiwen
   Zhao, Kunsong
TI Detecting multi-type self-admitted technical debt with generative
   adversarial network-based neural networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; SATD; Generative adversarial network; CodeBERT;
   Multi-head attention
AB Context: Developers often introduce the self-admitted technical debt (SATD), i.e., a compromised solution to satisfy the delivery of the current goals, in code comments but do not eliminate them timely in the following software development and maintenance process. Automatically identifying the SATDs to reduce potential harm to software has attracted the attention of researchers. However, existing approaches only identified SATDs at a coarse-grained level, which impacts developers to locate and remove them.
   Objective: This paper proposes a novel model named GCF, which is a deep learning method to enhance the performance of multi-type SATD classification based on generative adversarial network. Method: The GCF model employs the JSD Generative Adversarial Network to solve the imbalance problem, utilizes CodeBERT to fuse information of code snippets and natural language for initializing the instances as embedding vectors, and introduces the feature extraction module to extract the instance features more comprehensively.
   Results: The experimental results show that, the GCF model obtains better performance compared with the state-of-the-art method. Moreover, experiments on the GCF model variants and others with different GAN models show the superiority of the GCF model.
   Conclusion: Our proposed GCF model effectively solves the problem of imbalanced types of SATD, fuses the information of code snippets and natural language, and extracts key features to achieve outstanding performance in detecting multi-type SATD. Therefore, the GCF model is an effective method for detecting multi-type SATD.
C1 [Yu, Jiaojiao; Liu, Jin; Xie, Zhiwen] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Zhou, Xu] Wuhan United Imaging Med Technol Co LTD, Wuhan, Peoples R China.
   [Liu, Xiao] Deakin Univ, Sch Informat Technol, Geelong, Australia.
   [Zhao, Kunsong] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
C3 Wuhan University; Deakin University; Hong Kong Polytechnic University
RP Liu, J (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
EM jinliu@whu.edu.cn
RI Liu, Xiao/AAG-1593-2020; Liu, Jin/IYT-4351-2023
OI Liu, Xiao/0000-0001-8400-5754; 
FU National Natural Science Founda-tion of China [61972290]
FX This work was supported by the National Natural Science Founda-tion of
   China under Grants (No. 61972290) .
CR Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   Ankit P., 2019, 7 INT C LEARNING REP
   Arjovsky M, 2017, PR MACH LEARN RES, V70
   Bansal Barkha, 2018, Procedia Computer Science, V132, P1147, DOI 10.1016/j.procs.2018.05.029
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Cao Y, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P2411
   Che T, 2017, Arxiv, DOI arXiv:1702.07983
   Chen X, 2022, IEEE T RELIAB, V71, P1309, DOI 10.1109/TR.2021.3087864
   Chen YX, 2022, IEEE T GEOSCI REMOTE, V60, DOI 10.1109/TGRS.2022.3155283
   Chen YX, 2020, IEEE T GEOSCI REMOTE, V58, P7049, DOI 10.1109/TGRS.2020.2979273
   Chen YX, 2020, PATTERN RECOGN, V105, DOI 10.1016/j.patcog.2020.107368
   Chung JY, 2014, Arxiv, DOI arXiv:1412.3555
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Farias MAD, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106270
   Deshpande G., 2020, P 14 ACMIEEE INT S E, P1
   Feng S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106662
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Freire Savio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P210, DOI 10.1145/3383219.3383241
   Gao X, 2020, NEUROCOMPUTING, V396, P487, DOI 10.1016/j.neucom.2018.10.109
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Goodfellow J., 2014, Adv. Neural Inf. Process. Syst., V27
   Guo JX, 2018, AAAI CONF ARTIF INTE, P5141
   Guo ZQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447247
   He CC, 2022, J ASSOC INF SCI TECH, V73, P70, DOI 10.1002/asi.24546
   He CC, 2021, SCIENTOMETRICS, V126, P4005, DOI 10.1007/s11192-021-03943-w
   Huang LZ, 2019, Arxiv, DOI arXiv:1910.02356
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Karimi A, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P2748
   Karras T, 2019, PROC CVPR IEEE, P4396, DOI 10.1109/CVPR.2019.00453
   Karras T, 2021, IEEE T PATTERN ANAL, V43, P4217, DOI 10.1109/TPAMI.2020.2970919
   Kim Y., 2014, P 2014 C EMP METH NA, P1746, DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Li T., 2019, P 22 INT C ARTIFICIA, P3089
   Li Y, 2022, Arxiv, DOI arXiv:2205.13872
   Liu L, 2018, Proceedings of the AAAI Conference on Artificial Intelligence, V32
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Ma XX, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106906
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Miyake Y, 2017, STUD COMPUT INTELL, V695, P17, DOI 10.1007/978-3-319-51472-7_2
   Montahaei E, 2021, NEUROCOMPUTING, V448, P364, DOI 10.1016/j.neucom.2021.03.097
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Torkkola K, 2003, PATTERN ANAL APPL, V6, P301, DOI 10.1007/s10044-003-0196-8
   Tu T. Menzies, 2022, EMPIR SOFTW ENG, V27, P1
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang CY, 2019, IEEE T EVOLUT COMPUT, V23, P921, DOI 10.1109/TEVC.2019.2895748
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   Wattanakriengkrai S, 2018, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2018.00010
   Wei J, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P6382
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu Z, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110763
   Xu Z, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110862
   Xuan Jifeng., 2017, Debt-prone bugs: technical debt in software maintenance
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yang Z, 2021, APPL SOFT COMPUT, V111, DOI 10.1016/j.asoc.2021.107649
   Yu DJ, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9281-z
   Yu JJ, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111219
   Yu LT, 2017, AAAI CONF ARTIF INTE, P2852
   Yu X, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106847
   Yu X, 2020, IEEE T RELIAB, V69, P139, DOI 10.1109/TR.2019.2931559
   Yu Z, 2022, IEEE T SOFTWARE ENG, V48, P1676, DOI 10.1109/TSE.2020.3031401
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zhang H, 2019, PR MACH LEARN RES, V97
   Zhang S, 2015, P 29 PAC AS C LANG I, P73, DOI DOI 10.18653/V1/P16-2034
   Zhao JY, 2021, NEUROCOMPUTING, V452, P28, DOI 10.1016/j.neucom.2021.04.036
   Zhao KS, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111324
   Zhao KS, 2021, IEEE T RELIAB, V70, P848, DOI 10.1109/TR.2021.3060937
   Zhen Y., 2022, ACM Trans. Softw. Eng. Methodol.
   Zheng M, 2020, INFORM SCIENCES, V512, P1009, DOI 10.1016/j.ins.2019.10.014
   Zhou P, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P207, DOI 10.18653/v1/p16-2034
   Zhou X, 2021, PROC IEEE INT CONF S, P425, DOI 10.1109/ICSME52107.2021.00044
NR 81
TC 3
Z9 3
U1 1
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107190
DI 10.1016/j.infsof.2023.107190
EA MAR 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0A2GM
UT WOS:000951646000001
DA 2024-07-18
ER

PT J
AU Stefanakos, I
   Calinescu, R
   Gerasimou, S
AF Stefanakos, Ioannis
   Calinescu, Radu
   Gerasimou, Simos
TI Probabilistic program performance analysis with confidence intervals
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program quality analysis; Software performance; Discrete-time Markov
   chains; Probabilistic model checking; Formal verification with
   confidence intervals
ID QUANTITATIVE VERIFICATION; MODEL
AB Context: More often than not, the algorithms implemented by software systems continue to operate correctly when executed on different platforms or with different inputs, and can be easily replaced with functionally equivalent ones. However, such changes can have a significant and difficult to predict impact on the software performance, resource use, and other key quality properties.Objective: The paper introduces a method for the formal analysis of timing, resource use, cost and other quality aspects of computer programs, and a tool that automates the application of the method to Java code.Method: A tool-supported probabilistic program performance analysis (PROPER) method was developed, and was evaluated using Java code from the Apache Commons Math library, the Android messaging app Telegram, and open-source implementations of the knapsack, binary search, and minimum path sum algorithms. PROPER synthesises a parametric Markov-chain model of the analysed code, uses information from program logs to calculate confidence intervals for the parameters of this model, and employs formal verification with confidence intervals to obtain confidence intervals for the performance properties of interest. A PROPER variant that operates with point estimates instead of confidence intervals can be used when large program logs are available.Results: The PROPER point estimates for the analysed performance properties were accurate within 7.9% and 1.75% of the ground truth when using program logs with 103 and 104 entries, respectively. All PROPER confidence intervals for these properties contained the true property value, and became narrower when larger logs were used in the analysis. The analyses were completed in under 15 ms for point estimates, and in between 6.7 s and 7.8 s for confidence intervals on a regular laptop computer.Conclusion: PROPER can synthesise and reuse a parametric Markov model to accurately predict how software performance would change if the code ran on a different hardware platform, used a new function library, or had a different usage profile-supporting practitioners who are interested in these analyses.
C1 [Stefanakos, Ioannis; Calinescu, Radu; Gerasimou, Simos] Univ York, Dept Comp Sci, York YO10, England.
C3 University of York - UK
RP Stefanakos, I (corresponding author), Univ York, Dept Comp Sci, York YO10, England.
EM ioannis.stefanakos@york.ac.uk
OI Calinescu, Radu/0000-0002-2678-9260; Stefanakos,
   Ioannis/0000-0003-3741-252X
CR Ameller D, 2021, IEEE T SOFTWARE ENG, V47, P818, DOI 10.1109/TSE.2019.2904476
   Andova S, 2003, LECT NOTES COMPUT SC, V2791, P88
   [Anonymous], 2012, P 20 ACM SIGSOFT S F
   [Anonymous], 2014, P FUTURE SOFTWARE EN, DOI DOI 10.1145/2593882.2593899
   Arafa P, 2017, I S MOD ANAL SIM COM, P132, DOI 10.1109/MASCOTS.2017.19
   Arcelli D, 2020, PROCEDIA COMPUT SCI, V170, P498, DOI 10.1016/j.procs.2020.03.108
   BALL T, 1994, ACM T PROGR LANG SYS, V16, P1319, DOI 10.1145/183432.183527
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bartels B., 2012, Strategies to the Prediction, Mitigation and Management of Product Obsolescence, DOI [10.1002/9781118275474, DOI 10.1002/9781118275474]
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bertsekas Dimitri, 2008, Introduction to probability, V1
   Borges M, 2017, LECT NOTES COMPUT SC, V10227, P131, DOI 10.1007/978-3-319-57288-8_9
   Calinescu R., 2013, EMERGING TECHNIQUES, P297, DOI DOI 10.1007/978-3-642-36249-1_11
   Calinescu R, 2021, IEEE T SOFTWARE ENG, V47, P1114, DOI 10.1109/TSE.2019.2912958
   Calinescu R, 2016, LECT NOTES COMPUT SC, V9636, P540, DOI 10.1007/978-3-662-49674-9_32
   Calinescu R, 2016, IEEE T RELIAB, V65, P107, DOI 10.1109/TR.2015.2452931
   Cámara J, 2017, LECT NOTES COMPUT SC, V10475, P3, DOI 10.1007/978-3-319-65831-5_1
   Chung L, 2012, Non-Functional Requirements in Software Engineering, V5
   Cooper K, 2005, SCI COMPUT PROGRAM, V57, P89, DOI 10.1016/j.scico.2004.10.007
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4422, P57
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   De Loera JA, 2004, J SYMB COMPUT, V38, P1273, DOI 10.1016/j.jsc.2003.04.003
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Dubslaff C, 2020, Arxiv, DOI arXiv:2004.06637
   Dwyer MB, 2017, LECT NOTES COMPUT SC, V10223, P1, DOI 10.1007/978-3-319-60074-1_1
   Fang XW, 2021, PROC INT CONF SOFTW, P835, DOI 10.1109/ICSE43902.2021.00081
   Filieri A, 2015, IEEE INT CONF AUTOM, P703, DOI 10.1109/ASE.2015.78
   Filieri A, 2015, LECT NOTES COMPUT SC, V9232, P222, DOI 10.1007/978-3-319-23404-5_15
   Filieri A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P622, DOI 10.1109/ICSE.2013.6606608
   Franco JM, 2016, J SYST SOFTWARE, V115, P42, DOI 10.1016/j.jss.2016.01.026
   Geldenhuys Jaco, 2012, P 2012 INT S SOFTWAR, P166, DOI DOI 10.1145/2338965.2336773
   Gerasimou S., 2017, FED INT C SOFTW TECH, P385, DOI [10.1007/978-3-319-74730-9_34, DOI 10.1007/978-3-319-74730-9_34]
   Gerasimou S, 2018, 2018 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON API USAGE AND EVOLUTION (WAPI), P6, DOI 10.1145/3194793.3194798
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Gokhale SS, 2005, IEEE T SOFTWARE ENG, V31, P643, DOI 10.1109/TSE.2005.86
   Gordon Andrew D., 2014, P FUTURE SOFTWARE EN, P167, DOI [10.1145/2593882.2593900, DOI 10.1145/2593882.2593900]
   Hahn EM, 2010, LECT NOTES COMPUT SC, V6174, P660, DOI 10.1007/978-3-642-14295-6_56
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hort M, 2022, IEEE T SOFTWARE ENG, V48, P2879, DOI 10.1109/TSE.2021.3071193
   Hsu CJ, 2011, IEEE T RELIAB, V60, P158, DOI 10.1109/TR.2011.2104490
   Katoen JP, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P31, DOI 10.1145/2933575.2934574
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393655
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kumar Naveen., 2005, PASTE 05, P28, DOI DOI 10.1145/1108768.1108801
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   MISRA PN, 1983, IBM SYST J, V22, P262, DOI 10.1147/sj.223.0262
   Plauth M, 2017, LECT NOTES COMPUT SC, V10465, P34, DOI 10.1007/978-3-319-67262-5_3
   Schubert S, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON GREEN COMPUTING AND COMMUNICATIONS, CONFERENCE ON INTERNET OF THINGS, AND CONFERENCE ON CYBER, PHYSICAL AND SOCIAL COMPUTING (GREENCOM 2012), P515, DOI 10.1109/GreenCom.2012.86
   Stefanakos Ioannis, 2021, 2021 47th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P148, DOI 10.1109/SEAA53835.2021.00027
   Stefanakos I, 2021, 24TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2021), P251, DOI 10.1109/MODELS-C53483.2021.00045
   Su GX, 2013, LECT NOTES COMPUT SC, V8144, P297, DOI 10.1007/978-3-642-41202-8_20
   Teuber S, 2021, LECT NOTES COMPUT SC, V12846, P59, DOI 10.1007/978-3-030-85172-9_4
   Traini L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485136
   Trubiani C, 2017, J SYST SOFTWARE, V125, P15, DOI 10.1016/j.jss.2016.11.032
   van Hoorn Andre, 2012, 3 JOINT WOSP SIPEW I, P247, DOI DOI 10.1145/2188286.2188326
   Visser W, 2017, SOUTH AFRICAN INSTITUTE OF COMPUTER SCIENTISTS AND INFORMATION TECHNOLOGISTS (SACSIT 2017), P319, DOI 10.1145/3129416.3129433
   Wood Sophie, 2020, MODELS 20, P154
   Yu ZX, 2021, IEEE T SOFTWARE ENG, V47, P969, DOI 10.1109/TSE.2019.2910516
   Zhang J, 2021, IEEE-CAA J AUTOMATIC, V8, P1153, DOI 10.1109/JAS.2020.1003309
NR 60
TC 0
Z9 0
U1 2
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107143
DI 10.1016/j.infsof.2022.107143
EA JAN 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8J5VW
UT WOS:000922484000001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Kotusev, S
   Kurnia, S
   Dilnutt, R
AF Kotusev, Svyatoslav
   Kurnia, Sherah
   Dilnutt, Rod
TI Enterprise architecture artifacts as boundary objects: An empirical
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Enterprise architecture; Artifacts; Boundary objects theory;
   Professional communities; Business and IT alignment; Case study
ID INFORMATION-TECHNOLOGY; BUSINESS; ALIGNMENT; KNOWLEDGE; MANAGEMENT;
   DESIGN; IMPLEMENTATION; TRANSFORMATION; COMMUNITIES; DISCIPLINE
AB Context: Enterprise architecture (EA) is a collection of artifacts describing various aspects of an organization from an integrated business and IT perspective. EA artifacts intend to bridge the communication gap between business and IT stakeholders to improve business and IT alignment in organizations and, therefore, can be considered as boundary objects between diverse business and IT communities. However, an intentional analysis of EA artifacts as boundary objects in the current EA literature has been rather shallow and insufficient.Objective: This study aims to explore how exactly EA artifacts as boundary objects facilitate communication between different professional communities. Specifically, it intends to identify what types of EA artifacts represent boundary objects, analyze their properties and usage scenarios, as well as the differences between them.Method: This study is based on an in-depth case study of an organization with an established EA practice. Data collection procedures include both interviews with various participants of its EA practice and comprehensive scrutiny of its EA documentation. Results: We identify five specific types of EA artifacts used in the organization as boundary objects and analyze them in detail. In particular, we analyze their informational contents and usage scenarios, their target audiences and value for cross-community collaboration, as well as their syntactic, semantic and pragmatic boundary-spanning capacity. Moreover, we also introduce the notion of duality as a characteristic of interpretive flexi-bility of EA artifacts and distinguish two different types of duality leveraging somewhat different boundary-spanning mechanisms: implicit duality and explicit duality.Conclusions: This paper provides arguably the first inductive qualitative analysis of EA artifacts as boundary objects available in the existing EA literature. It contributes to our understanding of their boundary-spanning properties, distinctive features and general roles in an EA practice. Also, the concepts of implicit and explicit duality that we introduce further advance the theory of boundary objects.
C1 [Kotusev, Svyatoslav] HSE Univ, Moscow, Russia.
   [Kurnia, Sherah; Dilnutt, Rod] Univ Melbourne, Melbourne, Australia.
C3 HSE University (National Research University Higher School of
   Economics); University of Melbourne
RP Kotusev, S (corresponding author), HSE Univ, Moscow, Russia.
EM kotusev@kotusev.com
CR Abraham R., 2013, Proceedings of the 21st European Conference on Information Systems (ECIS 2013), P1
   Abraham R., 2013, Lecture Notes in Informatics, P27
   Abraham R., 2018, ARCHITECTURAL COORDI
   Abraham R, 2015, BUS INFORM SYST ENG+, V57, P3, DOI 10.1007/s12599-014-0361-1
   Ahlemann F., 2012, Strategic enterprise architecture management: Challenges, best practices, and future developments, P265
   Aier S, 2014, INF SYST E-BUS MANAG, V12, P43, DOI 10.1007/s10257-012-0206-8
   Alaeddini M, 2013, INFORM SYST FRONT, V15, P67, DOI 10.1007/s10796-011-9332-y
   [Anonymous], 2011, J ENTERPRISE ARCHITE
   [Anonymous], 2013, P 11 INT C WIRTSCHAF
   [Anonymous], 2009, J ENTERPRISE ARCHITE
   [Anonymous], 2007, P 13 AMERICAS C INFO
   Bechky BA, 2003, ORGAN SCI, V14, P312, DOI 10.1287/orsc.14.3.312.15162
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Benbasat I, 2003, MIS QUART, V27, P183
   Bergman M, 2007, J ASSOC INF SYST, V8, P546, DOI 10.17705/1jais.00144
   Bernard S., 2012, An Introduction to Enterprise Architecture, V3rd
   Bischoff S, 2014, CONF BUS INFORM, P133, DOI 10.1109/CBI.2014.56
   Blumenthal A., 2007, GOVT EXECUTIVE, V39, P63
   Boh WF, 2006, J MANAGE INFORM SYST, V23, P163, DOI 10.2753/MIS0742-1222230307
   Bondel G, 2018, IEEE INT ENTERP, P125, DOI 10.1109/EDOCW.2018.00027
   Broadbent M, 1997, SLOAN MANAGE REV, V38, P77
   Broadbent Marianne., 2005, The new CIO leader : Setting the agenda and delivering results
   BURTON B., 2012, 8 BUSINESS CAPABILIT
   Carlile PR, 2004, ORGAN SCI, V15, P555, DOI 10.1287/orsc.1040.0094
   Carlile PR, 2002, ORGAN SCI, V13, P442, DOI 10.1287/orsc.13.4.442.2953
   Chan YE, 2007, J INF TECHNOL-UK, V22, P297, DOI 10.1057/palgrave.jit.2000109
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Dang D.D., 2016, P 20 PACIFIC ASIA C, P1
   Darke P, 1998, INFORM SYST J, V8, P273, DOI 10.1046/j.1365-2575.1998.00040.x
   DAVENPORT TH, 1989, HARVARD BUS REV, V67, P130
   EA on a Page, 2022, Enterprise architecture on a page (v2.0)
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Foorthuis R, 2016, INFORM SYST FRONT, V18, P541, DOI 10.1007/s10796-014-9542-1
   Gal U, 2008, EUR J INFORM SYST, V17, P290, DOI 10.1057/ejis.2008.13
   GAO, 2013, DOD BUS SYST MOD FUR
   Gasson S, 2006, EUR J INFORM SYST, V15, P26, DOI 10.1057/palgrave.ejis.3000594
   Gaver S.B, 2010, TECHNOLOGY MATTERS
   George Alexander L., 2005, CASE STUDIES THEORY
   Giddens A., 1984, The constitution of society: Outline of the theory of structuration
   Greefhorst D, 2011, ENTERP ENG SER, P1, DOI 10.1007/978-3-642-20279-7
   Gregor Shirley, 2007, Information Technology & People, V20, P96, DOI 10.1108/09593840710758031
   HENDERSON K, 1991, SCI TECHNOL HUM VAL, V16, P448, DOI 10.1177/016224399101600402
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hevner R., 2007, Scandinavian Journal of Information Systems, V19, P4
   Kappelman L, 2018, MIS Q EXEC, V17, P53
   Karsten H, 2001, EUR J INFORM SYST, V10, P89, DOI 10.1057/palgrave.ejis.3000395
   Kemp Peter, 2009, IT Now, V51, P20, DOI 10.1093/itnow/bwp032
   Khosroshahi PA, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P4603
   Kotusev de S., 2015, P 23 EUR C INF SYST, P1
   Kotusev S, 2021, The practice of enterprise architecture: a modern approach to business and IT alignment, V2nd
   Kotusev S, 2023, KNOWL MAN RES PRACT, V21, P594, DOI 10.1080/14778238.2021.1999183
   Kotusev S, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106897
   Kotusev S, 2018, COMMUN ASSOC INF SYS, V43, P321, DOI 10.17705/1CAIS.04320
   Kotusev S, 2019, J INF TECHNOL-UK, V34, P102, DOI 10.1177/0268396218816273
   Kurnia S, 2021, COMMUN ASSOC INF SYS, V49, P668, DOI 10.17705/1CAIS.04936
   Kuruzovich J., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5043, DOI 10.1109/HICSS.2012.394
   Lange M, 2016, EUR J INFORM SYST, V25, P411, DOI 10.1057/ejis.2014.39
   Lederer A. L., 1989, Journal of Management Information Systems, V6, P5
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Levina N, 2005, MIS QUART, V29, P335
   Löhe J, 2014, INF SYST E-BUS MANAG, V12, P101, DOI 10.1007/s10257-012-0211-y
   Luftman J, 1999, CALIF MANAGE REV, V42, P109, DOI 10.2307/41166021
   Luftman J., 2004, MIS Quarterly Executive, V3, P89
   Luftman J., 1999, COMMUN ASSOC INF SYS, V1, P1, DOI DOI 10.17705/1CAIS.00111
   Luftman J., 2006, MIS Q EXEC, V5, P81
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mueller T, 2015, P ANN HICSS, P4050, DOI 10.1109/HICSS.2015.487
   NATH R, 1989, INFORM MANAGE, V16, P71, DOI 10.1016/0378-7206(81)90073-2
   Nicolini D, 2012, ORGAN SCI, V23, P612, DOI 10.1287/orsc.1110.0664
   Niemi E, 2017, ENTERP INF SYST-UK, V11, P313, DOI 10.1080/17517575.2015.1048831
   ORLIKOWSKI WJ, 1992, ORGAN SCI, V3, P398, DOI 10.1287/orsc.3.3.398
   Orlikowski WJ, 2001, INFORM SYST RES, V12, P121, DOI 10.1287/isre.12.2.121.9700
   Peels F., 2016, P 22 AMERICAS C INFO, P1
   Perroud T., 2013, Enterprise architecture patterns : practical solutions for recurring IT-architecture problems
   Poutanen J, 2012, J ENTERPRISE ARCHITE, V8, P19
   Preston DS, 2009, INFORM SYST RES, V20, P159, DOI 10.1287/isre.1070.0159
   Reich BH, 2000, MIS QUART, V24, P81, DOI 10.2307/3250980
   RICHARDSON GL, 1990, MIS QUART, V14, P385, DOI 10.2307/249787
   Robertson B, 2005, ENTERPRISE ARCHITECT
   Rockart JF, 1996, SLOAN MANAGE REV, V38, P43
   Roeleven S., 2010, Why Two Thirds of Enterprise Architecture Projects Fail
   Ross, 2004, ENTERPRISE ARCHITECT
   Ross J.W., 2006, Enterprise architecture as strategy: Creating a foundation for business execution
   Saint-Louise P, 2019, INT J ENG BUS MANAG, V11, DOI 10.1177/1847979019866337
   Sapsed J, 2004, ORGAN STUD, V25, P1515, DOI 10.1177/0170840604047998
   Saunders M., 2009, RES METHODS BUSINESS, DOI DOI 10.1007/S13398-014-0173-7.2
   Schlosser F., 2011, P 15 PACIFIC ASIA C, P1
   Schlosser F, 2015, J INF TECHNOL-UK, V30, P119, DOI 10.1057/jit.2015.2
   Schmidt C, 2011, EUR J INFORM SYST, V20, P168, DOI 10.1057/ejis.2010.68
   Schöenherr M, 2009, LECT NOTES COMPUT SC, V5472, P400, DOI 10.1007/978-3-642-01247-1_40
   Scott J., 2009, ARCHITECTURE GOVERNA, V5, P1
   Seddon PB, 2012, EUR J INFORM SYST, V21, P6, DOI 10.1057/ejis.2011.9
   Simon D, 2013, COMMUN ASSOC INF SYS, V32
   Spewak S.H., 1992, ENTERPRISE ARCHITECT
   STAR SL, 1989, SOC STUD SCI, V19, P387, DOI 10.1177/030631289019003001
   Star SL, 2010, SCI TECHNOL HUM VAL, V35, P601, DOI 10.1177/0162243910377624
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   STRUTZEL E, 1968, NURS RES, V17, P364
   Tamm T, 2015, MIS Q EXEC, V14, P181
   Tamm T, 2011, COMMUN ASSOC INF SYS, V28, P141
   Teo TSH, 1999, INT J INFORM MANAGE, V19, P173, DOI 10.1016/S0268-4012(99)00007-9
   Tharenou P, 2007, MANAGEMENT RESEARCH METHODS, P1, DOI 10.1017/CBO9780511810527
   TOGAF, 2018, TOGAF VERS 9 2 READ
   Trionfi A., 2016, J ENTERPRISE ARCHITE, V12, P40
   Valorinta M, 2011, J INF TECHNOL-UK, V26, P46, DOI 10.1057/jit.2010.28
   vantWout J, 2010, INTEGRATED ARCHITECTURE FRAMEWORK EXPLAINED: WHY, WHAT, HOW, P1
   Wagner HT, 2014, J MANAGE INFORM SYST, V31, P241, DOI 10.2753/MIS0742-1222310110
   Wagner HT, 2012, MIS Q EXEC, V11, P25
   Wagter Roel., 2005, Dynamic Enterprise Architecture: How to Make it Work
   Wenger E., 2009, COMMUNITIES PRACTICE
   Winter R., 2006, P 2006 10 IEEE INT E, P30
   Wohlin C, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106514
   Yakura EK, 2002, ACAD MANAGE J, V45, P956, DOI 10.5465/3069324
   Yin R.K., 2014, Applications of case study research, V2nd
   Ylinen M., 2020, P 28 EUROPEAN C INFO, P1
NR 118
TC 4
Z9 4
U1 1
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2023
VL 155
AR 107108
DI 10.1016/j.infsof.2022.107108
EA DEC 2022
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7F4NK
UT WOS:000901826200002
DA 2024-07-18
ER

PT J
AU Li, ZD
   Shang, CQ
   Wu, JJ
   Li, Y
AF Li, Zhiding
   Shang, Chenqi
   Wu, Jianjie
   Li, Yuan
TI Microservice extraction based on knowledge graph from monolithic
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Microservice extraction; Knowledge graph; Monolithic architecture;
   Constrained Louvain algorithm
ID SERVICE; ARCHITECTURES; FRAMEWORK; ALGORITHM
AB Context: Re-architecting monolithic systems with microservice architecture is a common trend. However, determining the "optimal" size of individual services during microservice extraction has been a challenge in software engineering. Common limitations of the literature include not being reasonable enough to be put into practical application; relying too much on human experience; neglection of the impact of hardware environment on the performance.
   Objective: To address these problems, this paper proposes a novel method based on knowledge-graph to support the extraction of microservices during the initial phases of re-architecting existing applications.
   Method: According to the microservice extraction method based on the AKF principle which is a widely practiced microservice design principle in the industry, four kinds of entities and four types of entity-entity relationships are designed and automatically extracted from specification and design artifacts of the monolithic application to build the knowledge graph. A constrained Louvain algorithm is proposed to identify microservice candidates.
   Results: Our approach is tested based on two open-source projects with the other three typical methods: the domain-driven design-based method, the similarity calculation-based method, and the graph clustering-based method. Conducted experiments show that our method performs well concerning all the evaluation metrics.
C1 [Li, Zhiding; Shang, Chenqi; Wu, Jianjie] Huazhong Univ Sci & Technol, Sch Software Engn, Wuhan, Hubei, Peoples R China.
   [Li, Yuan] Hubei Open Univ, Sch Elect & Informat Engn, Wuhan, Hubei, Peoples R China.
C3 Huazhong University of Science & Technology
RP Wu, JJ (corresponding author), Huazhong Univ Sci & Technol, Sch Software Engn, Wuhan, Hubei, Peoples R China.; Li, Y (corresponding author), Hubei Open Univ, Sch Elect & Informat Engn, Wuhan, Hubei, Peoples R China.
EM wujianjie@hust.edu.cn; lyjingmen@sina.com
CR Abbott M.L., 2015, The Art of Scalability: Scalable Web Architecture, Processes, and Organizations for the Modern Enterprise
   Ameller D, 2015, INFORM SOFTWARE TECH, V62, P42, DOI 10.1016/j.infsof.2015.02.006
   [Anonymous], 2021, MACROZHENG MALL
   Auer F, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106600
   Baresi L, 2017, LECT NOTES COMPUT SC, V10465, P19, DOI 10.1007/978-3-319-67262-5_2
   BARNES ER, 1982, SIAM J ALGEBRA DISCR, V3, P541, DOI 10.1137/0603056
   Berthold MR, 2016, Arxiv, DOI [arXiv:1601.02213, DOI 10.48550/ARXIV.1601.02213]
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Chang CH, 2011, INFORM SOFTWARE TECH, V53, P307, DOI 10.1016/j.infsof.2010.11.006
   Chen R, 2017, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC.2017.53
   Colla D, 2020, KNOWL-BASED SYST, V206, DOI 10.1016/j.knosys.2020.106346
   Daghaghzadeh M., 2011, INT J COMPUT SCI ISS, V8, P83
   David M.J.T., 2004, CLASSIFICATION PARAM
   Erradi A, 2007, LECT NOTES COMPUT SC, V4749, P606
   Erradi A, 2006, P IEEE I C SERV COMP, P151, DOI 10.1109/SCC.2006.97
   Evans E., 2015, Domain-Driven Design Reference: Definitions and Pattern Summaries
   Evans E., 2003, Domain-Driven Design
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Kernighan B. W., 1970, Bell System Technical Journal, V49, P291
   Knoche H., 2019, INT J CONCEPTUAL MOD, V14, P1, DOI DOI 10.18417/EMISA.14.1
   Krafzig D., 2004, ENTERPRISE SOA SERVI
   Lancichinetti A, 2009, PHYS REV E, V80, DOI 10.1103/PhysRevE.80.056117
   Levcovitz A, 2016, Arxiv, DOI arXiv:1605.03175
   Lewis J., 2021, MICROSERVICES 2014 0
   Li SS, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106449
   Liu JX, 2015, KNOWL-BASED SYST, V73, P181, DOI 10.1016/j.knosys.2014.10.002
   Malavalli D, 2015, INT CONF NETW SER, P428, DOI 10.1109/CNSM.2015.7367395
   Mao X.Y., 2019, WIRELESS COMMUNICATI, V28, P46
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.066133
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.026113
   Newman S., 2015, BUILDING MICROSERVIC
   Ning X.G., 2019, J SW U SCI TECHNOLOG, V34, P80
   Rampérez V, 2021, FUTURE GENER COMP SY, V118, P56, DOI 10.1016/j.future.2020.12.025
   Richards M., 2016, MICROSERVICES VS SER
   Schermann G, 2016, LECT NOTES COMPUT SC, V9586, P36, DOI 10.1007/978-3-662-50539-7_4
   Shao J.W., 2020, COMPUTER APPL, V40, P3604, DOI [10.11772/j.issn.1001-9081.2020040495, DOI 10.11772/J.ISSN.1001-9081.2020040495]
   Shi J.J., 2011, COMPUTER INFORM TECH, V19, P42, DOI [10.19414/j.cnki.1005-1228.2011.04.014.79, DOI 10.19414/J.CNKI.1005-1228.2011.04.014.+79]
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Tan P. N., 2005, Introduction to Data Mining
   Valderas P, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106370
   Yang N., 2019, THESIS BEIJING U POS
   Zhang DD, 2013, INT SYM COMPUT INTEL, P350, DOI 10.1109/ISCID.2013.94
   Zhang G.S., 2021, J CHINESE ACAD ELECT, V16, P119, DOI [10.3969/j.issn.1673-5692.2021.02.003, DOI 10.3969/J.ISSN.1673-5692.2021.02.003]
   Zhang YW, 2018, KNOWL-BASED SYST, V147, P25, DOI 10.1016/j.knosys.2018.02.014
   Zhong Chen-Xing, 2019, Journal of Software, V30, P3227, DOI 10.13328/j.cnki.jos.005797
NR 50
TC 7
Z9 7
U1 3
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2022
VL 150
AR 106992
DI 10.1016/j.infsof.2022.106992
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4P3BJ
UT WOS:000855271700005
DA 2024-07-18
ER

PT J
AU Obaidi, M
   Nagel, L
   Specht, A
   Klünder, J
AF Obaidi, Martin
   Nagel, Lukas
   Specht, Alexander
   Kluender, Jil
TI Sentiment analysis tools in software engineering: A systematic mapping
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Social software engineering; Sentiment analysis; Machine learning;
   Systematic mapping study
ID STRENGTH DETECTION
AB Context: Software development is a collaborative task. Previous research has shown social aspects within development teams to be highly relevant for the success of software projects. A team's mood has been proven to be particularly important. It is paramount for project managers to be aware of negative moods within their teams, as such awareness enables them to intervene. Sentiment analysis tools offer a way to determine the mood of a team based on textual communication.
   Objective: We aim to help developers or stakeholders in their choice of sentiment analysis tools for their specific purpose. Therefore, we conducted a systematic mapping study (SMS).
   Methods: We present the results of our SMS of sentiment analysis tools developed for or applied in the context of software engineering (SE). Our results summarize insights from 106 papers with respect to (1) the application domain, (2) the purpose, (3) the used data sets, (4) the approaches for developing sentiment analysis tools, (5) the usage of already existing tools, and (6) the difficulties researchers face. We analyzed in more detail which tools and approaches perform how in terms of their performance.
   Results: According to our results, sentiment analysis is frequently applied to open-source software projects, and most approaches are neural networks or support-vector machines. The best performing approach in our analysis is neural networks and the best tool is BERT. Despite the frequent use of sentiment analysis in SE, there are open issues, e.g. regarding the identification of irony or sarcasm, pointing to future research directions.
   Conclusion: We conducted an SMS to gain an overview of the current state of sentiment analysis in order to help developers or stakeholders in this matter. Our results include interesting findings e.g. on the used tools and their difficulties. We present several suggestions on how to solve these identified problems.
C1 [Obaidi, Martin; Nagel, Lukas; Specht, Alexander; Kluender, Jil] Leibniz Univ Hannover, Software Engn Grp, Welfengarten 1, D-30167 Hannover, Germany.
C3 Leibniz University Hannover
RP Obaidi, M (corresponding author), Leibniz Univ Hannover, Software Engn Grp, Welfengarten 1, D-30167 Hannover, Germany.
EM martin.obaidi@inf.uni-hannover.de; lukas.nagel@inf.uni-hannover.de;
   alexander.specht@inf.uni-hannover.de; jil.kluender@inf.uni-hannover.de
OI Obaidi, Martin/0000-0001-9217-3934
FU Leibniz Young Investigator Grant, Germany [2020-2022]
FX This work was supported by the Leibniz Young Investigator Grant, Germany
   and is part of the project ComContA, 2020-2022.
CR Abo M.E.M., 2019, SENTIMENT ANAL ARABI
   Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P1493, DOI 10.1007/s10664-019-09743-4
   Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Akula R, 2021, ENTROPY-SWITZ, V23, DOI 10.3390/e23040394
   [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   [Anonymous], 2001, EMOTIONS SOCIAL PSYC
   Asyrofi M.H., 2021, ARXIV
   Aung KZ, 2017, 2017 16TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE (ICIS 2017), P149
   Baragash R., 2021, Journal of Physics: Conference Series, V1860, DOI 10.1088/1742-6596/1860/1/012002
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Biswas Eeshita, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P68, DOI 10.1109/MSR.2019.00020
   Cabrera-Diego LA, 2020, KNOWL-BASED SYST, V195, DOI 10.1016/j.knosys.2020.105633
   Cagnoni S, 2020, ICT EXPRESS, V6, P238, DOI 10.1016/j.icte.2020.07.002
   Calefato F., 2020, GOLD STANDARD POLARI, DOI DOI 10.6084/M9.FIGSHARE.11604597
   Calefato F, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2019), P34, DOI 10.1109/SEmotion.2019.00014
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Calefato F, 2017, INT CONF AFFECT, P79, DOI 10.1109/ACIIW.2017.8272591
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Chen ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3424308
   Chen ZP, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P841, DOI 10.1145/3338906.3338977
   Cheriyan J, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P254, DOI 10.1145/3463274.3463805
   De Choudhury M., 2013, P 2013 C COMPUTER SU, P303, DOI [10.1145/2441776.2441812, DOI 10.1145/2441776.2441812]
   Deshpande M, 2017, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTELLIGENT SUSTAINABLE SYSTEMS (ICISS 2017), P858, DOI 10.1109/ISS1.2017.8389299
   Devika MD, 2016, PROCEDIA COMPUT SCI, V87, P44, DOI 10.1016/j.procs.2016.05.124
   Ding J, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P7, DOI [10.1145/3194932.3194935, 10.1109/GLOCOM.2018.8647613]
   Eiband M, 2018, IUI 2018: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P211, DOI 10.1145/3172944.3172961
   El-Halees Alaa M., 2014, Journal of Software, V9, P343, DOI 10.4304/jsw.9.2.343-349
   Fabry RE, 2021, SYNTHESE, V198, P6455, DOI 10.1007/s11229-019-02470-9
   Fang X, 2015, Journal of Big Data, V2, P5, DOI 10.1186/s40537-015-0015-2
   Ferreira I., 2021, SHUT F K UP PHENOMEN, V5, DOI [10.1145/3479497, DOI 10.1145/3479497]
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gkontzis A.F., 2017, Proceedings of the 21st Pan-Hellenic Conference on Informatics, DOI DOI 10.1145/3139367.3139389
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Guzman E, 2017, REQUIR ENG, V22, P387, DOI 10.1007/s00766-017-0274-x
   Guzman Emitza., 2013, Software Visualization (VISSOFT), 2013 First IEEE Working Conference on, P1, DOI 10.1109/vissoft.2013.6650529
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Holmes G., 1994, Proceedings of the 1994 Second Australian and New Zealand Conference on Intelligent Information Systems (Cat. No.94TH8019), P357, DOI 10.1109/ANZIIS.1994.396988
   Imtiaz N, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P55, DOI 10.1145/3194932.3194938
   Islam M.R., 2018, P 27 INT C SOFTW ENG, P3
   Islam MR, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1786, DOI 10.1145/3297280.3297455
   Islam MR, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1536, DOI 10.1145/3167132.3167296
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Islam MR, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P487, DOI 10.1109/SANER.2018.8330245
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Islam MR, 2016, 2016 IEEE/ACIS 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P185, DOI 10.1109/SERA.2016.7516145
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Junfang Wu, 2021, 2021 International Conference on Service Science (ICSS), P115, DOI 10.1109/ICSS53362.2021.00026
   Kaewyong P., 2015, POSSIBILITY STUDENTS
   Kastrati Z, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11093986
   Kaur Arvinder, 2018, 2018 Second International Conference on Electronics, Communication and Aerospace Technology (ICECA), P1170, DOI 10.1109/ICECA.2018.8474619
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Klünder JAC, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2168
   Klunder Jil, 2020, Human-Centered Software Engineering. 8th IFIP WG 13.2 International Working Conference, HCSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12481), P133, DOI 10.1007/978-3-030-64266-2_8
   Kosa M, 2016, J UNIVERS COMPUT SCI, V22, P1558
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kuhrmann M., 2018, HELENA STAGE 2 RESUL, DOI DOI 10.13140/RG.2.2.14807.52649
   Kumar A, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5107
   Kumar A, 2017, J INF ASSUR SECUR, V12, P146
   Lan Z., 2019, INT C LEARNING REPRE
   Lin B, 2021, REPLICATION PACKAGE, Vxx, pxx, DOI DOI 10.5281/ZENODO.5106305
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Liu B, 2011, DATA CENTRIC SYST AP, P459, DOI 10.1007/978-3-642-19460-3_11
   Maitama JZ, 2020, IEEE ACCESS, V8, P113878, DOI 10.1109/ACCESS.2020.3003625
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mansoor N, 2021, 2021 IEEE/ACM SIXTH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING SEMOTION 2021, P19, DOI 10.1109/SEmotion52567.2021.00012
   Mostafa L., 2018, INT J SOFTWARE ENG A, V9, P16, DOI DOI 10.5121/IJSEA.2018.9604
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Murgia A, 2018, EMPIR SOFTW ENG, V23, P521, DOI 10.1007/s10664-017-9526-0
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Niinimäki T, 2009, INT CONF GLOBAL SOFT, P153, DOI 10.1109/ICGSE.2009.23
   Novielli N., 2020, ASSESSMENT SE SPECIF, DOI DOI 10.1007/S10664-021-09960-W
   Novielli N, 2020, IEEE WORK CONF MIN S, P158, DOI 10.1145/3379597.3387446
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Obaidi M, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P80, DOI 10.1145/3463274.3463328
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Park KI, 2021, 2021 IEEE/ACM SIXTH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING SEMOTION 2021, P1, DOI 10.1109/SEmotion52567.2021.00009
   Patwardhan AS, 2017, 2017 IEEE 3RD INTERNATIONAL CONFERENCE ON COLLABORATION AND INTERNET COMPUTING (CIC), P20, DOI 10.1109/CIC.2017.00014
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Petersen K., 2008, 12 INT C EV ASS SOFT, P26, DOI [10.14236/ewic/ease2008.8, DOI 10.14236/EWIC/EASE2008.8]
   Plutchik R., 1980, EMOTION THEORY RES E, V1, P3, DOI DOI 10.1016/B978-0-12-558701-3.50007-7
   Prenner N, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P145, DOI 10.1145/3379177.3388907
   Sánchez-Gordón M, 2019, INFORM SOFTWARE TECH, V115, P23, DOI 10.1016/j.infsof.2019.08.002
   SHAVER P, 1987, J PERS SOC PSYCHOL, V52, P1061, DOI 10.1037//0022-3514.52.6.1061
   Shen JY, 2019, IEEE 17TH INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP / IEEE 17TH INT CONF ON PERVAS INTELLIGENCE AND COMP / IEEE 5TH INT CONF ON CLOUD AND BIG DATA COMP / IEEE 4TH CYBER SCIENCE AND TECHNOLOGY CONGRESS (DASC/PICOM/CBDCOM/CYBERSCITECH), P1023, DOI 10.1109/DASC/PiCom/CBDCom/CyberSciTech.2019.00185
   Shevtsov S, 2018, IEEE T SOFTWARE ENG, V44, P784, DOI 10.1109/TSE.2017.2704579
   Staffs Keele, 2007, Tech. Rep.
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Sun KX, 2021, INT C PROGRAM COMPRE, P149, DOI 10.1109/ICPC52881.2021.00023
   Thelwall M, 2012, J AM SOC INF SCI TEC, V63, P163, DOI 10.1002/asi.21662
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tourani P., 2014, CASCON, P34
   Uddin G, 2021, IEEE T SOFTWARE ENG, V47, P522, DOI 10.1109/TSE.2019.2900245
   Umer Q, 2020, IEEE T RELIAB, V69, P1341, DOI 10.1109/TR.2019.2959624
   Unger-Windeler C, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P135, DOI 10.1109/ICSSP.2019.00026
   Venigalla ASM, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1550, DOI 10.1145/3468264.3473119
   WATSON D, 1988, J PERS SOC PSYCHOL, V54, P1063, DOI 10.1037/0022-3514.54.6.1063
   Werner C, 2018, 2018 1ST INTERNATIONAL WORKSHOP ON AFFECTIVE COMPUTING FOR REQUIREMENTS ENGINEERING (AFFECTRE 2018), P1, DOI 10.1109/AffectRE.2018.00006
   Whiting Mark E., 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3392877
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Yang TY, 2021, WEB CONFERENCE 2021: COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2021), P708, DOI 10.1145/3442442.3458612
   Yang ZL, 2019, ADV NEUR IN, V32
   Yasin A, 2020, IEEE ACCESS, V8, P36226, DOI 10.1109/ACCESS.2020.2971712
   Zahra K, 2017, ICIET'17: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON INFORMATION AND EDUCATION TECHNOLOGY, P155, DOI 10.1145/3029387.3029392
   Zettlemoyer L., 2019, CORR
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
NR 111
TC 10
Z9 10
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107018
DI 10.1016/j.infsof.2022.107018
EA AUG 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100009
DA 2024-07-18
ER

PT J
AU Etemadi, V
   Bushehrian, O
   Robles, G
AF Etemadi, Vahid
   Bushehrian, Omid
   Robles, Gregorio
TI Task assignment to counter the effect of developer turnover in software
   maintenance: A knowledge diffusion model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Task assignment; Knowledge diffusion; Developer tunover; Developer
   churn; Software maintenance; Bus factor; Entropy
ID LOCALIZATION; ALGORITHMS
AB Context: Developer churn is the overall turnover in a software organization's staff. Existing developers leave and new ones join the project. Retaining the knowledge of the software source code among the development team in such scenarios is an essential factor to keep the software maintenance cost as low as possible. Knowledge diffusion is an activity that could mitigate the negative impact of developer churn, while a task assignment strategy could pay an important role to attain good knowledge diffusion among the team members and effectively lower the likelihood of knowledge loss. Objective: In this work, a self-adaptive task assignment (SATA) approach is proposed that adaptively switches between cost-oriented and diffusion-oriented strategies over subsequent rounds of task assignments. Method: An entropy-based model is applied to estimate the current conditions of the development team from the knowledge concentration perspective. This model is assisted by a learning automata and evolutionary algorithms to offer smart assignments. Results: The experimental results show that, particularly in teams with medium churn rates, applying an entropy-aware task assignment model can reduce the total maintenance cost up to slightly over 50%, provided that the knowledge demands in the team over successive rounds of task assignment remain stationary. There are also improvements in terms of the projects' bus factor which prevent the project to lose its key knowledge. Even for projects where there is no saving in maintenance costs, SATA results in knowledge being more distributed among the developers, resulting in a more resilient project. Conclusion: SATA improves the long-term sustainability of development teams with developer turnover. Projects and their managers can hence rely on it when there is the risk of knowledge loss due to developer turnover.
C1 [Etemadi, Vahid; Bushehrian, Omid] Shiraz Univ Technol, Dept Comp Engn & Informat Technol, Shiraz, Iran.
   [Robles, Gregorio] Univ Rey Juan Carlos, Madrid, Spain.
C3 Shiraz University of Technology; Universidad Rey Juan Carlos
RP Bushehrian, O (corresponding author), Shiraz Univ Technol, Dept Comp Engn & Informat Technol, Shiraz, Iran.
EM bushehrian@sutech.ac.ir
RI Robles, Gregorio/I-2507-2012
OI Robles, Gregorio/0000-0002-1442-6761; Etemadi, Vahid/0000-0003-1188-5708
FU Government of Spain through project "BugBirth'' [RTI2018-101963-B-100]
FX GR acknowledges the support of the Government of Spain through project
   "BugBirth'' (RTI2018-101963-B-100).
CR Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Bakshy E., 2012, P 21 INT C WORLD WID, P519
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Constantinou E, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P34, DOI 10.1109/SANER.2017.7884607
   Cosentino V, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P499, DOI 10.1109/SANER.2015.7081864
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Etemadi V, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110967
   Ferreira M, 2019, SOFTWARE QUAL J, V27, P1583, DOI 10.1007/s11219-019-09457-2
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Ghobadi S, 2015, INFORM MANAGE-AMSTER, V52, P82, DOI 10.1016/j.im.2014.10.008
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gray RM, 2011, ENTROPY AND INFORMATION THEORY , SECOND EDITION, P395, DOI 10.1007/978-1-4419-7970-4
   Hadka D, 2012, EVOL COMPUT, V20, P423, DOI 10.1162/EVCO_a_00053
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Izquierdo-Cortazar D., 2009, 2009 42 HAW INT C SY, P1, DOI DOI 10.1109/HICSS.2009.498
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Karim MR, 2016, J SOFTW-EVOL PROC, V28, P1025, DOI 10.1002/smr.1777
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Ma ZF, 2020, SOFT COMPUT, V24, P825, DOI 10.1007/s00500-019-04540-z
   Narendra K. S., 2012, Learning Automata: An Introduction
   NARENDRA KS, 1974, IEEE T SYST MAN CYB, VSMC4, P323, DOI 10.1109/TSMC.1974.5408453
   Nassif M, 2017, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSME.2017.64
   Newman MEJ, 2010, NETWORKS INTRO, DOI [10.1093/acprof:oso/9780199206650.001.0001, DOI 10.1093/ACPROF:OSO/9780199206650.001.0001]
   Palomba F, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110847
   Pentico DW, 2007, EUR J OPER RES, V176, P774, DOI 10.1016/j.ejor.2005.09.014
   Rahman M. M., 2010, Proceedings of the 19th World Congress of Soil Science: Soil solutions for a changing world, Brisbane, Australia, 1-6 August 2010. Symposium 3.5.1 Heavy metal contaminated soils, P42
   Rashid M, 2019, INT J INFORM MANAGE, V46, P104, DOI 10.1016/j.ijinfomgt.2018.11.015
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   Robles G, 2006, INT FED INFO PROC, V203, P273
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Schuster-Bockler Benjamin, 2007, Curr Protoc Bioinformatics, VAppendix 3, p3A, DOI 10.1002/0471250953.bia03as18
   Sedano A.T., 2017, THESIS CARNEGIE MELL
   Sedano T, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962590
   Sedano T, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916002
   Thathachar MAL, 2002, IEEE T SYST MAN CY B, V32, P711, DOI 10.1109/TSMCB.2002.1049606
   Williams Laurie A., 2003, Pair programming illuminated
   Wu LL, 2012, J COMPUT SYST SCI, V78, P1280, DOI 10.1016/j.jcss.2011.12.014
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Zerouali A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09908-6
   Zhang T., 2013, Proceedings of the 28th annual acm symposium on applied computing, P1088, DOI DOI 10.1145/2480362.2480568
   Zhang T, 2016, COMPUT J, V59, P741, DOI 10.1093/comjnl/bxv114
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 51
TC 4
Z9 4
U1 2
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106786
DI 10.1016/j.infsof.2021.106786
EA DEC 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XK9HO
UT WOS:000727767300010
DA 2024-07-18
ER

PT J
AU Tong, HN
   Lu, W
   Xing, WW
   Liu, B
   Wang, SH
AF Tong, Haonan
   Lu, Wei
   Xing, Weiwei
   Liu, Bin
   Wang, Shihai
TI SHSE: A subspace hybrid sampling ensemble method for software defect
   number prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect number prediction; Imbalanced data; Hybrid sampling for
   regression; Ensemble learning; Feature subspace
ID EMPIRICAL VALIDATION; NEURAL-NETWORKS; COUNT MODELS; QUALITY; METRICS;
   FAULTS
AB Context: Software defect number prediction (SDNP) helps allocate limited testing resources by ranking software modules according to the predicted defect numbers. However, the highly skewed distribution of defects greatly degrades the performance of SDNP models by preventing SDNP models from ranking software modules accurately.
   Objective: This paper introduces a novel subspace hybrid sampling ensemble (SHSE) method based on feature subspace construction, hybrid sampling, and ensemble learning for building high-performance SDNP models.
   Method: Specifically, we first construct a series of feature subspace to ensure the diversity of base learners. In each of feature subspace, we then use the proposed hybrid sampling method to balance the training subset without losing too much information and introducing lots of noisy data caused by only using undersampling or oversampling techniques. Finally, we train each base learner and combine them by using the proposed weighted ensemble strategy. Experiments are performed on 27 public defect datasets. We compare SHSE with five state-of-the-art resampling-based models and four zero-inflated/hurdle models in terms of the ranking performance measure fault-percentile-average (FPA). To demonstrate the effectiveness of SHSE, two statistical testing methods including Wilcoxon Signed-rank test and Scott-Knott Effect Size Difference test are utilized. Cliff's delta. is also computed for quantifying the difference when there is significant difference between SHSE and each baseline.
   Results: The experimental results show that SHSE significantly outperforms the baselines and improves the performance over each baseline with as least medium effect size on most datasets. On average, SHSE improves the performance over the resampling-based methods by 8.7%similar to 14.4% and the zero-inflate/hurdle models by 10.3%similar to 15.2%.
   Conclusion: It can be concluded that SHSE is a more promising alternative for software defect number prediction.
C1 [Tong, Haonan; Lu, Wei; Xing, Weiwei] Beijing Jiaotong Univ, Sch Software Engn, Beijing 100044, Peoples R China.
   [Liu, Bin; Wang, Shihai] Beihang Univ, Sch Reliabil & Syst Engn, Sci & Technol Reliabil & Environm Engn Lab, Beijing 100191, Peoples R China.
C3 Beijing Jiaotong University; Beihang University
RP Wang, SH (corresponding author), Beihang Univ, Sch Reliabil & Syst Engn, Sci & Technol Reliabil & Environm Engn Lab, Beijing 100191, Peoples R China.
EM wangshihai@buaa.edu.cn
FU Fundamental Research Funds for the Central Universities, China
   [2021QY010]; National Nature Science Foundation of China [61771002]
FX We thank the editors and anonymous reviewers for their constructive
   comments and suggestions for the improvement of this paper. This work is
   supported by the Fundamental Research Funds for the Central
   Universities, China under Grant No. 2021RC230, the National Nature
   Science Foundation of China under Grant No. 61771002, and the
   Fundamental Research Funds for the Central Universities, China under
   Grant No. 2021QY010.
CR [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen Mingming., 2015, SEKE, P397
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cohen J., 1988, STAT POWER ANAL BEHA
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Drucker H., 1997, P 14 INT C MACH LEAR, P107, DOI DOI 10.5555/645526.657132
   Fagundes RAA, 2016, IET SOFTW, V10, P1, DOI 10.1049/iet-sen.2014.0067
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Gao KH, 2007, IEEE T RELIAB, V56, P223, DOI 10.1109/TR.2007.896761
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hastie T., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction, V2nd, P241, DOI DOI 10.1007/978-0-387-84858-7
   Huang Q., 2019, 31 INT C SOFTW ENG K, P425
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Khoshgoftaar TM, 2007, IEEE T RELIAB, V56, P212, DOI 10.1109/TR.2007.896757
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P255, DOI 10.1023/A:1024424811345
   Khoshgoftaar TM, 2003, SOFTWARE QUAL J, V11, P19, DOI 10.1023/A:1023632027907
   Khoshgoftaar TM, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P66, DOI 10.1109/ISSRE.2001.989459
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Li B., 1984, CLASSIFICATION REGRE, V40, P358
   Li WW, 2016, KNOWL-BASED SYST, V91, P263, DOI 10.1016/j.knosys.2015.09.035
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Lu ZY, 2015, IEEE T KNOWL DATA EN, V27, P368, DOI 10.1109/TKDE.2014.2304474
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Petric J, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916007
   Quah TS, 2004, INFORM SOFTWARE TECH, V46, P519, DOI 10.1016/j.infsof.2003.08.006
   Rathore SS, 2017, SOFT COMPUT, V21, P7417, DOI 10.1007/s00500-016-2284-x
   Rathore SS, 2019, IEEE T RELIAB, V68, P216, DOI 10.1109/TR.2018.2864206
   Rathore SS, 2017, KNOWL-BASED SYST, V119, P232, DOI 10.1016/j.knosys.2016.12.017
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thwin MMT, 2005, J SYST SOFTWARE, V76, P147, DOI 10.1016/j.jss.2004.05.001
   Tong HN, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10228059
   Tong HN, 2018, INFORM SOFTWARE TECH, V96, P94, DOI 10.1016/j.infsof.2017.11.008
   Torgo L, 2013, LECT NOTES ARTIF INT, V8154, P378, DOI 10.1007/978-3-642-40669-0_33
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yu X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P298, DOI [10.1109/SANER.2019.8668033, 10.1109/saner.2019.8668033]
   Yu X, 2017, PROC INT SYMP SOFTW, P78, DOI 10.1109/ISSRE.2017.18
   Zheng JW, 2019, IEEE T NEUR NET LEAR, V30, P553, DOI 10.1109/TNNLS.2018.2844464
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 66
TC 12
Z9 13
U1 4
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2022
VL 142
AR 106747
DI 10.1016/j.infsof.2021.106747
EA OCT 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WW6SN
UT WOS:000718043900001
DA 2024-07-18
ER

PT J
AU Gonçales, LJ
   Farias, K
   da Silva, BC
AF Goncales, Lucian Jose
   Farias, Kleinner
   da Silva, Bruno C.
TI Measuring the cognitive load of software developers: An extended
   Systematic Mapping Study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cognitive load; Machine learning; Software engineering; Systematic
   Mapping Study
ID EEG; PERFORMANCE; ALPHA
AB Context: Cognitive load in software engineering refers to the mental effort users spend while reading software artifacts. The cognitive load can vary according to tasks and across developers. Researchers have measured developers' cognitive load for different purposes, such as understanding its impact on productivity and software quality. Thus, researchers and practitioners can use cognitive load measures for solving many aspects of software engineering problems.
   Problem: However, a lack of a classification of dimensions on cognitive load measures in software engineering makes it difficult for researchers and practitioners to obtain research trends to advance scientific knowledge or apply it in software projects.
   Objective: This article aims to classify different aspects of cognitive load measures in software engineering and identify challenges for further research.
   Method: We conducted a Systematic Mapping Study (SMS), which started with 4,175 articles gathered from 11 search engines and then narrowed down to 63 primary studies.
   Results: Our main findings are: (1) 43% (27/63) of the primary studies focused on applying a combination of sensors; (2) 81% (51/63) of the selected works were validation studies; (3) 83% (52/63) of the primary studies analyzed cognitive load while developers performed programming tasks. Moreover, we created a classification scheme based on the answers to our research questions.
   Conclusion: despite the production of a significant amount of studies on cognitive load in software engineering, there are still many challenges to be solved in this particular field for effectively measuring the cognitive load in software engineering. Therefore, this work provided directions for future studies on cognitive load measurement in software engineering.
C1 [Goncales, Lucian Jose; Farias, Kleinner] Univ Vale Rio dos Sinos Unisinos, Appl Comp Grad Program PPGCA, Sao Leopoldo, RS, Brazil.
   [da Silva, Bruno C.] Calif Polytech State Univ San Luis Obispo, Comp Sci & Software Engn Dept, San Luis Obispo, CA 93407 USA.
C3 Universidade do Vale do Rio dos Sinos (Unisinos); California State
   University System; California Polytechnic State University San Luis
   Obispo
RP Gonçales, LJ (corresponding author), Univ Vale Rio dos Sinos Unisinos, Appl Comp Grad Program PPGCA, Sao Leopoldo, RS, Brazil.
EM lucianj@edu.unisinos.br
RI ; Carreiro da Silva, Bruno/H-6055-2016
OI Goncales, Lucian/0000-0001-7367-9710; Carreiro da Silva,
   Bruno/0000-0002-6467-9943
FU CoordenacAo de Aperfeicoamento de Pessoal de Nivel SuperiorBrasil [001];
   Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq)
   [313285/2018-7]
FX This study was financed in part by the CoordenacAo de Aperfeicoamento de
   Pessoal de Nivel SuperiorBrasil (CAPES) Finance Code 001. We thank the
   Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq)
   grant number 313285/2018-7 for partially funding this research.
CR [Anonymous], 2021, MINDWAVE MOBILE 2
   [Anonymous], 2010, P 14 INT C EV ASS SO
   Bablani A, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3297713
   Blasco J, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2968215
   Castelhano J, 2019, BRAIN IMAGING BEHAV, V13, P623, DOI 10.1007/s11682-018-9885-1
   Cohen MX, 2017, TRENDS NEUROSCI, V40, P208, DOI 10.1016/j.tins.2017.02.004
   Crk I, 2016, IEEE ENG MED BIO, P4601, DOI 10.1109/EMBC.2016.7591752
   Crk I, 2016, ACM T COMPUT-HUM INT, V23, DOI 10.1145/2829945
   Davies KS, 2011, EVID BASED LIB INF P, V6, P75, DOI 10.18438/B8WS5N
   Debener S, 2005, J NEUROSCI, V25, P11730, DOI 10.1523/JNEUROSCI.3286-05.2005
   Duraisingam A, 2017, 2017 CONFERENCE ON EMERGING DEVICES AND SMART SYSTEMS (ICEDSS), P52, DOI 10.1109/ICEDSS.2017.8073658
   Fakhoury S, 2018, INT C PROGRAM COMPRE, P286, DOI 10.1145/3196321.3196347
   Figl K, 2017, BUS INFORM SYST ENG+, V59, P41, DOI 10.1007/s12599-016-0460-2
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Fritz T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P66, DOI 10.1109/SANER.2016.107
   Fucci D, 2019, INT C PROGRAM COMPRE, P311, DOI 10.1109/ICPC.2019.00050
   Goncales L.J, 2021, EMOTIV EPOC
   Gonçales L, 2019, INT C PROGRAM COMPRE, P42, DOI 10.1109/ICPC.2019.00018
   Gui Q, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3230632
   Huang Xiaoli, 2006, AMIA Annu Symp Proc, P359
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Klimesch W, 1999, BRAIN RES REV, V29, P169, DOI 10.1016/S0165-0173(98)00056-3
   Kosti MV, 2018, INT J HUM-COMPUT ST, V115, P52, DOI 10.1016/j.ijhcs.2018.03.002
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lotte F, 2018, J NEURAL ENG, V15, DOI 10.1088/1741-2552/aab2f2
   Minas Randall K., 2017, Augmented Cognition: Enhancing Cognition and Behavior in Complex Human Environments. 11th International Conference, AC 2017, held as part of HCI International 2017. Proceedings: LNAI 10285, P56, DOI 10.1007/978-3-319-58625-0_4
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P887, DOI 10.1109/ICSE.2015.284
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Obaidellah U, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145904
   PAAS FGWC, 1994, EDUC PSYCHOL REV, V6, P351, DOI 10.1007/BF02213420
   Peitek N., 2018, IEEE T SOFTWARE ENG
   Peitek N, 2018, EYE MOVEMENTS IN PROGRAMMING (EMIP 2018), DOI 10.1145/3216723.3216725
   Peitek N, 2019, INT C PROGRAM COMPRE, P126, DOI 10.1109/ICPC.2019.00027
   Peitek N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240495
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Plass JL, 2019, EDUC PSYCHOL REV, V31, P339, DOI 10.1007/s10648-019-09473-5
   Qiu D, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2631685
   Radevski S, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P93, DOI 10.1109/CHASE.2015.28
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   Seolhwa Lee, 2018, Cluster Computing, V21, P1097, DOI 10.1007/s10586-017-0746-2
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P13, DOI 10.1109/SANER.2016.35
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sinharay A, 2013, IEEE SYS MAN CYBERN, P480, DOI 10.1109/SMC.2013.88
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Sweller J, 2011, PSYCHOL LEARN MOTIV, V55, P37
   Sweller J, 2010, EDUC PSYCHOL REV, V22, P123, DOI 10.1007/s10648-010-9128-5
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C. C., EXPT SOFTWARE ENG
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
   Zimoch M, 2017, LECT NOTES BUS INF P, V287, P153, DOI 10.1007/978-3-319-59466-8_10
NR 58
TC 10
Z9 11
U1 2
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106563
DI 10.1016/j.infsof.2021.106563
EA MAR 2021
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900006
DA 2024-07-18
ER

PT J
AU Spijkman, T
   Molenaar, S
   Dalpiaz, F
   Brinkkemper, S
AF Spijkman, Tjerk
   Molenaar, Sabine
   Dalpiaz, Fabiano
   Brinkkemper, Sjaak
TI Alignment and granularity of requirements and architecture in agile
   development: A functional perspective
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements engineering; Software architecture; Twin Peaks; Alignment;
   Granularity; Case study; Agile development
ID ENGINEERING PRACTICES; SOFTWARE
AB Context: Requirements engineering and software architecture are tightly linked disciplines. The Twin Peaks model suggests that requirements and architectural components should stay aligned while the system is designed and as the level of detail increases. Unfortunately, this is hardly the case in practical settings.
   Objective: We surmise that a reason for the absence of conjoint evolution is that existing models, such as the Twin Peaks, do not provide concrete guidance for practitioners. We propose the Requirements Engineering for Software Architecture (RE4SA) model to assist in analyzing the alignment and the granularity of functional requirements and architectural components.
   Methods: After detailing the RE4SA model in notation-independent terms, we propose a concrete instance, called RE4SA-Agile, that connects common artifacts in agile development, such as user stories and features. We introduce metrics that measure the alignment between the requirements and architecture, and we define granularity smells to pinpoint situation in which the granularity of one high-level requirement or high-level component is not uniform with the norm. We show two applications of RE4SA-Agile, including the use of the metrics, to real-world case studies.
   Results: Our applications of RE4SA-Agile, which were discussed with representatives from the development teams, prove to be able to pinpoint problematic situations regarding the relationship between functional requirements and architecture.
   Conclusion: RE4SA and its metrics can be seen as a first attempt to provide a concrete approach for supporting the application of the Twin Peaks model. We expect future research to apply our metrics to additional cases and to provide variants for RE4SA that support different concrete notations, and extend the perspective beyond the functional perspective of this research, similar to what we did with RE4SA-Agile in this paper.
C1 [Spijkman, Tjerk; Molenaar, Sabine; Dalpiaz, Fabiano; Brinkkemper, Sjaak] Univ Utrecht, Utrecht, Netherlands.
   [Spijkman, Tjerk] Fizor, Utrecht, Netherlands.
C3 Utrecht University
RP Spijkman, T (corresponding author), Univ Utrecht, Utrecht, Netherlands.
EM tjerk@fizor.io
OI Spijkman, Tjerk/0000-0003-2726-3065
CR Abreu FB, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2001.914968
   Ali N, 2018, EMPIR SOFTW ENG, V23, P224, DOI 10.1007/s10664-017-9515-3
   Ameller D, 2013, IEEE SOFTWARE, V30, P61, DOI 10.1109/MS.2012.176
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Bass L., 2013, SOFTWARE ARCHITECTUR
   BEKKERS W, 2010, P EUR C SOFTW PROC I, P1
   BERRY DM, 2017, P WORKSH EMP REQ ENG, P284
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Bosch J, 2013, COMPUTER, V46, P34, DOI 10.1109/MC.2013.295
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brandozzi M, 2001, ICSE 2001 STRAW WORK
   Brandozzi M., 2003, Second International Workshop from Software Requirements to Architectures (STRAW '03), P107
   Brinkkemper S, 2010, LECT NOTES COMPUT SC, V6285, P198, DOI 10.1007/978-3-642-15114-9_16
   Bucchiarone A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P390, DOI 10.1109/RE.2005.53
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cleland-Huang J, 2013, IEEE SOFTWARE, V30, P24, DOI 10.1109/MS.2013.39
   Coplien J.O, 2011, LEAN ARCHITECTURE
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DAVIS R, 2001, BUSINESS PROCESS MOD
   Dingsoyr T, 2019, IEEE SOFTWARE, V36, P30, DOI 10.1109/MS.2018.2884884
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Egyed A., P IEEE INT REQ ENG C, P71
   España S, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P161, DOI 10.1109/RE.2009.33
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Galster Matthias, 2013, Software Engineering Notes, V38, P40, DOI 10.1145/2507288.2507323
   Galster M., 2015, SIGSOFT SOFTW ENG NO, V40, P47
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   González A, 2009, INT CONF RES CHAL, P155, DOI 10.1109/RCIS.2009.5089279
   Grunbacher P., 2004, SOFTW SYST MODEL, V3, P235
   Hall JG, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ICRE.2002.1048516
   Hofmeister C, 2005, IEE P-SOFTW, V152, P187, DOI 10.1049/ip-sen:20045052
   Hubaux A, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501665
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Langlois RN, 2002, J ECON BEHAV ORGAN, V49, P19, DOI 10.1016/S0167-2681(02)00056-2
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lindvall M, 2008, COMPUTER, V41, P98, DOI 10.1109/MC.2008.176
   Liskin O, 2014, LNBIP, V179, P110, DOI [10.1007/978-3-319-06862-6_8, DOI 10.1007/978-3-319-06862-6]
   LUCASSEN G, 2018, P INT WORK C REQ ENG, P227
   LUCASSEN G, 2015, P INT WORKSH TWIN PE, P24
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   McChesney IR, 2004, INFORM SOFTWARE TECH, V46, P473, DOI 10.1016/j.infsof.2003.10.001
   McKeen J., 2003, Making IT Happen: Critical Issues in IT Management
   Molenaar S, 2020, LECT NOTES COMPUT SC, V12045, P169, DOI 10.1007/978-3-030-44429-7_13
   Moreira A., 2002, SEKE 02 P 14 INT C S, V15 - 19, P167
   Murugesan A, 2019, INT REQUIR ENG CONF, P177, DOI 10.1109/RE.2019.00028
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   PARNAS DL, 1985, IEEE T SOFTWARE ENG, V11, P259, DOI 10.1109/TSE.1985.232209
   PFLEEGER SL, 1990, CONFERENCE ON SOFTWARE MAINTENANCE 1990, P320
   Pohl K, 2007, INT REQUIR ENG CONF, P258, DOI 10.1109/RE.2007.25
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Reijers HA, 2011, INFORM SYST, V36, P881, DOI 10.1016/j.is.2011.03.003
   Rempel P, 2015, LECT NOTES COMPUT SC, V9013, P81, DOI 10.1007/978-3-319-16101-3_6
   Rozanski N., 2011, Software Systems Architecture: Working with Stakeholders Using Viewpoints and Perspectives
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Smirnov S, 2010, LECT NOTES COMPUT SC, V6412, P1, DOI 10.1007/978-3-642-16373-9_1
   Spijkman T, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P64, DOI 10.1109/REW.2019.00015
   Tang A, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P35, DOI 10.1007/978-3-642-21001-3_4
   van Lamsweerde A, 2003, LECT NOTES COMPUT SC, V2804, P25
   van Valkenhoef G, 2011, INFORM SOFTWARE TECH, V53, P1227, DOI 10.1016/j.infsof.2011.05.007
   Venters CC, 2018, J SYST SOFTWARE, V138, P174, DOI 10.1016/j.jss.2017.12.026
   Vlaanderen K, 2011, INFORM SOFTWARE TECH, V53, P58, DOI 10.1016/j.infsof.2010.08.004
   Wautelet Yves, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549299
   Whalen MW, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2012.173
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Wohlin C. C., EXPT SOFTWARE ENG
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Zhang Y., 2006, International Workshop on Metamodels, Schemas, Grammars, and Ontologies for Reverse Engineering, P36
   Zowghi D, 2002, APSEC 2002: NINTH ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, P3, DOI 10.1109/APSEC.2002.1182970
NR 73
TC 8
Z9 8
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2021
VL 133
AR 106535
DI 10.1016/j.infsof.2021.106535
EA FEB 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QL2TC
UT WOS:000620932900010
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Henriksson, J
   Berger, C
   Borg, M
   Tornberg, L
   Sathyamoorthy, SR
   Englund, C
AF Henriksson, Jens
   Berger, Christian
   Borg, Markus
   Tornberg, Lars
   Sathyamoorthy, Sankar Raman
   Englund, Cristofer
TI Performance analysis of out-of-distribution detection on trained neural
   networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Deep neural networks; Robustness; Out-of-distribution; Automotive
   perception; Safety-critical systems
AB Context: Deep Neural Networks (DNN) have shown great promise in various domains, for example to support pattern recognition in medical imagery. However, DNNs need to be tested for robustness before being deployed in safety critical applications. One common challenge occurs when the model is exposed to data samples outside of the training data domain, which can yield to outputs with high confidence despite no prior knowledge of the given input.
   Objective: The aim of this paper is to investigate how the performance of detecting out-of-distribution (OOD) samples changes for outlier detection methods (e.g., supervisors) when DNNs become better on training samples.
   Method: Supervisors are components aiming at detecting out-of-distribution samples for a DNN. The experimental setup in this work compares the performance of supervisors using metrics and datasets that reflect the most common setups in related works. Four different DNNs with three different supervisors are compared during different stages of training, to detect at what point during training the performance of the supervisors begins to deteriorate.
   Results: Found that the outlier detection performance of the supervisors increased as the accuracy of the underlying DNN improved. However, all supervisors showed a large variation in performance, even for variations of network parameters that marginally changed the model accuracy. The results showed that understanding the relationship between training results and supervisor performance is crucial to improve a model's robustness.
   Conclusion: Analyzing DNNs for robustness is a challenging task. Results showed that variations in model parameters that have small variations on model predictions can have a large impact on the out-of-distribution detection performance. This kind of behavior needs to be addressed when DNNs are part of a safety critical application and hence, the necessary safety argumentation for such systems need be structured accordingly.
C1 [Henriksson, Jens] Semcon Sweden AB, Gothenburg, Sweden.
   [Henriksson, Jens; Berger, Christian] Chalmers Inst Technol, Gothenburg, Sweden.
   [Berger, Christian] Univ Gothenburg, Gothenburg, Sweden.
   [Borg, Markus; Englund, Cristofer] RISE Res Inst Sweden AB, Lund, Sweden.
   [Borg, Markus; Englund, Cristofer] RISE Res Inst Sweden AB, Gothenburg, Sweden.
   [Tornberg, Lars] Volvo Cars, Machine Learning & AI Ctr Excellence, Gothenburg, Sweden.
   [Sathyamoorthy, Sankar Raman] QRTech AB, Gothenburg, Sweden.
C3 Semcon; Chalmers University of Technology; University of Gothenburg;
   RISE Research Institutes of Sweden; RISE Research Institutes of Sweden;
   Volvo
RP Henriksson, J (corresponding author), Semcon Sweden AB, Gothenburg, Sweden.
EM jens.henriksson@semcon.com; christian.berger@gu.se
RI Englund, Cristofer/KIC-6018-2024; Borg, Markus/F-3609-2010
OI Borg, Markus/0000-0001-7879-4371; Henriksson, Jens/0000-0002-4616-214X
FU Vinnova, FFI, Fordonsstrategisk forskning och innovation [2017-03066];
   Wallenberg AI, Autonomous Systems and Software Program (WASP) - Knut and
   Alice Wallenberg Foundation
FX This work was carried out within the SMILE II project financed by
   Vinnova, FFI, Fordonsstrategisk forskning och innovation under the grant
   number: 2017-03066, and partially supported by the Wallenberg AI,
   Autonomous Systems and Software Program (WASP) funded by Knut and Alice
   Wallenberg Foundation.
CR [Anonymous], 2018, 2626222018 ISO
   [Anonymous], 2019, 214482019 ISOPAS
   Bendale A, 2016, PROC CVPR IEEE, P1563, DOI 10.1109/CVPR.2016.173
   Borg M., 2019, J AUTOM SOFTW ENG
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Czarnecki K, 2018, LECT NOTES COMPUT SC, V11094, P439, DOI 10.1007/978-3-319-99229-7_37
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   Hendrycks D., 2018, ARXIV181204606
   Hendrycks Dan, 2017, INT C LEARNING REPRE
   Henriksson J, 2019, EUROMICRO CONF PROC, P113, DOI 10.1109/SEAA.2019.00026
   Henriksson J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P27, DOI 10.1109/AITest.2019.00-12
   Henriksson J, 2018, PROCEEDINGS 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR AI IN AUTONOMOUS SYSTEMS (SEFAIAS), P47, DOI 10.1145/3194085.3194090
   HUANG G, 2017, PROC CVPR IEEE, P2261, DOI DOI 10.1109/CVPR.2017.243
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Krizhevsky A., 2009, LEARNING MULTIPLE LA, DOI DOI 10.1145/3065386
   Landgren M., 2018, INPUT VERIFICATION D
   Liang S., 2017, PROC INT C LEARN REP
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma X., 2018, 2018 IEEE INT VEH S
   Netzer Yuval, 2011, ADV NEUR INF PROC SY
   Papernot N, 2016, P IEEE S SECUR PRIV, P582, DOI 10.1109/SP.2016.41
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Salay Rick, 2017, arXiv
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Wohlin C., 2012, Experimentation in Software Engineering, VSecond, P102
   Zagoruyko S., 2016, ARXIV160507146, DOI DOI 10.5244/C.30.87
NR 29
TC 7
Z9 10
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106409
DI 10.1016/j.infsof.2020.106409
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tamburri, DA
   Miglierina, M
   Di Nitto, E
AF Tamburri, Damian A.
   Miglierina, Marco
   Di Nitto, Elisabetta
TI Cloud applications monitoring: An industrial study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cloud monitoring; Applications monitoring; Incident handling; Rapid
   response organizational structures; Online survey; Industrial study
ID SERVICES
AB Context: Modern software systems employ large IT infrastructures hosted in on-premise clouds or using "rented" cloud resources from specific vendors. The unifying force across any cloud strategy is incremental product and application improvement against conservation of those resources. This is where monitoring of cloud applications becomes a key asset
   Objective: To shed light over the status of monitoring practices in industry, we study: (a) monitoring practices and tools adoption in industry; (b) size and complexity of industrial monitoring problems; (c) the role of software architecture and software process with respect to monitoring strategies.
   Method: We conduct mixed-methods empirical research featuring interviews and a web survey featuring 140+ practitioners from over 70 different organizations.
   Results: Even if the market makes available a significant set of monitoring tools, our results show a rather unappealing picture of industrial monitoring: (a) industrial decision-makers do not perceive monitoring as a key asset even though the downtime of their applications correlates heavily with the level of automation and responsiveness enabled by monitoring; (b) monitoring is done with crude technology, mostly MySQL querying or similar (e.g., Nagios); finally, (c) incidents are discovered by clients rather than application owners.
   Conclusion: We conclude that the road toward the industrial adoption of cutting-edge monitoring technology is still one of the less travelled, presumably in connection to the considerable investment required. Furthermore, the lack of industrial cloud monitoring standards does not help in addressing the proliferation of multiple tool combinations, with varying effectiveness. Further research should be invested in looking into and addressing these major concerns.
C1 [Tamburri, Damian A.] Jheronimus Acad Data Sci, sHertogenbosch, Netherlands.
   [Tamburri, Damian A.] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Miglierina, Marco] Contentwise, Milan, Italy.
   [Di Nitto, Elisabetta] Politecn Milan, Milan, Italy.
C3 Eindhoven University of Technology; Polytechnic University of Milan
RP Tamburri, DA (corresponding author), Jheronimus Acad Data Sci, sHertogenbosch, Netherlands.; Tamburri, DA (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM d.a.tamburri@tue.nl; marco.miglierina@contentwise.com;
   elisabetta.dinitto@polimi.it
RI Tamburri, Damian Andrew/AAJ-2507-2021
OI Tamburri, Damian Andrew/0000-0003-1230-8961
FU European Commission [FP7-ICT-2011-8-318484, 0421, 787061, 825040,
   825480]
FX Some of the authors' work is partially supported by the European
   Commission grant no. FP7-ICT-2011-8-318484 (MODAClouds), European
   Commission grant no. 0421 (Interreg ICT), Werkinzicht and the European
   Commissionrant no. 787061 (H2020), ANITA as well as the European
   Commissionrant no. 825040 (H2020), RADON and the European Commissionrant
   no. 825480 (H2020), SODALITE. We are very grateful to the domain experts
   who participated in our initial pilot analysis and to those who
   entusistically joined our survey and filled in our questionnaire.
CR Aceto G, 2013, COMPUT NETW, V57, P2093, DOI 10.1016/j.comnet.2013.04.001
   [Anonymous], DOING INTERVIEWS
   [Anonymous], 2013, CORR
   [Anonymous], 2014, SECURE CLOUD COMPUTI
   Barolli L, 2015, CONCURR COMP-PRACT E, V27, P1985, DOI 10.1002/cpe.3414
   Bass Len, 2012, SEI S SOFTW
   Bertolino A., 2014, JORNADAS SISTEDES, P2093
   BIERNACKI P, 1981, SOCIOL METHOD RES, V10, P141, DOI 10.1177/004912418101000205
   Chan CL, 2018, IEEE CONF COMPUT, P208, DOI 10.1109/INFCOMW.2018.8406957
   Cimera R., 2010, ASSET MANAGEMENT
   Clements P., 2003, SEI S SOFTW
   Clements P., 2001, EVALUATING SOFTWARE
   Conley M, 2015, ACM SoCC'15: Proceedings of the Sixth ACM Symposium on Cloud Computing, P302, DOI 10.1145/2806777.2806781
   de Carvalho MB, 2013, INT CONF NETW SER, P180, DOI 10.1109/CNSM.2013.6727833
   Di Nitto E., 2017, MODEL DRIVEN DEV OPE
   Fatema K, 2014, J PARALLEL DISTR COM, V74, P2918, DOI 10.1016/j.jpdc.2014.06.007
   Galletta A., 2018, INNOVATE DATA, P25
   Ghafir I, 2016, 2016 IEEE 4TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD WORKSHOPS (FICLOUDW), P77, DOI 10.1109/W-FiCloud.2016.30
   Gonzalez GC, 2012, J INF SYST, V26, P51, DOI 10.2308/isys-50259
   Heath C., 2010, Video Analysis and Qualitative Research
   Hernantes J, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.96
   IBM, 1993, IBM DICT COMP, V10th
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Kersten M, 2018, IEEE SOFTWARE, V35, P14, DOI 10.1109/MS.2018.1661330
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kvale S., 2008, DOING INTERVIEWS
   LINKMAN SG, 1990, SOFTWARE ENG J, V5, P43, DOI 10.1049/sej.1990.0006
   Lipton P, 2018, IEEE CLOUD COMPUT, V5, P37, DOI 10.1109/MCC.2018.022171666
   Liu L, 2016, IEEE T SERV COMPUT, V9, P661, DOI 10.1109/TSC.2016.2602898
   Mahbub K., 2006, THESIS
   Matouskova E., 2013, WHISPERS, P1
   Mauro T., 2015, Adopting microservices at netflix: Lessons for architectural design (accessed 01/2022)
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Miglierina M., 2017, THESIS
   Miglierina M, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P145, DOI 10.1145/3053600.3053629
   Newman S., 2015, BUILDING MICROSERVIC
   Pettigrew AM, 1990, ORGAN SCI, V1, P267, DOI 10.1287/orsc.1.3.267
   Prakash VS, 2013, IEEE INT CONF CLOUD, P541, DOI 10.1109/CLOUD.2013.129
   Prodan Radu, 2009, Proceedings of the 2009 10th IEEE/ACM International Conference on Grid Computing (GRID), P17, DOI 10.1109/GRID.2009.5353074
   Sangwan RS, 2008, COMPUTER, V41, P96, DOI 10.1109/MC.2008.434
   Skvortsov P., 2016, CORR
   So-in C., 2020, SURVEY NETWORK TRAFF
   Tamburri DA, 2018, LECT NOTES COMPUT SC, V11116, P49, DOI 10.1007/978-3-319-99819-0_4
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Toffetti G., 2015, AIMC 15, P19, DOI [10.1145/2747470.2747474, DOI 10.1145/2747470.2747474]
   Ward J S., 2013, CoRR
   Wohlin C., 2012, Experimentation in Software Engineering
   Zuñiga-Prieto M, 2014, ERCIM NEWS, P19
NR 49
TC 10
Z9 11
U1 2
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2020
VL 127
AR 106376
DI 10.1016/j.infsof.2020.106376
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NR0EE
UT WOS:000571236700002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Li, YC
   Wang, BY
   Hu, BJ
AF Li, Yuancheng
   Wang, Boyan
   Hu, Baiji
TI Semantically find similar binary codes with mixed key instruction
   sequence
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Binary code similarity comparison; Mixed key instruction sequence;
   Dynamic software analysis; Code obfuscators; Software birthmark
ID PLAGIARISM DETECTION; SOFTWARE; RESILIENT
AB Context: Software similarly comparison has always been a common technique for software reuse detection, plagiarism detection, and defect detection.
   Objective: Considering the role of API calls and arithmetic operations in software execution, a semantic-based dynamic software analysis method-mixed key instruction sequence (MKIS) is proposed.
   Method: MKIS embeds key value sets into a vector and constructs a novel software execution sequence that contains API calls and arithmetic operations during software execution. To determine the location of key values, a key-value equivalent matching algorithm is proposed, combined with the longest common subsequence algorithm to optimize the software execution sequence.
   Results: Experiments show that MKIS can accurately compare the similarly of binary programs without obtaining the software source code, and has better resiliency and credibility.
   Conclusion: Moreover, in the case when the software source code is changed with some main function-independent modification and code obfuscator, software reuse can be successfully detected.
C1 [Li, Yuancheng; Wang, Boyan; Hu, Baiji] North China Elect Power Univ, Sch Control & Comp Engn, Beijing 102206, Peoples R China.
C3 North China Electric Power University
RP Li, YC (corresponding author), North China Elect Power Univ, Sch Control & Comp Engn, Beijing 102206, Peoples R China.
EM yuancheng@ncepu.cn
RI Li, yuancheng/IUO-3866-2023
OI Hu, Baiji/0000-0001-7448-400X
FU State Grid Corporation of China under "Research and Application of Key
   Technologies for Open Source Software Security Monitoring"
   [SGFJXT00YJJS1800074]
FX This work was supported by the State Grid Corporation of China under
   "Research and Application of Key Technologies for Open Source Software
   Security Monitoring" (SGFJXT00YJJS1800074).
CR [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], P NETW DISTR SYST SE
   [Anonymous], PROCEDIA SOC BEHAV S
   [Anonymous], 2013, INT C INF SEC CRYPT
   [Anonymous], 22 INT C PROGR COMPR
   [Anonymous], 2005 ACM S APPL COMP
   [Anonymous], SCI WORLD J
   [Anonymous], MATH COMPUT SIMUL
   [Anonymous], ARAB J SCI ENG
   [Anonymous], 25 ANN COMP SEC APPL
   [Anonymous], 2008 P 10 INT C INF
   [Anonymous], 2018 IEEE INT C SOFT
   [Anonymous], 2019, A Survey of Binary Code Similarity
   [Anonymous], 33 INT C SOFTW ENG I
   [Anonymous], 200723 U CAL
   [Anonymous], 2016, NETW DISTR SYST SEC
   [Anonymous], IEEE INT S SOFTW REL
   [Anonymous], DESIGN ESTIMATION FE
   Chae DK, 2016, KNOWL-BASED SYST, V95, P114, DOI 10.1016/j.knosys.2015.12.009
   Chae DK, 2015, J SYST SOFTWARE, V110, P1, DOI 10.1016/j.jss.2015.08.018
   Jhi YC, 2015, IEEE T SOFTWARE ENG, V41, P925, DOI 10.1109/TSE.2015.2418777
   Liu BC, 2018, IEEE INT CONF AUTOM, P667, DOI 10.1145/3238147.3238199
   Liu JQ, 2017, I C VIRTUAL REALITY, P24, DOI 10.1109/ICVRV.2017.00014
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Mehmood MA, 2020, ARAB J SCI ENG, V45, P6517, DOI 10.1007/s13369-020-04559-7
   Ming J, 2016, IEEE T RELIAB, V65, P1647, DOI 10.1109/TR.2016.2570554
   Tamada H, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P569
   Tian ZZ, 2018, IEEE T SOFTWARE ENG, V44, P491, DOI 10.1109/TSE.2017.2688383
   Tian ZZ, 2016, J SYST SOFTWARE, V119, P136, DOI 10.1016/j.jss.2016.06.014
   Tian ZZ, 2015, IEEE T SOFTWARE ENG, V41, P1217, DOI 10.1109/TSE.2015.2454508
   Wu P, 2018, IEEE ACCESS, V6, P19007, DOI 10.1109/ACCESS.2018.2803738
NR 32
TC 3
Z9 3
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2020
VL 125
AR 106320
DI 10.1016/j.infsof.2020.106320
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LT0FE
UT WOS:000536752100004
DA 2024-07-18
ER

PT J
AU Lima, I
   Cândido, J
   d'Amorim, M
AF Lima, Igor
   Candido, Jeanderson
   d'Amorim, Marcelo
TI Practical detection of CMS plugin conflicts in large plugin sets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE CMS; Plugins; Testing and debugging
ID SOFTWARE
AB Context Content Management Systems (CMS), such as WordPress, are a very popular category of software for creating web sites and blogs. These systems typically build on top of plugin architectures. Unfortunately, it is not uncommon that the combined activation of multiple plugins in a CMS web site will produce unexpected behavior. Conflict-detection techniques exist but they do not scale.
   Objective: This paper proposes PENA, a technique to detect conflicts in large sets of plugins as those present in plugin market places.
   Method: PENA takes on input a configuration, consisting of a potentially large set of plugins, and reports on output the offending plugin combinations. PENA uses an iterative divide-and-conquer search to explore the large space of plugin combinations and a staged filtering process to eliminate false alarms.
   Results: We evaluated PENA with plugins selected from the WordPress official repository and compared its efficiency and accuracy against the technique that checks conflicts in all pairs of plugins. Results show that PENA is 12.4x to 19.6x more efficient than the comparison baseline and can find as many conflicts as it.
C1 [Lima, Igor; Candido, Jeanderson; d'Amorim, Marcelo] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Candido, Jeanderson] Delft Univ Technol, Delft, Netherlands.
C3 Universidade Federal de Pernambuco; Delft University of Technology
RP d'Amorim, M (corresponding author), Univ Fed Pernambuco, Recife, PE, Brazil.
EM isol2@cin.ufpe.br; j.barroscandido@tudelft.nl; damorim@cin.ufpe.br
RI ; d'Amorim, Marcelo/D-1703-2017
OI Barros Candido, Jeanderson/0000-0003-0846-040X; d'Amorim,
   Marcelo/0000-0002-1323-8769
FU INES 2.0; FACEPE [PRONEX APQ 0388-1.03/14, APQ-0399-1.03/17,
   IBPG-0123-1.03/17, IBPG-0632-1.03/15]; CAPES [88887.136410/2017-00];
   CNPq [465614/2014-0]
FX Igor was supported by a FACEPE fellowship IBPG-0123-1.03/17 and
   Jeanderson was supported by a FACEPE fellowship IBPG-0632-1.03/15. This
   research was partially funded by INES 2.0, FACEPE grants PRONEX APQ
   0388-1.03/14 and APQ-0399-1.03/17, CAPES grant 88887.136410/2017-00, and
   CNPq grant 465614/2014-0.
CR [Anonymous], TECHNICAL REPORT
   [Anonymous], 2011, JOINT EUR SOFTW ENG
   [Anonymous], TECHNICAL REPORT
   [Anonymous], FEATURE INTERACTION
   [Anonymous], P 22 IEEE ACM INT C
   Artho Cyrille, 2011, International Journal on Software Tools for Technology Transfer, V13, P223, DOI 10.1007/s10009-010-0139-9
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   d'Amorim M, 2008, IEEE T SOFTWARE ENG, V34, P597, DOI 10.1109/TSE.2008.37
   Eshkevari L., 2014, Proceedings of the 22nd International Conference on Program Comprehension (ICPC'14), P157, DOI [10.1145/2597008.2597153, DOI 10.1145/2597008.2597153]
   Garvin BJ, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P90, DOI 10.1109/ISSRE.2011.25
   Ghiduk AS, 2017, COMPUT SCI REV, V25, P29, DOI 10.1016/j.cosrev.2017.06.001
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Kim C. H. P., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P221, DOI 10.1109/ISSRE.2012.23
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   LAND AH, 1960, ECONOMETRICA, V28, P497, DOI 10.2307/1910129
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   McCamant S, 2004, LECT NOTES COMPUT SC, V3086, P440
   Misherghi G., 2006, 28th International Conference on Software Engineering Proceedings, P142, DOI 10.1145/1134285.1134307
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Sen K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P842, DOI 10.1145/2786805.2786830
   Tucker C, 2007, PROC INT CONF SOFTW, P178
   Vouillon J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P412, DOI 10.1109/ICSE.2013.6606587
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
NR 29
TC 0
Z9 0
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2020
VL 118
AR 106212
DI 10.1016/j.infsof.2019.106212
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2LV
UT WOS:000502890100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Motta, RC
   de Oliveira, KM
   Travassos, GH
AF Motta, Rebeca C.
   de Oliveira, Kathia M.
   Travassos, Guilherme H.
TI A conceptual perspective on interoperability in context-aware software
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Interoperability; Context-aware software systems; Internet of Things;
   Contemporary software systems; Ubiquitous computing; quasi-systematic
   literature review; Evidence-based software engineering
ID INTEGRATION; FRAMEWORK; INTERNET; THINGS; HOME; IOT
AB Context: Context-aware software systems can interact with different devices to complete their tasks and act according to the context, regardless of their development and organizational differences. Interoperability is a big challenge in the engineering of such systems.
   Objective: To discuss how interoperability has been addressed in context-aware software systems, strengthening the scientific basis for its understanding and conceptualization.
   Method: A quasi-systematic literature review was undertaken to observe interoperability in such context-aware software systems to support the discussions. Its dataset includes 17 from 408 papers identified in the technical literature. The extracted information was qualitatively analyzed by following the principles of Grounded Theory.
   Results: The analysis allowed to identify ten interoperability concepts, organized into a Theoretical Framework according to structural and behavioral perspectives, which deals with interoperability as the ability of things (an object, a place, an application or anything that can engage interaction with a system) to interact for a particular purpose, once their differences (development platforms, data formats, culture, legal issues) have been overcome. Once the interoperability is established from structural concepts (context, perspective, purpose, the level of provided support and system attributes), it can be measured, improved and observed from the behavioral concepts (evaluation method, challenges, issues, and benefits).
   Conclusions: The Interoperability Theoretical Framework provides relevant information to organize the knowledge related to interoperability, considering context, and can be used to guide the evolution of software systems regarding changes focused on interoperability.
C1 [Motta, Rebeca C.; de Oliveira, Kathia M.] Univ Polytech Hauts France, UMR CNRS 8201, LAMIH, Valenciennes, France.
   [Motta, Rebeca C.; Travassos, Guilherme H.] Univ Fed Rio de Janeiro, COPPE, PESC, Rio De Janeiro, Brazil.
C3 Centre National de la Recherche Scientifique (CNRS); Universite
   Polytechnique Hauts-de-France; Universidade Federal do Rio de Janeiro
RP Motta, RC (corresponding author), Univ Fed Rio de Janeiro, COPPE, PESC, Rio De Janeiro, Brazil.
EM rmotta@cos.ufrj.br
RI Travassos, Guilherme Horta/G-2842-2012
OI Travassos, Guilherme Horta/0000-0002-4258-0424; Marcal de Oliveira,
   Kathia/0000-0001-8146-5966
FU CNPq CAcTUS project [Universal 14/2013 (484380/2013-3)]; Coordenaciio de
   Aperfeicoamento de Pessoal de Nivel Superior -Brasil (CAPES) [001]
FX We thank Victor Vidigal Ribeiro for his contributions to this research.
   This work is part of the CNPq CAcTUS project Universal 14/2013
   (484380/2013-3). Prof. Travassos is a CNPq Researcher (305929/20143).
   This study was financed in part by the Coordenaciio de Aperfeicoamento
   de Pessoal de Nivel Superior -Brasil (CAPES) -Finance Code 001.
CR Ai M, 2017, IEEE INTERNET THINGS, V4, P461, DOI 10.1109/JIOT.2016.2587060
   Abowd G. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P75, DOI 10.1109/ICSE.1999.840997
   Adolph S., 2008, METHODOLOGICAL LEG S, P13
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], 1999, 14258 ISO
   [Anonymous], 2004, Guide to the Software Engineering Body of Knowledge - SWEBOK'
   [Anonymous], 2000, TIME
   Athanasopoulos G., 2008, IEEE INT C SERV COMP, P174
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Basili V., 1994, The Goal Question Metric Approach, P528
   Bazire M, 2005, LECT NOTES ARTIF INT, V3554, P29
   Beckett D., 2004, RDF XML SYNTAXSPECIF
   Biolchini J., 2008, SOFTWARE DATA TECHNO, V10
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   Byun H. E., 2010, UTILIZING CONTEXT HI
   C. ISO, 1993, 238211993 ISO ISOIEC
   C4ISR Architecture Working Group, 1998, LEV INF SYST INT LIS, V30, P1998
   Carver J., 2007, EMPIRICAL SOFTWARE E
   Chen D., 2006, P IFAC WORKSH EI2N, P77, DOI DOI 10.1002/9780470612200.CH6
   Chen D., 2006, ENTERPRISE INTEROPER
   Chen D, 2008, COMPUT IND, V59, P647, DOI 10.1016/j.compind.2007.12.016
   Conte T., 2009, APLICANDO GROUNDED T, P26
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Costa CA, 2008, IEEE PERVAS COMPUT, V7, P64, DOI 10.1109/MPRV.2008.21
   Damas M, 2013, TELEMED E-HEALTH, V19, P54, DOI 10.1089/tmj.2012.0052
   Datta SK, 2017, IEEE VEH TECHNOL MAG, V12, P26, DOI 10.1109/MVT.2017.2670859
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Fang J, 2004, P IEEE I C SERV COMP, P153
   Flores A, 2004, IEEE SYS MAN CYBERN, P1136
   Ford T., 2008, INTEROPERABILITY MEA, P1
   Ford T., 2007, INT COMM CONTR RES T, P937
   Ford T., 2007, P 5 C SYST ENG RES H, P1
   Gambi E, 2016, INT BLACK SEA CONF
   Gjoreski H, 2015, IEEE PERVAS COMPUT, V14, P70, DOI 10.1109/MPRV.2015.3
   Glaser B. G., 1967, DISCOVERY GROUNDED T, V1
   Gubbi J, 2013, FUTURE GENER COMP SY, V29, P1645, DOI 10.1016/j.future.2013.01.010
   Gyrard A, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P412, DOI 10.1109/WF-IoT.2015.7389090
   Hong JY, 2009, EXPERT SYST APPL, V36, P8509, DOI 10.1016/j.eswa.2008.10.071
   IEEE, 1990, 610121990 IEEE IEEE
   ISO, 2012, 19500 ISO ISOIEC
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   ISO/IEC/IEEE, 2017, ISO/IEC/IEEE 24765
   Issamy V., 2011, MIDDLEWARE LAYER CON, P6659
   Jackson Michael, 2015, Software Engineering - International Summer Schools, LASER 2013-14. Revised Tutorial Lectures LNCS 8987, P43, DOI 10.1007/978-3-319-28406-4_2
   Jimenez H, 2014, J AIRCRAFT, V51, P291, DOI 10.2514/1.C032349
   Juárez J, 2014, 2014 IEEE EMERGING TECHNOLOGY AND FACTORY AUTOMATION (ETFA)
   Kidd CD, 1999, LECT NOTES COMPUT SC, V1670, P191
   Kientz J. A., 2008, GEORGIA TECH AWARE H, P3675
   Koussouris S., 2011, P CENT, P19
   Kutvonen L, 2013, LECT NOTES BUS INF P, V144, P6
   Kuziemsky C. E., 2009, EBUSINESS BASED FRAM, V1, P129
   Lampathaki F, 2009, COMPUT STAND INTER, V31, P1045, DOI 10.1016/j.csi.2008.12.006
   Lee S, 2011, INFORMATION-TOKYO, V14, P527
   Lin J, 2017, IEEE INTERNET THINGS, V4, P1125, DOI 10.1109/JIOT.2017.2683200
   Liu Z., 2014, 13 INT C MOD APPL SI, P225
   Lu YY, 2017, J AM HEART ASSOC, V6, DOI 10.1161/JAHA.116.004168
   Madni A. M., 2013, SYSTEM SYSTEMS INTEG, P330
   Martín-Martín A, 2018, J INFORMETR, V12, P1160, DOI 10.1016/j.joi.2018.09.002
   Matalonga S, 2017, J SYST SOFTWARE, V131, P1, DOI 10.1016/j.jss.2017.05.048
   Mcbryan T., 2008, INTEGRATED APPROACH, P1
   McGuinness D., 2004, OWL WEBONTOLOGY LANG
   Memon M, 2014, SENSORS-BASEL, V14, P4312, DOI 10.3390/s140304312
   Mian P., SYSTEMATIC REV PROCE, P6
   Miranda J, 2015, IEEE INTERNET COMPUT, V19, P40, DOI 10.1109/MIC.2015.24
   Moon KD, 2003, IEEE T CONSUM ELECTR, V49, P546, DOI 10.1109/TCE.2003.1233770
   Mote S., 2013, ABORDAGEM ESPECIFICA
   Motta RC, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P42, DOI 10.1145/3266237.3266263
   Motta RC, 2016, BRAZ SYM COMPUT SYST, P203, DOI [10.1109/SBESC.2016.039, 10.1109/SBESC.2016.9]
   Naudet Y, 2010, COMPUT IND, V61, P176, DOI 10.1016/j.compind.2009.10.014
   Nawaratne R, 2018, FUTURE GENER COMP SY, V86, P421, DOI 10.1016/j.future.2018.02.049
   Niemela E., 2004, Proceedings of the 3rd international Conference on Mobile and Ubiquitous Multimedia (College Park, Maryland, October 27 - 29, V83, P71
   Noran O, 2012, ANNU REV CONTROL, V36, P327, DOI 10.1016/j.arcontrol.2012.09.014
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Panetto H., 2004, OTM 2004 WORKSHOPS, V3292
   Panetto H, 2016, COMPUT IND, V79, P47, DOI 10.1016/j.compind.2015.08.001
   Perera C, 2014, IEEE COMMUN SURV TUT, V16, P414, DOI 10.1109/SURV.2013.042313.00197
   Queirós A, 2015, UNIVERSAL ACCESS INF, V14, P57, DOI 10.1007/s10209-013-0328-x
   Reynolds M., 2007, TELEMONITORING SYSTE, P6161
   Rezaei R, 2014, ADV ENG SOFTW, V67, P22, DOI 10.1016/j.advengsoft.2013.07.003
   Rezaei R, 2014, COMPUT IND, V65, P1, DOI 10.1016/j.compind.2013.09.001
   Rocha L. S., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P132, DOI 10.1109/SBES.2011.33
   Rodrigues F., 2014, SYSTEMATIC LIT REV P
   Rodríguez-Domínguez C, 2012, SENSORS-BASEL, V12, P7648, DOI 10.3390/s120607648
   Ruokolainen T., 2006, INTEROPERABILITY SER, V68, P317
   Ryan N., 2005, SMART ENV CULTURAL H
   Salamone F, 2017, SENSORS-BASEL, V17, DOI 10.3390/s17051021
   Salamone F, 2015, SENSORS-BASEL, V15, P27990, DOI 10.3390/s151127990
   Santos ID, 2017, INFORM SOFTWARE TECH, V88, P1, DOI 10.1016/j.infsof.2017.03.008
   Spalazzese R, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P345, DOI 10.1109/WICSA.2009.5290664
   Spínola RO, 2008, COMM COM INF SC, V17, P587
   Spinola RO, 2012, INFORM SOFTWARE TECH, V54, P759, DOI 10.1016/j.infsof.2012.01.009
   Sullivan TP, 2003, EUR J ORG CHEM, V2003, P17
   Tang L, 2011, PERS UBIQUIT COMPUT, V15, P253, DOI 10.1007/s00779-010-0332-6
   Tolk A., 2007, Journal of Systemics, Cybernetics and Informatics, V5
   Tolk A., 2003, FALL SIM INT WORKSH
   Tolk A., 2006, 20 WORKSH PRINC ADV
   Travassos GH, 2008, IEEE INT C ENG COMP, P193, DOI 10.1109/ICECCS.2008.30
   Ullberg J, 2008, P IEEE I C SERV COMP, P99, DOI 10.1109/SCC.2008.20
   Uninova E. S., 2012, MDA MDI MODEL TRANSF, P1
   Vassev E, 2016, LECT NOTES COMPUT SC, V9952, P689, DOI 10.1007/978-3-319-47166-2_48
   Wang W., 2009, SpringSim '09 Proceedings of the 2009 Spring Simulation Multiconference, P9
   Weichhart G, 2016, DATA KNOWL ENG, V105, P90, DOI 10.1016/j.datak.2016.04.001
   Weiser M., 1991, COMPUTER 21 CENTURY
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wyatt E. J., 2012, ADDRESSING INTEROPER
   Zacharewicz G, 2017, INF SYST E-BUS MANAG, V15, P229, DOI 10.1007/s10257-016-0317-8
   Zurita N. F. Sofia, 2017, 29 INT C DES THEOR M, V7
   Zutshi A, 2012, COMPUT IND, V63, P389, DOI 10.1016/j.compind.2012.01.002
NR 110
TC 15
Z9 15
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 231
EP 257
DI 10.1016/j.infsof.2019.07.001
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nashaat, M
   Ghosh, A
   Miller, J
   Quader, S
   Marston, C
AF Nashaat, Mona
   Ghosh, Aindrila
   Miller, James
   Quader, Shaikh
   Marston, Chad
TI M-Lean: An end-to-end development framework for predictive models in B2B
   scenarios
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Big data; Machine learning; Business-to-business; User trust; Case study
AB Context: The need for business intelligence has led to advances in machine learning in the business domain, especially with the rise of big data analytics. However, the resulting predictive systems often fail to maintain a satisfactory level of performance in production. Besides, for predictive systems used in business-to-business scenarios, user trust is subject to the model performance. Therefore, the processes of creating, evaluating, and deploying machine learning systems in the business domain need innovative solutions to solve the critical challenges of assuring the quality of the resulting systems.
   Objective: Applying machine learning in business-to-business situations imposes specific requirements. This paper aims at providing an integrated solution to businesses to help them transform their data into actions.
   Method: The paper presents MLean, an end-to-end framework, that aims at guiding businesses in designing, developing, evaluating, and deploying business-to-business predictive systems. The framework employs the Lean Startup methodology and aims at maximizing the business value while eliminating wasteful development practices.
   Results: To evaluate the proposed framework, with the help of our industrial partner, we applied the framework to a case study to build a predictive product. The case study resulted in a predictive system to predict the risks of software license cancellations. The system was iteratively developed and evaluated while adopting the management and end-user perspectives.
   Conclusion: It is concluded that, in industry, it is important to be aware of the businesses requirements before considering the application of machine learning. The framework accommodates business perspective from the beginning to produce a holistic product. From the results of the case study, we think that this framework can help businesses define the right opportunities for applying machine learning, developing solutions, evaluating the effectiveness of these solutions, and maintaining their performance in production.
C1 [Nashaat, Mona; Ghosh, Aindrila; Miller, James] Univ Alberta, Dept Elect & Comp Engn, 116 St NW, Edmonton, AB T6G 1H9, Canada.
   [Quader, Shaikh] IBM Toronto Software Lab, 8200 Warden Ave, Unionville, ON L6G 1C7, Canada.
   [Marston, Chad] IBM USA, 550 King St, Littleton, MA 01460 USA.
C3 University of Alberta; International Business Machines (IBM)
RP Nashaat, M (corresponding author), Univ Alberta, Dept Elect & Comp Engn, 116 St NW, Edmonton, AB T6G 1H9, Canada.
EM nashaata@ualberta.ca; jimm@ualberta.ca
RI Ghosh, Aindrila/KFA-4845-2024; Nashaat, Mona/KPY-0439-2024
OI Nashaat, Mona/0000-0002-7580-5757; Miller, James/0000-0001-5095-3000;
   Ghosh, Aindrila/0000-0003-4908-9491
CR Akkermans H.A., 2018, SYSTEM DYNAMICS
   [Anonymous], 2015, P 24 INT C WORLD WID
   [Anonymous], 2008, PROC 25 INT C MACH L
   Avesani P., 2015, IEEE 23 INT C REQ EN
   Bahill A.T., 2017, TRADEOFF DECISIONS S
   Baskerville R.L., 1996, J INF TECHNOL
   Bilal M., 2016, ADV ENG INF
   Bodenmann B., 2010, Synthesis report on the state of the art on firmographics
   BRINK H., 2017, Real-world machine learning
   Carter N, 2014, ONCOL NURS FORUM, V41, P545, DOI 10.1188/14.ONF.545-547
   Chen C. P., 2014, INF SCI
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chong A. Y. L., 2017, INT J PROD RES
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erevelles S., 2016, J BUS RES
   Etikan I, 2016, AM J THEOR APPL STAT
   Fawcett Tom., 2004, MACH LEARN
   Gordini N., 2017, IND MARK MANAGE
   Gorschek T., 2012, IEEE T SOFTW ENG
   Hadar I., 2014, REQUIREMENTS ENG
   Hashem I. A. T., 2015, INF SYST
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Jin X., 2015, BIG DATA RES
   Kurtanovi Z., 2017, IEEE 25 INT C REQ EN
   Kwak S.K., 2017, KOREAN J ANESTHESIOL
   Landset S., 2015, J BIG DATA
   Liu SX, 2017, VIS INFORM, V1, P48, DOI 10.1016/j.visinf.2017.01.006
   Malhotra R., 2015, APPL SOFT COMPUT
   Mckinsey & Company, SPEC ED ADV AN BANK
   Meng XR, 2016, J MACH LEARN RES, V17
   Nashaat M, 2018, IEEE INT CONF BIG DA, P46, DOI 10.1109/BigData.2018.8622459
   Ortega M., 2003, SOFTW QUAL J
   Perini A., 2012, IEEE T SOFTW ENG
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Ries E, 2011, The Lean Startup
   Runeson P., 2009, EMPIR SOFTW ENG
   Salehan M., 2016, DECIS SUPPORT SYST
   Sculley David, 2014, Softw Eng Mach Learn
   Shepperd M., 2014, IEEE T SOFTW ENG
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Song Q., 2016, J SYST SOFTW
   Souza E., 2018, INF SOFTW TECHNOL
   Sparks E. R., 2017, IEEE 33 INT C DAT EN
   Srinivas S., 2018, EXPERT SYST APPL
   Sugimura Peter., 2018, Building a reproducible machine learning pipeline
   Sutcliffe A., 2013, IEEE 21 INT C REQ EN
   Tan P.N., 2005, INTRO DATA MIN
   Thaxton S, 2017, AEROSP CONF PROC
   Tsoukalas V., 2016, SAF SCI
   Tueno S., 2017, ARXIV171000903
   Vartak M., 2016, P WORKSH HUM IN THE
   Vlachos M, 2016, IBM J RES DEV, V60, DOI 10.1147/JRD.2016.2602097
   Wen J., 2012, INF SOFTW TECHNOL
   Wohlin C., 2015, EMPIR SOFTW ENG
   Yin S., 2015, P IEEE
NR 55
TC 7
Z9 7
U1 2
U2 39
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2019
VL 113
BP 131
EP 145
DI 10.1016/j.infsof.2019.05.009
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE1DW
UT WOS:000472127100008
DA 2024-07-18
ER

PT J
AU Pradhan, D
   Wang, S
   Yue, T
   Ali, S
   Liaaen, M
AF Pradhan, Dipesh
   Wang, Shuai
   Yue, Tao
   Ali, Shaukat
   Liaaen, Marius
TI Search-based test case implantation for testing untested configurations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search; Multi-objective optimization; Genetic algorithms; Test case
   implantation
ID GENETIC ALGORITHM; PRIORITIZATION; OPTIMIZATION; GENERATION; FRAMEWORK;
   SIZE
AB Context: Modern large-scale software systems are highly configurable, and thus require a large number of test cases to be implemented and revised for testing a variety of system configurations. This makes testing highly configurable systems very expensive and time-consuming.
   Objective: Driven by our industrial collaboration with a video conferencing company, we aim to automatically analyze and implant existing test cases (i.e., an original test suite) to test the untested configurations.
   Method: We propose a search-based test case implantation approach (named as SBI) consisting of two key components: 1) Test case analyzer that statically analyzes each test case in the original test suite to obtain the program dependence graph for test case statements and 2) Test case implanter that uses multi-objective search to select suitable test cases for implantation using three operators, i.e., selection, crossover, and mutation (at the test suite level) and implants the selected test cases using a mutation operator at the test case level including three operations (i.e., addition, modification, and deletion).
   Results: We empirically evaluated SBI with an industrial case study and an open source case study by comparing the implanted test suites produced by three variants of SBI with the original test suite using evaluation metrics such as statement coverage (SC), branch coverage (BC), and mutation score (MS). Results show that for both the case studies, the test suites implanted by the three variants of SBI performed significantly better than the original test suites. The best variant of SBI achieved on average 19.3% higher coverage of configuration variable values for both the case studies. Moreover, for the open source case study, the best variant of SBI managed to improve SC, BC, and MS with 5.0%, 7.9%, and 3.2%, respectively.
   Conclusion: SBI can be applied to automatically implant a test suite with the aim of testing untested configurations and thus achieving higher configuration coverage.
C1 [Pradhan, Dipesh; Yue, Tao; Ali, Shaukat] Simula Res Lab, Oslo, Norway.
   [Pradhan, Dipesh] Univ Oslo, Oslo, Norway.
   [Wang, Shuai] Testify AS, Oslo, Norway.
   [Liaaen, Marius] Cisco Syst, Oslo, Norway.
C3 University of Oslo
RP Pradhan, D (corresponding author), Simula Res Lab, Oslo, Norway.; Pradhan, D (corresponding author), Univ Oslo, Oslo, Norway.
EM dipesh@simula.no; shuai.wang@testify.no; tao@simula.no;
   shaukat@simula.no; marliaae@cisco.com
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577; Ali, Shaukat/0000-0002-9979-3519; Pradhan,
   Dipesh/0000-0002-1549-4555
FU Research Council of Norway (RCN) [203461/030]; RCN [240013, 240024/F20]
FX This research was supported by the Research Council of Norway (RCN)
   funded Certus SFI (grant no. 203461/030). Tao Yue and Shaukat Ali are
   also supported by RCN funded Zen-Configurator project (grant no.
   240024/F20), and RCN funded MBTCPS project (grant no. 240013).
CR Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   Ali S, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P581, DOI 10.5220/0006216105810589
   Ali S, 2014, LECT NOTES COMPUT SC, V8763, P17, DOI 10.1007/978-3-662-44857-1_2
   [Anonymous], TEST DATA AUGMENTATI
   [Anonymous], UNCERTAINTY BASED TE
   [Anonymous], 1998, P 1998 ACM SIGSOFT I, DOI [DOI 10.1145/271771.271803, 10.1145/271771.271803]
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2011, IRACE PACKAGE ITERAT
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2010, P ACM SIGSOFT INT S
   [Anonymous], SELF ADAPTIVE FRAMEW
   [Anonymous], PROCEEDINGS OF THE 2
   [Anonymous], 2013, P 9 JOINT M FDN SOFT
   [Anonymous], 2017, TRIRIDIA2017011 U LI
   [Anonymous], 2018, IEEE T SOFTW ENG
   [Anonymous], 2006, TIK REPORT
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asadollah SA, 2015, LECT NOTES COMPUT SC, V9447, P194, DOI 10.1007/978-3-319-25945-1_12
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Barr E. T., 2015, ISSTA, P257
   Blizard W. D., 1989, Notre Dame Journal of Formal Logic, V30, P36, DOI 10.1305/ndjfl/1093634995
   Brownlee J, 2011, CLEVER ALGORITHMS NA
   Cáceres LP, 2015, SWARM INTELL-US, V9, P103, DOI 10.1007/s11721-015-0106-x
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo J. J., 2008, Parallel Problem Solving from Nature - PPSN X. 10th International Conference, P661, DOI 10.1007/978-3-540-87700-4_66
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P111, DOI 10.1109/ICSTW.2011.60
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Hoffmann Marc R., Java Code Coverage for Eclipse
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Johnson B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P73, DOI 10.1145/2950290.2950304
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Konak A, 2006, RELIAB ENG SYST SAFE, V91, P992, DOI 10.1016/j.ress.2005.11.018
   Kosmatov N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P139, DOI 10.1109/ISSRE.2004.12
   Kracht JS, 2014, INT CONF QUAL SOFTW, P256, DOI 10.1109/QSIC.2014.33
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn R, 2009, COMPUTER, V42, P94, DOI 10.1109/MC.2009.253
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liao TJ, 2013, SOFT COMPUT, V17, P1031, DOI 10.1007/s00500-012-0946-x
   Lochau M, 2012, SOFTWARE QUAL J, V20, P567, DOI 10.1007/s11219-011-9165-4
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Miller J, 2006, INFORM SOFTWARE TECH, V48, P586, DOI 10.1016/j.infsof.2005.06.006
   Nebro AJ, 2009, MCDM: 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN MULTI-CRITERIA DECISION-MAKING, P66
   Nebro AJ, 2008, IEEE T EVOLUT COMPUT, V12, P439, DOI 10.1109/TEVC.2007.913109
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   PANDITA R, 2010, IEEE INT C SOFTW MAI, P1
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Petke Justyna, 2014, Genetic Programming. 17th European Conference (EuroGP 2014). Revised Selected Papers: LNCS 8599, P137, DOI 10.1007/978-3-662-44303-3_12
   Pradhan C, 2018, IEEE INT CONF COMM
   Pradhan D, 2017, IEEE INT CONF SOFTW, P367, DOI 10.1109/ICST.2017.40
   Pradhan D, 2016, LECT NOTES COMPUT SC, V9976, P172, DOI 10.1007/978-3-319-47443-4_11
   Pradhan D, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1085, DOI 10.1145/2908812.2908850
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Ren ZL, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-016-0089-7
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Safdar SA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1319, DOI 10.1145/3071178.3071261
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Sidiroglou-Douskos Stelios, 2014, Automatic error elimination by multi-application code transfer
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P182, DOI 10.1145/2889160.2889240
   Wang S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P32, DOI 10.1145/2648511.2648515
   Wang S, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P393, DOI 10.1109/ISSRE.2015.7381833
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wheeler David., SLOCCount
   Wohlin C, 2000, PROG COMPREHEN, P9, DOI 10.1109/WPC.2000.852475
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Xu Z., 2013, P 17 INT SOFTWARE PR, P52, DOI DOI 10.1145/2491627.2491650
   Xu ZH, 2009, ASIA PAC SOFWR ENG, P406, DOI 10.1109/APSEC.2009.29
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
   Zhao J., 1998, PROC INT COMPUT S WO, P162
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 103
TC 5
Z9 5
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2019
VL 111
BP 22
EP 36
DI 10.1016/j.infsof.2019.03.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HW6ST
UT WOS:000466821600002
DA 2024-07-18
ER

PT J
AU Brabra, H
   Mtibaa, A
   Petrillo, F
   Merle, P
   Sliman, L
   Moha, N
   Gaaloul, W
   Guéhéneuc, YG
   Benatallah, B
   Gargouri, F
AF Brabra, Hayet
   Mtibaa, Achraf
   Petrillo, Fabio
   Merle, Philippe
   Sliman, Layth
   Moha, Naouel
   Gaaloul, Walid
   Gueheneuc, Yann-Gael
   Benatallah, Boualem
   Gargouri, Faiez
TI On semantic detection of cloud API (anti)patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cloud computing; REST; OCCI; Pattern; Anti-pattern; Analysis;
   Specification; Detection; Ontology
AB Context: Open standards are urgently needed for enabling software interoperability in Cloud Computing. Open Cloud Computing Interface (OCCI) provides a set of best design principles to create interoperable REST management APIs. Although OCCI is the only standard addressing the management of any kind of cloud resources, it does not support a range of best principles related to REST design. This often worsens REST API quality by decreasing their understandability and reusability.
   Objective: We aim at assisting cloud developers to enhance their REST management APIs by providing a compliance evaluation of OCCI and REST best principles and a recommendation support to comply with these principles.
   Method: First, we leverage patterns and anti-patterns to drive respectively the good and poor practices of OCCI and REST best principles. Then, we propose a semantic-based approach for defining and detecting REST and OCCI (anti)pattems and providing a set of correction recommendations to comply with both REST and OCCI best principles. We validated this approach by applying it on cloud REST APIs and evaluating its accuracy, usefulness and extensibility.
   Results: We found that our approach accurately detects OCCI and REST(anti)patterns and provides useful recommendations. According to the compliance results, we reveal that there is no widespread adoption of OCCI principles in existing APIs. In contrast, these APIs have reached an acceptable level of maturity regarding REST principles.
   Conclusion: Our approach provides an effective and extensible technique for defining and detecting OCCI and REST (anti)patterns in Cloud REST APIs. Cloud software developers can benefit from our approach and defined principles to accurately evaluate their APIs from OCCI and REST perspectives. This contributes in designing interoperable, understandable, and reusable Cloud management APIs. Thank to the compliance analysis and the recommendation support, we also contribute to improving these APIs, which make them more straightforward.
C1 [Brabra, Hayet] Univ Sfax, Miracl Lab, Fac Econ & Management Sfax, Sfax, Tunisia.
   [Brabra, Hayet; Gaaloul, Walid] Paris Saclay Univ, CNRS, Telecom SudParis, Comp Sci Dept,SAMOVAR, Evry, France.
   [Mtibaa, Achraf] Univ Sfax, Miracl Lab, Ecole Natl Elect & Telecommun Sfax, Sfax, Tunisia.
   [Petrillo, Fabio] Ecole Polytech Montreal, Montreal, PQ, Canada.
   [Merle, Philippe] Inria Lille Nord Europe, Villeneuve Dascq, France.
   [Sliman, Layth] French Engn Sch Efrei, Paris, France.
   [Moha, Naouel] Univ Quebec, Dept Informat, Montreal, PQ, Canada.
   [Gueheneuc, Yann-Gael] Ecole Polytech Montreal, DGIGL, Montreal, PQ, Canada.
   [Benatallah, Boualem] Univ New South Wales, Sydney, NSW, Australia.
   [Gargouri, Faiez] Univ Sfax, Miracl Lab, Higher Inst Comp Sci & Multimedia Sfax, Sfax, Tunisia.
C3 Multimedia, InfoRmation Systems & Advancing Computing Laboratory
   (MIRACL); Universite de Sfax; Universite Paris Saclay; Centre National
   de la Recherche Scientifique (CNRS); IMT - Institut Mines-Telecom;
   Institut Polytechnique de Paris; Telecom SudParis; Universite de Sfax;
   Multimedia, InfoRmation Systems & Advancing Computing Laboratory
   (MIRACL); Universite de Montreal; Polytechnique Montreal; Universite
   Paris-Pantheon-Assas; University of Quebec; University of Quebec
   Montreal; Universite de Montreal; Polytechnique Montreal; University of
   New South Wales Sydney; Multimedia, InfoRmation Systems & Advancing
   Computing Laboratory (MIRACL); Universite de Sfax
RP Brabra, H (corresponding author), Paris Saclay Univ, CNRS, Telecom SudParis, Comp Sci Dept,SAMOVAR, Evry, France.
EM hayet.brabra@telecom-sudparis.eu; achraf.mtibaa@enetcom.usf.tn;
   fabio@petrillo.com; philippe.merle@inria.fr; layth.sliman@efrei.fr;
   moha.naouel@uqam.ca; walid.gaaloul@telecom-sudparis.eu;
   yann-gael.gueheneuc@polymtl.ca; boualem@cse.unsw.edu.au;
   faiez.gargouri@isims.usf.tn
RI Gaaloul, Walid/ABB-1127-2021; Merle, Philippe/K-4261-2014; Brabra,
   Hayet/HXH-0712-2023
OI Gaaloul, Walid/0000-0003-0451-532X; Merle, Philippe/0000-0003-3573-7312;
   Sliman, Layth/0000-0003-3369-7302; Benatallah,
   Boualem/0000-0002-8805-1130; Gargouri, Faiez/0000-0003-2575-8654;
   Petrillo, Fabio/0000-0002-8355-1494
FU OCCIware research and development project - French Programme
   d'Investissements d'Avenir (PIA)
FX This work is partially supported by OCCIware research and development
   project (www.occiware.org) funded by French Programme d'Investissements
   d'Avenir (PIA).
CR [Anonymous], 2012, OWL 2 web ontology language document overview
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], 2016, OPEN CLOUD COMPUTING
   [Anonymous], 2016, OPEN CLOUD COMPUTING
   Brabra H, 2016, LECT NOTES COMPUT SC, V9936, P202, DOI 10.1007/978-3-319-46295-0_13
   Brabra H, 2016, P IEEE I C SERV COMP, P744, DOI 10.1109/SCC.2016.102
   Drescher M., 2016, OCCI COMPUTE RESOURC
   Dudney B., 2003, J2EE_AntiPatterns
   Edmonds A., 2016, OPEN CLOUD COMPUTING
   Edmonds A, 2012, IEEE INTERNET COMPUT, V16, P15, DOI 10.1109/MIC.2012.65
   Fourati R., METRIC BASED APPROAC, P17
   Katsaros Gregory, 2016, OPEN CLOUD COMPUTING
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Maleshkova M., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P107, DOI 10.1109/ECOWS.2010.9
   Mass M., 2011, TECHNICAL REPORT
   Merle P., 2017, P 2 IEEE INT C INT T
   Merle P, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P852, DOI 10.1109/CLOUD.2015.117
   Moha N., SERV OR COMP 10 INT, P1
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Palma F., 2014, P 12 INT C SERV OR C, P230
   Palma F, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017420011
   Palma F, 2015, LECT NOTES COMPUT SC, V9435, P171, DOI 10.1007/978-3-662-48616-0_11
   Palma F, 2014, LECT NOTES COMPUT SC, V8627, P58, DOI 10.1007/978-3-319-09970-5_6
   Petrillo F., 2017, P 7 INT C CLOUD COMP, P348, DOI [10.5220/0006281203480355, DOI 10.5220/0006281203480355]
   Petrillo F., 2016, P 14 INT C SERV OR C, P171
   Rekik M., 2017, 50 HAW INT C SYST SC
   Richardson L., 2007, TECHNICAL REPORT
   Rodríguez C, 2016, LECT NOTES COMPUT SC, V9671, P21, DOI 10.1007/978-3-319-38791-8_2
   Settas D, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P117, DOI 10.1109/SERA.2006.68
   Settas DL, 2011, EXPERT SYST APPL, V38, P7633, DOI 10.1016/j.eswa.2010.12.097
   Stowe M., 2015, TECHNICAL REPORT
   Trcka N, 2009, LECT NOTES COMPUT SC, V5565, P425, DOI 10.1007/978-3-642-02144-2_34
   Vinoski S, 2008, IEEE INTERNET COMPUT, V12, P96, DOI 10.1109/MIC.2008.130
   Wong Sunny, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P141, DOI 10.1109/WCRE.2010.23
   Zhou W, 2014, 2014 28TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P358, DOI 10.1109/WAINA.2014.153
NR 35
TC 10
Z9 10
U1 0
U2 7
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2019
VL 107
BP 65
EP 82
DI 10.1016/j.infsof.2018.10.012
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ0YN
UT WOS:000456889200006
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Jiang, J
   Lo, D
   Yang, Y
   Li, JF
   Zhang, L
AF Jiang, Jing
   Lo, David
   Yang, Yun
   Li, Jianfeng
   Zhang, Li
TI A first look at unfollowing behavior on GitHub
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Unfollow; Relationship dissolution; GitHub
AB Context Many open source software projects rely on contributors to fix bugs and contribute new features. On GitHub, developers often broadcast their activities to followers, which may entice followers to be project contributors. It is important to understand unfollowing behavior, maintain current followers, and attract some followers to become contributors in OSS projects.
   Objective: Our objective in this paper is to provide a comprehensive analysis of unfollowing behavior on GitHub.
   Method: To the best of our knowledge, we present a first look at unfollowing behavior on GitHub. We collect a dataset containing 701,364 developers and their 4,602,440 following relationships in March 2016. We also crawl their following relationships in May 2013, August 2015 and November 2015. We conduct surveys, define potential impact factors, and analyze the correlation of factors with the likelihood of unfollowing behavior.
   Results: Our main observations are: (1) Between May 2013 and August 2015, 19.8% of active developers ever unfollowed some users. (2) Developers are more likely to unfollow those who have fewer activities, lower programming language similarity, and asymmetric relationships.
   Conclusion: Our results give suggestions for developers to reduce the likelihood of being unfollowed by their followers, and attract researchers' attention on relationship dissolution.
C1 [Jiang, Jing; Yang, Yun; Li, Jianfeng; Zhang, Li] Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Beihang University; Singapore Management University
RP Zhang, L (corresponding author), Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
EM jiangjing@buaa.edu.cn; davidlo@smu.edu.sg; ayonel@qq.com;
   powerfaster@163.com; lily@buaa.edu.cn
RI liu, feng/KCL-0778-2024; Li, Jing/GYU-5036-2022; li, jian/GSE-0245-2022;
   Zhang, Li/AAA-9787-2020; LI, JIAN/JAX-3092-2023; Li, Jin/GYQ-5363-2022;
   LI, Jing/HNB-5575-2023; Wang, Jingjing/B-7476-2016; LI,
   JIAN/GRY-2197-2022; Lo, David/A-2493-2012
OI Wang, Jingjing/0000-0003-3170-8952; Lo, David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1004202];
   National Natural Science Foundation of China [61672078]; State Key
   Laboratory of Software Development Environment
FX This work is supported by the National Key Research and Development
   Program of China No. 2018YFB1004202, National Natural Science Foundation
   of China under Grant No. 61672078 and the State Key Laboratory of
   Software Development Environment under Grant No.SKLSDE-2017ZX-20.
CR [Anonymous], 2010, IMC 2010 P
   Badashian A. S., 2014, P CASCON MARKH CAN
   Bissyande T. F., 2013, P COMPSAC KYOT JAP
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Blincoe K., 2015, P MSR FLOR IT
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   Bougie Gargi, 2011, P 2 INT WORKSHOP WEB, P31, DOI [10.1145/1984701.1984707, DOI 10.1145/1984701.1984707]
   Cosentino V., 2016, P MSR AUST US
   Dabbish L, 2012, P CSCW WASH US
   FEENEY JA, 1992, AUST J PSYCHOL, V44, P69, DOI 10.1080/00049539208260145
   Fung K. H., 2012, CAISE FOR POL
   Gao M., 2013, WEBSCI
   Gousios G., 2012, P MSR ZUR SWITZ
   Gousios G., 2015, P ICSE FLOR IT
   Gousios G., 2014, P ICSE HYD IND
   Huang SR, 2016, IEEE T MULTIMEDIA, V18, P287, DOI 10.1109/TMM.2015.2510333
   Jiang J., 2013, P WCRE KOBL GERM
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Kalliamvakou E., 2014, P MSR HYD IND
   Kivran-Swaine F., 2011, P CHI VANC CAN
   Kwak H., 2012, P ICWSM DUBL IR
   Kwak H., 2011, P CHI VANC CAN
   Lee M. J., 2013, P CHI EA PAR FRANC
   Lim E-P, 2013, P 7 INT AAAI C WEBL, P361
   Lima A., 2014, P AAAI QUB CAN
   Martin JL, 2006, SOC NETWORKS, V28, P331, DOI 10.1016/j.socnet.2005.07.008
   Ohira M., 2005, P 2005 INT WORKSHOP, P1, DOI DOI 10.1145/1083142.1083163
   Onnela JP, 2007, P NATL ACAD SCI USA, V104, P7332, DOI 10.1073/pnas.0610245104
   Owens R. A., 2003, THESIS
   Quercia D., 2012, P WEB SCI ILL US
   Ray B., 2014, P FSE HONG KONG CHIN
   Sasaki Y, 2015, TELEMAT INFORM, V32, P853, DOI 10.1016/j.tele.2015.04.008
   Sedgwick P, 2012, BRIT MED J, V344, DOI 10.1136/bmj.e4483
   Sharma A., ACM T SOFTW ENG METH
   Sharma A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P387, DOI 10.1109/SANER.2017.7884639
   Sibona C., 2014, P HICSS HAW US
   Sibona C., 2011, P HICSS HAW US
   Tsay J., 2014, P ICSE HYD IND
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang T, 2016, IEEE T SYST MAN CY-S, V46, P61, DOI 10.1109/TSMC.2015.2430834
   Wang T, 2014, J SYST SOFTWARE, V89, P19, DOI 10.1016/j.jss.2013.03.060
   Wilson C, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P205
   Xie W, 2012, PROCEEDINGS OF THE 3RD ANNUAL ACM WEB SCIENCE CONFERENCE, 2012, P344
   Xu B., 2013, P CSCW SAN ANT US
   Yu Y., 2014, P CROWDSOFT HONG KON
   Yu Z, 2015, INFORM SCIENCES, V309, P102, DOI 10.1016/j.ins.2015.03.012
NR 46
TC 8
Z9 10
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 150
EP 160
DI 10.1016/j.infsof.2018.08.012
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900009
OA Green Published
DA 2024-07-18
ER

PT J
AU Melo, SM
   Carver, JC
   Souza, PSL
   Souza, SRS
AF Melo, Silvana M.
   Carver, Jeffrey C.
   Souza, Paulo S. L.
   Souza, Simone R. S.
TI Empirical research on concurrent software testing: A systematic mapping
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical software engineering; Concurrent programming; Software
   testing; Systematic mapping
ID RACE DETECTION; EFFICIENT; EXECUTIONS; ATOMICITY; FRAMEWORK; BUGS
AB Background: Concurrent software testing is a costly and difficult task, especially due to the exponential increase in the test sequences caused by non-determinism. Such an issue has motivated researchers to develop testing techniques that select a subset of the input domain that has a high probability of revealing faults. Academics and industrial practitioners rarely use most concurrent software testing techniques because of the lack of data about their applicability. Empirical evidence can provide an important scientific basis for the strengths and weaknesses of each technique to help researchers and practitioners choose concurrent testing techniques appropriate for their environments.
   Aim: This paper gathers and synthesizes empirical research on concurrent software testing to characterize the field and the types of empirical studies performed.
   Method: We performed a systematic mapping study to identify and analyze empirical research on concurrent software testing techniques. We provide a detailed analysis of the studies and their design choices.
   Results: The primary findings are: (1) there is a general lack of empirical validation of concurrent software testing techniques, (2) the type of evaluation method varies with the type of technique, (3) there are some key challenges to empirical study design in concurrent software testing, and (4) there is a dearth of controlled experiments in concurrent software testing.
   Conclusions: There is little empirical evidence available about some specific concurrent testing techniques like model-based testing and formal testing. Overall, researchers need to perform more empirical work, especially real-world case studies and controlled experiments, to validate properties of concurrent software testing techniques. In addition, researchers need to perform more analyses and synthesis of the existing evidence. This paper is a first step in that direction.
C1 [Melo, Silvana M.; Souza, Paulo S. L.; Souza, Simone R. S.] Univ Sao Paulo, Inst Math & Comp Sci, Ave Trabalhador Sao Carlense,400 Ctr, BR-13566590 Sao Carlos, SP, Brazil.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, 3441 SEC,Box 870290, Tuscaloosa, AL 35487 USA.
C3 Universidade de Sao Paulo; University of Alabama System; University of
   Alabama Tuscaloosa
RP Melo, SM (corresponding author), Univ Sao Paulo, Inst Math & Comp Sci, Ave Trabalhador Sao Carlense,400 Ctr, BR-13566590 Sao Carlos, SP, Brazil.
EM morita@icmc.usp.br
RI Souza, Paulo S. L./F-5487-2011; Carver, Jeffrey/AAM-8202-2020; Souza,
   Simone Senger R/G-7127-2011; Carver, Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Carver,
   Jeffrey/0000-0002-7824-9151; Souza, Simone Senger/0000-0001-9007-9821;
   Souza, Paulo/0000-0002-1560-2704; Melo, Silvana/0000-0001-5934-2564
FU FAPESP - Sao Paulo Research Funding [2015/23653-5, 2013/05046-9];
   Fundacao de Amparo a Pesquisa do Estado de Sao Paulo (FAPESP)
   [15/23653-5] Funding Source: FAPESP
FX The authors acknowledge Sao Paulo Research Funding, FAPESP - Sao Paulo
   Research Funding for the financial support under process no.
   2015/23653-5 and 2013/05046-9.
CR Abadi M, 2006, ACM T PROGR LANG SYS, V28, P207, DOI 10.1145/1119479.1119480
   Adalid D, 2014, J SYST SOFTWARE, V90, P61, DOI 10.1016/j.jss.2013.10.056
   Alowibdi JS, 2013, CHIN CONT DECIS CONF, P3951
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2016, 17 INT RAD S IRS
   [Anonymous], 2003, Introduction to parallel computing
   [Anonymous], ACM SIGSOFT SOFTW EN
   Araujo W, 2014, IEEE T SOFTWARE ENG, V40, P971, DOI 10.1109/TSE.2014.2339829
   Arora V., 2015, CONCURR COMP-PRACT E, P1572
   Artho C, 2006, LECT NOTES COMPUT SC, V4085, P412
   Aziz MW, 2015, LECT NOTES COMPUT SC, V9447, P211, DOI 10.1007/978-3-319-25945-1_13
   Ball T, 2010, LECT NOTES COMPUT SC, V6015, P420, DOI 10.1007/978-3-642-12002-2_35
   Basili V. R., 1992, Technical Report
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bindal S., 2013, Proceedings of the International Symposium on Software Testing and Analysis, P145, DOI DOI 10.1145/2483760.2483764
   Bradbury JS, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P210, DOI 10.1109/TAIC.PART.2007.37
   Brito M., 2010, 22 IFIP INT C TESTIN, P79
   Brito MAS, 2013, PROCEDIA COMPUT SCI, V18, P250, DOI 10.1016/j.procs.2013.05.188
   Burckhardt S, 2010, ACM SIGPLAN NOTICES, V45, P167, DOI 10.1145/1735971.1736040
   Burnim J., 2011, ISSTA, P122
   Cai Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P491, DOI 10.11455/2568225.2568312
   Cai Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P450, DOI 10.1145/2786805.2786839
   Carver R, 2013, LECT NOTES COMPUT SC, V8063, P85, DOI 10.1007/978-3-642-39955-8_8
   Carver RH, 2010, CONCURR COMP-PRACT E, V22, P2445, DOI 10.1002/cpe.1573
   Chaki S, 2005, FORM ASP COMPUT, V17, P461, DOI 10.1007/s00165-005-0071-z
   Chen J., 2008, IEEE ACM INT C AUT S, P313
   CHEON MJ, 1993, INFORM MANAGE, V24, P107, DOI 10.1016/0378-7206(93)90060-7
   Chew L, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P307
   Christakis M, 2011, LECT NOTES COMPUT SC, V6539, P5, DOI 10.1007/978-3-642-18378-2_3
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   da Costa Aradjo I., 2016, P 1 BRAZ S SYST AUT
   Demsky B, 2015, ACM SIGPLAN NOTICES, V50, P20, DOI [10.1145/2814270.2814297, 10.1145/2858965.2814297]
   Deng DD, 2013, ACM SIGPLAN NOTICES, V48, P785, DOI [10.1145/2544173.2509539, 10.1145/2509136.2509539]
   Deniz E, 2012, ACM T DES AUTOMAT EL, V17, DOI 10.1145/2209291.2209296
   Dhok Monika, 2015, P 2015 INT S SOFTW T, P153, DOI [10.1145/2771783.2771813, DOI 10.1145/2771783.2771813]
   Dolz MF, 2016, ACM P 7 INT WORKSH P, P20, DOI 10.1145/2883404.2883406
   Dourado GGM, 2016, PROCEDIA COMPUT SCI, V80, P2226, DOI 10.1016/j.procs.2016.05.387
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering, ser. ASE '07. New York, NY, USA: ACM, P574, DOI [10.1145/1321631.1321749, DOI 10.1145/1321631.1321749]
   Eytani Y., 2004, INT PAR DISTR PROC S
   Eytani Y, 2007, CONCURR COMP-PRACT E, V19, P267, DOI 10.1002/cpe.1068
   Farzan A., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P37
   Fiedor J, 2015, SOFTW TEST VERIF REL, V25, P272, DOI 10.1002/stvr.1546
   Ganai M., 2012, P ACM SIGSOFT 20 INT
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Gligoric Milos, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P55, DOI 10.1109/ICST.2010.33
   Gligoric M, 2013, SOFTW TEST VERIF REL, V23, P375, DOI 10.1002/stvr.1469
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Guo SJ, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P854, DOI 10.1145/2786805.2786841
   Harmanci D., 2008, TECHNICAL REPORT
   Hong S, 2015, SOFTW TEST VERIF REL, V25, P334, DOI 10.1002/stvr.1539
   Hong S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P232, DOI 10.1109/ICST.2013.32
   Huang J, 2013, ACM SIGPLAN NOTICES, V48, P141, DOI 10.1145/2499370.2462167
   Hwang GH, 2014, SOFTW TEST VERIF REL, V24, P706, DOI 10.1002/stvr.1520
   HyoYoung Kim, 2011, 2011 IEEE Consumer Communications and Networking Conference (CCNC 2011), P1186, DOI 10.1109/CCNC.2011.5766365
   Jha A. K., 2013, P 2013 RES AD CONV S, P381
   Joisha PG, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2220365.2220368
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N., 2010, BASICS SOFTWARE ENG
   Juristo Natalia, 2004, SIGSOFT SOFTW ENG NO, V29, P1, DOI 10.1145/1022494.1022544
   Kähkönen K, 2015, AUTOMAT SOFTW ENG, V22, P475, DOI 10.1007/s10515-014-0150-6
   Kasikci B, 2015, ACM T PROGR LANG SYS, V37, DOI 10.1145/2734118
   Kester D, 2010, IEEE INT WORK C SO, P115, DOI 10.1109/SCAM.2010.26
   Kestor G., 2015, ACM T PROGR LANG SYS, V2
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Koong CS, 2012, J SYST SOFTWARE, V85, P43, DOI 10.1016/j.jss.2011.08.030
   Koppol PV, 2002, IEEE T SOFTWARE ENG, V28, P607, DOI 10.1109/TSE.2002.1010062
   Krena B., 2012, RV, P177, DOI DOI 10.1007/978-3-642-29860-8
   Krena Bohuslav., 2010, PADTAD, P48
   Lei Y, 2007, SOFTW TEST VERIF REL, V17, P207, DOI 10.1002/stvr.369
   Lei Y, 2006, IEEE T SOFTWARE ENG, V32, P382, DOI 10.1109/TSE.2006.56
   Li D, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P35
   Liqiang Wang, 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P137, DOI 10.1145/1122971.1122993
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   Lu K, 2015, J COMPUT SCI TECH-CH, V30, P42, DOI 10.1007/s11390-015-1503-8
   Lu K, 2014, ACM SIGPLAN NOTICES, V49, P287, DOI [10.1145/2555243.2555252, 10.1145/2692916.2555252]
   Lu S., 2006, ACM SIGOPS Operating Systems Review, V40, P37, DOI [10.1145/1168917.1168864, DOI 10.1145/1168917.1168864]
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lu S, 2012, IEEE T SOFTWARE ENG, V38, P844, DOI 10.1109/TSE.2011.35
   Luo QZ, 2010, LECT NOTES COMPUT SC, V6013, P323
   Machado N, 2015, ACM SIGPLAN NOTICES, V50, P586, DOI [10.1145/2813885.2737973, 10.1145/2737924.2737973]
   Maiya P, 2014, ACM SIGPLAN NOTICES, V49, P316, DOI [10.1145/2666356.2594311, 10.1145/2594291.2594311]
   Mamun A. A., 2009, THESIS
   Musuvathi M, 2007, ACM SIGPLAN NOTICES, V42, P446, DOI 10.1145/1273442.1250785
   Musuvathi M, 2008, ACM SIGPLAN NOTICES, V43, P362, DOI 10.1145/1379022.1375625
   Nagarakatte S, 2012, ACM SIGPLAN NOTICES, V47, P543, DOI 10.1145/2345156.2254128
   Nistor A., 2010, Proceedings 2010 43rd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2010), P251, DOI 10.1109/MICRO.2010.55
   Nistor A, 2012, PROC INT CONF SOFTW, P727, DOI 10.1109/ICSE.2012.6227145
   Olszewski M, 2009, ACM SIGPLAN NOTICES, V44, P97, DOI 10.1145/1508284.1508256
   Park C.-S., 2011, P 2011 INT C HIGH PE, p51:1
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Qichang Chen, 2012, Hardware and Software: Verification and Testing. 7th International Haifa Verification Conference (HVC 2011). Revised Selected Papers, P115, DOI 10.1007/978-3-642-34188-5_12
   Razavi N, 2014, INT J SOFTW TOOLS TE, V16, P49, DOI 10.1007/s10009-013-0277-y
   Rungta N., 2008, 4 INT HAIF VER C HVC, P23
   Rungta N., 2009, 7 WORKSH PAR DISTR S
   Rungta N., 2009, P 7 WORKSH PAR DISTR
   Safi G, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P25, DOI 10.1145/2786805.2786836
   Samak M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P131, DOI 10.1145/2786805.2786874
   Samak M, 2015, ACM SIGPLAN NOTICES, V50, P175, DOI [10.1145/2737924.2737998, 10.1145/2813885.2737998]
   Samak M, 2014, ACM SIGPLAN NOTICES, V49, P473, DOI [10.1145/2714064.2660238, 10.1145/2660193.2660238]
   Schimmel J., 2013, FEDCSIS, P1349
   Sen K., 2007, P 22 IEEE ACM INT C, P323, DOI [DOI 10.1145/1321631.1321679, 10.1145/1321631.1321679]
   Sen K, 2007, LECT NOTES COMPUT SC, V4383, P166
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Setiadi T. E., 2013, INT J COMPUT SCI, V40, P15
   Sheng TW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P401, DOI 10.1145/1985793.1985848
   Sherman E, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P53, DOI 10.1145/1595696.1595706
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Smaragdakis Y, 2012, ACM SIGPLAN NOTICES, V47, P387, DOI 10.1145/2103621.2103702
   Society I. C., 2014, GUID SOFTW ENG BOD K
   Souza SRS, 2015, SOFTW TEST VERIF REL, V25, P310, DOI 10.1002/stvr.1568
   Souza S.R.S., 2011, P WORKSH PAR DISTR S, P1
   Staunton J, 2011, LECT NOTES COMPUT SC, V6956, P97, DOI 10.1007/978-3-642-23716-4_12
   Steenbuck S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P144, DOI 10.1109/ICST.2013.33
   Tasharofi Samira, 2012, Formal Techniques for Distributed Systems. Joint 14th IFIP WG 6.1 International Conference, FMOODS 2012 and 32nd IFIP WG 6.1 International Conference, FORTE 2012, P219, DOI 10.1007/978-3-642-30793-5_14
   Tasharofi S, 2013, IEEE INT CONF AUTOM, P114, DOI 10.1109/ASE.2013.6693072
   Tasiran S, 2012, EMPIR SOFTW ENG, V17, P129, DOI 10.1007/s10664-011-9166-8
   Terragni V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P246, DOI 10.1109/ICSE.2015.45
   Thomson P, 2014, ACM SIGPLAN NOTICES, V49, P15, DOI [10.1145/2692916.2555260, 10.1145/2555243.2555260]
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Tretmans G., LECT NOTES COMPUTER, P46
   Tsui T., 2014, P INT WORKSH INN SOF, P49
   Turpie J., 2011, TECHNICAL REPORT
   Tyagi M., 2014, INT J ADV RES COMPUT, V3, P519
   Van Horn R. L., 1973, Data Base, V5, P172
   Wang C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P221, DOI 10.1145/1985793.1985824
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood BP, 2010, ACM SIGPLAN NOTICES, V45, P140, DOI 10.1145/1932682.1869473
   Wu SR, 2016, IEEE T PARALL DISTR, V27, P724, DOI 10.1109/TPDS.2015.2412544
   Xin R, 2013, PROC IEEE INT CONF S, P100, DOI 10.1109/ICSM.2013.21
   Yang CL, 1999, THESIS
   Yang Y., 2016, INSPECT FRAMEWORK DY
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Yu TT, 2014, J SYST SOFTWARE, V88, P207, DOI 10.1016/j.jss.2013.10.041
   Yuan X, 2013, LECT NOTES COMPUT SC, V8097, P4, DOI 10.1007/978-3-642-40047-6_3
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zhai K., 2014, IEEE T PARALL DISTR, V99, P1
   Zhai K., 2012, P 2012 INT S SOFTW T, P221
   Zhang L, 2014, EURASIP J ADV SIG PR, DOI 10.1186/1687-6180-2014-96
   Zhang W, 2010, ACM SIGPLAN NOTICES, V45, P179, DOI 10.1145/1735971.1736041
   Zhou X, 2012, J PARALLEL DISTR COM, V72, P716, DOI 10.1016/j.jpdc.2012.02.008
NR 146
TC 11
Z9 12
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 226
EP 251
DI 10.1016/j.infsof.2018.08.017
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900013
DA 2024-07-18
ER

PT J
AU Molléri, JS
   Petersen, K
   Mendes, E
AF Molleri, Jefferson Seide
   Petersen, Kai
   Mendes, Emilia
TI CERSE - Catalog for empirical research in software engineering: A
   Systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical research; Empirical methods; Mapping study
ID INFORMATION-SYSTEMS; REPORTING GUIDELINES; STATISTICAL POWER;
   DECISION-MAKING; DATA-COLLECTION; METHODOLOGY; KNOWLEDGE; DESIGN;
   EXPERIMENTATION; EXPERIENCES
AB Context Empirical research in software engineering contributes towards developing scientific knowledge in this field, which in turn is relevant to inform decision-making in industry. A number of empirical studies have been carried out to date in software engineering, and the need for guidelines for conducting and evaluating such research has been stressed.
   Objective: The main goal of this mapping study is to identify and summarize the body of knowledge on research guidelines, assessment instruments and knowledge organization systems on how to conduct and evaluate empirical research in software engineering.
   Method: A systematic mapping study employing manual search and snowballing techniques was carried out to identify the suitable papers. To build up the catalog, we extracted and categorized information provided by the identified papers.
   Results: The mapping study comprises a list of 341 methodological papers, classified according to research methods, research phases covered, and type of instrument provided. Later, we derived a brief explanatory review of the instruments provided for each of the research methods.
   Conclusion: We provide: an aggregated body of knowledge on the state of the art relating to guidelines, assessment instruments and knowledge organization systems for carrying out empirical software engineering research; an exemplary usage scenario that can be used to guide those carrying out such studies is also provided. Finally, we discuss the catalog's implications for research practice and the needs for further research.
C1 [Molleri, Jefferson Seide; Petersen, Kai; Mendes, Emilia] BTH Blekinge Tekniska Hogskola Sweden, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Molléri, JS (corresponding author), BTH Blekinge Tekniska Hogskola Sweden, Karlskrona, Sweden.
EM jefferson.molleri@bth.se
RI Molleri, Jefferson/AAY-3288-2020; Molléri, Jefferson/AAF-1059-2019;
   Mendes, Maria E/B-4207-2015
OI Molleri, Jefferson/0000-0001-5629-5256; Mendes,
   Emilia/0000-0003-0449-5322; Petersen, Kai/0000-0002-1532-8223
FU Science Without Borders program - CNPq (National Council for Scientific
   and Technological Development - Brazil)
FX The work of Jefferson Seide Molleri is supported by the Science Without
   Borders program, funded by CNPq (National Council for Scientific and
   Technological Development - Brazil).
CR Adolph S., 2008, P C CTR ADV STUD COL, P13
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Ali NB, 2014, P 8 ACM IEEE INT S E, P1, DOI [10.1145/2652524.2652557, DOI 10.1145/2652524.2652557]
   Almqvist J. P. F., 2006, THESIS
   Anderlin-Neto A., 2014, TECHNICAL REPORT
   Andersson C., 2007, Software Process Improvement and Practice, V12, P125, DOI 10.1002/spip.311
   Andrews A. A., 2001, Empirical Software Engineering, V6, P105, DOI 10.1023/A:1011442319273
   [Anonymous], P EASE 2009 BCS EWIC
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2014, 8 ACM IEEE ESEM
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2005, Technical Report
   [Anonymous], EVALUATING THINKING
   [Anonymous], 2010, 1 INT WORKSH REPL EM
   [Anonymous], 2015, CLIN PHYTOSCIENCE, DOI DOI 10.1186/S40816-015-0013-0
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], SOFTW TECHN ENG PRAC
   [Anonymous], 2013, P 17 INT C EVALUATIO
   [Anonymous], 2010, PROC ACM IEEE INT S, DOI DOI 10.1145/1852786.1852789
   [Anonymous], P 17 INT C EV ASS SO
   [Anonymous], ICSE WORKSH BEG BORR
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], 2013, RES DESIGN QUALITATI
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   Avison D., 2001, Information Technology & People, V14, P28, DOI 10.1108/09593840110384762
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Bailey J., 2007, REAL EV BAS SOFTW EN, P2
   Baldassarre M. T., 2014, P 18 INT C EV ASS SO, P18
   Baldassarre M. T., 2013, P 17 INT C EV ASS SO, P144, DOI [10.1145/2460999.2461020, DOI 10.1145/2460999.2461020]
   Basili V., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P110
   Basili V.R., 1993, Experimental Software Engineering Issues: Critical Assessment and Future Directions, V706, P1
   Basili VR, 2007, EMPIR SOFTW ENG, V12, P107, DOI 10.1007/s10664-006-9030-4
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Baskenrille R. L, 1999, COMMUNICATIONS AIS, V2, P4
   Baskerville R., 1997, J SYSTEMS INFORM TEC, V1, P25, DOI [10.1108/13287269780000733, DOI 10.1108/13287269780000733]
   Baskerville R.L., 2016, ENACTING RES METHODS, V2, P169, DOI DOI 10.1007/978-3-319-29269-4_7
   Benbasat I, 1999, MIS QUART, V23, P3, DOI 10.2307/249403
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Biffl S., 2014, P 8 ACM IEEE INT S E, P49
   Biolchini J., 2005, Systematic review in software engineering(05)
   Birks DF, 2013, EUR J INFORM SYST, V22, P1, DOI 10.1057/ejis.2012.48
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P117
   Bosu MF, 2013, IEEE AUS SOFT ENGR, P97, DOI 10.1109/ASWEC.2013.21
   Brereton P., 2008, P 12 INT C EV ASS SO
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brooks A., 1996, ISERN9610 U STRATHCL
   Budgen David, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P263, DOI 10.1109/ESEM.2013.41
   Budgen D, 2009, IET SOFTW, V3, P410, DOI 10.1049/iet-sen.2008.0106
   Budgen D., 2008, 12 INT C EV ASS SOFT, P1
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   Butler T, 1998, J INF TECHNOL-UK, V13, P285, DOI 10.1057/jit.1998.7
   Carroll JM, 2000, EUR J INFORM SYST, V9, P235, DOI 10.1057/palgrave/ejis/3000374
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Carver J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P251
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   Cater-Steel A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P197, DOI 10.1109/ISESE.2005.1541829
   Cavaye ALM, 1996, INFORM SYST J, V6, P227, DOI 10.1111/j.1365-2575.1996.tb00015.x
   Chen L., 2010, 14 INT C EV ASS SOFT
   Condon-Fernandez N., 2012, TECHNICAL REPORT
   Conradi R., 2005, 2005 INT S EMP SOFTW
   Cruzes Daniela, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P235
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1, DOI DOI 10.1145/1852786.1852788
   Cruzes D, 2007, P INT C CHIL COMPUT, P105, DOI 10.1109/SCCC.2007.11
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P343, DOI 10.1109/ESEM.2011.44
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   da Silva F. Q., 2010, P 2010 ACM IEEE INT, P33
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Darke P, 1998, INFORM SYST J, V8, P273, DOI 10.1046/j.1365-2575.1998.00040.x
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Dawson R., 2003, SOFTW TECHN ENG PRAC, P52
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   de Magalhaes C. V., 2013, REPL EMP SOFTW ENG R, P50
   De Magalhaes C. V., 2014, P 18 INT C EV ASS SO, P37
   de Mello R. M., 2013, 17 INT C EV ASS SOFT, P216
   Dieste Oscar, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P36, DOI 10.1049/ic.2011.0005
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Dieste O., 2010, P INT WORKSH REPL EM
   Dieste O, 2011, INT SYMP EMP SOFTWAR, P285, DOI 10.1109/ESEM.2011.37
   Dieste O, 2011, INT SYMP EMP SOFTWAR, P68, DOI 10.1109/ESEM.2011.15
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Djokic S, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P103
   Doolin B., 1996, AUSTRALAS J INF SYST, V3
   DU G, 2006, P 5 ACM IEEE INT S E, P212
   Dyba T., 2007, EMP SOFTW ENG MEAS 2, V7, P225
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Edwards HM, 2009, INFORM SOFTWARE TECH, V51, P785, DOI 10.1016/j.infsof.2008.08.008
   Exton C., 2007, P PPIG 2007 19 ANN M
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Freimut B., 2002, VISEK007E FRAUNH I E
   Galliers R. D., 1991, P INF SYST RES ISS M
   Gallis H, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ISESE.2003.1237972
   Galster Matthias, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P146, DOI 10.1049/ic.2012.0018
   Garcia Rogerio Eduardo, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P685
   Garcia R. E., 2004, INT WORKSH VIS LANG
   Gessenharter D, 2008, LECT NOTES COMPUT SC, V4895, P86
   Ghafari M., 2012, International Journal of Software Engineering Applications, V3, P13, DOI DOI 10.5121/IJSEA.2012.3202
   Glass RL, 1997, J SYST SOFTWARE, V36, P85, DOI 10.1016/0164-1212(95)00197-2
   Gomez O. S., 2010, P 2010 ACM IEEE INT, P3
   Gomez Omar S., 2010, P 1 INT WORKSHOP REP
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Green TRG, 2000, IEEE VISLANG, P172, DOI 10.1109/VL.2000.874381
   Guzman L, 2014, P 18 INT C EV ASS SO, P2
   Hall T., 2001, Empirical Software Engineering, V6, P305, DOI 10.1023/A:1011922615502
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hansen B.H., 2005, Proceedings of the 38th Annual Hawaii International Conference on System Sciences (HICSS'05), p264b
   Happel H.J., 2006, P WORKSH SEM WORKSH, P5
   HARRISON R, 1999, EMPIR SOFTW ENG, V4, P405
   Hassler Edgar., 2014, 18th International Conference on Evaluation Assessment in Software Engineering, P31
   Hayes W., 1999, SOFTW METR S 1999 P, P143
   He Zhang, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P56, DOI 10.1049/ic.2011.0007
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Höfer A, 2007, LECT NOTES COMPUT SC, V4336, P10
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Host Martin, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P479
   Hove S. E., 2005, 11 IEEE INT SOFTW ME
   Hughes J., 2003, P 11 EUR C INF SYST, P62
   Imtiaz Salma, 2013, P 17 INT C EV ASS SO, P177
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   JACKSON RHF, 1991, MATH PROGRAM, V49, P413
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jalil M.M., 2013, PRACTICAL GUIDELINES
   JARVENPAA SL, 1985, MIS QUART, V9, P141, DOI 10.2307/249115
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jedlitschka A, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P261
   Jedlitschka A, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P154, DOI 10.1109/ISESE.2003.1237974
   Jedlitschka A, 2007, LECT NOTES COMPUT SC, V4336, P58
   Jedlitschka A, 2014, EMPIR SOFTW ENG, V19, P1921, DOI 10.1007/s10664-013-9268-6
   Ji JZ, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P168
   Jordan H., 2014, P 18 INT C EV ASS SO, P44
   Jorgensen M., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P29, DOI 10.1049/ic:20040396
   Jorgensen M., 2002, EMPIR SOFTW ENG, V7, P9, DOI [DOI 10.1023/A:1014866909191, 10.1023/A:1014866909191]
   Jorgensen M., 2005, P 11 IEEE INT SOFTW, P24
   Juristo N, 2013, INFORM SOFTWARE TECH, V55, P215, DOI 10.1016/j.infsof.2012.07.016
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Juristo Natalia, 2004, SIGSOFT SOFTW ENG NO, V29, P1, DOI 10.1145/1022494.1022544
   Kampenes V., 2007, THESIS
   Kampenes V. B., 2008, EVAL ASSESS SOFTW EN
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Karahasanovi A, 2005, EMPIR SOFTW ENG, V10, P113, DOI 10.1007/s10664-004-6189-4
   Karn JS, 2006, BEHAV RES METHODS, V38, P495, DOI 10.3758/BF03192804
   Kirsopp C., 2002, IEE Proceedings-Software, V149, P123, DOI 10.1049/ip-sen:20020695
   Kitchenham B, 2007, IET SOFTW, V1, P161, DOI 10.1049/iet-sen:20060052
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham Barbara, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P126, DOI 10.1049/ic.2012.0016
   Kitchenham Barbara, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P46, DOI 10.1049/ic.2011.0006
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., 2006, INT S EMPIRICAL SOFT, P38, DOI DOI 10.1145/1159733.1159742
   Kitchenham B., 1996, DESMET: A method for evaluating Software Engineering methods and tools
   Kitchenham B., 2003, ACM SIGSOFT SOFTW EN, V28
   Kitchenham B. A., 1997, Software Engineering Notes, V22, P21, DOI 10.1145/263244.263251
   Kitchenham B. A., 1998, Software Engineering Notes, V23, P20, DOI 10.1145/279437.279445
   Kitchenham B. A., 1997, Software Engineering Notes, V22, P13, DOI 10.1145/251759.251790
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenham B.A., P 13 INT C EV ASS SO
   Kitchenham B. A., 2001, ACM SIGSOFT SOFTW EN, P26
   Kitchenham B. A., 1998, ACM SIGSOFT SOFTW EN, V23, P18
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham B. A., 1995, ACM SIGSOFT SOFTW EN
   Kitchenham B. A., 1998, ACM SIG SOFT SOFTWAR, V23, P24, DOI [10.1145/272263.272268, DOI 10.1145/272263.272268]
   Kitchenham B. A., 2010, EASE, V10, P25
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   KITCHENHAM BA, 1994, SOFTWARE ENG J, V9, P43, DOI 10.1049/sej.1994.0008
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Kitchenham BarbaraAnn., 1996, ACM SIGSOFT SOFTWARE, V21, P9
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Krein J. L., 2010, RESER2010 P 1 INT WO
   Lam A, 2009, EMPIR SOFTW ENG, V14, P579, DOI 10.1007/s10664-008-9096-2
   Lau F., 1999, Information Technology & People, V12, P148, DOI 10.1108/09593849910267206
   Lau F, 1997, INFORMATION SYSTEMS AND QUALITATIVE RESEARCH, P31
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lethbridge T. C., 1998, EMPIRICAL STUDIES IE
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   Lung J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P191, DOI 10.1145/1368088.1368115
   MacDonell S. G, 2014, P 20 AM C INF SYST
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Maimbo H., 2005, Proceedings Pacific Asia Conference on Information Systems, PACIS 2005, Bangkok, Thailand, July 7-10, 2005, P106
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Marshall Christopher., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, P13
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   McLeod L, 2011, EMPIR SOFTW ENG, V16, P430, DOI 10.1007/s10664-010-9153-5
   dos Santos PSM, 2013, ELECTRON NOTES THEOR, V292, P95, DOI 10.1016/j.entcs.2013.02.008
   Mende Thilo, 2010, P 6 INT C PRED MOD S, P5
   Mendez Fernandez Daniel, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P136, DOI 10.1049/ic.2012.0017
   Mendonca M., 2006, P 2006 ACM IEEE INT, P48, DOI [10.1145/1159733.1159743, DOI 10.1145/1159733.1159743]
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Mian P., 2005, ESELAW05 2 EXP SOFTW
   Miller J, 1997, INFORM SOFTWARE TECH, V39, P285, DOI 10.1016/S0950-5849(96)01139-1
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Miller J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P152, DOI 10.1109/METRIC.1999.809736
   Miller J, 2008, EMPIR SOFTW ENG, V13, P223, DOI 10.1007/s10664-008-9063-y
   Mingers J, 2001, INFORM SYST RES, V12, P240, DOI 10.1287/isre.12.3.240.9709
   Mockus Audris, 2010, P 1 INT WORKSH REPL
   Mohagheghi P., 2004, P INT S EMP SOFTW EN
   Moher D, 2011, J CLIN EPIDEMIOL, V64, P718, DOI 10.1016/j.jclinepi.2010.09.013
   MOHER T, 1982, INT J MAN MACH STUD, V16, P65, DOI 10.1016/S0020-7373(82)80072-2
   Moher T., 1981, 5th International Conference on Software Engineering, P224
   Mumford E., 2001, Information Technology & People, V14, P12, DOI 10.1108/09593840110384753
   Murphy-Hill E. R., 2010, FSE SDP WORKSH FUT S, P255, DOI DOI 10.1145/1882362.1882415
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Myers M.D., 1999, Communications of the Association for Information Systems, V2, P2
   Neto AmadeuAnderlin., 2013, P 17 INT C EVALUATIO, p82. isbn, DOI [10.1145/2460999.2461011, DOI 10.1145/2460999.2461011]
   Nicolau de Franca Breno Bernard, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P156, DOI 10.1049/ic.2012.0019
   Nielsen J., 1992, Advances in Human-computer Interaction, V3, P69
   Oates B.J., 2009, EASE, V9, P20
   Ohlsson MC, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P217, DOI 10.1109/METRIC.2002.1011340
   Okoli C, 2004, INFORM MANAGE-AMSTER, V42, P15, DOI 10.1016/j.im.2003.11.002
   OReilly M., 2015, Advanced Qualitative Research: A Guide to Using Theory
   OREN TI, 1981, COMMUN ACM, V24, P180, DOI 10.1145/358598.358605
   Pare G., 2002, The Qualitative Report, P1
   Parnas DL, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P2, DOI 10.1109/ISESE.2003.1237959
   Passos C, 2012, INT SYMP EMP SOFTWAR, P9, DOI 10.1145/2372251.2372255
   Patil S, 2011, INFORM SOFTWARE TECH, V53, P969, DOI 10.1016/j.infsof.2011.01.013
   Pereira W. M., 2010, P 2010 ACM IEEE INT, P34
   Perry DE, 2004, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2004.1317512
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K., 2013, SOFTW MEAS 2013 8 IN, P81
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pfleeger S. L., 1995, Annals of Software Engineering, V1, P219, DOI 10.1007/BF02249052
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Pfleeger SL, 1999, J SYST SOFTWARE, V47, P111, DOI 10.1016/S0164-1212(99)00031-X
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Pinsonneault A., 1993, Journal of Management Information Systems, V10, P75
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Prikladnicki R., 2008, HAW INT C SYST SCI P, P442
   Prikladnicki R., 2005, 13 SPECIAL INTEREST
   Prikladnicki R, 2014, EMPIR SOFTW ENG, V19, P822, DOI 10.1007/s10664-012-9240-x
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Rainer A., 2005, REBSE'05: Proceedings of the 2005 Workshop on Realising Evidence-Based Software Engineering, V30, P1, DOI [10.1145/1083174, DOI 10.1145/1083174]
   Rainer A, 2008, U HERTFORDSHIRE TECH, V2
   Rainer A., 2006, 10 INT C EV ASS SOFT
   Rainer A., 2008, 12 INT C EV ASS SOFT, V12, P1
   Rajlich Vaclav, 2005, 2005 INT S EMP SOFTW
   Ramos MCP, 2015, VALUE HEALTH, V18, P512, DOI 10.1016/j.jval.2014.12.014
   Riaz M, 2010, INT C EV ASS SOFTW E, P44
   Ribeiro D. M., 2014, P 8 ACM IEEE INT S E, P47
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Robles G., 2010, P 1 INT WORKSH REPL, P1
   Romero FP, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P357
   Rönkkö K, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P204, DOI 10.1109/ISESE.2002.1166941
   Ronkko K., 2002, THESIS
   Rönkkö K, 2007, INFORM SOFTWARE TECH, V49, P682, DOI 10.1016/j.infsof.2007.02.014
   Rosenberg J, 2000, ADV COMPUT, V53, P285
   Runeson P., 2003, 2 WORKSH FUT EMP STU, P133
   Runeson P, 2014, EMPIR SOFTW ENG, V19, P1781, DOI 10.1007/s10664-013-9262-z
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadler C., 1996, Software Engineering Notes, V21, P11, DOI 10.1145/235969.235972
   Santos Paulo, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P414, DOI 10.1109/ESEM.2009.5316013
   Scatalon L., 2011, P 23 INT C SOFTW ENG, P408
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seddon PB, 2012, EUR J INFORM SYST, V21, P6, DOI 10.1057/ejis.2011.9
   Segal J., 2003, SOFTW TECHN ENG PRAC, P40
   Segal J., 2003, P 7 INT C EMP ASS SO, P63
   SEGAL J, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shull F., 2001, Software Engineering Notes, V26, P288, DOI 10.1145/503271.503248
   Shull F, 2005, INFORM SOFTWARE TECH, V47, P1019, DOI 10.1016/j.infsof.2005.09.007
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull F., 2008, Guide to advanced empirical software engineering, Band, V93
   Shull F., 2005, 2005 INT S EMP SOFTW
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sieber J. E., 2001, Empirical Software Engineering, V6, P329, DOI 10.1023/A:1011978700481
   Sigfridsson A, 2011, INFORM SOFTWARE TECH, V53, P981, DOI 10.1016/j.infsof.2011.01.012
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Simera I, 2010, EUR J CLIN INVEST, V40, P35, DOI 10.1111/j.1365-2362.2009.02234.x
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Singer J., 1999, Fifth IEEE Workshop on Empirical Studies of Software Maintenance (WESS99). Theme: How to Wade Through the Mire of Evidence?, P71
   Singer J., 1999, P 6 INT S SOFTW METR, P326
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2007, LECT NOTES COMPUT SC, V4336, P77
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Skoglund M., 2009, 13 INT C EVALUATION, P31
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Soares S, 2014, P 8 ACM IEEE INT S E
   Solari Martin, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P213, DOI 10.1109/ESEM.2013.26
   Solari M., 2006, 7 INT C PROD FOC SOF
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Stol KJ, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P5, DOI 10.1109/GTSE.2013.6613863
   Thomson C., 2009, P 13 INT C EV ASS SO, P75
   Tomassetti Federico, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P31, DOI 10.1049/ic.2011.0004
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   Tudhope D., 2006, NEW REV HYPERMEDIA M, V12, P3
   Turner M., 2008, P EV ASS SOFTW ENG E, V8
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Viller S, 1999, HUM-COMPUT INTERACT, V14, P9, DOI 10.1207/s15327051hci1401&2_2
   Webster J, 2002, MIS QUART, V26, pXIII
   Weyuker EJ, 2011, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2011.66
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wieringa R., 2012, TECHNICAL REPORT
   Wieringa R., 2009, P 4 INT C DES SCI RE, P8
   Wieringa R., 2007, CERE 07, P36
   Wieringa R, 2012, INT SYMP EMP SOFTWAR, P157, DOI 10.1145/2372251.2372279
   Wieringa R, 2011, INT SYMP EMP SOFTWAR, P295, DOI 10.1109/ESEM.2011.38
   Wieringa R, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P361, DOI 10.1109/RE.2009.17
   Wohlin C, 2016, LECT NOTES BUS INF P, V240, P1, DOI 10.1007/978-3-319-40515-5_1
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Wohlin Claes, 2014, P 8 ACM IEEE INT S E, P1
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Woodall P., 2006, Proceedings of the 10th International Conference on Evaluation and Assessment in Software Engineering, P130
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Wynekoop JL, 1997, INFORM SYST J, V7, P47, DOI 10.1046/j.1365-2575.1997.00004.x
   Xia F., 2002, P 6 INT C EMP ASS SO, P1
   Yamashita A., 2014, C P 18 INT C EV ASS, P36, DOI 10.1145/2601248.2601286
   Yueming Sun, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P171, DOI 10.1049/ic.2012.0022
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zhang H., 2010, SEARCHING RELEVANT S
   Zhang H, 2011, INT SYMP EMP SOFTWAR, P87, DOI 10.1109/ESEM.2011.17
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   [No title captured]
NR 346
TC 14
Z9 15
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 117
EP 149
DI 10.1016/j.infsof.2018.08.008
PG 33
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HD5RF
UT WOS:000452586900008
DA 2024-07-18
ER

PT J
AU Kakar, AK
AF Kakar, Adarsh Kumar
TI How does the value provided by a software product and users'
   psychological needs interact to impact user loyalty
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Hedonic value; Utilitarian value; Social value; Human psychological
   needs; User loyalty
ID MODERATED MULTIPLE-REGRESSION; INTRINSIC MOTIVATION; SELF-DETERMINATION;
   GENDER-DIFFERENCES; CUSTOMER LOYALTY; DECISION-MAKING; CONSUMER CHOICE;
   SALES PROMOTION; METHOD VARIANCE; PERCEIVED VALUE
AB A multi-disciplinary review of literature shows that products can provide three types of value to the users utilitarian, hedonic and social. Further, these values impact user outcomes such as their loyalty to the product. However, in this study we suggest that the relative impacts of these values on user loyalty to the product will vary with user needs. To test this contention we conducted a study with actual users of three software products - Producteev, Kerbal and Facebook. The results of the study confirm that user needs selectively moderate the impact of the various values provided by the software product to the users on their loyalty for the software product. These findings have implications for software product managers. They highlight the relevance of developing software products aligned with the profile of the targeted users to maximize their loyalty to the software product and the importance of the hitherto unexplored SV in the context of software products.
C1 [Kakar, Adarsh Kumar] Alabama State Univ, Dept Comp Informat Syst, Coll Business Adm, Jackson St, Montgomery, AL 36104 USA.
C3 Alabama State University
RP Kakar, AK (corresponding author), Alabama State Univ, Dept Comp Informat Syst, Coll Business Adm, Jackson St, Montgomery, AL 36104 USA.
EM akakar@alasu.edu
CR Aarts H, 1998, J APPL SOC PSYCHOL, V28, P1355, DOI 10.1111/j.1559-1816.1998.tb01681.x
   Acker D., 2009, FUNCTIONAL BENEFITS, P15
   Aiken L.S., 1991, MULTIPLE REGRESSION
   AMABILE TM, 1982, J PERS SOC PSYCHOL, V43, P997, DOI 10.1037/0022-3514.43.5.997
   [Anonymous], 1975, INTRINSIC MOTIVATION, DOI [10.1007/978-1-4613-4446-9_3, DOI 10.1007/978-1-4613-4446-9_3]
   [Anonymous], 1971, Psychological Types
   [Anonymous], 1994, BUS WEEK
   Arnold MJ, 2003, J RETAILING, V79, P77, DOI 10.1016/S0022-4359(03)00007-1
   BABIN BJ, 1994, J CONSUM RES, V20, P644, DOI 10.1086/209376
   Bagozzi RP, 2007, J ASSOC INF SYST, V8, P243
   Batra R., 1990, MARKET LETT, V2, P159, DOI [DOI 10.1007/BF00436035, 10.1007/BF00436035]
   BAUMEISTER RF, 1995, PSYCHOL BULL, V117, P497, DOI 10.1037/0033-2909.117.3.497
   BELK RW, 1988, J CONSUM RES, V15, P139, DOI 10.1086/209154
   BLOCH PH, 1995, J MARKETING, V59, P16, DOI 10.2307/1252116
   Casaló L, 2008, COMPUT HUM BEHAV, V24, P325, DOI 10.1016/j.chb.2007.01.017
   Casaló LV, 2008, INT J BANK MARK, V26, P399, DOI 10.1108/02652320810902433
   Chandon P, 2000, J MARKETING, V64, P65, DOI 10.1509/jmkg.64.4.65.18071
   Chang T.Z., 1994, ACAD MARKETING SCI J, V22, P16, DOI DOI 10.1177/0092070394221002
   Chaplin LN, 2005, J CONSUM RES, V32, P119, DOI 10.1086/426622
   Chau PYK, 1998, INFORM MANAGE, V33, P225, DOI 10.1016/S0378-7206(98)00031-7
   Chernev A, 2004, J CONSUM RES, V31, P249, DOI 10.1086/422105
   Chirkov VI, 2005, J CROSS CULT PSYCHOL, V36, P423, DOI 10.1177/0022022105275960
   Chitturi R, 2007, J MARKETING RES, V44, P702, DOI 10.1509/jmkr.44.4.702
   COHEN J, 1978, PSYCHOL BULL, V85, P858, DOI 10.1037/0033-2909.85.4.858
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   CORTINA JM, 1993, J MANAGE, V19, P915, DOI 10.1177/014920639301900411
   Cronin J., 1997, JOURNAI SERVICING MA, V11, P375, DOI [https://doi.org/10.1108/08876049710187482, DOI 10.1108/08876049710187482]
   Cummins RA., 2000, P 2 INT C QUALITY LI, P74
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DAVIS FD, 1992, J APPL SOC PSYCHOL, V22, P1111, DOI 10.1111/j.1559-1816.1992.tb00945.x
   Dawson JF, 2006, J APPL PSYCHOL, V91, P917, DOI 10.1037/0021-9010.91.4.917
   Deci E.L., 1985, INTRINSIC MOTIVATION, DOI [10.1007/978-1-4899-2271-7, DOI 10.1007/978-1-4899-2271-7]
   Deci E.L., 1972, M E PSYCHOL ASS
   DECI EL, 1987, J PERS SOC PSYCHOL, V53, P1024, DOI 10.1037/0022-3514.53.6.1024
   Deci EL, 2000, PSYCHOL INQ, V11, P227, DOI 10.1207/S15327965PLI1104_01
   Deci EL, 2001, PERS SOC PSYCHOL B, V27, P930, DOI 10.1177/0146167201278002
   Dhar R, 2000, J MARKETING RES, V37, P60, DOI 10.1509/jmkr.37.1.60.18718
   Diefenbach S., 2014, P 2014 C DESIGNING I, P305, DOI DOI 10.1145/2598510.2598549
   Diefenbach S, 2011, INTERACT COMPUT, V23, P461, DOI 10.1016/j.intcom.2011.07.002
   Diefenbach S, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1419
   DUNLAP WP, 1987, PSYCHOL BULL, V102, P418, DOI 10.1037/0033-2909.102.3.418
   Elliot M., 1997, FOSTROENDET MEDIERNA
   EMERSON RM, 1962, AM SOCIOL REV, V27, P31, DOI 10.2307/2089716
   EVANS MG, 1985, ORGAN BEHAV HUM DEC, V36, P305, DOI 10.1016/0749-5978(85)90002-0
   FISHER CD, 1978, ORGAN BEHAV HUM PERF, V21, P273, DOI 10.1016/0030-5073(78)90054-5
   Fombrun, 2001, BLACKWELL HDB STRATE, P289
   Freud S., 1920, The standard edition of the complete psychological works of Sigmund Freud, V18, P1920
   Gale B., 1994, MANAGING CUSTOMER VA
   Gefen D, 1997, MIS QUART, V21, P389, DOI 10.2307/249720
   Gefen D., 2003, Journal of End User Computing, V15, P1, DOI 10.4018/joeuc.2003070101
   Gerow JE, 2013, EUR J INFORM SYST, V22, P360, DOI 10.1057/ejis.2012.25
   Gremler DwayneD., 1996, QUIS5 ADV SERVICE QU, P171
   Hallowell R, 1996, INT J SERV IND MANAG, V7, P27, DOI 10.1108/09564239610129931
   HARACKIEWICZ JM, 1984, J PERS SOC PSYCHOL, V47, P287, DOI 10.1037/0022-3514.47.2.287
   Hassenzahl M., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P201, DOI 10.1145/332040.332432
   Higgins ET, 1997, AM PSYCHOL, V52, P1280, DOI 10.1037/0003-066X.52.12.1280
   Higgins ET, 2001, HANDBOOK OF AFFECT AND SOCIAL COGNITION, P186
   HOLBROOK MB, 1982, J CONSUM RES, V9, P132, DOI 10.1086/208906
   HOLBROOK MB, 1994, ADV CONSUM RES, V21, P566
   Hsee CK, 2003, J BEHAV DECIS MAKING, V16, P257, DOI 10.1002/bdm.445
   KELLER KL, 1993, J MARKETING, V57, P1, DOI 10.2307/1252054
   Kelman H.C., 1974, PERSPECTIVES SOCIAL, P125, DOI DOI 10.4324/9781315129693-6
   Kivetz R, 2002, J CONSUM RES, V29, P199, DOI 10.1086/341571
   Kleine SusanS., 2004, Academy of Marketing Science Review, V1, P1
   Law ELC, 2010, INTERACT COMPUT, V22, P313, DOI 10.1016/j.intcom.2010.04.006
   Lindgaard G, 2006, BEHAV INFORM TECHNOL, V25, P115, DOI 10.1080/01449290500330448
   MANO H, 1993, J CONSUM RES, V20, P451, DOI 10.1086/209361
   Maslow A. H., 1954, MOTIVATION PERSONALI
   McDougall W., 1908, INTRO SOCIAL PSYCHOL
   Mikulincer M, 2005, PERS RELATIONSHIP, V12, P149, DOI 10.1111/j.1350-4126.2005.00108.x
   Murray HA., 1938, EXPLORATIONS PERSONA
   Nix GA, 1999, J EXP SOC PSYCHOL, V35, P266, DOI 10.1006/jesp.1999.1382
   Norman D. A., 1998, The Invisible Computer: Why Good Products Fail, the Personal Computer is So Complex, and Information Appliances are the Solution
   Ogertschnig M., 2004, P BLED
   Okada EM, 2005, J MARKETING RES, V42, P43, DOI 10.1509/jmkr.42.1.43.56889
   Oliver RL, 1999, J MARKETING, V63, P33, DOI 10.2307/1252099
   Ouellette JA, 1998, PSYCHOL BULL, V124, P54, DOI 10.1037/0033-2909.124.1.54
   Park C.W., 2007, SEOUL NATL J, V12, P3
   PARK CW, 1986, J MARKETING, V50, P135, DOI 10.2307/1251291
   Reis HT, 2000, PERS SOC PSYCHOL B, V26, P419, DOI 10.1177/0146167200266002
   Richer S., 2000, NEED RELATEDNE UNPUB
   Richer SF, 2002, J APPL SOC PSYCHOL, V32, P2089, DOI 10.1111/j.1559-1816.2002.tb02065.x
   Rintamäki T, 2006, INT J RETAIL DISTRIB, V34, P6, DOI 10.1108/09590550610642792
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Schmitt Bernd., 1997, MARKETING AESTHETICS
   SCHMITT N, 1994, J ORGAN BEHAV, V15, P393, DOI 10.1002/job.4030150504
   Sharma R, 2009, MIS QUART, V33, P473
   Sheldon KM, 2001, J PERS SOC PSYCHOL, V80, P325, DOI 10.1037/0022-3514.80.2.325
   SHETH JN, 1991, J BUS RES, V22, P159, DOI 10.1016/0148-2963(91)90050-8
   Sirdeshmukh D, 2002, J MARKETING, V66, P15, DOI 10.1509/jmkg.66.1.15.18449
   Sirohi N, 1998, J RETAILING, V74, P223, DOI 10.1016/S0022-4359(99)80094-3
   SOLOMON MR, 1983, J CONSUM RES, V10, P319, DOI 10.1086/208971
   Stelmaszewska H., 2004, Living and Working with Technology, P83
   STONE EF, 1989, J APPL PSYCHOL, V74, P3, DOI 10.1037/0021-9010.74.1.3
   Strahilevitz M, 1998, J CONSUM RES, V24, P434, DOI 10.1086/209519
   Sweeney JC, 2001, J RETAILING, V77, P203, DOI 10.1016/S0022-4359(01)00041-0
   Sweeney JC, 1999, J RETAILING, V75, P77, DOI 10.1016/S0022-4359(99)80005-0
   Tajfel H., 1979, The social psychology of intergroup relations, P33
   Tractinsky N, 2000, INTERACT COMPUT, V13, P127, DOI 10.1016/S0953-5438(00)00031-X
   Tractinsky N., 2000, P CHI 97
   Valacich JS, 2007, COMMUN ACM, V50, P84, DOI 10.1145/1284621.1284624
   van der Heijden H, 2004, MIS QUART, V28, P695, DOI 10.2307/25148660
   van Schaik P, 2003, COMPUT HUM BEHAV, V19, P553, DOI 10.1016/S0747-5632(03)00004-9
   Venkatesh V, 1999, MIS QUART, V23, P239, DOI 10.2307/249753
   Venkatesh V, 2000, ORGAN BEHAV HUM DEC, V83, P33, DOI 10.1006/obhd.2000.2896
   Veryzer RW, 1995, ADV CONSUM RES, V22, P641
   Vlasic G, 2011, MANAG-J CONTEMP MANA, V16, P87
   Wakefield KL, 1996, J RETAILING, V72, P409, DOI 10.1016/S0022-4359(96)90021-4
   Werth L, 2007, EUR J SOC PSYCHOL, V37, P33, DOI 10.1002/ejsp.343
   Woodruff RB, 1997, J ACAD MARKET SCI, V25, P139, DOI 10.1007/BF02894350
   Wu J., 2013, J ASSOC INF SYST, V14, P1
   Yang ZL, 2004, PSYCHOL MARKET, V21, P799, DOI 10.1002/mar.20030
NR 112
TC 4
Z9 4
U1 1
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 135
EP 145
DI 10.1016/j.infsof.2018.01.007
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GA0MR
UT WOS:000428008600010
DA 2024-07-18
ER

PT J
AU Horcas, JM
   Pinto, M
   Fuentes, L
AF Horcas, Jose-Miguel
   Pinto, Monica
   Fuentes, Lidia
TI Variability models for generating efficient configurations of functional
   quality attributes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Energy efficiency; Energy consumption; Quality attributes; Performance;
   Sustainability; Software product line; Variability
ID SOFTWARE; USABILITY
AB Context: Quality attributes play a critical role in the architecture elicitation phase. Software Sustainability and energy efficiency is becoming a critical quality attribute that can be used as a selection criteria to choose from among different design or implementation alternatives. Energy efficiency usually competes with other nonfunctional requirements, like for instance, performance.
   Objective: This paper presents a process that helps developers to automatically generate optimum configurations of functional quality attributes in terms of energy efficiency and performance. Functional quality attributes refer to the behavioral properties that need to be incorporated inside a software architecture to fulfill a particular quality attribute (e.g., encryption and authentication for the security quality attribute, logging for the usability quality attribute).
   Method: Quality attributes are characterized to identify their design and implementation variants and how the different configurations influence both energy efficiency and performance. A usage model for each characterized quality attribute is defined. The variability of quality attributes, as well as the energy efficiency and performance experiment results, are represented as a constraint satisfaction problem with the goal of formally reasoning about it. Then, a configuration of the selected functional quality attributes is automatically generated, which is optimum with respect to a selected objective function.
   Results: Software developers can improve the energy efficiency and/or performance of their applications by using our approach to perform a richer analysis of the energy consumption and performance of different alternatives for functional quality attributes. We show quantitative values of the benefits of using our approach and discuss the threats to validity.
   Conclusions: The process presented in this paper will help software developers to build more energy efficient software, whilst also being aware of how their decisions affect other quality attributes, such as performance.
C1 [Horcas, Jose-Miguel; Pinto, Monica; Fuentes, Lidia] Univ Malaga, CAOSD Grp, Andalucia Tech, Malaga, Spain.
C3 Universidad de Malaga
RP Horcas, JM (corresponding author), Univ Malaga, CAOSD Grp, Andalucia Tech, Malaga, Spain.
EM horcas@lcc.uma.es; pinto@lcc.uma.es; lff@lcc.uma.es
RI Pinto, Monica/G-1891-2015; Horcas Aguilera, José Miguel/R-3564-2018;
   Fuentes, Lidia/M-5580-2014
OI Pinto, Monica/0000-0002-5376-742X; Horcas Aguilera, José
   Miguel/0000-0002-7771-0575; Fuentes, Lidia/0000-0002-5677-7156
FU project Magic (FEDER funds) [P12-TIC1814]; project HADAS (FEDER funds)
   [TIN2015-64841-R]
FX This work is supported by the projects Magic P12-TIC1814 and HADAS
   TIN2015-64841-R (co-financed by FEDER funds).
CR Alashqar AM, 2016, INTERNATIONAL CONFERENCE ON INFORMATICS AND SYSTEMS (INFOS 2016), P298, DOI 10.1145/2908446.2908447
   [Anonymous], 2014, CEUR WORKSHOP
   Ayala I, 2017, J AMB INTEL SMART EN, V9, P129, DOI 10.3233/AIS-160413
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Chen LP, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2012.174
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Eckhardt J, 2016, PROC INT CONF SOFTW, P832, DOI 10.1145/2884781.2884788
   Feitosa D, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1851
   Grosskop K, 2013, ADV COMPUT, V88, P199, DOI 10.1016/B978-0-12-407725-6.00005-8
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Horcas JM, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P32, DOI 10.1145/3109729.3109749
   Horcas JM, 2016, J SYST SOFTWARE, V112, P78, DOI 10.1016/j.jss.2015.11.005
   Jagroep E, 2017, COMPUTING, V99, P553, DOI 10.1007/s00607-016-0502-0
   Kalaitzoglou G., 2014, ICT4S
   Kim D, 2017, INT J DISTRIB SENS N, V13, DOI 10.1177/1550147716682738
   Martens A, 2011, EMPIR SOFTW ENG, V16, P587, DOI 10.1007/s10664-010-9142-8
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Munoz D. J., 2017, DEV ECON, P1, DOI [10.1109/ES2DE.2017.8015334, DOI 10.1109/ES2DE.2017.8015334]
   Panach JI, 2015, INFORM SOFTWARE TECH, V58, P338, DOI 10.1016/j.infsof.2014.07.002
   Pascual GG, 2015, J SYST SOFTWARE, V103, P392, DOI 10.1016/j.jss.2014.12.041
   Pinciroli F, 2016, PROCEDIA COMPUT SCI, V83, P970, DOI 10.1016/j.procs.2016.04.194
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reinhartz-Berger I., 2014, COMPREHENDING FEATUR, P501
   Rodríguez FD, 2015, INT J SOFTW ENG KNOW, V25, P727, DOI 10.1142/S0218194015500084
   Rouillé E, 2012, ASIA PAC SOFWR ENG, P148, DOI 10.1109/APSEC.2012.82
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Savola RM, 2013, COMPUT SECUR, V37, P78, DOI 10.1016/j.cose.2013.05.002
   Schöttle M, 2016, COMPANION PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY COMPANION'16), P184, DOI 10.1145/2892664.2892697
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Stier C, 2015, LECT NOTES COMPUT SC, V9278, P221, DOI 10.1007/978-3-319-23727-5_18
   Tomazzoli C, 2017, J AMB INTEL SMART EN, V9, P345, DOI 10.3233/AIS-170434
   Trubiani C., 2013, P 9 INT ACM SIGS C Q, P69
   Tsang E., 2014, Foundations of Constraint Satisfaction: The Classic Text
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhuang Y., 2017, COMPUT SECUR
NR 38
TC 17
Z9 17
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2018
VL 95
BP 147
EP 164
DI 10.1016/j.infsof.2017.10.018
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FX4EZ
UT WOS:000426026800011
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU de Souza, HA
   Mutti, D
   Chaim, ML
   Kon, F
AF de Souza, Higor A.
   Mutti, Danilo
   Chaim, Marcos L.
   Kon, Fabio
TI Contextualizing spectrum-based fault localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Spectrum-based fault localization; Automated debugging; Contextual
   information; Method-level spectrum; Code structure
ID PROGRAMS
AB Context Fault localization is among the most expensive tasks in software development. Spectrum-based fault localization (SFL) techniques seek to pinpoint faulty program elements (e.g., statements), by sorting them only by their suspiciousness scores. Developers tend to fall back on another debugging strategy if they do not find the bug in the first positions of a suspiciousness list.
   Objective: In this study, we assess techniques to contextualize code inspection whose goal is two-fold: to provide guidance during fault localization, and to improve the effectiveness of SFL techniques in classifying bugs within the first picks. Code Hierarchy (CH) and Integration Coverage-based Debugging (ICD) techniques provide a search roadmap-a list of methods-that guide the developer toward faults. CH assigns a method with the highest suspiciousness score of its blocks, and ICD captures method call relationships from testing to establish the roadmap. Two new filtering strategies-Fixed Budget (FB) and Level Score (LS)-are combined with ICD and CH for reducing the amount of blocks to inspect in each method.
   Method: We evaluated the effectiveness of ICD, CH, FB, LS, and a suspiciousness block list (BL) on 62 bugs from 7 real programs.
   Results: ICD and CH using FB found more faults inspecting less blocks than BL with statistical significance. More than 50% of the faults were found inspecting at most 10 blocks using ICD-FB and CH-FB. Moreover, ICD and CH located 70% of the faults by inspecting, at most, 4 methods.
   Conclusions: These results suggest that the contextualization provided by roadmaps and filtering strategies is useful for guiding developers toward faults and improves the performance of SFL techniques.
C1 [de Souza, Higor A.; Kon, Fabio] Univ Sao Paulo, Dept Comp Sci, Inst Math & Stat, BR-05508090 Sao Paulo, SP, Brazil.
   [Mutti, Danilo; Chaim, Marcos L.] Univ Sao Paulo, Sch Arts Sci & Humanities, Rua Arlindo Bettio 1000, BR-03828000 Sao Paulo, SP, Brazil.
C3 Universidade de Sao Paulo; Universidade de Sao Paulo
RP de Souza, HA (corresponding author), Univ Sao Paulo, Dept Comp Sci, Inst Math & Stat, BR-05508090 Sao Paulo, SP, Brazil.
EM hamario@ime.usp.br; dmutti@gmail.com; chaim@usp.br; kon@ime.usp.br
RI de Souza, Higor Amario/AAP-6787-2020; Amario de Souza,
   Higor/JDD-7814-2023; Kon, Fabio/H-2743-2012; Chaim, Marcos/K-4711-2016
OI de Souza, Higor Amario/0000-0003-4233-5987; Amario de Souza,
   Higor/0000-0003-4233-5987; Kon, Fabio/0000-0003-3888-7340; Chaim,
   Marcos/0000-0001-7157-5141
FU Sao Paulo Research Foundation (FAPESP) [2013/24992-2, 2014/23030-5];
   Research Nucleus on Open Source Software (NAPSoL) of the University of
   Sao Paulo; Fundacao de Amparo a Pesquisa do Estado de Sao Paulo (FAPESP)
   [14/23030-5] Funding Source: FAPESP
FX The authors acknowledge the support granted by the Sao Paulo Research
   Foundation (FAPESP), processes 2013/24992-2 and 2014/23030-5, and by the
   Research Nucleus on Open Source Software (NAPSoL) of the University of
   Sao Paulo.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   [Anonymous], P ACM SIGSOFT 20 INT
   [Anonymous], IADIS APPL COMPUTING
   [Anonymous], 2017, APACHE COMMONS MATH
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], THESIS
   [Anonymous], THESIS
   Burger Martin., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P221, DOI DOI 10.1145/2001420.2001447
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cheng H, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141
   DAgostino R., 2017, Goodness-of-fit-techniques
   Dallmeier V, 2005, LECT NOTES COMPUT SC, V3586, P528
   de Souza HA, 2013, IEEE INT CONF AUTOM, P628, DOI 10.1109/ASE.2013.6693124
   Debroy V, 2013, SOFTWARE PRACT EXPER, V43, P989, DOI 10.1002/spe.1146
   DiGiuseppe N, 2015, EMPIR SOFTW ENG, V20, P928, DOI 10.1007/s10664-014-9304-1
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2001, PROC IEEE INT CONF S, P170, DOI 10.1109/ICSM.2001.972727
   Gouveia C., 2013, 1st Working Conference on Software Visualization, VISSOFT, P1, DOI DOI 10.1109/VISSOFT.2013.6650539
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   Hwa-You Hsu, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P439, DOI 10.1109/ASE.2008.68
   Jiang Lingxiao., 2007, International Conference on Automated Software Engineering, P184
   Jones J A., 2007, Debugging in parallel, P16
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Lemos OAL, 2009, SCI COMPUT PROGRAM, V74, P861, DOI 10.1016/j.scico.2009.05.001
   Le Tien-Duy B., 2013, 2013 IEEE International Conference on Software Maintenance (ICSM), P380, DOI 10.1109/ICSM.2013.52
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Le TDB, 2015, EMPIR SOFTW ENG, V20, P1237, DOI 10.1007/s10664-014-9349-1
   Li XY, 2016, LECT NOTES COMPUT SC, V10028, P82, DOI 10.1007/978-3-319-49052-6_6
   Ma CY, 2014, INT CONF QUAL SOFTW, P315, DOI 10.1109/QSIC.2014.24
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Musco V, 2016, IEEE INT WORK C SO, P97, DOI 10.1109/SCAM.2016.24
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Shapiro EY., 1983, Algorithmic Program Debugging
   Shu G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P124, DOI 10.1109/ICST.2013.31
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xiaoyuan Xie, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P385, DOI 10.1109/QSIC.2010.45
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xuemei Liu, 2010, 2010 Seventh International Conference on Fuzzy Systems and Knowledge Discovery (FSKD 2010), P2815, DOI 10.1109/FSKD.2010.5569241
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
NR 51
TC 12
Z9 13
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 245
EP 261
DI 10.1016/j.infsof.2017.10.014
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000014
DA 2024-07-18
ER

PT J
AU Mensah, S
   Keung, J
   Bosu, MF
   Bennin, KE
AF Mensah, Solomon
   Keung, Jacky
   Bosu, Michael Franklin
   Bennin, Kwabena Ebo
TI Duplex output software effort estimation model with self-guided
   interpretation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Duplex output; Effort estimation; Effort classification; Multiple
   regression models
ID EFFORT PREDICTION; MOVING WINDOWS; ROBUST REGRESSION; REGULARIZATION;
   ALGORITHM; SELECTION; NETWORK
AB Context Software effort estimation (SEE) plays a key role in predicting the effort needed to complete software development task. However, the conclusion instability across learners has affected the implementation of SEE models. This instability can be attributed to the lack of an effort classification benchmark that software researchers and practitioners can use to facilitate and interpret prediction results.
   Objective: To ameliorate the conclusion instability challenge by introducing a classification and self-guided interpretation scheme for SEE.
   Method: We first used the density quantile function to discretise the effort recorded in 14 datasets into three classes (high, low and moderate) and built regression models for these datasets. The results of the regression models were an effort estimate, termed output I, which was then classified into an effort class, termed output 2. We refer to the models generated in this study as duplex output models as they return two outputs. The introduced duplex output models trained with the leave-one-out cross validation and evaluated with MAE, BMMRE and adjusted R-2, can be used to predict both the software effort and the class of software effort estimate. Robust statistical tests (Welch's t-test and Kruskal-Wallis H-test) were used to examine the statistical significant differences in the models' prediction performances.
   Results: We observed the following; (1) the duplex output models not only predicted the effort estimates, they also offered a guide to interpreting the effort expended; (2) incorporating the genetic search algorithm into the duplex output model allowed the sampling of relevant features for improved prediction accuracy; and (3) ElasticNet, a hybrid regression, provided superior prediction accuracy over the ATLM, the state-of-the-art baseline regression.
   Conclusion: The results show that the duplex output model provides a self-guided benchmark for interpreting estimated software effort. ElasticNet can also serve as a baseline model for SEE.
C1 [Mensah, Solomon; Keung, Jacky; Bennin, Kwabena Ebo] Ay Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Bosu, Michael Franklin] Wintec, Ctr Business Informat Technol & Entelprise, Hamilton, New Zealand.
C3 Waikato Institute of Technology
RP Mensah, S (corresponding author), Ay Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
EM smensah2-e@my.cityu.edu.hk; Jacky.Keung@cityu.edu.bk;
   michael.bosu@wintec.ac.nz; kebennin2-c@my.cityu.edu.hk
RI Keung, Jacky/ABA-7089-2020; Keung, Jacky/X-4693-2019
OI Keung, Jacky/0000-0002-3803-9600; Bennin, Kwabena/0000-0001-9140-9271
FU Research Grants Council of Hong Kong [11208017]; City University of Hong
   Kong [7004683, 7004474]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong KongNo. 11208017, and the research funds
   of City University of Hong Kong (No. 7004683 and 7004474).
CR Amasaki S, 2015, J SOFTW-EVOL PROC, V27, P488, DOI 10.1002/smr.1672
   [Anonymous], 2017, P INT C SOFTW ENG
   [Anonymous], 2016, EMPIR SOFTW ENG, DOI DOI 10.1007/S10664-014-9354-4
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 9 INT C PRED MOD SOF
   [Anonymous], P 20 INT C EV ASS SO
   [Anonymous], 2015, IEEE T IMAGE PROCESS, DOI DOI 10.1109/TIP.2015.2487833
   [Anonymous], P 17 INT C EV ASS SO
   [Anonymous], P 5 INT C PRED MOD S
   [Anonymous], 2016, The promise repository of empirical software engineering data. north carolina state university, department of computer science
   Arabali A, 2013, IEEE T POWER DELIVER, V28, P162, DOI 10.1109/TPWRD.2012.2219598
   Azhar Damir, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P173, DOI 10.1109/ESEM.2013.25
   Bardsiri VK, 2014, EMPIR SOFTW ENG, V19, P857, DOI 10.1007/s10664-013-9241-4
   Bermejo P, 2012, KNOWL-BASED SYST, V25, P35, DOI 10.1016/j.knosys.2011.01.015
   Bertolazzi P, 2016, EUR J OPER RES, V250, P389, DOI 10.1016/j.ejor.2015.09.051
   Bosu MF, 2013, IEEE AUS SOFT ENGR, P97, DOI 10.1109/ASWEC.2013.21
   Chen FH, 2016, SOFT COMPUT, V20, P1945, DOI 10.1007/s00500-015-1616-6
   CHEN Z, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   EUBANK RL, 1981, ANN STAT, V9, P494, DOI 10.1214/aos/1176345454
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Friedman J, 2010, J STAT SOFTW, V33, P1, DOI 10.18637/jss.v033.i01
   Gütlein M, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, P332, DOI 10.1109/CIDM.2009.4938668
   Hansen EA, 2001, ARTIF INTELL, V129, P35, DOI 10.1016/S0004-3702(01)00106-0
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   HOERL AE, 1970, TECHNOMETRICS, V12, P55, DOI 10.1080/00401706.1970.10488634
   HOLLAND PW, 1977, COMMUN STAT A-THEOR, V6, P813, DOI 10.1080/03610927708827533
   Huang JL, 2015, INFORM SOFTWARE TECH, V67, P108, DOI 10.1016/j.infsof.2015.07.004
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham Barbara., 2015, Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering, P1
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2013, EMPIR SOFTW ENG, V18, P1, DOI 10.1007/s10664-011-9189-1
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Li Q, 2016, IEEE T IMAGE PROCESS, V25, P3801, DOI 10.1109/TIP.2016.2577382
   Liu H., 1996, P 13 INT C MACHINE L, P319
   Lokan C, 2017, EMPIR SOFTW ENG, V22, P716, DOI 10.1007/s10664-016-9446-4
   Lokan C, 2014, INFORM SOFTWARE TECH, V56, P1063, DOI 10.1016/j.infsof.2014.02.008
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   MacFarland T.W., 2016, Introduction to Nonparametric Statistics for the Biological Sciences Using R, P177, DOI [DOI 10.1007/978-3-319-30634-6_6, 10.1007/978-3-319-30634-66, DOI 10.1007/978-3-319-30634-66]
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   Mair C., 2005, WORKSHOP PREDICTOR M, P1, DOI [10.1145/1083165.1083166, DOI 10.1145/1083165.1083166]
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   Mensah S., 2016, PROC INT C SOFTW ENG, P527
   Mensah S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P340, DOI 10.1109/QRS.2017.44
   Menzies T., 2016, Empirical Software Engineering, P1
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Morrison DR, 2014, EUR J OPER RES, V236, P403, DOI 10.1016/j.ejor.2013.11.033
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Phannachitta P, 2017, EMPIR SOFTW ENG, V22, P474, DOI 10.1007/s10664-016-9434-8
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Seo YS, 2013, EMPIR SOFTW ENG, V18, P659, DOI 10.1007/s10664-012-9207-y
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Singh PK, 2017, INT J MACH LEARN CYB, V8, P179, DOI 10.1007/s13042-014-0313-6
   Tibshirani R, 2011, J R STAT SOC B, V73, P273, DOI 10.1111/j.1467-9868.2011.00771.x
   Tran TP, 2014, BMC SYST BIOL, V8, DOI 10.1186/1752-0509-8-74
   Turhan B, 2014, EUROMICRO CONF PROC, P285, DOI 10.1109/SEAA.2014.41
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Willmott CJ, 2005, CLIMATE RES, V30, P79, DOI 10.3354/cr030079
   Zou H, 2005, J R STAT SOC B, V67, P301, DOI 10.1111/j.1467-9868.2005.00503.x
NR 75
TC 20
Z9 20
U1 1
U2 13
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2018
VL 94
BP 1
EP 13
DI 10.1016/j.infsof.2017.09.010
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FO6WE
UT WOS:000417009000001
DA 2024-07-18
ER

PT J
AU Franco, EF
   Hirama, K
   Carvalho, MM
AF Franco, Eduardo Ferreira
   Hirama, Kechi
   Carvalho, Marly M.
TI Applying system dynamics approach in software and information system
   projects: A mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mapping study; System dynamics; Software; Information systems;
   Complexity
ID PROCESS SIMULATION-MODEL; CRITICAL SUCCESS FACTORS; MANAGEMENT
   EDUCATION; STRATEGIC-MANAGEMENT; LEARNING EFFECTIVENESS; REPLICATED
   EXPERIMENT; SCHEDULE ESTIMATION; EVOLUTION PROCESSES; ERP
   IMPLEMENTATION; RISK-MANAGEMENT
AB Context: Software and information system are everywhere and the projects involving them are becoming more complex. However, these projects performance patterns are not showing improvement or convergence over time. Additionally, there is a growing interest in modeling the complexities involved in such projects for evaluating long-term impacts, especially the dynamic dimension.
   Objective: This study aims to analyze how the system dynamics approach has been used in the scientific literature to model complexity in software and information system projects.
   Method: The research approach used was a mapping study that combined bibliometrics and content analysis to draw the scenario of the research literature related to software and information system projects, identifying patterns, evolution trends, and research gaps.
   Results: The results show the focus of the studies analyzed regarding the step of policy design and evaluation in the modeling process (46%), besides investigating software development projects (34%). This study also reveals that the most employed tools are simulations (78%) and the causal loop diagram (61%), but only 37% presented model equations. As for the software and information system projects success dimension, system quality has prevailed (73%).
   Conclusion: The mapping showed that there is a gap of studies exploring the implementation and post implementation phases of software and information systems. Few studies explored the social components; the majority of the studies focused on technical aspects and did not report the complete steps of system dynamics modeling development process. This lack of information hinders the reproduction of past results for expanding and developing new studies. (c) 2017 Elsevier B.V. All rights reserved.
C1 [Franco, Eduardo Ferreira; Hirama, Kechi] Univ Sao Paulo, Dept Comp Engn, Av Prof Almeida Prado 158,Travessa 3,Cidade Univ, BR-05508010 Sao Paulo, SP, Brazil.
   [Carvalho, Marly M.] Univ Sao Paulo, Dept Prod Engn, Av Prof Almeida Prado 128,Travessa 2,Cidade Univ, BR-05508900 Sao Paulo, SP, Brazil.
C3 Universidade de Sao Paulo; Universidade de Sao Paulo
RP Franco, EF (corresponding author), Univ Sao Paulo, Dept Comp Engn, Av Prof Almeida Prado 158,Travessa 3,Cidade Univ, BR-05508010 Sao Paulo, SP, Brazil.
EM eduardo.franco@usp.br; kechi.hirama@usp.br; marlymc@usp.br
RI Carvalho, Marly M./D-8297-2012
OI Carvalho, Marly M./0000-0003-0119-5316; Franco,
   Eduardo/0000-0001-5713-0090
FU Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior (CAPES -
   Coordination for the Improvement of Higher Education Personnel);
   Conselho Nacional de Pesquisa e Desenvolvimento (CNPq - Brazilian
   National Council of Scientific and Technological Development)
FX We thank the Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior
   (CAPES - Coordination for the Improvement of Higher Education Personnel)
   and the Conselho Nacional de Pesquisa e Desenvolvimento (CNPq -
   Brazilian National Council of Scientific and Technological Development)
   for granting research fellowships.
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   Abdel-Hamid T.K., 1984, DYNAMICS SOFTWARE DE
   Abdel-Hamid T. K., 1982, 6 INT COMP SOFTW APP
   Abdel-Hamid TK, 1999, MIS QUART, V23, P531, DOI 10.2307/249488
   ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   ABDELHAMID TK, 1990, IEEE SOFTWARE, V7, P97, DOI 10.1109/52.43055
   ABDELHAMID TK, 1990, J SYST SOFTWARE, V13, P71, DOI 10.1016/0164-1212(90)90035-K
   ABDELHAMID TK, 1987, INFORM MANAGE, V13, P1, DOI 10.1016/0378-7206(87)90025-5
   ABDELHAMID TK, 1986, IEEE SOFTWARE, V3, P70, DOI 10.1109/MS.1986.234072
   ABDELHAMID TK, 1989, IEEE T SOFTWARE ENG, V15, P109, DOI 10.1109/32.21738
   ABDELHAMID TK, 1988, MIS QUART, V12, P395, DOI 10.2307/249206
   ABDELHAMID TK, 1993, J SYST SOFTWARE, V22, P151, DOI 10.1016/0164-1212(93)90107-9
   ABDELHAMID TK, 1988, J SYST SOFTWARE, V8, P319, DOI 10.1016/0164-1212(88)90015-5
   Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   Ahsan K, 2010, INT J PROJ MANAG, V28, P68, DOI 10.1016/j.ijproman.2009.03.005
   Akkermans H, 2002, EUR J INFORM SYST, V11, P35, DOI 10.1057/palgrave/ejis/3000418
   [Anonymous], 1971, Principles of systems
   [Anonymous], 1975, MYTHICAL MAN MONTH E
   [Anonymous], 2009, Science of Science (Sci2) Tool
   Atkinson R., 1999, International Journal of Project Management, V17, P337, DOI [DOI 10.1016/S0263-7863(98)00069-6, 10.1016/S0263-7863(98)00069-6]
   Bakhshi J, 2016, INT J PROJ MANAG, V34, P1199, DOI 10.1016/j.ijproman.2016.06.002
   Barros MD, 2004, J SYST SOFTWARE, V70, P21, DOI 10.1016/S0164-1212(02)00155-3
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Boehm BW., 1981, Software Engineering Economics
   Bordetsky A, 2000, INFORM SYST RES, V11, P366, DOI 10.1287/isre.11.4.366.11871
   Borner Katy., 2014, VISUAL INSIGHTS PRAC
   Bosch-Rekveldt M, 2011, INT J PROJ MANAG, V29, P728, DOI 10.1016/j.ijproman.2010.07.008
   Brynjolfsson E., 2002, BROOKINGS PAP ECO AC, P137
   Carnevalli JA, 2008, INT J PROD ECON, V114, P737, DOI 10.1016/j.ijpe.2008.03.006
   Carvalho MM, 2013, TECHNOL FORECAST SOC, V80, P1418, DOI 10.1016/j.techfore.2012.11.008
   Carvalho MM, 2017, INT J PROJ MANAG, V35, P1120, DOI 10.1016/j.ijproman.2017.02.018
   Cecez-Kecmanovic D, 2014, MIS QUART, V38, P561, DOI 10.25300/MISQ/2014/38.2.11
   Choi J, 2010, J MANAGE INFORM SYST, V26, P253, DOI 10.2753/MIS0742-1222260409
   Choi K, 2009, INFORM SOFTWARE TECH, V51, P162, DOI 10.1016/j.infsof.2008.03.001
   Collofello JS, 2000, IEEE T EDUC, V43, P389, DOI 10.1109/13.883347
   Dalcher D, 2003, TECHNOL ANAL STRATEG, V15, P421, DOI 10.1080/095373203000136024
   Davis K, 2014, INT J PROJ MANAG, V32, P189, DOI 10.1016/j.ijproman.2013.02.006
   de Carvalho MM, 2015, INT J PROD RES, V53, P321, DOI 10.1080/00207543.2014.919423
   Dedrick J, 2011, J INF TECHNOL-UK, V26, P1, DOI 10.1057/jit.2009.23
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Duriau VJ, 2007, ORGAN RES METHODS, V10, P5, DOI 10.1177/1094428106289252
   Dutta A, 2005, J MANAGE INFORM SYST, V22, P15, DOI 10.1080/07421222.2005.11045850
   Dutta A, 2014, INFORM MANAGE-AMSTER, V51, P762, DOI 10.1016/j.im.2014.05.005
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Eveleens JL, 2010, IEEE SOFTWARE, V27, P30, DOI 10.1109/MS.2009.154
   Ferreira S, 2009, J SYST SOFTWARE, V82, P1568, DOI 10.1016/j.jss.2009.03.014
   Fink A., 2003, How to Sample in Surveys, DOI 10.4135/9781412984478
   Forrester J. W., 1969, Urban Dynamics
   Forrester JW, 1961, Industrial dynamics
   Forrester JW., 1980, TIMS Stud Manag Sci, V14, P209
   Forrester JW., 1971, World dynamics
   Fryling M, 2010, ENTERP INF SYST-UK, V4, P391, DOI 10.1080/17517575.2010.519785
   Garud R, 2005, MIS QUART, V29, P9
   Georgantzas NC, 2008, SYST DYNAM REV, V24, P247, DOI 10.1002/sdr.420
   Geraldi J. G., 2010, NOW LETS MAKE IT REA, DOI [10.1108/01443571111165848, DOI 10.1108/01443571111165848]
   GRAHAM AK, 1992, EUR J OPER RES, V59, P151, DOI 10.1016/0377-2217(92)90012-X
   Hong KK, 2002, INFORM MANAGE-AMSTER, V40, P25, DOI 10.1016/S0378-7206(01)00134-3
   Houston DX, 2001, J SYST SOFTWARE, V59, P247, DOI 10.1016/S0164-1212(01)00066-8
   IKPAAHINDI L, 1985, LIBRI, V35, P163
   Johnson SB, 2013, INT J PROJ MANAG, V31, P670, DOI 10.1016/j.ijproman.2013.01.006
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Kahen G, 2001, J SYST SOFTWARE, V59, P271, DOI 10.1016/S0164-1212(01)00068-1
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Lehman MM, 1999, J SYST SOFTWARE, V46, P123, DOI 10.1016/S0164-1212(99)00006-0
   Lehman MM, 2002, J SOFTW MAINT EVOL-R, V14, P335, DOI 10.1002/smr.259
   Lin CY, 1997, J SYST SOFTWARE, V38, P263, DOI 10.1016/S0164-1212(96)00156-2
   LIN CY, 1989, IEEE T SOFTWARE ENG, V15, P1025, DOI 10.1109/32.31362
   Luna-Reyes LF, 2005, EUR J INFORM SYST, V14, P93, DOI 10.1057/palgrave.ejis.3000524
   Luna-Reyes LF, 2008, SYST DYNAM REV, V24, P265, DOI 10.1002/sdr.404
   Lyneis JM, 2007, SYST DYNAM REV, V23, P157, DOI 10.1002/sdr.377
   Lyneis JM, 2001, SYST DYNAM REV, V17, P237, DOI 10.1002/sdr.213
   Madachy R.J., 1994, SOFTWARE PROJECT DYN
   Martens ML, 2017, INT J PROJ MANAG, V35, P1084, DOI 10.1016/j.ijproman.2016.04.004
   Martin R, 2001, J SYST SOFTWARE, V59, P237, DOI 10.1016/S0164-1212(01)00065-6
   Martinsons M, 1999, DECIS SUPPORT SYST, V25, P71, DOI 10.1016/S0167-9236(98)00086-4
   Matalonga S, 2014, SOFTWARE QUAL J, V22, P593, DOI 10.1007/s11219-013-9214-2
   Maylor HR, 2013, RES TECHNOL MANAGE, V56, P45, DOI 10.5437/08956308X5602125
   McCray GE, 1999, SYST DYNAM REV, V15, P345, DOI 10.1002/(SICI)1099-1727(199924)15:4<345::AID-SDR177>3.0.CO;2-Z
   McLeod L, 2012, EUR J INFORM SYST, V21, P176, DOI 10.1057/ejis.2011.43
   Mir FA, 2014, INT J PROJ MANAG, V32, P202, DOI 10.1016/j.ijproman.2013.05.012
   MORECROFT JDW, 1988, EUR J OPER RES, V35, P301, DOI 10.1016/0377-2217(88)90221-4
   Muller Ralf, 2007, European Management Journal, V25, P298, DOI 10.1016/j.emj.2007.06.003
   Müller R, 2012, INT J MANAG PROJ BUS, V5, P757, DOI 10.1108/17538371211269040
   Orlikowski WJ, 1991, INFORM SYST RES, V2, P143, DOI 10.1287/isre.2.2.143
   Pfahl D, 2000, INFORM SOFTWARE TECH, V42, P1001, DOI 10.1016/S0950-5849(00)00152-X
   Pfahl D, 2003, EMPIR SOFTW ENG, V8, P367, DOI 10.1023/A:1025320418915
   Pfahl D, 2004, INFORM SOFTWARE TECH, V46, P127, DOI 10.1016/S0950-5849(03)00115-0
   Pfahl D, 2001, J SYST SOFTWARE, V59, P283, DOI 10.1016/S0164-1212(01)00069-3
   Pfahl D, 1999, J SYST SOFTWARE, V46, P135, DOI 10.1016/S0164-1212(99)00007-2
   PMI P. M. I., 2013, PMIS PULS PROF IN DE
   Powell A, 1999, J SYST SOFTWARE, V46, P151, DOI 10.1016/S0164-1212(99)00008-4
   Prasad S, 2005, INFORM MANAGE-AMSTER, V42, P1137, DOI 10.1016/j.im.2005.01.003
   Rahmandad H, 2012, SYST DYNAM REV, V28, P396, DOI 10.1002/sdr.1481
   Rahmandad H, 2010, SYST DYNAM REV, V26, P291, DOI 10.1002/sdr.435
   Rahmandad H, 2009, SYST DYNAM REV, V25, P224, DOI 10.1002/sdr.425
   Ramos-Rodríguez AR, 2004, STRATEGIC MANAGE J, V25, P981, DOI 10.1002/smj.397
   Remus U, 2012, INFORM SYST MANAGE, V29, P188, DOI 10.1080/10580530.2012.687309
   Richardson G., 1981, INTRO SYSTEM DYNAMIC
   Roberts EdwardBaer., 1964, The dynamics of research and development, V1st
   Robinson S, 2002, SIMUL MODEL PRACT TH, V10, P513, DOI 10.1016/S1569-190X(02)00117-X
   Rodrigues AG, 1998, J OPER RES SOC, V49, P2, DOI 10.2307/3010647
   Rodrigues AG, 1997, EUR J INFORM SYST, V6, P51, DOI 10.1057/palgrave.ejis.3000256
   Rodríguez D, 2006, IEEE T EDUC, V49, P451, DOI 10.1109/TE.2006.882367
   Royal Academy of Engineering, 2004, CHALL COMPL IT PROJ
   Ruiz M, 2004, LECT NOTES COMPUT SC, V3009, P568
   Ruiz M, 2001, J SYST SOFTWARE, V59, P299, DOI 10.1016/S0164-1212(01)00070-X
   Rus I, 1999, J SYST SOFTWARE, V46, P173, DOI 10.1016/S0164-1212(99)00010-2
   Sage D, 2014, INT J PROJ MANAG, V32, P544, DOI 10.1016/j.ijproman.2013.08.005
   Seddon P. B., 2002, Data Base for Advances in Information Systems, V33, P11
   SENGUPTA K, 1993, MANAGE SCI, V39, P411, DOI 10.1287/mnsc.39.4.411
   Sengupta K, 1999, IEEE T SYST MAN CY A, V29, P77, DOI 10.1109/3468.736362
   Sengupta K, 1996, IEEE T SYST MAN CY A, V26, P177, DOI 10.1109/3468.485744
   Shenhar AJ, 2001, LONG RANGE PLANN, V34, P699, DOI 10.1016/S0024-6301(01)00097-8
   Sommerville I, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2209249.2209268
   Stallinger F, 2001, J SYST SOFTWARE, V59, P311, DOI 10.1016/S0164-1212(01)00071-1
   Stantchev V, 2013, COMPUT HUM BEHAV, V29, P473, DOI 10.1016/j.chb.2012.06.003
   Sterman JD, 2001, CALIF MANAGE REV, V43, P8, DOI 10.2307/41166098
   Sterman JohnD., 2000, BUSINESS DYNAMICS
   Tvedt J.D., 1996, An extensible model for evaluating the impact of process improvements on software development cycle time
   Vidal LA, 2008, KYBERNETES, V37, P1094, DOI 10.1108/03684920810884928
   WAESELYNCK H, 1994, SOFTWARE-CONC TOOL, V15, P162
   Wernick P, 1999, J SYST SOFTWARE, V46, P193, DOI 10.1016/S0164-1212(99)00012-6
   White AS, 2011, INT J PROJ MANAG, V29, P696, DOI 10.1016/j.ijproman.2010.07.009
   White AS, 2013, KYBERNETES, V42, P423, DOI 10.1108/03684921311323671
   Wiederhold G, 2006, COMMUN ACM, V49, P65, DOI 10.1145/1151030.1151031
   Williford J, 1999, J SYST SOFTWARE, V46, P203, DOI 10.1016/S0164-1212(99)00013-8
   Young R, 2013, INT J PROJ MANAG, V31, P943, DOI 10.1016/j.ijproman.2012.11.013
   Zhang H, 2010, LECT NOTES COMPUT SC, V6195, P309, DOI 10.1007/978-3-642-14347-2_27
NR 130
TC 29
Z9 36
U1 1
U2 45
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2018
VL 93
BP 58
EP 73
DI 10.1016/j.infsof.2017.08.013
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FM3BC
UT WOS:000414878200005
DA 2024-07-18
ER

PT J
AU Sehra, SK
   Brar, YS
   Kaur, N
   Sehra, SS
AF Sehra, Sumeet Kaur
   Brar, Yadwinder Singh
   Kaur, Navdeep
   Sehra, Sukhjit Singh
TI Research patterns and trends in software effort estimation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software effort estimation; Latent Dirichlet allocation; Research trends
ID FUNCTIONAL SIZE MEASUREMENT; DEVELOPMENT WORK-EFFORT; COST ESTIMATION
   MODELS; EFFORT PREDICTION; EXPERT JUDGMENT; MISSING DATA;
   EMPIRICAL-EVALUATION; GENETIC ALGORITHM; LINEAR-REGRESSION;
   FEATURE-SELECTION
AB Context: Software effort estimation (SEE) is most crucial activity in the field of software engineering. Vast research has been conducted in SEE resulting into a tremendous increase in literature. Thus it is of utmost importance to identify the core research areas and trends in SEE which may lead the researchers to understand and discern the research patterns in large literature dataset.
   Objective: To identify unobserved research patterns through natural language processing from a large set of research articles on SEE published during the period 1996 to 2016.
   Method: A generative statistical method, called Latent Dirichlet Allocation (LDA), applied on a literature dataset of 1178 articles published on SEE.
   Results: As many as twelve core research areas and sixty research trends have been revealed; and the identified research trends have been semantically mapped to associate core research areas.
   Conclusions: This study summarises the research trends in SEE based upon a corpus of 1178 articles. The patterns and trends identified through this research can help in finding the potential research areas. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Sehra, Sumeet Kaur; Brar, Yadwinder Singh] IKG Punjab Tech Univ, Jalandhar, Punjab, India.
   [Sehra, Sumeet Kaur; Sehra, Sukhjit Singh] Guru Nanak Dev Engn Coll, Ludhiana, Punjab, India.
   [Kaur, Navdeep] Sri Guru Granth Sahib World Univ, Fatehgarh Sahib, Punjab, India.
C3 I. K. Gujral Punjab Technical University; Guru Nanak Dev Engineering
   College Ludhiana
RP Sehra, SK (corresponding author), IKG Punjab Tech Univ, Jalandhar, Punjab, India.; Sehra, SK (corresponding author), Guru Nanak Dev Engn Coll, Ludhiana, Punjab, India.
EM sumeetksehra@gmail.com
RI Sehra, Sumeet Kaur/H-5088-2015; Brar, Yadwinder Singh/AAY-5966-2021;
   Sehra, Sukhjit Singh/G-7298-2015
OI Sehra, Sukhjit Singh/0000-0001-9058-7869; Sehra, Sumeet
   Kaur/0000-0002-6321-7464; Kaur, Navdeep/0000-0003-4583-1687; Brar,
   Yadwinder/0000-0002-3462-7333
CR Abdullah NAS, 2014, IEEE CONF OPEN SYST, P42, DOI 10.1109/ICOS.2014.7042407
   Abran Alain, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P64, DOI 10.1109/IWSM.Mensura.2014.48
   Abran A, 1999, PROC IEEE SOFTW ENGN, P230, DOI 10.1109/SESS.1999.766599
   Abualkishik AZ, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P150, DOI 10.1109/IWSM-MENSURA.2012.31
   Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   Ahmed MA, 2005, INFORM SOFTWARE TECH, V47, P31, DOI 10.1016/j.infsof.2004.05.004
   Ahmed MA, 2009, INFORM SOFTWARE TECH, V51, P640, DOI 10.1016/j.infsof.2008.09.004
   Ahn Y, 2003, J SOFTW MAINT EVOL-R, V15, P71, DOI 10.1002/smr.269
   Ahonen JJ, 2015, J SYST SOFTWARE, V109, P205, DOI 10.1016/j.jss.2015.08.008
   Ajeh DE, 2014, 2014 14TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA), P74, DOI 10.1109/ICCSA.2014.24
   Akca AA, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P226, DOI 10.1109/IWSM-MENSURA.2012.40
   Akingbehin Kiumi, 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P749, DOI 10.1109/ICIS.2010.158
   Al Yahya M, 2010, INT ARAB J INF TECHN, V7, P129
   Algabri M, 2015, 2015 5TH NATIONAL SYMPOSIUM ON INFORMATION TECHNOLOGY: TOWARDS NEW SMART WORLD (NSITNSW)
   Alghamdi R, 2015, INT J ADV COMPUT SC, V6, P147
   Alves LM, 2014, 2014 14TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND ITS APPLICATIONS (ICCSA), P27, DOI 10.1109/ICCSA.2014.17
   Alwidian J., 2012, INT C INF TECHN E SE, P1, DOI [10.1109/ICITeS.2012.6216623, DOI 10.1109/ICITES.2012.6216623]
   Amasaki S, 2015, J SOFTW-EVOL PROC, V27, P488, DOI 10.1002/smr.1672
   Amasaki S., 2016, INT C EV ASS SOFTW E, P40, DOI 10.1145/2915970.2915983
   Amasaki S., EVALUATION WEIGHTED, P214, DOI [10.1007/978-3-642-39259-7_18, DOI 10.1007/978-3-642-39259-7_18]
   Amasaki S., LECT NOTES COMPUTER, V8892, P63, DOI [10.1007/978-3-319-13835-0_5, DOI 10.1007/978-3-319-13835-0_5]
   Amasaki S, 2014, INT WORKSH EMPIR ENG, P1, DOI 10.1109/IWESEP.2014.10
   Amasaki S, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P98, DOI 10.1109/IWSM-Mensura.2013.24
   Amazal Fatima Azzahra, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P247, DOI 10.1109/APSEC.2014.46
   Amazal Fatima-Azzahra, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P252, DOI 10.1109/IWSM.Mensura.2014.31
   Amazal FA, 2014, INT J COMPUT INTELL, V13, DOI 10.1142/S1469026814500138
   Anandhi V, 2014, 2014 INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTING APPLICATIONS (ICICA 2014), P353, DOI 10.1109/ICICA.2014.79
   [Anonymous], ADV SOFTWARE ENG
   [Anonymous], 2013, P 9 INT C PRED MOD S, DOI DOI 10.1145/2499393.2499394
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 11 IEEE INT SOFTW ME
   [Anonymous], 2009, ARTIF INTELL
   [Anonymous], P INT C INF KNOWL MA
   Antonelli L, 2014, INT REQUIR ENG CONF, P263, DOI 10.1109/RE.2014.6912268
   Aranha E, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P67, DOI 10.1109/TAIC.PART.2007.29
   Araújo RD, 2011, 2011 INTERNATIONAL JOINT CONFERENCE ON NEURAL NETWORKS (IJCNN), P588, DOI 10.1109/IJCNN.2011.6033274
   Araújo RD, 2011, EXPERT SYST APPL, V38, P4162, DOI 10.1016/j.eswa.2010.09.078
   Araújo RD, 2009, PROC INT C TOOLS ART, P630, DOI 10.1109/ICTAI.2009.39
   Aroba J, 2008, J SYST SOFTWARE, V81, P1944, DOI 10.1016/j.jss.2008.01.016
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Attarzadeh I., 2009, INT J COMPUTER THEOR, V1, P1793, DOI DOI 10.7763/IJCTE.2009.V1.77
   Auer M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P147
   Azhar Damir, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P173, DOI 10.1109/ESEM.2013.25
   Azzeh M, 2016, APPL SOFT COMPUT, V49, P981, DOI 10.1016/j.asoc.2016.05.008
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Azzeh M, 2012, EMPIR SOFTW ENG, V17, P90, DOI 10.1007/s10664-011-9176-6
   Badri M, 2015, PROCEDIA COMPUT SCI, V62, P529, DOI 10.1016/j.procs.2015.08.528
   Baldassarre MT, 2003, PROC IEEE INT CONF S, P105, DOI 10.1109/ICSM.2003.1235411
   Banitaan S., 2015, INT J SOFTWARE ENG I, V9, P43, DOI [10.14257/ijseia.2015.9.5.05, DOI 10.14257/IJSEIA.2015.9.5.05]
   Barabino G, 2015, J SOFTW-EVOL PROC, V27, P603, DOI 10.1002/smr.1715
   Bardsiri VK, 2015, INNOV SYST SOFTW ENG, V11, P25, DOI 10.1007/s11334-014-0242-2
   Basten D, 2011, INT SYMP EMP SOFTWAR, P235, DOI 10.1109/ESEM.2011.32
   Benediktsson O, 2003, SOFTWARE QUAL J, V11, P265, DOI 10.1023/A:1025809010217
   Bird Steven., 2016, Natural Language Toolkit (version 3.2.1)
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm B, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1057, DOI 10.1145/1985793.1985994
   Bone M. A., 2011, INCOSE INT S DENV US, V21, P114, DOI [10.1002/j.2334-5837.2011.tb01189.x, DOI 10.1002/J.2334-5837.2011.TB01189.X]
   Boulton R., 2006, PYSTEMMER
   Bozhikova V., 2010, P 11 INT C COMP SYST, P119
   Bradford RogerB., 2008, Proceedings of the 17th ACM Conference on Information and Knowledge Management, CIKM '08, P153, DOI DOI 10.1145/1458082.1458105
   Braga PL, 2007, PROC INT C TOOLS ART, P181, DOI 10.1109/ICTAI.2007.172
   Braga PL, 2007, IEEE IJCNN, P1595, DOI 10.1109/IJCNN.2007.4371196
   Braga PL, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1788
   Briand LC, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P260, DOI 10.1109/METRIC.2001.915534
   Britto R, 2014, INT CONF GLOBAL SOFT, P135, DOI 10.1109/ICGSE.2014.11
   Bruckhaus T, 1996, IEEE SOFTWARE, V13, P29, DOI 10.1109/52.536456
   Buchmann I, 2011, EUR CON SFTWR MTNCE, P313, DOI 10.1109/CSMR.2011.45
   Buglione L., IMPACT BASE FUNCTION, P75, DOI [10.1007/978-3-540-69566-0_9, DOI 10.1007/978-3-540-69566-0_9]
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Burnett R, 1997, XVII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P21, DOI 10.1109/SCCC.1997.636852
   Bute K., 2012, INF SOFTW TECHNOL, V54, P985, DOI [10.1016/j.infsof.2012.03.002, DOI 10.1016/J.INFSOF.2012.03.002]
   Campbell J.C., 2015, ART SCI ANAL SOFTW D, V3, P139, DOI [10.1016/B978-0-12-411519-4.00006-9, DOI 10.1016/B978-0-12-411519-4.00006-9]
   Cannon H., 2015, IEEE AER C BIG SKY U, P1, DOI [10.1109/AERO.2015.7119109, DOI 10.1109/AERO.2015.7119109]
   Cao J, 2009, NEUROCOMPUTING, V72, P1775, DOI 10.1016/j.neucom.2008.06.011
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Chalotra S., 2015, INT J SCI TECHNOL EN, V2, P123, DOI 10.17148fijarcce.2015.4363
   CHALOTRA S, 2015, INDIAN J SCI TECHNOL, V8, pNI227
   Chan TZ, 1996, IEEE T SOFTWARE ENG, V22, P580, DOI 10.1109/32.536958
   Chavoya A., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P174, DOI 10.1109/ITNG.2011.37
   Chin-Yu Huang, 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P62, DOI 10.1109/ISSRE.1999.809311
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Chung EY, 2001, ISSS'01: 14TH INTERNATIONAL SYMPOSIUM ON SYSTEM SYNTHESIS, P153, DOI 10.1109/ISSS.2001.957931
   Chwif L, 2010, WINT SIMUL C PROC, P1774, DOI 10.1109/WSC.2010.5678891
   Clark B., 2001, SOFTW ENG S PITTSB P
   Clark B. K., 1996, IEEE AER APPL C MANH, V3, P347, DOI [10.1109/AER0.1996.496074, DOI 10.1109/AER0.1996.496074]
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A, 2011, EMPIR SOFTW ENG, V16, P211, DOI 10.1007/s10664-010-9138-4
   Corona E, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P15, DOI 10.1109/IWSM-MENSURA.2012.12
   Cuadrado-Gallego Juan J., 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P729, DOI 10.1109/ICIS.2010.12
   Cuadrado-Gallego JJ, 2006, J SYST SOFTWARE, V79, P353, DOI 10.1016/j.jss.2005.04.040
   Cuadrado-Gallego JJ, 2006, SOFTWARE QUAL J, V14, P339, DOI 10.1007/s11219-006-0039-0
   Dagnino A, 2003, IEEE SYS MAN CYBERN, P3792
   Daneva M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P240, DOI 10.1109/SEAA.2008.46
   Dave V. S., 2011, 2011 2nd International Conference on Computer and Communication Technology, P347, DOI 10.1109/ICCCT.2011.6075192
   Dave V. S., 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI [10.1145/2020976.2020982, DOI 10.1145/2020976.2020982]
   Davidrajuh R, 2013, 2013 8TH EUROSIM CONGRESS ON MODELLING AND SIMULATION (EUROSIM), P378, DOI 10.1109/EUROSIM.2013.72
   de A Araujo R., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P160, DOI 10.1109/ICTAI.2010.30
   de Freitas M, 2015, IEEE T ENG MANAGE, V62, P495, DOI 10.1109/TEM.2015.2453354
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Del Bianco V. D., 2005, 11 IEEE INT SOFTW ME, P10, DOI DOI 10.1109/METRICS.2005.9
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   Dhavachelvan P., 2005, 2 IND INT C ART INT, P2045, DOI [10.1109/ICISIP.2005.1529476, DOI 10.1109/ICISIP.2005.1529476]
   Diab H, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P312, DOI 10.1109/AICCSA.2001.934002
   Dighe S., HUMAN CTR SOFTWARE E, P19, DOI [10.1007/978-3-662-44811-3_2, DOI 10.1007/978-3-662-44811-3_2]
   Du W. L., 2015, GLOB J COMPUT SCI TE, V10, P51
   El Bajta M, 2015, ENASE 2015 - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P197
   Erdogmus Hakan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P446
   Escolar S., 2013, PRACTICE EXPERIENCE, V43, P333, DOI [10.1002/spe.2114, DOI 10.1002/SPE.2114]
   Evanco WM, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P114, DOI 10.1109/CSMR.2001.914975
   Evangelopoulos N, 2012, EUR J INFORM SYST, V21, P70, DOI 10.1057/ejis.2010.61
   Ezghari S, 2014, 2014 SECOND WORLD CONFERENCE ON COMPLEX SYSTEMS (WCCS), P492, DOI 10.1109/ICoCS.2014.7060958
   Ferchichi A, 2006, 2006 IMACS: MULTICONFERENCE ON COMPUTATIONAL ENGINEERING IN SYSTEMS APPLICATIONS, VOLS 1 AND 2, P1181
   Fernández-Diego M, 2014, INFORM SOFTWARE TECH, V56, P527, DOI 10.1016/j.infsof.2014.01.003
   Fernández-Diego M, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P132, DOI 10.1109/IWSM-MENSURA.2012.28
   Fetcke T, 1998, TOOLS 23 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P192, DOI 10.1109/TOOLS.1997.654721
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Gaisler J., 2004, Proceedings. 10th IEEE Pacific Rim International Symposium on Dependable Computing
   Gao Jerry, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P103
   Garre M., LECT NOTES COMPUTER, V4224, P849, DOI [10.1007/11875581_102, DOI 10.1007/11875581_102]
   Gharehchopogh FS, 2015, I C APPL INF COMM TE, P113, DOI 10.1109/ICAICT.2015.7338528
   Ghose M.K., 2011, 2011 2 NAT C EM TREN, P1, DOI DOI 10.1109/NCETACS.2011.5751391
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Gonzalez-Ladron-de-Guevara F., 2014, P 8 ACMIEEE INT S EM, P1
   González-Ladrón-de-Guevara F, 2016, J SYST SOFTWARE, V113, P188, DOI 10.1016/j.jss.2015.11.040
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   Grimstad S, 2009, IET SOFTW, V3, P435, DOI 10.1049/iet-sen.2008.0110
   Grinistad S, 2007, J SYST SOFTWARE, V80, P1770, DOI 10.1016/j.jss.2007.03.001
   Grottke M, 2012, PROC INT SYMP SOFTW, P259, DOI 10.1109/ISSREW.2012.84
   Grottke M, 2009, P INT COMP SOFTW APP, P180, DOI 10.1109/COMPSAC.2009.195
   Gu SK, 2015, WIRES DATA MIN KNOWL, V5, P234, DOI 10.1002/widm.1158
   Gupta R, 2014, 2014 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1967, DOI 10.1109/ICACCI.2014.6968649
   Hao Wang, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P587, DOI 10.1109/CSSE.2008.1178
   He W, 2014, BRIT J EDUC TECHNOL, V45, P595, DOI 10.1111/bjet.12043
   Heiat A, 1997, J SYST SOFTWARE, V39, P7, DOI 10.1016/S0164-1212(96)00159-8
   Henrich A., REPOSITORY BASED SOF, P653, DOI [10.1007/BFb0022073, DOI 10.1007/BFB0022073]
   Hihn J, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P140, DOI 10.1109/METRIC.2004.1357898
   Hilderman V, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P114, DOI 10.1109/ISSREW.2014.118
   Hooi TC, 2008, 8TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY WORKSHOPS: CIT WORKSHOPS 2008, PROCEEDINGS, P116, DOI 10.1109/CIT.2008.Workshops.48
   Hoppe M, 2007, SYSTEMS ENG, V10, P323, DOI 10.1002/sys.20082
   Hsu CJ, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P534, DOI 10.1109/ASPEC.2007.62
   Hsu CJ, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON MANAGEMENT OF INNOVATION AND TECHNOLOGY, VOLS 1 AND 2, PROCEEDINGS, P663
   Hsu CJ, 2011, SOFTWARE QUAL J, V19, P165, DOI 10.1007/s11219-010-9110-y
   Hu Q, 1997, IEEE T SOFTWARE ENG, V23, P379, DOI 10.1109/32.601078
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Huang X, 2007, APPL SOFT COMPUT, V7, P29, DOI 10.1016/j.asoc.2005.06.007
   Hughes R., ESTIMATING SEGMENTIN, P207, DOI [10.1016/B978-0-12-396463-2,00007-7, DOI 10.1016/B978-0-12-396463-2,00007-7]
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Hurtado N, 2015, INFORM SOFTWARE TECH, V57, P509, DOI 10.1016/j.infsof.2014.06.001
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   Idri A, 2002, PROCEEDINGS OF THE 2002 IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOL 1 & 2, P1162, DOI 10.1109/FUZZ.2002.1006668
   Idri Ali, 2007, Innovations'07. 4th International Conference on Innovations in Information Technology, P576
   Idri A., 2008, 3 INT C INF COMM TEC, P1, DOI [10.1109/IC1TA.2008A530015, DOI 10.1109/IC1TA.2008A530015]
   Idri A., LECT NOTES COMPUTER, V4895, P21, DOI [10.1007/978-3-540-85553-8_2, DOI 10.1007/978-3-540-85553-8_2]
   Idri A, 2006, INFORM COMMUNICATION, V2, P1612, DOI DOI 10.1109/ICTTA.2006A.1684625
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Idri A, 2016, J SYST SOFTWARE, V117, P595, DOI 10.1016/j.jss.2016.04.058
   Idri A, 2016, INT J INTELL SYST, V31, P128, DOI 10.1002/int.21748
   Idri A, 2015, INFORM SOFTWARE TECH, V58, P206, DOI 10.1016/j.infsof.2014.07.013
   Idri A, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P207, DOI 10.1109/CIDM.2013.6597238
   Inoue S, 2013, IEEE SYS MAN CYBERN, P621, DOI 10.1109/SMC.2013.111
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Issa A, 2006, 2006 2 INT C INF COM, P2766, DOI DOI 10.1109/IMA.2006.1684849
   JabRef Development Team, 2016, JABREF VERS
   Jalali O., 2007, 3 INT WORKSH PRED MO, P7, DOI [10.1109/PROMISE.2007.3, DOI 10.1109/PROMISE.2007.3]
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jin YQ, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 2, PROCEEDINGS, P437, DOI 10.1109/WCSE.2009.268
   Jing XY, 2016, PROC INT CONF SOFTW, P607, DOI 10.1145/2884781.2884827
   Jingzhou Li, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P126
   Johnson L. F., 1999, Engineering Solutions for the Next Millennium. 1999 IEEE Canadian Conference on Electrical and Computer Engineering (Cat. No.99TH8411), P273, DOI 10.1109/CCECE.1999.807208
   Jones C, 1996, COMPUTER, V29, P95, DOI 10.1109/2.481498
   Jones C, 1996, COMPUTER, V29, P103, DOI 10.1109/2.494092
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P953, DOI 10.1109/TSE.2004.92
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Jorgensen M, 2005, INT CONF ELECTR COMM, P280, DOI 10.1109/CONIEL.2005.58
   Jorgensen M, 2005, IEEE SOFTWARE, V22, P57, DOI 10.1109/MS.2005.73
   Jorgensen Magne, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P216, DOI 10.1049/ic.2012.0028
   Jorgensen M, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P134, DOI 10.1109/QSIC.2003.1319095
   Jorgensen M, 2003, J SYST SOFTWARE, V68, P253, DOI 10.1016/S0164-1212(03)00066-9
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M., EXPERT ESTIMATION SO, P489, DOI [10.1002/0470871822.ch25, DOI 10.1002/0470871822.CH25]
   Jorgensen M, 2015, 2015 9 INT C SOFTWAR, P1, DOI [10.1109/SKIMA.2015.7399992, DOI 10.1109/SKIMA.2015.7399992]
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2011, INFORM SOFTWARE TECH, V53, P1382, DOI 10.1016/j.infsof.2011.07.001
   Jorgensen M, 2010, J SYST SOFTWARE, V83, P1039, DOI 10.1016/j.jss.2009.12.028
   Jorgensen M, 2010, J SYST SOFTWARE, V83, P29, DOI 10.1016/j.jss.2009.03.076
   Jorgensen M, 2009, IEEE SOFTWARE, V26, P14, DOI 10.1109/MS.2009.47
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Jun Liu, 2014, Grey Systems: Theory and Application, V4, P3, DOI 10.1108/GS-08-2013-0016
   Kamei Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P312
   Kang D, 2011, SOFTWARE PRACT EXPER, V41, P551, DOI 10.1002/spe.1030
   Kassab M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P411, DOI 10.1109/SEAA.2008.58
   Kaur T, 2014, 2014 5TH INTERNATIONAL CONFERENCE CONFLUENCE THE NEXT GENERATION INFORMATION TECHNOLOGY SUMMIT (CONFLUENCE), P736, DOI 10.1109/CONFLUENCE.2014.6949281
   Kaushik A, 2015, INT J COMPUT APPL T, V52, P292
   Keung J, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P52, DOI 10.1109/ASWEC.2004.1290457
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P222, DOI 10.1109/ASPEC.2007.42
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   Kitchenham B., 2006, P 10 INT C EV ASS SO, P81
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E., 2012, P INT C PRED MOD SOF, P89
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kocaguneli E, 2013, EMPIR SOFTW ENG, V18, P1, DOI 10.1007/s10664-011-9189-1
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Koch S, 2009, DECIS SUPPORT SYST, V46, P895, DOI 10.1016/j.dss.2008.12.002
   Kothari J, 2007, INT C PROGRAM COMPRE, P17
   Kula RG, 2012, ASIA PAC SOFWR ENG, P50, DOI 10.1109/APSEC.2012.105
   Kultur Y, 2009, KNOWL-BASED SYST, V22, P395, DOI 10.1016/j.knosys.2009.05.001
   Kurtz T, 2002, 26TH ANNUAL NASA GODDARD SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P55, DOI 10.1109/SEW.2001.992655
   Kushwaha DS., 2008, ACM SIGSOFT Software Engineering Notes, V33, P1, DOI DOI 10.1145/1360602.1361211
   Kusumoto S, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P292, DOI 10.1109/METRIC.2004.1357913
   Kusumoto S, 2000, P INT COMP SOFTW APP, V24, P543, DOI 10.1109/CMPSAC.2000.884779
   Lagerström R, 2010, SOFTWARE QUAL J, V18, P437, DOI 10.1007/s11219-010-9100-0
   Lamersdorf A., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P267, DOI 10.1109/ICGSE.2010.38
   Lavazza Luigi, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P196, DOI 10.1109/IWSM.Mensura.2014.28
   Lavazza Luigi, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P206, DOI 10.1049/ic.2012.0027
   Lavazza L, 2015, INT WORKS EMERG TREN, P35, DOI 10.1109/WETSoM.2015.13
   Lavazza L, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P160, DOI 10.1109/IWSM-MENSURA.2012.32
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lee JK, 2006, EXPERT SYST APPL, V30, P190, DOI 10.1016/j.eswa.2005.06.021
   Lee WT, 2010, INT J INTELL SYST, V25, P878, DOI 10.1002/int.20443
   Lenarduzzi V, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P21, DOI 10.1145/2804381.2804385
   Li J., 2007, P 3 INT WORKSH PRED, P6
   Li JZ, 2008, INT J SOFTW ENG KNOW, V18, P1, DOI 10.1142/S0218194008003532
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li XG, 2010, 2010 INTERNATIONAL CONFERENCE ON EDUCATION AND SPORTS EDUCATION, VOL II, P97, DOI 10.1109/ICICIP.2010.5565295
   Li Y. F., 2008, 2008 14th IEEE Pacific Rim International Symposium on Dependable Computing, P176, DOI 10.1109/PRDC.2008.21
   Li YF, 2009, EXPERT SYST APPL, V36, P5921, DOI 10.1016/j.eswa.2008.07.062
   Li YF, 2010, J SYST SOFTWARE, V83, P2332, DOI 10.1016/j.jss.2010.07.032
   Li Z, 2011, EAST 2011: EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES, P18
   Lin CT, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P431
   Litoriya R, 2012, CSI 6 INT C SOFTW EN, DOI [10.1109/CONSEG.2012.6349494, DOI 10.1109/CONSEG.2012.6349494]
   Liu J, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P202, DOI 10.1109/ASEA.2008.38
   Liu Q, 2014, P INT COMP SOFTW APP, P27, DOI 10.1109/COMPSAC.2014.99
   Lohre E, 2016, J SYST SOFTWARE, V116, P49, DOI 10.1016/j.jss.2015.03.015
   Lokan C, 2009, IET SOFTW, V3, P422, DOI 10.1049/iet-sen.2008.0107
   Lokan C, 2012, ASIA PAC SOFWR ENG, P818, DOI 10.1109/APSEC.2012.74
   Lokan CJ, 2000, INFORM SOFTWARE TECH, V42, P649, DOI 10.1016/S0950-5849(00)00108-7
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Luzeaux D., CONCLUSION WHAT RETU, P355, DOI [10.1002/9781118616727.ch9, DOI 10.1002/9781118616727.CH9]
   Madheswaran M., 2014, 5 INT C COMP COMM NE, P1, DOI DOI 10.1109/ICCCNT.2014.6963021
   Magazinius A, 2012, J SYST SOFTWARE, V85, P1770, DOI 10.1016/j.jss.2012.03.026
   Mahmood MA, 1996, DECISION SCI, V27, P57, DOI 10.1111/j.1540-5915.1996.tb00843.x
   Malathi S, 2012, PROCEDIA ENGINEER, V38, P177, DOI 10.1016/j.proeng.2012.06.025
   Malathi S., EFFORT ESTIMATION SO, P1, DOI [10.1007/978-3-319-11629-7_1, DOI 10.1007/978-3-319-11629-7_1]
   Malloy BA, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P353, DOI 10.1109/ISSRE.2003.1251057
   Mandala NR, 2012, INT SYMP EMP SOFTWAR, P221, DOI 10.1145/2372251.2372291
   Mansor Z., SOFTWARE ENG COMPUTE, P210, DOI [10.1007/978-3-642-22170-5_19, DOI 10.1007/978-3-642-22170-5_19]
   Martin C. L., PATTERN RECOGN, P269, DOI [10.1007/978-3-642-21587-229, DOI 10.1007/978-3-642-21587-229]
   Mascena JCCP, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P72
   Mavridis T, 2014, ENG APPL ARTIF INTEL, V35, P114, DOI 10.1016/j.engappai.2014.06.008
   Mazhelis O, 2013, INFORM SOFTWARE TECH, V55, P690, DOI 10.1016/j.infsof.2012.10.006
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2002, P INT COMP SOFTW APP, P393, DOI 10.1109/CMPSAC.2002.1045034
   Mendes E., 2001, IEEE Multimedia, V8, P50, DOI 10.1109/93.923953
   Mendes E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P131, DOI 10.1109/METRIC.2002.1011332
   Mendes E, 2001, AUST COMP S, V23, P125, DOI 10.1109/ACSC.2001.906632
   Mendes E., 2002, P 11 INT C WORLD WID, P272
   Menzies Tim, 2009, Software Process: Improvement and Practice, V14, P213, DOI 10.1002/spip.414
   Milios D, 2013, INTELL DECIS TECHNOL, V7, P45, DOI 10.3233/IDT-120150
   Mingliang Li, 2012, Proceedings of the 2012 IEEE Symposium on Robotics and Applications (ISRA), P443, DOI 10.1109/ISRA.2012.6219220
   Minku L, 2015, 2015 ACM IEEE INT S, P1, DOI DOI 10.1109/ESEM.2015.7321199
   Minku L. L., 2011, 7 INT C PRED MOD SOF, P9, DOI [10.1145/20203902020399, DOI 10.1145/20203902020399]
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Minku LL, 2013, P 9 INT C PRED MOD S, P1, DOI DOI 10.1145/2499393.2499396
   Misic VB, 1998, J SYST SOFTWARE, V41, P133, DOI 10.1016/S0164-1212(97)10014-0
   Mislick G. K., EPILOGUE FIELD COST, P291, DOI [10.1002/9781118802342.ch17, DOI 10.1002/9781118802342.CH17]
   Mittas N., 2009, P 2 ART INT TECHN SO, P221
   Mittas N, 2012, EMPIR SOFTW ENG, V17, P34, DOI 10.1007/s10664-011-9177-5
   Mittas N, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P70
   Mittermeir R. T., FACETS SOFTWARE EVOL, P71, DOI [10.1002/0470871822.ch4, DOI 10.1002/0470871822.CH4]
   Mizuno O, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P120, DOI 10.1109/APAQS.2001.990010
   Molokken K., SOFTWARE EFFORT ESTI, P441, DOI [10.1007/3-540-44870-5_77, DOI 10.1007/3-540-44870-5_77]
   Molokken-Ostvold K, 2005, IEEE T SOFTWARE ENG, V31, P754, DOI 10.1109/TSE.2005.96
   Molokken-Ostvold K, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P208, DOI 10.1109/METRIC.2004.1357904
   Molokken-Ostvold K, 2008, J SYST SOFTWARE, V81, P2106, DOI 10.1016/j.jss.2008.03.058
   Moody JW, 1996, EXPERT SYST APPL, V10, P127, DOI 10.1016/0957-4174(95)00039-9
   Morgenshtern O, 2007, INFORM SOFTWARE TECH, V49, P827, DOI 10.1016/j.infsof.2006.09.006
   Mork P, 2014, INT CONF QUAL SOFTW, P145, DOI 10.1109/QSIC.2014.51
   Moses J, 2003, SOFTWARE QUAL J, V11, P283, DOI 10.1023/A:1025861011126
   Muzaffar Z, 2010, INFORM SOFTWARE TECH, V52, P92, DOI 10.1016/j.infsof.2009.08.001
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Nadgeri S. M., 2010, Proceedings of the Third International Conference on Emerging Trends in Engineering and Technology (ICETET 2010), P642, DOI 10.1109/ICETET.2010.22
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Nanri T., HIGH PERFORMANCE COM, P335, DOI [10.1007/BFb0024228, DOI 10.1007/BFB0024228]
   Narendra N. C., 2012, Proceedings of the 2012 Annual SRII Global Conference (SRII), P470, DOI 10.1109/SRII.2012.58
   Nassif AB, 2013, J SYST SOFTWARE, V86, P144, DOI 10.1016/j.jss.2012.07.050
   Nathanael EH, 2015, 5TH INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING AND INFORMATICS 2015, P427, DOI 10.1109/ICEEI.2015.7352539
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   Nguyen V, 2010, P 26 INT C SOFTW MAI, P1, DOI DOI 10.1109/ICSM.2010.5609554
   Nilchiani R., 2012, INCOSE INT S, V22, P1165, DOI DOI 10.1002/J.2334-5837.2012.TB01395.X
   Nolan A. J., SOFTWARE PRODUCT LIN, P121, DOI [10.1007/978-3-642-15579-63, DOI 10.1007/978-3-642-15579-63]
   Nolan AJ., 2012, INCOSE INT S, P816, DOI 10.1002/j.2334-5837.2012.tb01373.x
   O'Brien L, 2009, 2009 13TH ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE WORKSHOPS (EDOCW 2009), P254, DOI 10.1109/EDOCW.2009.5331977
   Ohlsson MC, 1998, INFORM SOFTWARE TECH, V40, P831, DOI 10.1016/S0950-5849(98)00097-4
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   John BJ, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P754, DOI 10.1109/ITNG.2013.118
   Ozkan B., SOFTWARE FUNCTIONAL, P59, DOI [10.1007/978-3-540-85936-9_6, DOI 10.1007/978-3-540-85936-9_6]
   Paithankar K, 2009, INT C COMP ELEC ENG, P436, DOI 10.1109/ICCEE.2009.216
   Palanisamy B, 2013, INT PARALL DISTRIB P, P1275, DOI 10.1109/IPDPS.2013.20
   Patel S, 2013, 2013 IEEE SECOND INTERNATIONAL CONFERENCE ON IMAGE INFORMATION PROCESSING (ICIIP), P684, DOI 10.1109/ICIIP.2013.6707682
   Pendharkar PC, 2015, EXPERT SYST APPL, V42, P9441, DOI 10.1016/j.eswa.2015.08.002
   Peters JF, 1996, FUZZ-IEEE '96 - PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOLS 1-3, P862, DOI 10.1109/FUZZY.1996.552292
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pickard L, 1999, IEEE T SOFTWARE ENG, V25, P282, DOI 10.1109/32.761451
   Pizzi NJ, 2013, INFORM SCIENCES, V241, P1, DOI 10.1016/j.ins.2013.04.027
   Ponnalagu K., 2012, 3 ANN C SYST PROGR A, P203, DOI [10.1145/2384716.2384774, DOI 10.1145/2384716.2384774]
   Popli R, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS AND COMPUTER NETWORKS (ISCON), P60, DOI 10.1109/ICISCON.2014.6965219
   Popli R, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P564, DOI 10.1109/IndiaCom.2014.6828023
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Premraj Rahul, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P393
   Putnam LH, 1997, IEEE SOFTWARE, V14, P105, DOI 10.1109/52.636696
   Qu Y, 2008, ASIA PAC SOFWR ENG, P487, DOI 10.1109/APSEC.2008.62
   Rahmandad H, 2009, SYST DYNAM REV, V25, P224, DOI 10.1002/sdr.425
   Rainer A., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P72, DOI 10.1109/METRIC.1999.809728
   Raja U, 2009, J SOFTW MAINT EVOL-R, V21, P49, DOI 10.1002/smr.398
   Ramasubbu N, 2012, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2012.6227203
   Rastogi H, 2014, 2014 5TH INTERNATIONAL CONFERENCE CONFLUENCE THE NEXT GENERATION INFORMATION TECHNOLOGY SUMMIT (CONFLUENCE), P826, DOI 10.1109/CONFLUENCE.2014.6949367
   Reddy P.V.G.D., 2010, J COMPUT, V2, P87, DOI [10.48550/arXiv.1005.4021, DOI 10.48550/ARXIV.1005.4021]
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   Reza SyedEnam., 2015, 2015 International Conference on Electrical Engineering and Information Communication Technology (ICEEICT), P1, DOI DOI 10.1109/ICEEICT.2015.7307462
   Rosenblum DS, 1997, IEEE T SOFTWARE ENG, V23, P146, DOI 10.1109/32.585502
   Ruhe M, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P30, DOI 10.1109/METRIC.2003.1232453
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Ruiz M., 2004, IEEE INT C RES INN V, V9, P81, DOI [10.1002/spip.198, DOI 10.1002/SPIP.198]
   Ruohonen J, 2015, J SOFTW-EVOL PROC, V27, P990, DOI 10.1002/smr.1755
   Ryder J, 1998, 1998 IEEE INFORMATION TECHNOLOGY CONFERENCE, PROCEEDINGS, P53, DOI 10.1109/IT.1998.713380
   Saini S., 2013, INT J RES ENG TECHNO, V2, P42
   Saliu MO, 2004, NAFIPS 2004: ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1AND 2, P16
   Seetharaman B, 2015, 5TH INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING AND INFORMATICS 2015, P400, DOI 10.1109/ICEEI.2015.7352534
   Sehra S. S., 2016, CUSTOM CSV EXPORTER
   Sentas P, 2006, J SYST SOFTWARE, V79, P404, DOI 10.1016/j.jss.2005.02.026
   Sharma A, 2014, INT J SOFTW ENG KNOW, V24, P1, DOI 10.1142/S0218194014500016
   Sharma A, 2012, PROC TECH, V4, P716, DOI 10.1016/j.protcy.2012.05.116
   Sharma T. K., 2012, INT J NAT COMPUT RES, V3, P86, DOI [10.4018/jncr.2012040105, DOI 10.4018/JNCR.2012040105]
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P987, DOI 10.1109/32.965339
   Sheta A. F., 2015, INT J NEXT GENER COM, V6
   Shmueli O, 2016, INFORM SYST J, V26, P395, DOI 10.1111/isj.12091
   Shoval P, 1997, INFORM SOFTWARE TECH, V39, P855, DOI 10.1016/S0950-5849(97)00009-8
   Sidorova N., 2008, MIS Q, DOI [10.1007/978-1-4614-7158-52, DOI 10.1007/978-1-4614-7158-52]
   Siew Huei Liew, 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P90, DOI 10.1109/CloudCom.2012.6427577
   Sigweni B., 2014, Proceedings ofthe 10th International Conference on Predictive Models in Software Engineering, P32
   Simmons K. O., 2004, ALL AC INT C 8 JORD, P47
   Smartt C, 2011, SYSTEMS ENG, V14, P255, DOI 10.1002/sys.20177
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Steyvers M., PROBABILISTIC TOPIC, P1
   Suelmann Han, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P79, DOI 10.1109/IWSM.Mensura.2014.25
   Tabachnick B. G., PRINCIPAL COMPONENTS, P612
   Tadayon N, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P815, DOI 10.1109/ITCC.2005.210
   Tanveer B., HYBRID EFFORT ESTIMA, P316, DOI [10.1007/978-3-319-33515-5.33, DOI 10.1007/978-3-319-33515-5.33]
   Tao YF, 2002, PROC INT CONF DATA, P191, DOI 10.1109/ICDE.2002.994709
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Top O. O., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P302, DOI 10.1109/IWSM-MENSURA.2011.41
   Trendowicz A., SOFTWARE ENG TECHNIQ, P232, DOI [10.1007/978-3-642-22386-0_18, DOI 10.1007/978-3-642-22386-0_18]
   Tripathi A, 2012, 2012 THIRD INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION TECHNOLOGY (ICCCT), P154, DOI 10.1109/ICCCT.2012.38
   Tsunoda M, 2012, ASIA PAC SOFWR ENG, P374, DOI 10.1109/APSEC.2012.58
   Tsunoda M, 2013, IEEE WORK CONF MIN S, P429, DOI 10.1109/MSR.2013.6624059
   Tuan Khanh Le-Do, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P503, DOI 10.1109/COMPSAC.2010.56
   Uemura T., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P62, DOI 10.1109/METRIC.1999.809727
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Uzzafer Masood, 2010, 2010 2nd IEEE International Conference on Information Management and Engineering (ICIME 2010), P578, DOI 10.1109/ICIME.2010.5478225
   Valerdi R., 2003, P INCOSE INT S HOB N P INCOSE INT S HOB N, V13, P70
   Valerdi R., TOTAL COST OWNERSHIP, P207, DOI [10.1002/9781118918937.chl1, DOI 10.1002/9781118918937.CHL1]
   Valerdi R, 2011, IEEE SYST J, V5, P91, DOI 10.1109/JSYST.2010.2065131
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P1056, DOI 10.1016/j.infsof.2006.01.001
   Verma HK, 2010, 2010 IEEE 2ND INTERNATIONAL ADVANCE COMPUTING CONFERENCE, P436, DOI 10.1109/IADCC.2010.5422889
   Vickers A, 1997, FIFTH INTERNATIONAL SYMPOSIUM ON ASSESSMENT OF SOFTWARE TOOLS AND TECHNOLOGIES, PROCEEDINGS, P95, DOI 10.1109/AST.1997.599917
   Vishal S., 2010, INT J COMPUTER SCI I, V7, P30
   Wagner H, 2015, PROJ MANAG J, V46, P62, DOI 10.1002/pmj.21523
   Wang FH, 2009, STUD COMPUT INTELL, V232, P1, DOI 10.1007/978-3-642-03187-8
   Wang G., 2014, INCOSE International Symposium, V24, P274, DOI DOI 10.1002/J.2334-5837.2014.TB03149.X
   Wang G., 2009, INCOSE INT S, P232, DOI 10.100262334-5837.20091b00947.x
   Wang G., 2013, INCOSE INT S PHIL PE, V23, P1215, DOI [10.1002/j.2334-5837.2013.tb03082.x, DOI 10.1002/J.2334-5837.2013.TB03082.X]
   Wang G, 2012, INT J COMPUT INTEG M, V25, P432, DOI 10.1080/0951192X.2010.542182
   Wang Y., 2006, 2006 CAN C EL COMP E, P2385, DOI [10.1109/CCECE.2006.277682, DOI 10.1109/CCECE.2006.277682]
   Weitzel B, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P677, DOI 10.1109/ICSM.2012.6405352
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Wen JF, 2009, ASIA PAC SOFWR ENG, P179, DOI 10.1109/APSEC.2009.40
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
   Wong J, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P51, DOI 10.1109/WOSQ.2009.5071557
   Wu DS, 2013, J SUPERCOMPUT, V64, P898, DOI 10.1007/s11227-010-0525-9
   Wu SK, 2006, 2006 IEEE International Conference on Service Operations and Logistics, and Informatics (SOLI 2006), Proceedings, P6, DOI 10.1109/SOLI.2006.328973
   Xia H, 2016, PROD OPER MANAG, V25, P56, DOI 10.1111/poms.12408
   Xue DS, 2012, PROCEEDINGS OF THE 2012 WORLD CONGRESS ON INFORMATION AND COMMUNICATION TECHNOLOGIES, P1177, DOI 10.1109/WICT.2012.6409253
   Yadav HB, 2015, INFORM SOFTWARE TECH, V63, P44, DOI 10.1016/j.infsof.2015.03.001
   Yahya M.A., 2008, Research, Innovation and Vision for the Future, P255, DOI [10.1109/RIVF.2008.4586364, DOI 10.1109/RIVF.2008.4586364]
   Yalcinkaya M, 2015, AUTOMAT CONSTR, V59, P68, DOI 10.1016/j.autcon.2015.07.012
   Yamaura T., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P322, DOI 10.1109/CMPSAC.1999.812729
   Yang D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P253
   Yang Y, 2013, INFORM SOFTWARE TECH, V55, P1496, DOI 10.1016/j.infsof.2013.03.002
   Yeoh HC, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P84
   Yokoyama Y, 1998, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.1998.671607
   ZELKOWITZ MV, 1984, COMPUTER, V17, P57, DOI 10.1109/MC.1984.1659162
   Zhang W, 2015, INFORM SOFTWARE TECH, V58, P58, DOI 10.1016/j.infsof.2014.10.005
   Zhao J, 2012, IEEE I C EMBED SOFTW, P1096, DOI 10.1109/HPCC.2012.160
   Zhao WZ, 2015, BMC BIOINFORMATICS, V16, DOI 10.1186/1471-2105-16-S13-S8
   Zheng Li, 2010, 2010 Fifth International Symposium on Service Oriented System Engineering (SOSE 2010), P47, DOI 10.1109/SOSE.2010.29
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
   Zhou NJ, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P388, DOI 10.1109/SCC.2009.79
   Zhou YM, 2014, INFORM SOFTWARE TECH, V56, P220, DOI 10.1016/j.infsof.2013.09.003
   Zhu Q., 2000, Proceedings of 16th International Conference on Data Engineering (Cat. No.00CB37073), P413, DOI 10.1109/ICDE.2000.839441
   Zhu XC, 2008, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE FOR YOUNG COMPUTER SCIENTISTS, VOLS 1-5, P1193, DOI 10.1109/ICYCS.2008.53
   Zifen Yang, 2012, Proceedings 2012 IEEE Symposium on Electrical & Electronics Engineering (EEESYM 2012), P615, DOI 10.1109/EEESym.2012.6258733
NR 420
TC 45
Z9 50
U1 2
U2 41
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2017
VL 91
BP 1
EP 21
DI 10.1016/j.infsof.2017.06.002
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FG3DV
UT WOS:000410017900001
DA 2024-07-18
ER

PT J
AU Abualkishik, AZ
   Ferrucci, F
   Gravino, C
   Lavazza, L
   Liu, G
   Meli, R
   Robiolo, G
AF Abualkishik, Abedallah Zaid
   Ferrucci, Filomena
   Gravino, Carmine
   Lavazza, Luigi
   Liu, Geng
   Meli, Roberto
   Robiolo, Gabriela
TI A study on the statistical convertibility of IFPUG Function Point,
   COSMIC Function Point and Simple Function Point
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Functional size measurement; IFPUG Function Points; COSMIC Function
   Points; Simple Function Points; Convertibility; Base Functional
   Components (BFC)
ID SIZE
AB Background Several functional size measurement methods have been proposed. A few ones-like IFPUG and COSMIC methods-are widely used, while others-like Simple Function Points method-are interesting new proposals, which promise to deliver functional size measures via a faster and cheaper measurement process.
   Objectives Since all functional size measurement methods address the measurement of the same property of software (namely, the size of functional specifications), it is expected that measures provided in a given measurement unit can be converted into a different measurement unit. In this paper, convertibility of IFPUG Function Points, COSMIC Function Points, and Simple Function Points is studied.
   Method Convertibility is analyzed statistically via regression techniques. Seven datasets, each one containing measures of a set of software applications expressed in IFPUG Function Points, COSMIC Function Points and Simple Function Points, were analyzed. The components of functional size measures (usually known as Base Functional Components) were also involved in the analysis.
   Results All the analyzed measures appear well correlated to each other. Statistically significant quantitative models were found for all the combinations of measures, for all the analyzed datasets. Several models involving Base Functional Components were found as well.
   Conclusions From a practical point of view, the paper shows that converting measures from a given functional size unit into another one is viable. The magnitude of the conversion errors is reported, so that practitioners can evaluate if the expected conversion error is acceptable for their specific purposes. From a conceptual point of view, the paper shows that Base Functional Components of a given method can be used to estimate measures expressed in a different measurement unit: this seems to imply that different functional size measurement methods are 'structurally' strongly correlated. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Abualkishik, Abedallah Zaid] Amer Univ Emirates, Dubai, U Arab Emirates.
   [Ferrucci, Filomena; Gravino, Carmine] Univ Salerno, Fisciano, SA, Italy.
   [Lavazza, Luigi] Univ Insubria, Varese, VA, Italy.
   [Liu, Geng] Hangzhou Dianzi Univ, Hangzhou, Peoples R China.
   [Meli, Roberto] DPO, Milan, Italy.
   [Robiolo, Gabriela] Univ Austral, Buenos Aires, DF, Argentina.
C3 University of Salerno; University of Insubria; Hangzhou Dianzi
   University; Austral University
RP Lavazza, L (corresponding author), Univ Insubria, Varese, VA, Italy.
EM luigi.lavazza@uninsubria.it
RI Ferrucci, Filomena/AAG-6799-2020; Lavazza, Luigi/AAF-5323-2020; Robiolo,
   Gabriela/X-9455-2019; Abualkishik, Abedallah Zaid Zaid/AAX-2698-2021
OI Ferrucci, Filomena/0000-0002-0975-8972; Robiolo,
   Gabriela/0000-0001-6865-8499; Lavazza, Luigi/0000-0002-5226-4337;
   Abualkishik, Abedallah Zaid/0000-0003-0920-6454
FU FP7 Collaborative Project S-CASE - European Commission [610717]; "Fondo
   di Ricerca d'Ateneo" of the University degli Studi dell'Insubria;
   Research Fund of Austral University
FX This work has been partly supported by the FP7 Collaborative Project
   S-CASE (Grant Agreement No. 610717), funded by the European Commission,
   the "Fondo di Ricerca d'Ateneo" of the University degli Studi
   dell'Insubria and the Research Fund of Austral University.
CR Abran A., 2011, COSMIC FUNCTION POIN
   Abualkishik A. Z., 2012 JOINT C 22 INT
   Abualkishik AZ, 2012, INFORM SOFTWARE TECH, V54, P1250, DOI 10.1016/j.infsof.2012.06.006
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], 2008, COSMIC METHOD V3 0 A
   [Anonymous], P SOFTW MEAS EUR FOR
   [Anonymous], [No title captured]
   [Anonymous], 20 INT WORKSH SOFTW
   [Anonymous], 2007, 1414312007 ISOIEC
   [Anonymous], 2011, 197612011 ISOIEC
   [Anonymous], IEEE REC PRACT SOFTW
   Common Software Measurement International Consortium (COSMIC), 2015, GUID EARL RAP COSMIC
   COSMIC, 2014, COSMIC FUNCT SIZ MEA
   Course Registration System, 2004, TECHNICAL REPORT
   Cuadrado-Gallego JJ, 2007, LECT NOTES COMPUT SC, V4589, P273
   Cuadrado-Gallego JJ, 2010, INFORM SOFTWARE TECH, V52, P347, DOI 10.1016/j.infsof.2009.12.001
   Cuadrado-Gallego JJ, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P427, DOI 10.1109/SEAA.2008.75
   De Marco Lucia, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P349, DOI 10.1109/SEAA.2013.41
   De Vito G, 2014, EUROMICRO CONF PROC, P69, DOI 10.1109/SEAA.2014.30
   del Bianco V, 2014, INFORM SOFTWARE TECH, V56, P1253, DOI 10.1016/j.infsof.2014.04.009
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   Desharnais J.-M., 2006, INT C SOFTW PROC PRO
   Desharnais J.-M., 2010, 20 INT WORKSH SOFTW, P481
   Ferrucci F., 2016, 31 ACM SIGAPP S APPL
   Ferrucci F, 2014, EUROMICRO CONF PROC, P293, DOI 10.1109/SEAA.2014.76
   Ferrucci F, 2011, EUROMICRO CONF PROC, P461, DOI 10.1109/SEAA.2011.70
   FETCKE T, 1999, 199920 U QUEB MONTR
   Finnish Software Measurement Association (FISMA), 2004, FISMA FSM METH 1 1
   Gencel C, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P170, DOI 10.1109/IWSM-MENSURA.2012.33
   Gencel C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363106
   HAMPEL FR, 1971, ANN MATH STAT, V42, P1887, DOI 10.1214/aoms/1177693054
   International Function Point Users Group (IFPUG), 2010, FUNCT POINT COUNT PR
   International Standardization Organization (ISO), 2005, 247502005 ISOIEC
   International Standardization Organization (ISO), 2003, 209262003 ISOIEC
   ISBSG International Software Benchmarking Standards Group, 2012, ISBSG REP
   KHELIFI A, 2005, THESIS ECOLE TECHNOL, P495
   Lavazza Luigi, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P196, DOI 10.1109/IWSM.Mensura.2014.28
   Lavazza L, 2010, 4 INT S EMP SOFTW EN
   Lavazza  L., 2009, P 5 INT C PRED MOD S, P9
   Lavazza L., 2016, 11 INT C SOFTW ENG A
   Lavazza L, 2013, INFORM SOFTWARE TECH, V55, P1796, DOI 10.1016/j.infsof.2013.04.003
   Lavazza L, 2012, PROCEEDINGS OF THE 2012 JOINT CONFERENCE OF THE 22ND INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2012 SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA 2012), P160, DOI 10.1109/IWSM-MENSURA.2012.32
   Lavazza L, 2011, INFORM SOFTWARE TECH, V53, P874, DOI 10.1016/j.infsof.2011.02.005
   Lavazza LA, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P100
   Lind K, 2012, IEEE T SOFTWARE ENG, V38, P993, DOI 10.1109/TSE.2011.86
   MARTINO SD, 2016, INF SOFTWARE TECHNOL, V72, P90
   Meli R., 1999, FUNCTION POINT ESTIM, P6
   Rabbi MF, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P277, DOI 10.1109/ICSEA.2009.94
   ROUSSEEUW PJ, 1984, J AM STAT ASSOC, V79, P871, DOI 10.2307/2288718
   Santillo L., 2005, 11 IEEE INT SOFTW ME, P6
   Simple Function Point Association (SiFPA), 2014, SIMPL FUNCT POINT FU
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Timp Adri, 2015, UTIP EARLY FUNCTION
   Vogelezang E, 2003, 13 INT WORKSH SOFTW
   Vogelezang  F., 2007, APPROXIMATE SIZE MEA
   Wohlin C., 2012, Experimentation in Software Engineering
NR 56
TC 13
Z9 15
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2017
VL 86
BP 1
EP 19
DI 10.1016/j.infsof.2017.02.005
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9DB
UT WOS:000399855200001
DA 2024-07-18
ER

PT J
AU Garousi, V
   Felderer, M
   Hacaloglu, T
AF Garousi, Vahid
   Felderer, Michael
   Hacaloglu, Tuna
TI Software test maturity assessment and test process improvement: A
   multivocal literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software testing; Test management; Test process; Test maturity; Test
   process assessment; Test process improvement; Multivocal literature
   review; Systematic literature review
ID MODEL; DESIGN; GUIDELINES; QUALITY; METRICS
AB Context: Software testing practices and processes in many companies are far from being mature and are usually conducted in ad-hoc fashions. Such immature practices lead to various negative outcomes, e.g., ineffectiveness of testing practices in detecting all the defects, and cost and schedule overruns of testing activities. To conduct test maturity assessment (TMA) and test process improvement (TPI) in a systematic manner, various TMA/TPI models and approaches have been proposed.
   Objective: It is important to identify the state-of-the-art and the-practice in this area to consolidate the list of all various test maturity models proposed by practitioners and researchers, the drivers of TMA/TPI, the associated challenges and the benefits and results of TMA/TPI. Our article aims to benefit the readers (both practitioners and researchers) by providing the most comprehensive survey of the area, to this date, in assessing and improving the maturity of test processes.
   Method: To achieve the above objective, we have performed a Multivocal Literature Review (MLR) study to find out what we know about TMA/TPI. A MLR is a form of a Systematic Literature Review (SLR) which includes the grey literature (e.g., blog posts and white papers) in addition to the published (formal) literature (e.g., journal and conference papers). We searched the academic literature using the Google Scholar and the grey literature using the regular Google search engine.
   Results: Our MLR and its results are based on 181 sources, 51 (29%) of which were grey literature and 130 (71%) were formally published sources. By summarizing what we know about TMA/TPI, our review identified 58 different test maturity models and a large number of sources with varying degrees of empirical evidence on this topic. We also conducted qualitative analysis (coding) to synthesize the drivers, challenges and benefits of TMA/TPI from the primary sources.
   Conclusion: We show that current maturity models and techniques in TMA/TPI provides reasonable advice for industry and the research community. We suggest directions for follow-up work, e.g., using the findings of this MLR in industry-academia collaborative projects and empirical evaluation of models and techniques in the area of TMA/TPI as reported in this article. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Garousi, Vahid] Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.
   [Garousi, Vahid] Maral Software Engn Consulting Corp, Calgary, AB, Canada.
   [Felderer, Michael] Univ Innsbruck, Inst Comp Sci, Qual Engn Res Grp, Innsbruck, Austria.
   [Hacaloglu, Tuna] Middle East Tech Univ, Inst Informat, Ankara, Turkey.
   [Hacaloglu, Tuna] Atilim Univ, Dept Informat Syst Engn, Ankara, Turkey.
C3 Hacettepe University; University of Innsbruck; Middle East Technical
   University; Atilim University
RP Garousi, V (corresponding author), Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.; Garousi, V (corresponding author), Maral Software Engn Consulting Corp, Calgary, AB, Canada.
EM vahid.garousi@hacettepe.edu.tr; michael.felderer@uibk.ac.at;
   tuna.hacaloglu@metu.edu.tr
RI Felderer, Michael/AAF-4909-2020
OI Garousi, Vahid/0000-0001-6590-7576
FU Hacettepe University; Scientific and Technological Research Council of
   Turkey (TUBITAK) [115E805]
FX Vahid GaroUsi was partially supported by several internal grants by
   Hacettepe University and the Scientific and Technological Research
   Council of Turkey (TUBITAK) via grant #115E805.
CR A. Systems, 2011, TEST MAT TWEENS TEEN
   Aaltio T., 2013, TEST PROCES IMPROVEM
   Abdou T., 2013, INT C SOFTW ENG KNOW
   Abdou T., 2013, 25 INT C SOFTW ENG K
   Abu G., 2005, 38 ANN HAW INT C SYS, p78b
   Accenture, 2010, PROC IMPR TMMI
   Adams R.J., 2016, International Journal of Management Reviews, V00, P1
   Afzal Wasif, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P304, DOI 10.1109/ICSTW.2008.23
   Afzal W, 2016, J SYST SOFTWARE, V111, P1, DOI 10.1016/j.jss.2015.08.048
   Ahonen JJ, 2004, EMPIR SOFTW ENG, V9, P275, DOI 10.1023/B:EMSE.0000039880.99096.af
   Alchorne R, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1: DATABASES AND INFORMATION SYSTEMS INTEGRATION, P370
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alone S., 2015, EVALUATION TEST PROC
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   Andrade J, 2013, INFORM SOFTWARE TECH, V55, P18, DOI 10.1016/j.infsof.2012.03.003
   [Anonymous], 2004, TPI AUT VERS 1 01
   [Anonymous], P 2004 C CTR ADV STU
   [Anonymous], 2011, MEAS YOUR TEST MAT I
   [Anonymous], 2018, TEST MATURITY MODEL
   [Anonymous], P INT C SOFTW PROC I
   Araujo A.F., 2013, 2013 13 INT C AUT RO, P1, DOI DOI 10.1109/ROBOTICA.2013.6623520
   Balajiwale M., 2015, ACHIEVE LEVEL 5 MATU
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Banks M., 2010, GREY LIT LIB INF STU
   Barrett N., 1999, International Test Conference 1999. Proceedings (IEEE Cat. No.99CH37034), P124, DOI 10.1109/TEST.1999.805621
   Bates C., 2012, KEEP CALM USE TMMI
   Bath G., 2013, IMPROVING TEST PROCE
   Belt P., 2009, IMPROVING VERIFICATI, V324
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Benzies KM, 2006, WORLDV EVID-BASED NU, V3, P55, DOI 10.1111/j.1741-6787.2006.00051.x
   Black A., 2003, CRITICAL TESTING PRO
   Black R., 2002, MANAGING TESTING PRO
   Black R., 2008, 4 IDEAS IMPROVING TE
   Britton T, 2013, Reversible Debugging Software "Quantify the Time and Cost Saved Using Reversible Debuggers
   Bueno PMS, 2006, LECT NOTES COMPUT SC, V4034, P263
   Burnstein I, 1996, INTERNATIONAL TEST CONFERENCE 1996, PROCEEDINGS, P581, DOI 10.1109/TEST.1996.557106
   Burnstein I., 1999, TESTING MATURITY MOD
   Burnstein I., 1998, CROSSTALK, V11
   Burnstein I., 1998, J DEFENSE SOFTWARE E, V11, P26
   Burnstein I., 2003, PRACTICAL SOFTWARE T, P537
   Burnstein I., 2003, PRACTICAL SOFTWARE T, P263
   Burnstein I.C., 1993, DEV TESTING MATURI 2
   Burnstein I.S., 1996, DEV TESTING MATURI 1
   Butcher M, 2002, IBM SYST J, V41, P31, DOI 10.1147/sj.411.0031
   Camargo K., 2015, Journal of Software Engineering Research and Development, V3, P1, DOI DOI 10.1186/S40411-015-0019-9
   Camargo KG, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P137, DOI 10.1109/SBES.2013.6
   Cangussu J. W., 2004, Software Process Improvement and Practice, V9, P55, DOI 10.1002/spip.196
   Cannegieter J.J., 2011, TESTER GET OUT YOUR
   Capgemini, 2010, TEST MAT ASS IMPR US
   Furtado APCC, 2012, INT CONF QUAL SOFTW, P220, DOI 10.1109/QSIC.2012.53
   Cepeda S., 2005, CMMI STAGED CONTINUO
   Chandra P., 2009, Software assurance maturity model. a guide to building security into software development. version - 1.0
   Chelladurai P., 2011, WATCH YOUR STEP
   Codenomicon, 2014, FUZZ TEST MAT MOD
   Cognizant Co, 2014, CISC VIS NETW IND GL
   Cooper H., 2009, The handbook of research synthesis and meta-analysis, V2nd
   Cruz P., 2010, 2010 Proceedings of XXIX International Conference of the Chilean Computer Science Society (SCCC 2010), P51, DOI 10.1109/SCCC.2010.39
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1, DOI DOI 10.1145/1852786.1852788
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Daich G., 1996, EMPHASIZING SOFTWARE, P20
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Damm L.-O., 2005, 2005 International Symposium on Empirical Software Engineering (IEEE Cat. No. 05EX1213)
   Damm L-O., 2002, THESIS
   Deloitte, 2009, TEST MAT MOD ASS HEL
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Dóra PM, 2014, COMM COM INF SC, V457, P84, DOI 10.1007/978-3-662-44920-2_6
   Duncan F., 2012, 7 IET INT C SYST SAF
   Dustin E., 2003, IMPROVING YOUR SOFTW
   E. Computing, 1996, TRANS IR SOFTW PROC
   Eldh Sigrid, 2014, IEEE Seventh International Conference on Software Testing, Verification and Validation Workshops (ICSTW 2014), P337, DOI 10.1109/ICSTW.2014.38
   Eldh S., 2007, EXPT COMPONENT TESTS
   Ericson T., 1997, Software Testing, Verification and Reliability, V7, P229, DOI 10.1002/(SICI)1099-1689(199712)7:4<229::AID-STVR149>3.0.CO;2-M
   Eshtiagh P., 2014, EVALUATION TEST PROC
   Ewijk A. v., 2013, TPI NEXT BUSINESS DR
   Experimentus, 2011, TEST MAT MOD INT TMM
   Experimentus, 2012, TMMI SURV 2012 UPD
   Experimentus, 2013, TMMI SURV 2013
   Farooq A., 2007, SIGSOFT SOFTW ENG NO, V32, P3
   Farooq A., 2008, FIN052008 U MAGD
   Farooq A., 2009, EVALUTION FRAMEWORK
   Farooq A., 2009, THESIS
   Farooq A, 2008, LECT NOTES COMPUT SC, V4895, P114
   Farooq A, 2008, INMIC: 2008 INTERNATIONAL MULTITOPIC CONFERENCE, P333, DOI 10.1109/INMIC.2008.4777759
   Farooq A, 2008, LECT NOTES COMPUT SC, V5338, P107
   Felderer M., 2015, SOFTW TEST VERIF REL
   Felderer M, 2014, INT J SOFTW TOOLS TE, V16, P609, DOI 10.1007/s10009-014-0328-z
   Felderer M, 2015, IEEE SOFTWARE, V32, P94, DOI 10.1109/MS.2014.56
   Felderer M, 2013, LECT NOTES BUS INF P, V133, P125
   Felderer M, 2014, SOFTWARE QUAL J, V22, P543, DOI 10.1007/s11219-013-9226-y
   Fernández-Sanz L, 2009, COMM COM INF SC, V42, P1
   Furtado A., 2014, 9 INT C SOFTW ENG AD, P282
   G.C. Limited, 2006, TEST ORG MAT QUEST V
   Garcia Cecilia, 2014, P 14 INT C SOFTW PRO, P84
   Garcia Javier, 2008, Software Process: Improvement and Practice, V13, P36, DOI 10.1002/spip.395
   Garousi V., 2016, ONLINE PAPER RESPOSI
   Garousi V., 2016, Proceedings of the 20th international conference on evaluation and assessment in software engineering, P26
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Gebauer Dunlop M., 2012, BENEFITS TEST PROCES
   GELPERIN D, 1988, COMMUN ACM, V31, P687, DOI 10.1145/62959.62965
   Gelperin D., 1996, WHATS YOUR TESTABILI, P50
   Germundsson H., 2012, IMPROVEMENTS AREAS A
   Gerrard P., 2000, TEST PROCESS IMPROVE
   Glass R.L., 2006, SOFTWARE CREATIVITY
   Godin K, 2015, SYST REV-LONDON, V4, DOI 10.1186/s13643-015-0125-0
   Goldsmith R.F., 2012, MANAGING MEASURING I
   Grindal M., 2006, TEST AC IND C PRACT
   Grindal M, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P171, DOI 10.1109/TAIC-PART.2006.20
   Gu Hongying, 2011, Proceedings of the 5th International Conference on New Trends in Information Science and Service Science (NISS 2011), P382
   Gungor O., 2015, APPL TMMI TPI UNPUB
   Häser F, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P156, DOI 10.1109/QUATIC.2014.29
   Haser F., 2014, P INT C EV ASS SOFTW
   He YT, 2000, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P259, DOI 10.1109/HASE.2000.895470
   Heiskanen Henri, 2012, Product-Focused Software Process Improvement. Proceedings 13th International Conference (PROFES 2012), P17, DOI 10.1007/978-3-642-31063-8_3
   Heiskanen H., 2010, TEST PROCESS IMPROVE
   Heusser M., 2010, FISHING MATURITY MOD
   Hopewell S, 2007, COCHRANE DB SYST REV, DOI 10.1002/14651858.MR000001.pub2
   Hopewell S, 2005, PUBLICATION BIAS IN META-ANALYSIS: PREVENTION, ASSESSMENT AND ADJUSTMENTS, P49, DOI 10.1002/0470870168.ch4
   Hoppe M., 2005, 15 INT S ROCH NEW YO, P10
   Howard L., 2014, PROCESS IMPROVEMENT
   Hrgarek N, 2007, J INF ORGAN SCI, V31, P75
   ISO, 2013, 291192 ISOIECIEEE
   Jacobs J., 2002, STEP 2002, P123
   Jacobs J., 2000, XOOTIC MAGAZINE, V8, P23
   Jacobs J., 2001, EUROSTAR 2001
   Jung E, 2009, INT CONF QUAL SOFTW, P432, DOI 10.1109/QSIC.2009.64
   Junyoung Park, 2008, 1st India Software Engineering Conference. ISEC 2008, P149
   Kan SH, 2001, IBM SYST J, V40, P220, DOI 10.1147/sj.401.0220
   Kapur P., 2014, REL INF TECHN OPT IC, P1
   Karlström D, 2005, SOFTW TEST VERIF REL, V15, P145, DOI 10.1002/stvr.317
   Karr M.D., 2013, UNIT TEST MATURITY M
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kasurinen J., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P553, DOI 10.1109/ICSTW.2011.63
   Kasurinen Jussi, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P355, DOI 10.1109/ICST.2010.25
   Kasurinen J, 2012, ADV COMPUT, V85, P1, DOI 10.1016/B978-0-12-396526-4.00001-1
   Kasurinen J, 2011, COMM COM INF SC, V172, P25
   Kettunen V., 2010, P 19 INT S SOFTW TES, P231, DOI [10.1145/1831708.1831737, DOI 10.1145/1831708.1831737]
   Kim K., 2014, INT J STW ENG APPL, V8, P59
   Kitchenham B., 2007 EVIDENCE BASED
   Kollanus S, 2011, J SOFTW MAINT EVOL-R, V23, P327, DOI 10.1002/smr.456
   Koomen T., 1999, TEST PROCESS IMPROVE
   Koomen T., 1998, P SOG NED BV
   Krause M.H., 1994, MATURITY MODEL AUTOM
   Kukkanen J, 2009, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC.2009.62
   Kulesovs I., 2015, IOS APPL TESTING, V3, P138
   Kulkarni S., 2006, P 6 ANN INT SOFTW TE
   Kumar H., 2009, NAT IND C INDIACOM, P3
   Lamas E., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P274, DOI 10.1109/ITNG.2011.55
   Lamas Etiene, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1026, DOI 10.1109/ITNG.2010.134
   Lazic L, 2004, SOFTW TEST VERIF REL, V14, P257, DOI 10.1002/stvr.299
   Lazic L, 2010, COMPUT SCI INF SYST, V7, P459, DOI 10.2298/CSIS090923008L
   Lee C., 2009, P 2 INT C INT SCI IN, P1372
   Lee J, 2012, COMM COM INF SC, V340, P246
   Leung H. K. N., 1997, Software Testing, Verification and Reliability, V7, P3, DOI 10.1002/(SICI)1099-1689(199703)7:1<3::AID-STVR127>3.0.CO;2-C
   Levinson M., 2005, 11 WAYS IMPROVE SOFT
   Li Q, 2013, P 2013 INT C SOFTW S, P78
   Li Q, 2012, J SOFTW-EVOL PROC, V24, P783, DOI 10.1002/smr.512
   Lian L., 1995, SOFTWARE QUALITY PRO, P300
   Lindahl E., 2012, PIMP MY TEST PROCESS
   Lionbridge, 2009, TEST PROC ASS MOV RE
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   Maurya V.N., 2013, PRODUCT QUALITY IMPR
   Maveric Systems Co, 2015, CISC VIS NETW IND GL
   McAndrews D., 1997, TURBO TEAM APPROACH
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Miller M., 2005, SOFTW QUAL C INC ICS
   Miller SD, 2006, J SYST SOFTWARE, V79, P1486, DOI 10.1016/j.jss.2006.03.033
   Morasca Sandro, 2011, International Journal of Open Source Software & Processes, V3, P1, DOI 10.4018/jossp.2011040101
   Nnorthen Telecom, 1996, TRANS IR SOFTW PROC
   O'Hara F, 2011, COMM COM INF SC, V155, P194
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Oh H, 2008, INT CONF QUAL SOFTW, P57, DOI 10.1109/QSIC.2008.19
   Olsen K., 1998, P 6 EUR SOFTW TEST A, P345
   Ottosen G., 2015, EAT ELEPHANT TIPS FA
   PACE, 1996, TRANS IR SOFTW PROC
   Park J. C., 2008, THESIS VIRGINIA TECH
   PATTON MQ, 1991, REV EDUC RES, V61, P287, DOI 10.3102/00346543061003287
   Petersen K., 2008, INT C EV ASS SOFTW E
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rana K. K., 2005, Electronics Systems and Software, V3, P32, DOI 10.1049/ess:20050206
   Raninen A., 2014, PRACTICAL PROCESS IM
   RBCS, 2011, METR SOFTW TEST MA 2
   Reid S., 2012, Achieving Systems Safety, P237
   Reid S., 2006, CAST 2006 INFLUENCIN, P133
   Reid SC, 2000, FIRST ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P139, DOI 10.1109/APAQ.2000.883787
   Rico D.F., 2000, SP070098P4000 AFRLIF
   Rodrigues A, 2010, COMM COM INF SC, V112, P233
   Ronen-Harel S., 2010, ATMM AGILE TESTING M
   Ruiz M., 2014, INT J ADV SOFTW, V7
   Rungi K, 2013, COMM COM INF SC, V403, P376
   Ryu H, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P561, DOI 10.1109/ICIS.2008.78
   Saldaña-Ramos J, 2012, IET SOFTW, V6, P405, DOI 10.1049/iet-sen.2011.0182
   Schweigert T., 2014, COMMUN COMPUT PHYS, P309, DOI DOI 10.1007/978-3-662-43896-1_
   Schweigert T., 2013, SOFTWARE PROCESS IMP, P154
   Schweigert T, 2014, J SOFTW-EVOL PROC, V26, P350, DOI 10.1002/smr.1585
   Shah SMA, 2014, J SOFTW-EVOL PROC, V26, P220, DOI 10.1002/smr.1621
   Shanmuga Karthikeyan S.R., 2014, ADOPTING RIGHT SOFTW
   Sirathienchai J., 2012, J SOFTWARE ENG APPL, V5, P417, DOI DOI 10.4236/JSEA.2012.56048
   Smilgyte K, 2012, COMM COM INF SC, V319, P474
   Soderlund J., 2010, THESIS
   Spire, 1998, SOFTW PROC IMPR REG
   Staab T.C., 2002, CROSSTALK J DEF SOFT, V15, P13
   Steiner M, 2012, J SOFTW-EVOL PROC, V24, P471, DOI 10.1002/smr.507
   Stevens Scott T., 2006, 2006 IEEE AUTOTESTCON. Proceedings IEEE Systems Readiness Technology Conference, P813, DOI 10.1109/AUTEST.2006.283769
   Sudarsanam S., 2013, J ENG COMPUT APPL SC, V2, P52
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Suwannasart T., 1999, SET MEASUREMENTS IMP
   Swinkels A.R., 2000, CISC VIS NETW IND GL
   T. Foundation, 2012, TEST MAT MOD INT TMM
   Taipale Ossi., 2006, Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering, P262
   Tarhan A, 2011, SOFTWARE QUAL J, V19, P615, DOI 10.1007/s11219-011-9129-8
   Tayamanon T., 2011, 2011 21st International Conference on Systems Engineering, P329, DOI 10.1109/ICSEng.2011.65
   Thompson G., 2009, IMPLEMENTING TEST MA
   Thompson G., 2008, TEST PROCESS IMPROVE
   TMMI Foundation, 2015, TMMI SPEC REF MOD RE
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Toroi T, 2013, PROC IEEE INT CONF S, P11, DOI 10.1109/ICSM.2013.12
   Toroi T, 2006, FRONT ARTIF INTEL AP, V147, P462
   Tyndall J., 2010, AACODS CHECKLIST EVA
   van Veenendaal E., 2014, TEST PROCESS IMPROVE
   van Veenendaal E., 2007, TEST PROCESS IMPROVE
   Veenendaal E.V., 2012, Test Maturity Model Integration TMMi: Guidelines for Test Process Improvement
   VeriTest, 2014, VER TEST MAT ASS
   Vries G. d., 2010, WHAT TESTING TMAP NE
   Walen P., 2011, TEST PROCESS IMPROVE
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Whyte W.F., 1990, PARTICIPATORY ACTION
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Woodruff W.D., 2003, INTRO TEST PROCESS I
   Yaddow W., 2006, USING TEST MATURITY
   Yasin A., 2012, THESIS
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhang L., 2005, SOFTWARE TEST IMPROV
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 238
TC 60
Z9 63
U1 1
U2 42
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2017
VL 85
BP 16
EP 42
DI 10.1016/j.infsof.2017.01.001
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP7JG
UT WOS:000397553500002
DA 2024-07-18
ER

PT J
AU Vale, T
   de Almeida, ES
   Alves, V
   Kulesza, U
   Niu, N
   de Lima, R
AF Vale, Tassio
   de Almeida, Eduardo Santana
   Alves, Vander
   Kulesza, Uira
   Niu, Nan
   de Lima, Ricardo
TI Software product lines traceability: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping study; Software product lines; Software and systems
   traceability; Software reuse
ID REQUIREMENTS; MODEL; ARCHITECTURES; VARIABILITY; FEATURES; SUPPORT
AB Context: Traceability in Software Product Lines (SPL) is the ability to interrelate software engineering artifacts through required links to answer specific questions related to the families of products and underlying development processes. Despite the existence of studies to map out available evidence on traceability for single systems development, there is a lack of understanding on common strategies, activities, artifacts, and research gaps for SPL traceability.
   Objective: This paper analyzes 62 studies dating from 2001 to 2015 and discusses seven aspects of SPL traceability: main goals, strategies, application domains, research intensity, research challenges, rigor, and industrial relevance. In addition to the analysis, this paper also synthesizes the available evidence, identifies open issues and points out areas calling for further research.
   Method: To gather evidence, we defined a mapping study process adapted from existing guidelines. Driven by a set of research questions, this process comprises three major phases: planning, conducting, and documenting the review.
   Results: This work provides a structured understanding of SPL traceability, indicating areas for further research. The lack of evidence regarding the application of research methods indicates the need for more rigorous SPL traceability studies with better description of context, study design, and limitations. For practitioners, although most identified studies have low industrial relevance, a few of them have high relevance and thus could provide some decision making support for application of SPL traceability in practice.
   Conclusions: This work concludes that SPL traceability is maturing and pinpoints areas where further investigation should be performed. As future work, we intend to improve the comparison betWeen traceability proposals for SPL and single-system development. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Vale, Tassio] Univ Fed Reconcavo Bahia, Ctr Exact Sci & Technol, Cruz Das Almas, BA, Brazil.
   [Vale, Tassio; de Almeida, Eduardo Santana] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [Vale, Tassio; de Almeida, Eduardo Santana] RiSE Reuse Software Engn, Salvador, BA, Brazil.
   [Alves, Vander; de Lima, Ricardo] Univ Brasilia, Dept Comp Sci, Brasilia, DF, Brazil.
   [Kulesza, Uira] Univ Fed Rio Grande do Norte, Dept Comp Sci, Natal, RN, Brazil.
   [Niu, Nan] Univ Cincinnati, Dept EECS, Cincinnati, OH USA.
C3 Universidade Federal do Reconcavo da Bahia; Universidade Federal da
   Bahia; Universidade de Brasilia; Universidade Federal do Rio Grande do
   Norte; University System of Ohio; University of Cincinnati
RP Vale, T (corresponding author), Univ Fed Reconcavo Bahia, Ctr Exact Sci & Technol, Cruz Das Almas, BA, Brazil.
EM tassio.vale@ufrb.edu.br
RI de Almeida, Eduardo/JJC-2493-2023
OI Vale, Tassio/0000-0002-7223-3263; Kulesza, Uira/0000-0002-5467-6458;
   Alves, Vander/0000-0003-1573-048X; de Lima, Ricardo/0000-0002-9269-3558
CR Ajila SA, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P157, DOI 10.1109/IRI.2004.1431453
   Alferez Mauricio, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P779
   Alferez M., 2008, P INT WORKSH VAR MOD, P81
   Alsawalqah H. I., 2009, P INT C INT SCI INF, P480
   [Anonymous], P 7 INT WORKSH VAR M
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 4 IND SOFTW ENG C
   [Anonymous], 2012, Software and Systems Traceability
   [Anonymous], 28 S APPL COMP SAC A
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Anquetil N, 2010, SOFTW SYST MODEL, V9, P427, DOI 10.1007/s10270-009-0120-9
   Bagheri E, 2012, AUTOMAT SOFTW ENG, V19, P335, DOI 10.1007/s10515-011-0099-7
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Bayer J., 2001, P INT WORKSH PROD FA, P409, DOI [10.1007/3-540-47833-7_38, DOI 10.1007/3-540-47833-7_38]
   Berg Kathrin., 2005, WHITE RIVER S AFRICA, P182
   Bin Abid S, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P99
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Bragança A, 2007, FOURTH INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, PROCEEDINGS, P91, DOI 10.1109/MOMPES.2007.2
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cavalcanti Y.C., 2011, P 5 WORKSH VAR MOD S, P49, DOI DOI 10.1145/1944892.1944898
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Conejero Jose M., 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P721
   Conejero Jose M, 2008, P 13 INT WORKSHOP EA, P3
   Correa C. K. F., 2011, P INT SOFTW PROD LIN
   Díaz J, 2015, REQUIR ENG, V20, P323, DOI 10.1007/s00766-014-0203-1
   Díaz J, 2011, LECT NOTES COMPUT SC, V6903, P114, DOI 10.1007/978-3-642-23798-0_12
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ejaz R, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P238
   Espinoza A., 2010, P 2010 ACM S APPL CO, P2352
   Eyal-Salman Hamzeh, 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P209, DOI 10.1109/IRI.2013.6642474
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Ghanam Y, 2009, AGILE 2009 CONFERENCE, P41, DOI 10.1109/AGILE.2009.12
   Groher I, 2009, LECT NOTES COMPUT SC, V5560, P111, DOI 10.1007/978-3-642-03764-1_4
   HABLI I, 2010, SAF CAS APPR ASS, P142
   Halmans G, 2008, LECT NOTES COMPUT SC, V5074, P109
   Heider W., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P1, DOI 10.1109/WICSA-ECSA.212.8
   Heymans Patrick, 2012, International Journal on Software Tools for Technology Transfer, V14, P553, DOI 10.1007/s10009-012-0242-1
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Ji Wenbin, 2015, INT SYST SOFTW PROD, P61, DOI DOI 10.1145/2791060.2791107
   Jirapanthong W, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P506, DOI 10.1109/APSEC.2005.101
   Jirapanthong W, 2009, COMM COM INF SC, V55, P71
   Jirapanthong W, 2009, SOFTW SYST MODEL, V8, P117, DOI 10.1007/s10270-007-0066-8
   Kang S, 2014, P INT COMP SOFTW APP, P211, DOI 10.1109/COMPSAC.2014.29
   Kibum Park, 2012, 2012 IEEE/ACIS 11th International Conference on Computer and Information Science (ICIS), P553, DOI 10.1109/ICIS.2012.33
   Kim JA, 2013, 2013 EIGHTH INTERNATIONAL CONFERENCE ON BROADBAND, WIRELESS COMPUTING, COMMUNICATION AND APPLICATIONS (BWCCA 2013), P595, DOI 10.1109/BWCCA.2013.104
   Kim J, 2014, INT J SOFTW ENG KNOW, V24, P677, DOI 10.1142/S0218194014500260
   Kim J, 2008, J SYST SOFTWARE, V81, P37, DOI 10.1016/j.jss.2007.04.011
   Kim SD, 2005, Third ACIS International Conference on Software Engineering Research, Managment and Applications, Proceedings, P340
   Kishi T, 2005, LECT NOTES COMPUT SC, V3714, P150
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Lago P, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P261, DOI 10.1109/CSMR.2004.1281428
   Laguna MA, 2010, J UNIVERS COMPUT SCI, V16, P2313
   Lamb L.C., 2011, 6th International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE), P42
   Lee J, 2014, REQUIR ENG, V19, P377, DOI 10.1007/s00766-013-0183-6
   Lin Y., 2010, PROC IEEE EVOLUTIONA, P1
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   Linsbauer L, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P57, DOI 10.1109/SST.2015.16
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Mcharfi Zineb, 2015, 17th International Conference on Enterprise Information Systems (ICEIS 2015). Proceedings, P463
   Mohalik S., 2012, P 16 INT SOFTW PROD, V1, P186, DOI DOI 10.1145/2362536.2362562
   Moon M, 2007, 2007 CIT: 7TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P927, DOI 10.1109/CIT.2007.117
   Nan Niu, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P337, DOI 10.1109/COMPSAC.2010.41
   Niyun Jia, 2014, Advanced Materials Research, V998-999, P1085, DOI 10.4028/www.scientific.net/AMR.998-999.1085
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nunes Ingrid, 2011, International Journal of Agent-Oriented Software Engineering, V4, P353, DOI 10.1504/IJAOSE.2011.043643
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Lamancha BP, 2009, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSM.2009.5306324
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Ramesh B, 2002, LECT NOTES COMPUT SC, V2290, P353
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Riebisch M, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P235, DOI 10.1109/ECBS.2008.37
   Santos WB, 2012, EUROMICRO CONF PROC, P93, DOI 10.1109/SEAA.2012.40
   Satyananda TK, 2007, 2007 CIT: 7TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P934
   Shen LW, 2009, IEEE AUS SOFT ENGR, P210, DOI 10.1109/ASWEC.2009.27
   Sozen N., 2012, 2012 Proceedings of the 3rd International Workshop on Product LinE Approaches in Software Engineering (PLEASE 2012), P21, DOI 10.1109/PLEASE.2012.6229764
   Tsuchiya R, 2015, IEICE T INF SYST, VE98D, P852, DOI 10.1587/transinf.2014EDP7199
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   Vianna A., 2012, 16 INT SOFTW PROD LI, P209, DOI DOI 10.1145/2364412.2364447
   Wagner M., 2014, P INT SOFTW PROD LIN, P117
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yanyan Lin, 2012, 2012 International Conference on Computer Science and Service System (CSSS), P545, DOI 10.1109/CSSS.2012.142
   Yu DJ, 2012, ASIA PAC SOFWR ENG, P27, DOI 10.1109/APSEC.2012.135
NR 84
TC 27
Z9 29
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2017
VL 84
BP 1
EP 18
DI 10.1016/j.infsof.2016.12.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EJ5IV
UT WOS:000393252400001
DA 2024-07-18
ER

PT J
AU Garcés, L
   Ampatzoglou, A
   Avgeriou, P
   Nakagaw, EY
AF Garces, Lina
   Ampatzoglou, Apostolos
   Avgeriou, Paris
   Nakagaw, Elisa Yumi
TI Quality attributes and quality models for ambient assisted living
   software systems: A systematic mapping
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality attribute; Quality model; Ambient assisted living; Systematic
   mapping; ISO/IEC 25010
ID HIERARCHICAL MODEL; AAL; ARCHITECTURE; PLATFORMS; DESIGN; REQUIREMENTS
AB Context: Ambient Assisted Living (AAL) has become an essential, multidisciplinary research topic, aiming at providing software systems and services that assist people in their everyday life activities. Considering the critical nature of AAL systems, several initiatives have already contributed to the improvement of their quality, by mainly focusing on their non-functional requirements. Despite the importance of quality assurance in AAL systems, there is a lack of a comprehensive analysis on how quality assurance is performed in such systems. This fact might in turn lead to an absence of standardization with regard to the quality assurance process of these systems.
   Objective: We provide a broad, detailed panorama about the state of the art on quality models (QMs) and quality attributes (QAs) that are important for the AAL domain.
   Method: We performed a Systematic Mapping (SM). We used six publication databases to cover all published material pertinent for our SM. We initially obtained 287 studies that were filtered based on a set of well-defined inclusion/exclusion criteria, resulting into a set of 27 studies that were used for exploring QAs for ML systems.
   Results: The most common QAs used in the development of ML systems were identified and defined. We also characterized important critical attributes for software systems in the AAL domain. Additionally, QAs for some ML sub-domains were defined. Furthermore, we investigated how QM&QA have been defined, evaluated, and used in that domain. Finally, we offered an analysis of the maturity of the studies identified in our SM.
   Conclusion: It is necessary to develop a complete QM that: (i) defines all common QAs for AAL systems; (ii) considers variability of QAs among ML sub-domains; (iii) analyses dependences among QAs; (iv) offers indicators or metrics to measure QAs; and (v) offers means to assess and predict quality of AAL systems. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Garces, Lina; Nakagaw, Elisa Yumi] Univ Sao Paulo, Dept Comp Syst, Sao Paulo, SP, Brazil.
   [Ampatzoglou, Apostolos; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
C3 Universidade de Sao Paulo; University of Groningen
RP Garcés, L (corresponding author), Univ Sao Paulo, Dept Comp Syst, Sao Paulo, SP, Brazil.
EM linamgr@icmc.usp.br; a.ampatzoglou@rug.nl; paris@cs.rug.nl;
   elisa@icmc.usp.br
RI Ampatzoglou, Apostolos/AAC-3632-2020; Garcés, Lina/IQT-1157-2023;
   Garces, Lina/Y-5730-2018
OI Avgeriou, Paris/0000-0002-7101-0754; Garces, Lina/0000-0002-4990-6562;
   Nakagawa, Elisa Yumi/0000-0002-7754-4298
FU Capes/Nuffic [034/12]; FAPESP [2015/19192-2, 2014/02244-7,
   2013/20317-9]; Fundacao de Amparo a Pesquisa do Estado de Sao Paulo
   (FAPESP) [13/20317-9, 15/19192-2] Funding Source: FAPESP
FX This work is supported by the funding agencies Capes/Nuffic (Grant N.:
   034/12) and FAPESP (Grants N.: 2015/19192-2, 2014/02244-7 and
   2013/20317-9).
CR Acampora G, 2013, P IEEE, V101, P2470, DOI 10.1109/JPROC.2013.2262913
   Aguiar A, 2010, INT SYM QUAL ELECT, P730, DOI 10.1109/ISQED.2010.5450495
   Ahmad M, 2012, PROCEDIA COMPUT SCI, V10, P474, DOI 10.1016/j.procs.2012.06.061
   Akter S, 2010, ELECTRON MARK, V20, P209, DOI 10.1007/s12525-010-0043-x
   Chaaraoui AA, 2012, EXPERT SYST APPL, V39, P10873, DOI 10.1016/j.eswa.2012.03.005
   [Anonymous], ENCY SOFTWARE ENG
   [Anonymous], 2013, AMBIENT INTELLIGENCE
   [Anonymous], 2014, HORIZON 2020 WORK PR, P4995
   [Anonymous], 25012 ISO IEC
   [Anonymous], 410 USP ICMC
   [Anonymous], 2011, ISO 13314
   [Anonymous], ERCIM NEWS
   [Anonymous], BRAID PROJECT D4 2 C
   [Anonymous], 2015, SHI 2015
   [Anonymous], UNIVERSAL ACCESS INF
   [Anonymous], MENDELEY REFERENCE M
   [Anonymous], PRODUKTQUALITIN MLSY
   [Anonymous], 2013, ICSEA
   [Anonymous], 2011, J MOD MATH STAT
   [Anonymous], 24765 ISO IEC IEEE
   [Anonymous], 2013, AMBIENT INTELLIGENCE
   [Anonymous], J AMBIENT INTELL SMA
   [Anonymous], FAMOOSR 08 2 WORKSH
   [Anonymous], 1977, TECHNICAL REPORT
   [Anonymous], THESIS
   [Anonymous], EV ML SYST COMP BENC
   [Anonymous], P WICSA 2014 COMP VO
   [Anonymous], J DEFENSE SOFTWARE E
   [Anonymous], 2015, J HLTH MANAGEMENT IN
   [Anonymous], TECHAAL 15 IET INT C
   [Anonymous], MULTIMEDIA COMPUT CO
   Antonino PO, 2011, LECT NOTES COMPUT SC, V7040, P264, DOI 10.1007/978-3-642-25167-2_36
   Armentia A, 2015, SENSORS-BASEL, V15, P31939, DOI 10.3390/s151229899
   Arning K, 2015, LECT NOTES COMPUT SC, V9102, P152, DOI 10.1007/978-3-319-19312-0_13
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Beck M., 2008, Practical Attacks Against WEP and WPA, P1
   Bella G, 2014, LECT NOTES COMPUT SC, V8610, P464, DOI 10.1007/978-3-319-09912-5_39
   Bianchi T, 2015, THIRD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS SESOS 2015, P23, DOI 10.1109/SESoS.2015.12
   Blackman S, 2016, J INTELL SYST, V25, P55, DOI 10.1515/jisys-2014-0136
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Broek G.V. D., 2010, AALIANCE Ambient Assisted Living Roadmap
   Buchmayr M, 2011, J AMB INTEL HUM COMP, V2, P175, DOI 10.1007/s12652-011-0055-1
   Calvaresi D., 2016, Journal of Ambient Intelligence and Humanized Computing
   Cardinaux F, 2011, J AMB INTEL SMART EN, V3, P253, DOI 10.3233/AIS-2011-0110
   Cook DJ, 2009, PERVASIVE MOB COMPUT, V5, P277, DOI 10.1016/j.pmcj.2009.04.001
   Deissenboeck F, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P9, DOI 10.1109/WOSQ.2009.5071551
   Demiris G, 2008, Yearb Med Inform, P33
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Dominguez-Mayo F J, 2015, ScientificWorldJournal, V2015, P863591, DOI 10.1155/2015/863591
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Felizardo KR, 2012, INFORM SOFTWARE TECH, V54, P1079, DOI 10.1016/j.infsof.2012.04.003
   Gómez-Martínez E, 2015, J SYST SOFTWARE, V104, P166, DOI 10.1016/j.jss.2015.03.009
   Goyal PK, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON ISSUES AND CHALLENGES IN INTELLIGENT COMPUTING TECHNIQUES (ICICT), P520, DOI 10.1109/ICICICT.2014.6781337
   Guerrero LA, 2012, SENSORS-BASEL, V12, P8236, DOI 10.3390/s120608236
   Holzinger A, 2008, LECT NOTES COMPUT SC, V5105, P98, DOI 10.1007/978-3-540-70540-6_13
   ISO/IEC, 2001, ISO/IEC 9126-1
   Kitchenham B., 2007, Joint Report
   Kleinberger T, 2007, LECT NOTES COMPUT SC, V4555, P103
   Leahy D, 2009, LECT NOTES COMPUT SC, V5889, P149
   Liu LL, 2016, INT J MED INFORM, V91, P44, DOI 10.1016/j.ijmedinf.2016.04.007
   Luor T, 2015, MATURITAS, V82, P377, DOI 10.1016/j.maturitas.2015.07.025
   Mairiza D., 2010, P 2010 ACM S APPL CO, P311, DOI DOI 10.1145/1774088.1774153
   Mangano S, 2015, IEEE INTELL SYST, V30, P31, DOI 10.1109/MIS.2015.58
   McNaull J., 2012, Journal of Data and Information Quality (JDIQ), V4, P1, DOI DOI 10.1145/2378016.2378020
   Memon M, 2014, SENSORS-BASEL, V14, P4312, DOI 10.3390/s140304312
   Nakagawa EY, 2013, J SYST SOFTWARE, V86, P985, DOI 10.1016/j.jss.2012.10.013
   Nehmer J., 2006, 28th International Conference on Software Engineering Proceedings, P43, DOI 10.1145/1134285.1134293
   Novitzky P, 2015, SCI ENG ETHICS, V21, P707, DOI 10.1007/s11948-014-9552-x
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Ras E, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P804
   Ridley D., 2012, The literature review: a step-by-step guide for students, V2nd
   Robles R.J., 2010, International Journal of Advanced Science and Technology, V15, P37, DOI DOI 10.2298/FUEE1603451D
   Ruiz-López T, 2012, COMM COM INF SC, V309, P65
   Sánchez-Pi N, 2010, LECT NOTES ARTIF INT, V6279, P357, DOI 10.1007/978-3-642-15384-6_38
   Schneider Daniel., 2011, Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P196, DOI DOI 10.1145/1988008.1988036
   Solaimani H., 2013, Journal of Design Research, V11, P72
   Soldatos J, 2007, PERS UBIQUIT COMPUT, V11, P193, DOI 10.1007/s00779-006-0102-7
   Steinke F., 2012, INT J ADV LIFE SCI, V4, P77
   Stengler J, 2015, PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGIES FOR AGEING WELL AND E-HEALTH (ICT4AGEINGWELL), P67, DOI 10.5220/0005450200670074
   von Wangenheim CG, 2013, HEALTH TECHNOL-GER, V3, P11, DOI 10.1007/s12553-013-0038-7
   Wagner S, 2013, INT CONF PER COMP, P240, DOI 10.4108/icst.pervasivehealth.2013.252110
   ZEEPHONGSEKUL P, 1994, IEEE T RELIAB, V43, P408, DOI 10.1109/24.326435
   Zentek T, 2015, ADV TECHNOL SOC CH, P111, DOI 10.1007/978-3-319-11866-6_9
NR 84
TC 36
Z9 39
U1 0
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 121
EP 138
DI 10.1016/j.infsof.2016.10.005
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000007
DA 2024-07-18
ER

PT J
AU Neto, FGD
   Torkar, R
   Machado, PDL
AF Neto, Francisco G. de Oliveira
   Torkar, Richard
   Machado, Patricia D. L.
TI Full modification coverage through automatic similarity-based test case
   selection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regression testing; Test case selection; Model-based testing;
   Experimental study
AB Context: This paper presents the similarity approach for regression testing (SART), where a similarity-based test case selection technique (STCS) is used in a model-based testing process to provide selection of test cases exercising modified parts of a specification model. Unlike other model-based regression testing techniques, SART relies on similarity analysis among test cases to identify modifications, instead of comparing models, hence reducing the dependency on specific types of model.
   Objective: To present convincing evidence of the usage of similarity measures for modification-traversing test case selection.
   Method: We investigate SART in a case study and an experiment. The case study uses artefacts from industry and should be seen as-a sanity check of SART, while the experiment focuses on gaining statistical power through the generation of synthetical models in order to provide convincing evidence of SART's effectiveness. Through posthoc analysis we obtain p-values and effect sizes to observe statistically significant differences between treatments with respect to transition and modification coverage.
   Results: The case study with industrial artefacts revealed that SART is able to uncover the same number of defects as known similarity-based test case selection techniques. In turn, the experiment shows that SART, unlike the other investigated techniques, presents 100% modification coverage. In addition, all techniques covered a similar percentage of model transitions.
   Conclusions: In summary, not only does SART provide transition and defect coverage equal to known STCS techniques, but it exceeds greatly in covering modified parts of the specification model, being a suitable candidate for model-based regression testing. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Neto, Francisco G. de Oliveira; Torkar, Richard] Chalmers & Univ Gothenburg, Gothenburg, Sweden.
   [Machado, Patricia D. L.] Univ Fed Campina Grande, Campina Grande, PB, Brazil.
   [Torkar, Richard] Huawei Technol Sweden AB, Stockholm, Sweden.
C3 Chalmers University of Technology; Universidade Federal de Campina
   Grande; Huawei Technologies
RP Neto, FGD (corresponding author), Chalmers & Univ Gothenburg, Gothenburg, Sweden.
EM francisco.de.oliveira.neto@gu.se
RI Machado, Patricia/B-5346-2009
OI Machado, Patricia/0000-0002-0661-0067; de Oliveira Neto, Francisco
   Gomes/0000-0001-9226-5417
FU University of Gothenburg (Sweden) under the Science Without Borders
   (SWB) [88881.030428/2013-01, 152146]; National Institute of Science and
   Technology for Software Engineering - CNPq/Brasil [573964/2008-4];
   Knowledge Foundation (KKS): Testing of Critical System Characteristics
   (TOCSYC) [20130085]
FX This research project is part of a collaboration between the Federal
   University of Campina Grande (Brazil) and Chalmers and the University of
   Gothenburg (Sweden) under the Science Without Borders (SWB) [grant
   number 88881.030428/2013-01, project number 152146]. Also, this work was
   partially supported by the National Institute of Science and Technology
   for Software Engineering, funded by CNPq/Brasil [grant number
   573964/2008-4]; and by the Knowledge Foundation (KKS) through the
   project 20130085: Testing of Critical System Characteristics (TOCSYC).
CR [Anonymous], 1989, INSIGHTS REGRESSION
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bertolino A., 2010, INT C TEST SOFTW SYS, P13
   Borba P., 2010, TESTING TECHNIQUES S
   Briand LC, 2009, INFORM SOFTWARE TECH, V51, P16, DOI 10.1016/j.infsof.2008.09.010
   Cabral G, 2008, ELECTRON NOTES THEOR, V195, P171, DOI 10.1016/j.entcs.2007.08.032
   Cartaxo EG, 2007, IEEE SYS MAN CYBERN, P2885
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Cartaxo EG, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1540
   Chen Yanping., 2007, Fourth international workshop on Software quality assurance: in conjunction with the 6th ESEC/FSE joint meeting, P62, DOI DOI 10.1145/1295074.1295086
   Neto FGD, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P12, DOI 10.1109/CMSBSE.2013.6604430
   Fahad M, 2008, INT FED INFO PROC, P200
   Farooq Qurat-ul-ann, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P41, DOI 10.1109/ECBS.2010.12
   Fourneret E, 2014, INT CONF SOFTW SECUR, P147, DOI 10.1109/SERE.2014.28
   Fraser G, 2007, LECT NOTES COMPUT SC, V4422, P291
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Harrold MJ, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P99, DOI 10.1109/FOSM.2008.4659253
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Laski J., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P282, DOI 10.1109/ICSM.1992.242533
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 25
TC 11
Z9 11
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 124
EP 137
DI 10.1016/j.infsof.2016.08.008
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800008
DA 2024-07-18
ER

PT J
AU Wu, HY
   Nie, CH
   Kuo, FC
AF Wu, Huayao
   Nie, Changhai
   Kuo, Fei-Ching
TI The optimal testing order in the presence of switching cost
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Test suite prioritization; Combinatorial testing; Switching cost;
   Combination coverage; Multi-objective optimization
ID TRAVELING SALESMAN PROBLEM; TEST SUITE PRIORITIZATION; GENETIC
   ALGORITHM; COVERAGE; SYSTEM
AB Context: Test suite prioritization is a problem of deciding the order of executing test cases to reach the desirable outcome. Many cost-cognisant prioritization approaches decide the order based on the cost of test execution; but few based on the cost of switching test cases. The latter known as switching cost is the effort of re-configuring the environment for running subsequent test cases. Our previous studies show that switching cost can affect the efficiency of testing.
   Objective: In this paper, we aim to identify the optimal testing order that can detect interaction triggered faults earlier in the presence switching cost.
   Method: We presented a distance based metric to measure the switching cost between test cases. As reducing the switching cost can make the whole test suite run faster and thus achieve full combination coverage earlier, single-objective algorithms were used to minimize the total switching cost. Besides, when determining the next test case to run, there is a trade-off between high combination coverage and low switching cost. Hence, hybrid and multi-objective algorithms were used to achieve a better balance. In order to evaluate different algorithms, we conducted a series of experiments covering 400 different testing scenarios. We also conducted an empirical study with six real world applications.
   Results: The heuristic solver for the travelling salesman problem is the best algorithm to minimize the switching cost. It can detect faults earlier than the order with high rate of combination coverage. But in order to further reduce the effort to detect the first fault, the hybrid and multi-objective algorithms are the best methods.
   Conclusion: Prioritization based on switching cost can speed up the fault detection to some extent, but prioritization based on both combination coverage and testing cost can deliver the optimal testing order. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Wu, Huayao; Nie, Changhai] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Kuo, Fei-Ching] Swinburne Univ Technol, Fac Informat & Commun Technol, Hawthorn, Vic 3122, Australia.
C3 Nanjing University; Swinburne University of Technology
RP Nie, CH (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
EM changhainie@nju.edu.cn
RI Nie, Changhai/IWM-7504-2023
FU National Natural Science Foundation of China [61272079]; Research Fund
   for the Doctoral Program of Higher Education of China [20130091110032];
   Science Fund for Creative Research Groups of the National Natural
   Science Foundation of China [61321491]; Major Program of National
   Natural Science Foundation of China [91318301]
FX This work was supported in part by the National Natural Science
   Foundation of China (61272079), the Research Fund for the Doctoral
   Program of Higher Education of China (20130091110032), the Science Fund
   for Creative Research Groups of the National Natural Science Foundation
   of China (61321491), and the Major Program of National Natural Science
   Foundation of China (91318301).
CR Alspaugh S, 2007, P 1 ACM INT WORKSH E, P13, DOI 10.1145/1353673.1353676
   [Anonymous], 1998, DEP ELECT COMPUT ENG
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   BELLMORE M, 1968, OPER RES, V16, P538, DOI 10.1287/opre.16.3.538
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2011, INT J SYST ASSUR ENG, V2, P126, DOI 10.1007/s13198-011-0067-4
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Demiroz G., 2012, P 4 INT C ADV SYST T, P9
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Ferrer J, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1213, DOI 10.1145/2330163.2330331
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P111, DOI 10.1109/ICSTW.2011.60
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Helsgaun K, 2000, EUR J OPER RES, V126, P106, DOI 10.1016/S0377-2217(99)00284-2
   Helsgaun K, 2009, MATH PROGRAM COMPUT, V1, P119, DOI 10.1007/s12532-009-0004-6
   Huang RB, 2013, INT J SOFTW ENG KNOW, V23, P1427, DOI 10.1142/S0218194013500459
   Huang RB, 2013, P INT COMP SOFTW APP, P502, DOI 10.1109/COMPSAC.2013.84
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kimoto Shin, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P32, DOI 10.1109/SSIRI.2008.27
   KNOWLES J, 2006, 214 ETH ZUR COMP ENG
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Kruse PM, 2012, FED CONF COMPUT SCI, P1323
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Larrañaga P, 1999, ARTIF INTELL REV, V13, P129, DOI 10.1023/A:1006529012972
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu WL, 2007, INT C COMP AID DES C, P252
   Nie CH, 2015, INFORM SOFTWARE TECH, V62, P198, DOI 10.1016/j.infsof.2015.02.008
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   POON PW, 1995, COMPUT OPER RES, V22, P135, DOI 10.1016/0305-0548(93)E0024-N
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Qu X, 2013, IEEE ICST WORKSHOP, P285, DOI 10.1109/ICSTW.2013.40
   Richard Kuhn Y.L., 2010, NIST SPECIAL PUBLICA, V800-142
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sampath Sreedevi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P141, DOI 10.1109/ICST.2008.42
   Sampath S, 2013, IEEE T SOFTWARE ENG, V39, P1326, DOI 10.1109/TSE.2013.16
   Sherriff M, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ISSRE.2007.25
   Sihan Li, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P72, DOI 10.1109/QSIC.2010.15
   Srikanth Hema, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P61, DOI 10.1109/ISSRE.2009.26
   Srikanth H., 2005, INT S EMP SOFTW ENG, P17
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang ZY, 2011, INT J SOFTW ENG KNOW, V21, P829, DOI 10.1142/S0218194011005499
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Wu HY, 2014, IEEE ICST WORKSHOP, P133, DOI 10.1109/ICSTW.2014.15
   Yi Bian, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P221, DOI 10.1007/978-3-319-22183-0_15
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
NR 57
TC 5
Z9 5
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2016
VL 80
BP 57
EP 72
DI 10.1016/j.infsof.2016.08.006
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EA2GM
UT WOS:000386410800004
DA 2024-07-18
ER

PT J
AU Arevalo, C
   Escalona, MJ
   Ramos, I
   Domínguez-Muñoz, M
AF Arevalo, C.
   Escalona, M. J.
   Ramos, I.
   Dominguez-Munoz, M.
TI A metamodel to integrate business processes time perspective in BPMN 2.0
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE BPM; BPMN; Time perspective; Metamodel; OCL; MDE; Legacy system
ID CONSTRAINTS
AB Context: Business Process Management (BPM) is becoming a strategic advantage for organizations to streamline their operations. Most business experts are betting for OMG Business Process Model and Notation (BPMN) as de-facto standard (ISO/IEC 19510:2013) and selected technology to model processes. The temporal dimension underlies in any kind of process however, technicians need to shape this perspective that must also coexist with task control flow aspects, as well as resource and case perspectives. BPMN poorly gathers temporary rules. This is why there are contributions that extend the standard to cover such dimension. BPMN is mainly an imperative language. There are research contributions showing time constraints in BPMN, such as (i) BPMN patterns to express each rule with a combination of artifacts, thus these approaches increase the use of imperative BPMN style, and (ii) new decorators to capture time rules semantics giving clearer and simpler comprehensible specifications. Nevertheless, these extensions cannot yet be found in the present standard.
   Objective: To define a time rule taxonomy easily found in most business processes and look for an approach that applies each rule with current BPMN 2.0 standard in a declarative way. Method: A model-driven approach is used to propose a BPMN metamodel extension to address time perspective.
   Results: We look at a declarative approach where new time specifications may overlie the main control flow of a BPMN process. This proposal is totally supported with current BPMN standard, giving a BPMN metamodel extension with OCL constraints. We also use AQUA-WS as a software project case study which is planned and managed with MS Project. We illustrate business process extraction from project plans.
   Conclusion: This paper suggests to handle business temporal rules with current BPMN standard, along with other business perspectives like resources and cases. This approach can be applied to reverse engineering processes from legacy databases. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Arevalo, C.; Escalona, M. J.; Ramos, I.] Univ Seville, Dept Comp Languages & Syst, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
   [Dominguez-Munoz, M.] Web Engn & Early Testing IWT2, Avda Reina Mercedes S-N, Seville 41012, Spain.
C3 University of Sevilla
RP Arevalo, C (corresponding author), Univ Seville, Dept Comp Languages & Syst, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
EM carlosarevalo@us.es
RI Escalona, María José/G-3900-2010; Gomez, Natividad/F-1656-2010; Ramos
   Roman, Isabel/U-7827-2017; Arevalo Maldonado, Carlos/L-5659-2014
OI Escalona, María José/0000-0002-6435-1497; Ramos Roman,
   Isabel/0000-0002-9201-0673; Arevalo Maldonado,
   Carlos/0000-0002-5050-3664
FU MeGUS project of the Spanish Ministry of Economy and Competitiveness
   [TIN2013-46928-C3-3-R]; SoftPLM Network of the Spanish Ministry of
   Economy and Competitiveness [TIN2015-71938-REDT]
FX This research has been supported by the MeGUS project
   (TIN2013-46928-C3-3-R) and by the SoftPLM Network (TIN2015-71938-REDT)
   of the Spanish Ministry of Economy and Competitiveness.
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], 2012, Business Process Management: Concepts, Languages, Architectures
   Awad A., 2009, Enabling Resource Assignment Constraints in BPMN
   Ayora C, 2015, INFORM SOFTWARE TECH, V57, P248, DOI 10.1016/j.infsof.2014.05.009
   Bisbal J, 1997, ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE AND INTERNATIONAL COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P529, DOI 10.1109/APSEC.1997.640219
   Cheikhrouhou S, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 3, P236, DOI 10.5220/0004413202360242
   Cheikhrouhou S, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P701, DOI 10.1109/SCC.2014.97
   Cheikhrouhou S, 2014, 2014 IEEE 23RD INTERNATIONAL WETICE CONFERENCE (WETICE), P326, DOI 10.1109/WETICE.2014.75
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Chinosi M, 2012, COMPUT STAND INTER, V34, P124, DOI 10.1016/j.csi.2011.06.002
   Du YH, 2011, IEEE T SYST MAN CY A, V41, P1166, DOI 10.1109/TSMCA.2011.2116003
   Eder J, 2008, LECT NOTES COMPUT SC, V5181, P668, DOI 10.1007/978-3-540-85654-2_57
   Escalona M. J., 2013, P IND TRACK C ADV IN, P25
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Flores C, 2011, LECT NOTES BUS INF P, V66, P85
   Gagne Denis, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P361, DOI 10.1109/CEC.2009.71
   Kalenkova A.A., 2014, BUSINESS PROCESS MAN, P7
   Kallel S, 2009, ECOWS'09: PROCEEDINGS OF THE 7TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P148, DOI 10.1109/ECOWS.2009.15
   Kelley J.E., 1959, Papers presented at the December 1-3, 1959, Eastern Joint IRE-AIEE-ACM Computer Conference, P160, DOI DOI 10.1145/1460299.1460318
   Kent S., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P286
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Lanz A, 2014, REQUIR ENG, V19, P113, DOI 10.1007/s00766-012-0162-3
   Lu RP, 2007, LECT NOTES COMPUT SC, V4439, P82
   MAKNI M, 2011, P BPM WORKSH, V0100, P00108
   Makni M, 2010, LECT NOTES COMPUT SC, V6426, P523
   Moreno-Montes de Oca I, 2015, INFORM SOFTWARE TECH, V58, P187, DOI 10.1016/j.infsof.2014.07.011
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   OMG, 2014, OBJ CONSTR LANG OCL
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   Ross R.G., 2013, Business Rule Concepts: Getting to the Point of Knowledge, V4th
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Stroppi L.J.R., 2012, CIBSE, P56
   Ulrich WM, 2010, INFORMATION SYSTEMS TRANSFORMATION: ARCHITECTURE-DRIVEN MODERNIZATION CASE STUDIES, pXII
   Van der Aalst W.M.P., 2004, Business Process Management Journal, V10, P135, DOI DOI 10.1108/BPMJ.2004.15710BAA.001
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   VANDERAALST WMP, 2015, EXTRACTING EVENT DAT, P105
   Verbeek HMW, 2011, LECT NOTES BUS INF P, V72, P60
   von Rosing M., 2014, COMPLETE BUSINESS PR, V1
   Wagner G, 2005, LECT NOTES COMPUT SC, V3564, P251
   Watahiki K, 2011, IEEE SYS MAN CYBERN, P1173, DOI 10.1109/ICSMC.2011.6083857
   Wenjia Huai, 2010, 2010 Proceedings of 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing (UIC/ATC 2010), P422, DOI 10.1109/UIC-ATC.2010.114
   Wong PYH, 2009, ELECTRON NOTES THEOR, V229, P59, DOI 10.1016/j.entcs.2009.06.029
   zur Muehlen M, 2008, LECT NOTES COMPUT SC, V5074, P465
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 70
TC 27
Z9 31
U1 3
U2 63
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2016
VL 77
BP 17
EP 33
DI 10.1016/j.infsof.2016.05.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ5UQ
UT WOS:000379271000002
OA Green Published
DA 2024-07-18
ER

PT J
AU Dingsoyr, T
   Lassenius, C
AF Dingsoyr, Torgeir
   Lassenius, Casper
TI Emerging themes in agile software development: Introduction to the
   special section on continuous value delivery
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Software process improvement; Value-based
   software engineering; Requirements engineering; Continuous deployment;
   Lean startup; Scrum; Extreme programming
ID FUTURE
AB The relationship between customers and suppliers remains a challenge in agile software development. Two trends seek to improve this relationship, the increased focus on value and the move towards continuous deployment. In this special section on continuous value delivery, we describe these emerging research themes and show the increasing interest in these topics over time. Further, we discuss implications for future research. (C) 2016 The Authors. Published by Elsevier B.V.
C1 [Dingsoyr, Torgeir] SINTEF, Trondheim, Norway.
   [Dingsoyr, Torgeir] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Trondheim, Norway.
   [Lassenius, Casper] Aalto Univ, Dept Comp Sci & Engn, Helsinki, Finland.
C3 SINTEF; Norwegian University of Science & Technology (NTNU); Aalto
   University
RP Dingsoyr, T (corresponding author), SINTEF, Trondheim, Norway.; Dingsoyr, T (corresponding author), Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Trondheim, Norway.
EM torgeird@sintef.no
RI Lassenius, Casper C/A-4339-2013; Lai, Stephen/L-5253-2016; Dingsøyr,
   Torgeir/AAJ-7360-2020
OI Dingsøyr, Torgeir/0000-0003-0725-345X
FU project Agile 2.0 - Research council of Norway [236759]; company
   Kantega; company Kongsberg Defence Aerospace; company Sopra Steria;
   company Sticos; TEKES; Finnish Funding Agency for Innovation, Need for
   Speed (N4S) programme
FX We would like to thank the program committee members for the XP2015
   conference for their effort in reviewing conference papers, nominating
   papers and finally for reviewing selected articles for this special
   section. We would also like to thank Claes Wohlin for guidance regarding
   the special section. The work with this section has partially been
   supported by the project Agile 2.0 funded by the Research council of
   Norway through grant 236759 and by the companies Kantega, Kongsberg
   Defence & Aerospace, Sopra Steria, and Sticos, and by TEKES, the Finnish
   Funding Agency for Innovation, as part of the Need for Speed (N4S)
   programme.
CR [Anonymous], 2021, GUID PROJ MAN BOD KN, V7th
   [Anonymous], 2014, SOFTW PROJ MANAG CHA
   [Anonymous], 2014, RCOSE 2014 P
   [Anonymous], 1989, ENCY UNABRIDGED DICT
   [Anonymous], J SYST SOFTW
   [Anonymous], AGILE CONTRACTING EX
   Balijepally V, 2009, MIS QUART, V33, P91
   Beck K., 2000, EXTREME PROGRAMMING
   Bentley C., 2010, PRINCE2 PRACTICAL HD
   Biffl S., 2006, Value-Based Software Engineering
   Boehm B., 2003, ACM SIGSOFT Software Engineering Notes, V28, P3, DOI DOI 10.1145/638750.638775
   Bosch J, 2016, IEEE SOFTWARE, V33, P82, DOI 10.1109/MS.2016.14
   Claps GG, 2015, INFORM SOFTWARE TECH, V57, P21, DOI 10.1016/j.infsof.2014.07.009
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eck A., 2014, FIT CONTINUOUS INTEG
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2006, Continuous integration
   Fowler M., 2013, Continuous Delivery
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Janzen D, 2005, COMPUTER, V38, P43, DOI 10.1109/MC.2005.314
   Lassenius C., 2015, AGILE PROCESSES SOFT, V212
   Merisalo-Rantanen H, 2005, J DATABASE MANAGE, V16, P41, DOI 10.4018/jdm.2005100103
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Ries E, 2011, The Lean Startup
   Rodriguez P., 2012, P ACM IEEE INT S EMP
   Ståhl D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P54, DOI 10.1145/2591062.2591186
NR 30
TC 43
Z9 53
U1 2
U2 85
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2016
VL 77
BP 56
EP 60
DI 10.1016/j.infsof.2016.04.018
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ5UQ
UT WOS:000379271000004
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Soomro, AB
   Salleh, N
   Mendes, E
   Grundy, J
   Burch, G
   Nordin, A
AF Soomro, Arjumand Bano
   Salleh, Norsaremah
   Mendes, Emilia
   Grundy, John
   Burch, Giles
   Nordin, Azlin
TI The effect of software engineers' personality traits on team climate and
   performance: A Systematic Literature Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software team climate; Personality and software engineering; Systematic
   literature review; Team performance
ID QUALITY; INNOVATION
AB Context: Over the past 50 years numerous studies have investigated the possible effect that software engineers' personalities may have upon their individual tasks and teamwork. These have led to an improved understanding of that relationship; however, the analysis of personality traits and their impact on the software development process is still an area under investigation and debate. Further, other than personality traits, "team climate" is also another factor that has also been investigated given its relationship with software teams' performance.
   Objective: The aim of this paper is to investigate how software professionals' personality is associated with team climate and team performance.
   Method: In this paper we detail a Systematic Literature Review (SLR) of the effect of software engineers' personality traits and team climate on software team performance.
   Results: Our main findings include 35 primary studies that have addressed the relationship between personality and team performance without considering team climate. The findings showed that team climate comprises a wide range of factors that fall within the fields of management and behavioral sciences. Most of the studies used undergraduate students as subjects and as surrogates of software professionals.
   Conclusions: The findings from this SLR would be beneficial for understanding the personality assessment of software development team members by revealing the traits of personality taxonomy, along with the measurement of the software development team working environment. These measurements would be useful in examining the success and failure possibilities of software projects in development processes.
   General terms: Human factors, performance. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Soomro, Arjumand Bano] Int Islamic Univ Malaysia, Dept Informat Syst, Kuala Lumpur, Malaysia.
   [Salleh, Norsaremah; Nordin, Azlin] Int Islamic Univ Malaysia, Dept Comp Sci, Kuala Lumpur, Malaysia.
   [Mendes, Emilia] Blekinge Inst Technol, Dept Comp Sci & Engn, Karlskrona, Sweden.
   [Grundy, John] Deakin Univ, Sch Informat Technol, Geelong, Vic 3217, Australia.
C3 International Islamic University Malaysia; International Islamic
   University Malaysia; Blekinge Institute Technology; Deakin University
RP Soomro, AB (corresponding author), Int Islamic Univ Malaysia, Dept Informat Syst, Kuala Lumpur, Malaysia.
EM arjumandsoomro2@gmail.com; norsaremah@iium.edu.my; emilia.mendes@bth.se;
   jgrundy@swin.edu.au; gbur9811@uni.sydney.edu.au; azlinnordin@iium.edu.my
RI Mendes, Maria E/B-4207-2015; Soomro, Arjumand Bano/ABD-1687-2021;
   Soomro, Arjumand Bano/GPX-8180-2022; Salleh, Norsaremah/AFU-5066-2022;
   Grundy, John/AAF-1716-2019; Nordin, Azlin/ABH-7276-2020; Salleh,
   Norsaremah/B-9889-2008
OI Soomro, Arjumand Bano/0000-0001-5230-7459; Salleh,
   Norsaremah/0000-0001-5625-7014; Grundy, John/0000-0003-4928-7076;
   Nordin, Azlin/0000-0001-6557-7538; Mendes, Emilia/0000-0003-0449-5322
FU Ministry of Higher Education, Malaysia under RAGS research grant
   [RAGS12-001-0001]
FX This research was funded by the Ministry of Higher Education, Malaysia
   under RAGS research grant (RAGS12-001-0001).
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Açikgöz A, 2014, GROUP DECIS NEGOT, V23, P1145, DOI 10.1007/s10726-013-9367-1
   Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], HUMAN ATTRIBUTES MOD
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], 1995, Systematic reviews
   [Anonymous], 2005, SYSTEMATIC REV SOCIA
   [Anonymous], 1980, Winthrop computer systems series
   Bandura A., 2010, The Corsini Encyclopedia of Psychology, P1
   Bedingfield JD, 2008, PORTL INT CONF MANAG, P1303, DOI 10.1109/PICMET.2008.4599742
   BOLLEN KA, 1990, SOC FORCES, V69, P479, DOI 10.2307/2579670
   Capretz L.F., 2010, MAKING SENSE SOFTWAR, P6
   Carducci B.J., 2009, The psychology of personality, V2nd
   Cartwright D., 1968, GROUP DYNAMICS RES T
   Ceschi A, 2014, EUR J TRAIN DEV, V38, P211, DOI 10.1108/EJTD-01-2013-0004
   Cromar S., 2013, TECHIE BOSS TRANSITI, P183, DOI [10.1007/978-1-4302-5933-6_12, DOI 10.1007/978-1-4302-5933-6_12]
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cunha AB, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P23, DOI 10.1109/CHASE.2009.5071406
   Dafoulas GA, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P352, DOI 10.1109/AICCSA.2001.934012
   De Sitter L., 1994, SIMPLE ORG COMPLEX T
   Driskell JE, 2006, GROUP DYN-THEOR RES, V10, P249, DOI 10.1037/1089-2699.10.4.249
   Fagerholm F, 2015, INFORM SOFTWARE TECH, V64, P132, DOI 10.1016/j.infsof.2015.01.010
   Fagerholm Fabian, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601285, DOI 10.1145/2601248.2601285]
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Glew D., 1995, Journal of Management
   GOLDBERG LR, 1993, AM PSYCHOL, V48, P26, DOI 10.1037/0003-066X.48.1.26
   Gómez MN, 2014, EMPIR SOFTW ENG, V19, P343, DOI 10.1007/s10664-013-9265-9
   Guzzo R.A., 1992, HDB IND ORG PSYCHOL, V3, P269
   HENDERSON JC, 1992, MANAGE SCI, V38, P757, DOI 10.1287/mnsc.38.6.757
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Hogan R, 2005, REV GEN PSYCHOL, V9, P169, DOI 10.1037/1089-2680.9.2.169
   Hogan R, 2001, INT J SELECT ASSESS, V9, P40, DOI 10.1111/1468-2389.00162
   Janis IrvingL., 1982, GROUPTHINK
   Jia JD, 2015, INT CONF SOFTW ENG, P7, DOI 10.1109/ICSESS.2015.7338995
   Jiang J.J., 1997, Team Performance Management, V3, P236, DOI DOI 10.1108/13527599710190902
   John O., 1999, HDB PERSONAL THEORY
   Jones MC, 1996, INFORM MANAGE-AMSTER, V31, P57, DOI 10.1016/S0378-7206(96)01068-3
   KAMEDA T, 2015, INT ENCY SOCIAL BEHA, P441, DOI DOI 10.1016/B978-0-08-097086-8.81040-5
   Katzenbach J.R., 2001, DISCIPLINE VIRTUAL T
   Keirsey D., 1998, PLEAS E UNDERSTAND M
   Keirsey D., 1984, PLEASE UNDERSTAND ME
   Kichuk SL, 1997, J ENG TECHNOL MANAGE, V14, P195, DOI 10.1016/S0923-4748(97)00010-6
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Lawler E.E., 1992, The ultimate advantage: Creating the high-involvement organization
   Lee J.M., 1978, ADV BOT RES, V2
   Lewin K., 1951, Field Theory in Social Science, DOI DOI 10.1177/000271625127600135
   Loo R., 2003, International Journal of Project Management, V21, P511, DOI 10.1016/S0263-7863(02)00058-3
   Macdonald GM, 2006, COCHRANE DB SYST REV, DOI 10.1002/14651858.CD001930.pub2
   Manz C., 1987, ADM SCI Q
   O'Neill T., 2008, N AM J PSYCHOL, V10, P65
   OREILLY CA, 1989, ADMIN SCI QUART, V34, P21, DOI 10.2307/2392984
   Pasmore W.A., 1988, Designing effective organizations: The sociotechnical systems perspective
   Pieterse V., 2006, Proceedings of annual research conference of the South African institute of computer scientists and information technologists on IT research in developing countries, P180
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Sandelowski M., 2006, Handbook for Synthesizing Qualitative Research
   Sandelowski M, 2007, RES NURS HEALTH, V30, P99, DOI 10.1002/nur.20176
   Sawyer S, 2001, INFORM SYST J, V11, P155, DOI 10.1046/j.1365-2575.2001.00100.x
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   Sharma A, 2012, INT J PROJ MANAG, V30, P176, DOI 10.1016/j.ijproman.2011.05.003
   Shaw M., 1981, GROUP DYNAMICS
   Sudhakar GP, 2011, TEAM PERFORM MANAG, V17, P187, DOI 10.1108/13527591111143718
   Van Vugt M., 2012, GROUP PROCESSES, P297
   Weinberg G.M., 1998, PSYCHOL COMPUTER PRO
   West M.A., 1990, Innovation and creativity at work: Psychological and organizational strategies, P3, DOI DOI 10.1021/CI970481E
   Yilmaz M, 2012, EUROMICRO CONF PROC, P400, DOI 10.1109/SEAA.2012.62
   Zhang HP, 2015, INFORM MANAGE-AMSTER, V52, P658, DOI 10.1016/j.im.2015.05.006
NR 71
TC 51
Z9 58
U1 0
U2 52
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2016
VL 73
BP 52
EP 65
DI 10.1016/j.infsof.2016.01.006
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DI5KJ
UT WOS:000373537400005
DA 2024-07-18
ER

PT J
AU Zayour, I
   Hamdar, A
AF Zayour, Iyad
   Hamdar, Ali
TI A qualitative study on debugging under an enterprise IDE
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE IDE; Debugging; Software productivity
ID FRAMEWORK
AB Context: Modern enterprise Integrated Development Environments (IDEs) like Microsoft Visual Studio significantly changed the programming practice from revolving around writing code to including many practices such as the visual design of the UI and database schemas. Despite the surge of productivity in many areas of development, enterprise IDEs still suffer from a high cost of debugging.
   Objective: In order to identify the causes of difficulties associated with debugging under enterprise IDEs, we studied a group of programmers in a company using an IDE to develop medium size 3-tier software systems. We also elicited possible alleviations for those difficulties.
   Method: The qualitative results were generated using the Grounded Theory research approach. The study involved observing 17 programmers debugging stubborn bugs. We coded the major tasks involved in-debugging, and then we categorized these tasks in four categories and evaluated the time spent on each of these categories. We then involved those programmers to get an explanation of the causes of those difficulties and to get recommended alleviations.
   Results: The results showed that most of the programmers' time during debugging is spent on categories of tasks that are directly related to the nature of the enterprise IDE as opposed to classical programming.
   Conclusions: The enterprise IDE platform for software development is more than a "better" development tool; it radically reshapes the development landscape shifting the time allocation of developers to new areas. Thus, corresponding fundamental changes and adaptation are needed in the IDE tools, in the way organizations manage their accumulated expertise and even in the programming techniques. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Zayour, Iyad] Lebanese Univ, Fac Sci, Dept Comp Sci, Beirut, Lebanon.
   [Hamdar, Ali] Integrated Digital Syst, Beirut, Lebanon.
C3 Lebanese University
RP Zayour, I (corresponding author), Lebanese Univ, Fac Sci, Dept Comp Sci, PO 6573-14, Beirut, Lebanon.
EM iyad@alumni.uottawa.ca; Ali.Hamdar@ids.com.lb
RI Jolugbo, Olajide/D-3216-2017
OI Jolugbo, Olajide/0000-0001-6512-4117
CR [Anonymous], MSRTR2005140
   ARAKI K, 1991, IEEE SOFTWARE, V8, P14, DOI 10.1109/52.88939
   Blumer H., 1986, Symbolic Interactionism: Perspective and Method
   DeWalt K.M., 2011, Participant Observation: A Guide for Fieldworkers
   Eisenstadt I., 1993, P EMP STUD PROGR 5 W, P86
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Halverson C., 2008, SE CSE
   Johnson S. D., 1991, TECH SKILLS TRAIN, V7, P9
   Jonassen DH, 2006, EDUC PSYCHOL REV, V18, P77, DOI 10.1007/s10648-006-9001-8
   Katz I. R., 1987, Human-Computer Interaction, V3, P351, DOI 10.1207/s15327051hci0304_2
   Ko A., 2005, ICSE 05
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Latour B., 1987, SCI ACTION
   LaToza T.D., 2006, P 28 INT C SOFTW ENG
   Laudan Larry., 1996, POSITIVISM RELATIVIS
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   McCauley R, 2008, COMPUT SCI EDUC, V18, P67, DOI 10.1080/08993400802114581
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Romero P., INT J HUM COMPUT STU, V65
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   WELLMAN D, 1988, SYMB INTERACT, V11, P59, DOI 10.1525/si.1988.11.1.59
   Yoon B.-d., 1998, 4 S HUM INT COMPL SY
   Zayour Iyad, 2013, Journal of Software, V8, P2425, DOI 10.4304/jsw.8.10.2425-2431
NR 23
TC 8
Z9 10
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 130
EP 139
DI 10.1016/j.infsof.2015.10.010
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600010
DA 2024-07-18
ER

PT J
AU Fagerholm, F
   Ikonen, M
   Kettunen, P
   Münch, J
   Roto, V
   Abraharnsson, P
AF Fagerholm, Fabian
   Ikonen, Marko
   Kettunen, Petri
   Munch, Jurgen
   Roto, Virpi
   Abraharnsson, Pekka
TI Performance Alignment Work: How software developers experience the
   continuous adaptation of team performance in Lean and Agile environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Developer Experience; Team performance; Case study; Human factors; Agile
   software development; Lean software development
ID QUALITY
AB Context: Companies increasingly strive to adapt to market and ecosystem changes in real time. Gauging and understanding team performance in such changing environments present a major challenge.
   Objective: This paper aims to understand how software developers experience the continuous adaptation of performance in a modern, highly volatile environment using Lean and Agile software development methodology. This understanding can be used as a basis for guiding formation and maintenance of high-performing teams, to inform performance improvement initiatives, and to improve working conditions for software developers.
   Method: A qualitative multiple-case study using thematic interviews was conducted with 16 experienced practitioners in five organisations.
   Results: We generated a grounded theory, Performance Alignment Work, showing how software developers experience performance. We found 33 major categories of performance factors and relationships between the factors. A cross-case comparison revealed similarities and differences between different kinds and different sizes of organisations.
   Conclusions: Based on our study, software teams are engaged in a constant cycle of interpreting their own performance and negotiating its alignment with other stakeholders. While differences across organisational sizes exist, a common set of performance experiences is present despite differences in context variables. Enhancing performance experiences requires integration of soft factors, such as communication, team spirit, team identity, and values, into the overall development process. Our findings suggest a view of software development and software team performance that centres around behavioural and social sciences. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Fagerholm, Fabian; Ikonen, Marko; Kettunen, Petri; Munch, Jurgen] Univ Helsinki, Dept Comp Sci, FI-00014 Helsinki, Finland.
   [Roto, Virpi] Aalto Univ, Sch Arts Design & Architecture, Espoo 00076, Finland.
   [Abraharnsson, Pekka] Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
C3 University of Helsinki; Aalto University; Free University of
   Bozen-Bolzano
RP Fagerholm, F (corresponding author), Univ Helsinki, Dept Comp Sci, POB 68, FI-00014 Helsinki, Finland.
EM fabian.fagerholm@helsinki.fi; marko.ikonen@alumni.helsinki.fi;
   petri.kettunen@cs.helsinki.fi; juergen.muench@cs.helsinki.fi;
   virpi.roto@aalto.fi; pekka.abrahamsson@unibz.it
RI Fagerholm, Fabian/B-1952-2015; Münch, Jürgen/ABC-2316-2020; Roto,
   Virpi/G-2403-2013; Abrahamsson, Pekka/A-5559-2018
OI Fagerholm, Fabian/0000-0002-7298-3021; Münch,
   Jürgen/0000-0003-0327-8094; Roto, Virpi/0000-0002-6880-5636;
   Abrahamsson, Pekka/0000-0002-4360-2226; Kettunen,
   Petri/0000-0002-2928-5885
FU Tekes - the Finnish Funding Agency for Technology and Innovation;
   Scalable High Performing Software Design Teams research project; N4S
   Program of DIGILE (Finnish Strategic Centre for Science, Technology and
   Innovation)
FX This work was supported by Tekes - the Finnish Funding Agency for
   Technology and Innovation, as part of the Scalable High Performing
   Software Design Teams research project and the N4S Program of DIGILE
   (Finnish Strategic Centre for Science, Technology and Innovation in the
   field of ICT and digital business).
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Adolph S, 2012, J SYST SOFTWARE, V85, P1269, DOI 10.1016/j.jss.2012.01.059
   Altheide D., 1994, Handbook of Qualitative Research pp, P485
   Ancona D, 2002, MIT SLOAN MANAGE REV, V43, P33
   [Anonymous], P 18 INT C EV ASS SO
   [Anonymous], 2000, IND CORP CHANGE, DOI DOI 10.1093/ICC/9.1.1
   [Anonymous], COGN TECHNOL WORK
   [Anonymous], P 6 INT C PRED MOD S
   [Anonymous], SIGSOFT SOFTW ENG NO
   [Anonymous], 2013, Lean Enterprise Software and Systems, DOI DOI 10.1007/978-3-642-44930-7_4
   [Anonymous], CONCEPTUAL FRAMEWORK
   [Anonymous], 1982, The Original KJ Method
   [Anonymous], 38 EUROMICRO C SOFTW
   [Anonymous], 2007, Basics of qualitative research: Techniques and procedures for developing grounded theory
   [Anonymous], FRAUNHOFER IESE SERI
   [Anonymous], 2010, BELIEF KNOWLEDGE ACH
   ASTEDTKURKI P, 1994, J ADV NURS, V20, P418, DOI 10.1111/j.1365-2648.1994.tb02375.x
   Baddoo N., 2006, Software Process Improvement and Practice, V11, P219, DOI 10.1002/spip.265
   Bannerman S, 2011, EMPIR SOFTW ENG, V16, P177, DOI 10.1007/s10664-010-9137-5
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Bergersen GR, 2011, INT SYMP EMP SOFTWAR, P305, DOI 10.1109/ESEM.2011.39
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Beyer H, 1999, INTERACTIONS, V6, P32, DOI DOI 10.1145/291224.291229
   Cedergren S, 2014, INFORM SOFTWARE TECH, V56, P516, DOI 10.1016/j.infsof.2013.11.006
   Creswell J. W., 2013, RES DESIGN QUALITATI
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dingsoyr T., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P27, DOI 10.1109/CHASE.2012.6223016
   Dingsoyr T, 2013, LECT NOTES BUS INF P, V149, P46
   Dorairaj Siva, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P81, DOI 10.1049/ic.2012.0011
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fagerholm Fabian, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P73, DOI 10.1109/ICSSP.2012.6225984
   Franca A. Cesar C., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P154, DOI 10.1049/ic.2011.0019
   Freeman M., 1992, PROJECT MANAGEMENT J, V23, P8, DOI DOI 10.1057/9781137356260.0014
   GLADSTEIN DL, 1984, ADMIN SCI QUART, V29, P499, DOI 10.2307/2392936
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   GRAEN GB, 1995, LEADERSHIP QUART, V6, P219, DOI 10.1016/1048-9843(95)90036-5
   Graziotin D, 2013, LECT NOTES COMPUT SC, V7983, P50, DOI 10.1007/978-3-642-39259-7_7
   Hackman J.R., 1987, Handbook of organizational behavior
   Hackman Jr, 1998, SOC PSYCH A, V4, P245
   Hall T, 2007, SOFTWARE QUAL J, V15, P365, DOI 10.1007/s11219-007-9028-1
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Hofstede G., 1980, CULTURAL CONSEQUENCE
   Holtzblatt K., 1997, CONTEXTUAL DESIGN DE
   HYMAN RB, 1993, COMMUN ACM, V36, P57, DOI 10.1145/163430.163444
   Ikonen Marko, 2011, International Journal of Innovation in the Digital Economy, V2, P11, DOI 10.4018/jide.2011070102
   Katzenbach J.R. Smith., 1993, The wisdom of teams: Creating the high-performance organization
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kvale S., 2012, DOING INTERVIEWS
   Liang TP, 2007, IND MANAGE DATA SYST, V107, P636, DOI 10.1108/02635570710750408
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Marks A, 2005, INT J HUM RESOUR MAN, V16, P219, DOI 10.1080/0958519042000311417
   McGrath J.E., 1964, NEW PERSPECTIVES ORG, P533
   Merriam S. B., 2015, Qualitative research: A guide to design and implementation
   Nidumolu S. R., 1996, Journal of Management Information Systems, V13, P77
   Passos C, 2011, INT SYMP EMP SOFTWAR, P444, DOI 10.1109/ESEM.2011.63
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P24, DOI 10.1145/2568225.2568261
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Saldana J., 2015, CODING MANUAL QUALIT
   SCHNEIDER SC, 1988, HUM RESOURCE MANAGE, V27, P231, DOI 10.1002/hrm.3930270207
   Shaw T., 2004, Proceedings of the 2004 SIGMIS conference on computer personnel research: Careers, culture and ethics in a networked environment (SIGMIS CPR '04), P124, DOI DOI 10.1145/982372.982403
   Sudhakar GP, 2011, TEAM PERFORM MANAG, V17, P187, DOI 10.1108/13527591111143718
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
   Yang HD, 2008, EUR J INFORM SYST, V17, P47, DOI 10.1057/palgrave.ejis.3000730
   Yang HL, 2004, INFORM MANAGE-AMSTER, V41, P335, DOI 10.1016/S0378-7206(03)00078-8
   Yin R.K., 2014, Applications of case study research, V2nd
NR 69
TC 40
Z9 45
U1 1
U2 77
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2015
VL 64
BP 132
EP 147
DI 10.1016/j.infsof.2015.01.010
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CJ3EB
UT WOS:000355365100009
DA 2024-07-18
ER

PT J
AU Sellami, A
   Hakim, H
   Abran, A
   Ben-Abdallah, H
AF Sellami, Asma
   Hakim, Hela
   Abran, Alain
   Ben-Abdallah, Hanene
TI A measurement method for sizing the structure of UML sequence diagrams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE COSMIC ISO 19761; UML sequence diagram; Combined fragment; Functional
   size measurement; Structural size measurement; Different levels of
   granularity
AB Context: The COSMIC functional size measurement method on UML diagrams has been investigated as a means to estimate the software effort early in the software development life cycle. Like other functional size measurement methods, the COSMIC method takes into account the data movements in the UML sequence diagrams for example, but does not consider the data manipulations in the control structure. This paper explores software sizing at a finer level of granularity by taking into account the structural aspect of a sequence diagram in order to quantify its structural size. These functional and structural sizes can then be used as distinct independent variables to improve effort estimation models.
   Objective: The objective is to design an improved measurement of the size of the UML sequence diagrams by taking into account the data manipulations represented by the structure of the sequence diagram, which will be referred to as their structural size.
   Method: While the design of COSMIC defines the functional size of a functional process at a high level of granularity (i.e. the data movements), the structural size of a sequence diagram is defined at a finer level of granularity: the size of the flow graph of their control structure described through the alt, opt and loop constructs. This new measurement method was designed by following the process recommended in Software Metrics and Software Metrology (Abran, 2010).
   Results: The size of sequence diagrams can now be measured from two perspectives, both functional and structural, and at different levels of granularity with distinct measurement units.
   Conclusion: It is now feasible to measure the size of functional requirements at two levels of granularity: at an abstract level, the software functional size can be measured in terms of COSMIC Function Point (CFP) units; and at a detailed level, the software structural size can be measured in terms of Control Structure Manipulation (CSM) units. These measures represent complementary aspects of software size and can be used as distinct independent variables to improve effort estimation models. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Sellami, Asma; Hakim, Hela] Univ Sfax, Comp Sci Engn Dept, Sfax, Tunisia.
   [Abran, Alain] Univ Quebec, Software Engn & Informat Technol Dept, Ecole Technol Super, Ste Foy, PQ G1V 2M3, Canada.
   [Ben-Abdallah, Hanene] King Abdulaziz Univ, Dept Informat Syst, Jeddah, Saudi Arabia.
C3 Universite de Sfax; University of Quebec; King Abdulaziz University
RP Hakim, H (corresponding author), Univ Sfax, Comp Sci Engn Dept, Sfax, Tunisia.
RI Abran, Alain/I-2493-2016; Sellami, Asma/ITU-5279-2023; Ben-Abdallah,
   Hanene/L-1239-2014
OI Abran, Alain/0000-0003-2670-9061; Sellami, Asma/0000-0002-6739-5508;
   Ben-Abdallah, Hanene/0000-0001-9215-4661
CR Abran A., 2010, Software metrics and software metrology
   Abran A., 2009, 197612003 ISOIEC COS
   [Anonymous], 2011, ISOIEC19761
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2002, ISOIEC20968
   [Anonymous], 9 INT WORKSH SOFTW M
   [Anonymous], 2008, ISOIEC29881
   [Anonymous], 2005, ISOIEC24570
   [Anonymous], 2009, ISOIEC20926
   [Anonymous], 2007, ISOIEC141431
   Ben-Abda A., 2008, MODELISATION SYSTEME
   Berg K.v.d., 2005, 2 SOFTW MEAS EUR FOR, P69
   Gabay J., 2008, UML 2 ANAL CONCEPTIO
   Hill P., 2010, Practical Software Project Estimation
   Lavazza L., 2009, INT C SOFTW PROC PRO
   Lavazza Luigi, 2010, P 2010 ACM IEEE INT, P1
   Levesque G., 2008, C3S2E C C3S2E 08 MON
   Nagano S., 2003, 13 INT WORKSH SOFTW
   OMG, 2011, DOC ASS UN MOD LANG
   Parada A., 2011, WORKSH SIST EMB FLOR
   Roque P., 2009, UML2 PRATIQUE
   Sellami A., 2009, 14 INT C SOFTW ENG A
   Sellami A., 2013, 8 INT C EV NOV SOFTW
   VIM, 2007, BAS GEN CONC ASS TER
NR 25
TC 11
Z9 11
U1 1
U2 19
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 222
EP 232
DI 10.1016/j.infsof.2014.11.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200013
DA 2024-07-18
ER

PT J
AU Khurum, M
   Fricker, S
   Gorschek, T
AF Khurum, Mahvish
   Fricker, Samuel
   Gorschek, Tony
TI The contextual nature of innovation - An empirical investigation of
   three software intensive products
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Contextual factors; Legacy; Process; Empirical; Software intensive
   product development; Requirements engineering
ID TECHNOLOGY-TRANSFER; SUCCESS; DETERMINANTS; INDUSTRIAL; WINNERS;
   SYSTEMS; TRENDS; PDMA
AB Context: New products create significant opportunities for differentiation and competitive advantage. To increase the chances of new product success, a universal set of critical activities and determinants have been recommended. Some researchers believe, however, that these factors are not universal, but are contextual.
   Objective: This paper reports innovation processes followed to develop three software intensive products for understanding how and why innovation practice is dependent on innovation context.
   Method: This paper reports innovation processes and practices with an in-depth multi-case study of three software product innovations from Ericsson, IBM, and Rorotika. It describes the actual innovation processes followed in the three cases and discusses the observed innovation practice and relates it to state-of-the-art.
   Results: The cases point to a set of contextual factors that influence the choice of innovation activities and determinants for developing successful product innovations. The cases provide evidence that innovation practice cannot be standardized, but is contextual in nature.
   Conclusion: The rich description of the interaction between context and innovation practice enables future investigations into contextual elements that influence innovation practice, and calls for the creation of frameworks enabling activity and determinant selection for a given context -since one size does not fit all. (C) 2014 Published by Elsevier B.V.
C1 [Khurum, Mahvish] KMH Solut, London E18 2FL, England.
   [Fricker, Samuel; Gorschek, Tony] Bleking Inst Technol, SE-37179 Karlskrona, Sweden.
RP Khurum, M (corresponding author), KMH Solut, London E18 2FL, England.
EM Maha.Khurum@gmail.com; Samuel.Fricker@bth.se; Tony.Gorschek@bth.se
FU Knowledge Foundation in Sweden [20100311]
FX We would like to thank all the participants from the companies for their
   valuable input in the case studies and feedback on the paper. This work
   is part of the BESQ+ research project funded by the Knowledge Foundation
   (Grant: 20100311) in Sweden.
CR ABERNATHY WJ, 1985, RES POLICY, V14, P3, DOI 10.1016/0048-7333(85)90021-6
   Aiman-Smith L, 2005, RES TECHNOL MANAGE, V48, P37, DOI 10.1080/08956308.2005.11657303
   ANDRIOLE SJ, 1994, IEEE SOFTWARE, V11, P85, DOI 10.1109/52.268964
   [Anonymous], 1992, TEMPLATE APPROACH TE
   [Anonymous], 2008, CASE STUDY RES DESIG
   Aschhoff B, 2008, REV IND ORGAN, V33, P41, DOI 10.1007/s11151-008-9179-7
   Balachandra R, 1997, IEEE T ENG MANAGE, V44, P276, DOI 10.1109/17.618169
   Barczak G, 2009, J PROD INNOVAT MANAG, V26, P3, DOI 10.1111/j.1540-5885.2009.00331.x
   Baron RA, 2011, J BUS VENTURING, V26, P49, DOI 10.1016/j.jbusvent.2009.06.002
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boyatzis R.E., 1998, TRANSFORMING QUALITA
   Cefis E, 2006, RES POLICY, V35, P626, DOI 10.1016/j.respol.2006.02.006
   Chiesa V, 1996, J PROD INNOVAT MANAG, V13, P105, DOI 10.1016/0737-6782(95)00109-3
   Cohen MA, 1996, MANAGE SCI, V42, P173, DOI 10.1287/mnsc.42.2.173
   Cooper R.G., 1979, IND MARKET MANAG, V8, P124
   Cooper RG, 1996, IND MARKET MANAG, V25, P465, DOI 10.1016/S0019-8501(96)00062-4
   COOPER RG, 1993, J PROD INNOVAT MANAG, V10, P90, DOI 10.1016/0737-6782(93)90002-8
   COOPER RG, 1979, J MARKETING, V43, P93, DOI 10.2307/1250151
   COOPER RG, 1985, J PROD INNOVAT MANAG, V2, P34, DOI 10.1016/0737-6782(85)90014-1
   COOPER RG, 1986, J PROD INNOVAT MANAG, V3, P71, DOI 10.1111/1540-5885.320071
   Cormican K, 2004, TECHNOVATION, V24, P819, DOI 10.1016/S0166-4972(03)00013-0
   Cusumano M.A., 2004, The business of software
   Dakhli M, 2004, ENTREP REGION DEV, V16, P107, DOI 10.1080/08985620410001677835
   Daly J., 1997, The public health researcher: A methodological approach
   De Jong J.P. J., 2003, INT J INNOV MANAG, V7, P189
   De Lucia A., 2001, IEEE INT C SOFTW MAI
   Denne M, 2004, IEEE SOFTWARE, V21, P39, DOI 10.1109/MS.2004.1293071
   Dobni C.B., 2006, BUS HORIZONS, V49, P329
   du Plessis Marina, 2007, Journal of Knowledge Management, V11, P20, DOI 10.1108/13673270710762684
   Edison H., 2012, J SYSTEMS S IN PRESS, DOI [10.1016/jjss.2013.01.013, DOI 10.1016/JJSS.2013.01.013]
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Ernst H, 2002, INT J MANAG REV, V4, P1, DOI 10.1111/1468-2370.00075
   Finders F., 1996, SW BELL TELEPHONE PR
   Fitzgerald C.A., 2008, The Journal of High Technology Management Research, V19, P36
   Franke N, 2006, J PROD INNOVAT MANAG, V23, P301, DOI 10.1111/j.1540-5885.2006.00203.x
   Fricker S.A., 2012, SOFTWARE PEOPLE MANA
   Garcia R, 2002, J PROD INNOVAT MANAG, V19, P110, DOI 10.1016/S0737-6782(01)00132-1
   Georgsdottir A.S., 2004, CREAT INNOV MANAG, V13, P166, DOI [DOI 10.1111/J.0963-1690.2004.00306.X, 10.1111/j.0963-1690.2004.00306.x]
   Gorschek T., 2010, IEEE SOFTWARE, V27
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Green DR, 2002, CANCER CELL, V1, P19, DOI 10.1016/S1535-6108(02)00024-7
   Griffin A, 1997, J PROD INNOVAT MANAG, V14, P429
   Hanna V, 2002, R&D MANAGE, V32, P201, DOI 10.1111/1467-9310.00253
   Hoegl M., TEAMWORK QUALITY SUC, V12, P435
   Humphreys P, 2005, EUR J INNOV MANAG, V8, P283, DOI 10.1108/14601060510610162
   Ivarsson M, 2012, INT J SOFTW ENG KNOW, V22, P17, DOI 10.1142/S0218194012500027
   James P.A., 2008, A BCG senior management survey-measuring innovation 2008: Squandered opportunities
   Kahn KB, 2012, J PROD INNOVAT MANAG, V29, P180, DOI 10.1111/j.1540-5885.2011.00888.x
   Kay J.A., 1995, FDN CORPORATE SUCCES
   KLEINSCHMIDT EJ, 1991, J PROD INNOVAT MANAG, V8, P240, DOI 10.1016/0737-6782(91)90046-2
   Lai HC, 2005, TECHNOVATION, V25, P805, DOI 10.1016/j.technovation.2003.11.004
   Lalanda P., 2011, ACM INT C SYST PROGR
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Liebowitz J., 2000, Journal of Intellectual Capital, V1, P54, DOI DOI 10.1108/14691930010324160
   Love JH, 1999, REV IND ORGAN, V15, P43, DOI 10.1023/A:1007757110963
   Lynn GS, 1996, CALIF MANAGE REV, V38, P8, DOI 10.2307/41165841
   MAIDIQUE MA, 1984, IEEE T ENG MANAGE, V31, P192, DOI 10.1109/TEM.1984.6447537
   Mcloughlin I., 1999, Creative technological change: the shaping of technology and organisations
   McMillan Charles, 2010, Journal of Business Strategy, V31, P11, DOI 10.1108/02756661011012741
   Mello S., 1995, MAN ROUNDT C PROD DE
   Milne A, 2012, REQUIR ENG, V17, P83, DOI 10.1007/s00766-012-0151-6
   Morgan DL, 1996, ANNU REV SOCIOL, V22, P129, DOI 10.1146/annurev.soc.22.1.129
   O'Conner GC, 1998, J PROD INNOVAT MANAG, V15, P151, DOI 10.1111/1540-5885.1520151
   OLSON EM, 1995, J MARKETING, V59, P48, DOI 10.2307/1252014
   Ortt JR, 2008, EUR J INNOV MANAG, V11, P522, DOI 10.1108/14601060810911147
   Park Y, 2004, TECHNOVATION, V24, P387, DOI 10.1016/S0166-4972(02)00099-8
   Patton MQ., 2002, Qualitative research evaluation methods, P40
   Radosevic Slavo., 1999, STRUCT CHANGE ECON D, V10, P277, DOI [DOI 10.1016/S0954-349X, 10.1016/S0954-349X(99)00016-8, DOI 10.1016/S0954-349X(99)00016-8]
   Rice P., 1999, QUALITATIVE RES METH
   Robson C., 2002, Real world research
   ROCHFORD L, 1991, IND MARKET MANAG, V20, P287, DOI 10.1016/0019-8501(91)90003-X
   Rothwell R., 1972, FACTORS SUCCESS IND
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SNEED HM, 1995, IEEE SOFTWARE, V12, P24, DOI 10.1109/52.363168
   Song X., 1993, Journal of the Academy of Marketing Science, V21, P125
   Song XM, 1997, J MARKETING RES, V34, P64, DOI 10.2307/3152065
   Song XM, 1996, J PROD INNOVAT MANAG, V13, P422, DOI 10.1016/0737-6782(96)00055-0
   Song XM, 1998, J PROD INNOVAT MANAG, V15, P124, DOI 10.1016/S0737-6782(97)00077-5
   Stake Robert E., 1995, The Art of Case Study Research
   Subramaniam M, 2005, ACAD MANAGE J, V48, P450, DOI 10.2307/20159670
   Sundbo J., 1998, THEORY INNOVATION EN
   Swink M, 2006, RES TECHNOL MANAGE, V49, P37, DOI 10.1080/08956308.2006.11657367
   Teece DJ, 1997, STRATEGIC MANAGE J, V18, P509, DOI 10.1002/(SICI)1097-0266(199708)18:7<509::AID-SMJ882>3.0.CO;2-Z
   Tessarolo P, 2007, J PROD INNOVAT MANAG, V24, P69, DOI 10.1111/j.1540-5885.2006.00233.x
   Tobin GA, 2004, J ADV NURS, V48, P388, DOI 10.1111/j.1365-2648.2004.03207.x
   Ulrich K., 2012, PORUDCT DESIGN DEV
   van de Weerd I., 2006, 14 IEEE INT REQ ENG
   Varian HR, 2000, J IND ECON, V48, P473
   VOSS CA, 1985, J PROD INNOVAT MANAG, V2, P122, DOI 10.1111/1540-5885.220122
   Walters D, 2007, J ENTERP INF MANAG, V20, P595, DOI 10.1108/17410390710823725
   Wan D, 2005, TECHNOVATION, V25, P261, DOI 10.1016/S0166-4972(03)00096-8
   WILLIAMS CR, 1994, ACAD MANAGE J, V37, P269, DOI 10.5465/256830
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 95
TC 13
Z9 14
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 595
EP 613
DI 10.1016/j.infsof.2014.06.010
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AU9YI
UT WOS:000345947500033
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Paydar, S
   Kahani, M
AF Paydar, Samad
   Kahani, Mohsen
TI A semi-automated approach to adapt activity diagrams for new use cases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model reuse; Semantic web; Activity diagram; Use case; Adaptation
ID MODEL-DRIVEN DEVELOPMENT; SOFTWARE REUSE; WEB; UML; REQUIREMENTS;
   RETRIEVAL; WORDNET
AB Context: Web engineering methodologies generally assign a crucial role to design models. Therefore, providing a model reuse approach is very interesting since it reduces development costs and improves quality. Current works on model reuse mainly focus on retrieval of the promising reusable assets, and much less is done regarding adaptation of the retrieved assets. This research proposes a semi-automatic approach for adaptation of UML activity diagrams to new use cases.
   Objective: UML use case diagrams and activity diagrams are traditionally used for the brief and the detailed specification of the functional requirements. Since many web applications have similar functionalities, and hence similar functional requirements, this research proposes an approach to take a use case diagram as input and semi-automatically create corresponding activity diagrams by adapting existing activity diagrams.
   Method: The proposed approach includes five main components: (1) a model repository, (2) an ontology repository as a source of domain knowledge, (3) an algorithm for annotating activity diagrams, (4) a similarity metric for retrieval of similar use cases, and (5) an adaptation algorithm for creating activity diagram of a new use case from an existing activity diagram The proposed approach uses the semantic web data model as the underlying representation format.
   Results: The initial experiments show that the proposed approach is promising and it provides an average reuse percent of 76%. However, it has still some weaknesses like being much dependent on the quality of the model repository and having low tolerance in case of inconsistency in the model repository.
   Conclusion: Enabling model reuse in the early stages of a model based development approach is very important in reducing development costs. This paper proposes a semi-automatic approach to reuse activity diagrams through their adaptation for new use cases. The approach is demonstrated to be promising although it has still some limitations. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Paydar, Samad; Kahani, Mohsen] Ferdowsi Univ Mashhad, Dept Comp Engn, Mashhad, Iran.
C3 Ferdowsi University Mashhad
RP Paydar, S (corresponding author), Ferdowsi Univ Mashhad, Dept Comp Engn, Azadi Sq, Mashhad, Iran.
EM samad.paydar@stu-mail.um.ac.ir
RI ; Kahani, Mohsen/P-6849-2014
OI Paydar, Samad/0000-0002-3370-2151; Kahani, Mohsen/0000-0002-2603-6066
CR Alani H., 2006, P 4 INT WORKSH EV ON
   Alchimowicz B, 2010, COMPUT INFORM, V29, P27
   Aguilar JA, 2010, J UNIVERS COMPUT SCI, V16, P2475
   Ali FM, 2004, INFORM SOFTWARE TECH, V46, P499, DOI 10.1016/S0950-5849(03)00089-2
   Alnusair Awny, 2010, 2010 IEEE International Conference on Information Reuse & Integration (IRI 2010), P258, DOI 10.1109/IRI.2010.5558931
   Alnusair A., 2012, Recent Trends in Information Reuse and Integration, P363
   Alspaugh TA, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P142, DOI 10.1109/ISRE.1999.777994
   Anda B, 2005, EMPIR SOFTW ENG, V10, P285, DOI 10.1007/s10664-005-1289-3
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], ONTOLOGIES SOFTWARE
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Bagheri E, 2012, AUTOMAT SOFTW ENG, V19, P335, DOI 10.1007/s10515-011-0099-7
   Bauer Bernhard, 2006, LECT NOTES INFORMATI, V94, P293
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Berners-Lee T., 2006, Linked Data-Design Issues
   Bislimovska B., 2011, 11 INT C WEB ENG ICW
   Bizer C, 2009, J WEB SEMANT, V7, P154, DOI 10.1016/j.websem.2009.07.002
   Bloc M.C., 1998, P 5 AS PAC SOFTW ENG
   Bonilla-Morales B., 2012, International Journal of Computer Science Issues, V9, P24
   Bozzon A, 2010, LECT NOTES COMPUT SC, V6189, P1, DOI 10.1007/978-3-642-13911-6_1
   Butler G., 1999, REUSABLE OBJECT ORIE, P19
   Castaneda V., 2012, IMPROVING QUALITY SO
   Castaneda V., 2010, J RESEARCHES ENG, V10, P2
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   Chen Y, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P199
   Conallen J., 2002, BUILDING WEB APPL UM
   Conallen Jim., 2003, BUILDING WEB APPL UM
   Damiani E., 2009, SEMANTIC KNOWLEDGE M, P1
   Dasgupta S., 2007, 5 INT EON WORKSH EV
   De Troyer OMF, 1998, COMPUT NETWORKS ISDN, V30, P85, DOI 10.1016/S0169-7552(98)00042-7
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Durao FA, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P1151
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Escalona MJ, 2007, LECT NOTES BUS INF P, V1, P267
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Fraternali P., 1998, P C EXT DAT TECHN ED
   Gomes P, 2004, AI COMMUN, V17, P13
   Gomes P, 2002, FR ART INT, V77, P245
   Gomes P, 2007, LECT NOTES COMPUT SC, V4626, P449
   Gronmo R, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a8
   Guarino N, 2000, FRONT ARTIF INTEL AP, V54, P219
   HAMILTON K, 2006, LEARNING UML 2 0
   HAPPEL H., 2006, INT WORKSHOP SEMANTI, P1
   Hartig O., 2008, 4 INT WORKSH SEM WEB
   Houben GJ, 2004, LECT NOTES COMPUT SC, V3140, P60
   *IEEE, 1998, 8301998 ANSIIEEE
   Ilieva Magda G., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P478
   Iqbal A., 2009, 21 INT C SOFTW ENG K
   Jacobson A., 2004, Software and System Modeling, V3, P210, DOI [10.1007/s10270-004-0060-3, DOI 10.1007/S10270-004-0060-3]
   Keivanloo I., 2010, 6 INT WORKSH SEM WEB
   Kling Wolfgang, 2011, P 4 INT C SOFTW LANG, V6940, P180
   Koch Nora, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P215, DOI 10.1007/978-3-642-31753-8_16
   Koch N., 2008, Web Engineering: Modelling and Implementing Web Applications, P157, DOI 10.1007/978-1-84628-923-1_7
   Koch N., 2012, 3 WORKSH WEB REQ ENG
   Koch N., 2000, THESIS LUDWIG MAXIMI
   Korner S.J., 2008, SOFTW ENG KNOWL ENG
   Korner S.J., 2009, SOFTW ENG KNOWL ENG
   Liang Y, 2003, INFORM SOFTWARE TECH, V45, P83, DOI 10.1016/S0950-5849(02)00164-7
   Lin D., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P296
   Lucrédio D, 2008, LECT NOTES COMPUT SC, V5301, P296, DOI 10.1007/978-3-540-87875-9_22
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Mill H., 1995, IEEE T SOFTWARE ENG, V22
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Murugesan S., 2008, WEB ENG MODELLING IM
   MURUGESAN S, 1999, 1 ICSE WORKSH WEB EN, P1
   Nowick E., 2005, LIB PHILOS PRACT, V7
   OMG, 2011, OMG UN MOD LANG OMG
   OMG, 2005, MOD DRIV ARCH
   Park W.J., 2010, J INFORM SOFTW TECHN, V53, P230
   Paydar S., 2012, INT C COMP KNOWL ENG
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   POULIN JS, 1993, IBM SYST J, V32, P567, DOI 10.1147/sj.324.0567
   PRASAD A, 1994, J SYST SOFTWARE, V27, P207, DOI 10.1016/0164-1212(94)90043-4
   Robinson WN, 2004, IEEE SOFTWARE, V21, P60, DOI 10.1109/MS.2004.1331304
   Robles K, 2012, INFORM SOFTWARE TECH, V54, P72, DOI 10.1016/j.infsof.2011.07.003
   Saeki M., 1999, Proceedings Sixth Asia Pacific Software Engineering Conference (ASPEC'99) (Cat. No.PR00509), P309, DOI 10.1109/APSEC.1999.809617
   Salami Hamza Onoruoiza, 2013, International Journal of Soft Computing and Software Engineering, V3, P115, DOI 10.7321/jscse.v3.n3.19
   Salami H.O., 2012, 24 INT C SOFTWARE EN, P737
   Samarasinghe N., 2005, GENERATING DOMAIN MO
   SCHWINGER W, 2006, WEB ENG SYSTEMATIC D, P39
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Sen A, 1997, IEEE T SOFTWARE ENG, V23, P418, DOI 10.1109/32.605760
   Shahri H.H., 2007, 3 INT WORKSH SEM WEB
   Sleeman D., 2006, 4 INT WORKSH EV ONT
   Smialek M, 2010, LECT NOTES COMPUT SC, V5901, P697
   Somé SS, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P456
   Srisura B., 2010, Journal of Theoretical and Applied Information Technology, V19, P68
   Sungwon Kang, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P431, DOI 10.1109/COMPSAC.2010.51
   Tappolet J, 2010, J WEB SEMANT, V8, P225, DOI 10.1016/j.websem.2010.04.009
   Udomchaiporn A, 2006, ASPEC 2006: 13th Asia-Pacific Software Engineering Conference, Proceedings, P113
   Valderas P, 2011, ACM T WEB, V5, DOI 10.1145/1961659.1961664
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   VILAIN P, 2000, 1200 MCC PUC RIO DEP
   Wohed P., 2005, 24 INT C CONC MOD, P24
   Yao HN, 2008, J AM SOC INF SCI TEC, V59, P613, DOI 10.1002/asi.20775
   Yue T., 2013, T SOFTW ENG METHODOL, V22
   Yue T., 2010, 201015 SIM RES LAB
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Yue T, 2010, LECT NOTES COMPUT SC, V6138, P337
   Zhibiao Wu, 1994, 32nd Annual Meeting of the Association for Computational Linguistics. Proceedings of the Conference, P133
   [No title captured]
NR 103
TC 8
Z9 9
U1 0
U2 17
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 543
EP 570
DI 10.1016/j.infsof.2014.06.007
PG 28
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AU9YI
UT WOS:000345947500031
DA 2024-07-18
ER

PT J
AU Gu, TX
   Cao, C
   Xu, C
   Ma, XX
   Zhang, LH
   Lü, J
AF Gu, Tianxiao
   Cao, Chun
   Xu, Chang
   Ma, Xiaoxing
   Zhang, Linghao
   Lu, Jian
TI Low-disruptive dynamic updating of Java applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Dynamic software updating; JVM; Lazy updating; Low disruption
AB Context: In-use software systems are destined to change in order to fix bugs or add new features. Shutting down a running system before updating it is a normal practice, but the service unavailability can be annoying and sometimes unacceptable. Dynamic software updating (DSU) migrates a running software system to a new version without stopping it. State-of-the-art Java DSU systems are unsatisfactory as they may cause a non-negligible system pause during updating.
   Objective: In this paper we present Javelus, a Java HotSpot VM-based Java DSU system with very short pausing time.
   Method: Instead of updating everything at once when the running application is suspended, Javelus only updates the changed code during the suspension, and migrates stale objects on-demand after the application is resumed. With a careful design this lazy approach neither sacrifices the update flexibility nor introduces unnecessary object validity checks or access indirections.
   Results: Evaluation experiments show that Javelus can reduce the updating pausing time by one to two orders of magnitude without introducing observable overheads before and after the dynamic updating.
   Conclusion: Our experience with Javelus indicates that low-disruptive and type-safe dynamic updating of Java applications can be practically achieved with a lazy updating approach. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Cao, Chun] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
   Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210008, Jiangsu, Peoples R China.
C3 Nanjing University; Nanjing University
RP Cao, C (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Jiangsu, Peoples R China.
EM tianxiao.gu@gmail.com; caochun@nju.edu.cn; changxu@nju.edu.cn;
   xxm@nju.edu.cn; zlh.nju@gmail.com; lj@nju.edu.cn
RI Xu, Chang/O-4543-2015; Ma, Xiaoxing/K-4290-2012; Ma,
   Xiaoxing/X-6505-2018
OI Ma, Xiaoxing/0000-0001-7970-1384
FU 863 Program [2013AA01A213]; National Nature Science Foundation of China
   [61100038, 91318301, 61321491, 61361120097]; New Century Excellent
   Talents in University, China [NCET-10-0486]
FX We thank the anonymous reviewers for their detailed and helpful comments
   and suggestions. This research was partially funded by the 863 Program
   (2013AA01A213) and National Nature Science Foundation (61100038,
   91318301, 61321491, 61361120097) of China. Chang Xu was also partially
   supported by Program for New Century Excellent Talents in University,
   China (NCET-10-0486),
CR Ajmani S, 2006, LECT NOTES COMPUT SC, V4067, P452
   ANDERSON JS, 2000, P INT C GEOSP INF AG, P1
   [Anonymous], P WORKSH ENG COMPL O
   Bialek R, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P616, DOI 10.1109/APSEC.2004.71
   Bialek R, 2004, 24TH INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, PROCEEDINGS, P326, DOI 10.1109/ICDCSW.2004.1284050
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   Chen HB, 2011, IEEE T SOFTWARE ENG, V37, P679, DOI 10.1109/TSE.2010.79
   DALEY RC, 1968, COMMUN ACM, V11, P306, DOI 10.1145/363095.363139
   DMITRIEV M, 2001, THESIS U GLASGOW
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gregersen A.R., 2009, P WORKSH AOP MET SOF, P2
   Gregersen AR, 2009, J SOFTW MAINT EVOL-R, V21, P81, DOI 10.1002/smr.406
   Gu TX, 2012, ASIA PAC SOFWR ENG, P527, DOI 10.1109/APSEC.2012.55
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Kabanov J., 2012, 1000 YEARS PRODUCTIV
   Kabanov J, 2010, ELECTRON NOTES THEOR, V264, P51, DOI 10.1016/j.entcs.2011.02.005
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Liang S, 1998, ACM SIGPLAN NOTICES, V33, P36, DOI 10.1145/286942.286945
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Ma X., 2011, SIGSOFT/FSE'11 19th ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE-19) and ESEC'11: 13th European Software Engineering Conference (ESEC-13), Szeged, Hungary, September 5-9, 2011, P245, DOI [10.1145/2025113.2025148, DOI 10.1145/2025113.2025148]
   Makris Kristis, 2009, P C USENIX ANN TECHN, P1
   Malabarba S, 2000, LECT NOTES COMPUT SC, V1850, P337
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   Neamtiu I, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P13, DOI 10.1145/1542476.1542479
   Nicoara A, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P233, DOI 10.1145/1357010.1352617
   Oracle, 2006, JAV HOTSPOT PERF ENG
   Orso A, 2002, PROC IEEE INT CONF S, P649, DOI 10.1109/ICSM.2002.1167829
   Pukall M, 2013, SOFTWARE PRACT EXPER, V43, P153, DOI 10.1002/spe.2107
   Subramanian S, 2009, ACM SIGPLAN NOTICES, V44, P1, DOI 10.1145/1543135.1542478
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Würthinger T, 2013, SCI COMPUT PROGRAM, V78, P481, DOI 10.1016/j.scico.2011.06.005
   Wurthinger Thomas., 2010, P 8 INT C PRINC PRAC, P10, DOI [DOI 10.1145/1852761.1852764, 10.1145/1852761.1852764]
NR 34
TC 16
Z9 22
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2014
VL 56
IS 9
BP 1086
EP 1098
DI 10.1016/j.infsof.2014.04.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AJ6ER
UT WOS:000337783000003
DA 2024-07-18
ER

PT J
AU Kim, S
   Kim, DK
   Lu, LJ
   Song, E
AF Kim, Sangsig
   Kim, Dae-Kyoo
   Lu, Lunjin
   Song, Eunjee
TI Building hybrid access control by configuring RBAC and MAC features
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature modeling; Hybrid access control; MAC; RBAC; UML
ID INTEGRITY PROTECTION
AB Context: Role-Based Access Control (RBAC) and Mandatory Access Control (MAC) are widely used access control models. They are often used together in domains where both data integrity and information flow are concerned. However, there is little work on techniques for building hybrid access control of RBAC and MAC.
   Objective: In this work, we present a systematic approach for developing a hybrid access control model using feature modeling with the aim of reducing development complexity and error-proneness.
   Method: In the approach, RBAC and MAC are defined in terms of features based on partial inheritance. Features are then configured for specific access control requirements of an application. Configured features are composed homogeneously and heterogeneously to produce a hybrid access model for the application. The resulting hybrid model is then instantiated in the context of the application to produce an initial design model supporting both RBAC and MAC. We evaluate the approach using a hospital system and present its tool support.
   Results: RBAC and MAC features that are specifically configured for the application are systematically incorporated into a design model. The heterogeneous features of RBAC and MAC are not only present in the resulting model, but also semantically composed for seamless integration of RBAC and MAC. Discharging the proof obligations of composition rules to the resulting model proves its correctness. The successful development of the prototype demonstrates its practicality.
   Conclusion: Features in the access control domain are relatively small in size and are suitable to be defined as design building blocks. The formal definition of partial inheritance and composition methods in the presented approach enables precisely specifying access control features and feature configuration, which paves the way for systematic development of a hybrid access control model in an early development phase.(C) 2014 Elsevier B.V. All rights reserved.
C1 [Kim, Sangsig; Kim, Dae-Kyoo; Lu, Lunjin] Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
   [Song, Eunjee] Baylor Univ, Dept Comp Sci, Waco, TX 76798 USA.
C3 Oakland University; Baylor University
RP Kim, S (corresponding author), Oakland Univ, Dept Comp Sci & Engn, Rochester, MI 48309 USA.
EM skim2345@oakland.edu; kim2@oakland.edu; l2lu@oakland.edu;
   eunjee_song@baylor.edu
RI Kim, Daekyoo/HGE-1133-2022
OI Kim, Daekyoo/0000-0002-6123-2900
FU Korea Institute of Energy Technology Evaluation and Planning (KETEP)
   under the international collaborative RD program [20118530020020]
FX This research is supported in part by the Korea Institute of Energy
   Technology Evaluation and Planning (KETEP) under the international
   collaborative R&D program (20118530020020).
CR Alhaqbani B., 2007, Proceedings of the 2007 international conference on Business process management, P371, DOI DOI 10.1007/978-3-540-78238-4_38
   [Anonymous], MTR2997
   [Anonymous], 2000, P INT SCH FDN SEC AN
   Antkiewicz M., 2004, Proc. of the Wksp on Eclipse Technology eXchange, P67, DOI DOI 10.1145/1066129.1066143
   BADGER L, 1995, P IEEE S SECUR PRIV, P66, DOI 10.1109/SECPRI.1995.398923
   Bertino E., 2001, ACM Transactions on Information and Systems Security, V4, P191, DOI 10.1145/501978.501979
   Biba K.J., 1977, ESDTR76372 AIR FORC
   Chin S., 2010, Access Control, Security, and Trust: A Logical Approach
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   Ferraiolo DF, 2007, ROLE BASED ACCESS CO
   Fontoura M., 2002, The UML Profile for Framework Architectures
   Fraser T, 2000, P IEEE S SECUR PRIV, P230, DOI 10.1109/SECPRI.2000.848460
   Hansen Frode., 2003, Proceedings of the 7th Nordic Workshop on Secure IT Systems (NORDSEC), P129
   Hao Hu, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P605, DOI 10.1109/CSSE.2008.738
   HARRISON MA, 1976, COMMUN ACM, V19, P461, DOI 10.1145/360303.360333
   HAUGEN O, 2012, P SPLC 12, P266
   Joshi JBD, 2005, IEEE T KNOWL DATA EN, V17, P4, DOI 10.1109/TKDE.2005.1
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Kang K., 1990, CMUSEL90TR21 SEI CMU
   Kim S, 2011, J SYST SOFTWARE, V84, P2035, DOI 10.1016/j.jss.2011.03.084
   Kuhn D.R., 1998, Proc. of the 3rd ACM Wksp on RBAC, P25
   Kumar A., 2002, Operating Systems Review, V36, P53, DOI 10.1145/567331.567336
   Li NH, 2007, P IEEE S SECUR PRIV, P164, DOI 10.1109/SP.2007.37
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Ni Q, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P133
   Osborn S., 2000, ACM Transactions on Information and Systems Security, V3, P85, DOI 10.1145/354876.354878
   Osborn S., 1997, Proc. of the 2nd ACM Wksp on RBAC, P31
   Philips C.M., 2002, Paleovolcanology of the A-type Carlton Rhyolite, Blue Creek Canyon area, Wichita Mountains, southern Oklahoma, P1
   Priebe T., 2004, Proceedings of 18th Annual IFIP WG 11.3 Working Conference on Data and Application Security, Sitges, P25, DOI DOI 10.1007/1-4020-8126-616
   Ray I., 2003, P 6 IFIP TC 11 WG 11, P49
   Ray I, 2007, LECT NOTES COMPUT SC, V4602, P211
   Sandhu R., 1996, Computer Security-ESORICS 96. 4th European Symposium on Research in Computer Security Proceedings, P65
   Sandhu R. S., 1998, Advances in Computers, V46, P237
   SANDHU RS, 1993, COMPUTER, V26, P9, DOI 10.1109/2.241422
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   SANDHU RS, 1994, IEEE COMMUN MAG, V32, P40, DOI 10.1109/35.312842
   Sangsig Kim, 2011, Proceedings of the 2011 Fifth International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2011), P88, DOI 10.1109/SSIRI.2011.16
   Shan ZY, 2012, IEEE T DEPEND SECURE, V9, P541, DOI 10.1109/TDSC.2012.36
   Shin ME, 2000, IEEE 9TH INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P195, DOI 10.1109/ENABL.2000.883728
   The Object Management Group (OMG), 2002, XML MET INT VERS 1 2
   Triantaphyllou E., 1995, International Journal of Industrial Engineering: Applications and Practice, V2, P35
   Wang X., 2008, Electromagnetic compatibility, P1
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Yau SS, 2005, ISADS 2005: INTERNATIONAL SYMPOSIUM ON AUTONOMOUS DECENTRALIZED SYSTEMS,PROCEEDINGS, P17, DOI 10.1109/ISADS.2005.1452011
NR 44
TC 5
Z9 5
U1 2
U2 13
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2014
VL 56
IS 7
BP 763
EP 792
DI 10.1016/j.infsof.2014.02.003
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH3FW
UT WOS:000336010100005
DA 2024-07-18
ER

PT J
AU Fernández-Diego, M
   González-Ladrón-de-Guevara, F
AF Fernandez-Diego, Marta
   Gonzalez-Ladron-de-Guevara, Fernando
TI Potential and limitations of the ISBSG dataset in enhancing software
   engineering research: A mapping review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic mapping study; Research methods; Software engineering; ISBSG;
   Software effort estimation; Software cost prediction
AB Context: The International Software Benchmarking Standards Group (ISBSG) maintains a software development repository with over 6000 software projects. This dataset makes it possible to estimate a project's size, effort, duration, and cost.
   Objective: The aim of this study was to determine how and to what extent, ISBSG has been used by researchers from 2000, when the first papers were published, until June of 2012.
   Method: A systematic mapping review was used as the research method, which was applied to over 129 papers obtained after the filtering process.
   Results: The papers were published in 19 journals and 40 conferences. Thirty-five percent of the papers published between years 2000 and 2011 have received at least one citation in journals and only five papers have received six or more citations. Effort variable is the focus of 70.5% of the papers, 22.5% center their research in a variable different from effort and 7% do not consider any target variable. Additionally, in as many as 70.5% of papers, effort estimation is the research topic, followed by dataset properties (36.4%). The more frequent methods are Regression (61.2%), Machine Learning (35.7%), and Estimation by Analogy (22.5%). ISBSG is used as the only support in 55% of the papers while the remaining papers use complementary datasets. The ISBSG release 10 is used most frequently with 32 references. Finally, some benefits and drawbacks of the usage of ISBSG have been highlighted.
   Conclusion: This work presents a snapshot of the existing usage of ISBSG in software development research. ISBSG offers a wealth of information regarding practices from a wide range of organizations, applications, and development types, which constitutes its main potential. However, a data preparation process is required before any analysis. Lastly, the potential of ISBSG to develop new research is also outlined. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Fernandez-Diego, Marta; Gonzalez-Ladron-de-Guevara, Fernando] Univ Politecn Valencia, Dept Econ & Business, Valencia 46022, Spain.
C3 Universitat Politecnica de Valencia
RP Fernández-Diego, M (corresponding author), Univ Politecn Valencia, Dept Econ & Business, Camino Vera S-N, Valencia 46022, Spain.
EM marferdi@omp.upv.es; fgonzal@omp.upv.es
OI Fernandez-Diego, Marta/0000-0001-7340-2789
CR Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   Acuna Silvia T., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P42, DOI 10.1049/ic.2012.0005
   Afzal W., 2008, P 20 INT C SOFTW ENG
   Ahmed MA, 2009, INFORM SOFTWARE TECH, V51, P640, DOI 10.1016/j.infsof.2008.09.004
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], REAL WORLD RES RESOU
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], EFFORT ESTIMATION US
   [Anonymous], 2005, P 11 IEEE INT SOFTW
   Asoudeh N., 2012, ICSEA 2012 7 INT C S, P623
   Boehm BW., 1981, Software Engineering Economics
   Boetticher G., 2007, COMPUT SCI
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Bundschuh M., 2008, The IT Measurement compendium
   Desharnais JM., 1988, ANAL STAT PRODUCTIVI
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   He M, 2008, LECT NOTES COMPUT SC, V5007, P381
   ISBSG, 2013, ISBSG DAT REL 12
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B.A., 2010, P 14 INT C EV ASS SO
   Kultur Y., 2008, SIGSOFT '08/FSE-16: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P330
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Littlewood B, 2001, ACM COMPUT SURV, V33, P177, DOI 10.1145/384192.384195
   Mair C., 2005, WORKSHOP PREDICTOR M, P1, DOI [10.1145/1083165.1083166, DOI 10.1145/1083165.1083166]
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Muzaffar Z, 2010, INFORM SOFTWARE TECH, V52, P92, DOI 10.1016/j.infsof.2009.08.001
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Seo YS, 2013, EMPIR SOFTW ENG, V18, P659, DOI 10.1007/s10664-012-9207-y
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Yang Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P61
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 36
TC 24
Z9 26
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2014
VL 56
IS 6
BP 527
EP 544
DI 10.1016/j.infsof.2014.01.003
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG5VH
UT WOS:000335486300001
OA Green Published
DA 2024-07-18
ER

PT J
AU Rocha, RD
   Fantinato, M
AF Rocha, Roberto dos Santos
   Fantinato, Marcelo
TI The use of software product lines for business process management: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software product line; PL; Business process management; BPM
ID WEB SERVICES; INFORMATION-TECHNOLOGY; CONTRACT ESTABLISHMENT;
   VARIABILITY; ENTERPRISE; ALIGNMENT; QOS
AB Context: Business Process Management (BPM) is a potential domain in which Software Product Line (PL) can be successfully applied. Including the support of Service-oriented Architecture (SOA), BPM and PL may help companies achieve strategic alignment between business and IT.
   Objective: Presenting the results of a study undertaken to seek and assess PL approaches for BPM through a Systematic Literature Review (SLR). Moreover, identifying the existence of dynamic PL approaches for BPM.
   Method: A SLR was conducted with four research questions formulated to evaluate PL approaches for BPM.
   Results: 63 papers were selected as primary studies according to the criteria established. From these primary studies, only 15 papers address the specific dynamic aspects in the context evaluated. Moreover, it was found that PLs only partially address the BPM lifecycle since the last business process phase is not a current concern on the found approaches.
   Conclusions: The found PL approaches for BPM only cover partially the BPM lifecycle, not taking into account the last phase which restarts the lifecycle. Moreover, no wide dynamic PL proposal was found for BPM, but only the treatment of specific dynamic aspects. The results indicate that PL approaches for BPM are still at an early stage and gaining maturity. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Rocha, Roberto dos Santos; Fantinato, Marcelo] Univ Sao Paulo, Sch Arts Sci & Humanities, BR-03828000 Sao Paulo, Brazil.
C3 Universidade de Sao Paulo
RP Fantinato, M (corresponding author), Univ Sao Paulo, Sch Arts Sci & Humanities, Rua Arlindo Bettio 1000, BR-03828000 Sao Paulo, Brazil.
EM rsrocha@usp.br; m.fantinato@usp.br
RI Rocha, Roberto dos Santos Rocha/HGC-3891-2022; Santos Rocha, Roberto
   dos/I-5756-2013; Fantinato, Marcelo/G-1071-2012
OI Fantinato, Marcelo/0000-0001-6261-1497; Rocha,
   Roberto/0000-0003-2013-2134
FU Capes (Coordination for the Improvement of Higher Education Personnel,
   Brazil); Fapesp (Sao Paulo Research Foundation, Brazil); UFBA (Federal
   University of Bahia, Brazil)
FX The authors thank Capes (Coordination for the Improvement of Higher
   Education Personnel, Brazil) and Fapesp (Sao Paulo Research Foundation,
   Brazil) for the financial support, and UFBA (Federal University of
   Bahia, Brazil) for supporting and funding one of the authors.
CR Abu-Matar M., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P110, DOI 10.1109/SPLC.2011.26
   Abu-Matar M, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P302, DOI 10.1109/WICSA.2011.47
   Adam Sebastian, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P631, DOI 10.1109/COMPSAC.2008.54
   Adam S., 2008, P 9 WORKSH BUS PROC, P49
   Adam S, 2012, J SOFTW-EVOL PROC, V24, P237, DOI 10.1002/smr.558
   Alferez G. H., 2011, 2011 IEEE 9th European Conference on Web Services, P192, DOI 10.1109/ECOWS.2011.13
   Alferez German H., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P100, DOI 10.1109/SPLC.2011.21
   Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   Altintas N.I., 2008, P VLDB WORKSH TRENDS, P15
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Andersson J, 2005, IEE P-SOFTW, V152, P15, DOI 10.1049/ip-sen:20041007
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], 2007, Web services business process execution language version 2.0
   [Anonymous], 2019, Business Process Management: Concepts, Languages, Architectures
   Asadi M., 2009, P 1 INT WORKSH FEAT, P95
   Bae J, 2007, 2007 CIT: 7TH IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY, PROCEEDINGS, P879, DOI 10.1109/CIT.2007.78
   Barat Souvik, 2012, International Journal of Business Process Integration and Management, V6, P29, DOI 10.1504/IJBPIM.2012.047911
   Barat S, 2012, LECT NOTES BUS INF P, V100, P301
   Barat S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P577
   Bayer J, 2006, LECT NOTES COMPUT SC, V4034, P348
   Biolchini J., 2005, 67905 RTES FED U RIO
   Boffoli N., 2012, 2012 Proceedings of the 3rd International Workshop on Product LinE Approaches in Software Engineering (PLEASE 2012), P33, DOI 10.1109/PLEASE.2012.6229767
   Boffoli Nicola, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P178, DOI 10.1007/978-3-642-30564-1_12
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Boskovic M., 2011, P 3 CAN SEM WEB S CS, P58
   Boskovic M, 2011, J RES PRACT INF TECH, V43, P179
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Buregio V.A., 2010, P 4 INT WORKSH DYN S, P53
   Chang SH, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P261, DOI 10.1109/SPLINE.2007.10
   Charters S., 2007, GUIDELINES PERFORMIN
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Dongsu Kang, 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P755, DOI 10.1109/ICIS.2010.33
   Donko D, 2010, ADV DATA NETW COMMUN, P62
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Fantinato Marcelo, 2012, International Journal of Business Process Integration and Management, V6, P52, DOI 10.1504/IJBPIM.2012.047913
   Fantinato M., 2010, APPL SOFTWARE PRODUC, P497
   Fantinato M., 2006, P INT C E COMM TECHN, P34
   Fantinato M, 2008, INT J COOP INF SYST, V17, P373, DOI 10.1142/S0218843008001889
   Fantinato M, 2007, LECT NOTES COMPUT SC, V4749, P429
   Fantinato M, 2006, LECT NOTES COMPUT SC, V4102, P290
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Gimenes IMS, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P112, DOI 10.1109/IRI.2003.1251403
   Gimenes IMD, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P265, DOI 10.1109/SPLC.2008.10
   Gröner G, 2013, INFORM SYST, V38, P709, DOI 10.1016/j.is.2012.11.010
   Groner Gerd, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P551, DOI 10.1007/978-3-642-21640-4_41
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hongxia Zhang, 2012, 2012 IEEE International Conference on Services Computing (SCC), P672, DOI 10.1109/SCC.2012.17
   Houy C, 2010, BUS PROCESS MANAG J, V16, P619, DOI 10.1108/14637151011065946
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jensen C.T., 2008, IBM BUSINESS PROCESS, V1, P101
   Joonseok Park, 2011, 2011 9th International Conference on Software Engineering Research, Management and Applications, P211, DOI 10.1109/SERA.2011.19
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Karam M, 2008, J SYST SOFTWARE, V81, P855, DOI 10.1016/j.jss.2007.10.031
   Kearns GS, 2006, J MANAGE INFORM SYST, V23, P129, DOI 10.2753/MIS0742-1222230306
   Keuler T, 2005, LECT NOTES ARTIF INT, V3782, P60
   Khoshnevis S, 2012, PROC INT CONF SOFTW, P1483, DOI 10.1109/ICSE.2012.6227056
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kim Y, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 1, PROCEEDINGS, P700, DOI 10.1109/ICCIT.2008.261
   Kulkarni Vinay, 2011, International Journal of Business Process Integration and Management, V5, P204, DOI 10.1504/IJBPIM.2011.042525
   Kulkarni V., 2010, P 1 INT WORKSH REUS, P314
   Kulkarni V., 2011, P 2 INT WORKSH PROD, P1
   Kulkarni V., 2010, P 2 INT WORKSH FEAT, P72
   Kulkarni V, 2006, LECT NOTES COMPUT SC, V4066, P1
   LaPES - Software Engineering Research Laboratory, 2012, START STAT ART SYST
   Lee J, 2010, IEEE SOFTWARE, V27, P35, DOI 10.1109/MS.2010.30
   Lee YC, 2011, IND MANAGE DATA SYST, V111, P735, DOI 10.1108/02635571111137287
   Leitner A., 2010, P 2010 WORKSH KNOWL, P2
   Leymann F, 2002, IBM SYST J, V41, P198, DOI 10.1147/sj.412.0198
   Lindsay A, 2003, INFORM SOFTWARE TECH, V45, P1015, DOI 10.1016/S0950-5849(03)00129-0
   Lopes Goncalves Tiago, 2011, International Journal of Web Engineering and Technology, V6, P243, DOI 10.1504/IJWET.2011.040724
   Machado I., 2011, P 2011 INT WORKSH EA, P25
   Marchione F., 2009, P 11 INT C INF INT W, P217
   Marchione FG, 2010, INT J WEB GRID SERV, V6, P357, DOI 10.1504/IJWGS.2010.036403
   Massuthe P., 2005, Annals of Mathematics, Computing Teleinformatics, V1, P35
   McGregor J.D., 2003, CMUSEI2003TR005
   Medeiros F. M., 2010, 2010 IV Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS), P70, DOI 10.1109/SBCARS.2010.17
   Mikyeong Moon, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P263, DOI 10.1109/COMPSAC.2008.129
   Mohabbati B, 2011, LECT NOTES COMPUT SC, V7084, P436, DOI 10.1007/978-3-642-25535-9_29
   MONTERO I, 2008, P 7 INT C COMP BAS S, P228, DOI DOI 10.1109/ICCBSS.2008.28
   Montero I, 2008, P IEEE I C SERV COMP, P605, DOI 10.1109/SCC.2008.130
   Nguyen Tuan, 2010, 2010 IEEE International Conference on Web Services (ICWS), P393, DOI 10.1109/ICWS.2010.64
   Niehaves B, 2011, BUS PROCESS MANAG J, V17, P384, DOI 10.1108/14637151111136342
   Object Management Group (OMG), 2011, Business Process Model and Notation (BPMN) Version 2.0. Business
   Ognjanovic I., 2012, 2012 IEEE International Conference on Services Computing (SCC), P25, DOI 10.1109/SCC.2012.6
   Overby E, 2006, EUR J INFORM SYST, V15, P120, DOI 10.1057/palgrave.ejis.3000600
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Park J., 2009, P 2009 INT C HYBR IN, P143
   Park J., 2010, APPROACH DEVELOPING, P2252
   Park J, 2011, J SYST SCI SYST ENG, V20, P193, DOI 10.1007/s11518-011-5164-z
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Razavian M, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P82
   Reuter C, 2010, LECT NOTES BUS INF P, V68, P61
   Rolland C., 2010, 43 HAW INT C SYST SC, P1
   Russell N., 2006, APCCM 06, P95
   González LS, 2010, BUS PROCESS MANAG J, V16, P114, DOI 10.1108/14637151011017976
   Schnieders A., 2006, P 2 INT C INT ENT SO, P67
   Schulz-Hofen J., 2006, P 2 INT WORKSH MOD D, P6
   Siy H., 2011, P 2 INT WORKSH PROD, P50
   Sun CA, 2010, J SYST SOFTWARE, V83, P502, DOI 10.1016/j.jss.2009.10.011
   Tallon PP, 2008, INFORM TECHNOL MANAG, V9, P21, DOI 10.1007/s10799-007-0024-8
   Tarafdar M, 2009, INFORM SYST MANAGE, V26, P338, DOI 10.1080/10580530903245705
   Nguyen T, 2011, LECT NOTES COMPUT SC, V7084, P404, DOI 10.1007/978-3-642-25535-9_27
   van der Aalst WMP, 2003, LECT NOTES COMPUT SC, V2678, P1
   Weske M, 2004, DATA KNOWL ENG, V50, P1, DOI 10.1016/j.datak.2004.01.001
   Xu X, 2009, SECOND INTERNATIONAL SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DESIGN, VOL 2, PROCEEDINGS, P139, DOI 10.1109/ISCID.2009.183
   Ye E, 2007, 9TH INTERNATIONAL CONFERENCE ON ADVANCED COMMUNICATION TECHNOLOGY: TOWARD NETWORK INNOVATION BEYOND EVOLUTION, VOLS 1-3, P999, DOI 10.1109/ICACT.2007.358527
   Zaupa F, 2008, J UNIVERS COMPUT SCI, V14, P1368
   Zhang M, 2008, LECT NOTES COMPUT SC, V5364, P505, DOI 10.1007/978-3-540-89652-4_38
NR 112
TC 38
Z9 40
U1 0
U2 61
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1355
EP 1373
DI 10.1016/j.infsof.2013.02.007
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200001
DA 2024-07-18
ER

PT J
AU Payet, É
   Spoto, F
AF Payet, Etienne
   Spoto, Fausto
TI Static analysis of Android programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program verification; Static analysis; Abstract interpretation; Android
AB Context: Android is a programming language based on Java and an operating system for embedded and mobile devices, whose upper layers are written in the Android language itself. As a language, it features an extended event-based library and dynamic inflation of graphical views from declarative XML layout files. A static analyzer for Android programs must consider such features, for correctness and precision.
   Objective: Our goal is to extend the Julia static analyzer, based on abstract interpretation, to perform formally correct analyses of Android programs. This article is an in-depth description of such an extension, of the difficulties that we faced and of the results that we obtained.
   Method: We have extended the class analysis of the Julia analyzer, which lies at the heart of many other analyses, by considering some Android key specific features such as the potential existence of many entry points to a program and the inflation of graphical views from XML through reflection. We also have significantly improved the precision of the nullness analysis on Android programs.
   Results: We have analyzed with Julia most of the Android sample applications by Google and a few larger open-source programs. We have applied tens of static analyses, including classcast, dead code, nullness and termination analysis. Julia has found, automatically, bugs, flaws and inefficiencies both in the Google samples and in the open-source applications.
   Conclusion: Julia is the first sound static analyzer for Android programs, based on a formal basis such as abstract interpretation. Our results show that it can analyze real third-party Android applications, without any user annotation of the code, yielding formally correct results in at most 7 min and on standard hardware. Hence it is ready for a first industrial use. (c) 2012 Elsevier B.V. All rights reserved.
C1 [Spoto, Fausto] Univ Verona, Dipartimento Informat, I-37100 Verona, Italy.
C3 University of Verona
EM etienne.payet@univ-reunion.fr; fausto.spoto@univr.it
OI Spoto, Fausto/0000-0003-2973-0384; Payet, Etienne/0000-0002-3519-025X
CR [Anonymous], 1993, Program Verification: Fundamental Issues in Computer Science, DOI [10.1090/psapm/019/0235771, DOI 10.1090/PSAPM/019/0235771]
   Ayewah N., 2007, 22 ACM SIGPLAN C OBJ, P805
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot Patrick, 1976, P 2 INT S PROGRAMMIN
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Fuchs AdamP., SCanDroid: Automated Security Certification of Android Applications
   Hubert L, 2008, LECT NOTES COMPUT SC, V5051, P132, DOI 10.1007/978-3-540-68863-1_9
   Miné A, 2001, LECT NOTES COMPUT SC, V2053, P155
   PALSBERG J, 1991, SIGPLAN NOTICES, V26, P146
   Papi Matthew M., 2008, INT S SOFT TEST AN I, P201
   Payet É, 2011, LECT NOTES ARTIF INT, V6803, P439, DOI 10.1007/978-3-642-22438-6_33
   Schonefeld M., 2009, 10 ANN CANSECWEST C
   Spoto F, 2003, ACM T PROGR LANG SYS, V25, P578, DOI 10.1145/937563.937565
   Spoto F, 2010, ACM T PROGR LANG SYS, V32, P70
   Spoto F, 2011, SOFTW SYST MODEL, V10, P219, DOI 10.1007/s10270-009-0132-5
   Spoto F, 2010, LECT NOTES ARTIF INT, V6355, P405, DOI 10.1007/978-3-642-17511-4_23
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
NR 17
TC 51
Z9 61
U1 1
U2 63
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2012
VL 54
IS 11
BP 1192
EP 1201
DI 10.1016/j.infsof.2012.05.003
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 000LJ
UT WOS:000308387500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rossi, B
   Russo, B
   Succi, G
AF Rossi, Bruno
   Russo, Barbara
   Succi, Giancarlo
TI Path dependent stochastic models to detect planned and actual technology
   use: A case study of OpenOffice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technology adoption; Path dependence; Urn models; Actual use of
   technology
ID INFORMATION-TECHNOLOGY; INCREASING RETURNS; ACCEPTANCE MODEL; DIFFUSION;
   DESIGN; USAGE
AB Context: Adopting IT innovation in organizations is a complex decision process driven by technical, social and economic issues. Thus, those organizations that decide to adopt innovation take a decision of uncertain success of implementation, as the actual use of a new technology might not be the one expected. The misalignment between planned and effective use of innovation is called assimilation gap.
   Objective: This research aims at defining a quantitative instrument for measuring the assimilation gap and applying it to the case of the adoption of OSS.
   Method: In this paper, we use the theory of path dependence and increasing returns of Arthur. In particular, we model the use of software applications (planned or actual) by stochastic processes defined by the daily amounts of files created with the applications. We quantify the assimilation gap by comparing the resulting models by measures of proximity.
   Results: We apply and validate our method to a real case study of introduction of OpenOffice. We have found a gap between the planned and the effective use despite well-defined directives to use the new OS technology. These findings suggest a need of strategy re-calibration that takes into account environmental factors and individual attitudes.
   Conclusions: The theory of path dependence is a valid instrument to model the assimilation gap provided information on strategy toward innovation and quantitative data on actual use are available. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Rossi, Bruno; Russo, Barbara; Succi, Giancarlo] Free Univ Bolzano Bozen, Fac Comp Sci, Ctr Appl Software Engn, Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Russo, B (corresponding author), Free Univ Bolzano Bozen, Fac Comp Sci, Ctr Appl Software Engn, Bolzano, Italy.
EM Bruno.Rossi@unibz.it; Barbara.Russo@unibz.it; Giancarlo.Succi@unibz.it
RI Rossi, Bruno/AGU-4491-2022; Russo, Barbara/AAA-8850-2019; Succi,
   Giancarlo/AAZ-2354-2020; Russo, Barbara/L-5311-2013
OI Rossi, Bruno/0000-0002-8659-1520; Russo, Barbara/0000-0003-3737-9264;
   Succi, Giancarlo/0000-0001-8847-0186; Russo, Barbara/0000-0003-3737-9264
FU FP6 European project COSPA [IST-2002-2164]
FX The authors thank Ing. Hugo Leiter, head of the IT department of Softech
   for the collaboration in collecting data and information about his
   organization. This work was supported in part by the FP6 European
   project COSPA, Contract No.: IST-2002-2164. We thank the reviewer for
   the valuable comments.
CR [Anonymous], 2003, Diffusion of Innovations
   [Anonymous], 1995, Diffusion of innovations
   [Anonymous], 2001, EVOLUTION PATH DEPEN
   [Anonymous], 2005, PROC IEEE INT S EMPI
   [Anonymous], 2004, P 37 ANN HAW INT C S
   Arthur W.B., 1987, INCREASING RETURNS P
   Arthur W. B., 1994, INCREASING RETURNS P, P224
   Arthur W.Brian., 1996, Increasing Returns and the New World of Business
   ARTHUR WB, 1989, ECON J, V99, P116, DOI 10.2307/2234208
   ARTHUR WB, 1990, MATH SOC SCI, V19, P235, DOI 10.1016/0165-4896(90)90064-E
   BARON M, 2006, PROBABILITY STAT COM
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bradford M., 2003, International Journal of Accounting Information Systems, V4, P205, DOI 10.1016/S1467-0895(03)00026-5
   Coman I., 2009, P 31 C SOFTW ENG ICS
   COOPER RB, 1990, MANAGE SCI, V36, P123, DOI 10.1287/mnsc.36.2.123
   Dasgupta S, 2002, GROUP DECIS NEGOT, V11, P87, DOI 10.1023/A:1015221710638
   DAVID PA, 1985, AM ECON REV, V75, P332
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DAVIS FD, 1992, J APPL SOC PSYCHOL, V22, P1111, DOI 10.1111/j.1559-1816.1992.tb00945.x
   Dosi G., 1994, J. Evol. Econ., V4, P93, DOI [10.1007/BF01200140, DOI 10.1007/BF01200140, 10.1007/bf01200140]
   Douceur JR, 1999, PERFORMANCE EVALUATION REVIEW, SPECIAL ISSUE, VOL 27 NO 1, JUNE 1999, P59, DOI 10.1145/301464.301480
   Eggenberger F, 1923, Z ANGEW MATH MECH, V3, P279, DOI 10.1002/zamm.19230030407
   Everitt K., 2001, USABILITY COMP SUN S
   Fichman RG, 1999, INFORM SYST RES, V10, P255, DOI 10.1287/isre.10.3.255
   Fitzgerald Brian, 2009, International Journal of Open Source Software & Processes, V1, P1, DOI 10.4018/jossp.2009010101
   Flajolet P., 2006, DISCRETE MATH THEOR, V59, P118
   FREEDMAN DA, 1965, ANN MATH STAT, V36, P956, DOI 10.1214/aoms/1177700068
   FRIEDMAN B, 1949, COMMUN PUR APPL MATH, V2, P59, DOI 10.1002/cpa.3160020103
   Gallego MD, 2008, COMPUT HUM BEHAV, V24, P2199, DOI 10.1016/j.chb.2007.10.006
   Gallivan M. J., 2001, Data Base for Advances in Information Systems, V32, P51
   Glynn E, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P217, DOI 10.1109/ISESE.2005.1541831
   HECKMAN NE, 1985, ANN STAT, V13, P785, DOI 10.1214/aos/1176349555
   Jouanolou J.-P., 1979, LECT NOTES MATH, V708
   Kauffman S., 1988, The Evolution of Economic Webs, P125
   King WR, 2006, INFORM MANAGE-AMSTER, V43, P740, DOI 10.1016/j.im.2006.05.003
   Lefebvre LA, 1996, IEEE T ENG MANAGE, V43, P307, DOI 10.1109/17.511841
   Legris P, 2003, INFORM MANAGE-AMSTER, V40, P191, DOI 10.1016/S0378-7206(01)00143-4
   Marchesi M, 2007, INFORM SYST FRONT, V9, P257, DOI 10.1007/s10796-007-9025-8
   Moore GC, 1991, INFORM SYST RES, V2, P192, DOI 10.1287/isre.2.3.192
   Page SE, 2006, Q J POLIT SCI, V1, P87, DOI 10.1561/100.00000006
   Pemantle R, 2007, PROBAB SURV, V4, P1, DOI 10.1214/07-PS094
   Pierson P, 2000, AM POLIT SCI REV, V94, P251, DOI 10.2307/2586011
   PITMAN J, 1995, PROBAB THEORY REL, V102, P145, DOI 10.1007/BF01213386
   Rogers E.M., 1962, DIFFUSION INNOVATION, P327
   Roselli D, 2000, P USENIX ANN TECHN C
   Rosenberg N., 1982, LEARNING USING TECHN
   Safarzynska K., 2009, J EVOLUTIONARY EC, V20, P329
   Satyanarayanan M., 1981, Operating Systems Review, V15, P96, DOI 10.1145/1067627.806597
   Shah R., 2008, P 41 HAW INT C SYST
   Sharp J.H., 2007, INFORM SYSTEMS ED J, V5, P1
   Skyrms B, 2000, P NATL ACAD SCI USA, V97, P9340, DOI 10.1073/pnas.97.16.9340
   STRAUB D, 1995, MANAGE SCI, V41, P1328, DOI 10.1287/mnsc.41.8.1328
   Taylor S, 1995, MIS QUART, V19, P561, DOI 10.2307/249633
   THOMPSON RL, 1991, MIS QUART, V15, P125, DOI 10.2307/249443
   TROTT P., 1998, INNOVATION MANAGEMEN
   Turner M, 2010, INFORM SOFTWARE TECH, V52, P463, DOI 10.1016/j.infsof.2009.11.005
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Vogels W, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P93, DOI 10.1145/319344.319158
   von Krogh G, 2006, MANAGE SCI, V52, P975, DOI 10.1287/mnsc.1060.0560
   WEI LJ, 1978, J AM STAT ASSOC, V73, P559, DOI 10.2307/2286600
   Xue J., 2006, CAMBRIDGE WORKING PA
   Zaltman G., 1973, INNOVATIONS ORG
NR 62
TC 1
Z9 1
U1 1
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2011
VL 53
IS 11
BP 1209
EP 1226
DI 10.1016/j.infsof.2011.05.002
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 820CQ
UT WOS:000294883500004
OA Green Published
DA 2024-07-18
ER

PT J
AU Li, X
   Li, YF
   Xie, M
   Ng, SH
AF Li, Xiang
   Li, Yan Fu
   Xie, Min
   Ng, Szu Hui
TI Reliability analysis and optimal version-updating for open source
   software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software reliability; Open source software; Optimal version-update time;
   Multi-attribute utility theory
ID MODEL; COST
AB Context: Although reliability is a major concern of most open source projects, research on this problem has attracted attention only recently. In addition, the optimal version-dating for open source software considering its special properties is not yet discussed.
   Objective: In this paper, the reliability analysis and optimal version-updating for open source software are studied.
   Method: A modified non-homogeneous Poisson process model is developed for open source software reliability modeling and analysis. Based on this model, optimal version-updating for open source software is investigated as well. In the decision process, the rapid release strategy and the level of reliability are the two most important factors. However, they are essentially contradicting with each other. In order to consider these two conflicting factors simultaneously, a new decision model based on multi-attribute utility theory is proposed.
   Results: Our models are tested on the real world data sets from two famous open source projects: Apache and GNOME. It is found that traditional software reliability models provide overestimations of the reliability of open source software. In addition, the proposed decision model can help management to make a rational decision on the optimal version-updating for open source software.
   Conclusion: Empirical results reveal that the proposed model for open source software reliability can describe the failure process more accurately. Furthermore, it can be seen that the proposed decision model can assist management to appropriately determine the optimal version-update time for open source software. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Li, Xiang; Xie, Min; Ng, Szu Hui] Natl Univ Singapore, Dept Ind & Syst Engn, Singapore 117548, Singapore.
   [Li, Yan Fu] Ecole Cent Paris, Paris, France.
   [Li, Yan Fu] Ecole Super Elect, Paris, France.
C3 National University of Singapore; Universite Paris Saclay; Universite
   Paris Saclay
RP Li, X (corresponding author), Natl Univ Singapore, Dept Ind & Syst Engn, Singapore 117548, Singapore.
EM lixiang@nus.edu.sg
RI Keung, Jacky/ABA-7089-2020; Li, Yan-Fu/B-6610-2014; Xie,
   Min/IUQ-1412-2023; Xie, Min/A-5552-2011
OI Li, Yan-Fu/0000-0001-5755-7115; Xie, Min/0000-0002-8500-8364
CR [Anonymous], 1996, HDB SOFTWARE RELIABI
   Brito AJ, 2009, RELIAB ENG SYST SAFE, V94, P187, DOI 10.1016/j.ress.2008.02.014
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Ferreira RJR, 2009, RELIAB ENG SYST SAFE, V94, P905, DOI 10.1016/j.ress.2008.10.001
   Fishburn P.C., 1970, Utility theory for decision making: Technical report
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Huang CY, 2007, IEEE T RELIAB, V56, P198, DOI 10.1109/TR.2007.895301
   Huang CY, 2002, IEEE T RELIAB, V51, P261, DOI 10.1109/TR.2002.801847
   Illes-Seifert T, 2010, INFORM SOFTWARE TECH, V52, P539, DOI 10.1016/j.infsof.2009.11.010
   Keeney R. L., 1976, DECISION MULTIPLE OB
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kozlov D, 2008, J SOFTW MAINT EVOL-R, V20, P31, DOI 10.1002/smr.361
   Lai CD, 2002, INFORM SOFTWARE TECH, V44, P343, DOI 10.1016/S0950-5849(02)00007-1
   Li XA, 2010, APPL MATH MODEL, V34, P3560, DOI 10.1016/j.apm.2010.03.006
   Li YF, 2010, J SYST SOFTWARE, V83, P2332, DOI 10.1016/j.jss.2010.07.032
   Lin CT, 2008, J SYST SOFTWARE, V81, P1025, DOI 10.1016/j.jss.2007.10.002
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   OHBA M, 1984, IBM J RES DEV, V28, P428, DOI 10.1147/rd.284.0428
   Pham H, 2003, EUR J OPER RES, V149, P475, DOI 10.1016/S0377-2217(02)00498-8
   Pham H., 2000, SOFTWARE RELIABILITY
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Scholz R., 2002, Embedded case study methods: Integrating quantitative and qualitative knowledge
   Tamura Y, 2008, INT J RELIAB QUAL SA, V15, P33, DOI 10.1142/S0218539308002915
   Tamura Y, 2009, INT J SYST SCI, V40, P429, DOI 10.1080/00207720802556245
   Ven K, 2008, INFORM SOFTWARE TECH, V50, P991, DOI 10.1016/j.infsof.2007.09.001
   von Winterfeldt D., 1986, Decision analysis and behavioral research
   Xie M, 2003, IEEE T SOFTWARE ENG, V29, P471, DOI 10.1109/TSE.2003.1199075
   Xie M, 1998, J SYST SOFTWARE, V44, P163, DOI 10.1016/S0164-1212(98)10053-5
   Xie M., 1991, SOFTWARE RELIABILITY
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   Yang B, 2008, IEEE T SOFTWARE ENG, V34, P813, DOI 10.1109/TSE.2008.47
   Zhang XM, 2000, INT J SYST SCI, V31, P1115, DOI 10.1080/002077200418397
NR 36
TC 76
Z9 81
U1 1
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 929
EP 936
DI 10.1016/j.infsof.2011.04.005
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 795DC
UT WOS:000292950700003
DA 2024-07-18
ER

PT J
AU Sigfridsson, A
   Sheehan, A
AF Sigfridsson, Anders
   Sheehan, Anne
TI On qualitative methodologies and dispersed communities: Reflections on
   the process of investigating an open source community
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Qualitative methodologies; Free open source communities; Distributed
   software development; Collaborative practice; Case study
ID SOFTWARE-DEVELOPMENT; KNOWLEDGE; FIELD
AB Context: Qualitative methodologies hold much potential for building an understanding of the principles and practices of free and open source software (FOSS) communities. Yet there is a scarcity in the literature of discussions focused on the practical and methodological challenges of this particular research context.
   Objective: This paper formulates and addresses a number of questions regarding the applicability of qualitative methodologies for the study of FOSS communities. It reflects on the challenges of such approaches as seen in previous research efforts and discusses how they manifest in research practice through a thorough description of a case study of a community called PyPy.
   Method: The paper primarily discusses interpretive research approaches which are based on ethnographic data collection methods. The study under discussion was an exploratory case study utilizing multiple methods, including participant observation, virtual ethnography, and open-ended questionnaires. Grounded Theory was used for data analysis.
   Results: Two broad sets of challenges are highlighted in relation to the multidimensionality of the FOSS phenomenon and the difficulty of qualitative analysis of activities in long-term context. Additional issues identified relate to potential problems with focus and the need for reflexivity, but also to the extent of the study and the importance of maintaining an active relationship with the core community group.
   Conclusion: This paper provides an overview - grounded in practical research experience and linked to insights from the literature - of methodological issues in the specific research area of qualitative studies of FOSS communities, which up until now has been lacking. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Sigfridsson, Anders; Sheehan, Anne] Univ Limerick, Interact Design Ctr, Limerick, Ireland.
C3 University of Limerick
RP Sigfridsson, A (corresponding author), Univ Limerick, Interact Design Ctr, Engn Res Bldg 1-002, Limerick, Ireland.
EM anders.sigfridsson@ul.ie; anne.sheehan@ul.ie
FU Science Foundation of Ireland (SFI) [03/IN3/1408C]
FX The research described in this paper was performed within the socGSD
   project at the Interaction Design Centre, University of Limerick,
   Ireland. SocGSD was a LERO cluster project funded under PI Grant
   03/IN3/1408C by the Science Foundation of Ireland (SFI).
CR AGERFALK PJ, 2005, 1 INT C OP SOURC SYS
   ANDERSON RJ, 1994, HUM-COMPUT INTERACT, V9, P151, DOI 10.1207/s15327051hci0902_1
   [Anonymous], 2007, INT C GLOB SOFTW ENG
   [Anonymous], INT C SOFTW ENG SHAN
   Barley SR, 1996, ADMIN SCI QUART, V41, P404, DOI 10.2307/2393937
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   Becker H.S., 1998, TRICKS TRADE
   Bergquist M, 2001, INFORM SYST J, V11, P305, DOI 10.1046/j.1365-2575.2001.00111.x
   BODEN A, 2007, INT C GLOB SOFTW ENG
   Brown JS, 1991, ORGAN SCI, V2, P40, DOI 10.1287/orsc.2.1.40
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   CHAIKLIN S, 1996, LEARNING DOING SOCIA
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Cook SDN, 1999, ORGAN SCI, V10, P381, DOI 10.1287/orsc.10.4.381
   CROWSTON K, 2005, INT C INF SYST LAS V
   CROWSTON K, 2002, IEEE P SOFTWARE, V149
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Delamont Sara., 2007, Qualitative Research Practice, P205
   Desouza KC, 2006, IEEE SOFTWARE, V23, P30, DOI 10.1109/MS.2006.135
   Dey I., 2007, Qualitative research practice, P80
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   DOURISH P, 2006, ACM C HUM FACT COMP
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   DURING B, 2006, XP2006 OUL FINL
   DURING B, 2006, AGILE 2006 MINN MINN
   Fitzgerald B, 2006, MIS QUART, V30, P587
   GUTWIN C, 2004, ACM COMPUTER SUPPORT
   Hammersley M., 1996, ETHNOGRAPHY PRINCIPL
   HEATH J, 2000, WORKPLACE STUDIES RE
   HERBSLEB JD, 2005, INT C SOFTW ENG ST L
   HERBSLEB JD, 2000, ACM COMPUTER SUPPORT
   HERBSLEB JD, 2001, INT C SOFTW ENG TOR
   Hine C., 2000, Virtual ethnography
   Holmstrom H., 2006, Scandinavian Journal of Information Systems, V18, P3
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Lave J., 1991, Learning in doing: Social, cognitive, and computational perspectives, DOI DOI 10.1017/CBO9780511815355
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   MARKHAM AN, 2007, QUALITATIVE RES PRAC, P328
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Myers M., 1999, COMMUNICATIONS AIS, V2
   MYERS MD, 2010, MIS Q MIS DISCO 0310
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Rapley T., 2007, QUALITATIVE RES PRAC, P15
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Sack W., 2006, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V15, P229, DOI 10.1007/s10606-006-9020-5
   Sahay S., 2003, GLOBAL IT OUTSOURCIN
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   SIGFRIDSSON A, 2007, INT C OP SOURC SYST
   SINGER J, 1997, CASCON 97 TOR ONT CA
   Strauss A., 1990, BASICS QUALITATIVE R
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   WALZ DB, 1993, COMMUN ACM, V36, P63, DOI 10.1145/163430.163447
   YE Y, 2005, FREE OPEN SOURCE SOF
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 57
TC 9
Z9 12
U1 1
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2011
VL 53
IS 9
SI SI
BP 981
EP 993
DI 10.1016/j.infsof.2011.01.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 795DC
UT WOS:000292950700008
DA 2024-07-18
ER

PT J
AU Ochodek, M
   Alchimowicz, B
   Jurkiewicz, J
   Nawrocki, J
AF Ochodek, M.
   Alchimowicz, B.
   Jurkiewicz, J.
   Nawrocki, J.
TI Improving the reliability of transaction identification in use cases
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Use-case transactions; Use Case Points; Functional size measurement;
   Natural language processing
AB Context: The concept of transactions is used in Use Case Points (UCP), and in many other functional size measurement methods, to capture the smallest unit of functionality that should be considered while measuring the size of a system. Unfortunately, in the case of the UCP method at least four methods for use-case transaction identification have been proposed so far. The different approaches to transaction identification and difficulties related to the analysis of requirements expressed in natural language can lead to problems in the reliability of functional size measurement.
   Objective: The goal of this study was to evaluate reliability of transaction identification in use cases (with the methods mentioned in the literature), analyze their weaknesses, and propose some means for their improvement.
   Method: A controlled experiment on a group of 120 students was performed to investigate if the methods for transaction identification, known from the literature, provide similar results. In addition, a qualitative analysis of the experiment data was performed to investigate the potential problems related to transaction identification in use cases. During the experiment a use-case benchmark specification was used. The automatic methods for transaction identification, proposed in the paper have been validated using the same benchmark by comparing the outcomes provided by these methods to on-average number of transactions identified by the participants of the experiment.
   Results: A significant difference in the median number of transactions was observed between groups using different methods of transaction identification. The Kruskal Wallis test was performed with the significance level alpha set to 0.05 and followed by the post-hoc analysis performed according to the procedure proposed by Conover. Also a large intra-method variability was observed. The ratios between the maximum and minimum number of transactions identified by the participants using the same method were equal to 1.96, 3.83, 2.03, and 2.21. The proposed automatic methods for transaction identification provided results consistent with those provided by the participants of the experiment and functional measurement experts. The relative error between the number of transaction identified by the tool and on-average number of transactions identified by the participants of the experiment ranged from 3% to 7%.
   Conclusions: Human-performed transaction identification is error prone and quite subjective. Its reliability can be improved by automating the process with the use of natural language processing techniques. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Ochodek, M.; Alchimowicz, B.; Jurkiewicz, J.; Nawrocki, J.] Poznan Univ Tech, Inst Comp Sci, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Ochodek, M (corresponding author), Poznan Univ Tech, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM mochodek@cs.put.poznan.pl; balchimowicz@c-s.put.poznan.pl;
   jjurkiewicz@cs.put.poznan.pl; jnawrocki@cs.put.poznan.pl
RI Ochodek, Mirosław/G-1505-2014; Nawrocki, Jerzy R/I-5690-2012;
   Alchimowicz, Bartosz/M-3842-2014
CR Adolph S., 2003, PATTERNS EFFECTIVE U
   Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   Alchimowicz B, 2010, COMPUT INFORM, V29, P27
   ANDA B, 2001, LECT NOTES COMPUTER, P487
   ANDA B, 2002, EMPIRICAL ASSESSMENT
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2007, COMPILERS PRINCIPLES
   [Anonymous], 1998, Applying Use Cases: A Practical Guide
   [Anonymous], 2008, COLING 2008 P WORKSH
   [Anonymous], 2003, Software requirements
   [Anonymous], THESIS U OSLO
   Cockburn A., 2001, Writing effective use cases
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Collaris R., 2009, Software cost estimation using use case points: Getting use case transactions straight
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   Diev S., 2006, Software Engineering Notes, ACM, V31, P1
   Fetcke T, 1998, TOOLS 23 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P192, DOI 10.1109/TOOLS.1997.654721
   Garmus David., 2001, AW INFORMAT
   IEEE, 1998, 8301998 IEEE
   ISO/IEC, 2009, 209262009 ISOIEC
   *ISO IEC, 2002, 209682002 ISOIEC
   Jacobson A., 2004, Software and System Modeling, V3, P210, DOI [10.1007/s10270-004-0060-3, DOI 10.1007/S10270-004-0060-3]
   KARNER G, 1993, THESIS LINKOPING SWE
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kusumoto S, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P292, DOI 10.1109/METRIC.2004.1357913
   Nawrocki J, 2005, LECT NOTES COMPUT SC, V3556, P230
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   OCHODEK M, 2010, FDN COMPUTING DECISI, V35, P91
   Ochodek M, 2008, LECT NOTES COMPUT SC, V5082, P55
   OUWERKERK J, 2006, P INT C SOFTW PROC P, P83
   Overgaard G., 2005, Use cases: patterns and blueprints
   Robiolo G, 2008, INNOV SYST SOFTW ENG, V4, P31, DOI 10.1007/s11334-007-0043-y
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Symons C., 1991, WILEY SERIES SOFTWAR
   WILK MB, 1968, BIOMETRIKA, V55, P1
   Zivkovic A, 2005, INFORM SOFTWARE TECH, V47, P881, DOI 10.1016/j.infsof.2005.02.008
NR 37
TC 20
Z9 23
U1 0
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2011
VL 53
IS 8
SI SI
BP 885
EP 897
DI 10.1016/j.infsof.2011.02.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 784RQ
UT WOS:000292176300007
DA 2024-07-18
ER

PT J
AU Pino, FJ
   Pardo, C
   García, F
   Piattini, M
AF Pino, Francisco J.
   Pardo, Cesar
   Garcia, Felix
   Piattini, Mario
TI Assessment methodology for software process improvement in small
   organizations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Assessment methodology; Software process assessment; Software process
   improvement; Small software organizations; SPI; COMPETISOFT
AB Context: Diagnosing processes in a small company requires process assessment practices which give qualitative and quantitative results; these should offer an overall view of the process capability. The purpose is to obtain relevant information about the running of processes, for use in their control and improvement. However, small organizations have some problems in running process assessment, due to their specific characteristics and limitations.
   Objective: This paper presents a methodology for assessing software processes which assist the activity of software process diagnosis in small organizations. There is an attempt to address issues such as the fact that: (i) process assessment is expensive and typically requires major company resources and (ii) many light assessment methods do not provide information that is detailed enough for diagnosing and improving processes.
   Method: To achieve all this, the METvalCOMPETISOFT assessment methodology was developed. This methodology: (i) incorporates the strategy of internal assessments known as rapid assessment, meaning that these assessments do not take up too much time or use an excessive quantity of resources, nor are they too rigorous and (ii) meets all the requirements described in the literature for an assessment proposal which is customized to the typical features of small companies.
   Results: This paper also describes the experience of the application of this methodology in eight small software organizations that took part in the COMPETISOFT project. The results obtained show that this approach allows us to obtain reliable information about the strengths and weaknesses of software processes, along with information to companies on opportunities for improvement.
   Conclusion: The assessment methodology proposed sets out the elements needed to assist with diagnosing the process in small organizations step-by-step while seeking to make its application economically feasible in terms of resources and time. From the initial application it may be seen that this assessment methodology can be useful, practical and suitable for diagnosing processes in this type of organizations. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Pino, Francisco J.; Pardo, Cesar] Univ Cauca, IDIS Res Grp, Elect & Telecommun Engn Fac, Popayan, Colombia.
   [Pino, Francisco J.; Garcia, Felix; Piattini, Mario] Univ Castilla La Mancha, ALARCOS Res Grp, Informat Syst & Technol Dept, UCLM INDRA Res & Dev Inst, E-13071 Ciudad Real, Spain.
C3 Universidad del Cauca; Universidad de Castilla-La Mancha; Indra
RP Pino, FJ (corresponding author), Univ Cauca, IDIS Res Grp, Elect & Telecommun Engn Fac, Calle 5 4-70 Popayan, Popayan, Colombia.
EM fjpino@unicauca.edu.co; cpardo@unicauca.edu.co; Felix.Garcia@uclm.es;
   Mario.Piattini@uclm.es
RI CALVACHE, CESAR JESUS PARDO/M-5644-2019; Pino Correa, Francisco
   José/GNP-2495-2022; Piattini, Mario/F-6271-2013; Garcia,
   Felix/D-4299-2011
OI CALVACHE, CESAR JESUS PARDO/0000-0002-6907-2905; Pino Correa, Francisco
   José/0000-0003-0668-4485; Piattini, Mario/0000-0002-7212-8279; Garcia,
   Felix/0000-0001-6460-0353
FU JCCM of Spain [PAC08-0154-9262, PII2109-0223-7948]; FEDER
   [TIN2009-13718-C02-01]; MEC of Spain [TIN2009-13718-C02-01]; European
   Regional Development Fund (ERDF)
FX We would like to thank anonymous reviewers for their useful comments in
   order to improve this paper, and we acknowledge the assistance of the
   following projects: INGENIO (PAC08-0154-9262, JCCM of Spain), ARMONIAS
   (PII2109-0223-7948, JCCM of Spain) and PEGASO-MAGO
   (TIN2009-13718-C02-01, FEDER and MEC of Spain). Acknowledgements by the
   first author to the research fellowships granted by JCCM and funded by
   the European Regional Development Fund (ERDF).
CR ANACLETO A, 2004, 4 INT SPICE C PROC A, P69
   [Anonymous], ELEMENTS SOFTWARE PR
   Baskerville R. L., 1999, Communications of the association for information systems, V2, P2, DOI [https://doi.org/10.17705/1CAIS.00219, DOI 10.17705/1CAIS.00219]
   Brereton Pearl., 2008, Proceedings of the 12th International Conference on Evaluation and Assessment in Software Engineering, P41
   Cater-Steel AP, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P368, DOI 10.1109/ASWEC.2004.1290490
   *ECL, 2007, ECL PROC FRAM PROJ E
   *EU, 2007, NEW SME DEF US GUID, P1
   Fayad ME, 2000, COMMUN ACM, V43, P115, DOI 10.1145/330534.330555
   HOST M, 2007, P 1 INT S EMP SOFTW, P479
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   HURTADO J, 2008, SOFTWARE PROCESS IMP, P177
   *ISO, 2006, 1550452006E ISOIEC
   *ISO, 2004, 1550422003COR12004E
   Kelly DP, 1999, COMPUTER, V32, P41, DOI 10.1109/2.796108
   Laporte CY, 2008, COMPUTER, V41, P98, DOI 10.1109/MC.2008.86
   MAKINEN T, 2000, P 7 EUR SOFTW PROC I
   MARTINEZ T, 2008, 3 INT C SOFT DAT TEC, P73
   *MAYER BUNG, 2004, PAN IND SOFTW LAT, P97
   McCaffery Fergal, 2009, Software Process: Improvement and Practice, V14, P271, DOI 10.1002/spip.430
   MCCAFFERY F, 2006, EUROPEAN SYSTEMS SOF
   MCFEELEY R, 1996, CMUSEI96HB001
   *NYCE, 2005, NMX059NYCE2005
   OKTABA H, 2004, NMX100601AL04NYCE200
   Oktaba H, 2007, COMPUTER, V40, P21, DOI 10.1109/MC.2007.361
   *OMG, 2008, SOFTW SYST PROC ENG
   OSSHER H, 2000, ICSE FUTURE SE TRACK, P261
   PAULK MC, 1998, P 16 ANN PAC NW SOFT, P350
   PINO F, 2006, P INT C SOFTW PROC P, P171
   PINO F, 2009, 24 ANN ACM S APPL CO, P509
   PINO F, 2006, EUROPEAN SYSTEMS SOF
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Pino FJ, 2009, LECT NOTES COMPUT SC, V5543, P342, DOI 10.1007/978-3-642-01680-6_31
   Richardson I, 2007, IEEE SOFTWARE, V24, P18, DOI 10.1109/MS.2007.12
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   *SEI, 2006, CMUSEI2006HB002 STAN
   *SEI, 2006, IMPR PROC SMALL SETT
   Storey D.J., 1982, ENTREPRENEURSHIP NEW
   WANGENHEIM GGV, 2006, SOFTWARE PROCESS IMP, V11, P329
   Weber KC, 2005, LECT NOTES COMPUT SC, V3733, P402
   Wood-Harper A.T., 1985, RES METHODS INFORM S, P169
   Yin R.K., 2011, Qualitative research from start to finish
NR 41
TC 41
Z9 43
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2010
VL 52
IS 10
BP 1044
EP 1061
DI 10.1016/j.infsof.2010.04.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 638LF
UT WOS:000280895700003
DA 2024-07-18
ER

PT J
AU Rosado, DG
   Fernández-Medina, E
   López, J
   Piattini, M
AF Rosado, David G.
   Fernandez-Medina, Eduardo
   Lopez, Javier
   Piattini, Mario
TI Analysis of Secure Mobile Grid Systems: A systematic approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Secure mobile Grid development; Requirements Analysis; Reusable use
   cases; Security
ID REQUIREMENTS
AB Developing software through systematic processes is becoming more and more important due to the growing complexity of software development It is important that the development process used integrates security aspects from the first stages at the same level as other functional and non-functional requirements Systems which are based on Grid Computing are a kind of systems that have clear differentiating features in which security is a highly important aspect. The Mobile God, which is relevant to both Grid and Mobile Computing, is a full inheritor of the Grid with the additional feature that it supports mobile users and resources A development methodology for Secure Mobile Grid Systems is proposed in which the security aspects are considered from the first stages of the life-cycle and in which the mobile Grid technological environment is always present in each activity. This paper presents the analysis activity, in which the requirements (focusing on the grid, mobile and security requirements) of the system are specified and which is driven by reusable use cases through which the requirements and needs of these systems can be defined These use cases have been defined through a UML-extension for security use cases and Grid use cases which capture the behaviour of this kind of systems The analysis activity has been applied to a real case (C) 2010 Elsevier B V. All rights reserved
C1 [Rosado, David G.; Fernandez-Medina, Eduardo; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, Informat Syst & Technol Inst, Informat Syst & Technol Dept,ESI, E-13071 Ciudad Real, Spain.
   [Lopez, Javier] Univ Malaga, Dept Comp Sci, E-29071 Malaga, Spain.
C3 Universidad de Castilla-La Mancha; Universidad de Malaga
RP Fernández-Medina, E (corresponding author), Univ Castilla La Mancha, Alarcos Res Grp, Informat Syst & Technol Inst, Informat Syst & Technol Dept,ESI, Paseo Univ 4, E-13071 Ciudad Real, Spain.
RI Rosado, David G./L-8221-2014; Piattini, Mario/F-6271-2013;
   Fernandez-Medina, Eduardo/D-4648-2011; Lopez, Javier/L-1459-2014
OI Rosado, David G./0000-0003-4613-5501; Piattini,
   Mario/0000-0002-7212-8279; Fernandez-Medina,
   Eduardo/0000-0003-2553-9320; Lopez, Javier/0000-0001-8066-9991
FU "Viceconsejeria de Ciencia y Tecnologia de la Junta de Comunidades de
   Castilla-La Mancha" (Spain) [PAC08-0157-0668]; "Direccion General de
   Investigacion del Ministerio de Educacion y Ciencia" (Spain)
   [TIN2006-15175-C05-05]; European Commission [FP6 34363]
FX This research is part of the following projects: QUASIMODO
   (PAC08-0157-0668) financed by the "Viceconsejeria de Ciencia y
   Tecnologia de la Junta de Comunidades de Castilla-La Mancha" (Spain),
   and ESFINGE (TIN2006-15175-C05-05) Granted by the "Direccion General de
   Investigacion del Ministerio de Educacion y Ciencia" (Spain). Special
   acknowledgment to GREDIA (FP6 34363 - Grid enabled access to rich media
   content) funded by European Commission
CR [Anonymous], SECURITY ORIENTED AP
   [Anonymous], 12 WORK C REQ ENG FD
   ARTELSMAIR C, 2003, 7 WORLD MULT SYST CY
   BASIN D, 2002, LECT NOTES COMPUTER, V2460
   BASIN D, 2003, ACM S ACC CONTR MOD
   BASS L, 2004, SECURITY SURVIVABILI
   BHANWAR S, 2008, SECURING GRID WORLD
   BRADFORD PG, 2007, SECURITY DISTRIBUTED, P440
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   BREU R, 2003, INT C SOFTW SYST ENG
   CASTRO J, 2001, 13 INT C ADV INF SYS
   DAIL H, 2004, CRID RESOURCE MANAGE, P73
   DAMBROGIO A, 2008, IASTED INT C SOFTW E
   De Win B, 2009, INFORM SOFTWARE TECH, V51, P1152, DOI 10.1016/j.infsof.2008.01.010
   DEHLEN V, 2007, LNCS, V4531
   ESTAY C, 2000, 10 ANN BUS INF TECHN
   Fernández-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   Fernández-Medina E, 2009, INFORM SOFTWARE TECH, V51, P809, DOI 10.1016/j.infsof.2008.05.010
   FOSTER I, 2001, 7 INT EUR C MANCH PA
   FOSTER I, 1998, 5 C COMP COMM SEC
   Foster I.K., 2002, Global Grid Forum
   Georg G, 2009, INFORM SOFTWARE TECH, V51, P846, DOI 10.1016/j.infsof.2008.05.004
   GRAHAM D., 2006, INTRO CLASP PROCESS
   Grassi V, 2004, LECT NOTES COMPUT SC, V3273, P128
   GUAN T, 2005, 1 INT C SEM KNOWL GR
   GUTIERREZ C, 2005, S REQ ENG INF SEC PA
   HALEY CB, 2006, SOFTW ENG SEC SYST W
   HUMPHREY M, 2005, LBNL54853
   *ISO IEC, 2009, 25010 ISOIEC
   *ISO IEC, 1996, INF TECHN GUID MAN I
   *ITU, 1991, X800 ITU
   JACOBSON I, 1999, UNIFIED SOFTWARE DEV, V512
   JAMEEL H, 2005, EUR GRID C EGC 2005
   JURJENS J, 2008, INT C SOFTW ENG IEEE
   JURJENS J, 2002, 5 INT C UN MOD LANG
   JURJENS J, 2001, INT C FUND APPR SOFT
   JURJENS J, 2002, COMMUN ACM, V48, P1026
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   KOLONAY R, 2004, CONCURRENT ENG
   KOSTOPOULOS G, 2007, SECURITY DISTRIBUTED, P440
   KRUCHTEN P, 2000, RATIONAL UNIFIED PRO, P320
   LITKE A, 2004, 5 INT C PRACT ASP KN
   Lodderstedt T., 2002, SECUREUML UML BASED
   Mead NR, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P44
   MELLADO D, 2008, 3 INT C SOFTW ENG AD
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Mouratidis H, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P1
   *OMG, 2008, SOFTW SYST PROC ENG
   *OP GRID FOR, 2006, OP GRID SERV ARCH VE
   POPP G, 2003, 10 AS PAC SOFTW ENG
   Rosado DG, 2009, INT J GRID HIGH PERF, V1, P1, DOI 10.4018/jghpc.2009070101
   ROSADO DG, 2008, 3 INT C SOFTW DAT TE
   ROSADO DG, IEICE T INFORM UNPUB
   ROSADO DG, 2008, INT C AV REL SEC ARE
   ROSADO DG, 2009, LNCS, V5833
   ROSADO DG, 2009, WORKSH SOFTW ENG SEC
   SINDRE G, 2001, 14 NORW INF C NIK 20
   STEEL C, 2005, CORE SECURITY PATTER, P1088
   TALUKDER A, 2006, MOBILE COMPUTING, pCH18
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   Trujillo J, 2009, INFORM SOFTWARE TECH, V51, P1033, DOI 10.1016/j.infsof.2008.12.003
   Welch V., 2003, 12 IEEE INT S HIGH P
   YODER J, 1997, 4 C PATT LANG PROGR
NR 63
TC 16
Z9 18
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2010
VL 52
IS 5
SI SI
BP 517
EP 536
DI 10.1016/j.infsof.2010.01.002
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 588XF
UT WOS:000277107200005
DA 2024-07-18
ER

PT J
AU Rabiser, R
   Grünbacher, P
   Dhungana, D
AF Rabiser, Rick
   Gruenbacher, Paul
   Dhungana, Deepak
TI Requirements for product derivation support: Results from a systematic
   literature review and an expert survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product derivation; Software product line; Product line engineering;
   Systematic literature review
AB Context: An increasing number of publications in product line engineering address product derivation, i.e., the process of building products from reusable assets. Despite its importance, there is still no consensus regarding the requirements for product derivation support.
   Objective: Our aim is to identify and validate requirements for tool-supported product derivation.
   Method: We identify the requirements through a systematic literature review and validate them with an expert survey.
   Results: We discuss the resulting requirements and provide implementation examples from existing product derivation approaches.
   Conclusions: We conclude that key requirements are emerging in the research literature and are also considered relevant by experts in the field. (c) 2009 Elsevier B.V. All rights reserved.
C1 [Rabiser, Rick; Gruenbacher, Paul] Johannes Kepler Univ Linz, Christian Doppler Lab Automated Software Engn, A-4040 Linz, Austria.
   [Dhungana, Deepak] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
C3 Johannes Kepler University Linz; University of Limerick
RP Rabiser, R (corresponding author), Johannes Kepler Univ Linz, Christian Doppler Lab Automated Software Engn, Altenberger Str 69, A-4040 Linz, Austria.
EM rabiser@ase.jku.at; gruenbacher@ase.jku.at; deepak.dhungana@lero.ie
RI ; Grunbacher, Paul/C-2970-2013; Rabiser, Rick/B-8673-2017
OI Dhungana, Deepak/0000-0001-9327-9896; Grunbacher,
   Paul/0000-0002-1951-5288; Rabiser, Rick/0000-0003-3862-1112
CR [Anonymous], P 5 INT WORKSH PROD
   [Anonymous], 2007, EBSE200701 U DURH DE
   [Anonymous], 2007, COMPANION 22 ACM SIG
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   ATKINSON C, 2000, P 1 SOFTW PROD LIN C, P19
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Babbie E.R., 1990, SURV RES METHODS-GER, VSecond
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   Bayer J., 2000, Proceedings Seventh IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2000), P237, DOI 10.1109/ECBS.2000.839882
   BAYER J, 2004, 12406E FRAUNH IESE
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   BOSCH J, 2001, P PROD FAM ARCH WORK, P13
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   CAWLEY C, 2008, P 2 INT WORKSH VAR M, P7
   CHASTEK G, 2004, CMUSEI2004TN012
   Clements PC, 2005, IEEE SOFTWARE, V22, P54, DOI 10.1109/MS.2005.133
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   CZARNECKI K, 2005, P INT WORKSH SOFTW F, P1
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   DIAZ O, 2005, P 9 INT SOFTW PROD L, P210
   Faulk SR, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P48
   GEYER L, 2002, P 2 SOFTW PROD LIN C, P1
   Gomaa H., 2005, DESIGNING SOFTWARE P
   GRISS ML, 2000, IMPLEMENTING PRODUCT
   Halmans G., 2004, Informatik Forschung und Entwicklung, V18, P113, DOI 10.1007/s00450-004-0156-6
   Hotz L., 2006, Configuration in Industrial Product Families - The ConIPF Methodology
   Hunt JM, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P65, DOI 10.1109/SPLINE.2006.1691578
   Kakola T., 2006, SOFTWARE PRODUCT LIN
   Kang Kyo C, 1990, Technical Report
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krueger CW, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P97, DOI 10.1109/SPLINE.2007.34
   Loesch F, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P151, DOI 10.1109/SPLINE.2007.31
   McGregor John D., 2005, CMUSEI2005TR017
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   O'Leary P, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P121
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   RABISER R, 2009, P 42 ANN HAW INT C S, P10
   RABISER R, 2008, P 12 INT SOFTW PROD, P323
   RABISER R, 2009, THESIS J KEPLER U LI
   Rabiser R, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P141
   Rabiser R, 2007, EUROMICRO CONF PROC, P219
   Reiser MO, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P149
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 46
TC 47
Z9 55
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2010
VL 52
IS 3
BP 324
EP 346
DI 10.1016/j.infsof.2009.11.001
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 571PF
UT WOS:000275765900006
DA 2024-07-18
ER

PT J
AU Sánchez, P
   Moreira, A
   Fuentes, L
   Araújo, J
   Magno, J
AF Sanchez, Pablo
   Moreira, Ana
   Fuentes, Lidia
   Araujo, Joao
   Magno, Jose
TI Model-driven development for early aspects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Early aspects; Model-driven development; Aspect-Oriented Software
   Development; Model transformation
ID DESIGN; REQUIREMENTS; ARCHITECTURES; COMPONENT; CONTEXT; IMPACT; AOP;
   UML
AB Currently, non-functional requirements (NFRs) consume a considerable part of the software development effort. The good news is that most of them appear time and again during system development and, luckily, their solutions can be often described as a pattern independently from any specific application or domain. A proof of this are the current application servers and middleware platforms that can provide configurable prebuilt services for managing some of these crosscutting concerns, or aspects. Nevertheless, these reusable pattern solutions presents two shortcomings, among others: (1) they need to be applied manually; and (2) most of these pattern solutions do not use aspect-orientation, and, since NFRs are often crosscutting concerns, this leads to scattered and tangled representations of these concerns. Our approach aims to overcome these limitations by: (1) using model-driven techniques to reduce the development effort associated to systematically apply reusable solutions for satisfying NFRs; and (2) using aspect-orientation to improve the modularization of these crosscutting concerns. Regarding the first contribution, since the portion of a system related to NFRs is usually significant, the reduction on the development effort associated to these NFRs is also significant. Regarding the second contribution, the use aspect-orientation improves maintenance and evolution of the non-functional requirements that are managed as aspects. An additional contribution of our work is to define a mapping and transition from aspectual requirements to aspect-oriented software architectures, which, in turn, contributes to improve the general issue of systematically relating requirements to architecture. Our approach is illustrated by applying it to a Toll Gate case study. (c) 2009 Elsevier B.V. All rights reserved.
C1 [Sanchez, Pablo; Fuentes, Lidia] Univ Malaga, Dpto Lenguajes & Ciencias Computac ETSI Informat, E-29071 Malaga, Spain.
   [Moreira, Ana; Araujo, Joao; Magno, Jose] Univ Nova Lisboa, CITI, Dept Informat, Fac Ciencias & Tecnol, P-1200 Lisbon, Portugal.
   [Magno, Jose] Inst Politecn Leiria, Dpto Engn Informat, Escola Super Tecnol & Gestao, Leiria, Portugal.
C3 Universidad de Malaga; Universidade Nova de Lisboa; Instituto
   Politecnico do Porto; Polytechnic Institute of Leiria
RP Sánchez, P (corresponding author), Univ Malaga, Dpto Lenguajes & Ciencias Computac ETSI Informat, E-29071 Malaga, Spain.
EM pablo@lcc.uma.es; amm@di.fct.unl.pt; lff@lcc.uma.es; ja@di.fct.unl.pt;
   magno@estg.ipleiria.pt
RI FCTUNL, CITI/G-6714-2011; Araujo, Joao/G-2108-2011; Sanchez,
   Pablo/L-5842-2014; Araujo, Joao/M-3560-2013; Moreira, Ana/F-4770-2011;
   Fuentes, Lidia/M-5580-2014
OI Sanchez, Pablo/0000-0002-4617-0457; Araujo, Joao/0000-0001-5914-1631;
   Moreira, Ana/0000-0003-2046-2766; Fuentes, Lidia/0000-0002-5677-7156
FU Spanish Ministry Project [TIN2008-01942/TIN]; EC [IST-2-004349-NOE,
   IST-033710];  [HP2004-0015]
FX This work has been partially supported by the project HP2004-0015, the
   Spanish Ministry Project TIN2008-01942/TIN and EC Grants
   IST-2-004349-NOE AOSD-Europe and AMPLE IST-033710.
CR AKSIT M, 2005, S AD IS MDA TWENT EN
   ALTAHAT Z, 2008, P 20 INT C SOFTW ENG, P905
   ALWIS B, 2003, TR200316 U BRIT COL
   Amaya P, 2006, ELECTRON NOTES THEOR, V163, P31, DOI 10.1016/j.entcs.2006.07.006
   [Anonymous], 2001, Specification and Development of Interactive Systems: FOCUS on Streams, Interfaces, and Refinement
   [Anonymous], LNCS
   [Anonymous], THESIS U NOVA LISBOA
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   ARAUJO I, 2002, P 9 C PATT LANG PROG
   Araújo J, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P58
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Baniassad E, 2006, IEEE SOFTWARE, V23, P61, DOI 10.1109/MS.2006.8
   Baniassad E, 2004, PROC INT CONF SOFTW, P158, DOI 10.1109/ICSE.2004.1317438
   BARAIS O, 2004, P 1 INT WORKSH COORD
   BARBOSA P, 2005, P 6 INT WORKSH ASP O
   BATISTA T, 2006, P 20 BRAZ S SOFTW EN
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   Beydeda S., 2005, MODEL DRIVEN SOFTWAR
   BRINKSMA E, 1988, 8807 ISO
   BRITO I, 2003, P 8 JORN ING SOFTW B, P47
   BRITO I, 2004, P 3 INT WORKSH EARL
   Brito IS, 2007, LECT NOTES COMPUT SC, V4620, P144
   Chitchyan R., 2005, AOSDEUROPEULANC9 LAN
   CHITCHYAN R, 2006, AOSDEUROPEULANC24 LA
   Chitchyan R, 2007, LECT NOTES COMPUT SC, V4640, P3
   Chung L., 1999, NONFUNCTIONAL REQUIR
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   Clarke S., 2005, ASPECT ORIENTED ANAL
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Coelho R, 2008, LECT NOTES COMPUT SC, V5142, P207, DOI 10.1007/978-3-540-70592-5_10
   COTTENIER T, 2006, P 6 INT C ASP OR SOF
   DOUENCE R, 2002, P ACM SIGPLAN SIGSOF, P173
   Douence R., 2004, C SPED ORIENTED SOFT, P141
   Falcarin P, 2006, IEEE INT CONF AUTOM, P313
   FIGUEIREDO E, 2008, P 12 EUR C SOFTW MAI
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Finkelstein A, 1996, SOFTWARE ENG J, V11, P2, DOI 10.1049/sej.1996.0001
   France R, 2004, IEE P-SOFTW, V151, P173, DOI 10.1049/ip-sen:20040920
   France RB, 2006, COMPUTER, V39, P59, DOI 10.1109/MC.2006.65
   Fuentes L, 2007, SOFTWARE PRACT EXPER, V37, P21, DOI 10.1002/spe.744
   FUENTES L, 2009, ASPECT ORIENTED EXEC
   Fuentes L, 2008, INFORM SOFTWARE TECH, V50, P1248, DOI 10.1016/j.infsof.2007.10.020
   Fuentes L, 2007, ELECTRON NOTES THEOR, V189, P87, DOI 10.1016/j.entcs.2007.05.049
   Fuentes L, 2007, J OBJECT TECHNOL, V6, P109, DOI 10.5381/jot.2007.6.7.a5
   GAL A, 2001, WORKSH ADV SEP CONC
   GAMEZ N, 2007, CODE GENERATION ARCH
   Garcia A, 2006, LECT NOTES COMPUT SC, V4344, P82
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Grundy J, 2000, INT J SOFTW ENG KNOW, V10, P713, DOI 10.1142/S0218194000000341
   HARRISON W, 1993, SIGPLAN NOTICES, V28, P411, DOI 10.1145/167962.165932
   Herrero J., 2000, P 14 EUR C OBJ OR PR
   HOSMER C., 2002, International journal of digital evidence, V1
   Jacobson Ivar., 2005, ASPECT ORIENTED SOFT
   JOUAULT F, 2006, P 2 INT DYN LANG S D
   JOUAULT F, 2006, P 2006 ACM S APPL CO, P1188, DOI DOI 10.1145/1141277.1141561
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   Kande Mohamed Mancona, 2003, THESIS SWISS FEDERAL
   Kiczales G, 2005, PROC INT CONF SOFTW, P49
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 1991, The Art of the Metaobject Protocol
   Kiczales Gregor, 2001, LNCS, V2072, P327, DOI DOI 10.1007/3-540-45337-718
   Kienzle J, 2002, LECT NOTES COMPUT SC, V2374, P37
   Kienzle Jorg., 2006, AOSD 06, P202
   KIM H, 2002, TCDCS200255 DEP COMP
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kourai K, 2007, P AOSD, P1
   Kovacevic J., 2007, Survey of the state-of-the-art in Requirements Engineering for Software Product Line and Model-Driven Requirements Engineering
   KULESZA U, 2006, P 9 INT C SOFTW MAIN
   Kulkarni V, 2003, IEEE SOFTWARE, V20, P64, DOI 10.1109/MS.2003.1231154
   Lieberherr K, 2001, COMMUN ACM, V44, P39, DOI 10.1145/383845.383855
   Lopes CV, 2006, LECT NOTES COMPUT SC, V3880, P1
   LOUGHRAN N, 2006, AOSDEUROPEKUL6
   Mellor S.J., 2004, MDA DISTILLED
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Molesini A, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P29, DOI 10.1109/WICSA.2008.26
   Moreira A, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/RE.2005.46
   *OMG, 2005, MOF QVT FIN AD SPEC
   OSTERMANN K, 2008, P 7 INT C ASP OR SOF, P48
   Pastor O., 2007, MODEL DRIVEN ARCHITE
   Pérez J, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P59, DOI 10.1109/QSIC.2003.1319086
   Pessemier N, 2006, LECT NOTES COMPUT SC, V4089, P259
   Pinto M, 2005, COMPUT J, V48, P401, DOI 10.1093/comjnl/bxh083
   Pinto M, 2003, LECT NOTES COMPUT SC, V2830, P118
   PRAVEEN K, 2007, LNCS, V4735, P151
   Rashid A, 2004, IEE P-SOFTW, V151, P153, DOI 10.1049/ip-sen:20041027
   Rashid A., 2003, AOSD 2003 P 2 INT C, P11
   Rashid A, 2006, LECT NOTES COMPUT SC, V4199, P155
   Sánchez P, 2007, LECT NOTES COMPUT SC, V4640, P54
   SANEN F, 2006, P 5 INT WORKSH ASP C
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   SENDALL S, 2001, LNCS, V2185, P391
   Silaghi R, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P136, DOI 10.1109/EDOC.2003.1233844
   Simmonds D, 2005, NINTH IEEE INTERNATIONAL EDOC ENTERPRISE COMPUTING CONFERENCE, PROCEEDINGS, P119, DOI 10.1109/EDOC.2005.5
   Soares S, 2006, SOFTWARE PRACT EXPER, V36, P711, DOI 10.1002/spe.715
   SOEIRO E, 2006, P 8 INT C ENT INF SY, P410
   STEIN D, 2002, P 1 WORKSH ASP OR MO
   Tanter É, 2006, LECT NOTES COMPUT SC, V4089, P227
   TARR P., 2004, Aspect-Oriented Software Development, P37
   Tekinerdogan B, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P5, DOI 10.1109/WICSA.2004.1310685
   VALENZUELA JA, 2008, 7 INT C ASP OR SOFTW
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Vanstone S.A., 1996, Handbook of Applied Cryptography
   WHITTLE J, 2004, IEE P SOFTW AUG 2004
   YU Y, 2008, P 12 INT C REQ ENG R, P38
   Zhang J, 2007, J OBJECT TECHNOL, V6, P89, DOI 10.5381/jot.2007.6.7.a4
NR 107
TC 21
Z9 21
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2010
VL 52
IS 3
BP 249
EP 273
DI 10.1016/j.infsof.2009.09.001
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 571PF
UT WOS:000275765900002
DA 2024-07-18
ER

PT J
AU Basin, D
   Clavel, M
   Doser, J
   Egea, M
AF Basin, David
   Clavel, Manuel
   Doser, Juergen
   Egea, Marina
TI Automated analysis of security-design models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE UML; OCL; SecureUML; Security policies; Formal analysis; Metamodels
AB We have previously proposed SecureUML, an expressive UML-based language for constructing security-design models, which are models that combine design specifications for distributed systems with specifications of their security policies. Here, we show how to automate the analysis of such models in a semantically precise and meaningful way. In our approach, models are formalized together with scenarios that represent possible run-time instances. Queries about properties of the security policy modeled are expressed as formulas in UML's Object Constraint Language. The policy may include both declarative aspects, i.e., static access-control information such as the assignment of users and permissions to roles, and programmatic aspects, which depend on dynamic information, namely the satisfaction of authorization constraints in a given scenario. We show how Such properties can be evaluated, completely automatically, in the context of the metamodel of the security-design language. We demonstrate, through examples, that this approach can be used to formalize and check non-trivial security properties. The approach has been implemented in the SecureMOVA tool and all of the examples presented have been checked using this tool. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Basin, David; Doser, Juergen] ETH, Informat Secur Grp, Zurich, Switzerland.
   [Clavel, Manuel] IMDEA Software Inst, Madrid, Spain.
   [Clavel, Manuel; Egea, Marina] Univ Complutense Madrid, Dept Comp Sci, Madrid, Spain.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; IMDEA
   Software Institute; Complutense University of Madrid
RP Basin, D (corresponding author), ETH, Informat Secur Grp, Zurich, Switzerland.
EM basin@inf.ethz.ch; clavel@sip.ucm.es; doserj@inf.ethz.ch;
   marinaegea@fdi.ucm.es
RI Egea, Marina/G-4354-2013
FU Spanish MEC [TIN2005-09207-C03-03, TIN2005-15660-C02-01]; Camunidad de
   Madrid Program [S-0505/TIC/0407]
FX Research partially supported by Spanish MEC Projects
   TIN2005-09207-C03-03 and TIN2005-15660-C02-01, and by Camunidad de
   Madrid Program S-0505/TIC/0407.
CR AHN GJ, 2001, WETICE 01
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   BASIN D, 2007, LECT NOTES COMPUTER, V4735
   BASIN D, 2003, P 8 ACM S ACC CONTR
   BOULTON RJ, 1992, P IFIP TC10 WG 10 2
   Brito e Abreu F., 2001, ES0072001 FCTUNL INE
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   GEORG G, 2002, ICECCS 02
   Jurjens J., 2002, LECT NOTES COMPUTER, V2460
   JURJENS J, 2001, LECT NOTES COMPUTER, V2029
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   *OBJ MAN GROUP, 2007, UN MOD LANG INFR VER
   Object Management Group, 2003, UML 2 0 OCL SPEC OMG
   SOHR K, 2005, P 10 EUR S RES COMP, V3679
   WANG H, 2004, LECT NOTES COMPUTER, V3007
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
NR 16
TC 77
Z9 79
U1 0
U2 5
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2009
VL 51
IS 5
BP 815
EP 831
DI 10.1016/j.infsof.2008.05.011
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425OY
UT WOS:000264648200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Georg, G
   Ray, I
   Anastasaki, K
   Bordbar, B
   Toahchoodee, M
   Houmb, SH
AF Georg, Geri
   Ray, Indrakshi
   Anastasaki, Kyriakos
   Bordbar, Behzad
   Toahchoodee, Manachai
   Houmb, Siv Hilde
TI An aspect-oriented methodology for designing secure applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Alloy; Aspect-oriented modeling; Authentication; Secure systems design;
   Security analysis; UML
ID DRIVEN DEVELOPMENT; UML; EXTENSION
AB We propose a methodology, based on aspect-oriented modeling (AOM), for incorporating security mechanisms in an application. The functionality of the application is described using the primary model and the attacks are specified using aspects. The attack aspect is composed with the primary model to obtain the misuse model. The misuse model describes how much the application can be compromised. If the results are unacceptable, then some security mechanism must be incorporated into the application. The security mechanism, modeled as security aspect, is composed with the primary model to obtain the security-treated model. The security-treated model is analyzed to give assurance that it is resilient to the attack. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Georg, Geri; Ray, Indrakshi; Toahchoodee, Manachai] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80528 USA.
   [Anastasaki, Kyriakos; Bordbar, Behzad] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
   [Houmb, Siv Hilde] Univ Twente, Dept Comp Sci, NL-7500 AE Enschede, Netherlands.
C3 Colorado State University; University of Birmingham; University of
   Twente
RP Ray, I (corresponding author), Colorado State Univ, Dept Comp Sci, 1873 Campus Delivery, Ft Collins, CO 80528 USA.
EM georg@cs.colostate.edu; iray@cs.colostate.edu;
   K.Anastasakis@cs.bham.ac.uk; B.Bordbar@cs.bham.ac.uk;
   toahchoo@cs.colostate.edu; S.H.Houmb@ewi.utwente.nl
FU AFOSR [FA9550-04-1-0102]
FX This work was partially supported by AFOSR under Award No.
   FA9550-04-1-0102.
CR *AOSD EUROPE, 2005, ULANC9 AOSDEUROPE
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   BECKETT B, 2007, LNCS, V4334
   BORDBAR B, 2005, NUNO GUIMARAES, V1, P209
   Bordbar B, 2006, LECT NOTES COMPUT SC, V3888, P44
   Brucker AD, 2006, LECT NOTES COMPUT SC, V4199, P306
   BRUCKER AD, THESIS ETH ZURICH
   CABOT J, 2006, LNCS, V4069, P256
   Cabot J, 2006, LECT NOTES COMPUT SC, V4066, P256
   Clarke S, 2002, SCI COMPUT PROGRAM, V44, P71, DOI 10.1016/S0167-6423(02)00030-8
   DENNIS G, 2004, ISSTA 04, P165
   DIMITRAKOS T, 2002, IFIP C P, V233, P159
   EVANS A, 1999, P WORKSH BEHAV SEMAN
   France R, 2004, IEE P-SOFTW, V151, P173, DOI 10.1049/ip-sen:20040920
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Georg G, 2002, IEEE INT C ENG COMP, P117, DOI 10.1109/ICECCS.2002.1181504
   Georg G., 2002, P WORKSHOP CRITICAL, P107
   GEORG G, 2001, PRACTICAL UML BASE P, V7, P128
   Georg G, 2006, LECT NOTES COMPUT SC, V4127, P282
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Hussmann H, 2000, LECT NOTES COMPUT SC, V1939, P278
   *ISO, 1999, 15408 ISO
   JACKSON D, 2000, 8 ACM SIGSOFT S COMP
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   JACOBSON I, 2003, SOFTWARE DEV MAG NOV, P42
   JURJENS J, 2005, SECURE SYSTEMS DEVEL
   KHURSHID S, 2000, ASE, P13
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   KIM SK, 2002, THESIS U QUEENSLAND
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Manakadan R., 2001, BUCEROS, V6, P1
   MASSONI T, 2004, THIRD WORKSHOP CRITI, P100
   MOSER M, SETHEO ESETHEO  CADE
   MOSTEFAOUI F, 2007, SPECIAL, V6, P7
   Muller PA, 2006, LECT NOTES COMPUT SC, V4199, P98
   NIPKOW T, 2002, ISABELLEHOL  A PROOF, V2283
   Nunes I, 2003, LECT NOTES COMPUT SC, V2863, P310
   *OBJ MAN GROUP, OB CONSTR LANG VERS
   *OBJ MAN GROUP, UN MOD LANG INFR SPE
   *OBJ MAN GROUP, XML MET INT XMI V2 0
   *OCLE, 2007, OB CONST LANG ENV
   *RISK MAN, 2004, 43602004 ASNZS RISK
   Smith Graeme., 2000, OBJECT Z SPECIFICATI
   STOLEN K, 2002, BUSINESS COMPONENT B, P189
   Straw G, 2004, LECT NOTES COMPUT SC, V3273, P84
   *TLS, 1999, TLS PROTOCOL VERSION
   *TLSWG, 1996, TLSWG SSL 3 0 SPEC
   Trillo C.P., 2005, P 5 LAT AM C PATT LA, P89
   Vaziri M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P555
   Velal B, 2006, SIGMOD REC, V35, P22, DOI 10.1145/1168092.1168095
   Whittle J, 2004, IEE P-SOFTW, V151, P157, DOI 10.1049/ip-sen:20040921
   Wimmer M, 2006, LECT NOTES COMPUT SC, V3844, P159
   Woodside, 1996, SPECIFICATION REFINE, P11
NR 54
TC 41
Z9 45
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2009
VL 51
IS 5
SI SI
BP 846
EP 864
DI 10.1016/j.infsof.2008.05.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 425OY
UT WOS:000264648200004
OA Green Published
DA 2024-07-18
ER

PT J
AU Collberg, C
   Huntwork, A
   Carter, E
   Townsend, G
   Stepp, M
AF Collberg, Christian
   Huntwork, Andrew
   Carter, Edward
   Townsend, Gregg
   Stepp, Michael
TI More on graph theoretic software watermarks: Implementation, analysis,
   and attacks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software watermarking; Software protection; Surreptitious software;
   Software piracy protection
AB This paper presents an implementation of the watermarking method proposed by Venkatesan et al. in their paper [R. Venkatesan, V. Vazirani. S. Sinha, A graph theoretic approach to software watermarking, in: Fourth International Information Hiding Workshop, Pittsburgh, PA, 2001]. An executable program is marked by the addition of code for which the topology of the control-flow graph encodes a watermark. We discuss issues that were identified during construction of an actual implementation that operates on Java bytecode. We present two algorithms for splitting a watermark number into a redundant set of pieces and an algorithm for turning a watermark number into a control-now graph. We measure the size and time overhead of watermarking, and evaluate the algorithm against a variety of attacks. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Collberg, Christian; Townsend, Gregg] Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
   [Huntwork, Andrew] Amazon Com, Seattle, WA 98144 USA.
   [Carter, Edward] Univ Calif Berkeley, Dept Math, Berkeley, CA 94720 USA.
   [Stepp, Michael] Univ Calif San Diego, Dept Comp Sci, La Jolla, CA 92093 USA.
C3 University of Arizona; Amazon.com; University of California System;
   University of California Berkeley; University of California System;
   University of California San Diego
RP Collberg, C (corresponding author), Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
EM collberg@cs.arizona.edu; ash@huntwork.net; ecarter@math.berkeley.edu;
   gmt@cs.arizona.edu; mstepp@cs.ucsd.edu
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 2002, ICECR 5
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   COLLBERG C, 1999, POPL 99 26 ACM SIGPL
   COLLBERG C, 2004, WORKSH INF HID, P192
   Collberg C., 1997, TAXONOMY OBFUSCATING
   COLLBERG C, 1998, PRINCIPLES PROGRAMMI
   COLLBERG C, 2003, WORKSH GRAPHS COMP S
   COLLBERG C, 2004, PROGRAMMING LANGUAGE
   Collberg Christian, 1998, IEEE INT C COMP LANG
   DAHM M, 1999, SCI GERM JAV C
   Davidson R.L., 1996, US Patent, Patent No. [5,559,884, 5559884]
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   DEBRAY SK, 2001, P 2001 WORKSH BIN RE
   Knuth DE, 1997, SEMINUMERICAL ALGORI, V2
   Muth R, 2001, SOFTWARE PRACT EXPER, V31, P67, DOI 10.1002/1097-024X(200101)31:1<67::AID-SPE357>3.0.CO;2-A
   Myles G., 2003, INT C INF SEC CRYPT
   NYSTROM N, 1999, BLOAT BYTECODE LEVEL
   *P SOFTW, 1998, CAFF 3 0
   Qu G, 1998, 1998 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN, P190, DOI 10.1109/ICCAD.1998.742871
   Rivest R, 1992, 1321 RFC INT ENG TAS
   Stern JP, 2000, LECT NOTES COMPUT SC, V1768, P368
   Venkatesan R., 2001, INFORM HIDING, P157, DOI DOI 10.1007/3-540-45496-9_12
NR 23
TC 15
Z9 24
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 56
EP 67
DI 10.1016/j.infsof.2008.09.016
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500007
DA 2024-07-18
ER

PT J
AU de Assuncao, MD
   Buyya, R
AF de Assuncao, Marcos Dias
   Buyya, Rajkumar
TI Performance analysis of allocation policies for interGrid resource
   provisioning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Resource provisioning; Grid computing; InterGrid resource allocation
AB Several Grids have been established and used for varying science applications during the last years. Most of these Grids, however, work in isolation and with different utilisation levels. Previous work has introduced an architecture and a mechanism to enable resource sharing amongst Grids. It has demonstrated that there can be benefits for a Grid to offload requests or provide spare resources to another Grid. In this work, we address the problem of resource provisioning to Grid applications in multiple-Grid environments. The provisioning is carried out based on availability information obtained from queueing-based resource management systems deployed at the provider sites which are the participants of the Grids. We evaluate the performance of different allocation policies. In contrast to existing work on load sharing across Grids, the policies described here take into account the local load of resource providers, imprecise availability information and the compensation of providers for the resources offered to the Grid. In addition, we evaluate these policies along with a mechanism that allows resource sharing amongst Grids. Experimental results obtained through simulation show that the mechanism and policies are effective in redirecting requests thus improving the applications' average weighted response time. (C) 2008 Elsevier B.V. All rights reserved.
C1 [de Assuncao, Marcos Dias; Buyya, Rajkumar] Univ Melbourne, Dept Comp Sci & Software Engn, Grid Comp & Distributed Syst GRIDS Lab, Carlton, Vic 3053, Australia.
   [de Assuncao, Marcos Dias] Univ Melbourne, NICTA Victoria Res Lab, Melbourne, Vic 3010, Australia.
C3 University of Melbourne; University of Melbourne
RP de Assuncao, MD (corresponding author), Univ Melbourne, Dept Comp Sci & Software Engn, Grid Comp & Distributed Syst GRIDS Lab, 111 Barry St, Carlton, Vic 3053, Australia.
EM marcosd@csse.unimelb.edu.au; raj@csse.unimelb.edu.au
RI Buyya, Rajkumar/C-3424-2009
OI Assuncao, Marcos/0000-0002-4218-0260
FU DEST and ARC Project; National ICT Australia (NICTA)
FX We would like to thank: the anonymous reviewers for their comments;
   Marco Netto, Sungjin Choi and Alexandre di Costanzo from the University
   of Melbourne for the technical discussions on the topic; Mukaddim Pathan
   for helping in improving the language and expression of a preliminary
   version of this paper. We are also grateful to Dr. Franck Cappello, Dr.
   Olivier Richard, Dr. Emmanuel Medernach and the Grid Workloads Archive
   group for making the Grid workload traces available. This work is
   supported by DEST and ARC Project grants. Marcos' PhD research is
   partially supported by National ICT Australia (NICTA).
CR [Anonymous], CYBERINFRASTRUCTURE
   [Anonymous], 1994, Rules of Encounter: Designing Conventions for Automated Negotiation among Computers
   AUYOUNG A, 2006, 15 IEEE INT S HIGH P, P119
   AUYOUNG A, 2007, CS20070901 CSE U CAL
   Baake P., 1998, Netnomics, V1, P89, DOI 10.1023/A:1011449721395
   Badasyan N, 2005, NETNOMICS, V7, P115, DOI 10.1007/s11066-006-9007-x
   Balazinska M, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FIRST SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'04), P197
   Bolze R, 2006, INT J HIGH PERFORM C, V20, P481, DOI 10.1177/1094342006070078
   BRUNELLE J, 2006, 3 WORKSH GRID EC BUS, P140
   Buyya R., 2000, 4 INT C EXHIBITION H, P283
   BUYYA R, 2002, THESIS MONASH U MELB
   Clark DD, 2005, IEEE ACM T NETWORK, V13, P462, DOI 10.1109/TNET.2005.850224
   *CNGRID, 2007, CNGRID PROJ
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Dash RK, 2003, IEEE INTELL SYST, V18, P40, DOI 10.1109/MIS.2003.1249168
   de Assunçao MD, 2008, CONCURR COMP-PRACT E, V20, P997, DOI 10.1002/cpe.1249
   DEASSUNCAO MD, 2008, 14 IEEE INT C PAR DI
   DEASSUNCAO MD, 2008, INT C HIGH PERF COMP
   DUNNING T, CYBERINFRASTRUCTURE, V2
   *DUTCH U BACKB, 2006, DISTR ASCI SUP 2 DAS
   Ernemann C, 2002, LECT NOTES COMPUT SC, V2537, P128
   Eymann T, 2005, MULTIAGENT GRID SYST, V1, P297, DOI 10.3233/MGS-2005-1407
   Foster I, 2001, INT J HIGH PERFORM C, V15, P200, DOI 10.1177/109434200101500302
   FU Y, 2003, 19 ACM S OP SYST PRI, P133
   Garbacki P, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P40, DOI 10.1109/INM.2007.374768
   Grimme C, 2008, LECT NOTES COMPUT SC, V4942, P132
   GRIT L, 2006, 1 INT WORKSH VIRT TE
   Hanke J.E., 1995, BUSINESS FORECASTING
   Irwin D, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 2006 USENIX ANNUAL TECHNICAL CONFERENCE, P199
   Jackson D., 2001, LNCS, P87, DOI DOI 10.1007/3-540-45540-X
   LAI K, 2004, TYCOON IMPLEMENTATIO
   Lawson BG, 2002, LECT NOTES COMPUT SC, V2537, P72, DOI 10.1145/512840.512846
   Lifka D.A., 1995, LECT NOTES COMPUTER, V949, P295
   LOSUP A, 2007, 2007 ACM IEEE C SUP
   Lublin U, 2003, J PARALLEL DISTR COM, V63, P1105, DOI 10.1016/S0743-7315(03)00108-4
   Metz C, 2001, IEEE INTERNET COMPUT, V5, P74, DOI 10.1109/4236.914650
   MIURA K, 2006, PROGR INFORM, P67
   Mu'alem AW, 2001, IEEE T PARALL DISTR, V12, P529, DOI 10.1109/71.932708
   *OPENPBS, 2005, PORT BATCH SYST SOFT
   PADALA P, 2007, 2 ACM SIGOPS EUROSYS, P289
   PETERSON L, 2006, PDN06031 PLANETLAB C
   PETERSON L, 2007, GDD0611 GENI
   RAMAKRISHNAN L, 2006, 2006 ACM IEEE C SUP, P101
   Ranjan R., 2006, Proceedings of the IEEE International Conference on Cluster Computing, P1
   ROBLITZ T, 2004, WORKSH AD GRID MIDDL
   SINGH G, 2006, 2 IEEE INT C E SCI G, P83
   Singha AK, 2007, INT J MOD PHYS D, V16, P117, DOI 10.1142/S0218271807009358
   Surana S, 2006, PERFORM EVALUATION, V63, P217, DOI 10.1016/j.peva.2005.01.003
   Venugopal S, 2006, CONCURR COMP-PRACT E, V18, P685, DOI 10.1002/cpe.974
   Wang YL, 2007, IEEE POWER ELECTRON, P553
   WANG YT, 1985, IEEE T COMPUT, V34, P204, DOI 10.1109/TC.1985.1676564
   Weiss M. B., 2004, Netnomics, V6, P43, DOI 10.1023/B:NETN.0000023380.38300.25
   Wieczorek Marek., 2006, E SCI 2 IEEE INT C E, P82
   2005, CONDOR PROJECT HOMEP
NR 54
TC 30
Z9 31
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 42
EP 55
DI 10.1016/j.infsof.2008.09.013
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500006
DA 2024-07-18
ER

PT J
AU Choi, KS
   Deek, FP
   Im, I
AF Choi, Kyungsub S.
   Deek, Fadi P.
   Im, Il
TI Exploring the underlying aspects of pair programming: The impact of
   personality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID TEAM; SCIENCE
AB With the recent advent of agile software process methods, a number of seldom used and unorthodox practices have come to the fore-front in the field of computer programming. One such practice is that of pair programming, which is characterized by two programmers sharing the same computer for collaborative programming purposes. The very nature of pair programming implies a psychological and social interaction between the participating programmers and thus brings into play a unique element that we do not see with the conventional individual programming model. This paper focuses on the effects that one of these psychological factors, a programmer's personality type, may have on the pair programming environment. In this study, a group of university students, 68 undergraduate students and 60 master's degree graduate students, each of whom had been personality type profiled using the Myers Briggs Type Indicator (MBTI) model, was split into three sub-groups. One group consisted of subjects who were like in MBTI type. Another group consisted of subjects who were opposite to each other in MBTI type, and the last group was comprised of subjects who were diverse - partially alike and partially opposite - in MBTI type. Through two pair programming sessions, the pairs in each group were assessed for their output, in code productivity. The result showed that the sub-group of subjects who were diverse in MBTI type exhibited higher productivity than both alike and opposite groups. In a comparison between alike and opposite groups, the productivity of the opposite group was greater than that of the alike group.
C1 [Choi, Kyungsub S.] Manhattan Coll, Sch Business, Fac Comp Informat Syst, Riverdale, NY 10471 USA.
   [Deek, Fadi P.] New Jersey Inst Technol, Coll Comp Sci, Fac Informat Syst, Newark, NJ 07102 USA.
   [Im, Il] Yonsei Univ, Sch Business, Fac Informat Syst Dept, Seoul 120749, South Korea.
C3 Manhattan College; New Jersey Institute of Technology; Yonsei University
RP Choi, KS (corresponding author), Manhattan Coll, Sch Business, Fac Comp Informat Syst, Riverdale, NY 10471 USA.
EM kyungsub.choi@manhattan.edu; fadi.deek@njit.edu; il.im@yonsei.ac.kr
RI IM, IL/KDO-8850-2024
OI IM, IL/0000-0001-7536-3170
CR ANDERSON A, 1998, DISTRIB COMPUT, P24
   [Anonymous], P 35 TECHN S COMP SC
   [Anonymous], 2002, Pair Programming Illuminated
   Arnott D, 2006, INFORM SYST J, V16, P55, DOI 10.1111/j.1365-2575.2006.00208.x
   Baskerville R, 2004, INFORM SYST J, V14, P237, DOI 10.1111/j.1365-2575.2004.00171.x
   BASKERVILLE R, 2001, DEV DYNAMIC INTEGRAT, P145
   Bayne R., 1995, MYERS BRIGGS TYPE IN
   Beck K., 2000, EXTREME PROGRAMMING
   Bradley J.H., 1997, J MANAG DEV, V16, P337, DOI DOI 10.1108/02621719710174525
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Cheng M.M., 2003, BEHAV RES ACCOUNT, V15, P39
   CHOI KS, 2002, P INT C SOFTW ENG RE, P501
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cockburn A., 2001, The Costs and Benefits of Pair Programming
   Constantine L., 1995, Constantine on Peopleware
   Da Cunha A.Devito., 2004, Code review and personality: Is performance linked to MBTI type
   Erdogmus H., 2003, Engineering Economist, V48, P283, DOI 10.1080/00137910309408770
   Field A., 2003, DISCOVERING STAT USI, V1st
   Gardner WL, 1996, J MANAGE, V22, P45, DOI 10.1016/S0149-2063(96)90012-4
   GLASS RL, 2001, IEEE SOFTWARE, V18, P111
   Grenning J, 2001, IEEE SOFTWARE, V18, P27, DOI 10.1109/52.965799
   HIRSH SK, 1990, INTRO TYPIE ORG
   Jessup CM, 2002, J ORGAN CHANGE MANAG, V15, P502, DOI 10.1108/09534810210440405
   JONES TC, 1978, IBM SYST J, V17, P43
   Kichuk SL, 1997, J ENG TECHNOL MANAGE, V14, P195, DOI 10.1016/S0923-4748(97)00010-6
   Myers I. B., 1995, Gifts differing: understanding personality type
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Offermann LR, 2001, ACAD MANAGE J, V44, P376, DOI 10.5465/3069462
   QUENK NL, 1993, MYSELF INFERIOR FUNC
   Reilly RR, 2002, J ENG TECHNOL MANAGE, V19, P39, DOI 10.1016/S0923-4748(01)00045-5
   Rosenthal R., 2007, ESSENTIALS BEHAV RES
   ROWNTREE D, 2003, STAT TEARS PRIMER NO
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Sample J., 2004, Organization Development Journal, V22, P67
   STERLING GD, 2003, J INFORM SYSTEMS ED, V14, P417
   Stotts D, 2003, LECT NOTES COMPUT SC, V2753, P129
   Varvell T, 2004, J MANAGE ENG, V20, P141, DOI 10.1061/(ASCE)0742-597X(2004)20:4(141)
   Weinberg G.M., 1998, PSYCHOL COMPUTER PRO
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   WILLIAMS L, 2001, 32 SIGCSE TECHN S CO, P327
NR 41
TC 36
Z9 37
U1 2
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2008
VL 50
IS 11
BP 1114
EP 1126
DI 10.1016/j.infsof.2007.11.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 355LA
UT WOS:000259709200005
DA 2024-07-18
ER

PT J
AU Kosar, T
   López, PEM
   Barrientos, PA
   Mernik, M
AF Kosar, Tomaz
   Martinez Lopez, Pablo E.
   Barrientos, Pablo A.
   Mernik, Marjan
TI A preliminary study on various implementation approaches of
   domain-specific language
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE domain-specific languages; embedded approach; preprocessing;
   compiler/interpreter; compiler/interpreter generator; extensible
   compiler/interpreter; commercial-off-the-shelf
ID DESIGN
AB Various implementation approaches for developing a domain-specific language are available in literature. There are certain common beliefs about the advantages/disadvantages of these approaches. However, it is hard to be objective and speak in favor of a particular one, since these implementation approaches are normally compared over diverse application domains.
   The purpose of this paper is to provide empirical results from ten diverse implementation approaches for domain-specific languages, but conducted using the same representative language. Comparison shows that these discussed approaches differ in terms of the effort need to implement them, however, the effort needed by a. programmer to implement a domain-specific language should not be the only factor taken into consideration. Another important factor is the effort needed by an end-user to rapidly write correct programs using the produced domain-specific language. Therefore, this paper also provides empirical results on end-user productivity, which is measured as the lines of code needed to express a domain-specific program, similarity to the original notation, and how error-reporting and debugging are supported in a given implementation. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Kosar, Tomaz; Mernik, Marjan] Univ Maribor, Fac Elect Engn & Comp Sci, SLO-2000 Maribor, Slovenia.
   [Martinez Lopez, Pablo E.; Barrientos, Pablo A.] Natl Univ La Plata, Fac Informat, LIFIA, RA-1900 La Plata, Buenos Aires, Argentina.
C3 University of Maribor; National University of La Plata
RP Kosar, T (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Smetanova Ulica 17, SLO-2000 Maribor, Slovenia.
EM tomaz.kosar@uni-mb.si
RI Mernik, Marjan/A-1147-2008
OI Mernik, Marjan/0000-0002-2775-0667; Kosar, Tomaz/0000-0001-8714-9649;
   Martinez Lopez, Pablo Ernesto/0000-0003-4824-9967
CR [Anonymous], 2000, Generative programming: methods, tools, and applications
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bergin T.J., 1996, HIST PROGRAMMING LAN
   Box GE., 2005, Statistics for Experimenters: Design, Innovation, and Discovery, V2nd ed.
   BRAVENBOER M, 2005, P 4 INT C GEN PROGR, P157
   Consel C., 1998, LECT NOTES COMPUTER, V1490, P170
   Elliott C, 1999, IEEE T SOFTWARE ENG, V25, P291, DOI 10.1109/32.798320
   ELLIOTT C, 2000, INT WORKSH SEM APPL
   HEERING J, 2000, P INT C ADV INFR EL
   Henriques PR, 2005, IEE P-SOFTW, V152, P54, DOI 10.1049/ip-sen:20041317
   HORSTMANN CS, 1998, JAVA ADV FEATURES, V2
   Hudak P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P134, DOI 10.1109/ICSR.1998.685738
   Jones C., 1997, APPL SOFTWARE MEASUR
   JONES SP, 1999, HASKELL 98 NONSTRICT
   KAMIN S, 1998, ELECT NOTES THEORETI, V12
   KANG KC, 1990, CMUSEI90TR21 SOFTW E
   KOSAT T, 2005, RAJT0501 FERI U MAR
   LENIC M, 2000, P 5 EUR C 2000 EUR 2, P245
   Mauw S, 2004, INT J SOFTW ENG KNOW, V14, P625, DOI 10.1142/S0218194004001828
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M, 1999, ACM SIGPLAN NOTICES, V34, P68, DOI 10.1145/606666.606678
   Power JE, 2004, J SOFTW MAINT EVOL-R, V16, P405, DOI 10.1002/smr.293
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   RAY ET, 2001, LEARNING XML NUTSHEL
   Reiser M., 1992, Programming in Oberon: steps beyond Pascal and Modula
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Thai Thuan., 2003, NET FRAMEWORK ESSENT
   Thibault SA, 1999, IEEE T SOFTWARE ENG, V25, P363, DOI 10.1109/32.798325
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, P1, DOI 10.2498/cit.2002.01.01
NR 31
TC 87
Z9 96
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2008
VL 50
IS 5
BP 390
EP 405
DI 10.1016/j.infsof.2007.04.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 290WJ
UT WOS:000255153200003
DA 2024-07-18
ER

PT J
AU Ben-Menachem, M
AF Ben-Menachem, Mordechai
TI Towards management of software as assets: A literature review with
   additional sources
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software Engineering; Software Asset Management; Project Management;
   Software Quality Management; Goals Management
AB How should and how can software be managed? What is the management concept or paradigm? Software professionals, if they think about management of software at all, think in terms of Configuration Management. This is not a method for over-all software management; it merely controls software items' versions. This is much too fine a level of granularity.
   Management begins with accurate and timely information. Managers tend to view software as something (unfortunately) very necessary but troubling because, they have very little real information about it and control is still nebulous, at best. Accountants view software as an incomprehensible intangible, neither wholly an expense nor really an asset. They do not have, nor do they produce information concerning it. Their data concerning software barely touches on direct outlays and contains no element of effort.
   Part of this disorientation is the basic confusion between "business software" and "engineering software". This "Gordian Knot" must be opened; it needs to be made much more clear. This article shows a direction how such clarity may be achieved. (c) 2007 Elsevier B.V. All rights reserved.
RP Ben-Menachem, M (corresponding author), PO Box 15174, Beer Sheva, Israel.
EM quality@acm.org
CR ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   Agarwal R, 2002, MIS QUART, V1, P1
   Aho AV, 1988, The AWK Programming Language
   Anderson MC, 2003, COMMUN ACM, V46, P91, DOI 10.1145/636772.636776
   [Anonymous], P INT C INF SYST ATL
   [Anonymous], 1969, Formal Languages and Their Relation to Automata
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 1955, PRACTICE MANAGEMENT
   [Anonymous], 1998, CMM IMPLEMENTATION G
   [Anonymous], COMMUN ASS INFORM SY
   [Anonymous], 1989, SEI SERIES SOFTWARE
   *ANSI IEEE, 1984, 7301984 ANSI IEEE
   ANTHES GH, 1996, TRADE GROUPS ROLL OU
   Anthony R. N., 1965, PLANNING CONTROL SYS
   *ASS SECR DEF COMM, 2002, C31 ASD
   *AV, 1996, PHAS 1 IMP ASS CFS01
   *AV SOL INC, 1996, AV SERV LEV AGR SLA
   *AV SOL INC, 1996, PHAS 1 IMP ASS APPL
   *AV SOL INC, 1996, PHAS 1 IMP ASS JCH01
   BABCOCK C, 1996, REDCOATS ER THE YEAR
   BACKER S, 1998, BUS WEEK, P18
   BAKER S, 1998, BUS WEEK        0112, P108
   BAKOS Y, 1999, J LAW EC
   Barra R., 1983, Putting quality circles to work
   Barry E. J., 2002, Information Technology & Management, V3, P113, DOI 10.1023/A:1013168927238
   BASILLI VR, NSG5123 NASA GSFC
   BASILLI VR, 1993, 10 ANN CSR WORKSH OC
   BAXTER P, 2002, CROSS TALK, V15, P22
   Becker SA, 1999, IEEE SOFTWARE, V16, P46, DOI 10.1109/52.765786
   BEIZER B., 1983, SOFTWARE TESTING TEC
   Beizer Boris, 1984, Software System Testing and Quality Assurance
   Ben-Menachem M, 2002, COMMUN ACM, V45, P96, DOI 10.1145/505248.505252
   Ben-Menachem M., 1997, Software Quality: Producing Practical, Consistent Software, Slaying the Software Dragon Series
   BENMENACHEM M, 1988, PATRIARCH SQA HDB
   BENMENACHEM M, 1981, 16 IPA C JER NOV
   BENMENACHEM M, 1998, TECHNOLOGY TRENDS PR
   BENMENACHEM M, 1980, 15 IPA C JER NOV
   BENMENACHEM M, 1997, POWER TOOLS DOCUMENT
   BENMENACHEM M, 2004, IEEE SOFTWARE, P34
   BENMENACHEM M, 1997, POWER TOOLS USERS GU
   BENMENACHEM M, 1996, CODE WAREHOUSING LEG
   BENMENACHEM M, 1997, GETTING STARTED POWE
   BENMENACHEM M, 1991, 5 ISR C COMP SYST SO, P68
   BENMENACHEM M, 1994, SOFTWARE CONFIGURATI
   BENMENACHEM M, 1994, RISK ANAL FORMS PROJ
   BENMENACHEM M, 2000, BUSINESS WEEK   1016, P5
   Bersoff E., 1980, SOFTWARE CONFIGURATI
   BIERMAN H, 1969, MANAGEMENT DECISION
   Blanchard BenjaminS., 2006, SYSTEMS ENG ANAL, V4th
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   BOEHM BW, 1987, COMPUTER, V20, P43, DOI 10.1109/MC.1987.1663694
   BOWSHER CA, 1994, GAOAIMD94115 US GEN
   *BPM FOR, 2004, SOFTW DRAIN BUS GAIN
   BRAITHWAITE T, 1997, COMPUTER SECURITY HD, P1
   BRESNAHAN T, 2000, Q J EC           NOV
   BRNJOLFSSON E, 2001, HIDDEN ASSETS
   BRNJOLFSSON E, 2000, J EC PERSPECTIVE FAL
   BROCK JL, 1998, GAOTAIMD9873 US GEN
   BROCK JL, 1998, GAOAIMD9835 US GEN A
   BROCK JL, 1997, GAOAIMD97149 US GOVT
   BROCK JL, 1998, GAOTAIMD9848 US GEN
   BROCK JL, 1999, GAOTAIMD99293 US GEN
   Broekman Bart., 2003, Testing embedded software
   BRYNJOLFSSON E, 1993, COMMUN ACM, V36, P67, DOI 10.1145/163298.163309
   BRYNJOLFSSON E, 2000, INTERACTION INFORM T
   BRYSYEE C, 1996, SERVICE DELIVERY SYS
   BYRNE J, 1999, SEARCH YOUNG GIFTED
   *CA IDEAL, 1990, COMM REF MAN REF MAN
   CALDWELL B, 1998, INFORM WEEK     0413, P18
   Canton J., 2006, EXTREME FUTURE
   CAVE WC, 1984, SOFTWARE LIFECYCLE M
   CHIANG SY, 1999, EAI BUILDING VIRTUAL
   CHRISSIS MB, 2003, CMMI GUIDELINE PROCE
   CLANCY T, 1998, CHAOS
   COCKBURN A, 1999, CHARACTERIZING PEOPL
   Cockburn A., 2001, Writing effective use cases
   *COMP, MILL PROBL HITS OV C
   *COMP, 1996, YEAR 2000 SCOR COMP
   CRAMM SH, 2001, CIO MAGAZINE    0215
   Crosby P.B., 1979, QUALITY IS FREE ART
   Davenport T.H., 1993, PROCESS INNOVATION R
   DEJAGER P, 1996, TAKE REPORTER LUNCH
   DEMILLO R.A., 1987, SOFTWARE TESTING EVA
   *DEP DEF STAND PRO, LCD8069 DEP DEF STAN
   Deutsch M.S., 1982, Software Verification and Validation: Realistic project approaches
   DIDIO L, 1998, COMPUTERWORLD   0413
   DIJKSTRA E, 1987, HUMBLE PROGRAMMER AC
   DOWNES VA, 1982, PROGRAMMING EMBEDDED
   Duncan DavidEwing., 1998, The Calendar: The 5000-Year Struggle to Align the Clock and the Heavens - and What Happened to the Missing Ten Days
   DUNCAN WR, 1996, DIRECTOR STANDARDS P
   Dunn R.H., 1984, SOFTWARE DEFECT REMO
   DUNNE JW, 1972, EXPT TIME
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Ettlie JohnE., 2000, MANAGING TECHNOLOGY
   FEFFER L, 1979, COMPUTER NETWORKS MI
   Fitz-Enz J., 1997, The 8 practices of exceptional companies
   FOUST D, 1998, BUS WEEK        0105, P80
   FRANKLIN WS, 1997, GAOAIMD10114 GOVT AC
   FRANKLIN WS, 1997, GAOAIMD10117 GOVT AC
   GIERA J, 2000, BUSINESS WEEK   0221
   GOMES L, 1988, WALL STREET J, pB8
   GOMES L, 1996, WALL STREET J   0918, pB1
   Gottsckalk P., 2001, Informing Science, V4, P1
   *GOVT ACC OFF, 1996, GGD96118 GOVT ACC OF
   *GOVT ACC OFF, 1999, GGDAIMD99215 GOVT AC
   GRAHAM RM, 1980, P ACM SIGPLAN S ADA
   GROSSHANS W, 1991, GAOOP813 US GEN ACC
   HANCOCK L, 1982, C PRIMER
   HAYER FA, 1986, ROAD SERFDOM
   HILLMAN RJ, 1998, GAOGGDAIMD9851 GEN A
   HITE RC, 2002, GAO029 GOVT ACC OFF
   HOFFMAN T, 1997, COMPUTERWORLD   0203, P1
   HOFFMAN T, 1996, COMPUTERWORLD   1014
   HOFFMAN T, 1998, COMPUTERWORLD   0309, P12
   Hughes B., 1999, SOFTWARE PROJECT MAN
   ICHBIAH JD, 1979, ACM SIGPLAN NOTICES, V14
   *IEE COMP SOC ASS, 2004, COMP CURR SOFTW ENG
   *ISO, 1997, 90003 ISO 3
   *ISO IEC, 1996, 12207 ISO IEC
   JEMISON DB, 1986, HARVARD BUS REV, V64, P107
   Jones C., 1991, APPL SOFTWARE MEASUR
   JURAN JM, 1992, JURAN DESIGN QUALITY
   *KAM SCI CORP, 1997, DACS DAT COMP
   Kan S. H., 2003, METRICS MODELS SOFTW
   KAPPELMAN LA, 2000, INFORMATIONWEEK, P264
   KARIN I, 2002, J GEN MANAGEMENT
   KATZ B, 1985, DATA BASE, V16, P14, DOI 10.1145/2147774.2147777
   KEIDAR T, 2000, THESIS U BENGURION U
   Keil M, 1995, MIS QUART, V19, P421, DOI 10.2307/249627
   KELLER E, 2004, TECHNOLOGY PARADISE
   Kemerer ChrisF., 1997, Software Project Management: Readings and Cases
   Kernighan B.W., 1974, ELEMENTS PROGRAMMING
   KERRIDGE AE, 1988, HYDROCARB PROCESS, V67, P97
   KINGSBURY N, 1995, GAOGGDAIMD99215 US G
   Klösch RR, 2002, J SYST SOFTWARE, V62, P11, DOI 10.1016/S0164-1212(01)00131-5
   KRIEG AF, 1984, COMPUTER PROGRAMMING
   Kulpa M.K., 2003, INTERPRETING CMMI
   Laudon K.C., 2004, MANAGEMENT INFORM SY
   LEFKON D, 1997, COMMUNICATIONS ACM, V40
   LEHMAN M, 1996, CSR 11 ANN WORKSH SO, V38, P681
   LEHMAN M, 2001, ANN SOFTWARE ENG, V11
   LEHMAN MM, 1990, COMMUN ACM, V33, P584
   Leishman T., 2002, J DEFENSE SOFTWARE E, V15, P4
   LEVIN J, LECT BURROUGHS IMPLE
   Lindgren LE, 2000, IMECHE SEM, V2000, P1
   LUCAS P, 1967, IBM, P105
   LYNCH JJ, 1968, MAKING MANPOWER EF 1
   MACHIAVELLI N, 1979, ART WAR PENGUIN BOOK
   MANZER F, 1997, EARNED VALUE EV AUTO
   Martin J., 1983, SOFTWARE MAINTENANCE
   Mashiko Y, 1997, J SYST SOFTWARE, V36, P17, DOI 10.1016/0164-1212(95)00194-8
   MCCLURE DL, 2001, GAO01376G GOVT ACF O
   MCLOUGHLIN A, 1998, WHY YOUR BANK WILL L
   McLuhan Marshall., 1968, WAR PEACE GLOBAL VIL
   MCNAMEE M, 2000, BUSINESS WEEK   1127, P38
   MCNAMEE M, 2000, BUSINESS WEEK   0925
   MIHM JC, 2002, GAOGGD02439T US GEN
   MIHM JC, 1999, MANAGEMENT REFORM EL
   MIHM JC, 2000, GAOGGD0052 US GEN AC
   MIHM JC, 1999, TGGD99151 SEN COMM G
   MOITRA D, 1999, COMPUTER         OCT, V32
   MORISIO M, 2006, DEV SERVICES WIRELES
   Munson J., 2003, Software engineering measurement
   MURRAY JT, 2000, YEAR 2000 COMPUTING
   Myers Glenford J., 1975, Reliable Software through Composite Design
   Myers Glenford J., 2011, The Art of Software Testing
   Naisbitt J., 1982, MEGATRENDS 10 NEW DI
   NAPOLITANU G, 1997, CFA YEAR 2000 COMPUT
   NARAYAN S, 1997, CASHING YEAR 2000 PR, P156
   NORCROSS H, 1962, DYNAMIC BUSINESS MAN
   NORTH G, 1998, BLIND MANS BLUFF YEA
   *OCG, 1999, OCG991 GOVT WID PERS
   *OMB, 1997, GETT FED COMP REDD 2
   OROURKE PJ, 1998, EAT RICH TREATISE EC
   PANDIAN CR, 2004, SOFTWARE METRICS GUI
   PARENT M, 1997, MORGAN STANLEY YEAR
   Porter E.M., 1980, COMPETITIVE STRATEGY
   Porter Mu., 1985, Competitive Advantage: Creating and Sustaining Superior Performance
   Preiss K., 1996, Cooperate to Compete
   Preiss K., 1999, Journal of Knowledge Management, V3, P36, DOI DOI 10.1108/13673279910259376
   PREISS K, 2000, TIME BASED COSTING 2, P65
   Preiss K., 1997, Agility and Global Competition, V1, P59
   Pressman R.S., 2000, SOFTWARE ENG PRACTIT
   Putnam LawrenceH., 2003, Five core metrics : the intelligence behind successful software management
   Rada R, 2000, COMMUN ACM, V43, P21, DOI 10.1145/330534.330552
   RAGLAND B, 2000, YEAR 2000 PROBLEM SO
   Raheja Dev, 1991, Assurance Technologies: Principles and Practices
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   REINGOLD J, 1999, POWER COSMIC THINKIN, P7
   REYNOLDS A, 1998, MONEY MAGAZINE, P49
   Royce W.E., 1998, AW OBJ TECHNOL S
   RUBINSTEIN MF, 1980, CONCEPTS PROBLEM SOL
   SAGI Y, 2001, 12207 ISO IEC
   Schach S.R., 1999, CLASSICAL OBJECT ORI, V4th
   SCHEIER RL, 1997, COMPUTERWORLD   1020, P82
   Serich S, 2005, IEEE T ENG MANAGE, V52, P478, DOI 10.1109/TEM.2005.851276
   Sherriton J., 1997, CORPORATE CULTURE TE
   SHINKYU Y, INTANGIBLE ASSETS GR
   SILVERMAN BG, 1985, COMPUTER, V18, P86, DOI 10.1109/MC.1985.1662895
   SLAYTON ST, 1997, EQUITY DERIVATIVE ST
   SMITH DJ, 1987, ENG QUALITY SOFTWARE
   SPARKS D, 1998, BUSINESS WEEK   0121
   Spencer R.H., 1985, COMPUTER USABILITY T
   SPIRO LN, 1996, BUS WEEK        0812, P72
   STAATS EB, 1980, WIDER USE BETTER COM
   STAATS EB, 1979, FGMSD804
   STEINBERG S, 1997, SEL SERIES
   STEPANEK M, 1998, BUSINESS WEEK   1214
   STRASSMANN P, 1998, AM PROGRAMMER, V111
   STRASSMANN P, 2002, INTRO ROM ANAL LINK
   STRASSMANN P, 1996, INFORM KNOWLEDG 0130
   STRASSMANN P, 1997, COMPUTERWORLD   0609
   Strassmann P.A., 1996, The Economics and Politics of Information Management
   Sun-Tzu, 1993, ART WARFARE
   *SWEBOK, GUID SOFTW ENG BOD K
   TAYLOR A, 2001, IT PROJECT SINK SWIM
   TAYNTOR CB, 2003, 6 SIGMA SOFTWARE DEV
   Thacker R.A., 2002, TEAM PERFORMANCE, V8, P89
   Tillquist J, 2005, COMMUN ACM, V48, P75, DOI 10.1145/1039539.1039542
   TOCKEY S, 2005, RETURN SOFTWARE
   TRUEX DP, 1999, CACM, V42
   *US DEP DEF, 1988, D0DSTE2167A US DEP D
   *US DEP DEF, 1963, MILSTD105D US DEP DE
   US Department of Defense, 1983, ANSIMILSTD1815A US D
   Verhoef C, 2002, SCI COMPUT PROGRAM, V45, P1, DOI 10.1016/S0167-6423(02)00106-5
   VIOLINO B, 1997, INFORM WEEK ONLI FEB
   VONCLAUSEWITZ C, 1968, CLAUSEWITZ WAR PENGU
   WALKER DM, 1999, GAOTAIMD99214 US GEN
   WALKER DM, 2001, GAO01241 GEN ACC OFF
   WALKER DM, 2001, GAO01592 GEN ACC OFF
   Webster J, 2002, MIS QUART, V26, pXIII
   WEINER E, 1986, MAY PLANNING REV, P27
   WEISS DM, 1975, 7909 NRL
   Wetherill G.B., 1977, Sampling inspection and quality control, Vsecond
   WILDSTROM SH, 1998, WHAT YOUR MILLENNIUM, P8
   WILLEMSSEN JC, 1999, GAOTAIMD99268 US GEN
   WILSON A, 1968, WAR GAMING
   Wilson T, 1998, INTERNETWEEK, P8
   WILSON T, 1997, INTERNET WEEK   1006, P79
   Wirth N., 1973, SYSTEMATIC PROGRAMMI
   WOODSMITH J, 1998, RES DIRECTOR CHANGE
   WORTMAN DB, 1977, P ACM C LANG DES REL
   YAHALOMI E, 2003, THESIS BEN GURION U
   YARDENI E, 1998, 16 Y2K
   Yourdon E., 1975, TECHNIQUES PROGRAM S
   Yourdon Edward., 1982, MANAGING SYSTEM LIFE
   Ziff Paul., 1960, SEMANTIC ANAL
   1997, COMMUNICATION    JAN, V6
   1997, COMPUTERWORLD   0310
   1997, WALL STREET J   1023, pA2
NR 250
TC 6
Z9 11
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2008
VL 50
IS 4
BP 241
EP 258
DI 10.1016/j.infsof.2007.08.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 261UL
UT WOS:000253105400001
DA 2024-07-18
ER

PT J
AU Bipp, T
   Lepper, A
   Schmedding, D
AF Bipp, Tanja
   Lepper, Andreas
   Schmedding, Doris
TI Pair programming in software development teams - An empirical study of
   its benefits
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE pair programming; empirical software engineering; quality of software
ID MEASURING FACETS; JOB AMBIGUITY
AB We present the results of an extensive and substantial case study on pair programming, which was carried out in courses for software development at the University of Dortmund, Germany. Thirteen software development teams with about 100 students took part in the experiments. The groups were divided into two sets with different working conditions. In one set, the group members worked on their projects in pairs. Even though the paired teams could only use half of the workstations the teams of individual workers could use, the paired teams produced nearly as much code as the teams of individual workers at the same time. In addition, the code produced by the paired teams was easier to read and to understand. This facilitates finding errors and maintenance. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Bipp, Tanja; Lepper, Andreas; Schmedding, Doris] Univ Dortmund, Dept Comp Sci, D-4600 Dortmund, Germany.
   [Bipp, Tanja] Univ Dortmund, Organizat Psychol, D-4600 Dortmund, Germany.
C3 Dortmund University of Technology; Dortmund University of Technology
RP Schmedding, D (corresponding author), Univ Dortmund, Dept Comp Sci, D-4600 Dortmund, Germany.
EM Tanja.Bipp@udo.edu; Andreas.Lepper@udo.edu; Doris.Schmedding@udo.edu
OI Bipp, Tanja/0000-0002-6086-7832
CR Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Beck K., 2000, EXTREME PROGRAMMING
   BECKMANN I, 2004, GI JAHRESTAGUNG, V2, P122
   BIPP T, INWIDA LABOR
   BOOCH G, 1999, UNIFIED MODELLING LA
   BORKENAU P, 1993, NEO FUNF FAKTOREN IN
   BREAUGH JA, 1994, J APPL PSYCHOL, V79, P191, DOI 10.1037/0021-9010.79.2.191
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   FOWLER M, 2000, REFACTING IMPROVING
   HAYS W, 1993, STAT HARCOURT BRACE
   JOSEK JT, 1998, COMMUNICATION ACM, V41
   KOPKA C, 2004, UNIFIED PROCESS GRUN, P127
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   LEPPER A, 2005, THESIS U DORTMUND
   McDowell C, 2003, PROC INT CONF SOFTW, P602, DOI 10.1109/ICSE.2003.1201243
   MCDOWELL C, 2002, P 33 SIGCSE TECHN S, V34
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   MULLER MM, 2004, INT S SOFTW METR CHI
   Schmidt KH, 1998, DIAGNOSTICA, V44, P21
   Williams Laurie, 2000, IEEE SOFTWARE    JUL, P19
   Williams Laurie A., 2003, Pair programming illuminated
NR 23
TC 27
Z9 30
U1 0
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2008
VL 50
IS 3
BP 231
EP 240
DI 10.1016/j.infsof.2007.05.006
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 254UI
UT WOS:000252613100006
DA 2024-07-18
ER

PT J
AU Belussi, A
   Negri, M
   Pelagatti, G
AF Belussi, Alberto
   Negri, Mauro
   Pelagatti, Giuseppe
TI Modelling spatial whole-part relationships using an ISO-TC211 conformant
   approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE spatial whole-part; ISO-TC21 1; conceptual database design; modelling
   abstraction
ID IMPLEMENTATION; DATABASES; DESIGN
AB The important role of Spatial Whole-Part relationships in spatial database design is widely recognized and several researches have proposed specific spatial models to classify these relationships and their related topological constraints.
   The recent ISO-TC211 standards have defined a spatial data model and its use in spatial database design. However, the modelling of topological constraints of Spatial Whole-Part relationships requires additional complex and counterintuitive expressions specified by using a formal constraint language.
   This paper shows the complexity of modelling Spatial Whole-Part relationships in ISO and proposes an approach for the definition of ISO conformant modelling abstractions which hide this kind of complexity to the database designer. This approach is applied to the definition of the modelling abstractions for Spatial Whole-Part relationships which cover all the Spatial Whole-Part relationships proposed in the literature. (C) 2006 Elsevier B.V. All rights reserved.
C1 Univ Verona, Dipartimento Informat, I-37100 Verona, Italy.
   Politecn Milan, Dipartimento Elettron & Informat, I-20133 Milan, Italy.
C3 University of Verona; Polytechnic University of Milan
RP Negri, M (corresponding author), Univ Verona, Dipartimento Informat, Str Grazie 15, I-37100 Verona, Italy.
EM alberto.belussi@univr.it; negri@elet.polimi.it; pelagatt@elet.polimi.it
OI NEGRI, MAURO/0000-0001-9560-0575; BELUSSI, Alberto/0000-0003-3023-8020
CR Abrantes G., 1994, Proc. Fifth European Conference and Exhibition on Geographical Information Systems - EGIS/MARI'94, P869
   [Anonymous], P 8 ACM INT S ADV GE
   [Anonymous], 2000, P ACM WORKSH ADV GEO, DOI DOI 10.1145/355274.355280
   Barbier F, 2003, IEEE T SOFTWARE ENG, V29, P459, DOI 10.1109/TSE.2003.1199074
   Bedard Y, 1996, COMPUT ENVIRON URBAN, V20, P19, DOI 10.1016/S0198-9715(96)00008-7
   Bedard Y., 1999, Geomatica, Journal of the Canadian Institute of Geomatics, V53, P169
   BELUSSI A, 2004, 200421 POL MIL DIP E
   BERTINO E, 1998, P OBJ OR PROGR SYST, P259
   Borges KAV, 2001, GEOINFORMATICA, V5, P221, DOI 10.1023/A:1011482030093
   BORGES KAV, 1999, P 7 ACM INT S ADV GE, P1
   CHRISTENSEN AF, 2001, P ACM INT S ADV GEOG, P2
   Cockcroft S, 2004, GEOINFORMATICA, V8, P49, DOI 10.1023/B:GEIN.0000007724.37467.ae
   Filho J. L., 1999, P 7 ACM INT S ADV GE, P7
   Gordillo S., 1999, GeoInformatica, V3, P7, DOI 10.1023/A:1009809511770
   Hadzilacos T., 1997, SIGMOD Record, V26, P24, DOI 10.1145/262762.262766
   Halper M, 1998, DATA KNOWL ENG, V27, P59, DOI 10.1016/S0169-023X(97)00055-4
   *ISO TC, 2000, 211 ISOTC
   *ISO TC, 2002, 211 ISOTC
   *ISO TC, 2003, 211 ISOTC
   KETABCHI MA, 1988, IEEE T SOFTWARE ENG, V14, P71, DOI 10.1109/32.4624
   KIM W, 1987, C OBJ OR PROGR SYST, P118
   Kosters G, 1997, INT J GEOGR INF SCI, V11, P307, DOI 10.1080/136588197242293
   OLIVEIRA J, 1997, GEOINFORMATICA, V1, P29
   *OP GIS CONS INC, 1999, 99049 OP GIS CONS IN
   Opdahl AL, 2001, INFORM SOFTWARE TECH, V43, P387, DOI 10.1016/S0950-5849(00)00175-0
   PARENT C, 1998, P 8 INT S SPAT DAT H, P138
   PRICE R, 2001, LNCS, V2224, P27
   Rumbaugh James, 1999, The unified modeling language reference manual
   Shekhar S, 1997, COMMUN ACM, V40, P103, DOI 10.1145/248448.248465
   STOREY VC, 1993, VLDB J, V2, P455, DOI DOI 10.1007/BF01263048
   Worboys M. F., 1990, International Journal of Geographical Information Systems, V4, P369, DOI 10.1080/02693799008941553
NR 31
TC 6
Z9 6
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1095
EP 1103
DI 10.1016/j.infsof.2006.02.002
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 101CL
UT WOS:000241716400010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chang, SE
   Minkin, B
AF Chang, Shuchih Ernest
   Minkin, Boris
TI The implementation of a secure and pervasive multimodal Web system
   architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT International Workshop on Web and Mobile Information Systems
CY MAR, 2005
CL Taipei, TAIWAN
DE pervasive computing; multimodal web system; voice applications;
   VoiceXML; information security
ID VOICE
AB While most users currently access Web applications from Web browser interfaces, pervasive computing is emerging and offering new ways of accessing Internet applications from any device at any location, by utilizing various modes of interfaces to interact with their end users. The PC and its back-end servers remain important in a pervasive system, and the technology could involve new ways of interfacing with a PC and/or various types of gateways to back-end servers. In this research, cellular phone was used as the pervasive device for accessing an Internet application prototype, a multimodal Web system (MWS), through voice user interface technology.
   This paper describes how MWS was developed to provide a secure interactive voice channel using an Apache Web server, a voice server, and Java technology. Securing multimodal applications proves more challenging than securing traditional Internet applications. Various standards have been developed within a context of Java 2 Micro Edition (J2ME) platform to secure multimodal and wireless applications. In addition to covering these standards and their applicability to the MWS system implementation, this paper also shows that multimodal user-interface page can be generated by using XSLT stylesheet which transforms XML documents into various formats including XHTML, WML, and VoiceXML. (C) 2006 Elsevier B.V. All rights reserved.
C1 Natl Chung Hsing Univ, Inst Elect Commerce, Taichung 402, Taiwan.
   UBS Financial Serv Inc, Weehawken, NJ 07086 USA.
C3 National Chung Hsing University
RP Chang, SE (corresponding author), Natl Chung Hsing Univ, Inst Elect Commerce, 250 Kuo Kuang Rd, Taichung 402, Taiwan.
EM eschang@dragon.nchu.edu.tw; bm@panix.com
RI Chang, Shuchih Ernest/ABB-8754-2020
CR ADLER S, 2001, EXTENSIBLE STYLESHEE
   Barbieri R, 2002, 18TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P261, DOI 10.1109/CSAC.2002.1176297
   Bellare M., 2004, ACM Transactions on Information and Systems Security, V7, P206, DOI 10.1145/996943.996945
   Beznosov K., 2005, Information Security Technical Report, V10, P2, DOI 10.1016/j.istr.2005.02.001
   Brewster S. A., 1998, ACM Transactions on Computer-Human Interaction, V5, P224, DOI 10.1145/292834.292839
   Burke E., 2001, JAVA XSLT
   CHANG SE, EXPERT SYSTEMS APPL, V30
   Collier MD, 2002, AEROSP CONF PROC, P2685
   Dettmer R, 2003, IEE REVIEW, V49, P30, DOI 10.1049/ir:20030704
   *DIR GEN TEL, 2003, AN MOB PHON SUBSCR 2
   Estrin D., 2002, IEEE Pervasive Computing, V1, P59, DOI 10.1109/MPRV.2002.993145
   FETTE B, 1984, P ICASSP 84 1984 IEE, V9, P786
   Guo JI, 2002, IEE P-VIS IMAGE SIGN, V149, P237, DOI 10.1049/ip-vis:20020457
   *I INF IND, 2004, ACI FIND FOC INT NEW
   *IBM, 2004, US JCE J2ME ENV
   Jamil T, 2004, IEEE POTENTIALS, V23, P36, DOI 10.1109/MP.2004.1289996
   Jin X, 2004, P SOC PHOTO-OPT INS, V5304, P276
   KHUSMITH V, 2002, P 2 ACM INT WORKSH M, P75
   Larson JA, 2003, IEEE MULTIMEDIA, V10, P91, DOI 10.1109/MMUL.2003.1237554
   Larson JA, 2001, ASRU 2001: IEEE WORKSHOP ON AUTOMATIC SPEECH RECOGNITION AND UNDERSTANDING, CONFERENCE PROCEEDINGS, P5, DOI 10.1109/ASRU.2001.1034576
   MACII E, 1995, IEEE PACIF, P149, DOI 10.1109/PACRIM.1995.519430
   MCBETH MS, 1999, P IEEE MIL COMM C, V2, P1454
   Needham R., 1997, TEA EXTENSIONS
   O'Grady MJ, 2005, INFORM SCIENCES, V171, P335, DOI 10.1016/j.ins.2004.09.009
   Orceyre M. J., 1978, IEEE Communications Society Magazine, V16, P41, DOI 10.1109/MCOM.1978.1089785
   RAZA DG, 2002, P 6 INT C SIGN PROC, V1, P452
   Roberts JH, 2000, J ACAD MARKET SCI, V28, P31, DOI 10.1177/0092070300281004
   Rodriguez A., 2002, IBM WEBSPHERE VOICE
   Roussos G, 2005, IEEE PERVAS COMPUT, V4, P20, DOI 10.1109/MPRV.2005.30
   Salomao SLC, 2000, 13TH SYMPOSIUM ON INTEGRATED CIRCUITS AND SYSTEMS DESIGN, PROCEEDINGS, P47, DOI 10.1109/SBCCI.2000.876007
   Sanchez-Avila C, 2001, 35TH ANNUAL 2001 INTERNATIONAL CARNAHAN CONFERENCE ON SECURITY TECHNOLOGY, PROCEEDINGS, P229, DOI 10.1109/CCST.2001.962837
   Schneier B., 1994, CAMBR SEC WORKSH P, V1978, P182
   SEIBERT C, 2003, P 6 ACM INT WORKSH M, P20
   SHERIF MH, 1993, IEEE T COMMUN, V41, P391, DOI 10.1109/26.216514
   SKANTZE D, 2003, P ICAD 2003 INT C AU, P140
   *SUN MICR, 2004, INF J2SE
   SWAIN AK, 2004, P TENCON 2004 2004 I, V1, P139
   TANG S, 2002, P 1 INT IEEE SEC STO, P70
   Turner KJ, 2004, COMPUT NETW, V45, P665, DOI 10.1016/j.comnet.2004.03.005
NR 39
TC 7
Z9 11
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2006
VL 48
IS 6
BP 424
EP 432
DI 10.1016/j.infsof.2005.12.012
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 049QP
UT WOS:000238031800008
DA 2024-07-18
ER

PT J
AU Lim, J
   Liu, Y
AF Lim, J
   Liu, Y
TI The role of cultural diversity and leadership in computer-supported
   collaborative learning: a content analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID CHOICE SHIFTS; COMMUNICATION; SYSTEMS; PARTICIPATION; PERFORMANCE; TASK;
   DISCUSSIONS; COMPLEXITY; VARIABLES; PATTERNS
AB Computer-mediated communication (CMC) technologies are increasingly being used to support collaborative learning in groups. Its potential to shift the traditional pedagogical paradigm triggers considerable amount of research. However, very few of the research studies focus on the social interactions and their influences on the learning process, which are crucial to understanding computer-supported collaborative learning (CSCL). This paper reports on a laboratory experiment with a 2X2 factorial design, conducted to investigate the influences of cultural diversity and leadership availability on the CSCL process using a content analysis approach. With the mediation of CMC systems, cultural diversity is found to engender more informational influences but reduce normative influences. Leadership has a positive effect on both normative and informational influences. Taking into account the learning outcomes, it is evident that the influences of the interaction process are closely related to CSCL effectiveness. (c) 2005 Elsevier B.V. All rights reserved.
C1 Natl Univ Singapore, Sch Comp, Singapore 117543, Singapore.
C3 National University of Singapore
RP Lim, J (corresponding author), Natl Univ Singapore, Sch Comp, 3 Sci Dr 2, Singapore 117543, Singapore.
EM jlim@nus.edu.sg
RI ying, liu/KEI-0478-2024
OI LIU, YING/0000-0001-9319-5940
CR Allport GW., 1954, NATURE PREJUDICE
   [Anonymous], 1978, MIND SOC DEV HIGHER
   [Anonymous], 1971, CULT CONTEXT LEARN
   [Anonymous], 1983, Groupthink: Psychological studies of policy decisions and fiascoes
   [Anonymous], GROUP PROCESSES INTE
   [Anonymous], ORG COMMUNICATION TE
   Asch S.E., 1951, ORG INFLUENCE PROCES, P295
   Bales R.F., 1976, INTERACTION PROCESS
   BALES RF, 1951, J ABNORM SOC PSYCH, V46, P485, DOI 10.1037/h0059886
   BARKI H, 1994, INFORM SYST RES, V5, P422, DOI 10.1287/isre.5.4.422
   BENBASAT I, 1993, SMALL GR RES, V24, P430, DOI 10.1177/1046496493244002
   BERGER J, 1972, AM SOCIOL REV, V37, P241, DOI 10.2307/2093465
   Blau P. M, 1964, EXCHANGE POWER SOCIA
   Bordia P., 1997, J BUSINESS COMMUNICA, V34, P99, DOI DOI 10.1177/002194369703400106
   Bormann E.G., 1975, DISCUSSION GROUP MET
   Brown A.L., 1989, KNOWING LEARNING INS, P393, DOI DOI 10.4324/9781315044408-13
   BURSTEIN E, 1981, COGNITIVE RESPONSES, P197
   BYRNE D, 1967, J PERS SOC PSYCHOL, V5, P82, DOI 10.1037/h0021198
   CARTWRIGHT D, 1973, AM PSYCHOL, V28, P222, DOI 10.1037/h0034445
   CLELAND DI, 1972, MANAGEMENT SYSTEMS A
   CONNOLLY T, 1990, MANAGE SCI, V36, P689, DOI 10.1287/mnsc.36.6.689
   Cooper J, 1996, J EDUC COMPUT RES, V15, P67, DOI 10.2190/W932-D1PT-2PX7-3TC2
   Cummins J., 1984, Bilingual Education and Special Education: Issues in Assessment and Pedagogy
   Denis B, 2001, COMPUT HUM BEHAV, V17, P465, DOI 10.1016/S0747-5632(01)00018-8
   DESANCTIS G, 1994, ORGAN SCI, V5, P121, DOI 10.1287/orsc.5.2.121
   DEUTSCH MORTON, 1955, JOUR ABNORMAL AND SOCIAL PSYCHOL, V51-31, P629, DOI 10.1037/h0046408
   Dubrovsk V. J., 1991, Human-Computer Interaction, V6, P119, DOI 10.1207/s15327051hci0602_2
   George JF, 1990, INFORM SYST RES, V1, P394, DOI 10.1287/isre.1.4.394
   Giddens A., 1984, CONSTITUTION SOC OUT
   GOURAN DS, 1969, SPEECH MONOGR, V36, P387, DOI 10.1080/03637756909375631
   Green GC, 2004, INFORM SOFTWARE TECH, V46, P165, DOI 10.1016/S0950-5849(03)00125-3
   Gudykunst W.B., 1995, Intercultural communication theory, P8, DOI DOI 10.1002/9781118783665.IEICC0007
   Hall T.E., 1959, The Silent Language
   HALLINAN MT, 1990, SOC FORCES, V69, P505
   HEIFETZ BA, 1994, LEADERSHIP EASY ANSW
   HELLRIEGEL D, 2001, ORANIZATIONAL BEHAV
   Hilmer K. M., 2000, P 33 HAW INT C SYST
   HILTZ SR, 1985, COMMUN ACM, V28, P680, DOI 10.1145/3894.3895
   HILTZ SR, 1991, J ORG COMPUTING, V2, P135
   HISLOP GW, 1997, P 3 ANN C ASS INF SY
   Hofstede G., 1980, CULTURAL CONSEQUENCE
   Huang WW, 2000, J MANAGE INFORM SYST, V17, P181, DOI 10.1080/07421222.2000.11045647
   Jonassen D.H., 1995, AM J DISTANCE EDUC, V9, P7, DOI [10.1080/08923649509526885, DOI 10.1080/08923649509526885]
   Jonassen DH, 2001, ETR&D-EDUC TECH RES, V49, P35, DOI 10.1007/BF02504505
   JONES A, IN PRESS COMPUTER ED
   KAPLAN MF, 1994, BASIC APPL SOC PSYCH, V15, P489, DOI 10.1207/s15324834basp1504_6
   KAPLAN MF, 1977, SOCIOMETRY, V40, P262, DOI 10.2307/3033533
   Katz D., 1966, The Social Psychology of Organizations, V46, P118
   KOVACS Z, 1982, CONT PROBLEMS GROUP, P201
   KRUGER AC, 1993, SOCIAL DEV, V2, P167
   Kunda D, 2000, INFORM SOFTWARE TECH, V42, P715, DOI 10.1016/S0950-5849(00)00115-4
   LEUTHOLD JH, 1999, P 32 HAW INT C SYST
   LEWIN K, 1997, THEORY SOCIAL SCI SE
   Light P., 1999, Learning with computers, P162
   Lim J, 2003, INFORM SOFTWARE TECH, V45, P469, DOI 10.1016/S0950-5849(03)00027-2
   LIM J, 2004, P 15 INF RES MAN ASS, P882
   MAZNEVSKI ML, 1994, HUM RELAT, V47, P531, DOI 10.1177/001872679404700504
   McConnell D., 2000, IMPLEMENTING COMPUTE
   McFadzean E., 2001, Journal of Management Devlopment, V20, P470, DOI 10.1108/02621710110399774
   McGrath J.E., 1984, GROUPS INTERACTION P
   Nelson McFadzean 1998., 1998, Leadership Organization Development Journal, V19, P72
   NORMAN, 1993, THINGS MAKE US SMART
   NUNN D, 1998, DELIVERING GEN ED SU
   Ocker R. J., 2001, Journal of Interactive Learning Research, V12, P427
   Pena-Shaff JB, 2004, COMPUT EDUC, V42, P243, DOI 10.1016/j.compedu.2003.08.003
   Peterson MF, 2003, GROUP ORGAN MANAGE, V28, P188, DOI 10.1177/1059601103028002002
   Piaget J., 1926, JUDGEMENT REASONING
   Piaget J., 1977, Knowledge and Development, P17, DOI DOI 10.1007/978-1-4684-2547-5_2
   PRUITT DG, 1971, J PERS SOC PSYCHOL, V20, P495, DOI 10.1037/h0031923
   Reeder K, 2004, LANG LEARN TECHNOL, V8, P88
   Rees F., 1998, FACILITATOR EXCELLEN
   RICE T, 1990, AM J MED GENET, V36, P219, DOI 10.1002/ajmg.1320360216
   Romaine S., 2000, LANGUAGE SOC INTRO S, V2nd
   Ross JA, 1996, J EDUC COMPUT RES, V15, P37, DOI 10.2190/6TYW-ADV1-W0LC-N9H0
   SANDERS GS, 1977, J EXP SOC PSYCHOL, V13, P303, DOI 10.1016/0022-1031(77)90001-4
   Senge P. M., 1990, 5 DISCIPLINE ART PRA
   Shaw M., 1981, GROUP DYNAMICS
   Shore B., 2001, Journal of Global Information Technology Management (JGITM), V4, P27
   Skala C, 2000, PUBL ASTRON SOC AUST, V17, P185, DOI 10.1071/AS00185
   Stivers E., 1986, The Lewin legacy: Field theory in current practice Berlin
   STOGDILL RM, 1950, PSYCHOL BULL, V47, P1, DOI 10.1037/h0053857
   STONE RJA, 1961, THESIS MIT
   Straus SG, 1996, SMALL GR RES, V27, P115, DOI 10.1177/1046496496271006
   Susman EB, 1998, J EDUC COMPUT RES, V18, P303, DOI 10.2190/2MMX-R2R9-KMCT-NCR3
   TAJEFL JC, 1979, SOCIAL PSYCHOL ITNER
   TAKET A, 2002, J OPERATIONAL RES SO, V5, P126
   TAN CY, 1998, J MANAGEMENT INFORMA, V15, P119
   Tead O., 1935, The art of leadership
   Thorne SL, 2003, LANG LEARN TECHNOL, V7, P38
   Tyler T.R., 2000, COOPERATION GROUPS
   VIDMAR N, 1974, J PERS SOC PSYCHOL, V29, P187, DOI 10.1037/h0036011
   WEBB NM, 1991, J RES MATH EDUC, V22, P366, DOI 10.2307/749186
   Wheelan S., 1990, Advances in Field Theory
   Williams SR, 1997, DECISION SCI, V28, P911, DOI 10.1111/j.1540-5915.1997.tb01336.x
   ZIGURS I, 1994, MIS QUART, V18, P277, DOI 10.2307/249619
NR 95
TC 20
Z9 23
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2006
VL 48
IS 3
BP 142
EP 153
DI 10.1016/j.infsof.2005.03.006
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 027SZ
UT WOS:000236437200002
DA 2024-07-18
ER

PT J
AU Choppy, C
   Reggio, G
AF Choppy, C
   Reggio, G
TI A UML-based approach for problem frame oriented software development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE problem frames; UML based development method; requirement specification;
   design specification; 'rich' workpieces frame
AB We propose a software development approach that combines the use of the structuring concepts provided by problem frames, the use of the UML notation, together with our methodological approach for well-founded methods. Problem frames are used to provide a first idea of the main elements of the problem under study. Then we provide ad hoc UML based development methods for some of the most relevant problem frames together with precise guidelines for the users. The general idea of our method is that, for each frame, several artifacts have to be produced, each one corresponding to a part of the frame. The description level may range from informal and sketchy, to formal and precise, while this approach is drawn from experience in formal specifications. Thus we show how problem frames may be used upstream of a development method to yield an improved and more efficient method equipped with the problem frames structuring concepts. (c) 2005 Elsevier B.V. All rights reserved.
C1 Univ Paris 13, CNRS, UMR 7030, LIPN,Inst Galilee, F-93430 Villetaneuse, France.
   Univ Genoa, DISI, Genoa, Italy.
C3 Centre National de la Recherche Scientifique (CNRS); Universite Paris
   13; University of Genoa
RP Univ Paris 13, CNRS, UMR 7030, LIPN,Inst Galilee, 99 Ave Jean Baptiste Clement, F-93430 Villetaneuse, France.
EM Christine.choppy@lipn.univ-paris13.fr
CR [Anonymous], 1977, PATTERN LANGUAGE TOW
   Astesiano E, 2003, I C SOFTW ENG FORM M, P102, DOI 10.1109/SEFM.2003.1236212
   Astesiano E, 2000, LECT NOTES COMPUT SC, V1816, P273
   ASTESIANO E, 2002, LECT NOTES COMPUTER, V2941
   Bass Len, 2012, SEI S SOFTW
   Bidoit M., 2004, LECT NOTES COMPUTER, V2900
   Bjorner D, 1997, FIRST IEEE INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P263, DOI 10.1109/ICFEM.1997.630433
   BLEISTEIN SJ, 2004, P 1 INT WORKSH ADV A
   Boehm B., 2003, BALANCING AGILITY DI
   Bradfield J, 2002, LECT NOTES COMPUT SC, V2306, P203
   CHOPPY C, 2002, LECT NOTES COMPUTER, V2755, P205
   CHOPPY C, 2000, LECT NOTES COMPUTER, V1827, P106
   CHOPPY C, 2004, APPROCHE BASE PATRON
   CHOPPY C, 2004, P 1 INT WORKSH ADV A, P27
   CHOPPY C, 2004, P ISCA 13 INT C INT, P239
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomaa H., 2000, DESIGNING CONCURRENT
   HALL JG, 2002, P IEEE INT REQ ENG C, P9
   JACKSON M, 1975, PRINCIPLES PROGRAM D
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jackson M., 2001, PROBLEM FRAMES ANAL
   JACKSON M, 1986, SYSTEM DEV
   LAVAZZA L, 2004, P 1 INT WORKSH ADV A
   LI Z, 2004, P 1 INT WORKSH ADV A
   NELSON M, 2004, P 1 INT WORKSH ADV A
   *OMG, UML SPEC 1 3
   REGGIO G, 2003, DISITR0336 U GEN
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   *TP, 2001, 165 TP
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   Warmer J., 1999, AW OBJ TECHNOL S
   Ziemann P, 2003, LECT NOTES COMPUT SC, V2890, P351
NR 32
TC 8
Z9 9
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2005
VL 47
IS 14
BP 929
EP 954
DI 10.1016/j.infsof.2005.08.006
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 995CB
UT WOS:000234076400004
DA 2024-07-18
ER

PT J
AU Fatoohi, R
   Gokhale, N
   Viswesan, S
AF Fatoohi, R
   Gokhale, N
   Viswesan, S
TI iJob: an Internet-based job execution environment using asynchronous
   messaging
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE problem solving environments; Java message service; Java 2 enterprise
   edition; XML
AB Various toolkits exist today for the distributed execution of computational algorithms on clusters of machines. These toolkits are often referred to by the terms 'Grid Toolkits', 'Job Execution Environments', and 'Problem Solving Environments (PSEs)'. Here, we introduce iJob-an Internet-based job execution environment that sets out to meet many of the goals of PSEs, such as providing facilities and services to solve a class of problems. In addition, the iJob software allows execution of computational algorithms utilizing standard Internet technologies such as Java, XML, and asynchronous communication protocols. The goals of this project include: (1) deploying the toolkit easily to multiple platforms using the Java technologies; (2) running multiple types of algorithms and supporting multiple users simultaneously; (3) providing a web-based GUI for monitoring and controlling the status of jobs; and (4) providing security at both the user-level and at the network-level. The toolkit has been tested using several simulation codes on pools of Windows 2000 and Solaris systems. (c) 2004 Elsevier B.V. All rights reserved.
C1 San Jose State Univ, Dept Comp Engn, San Jose, CA 95192 USA.
C3 California State University System; San Jose State University
RP Fatoohi, R (corresponding author), San Jose State Univ, Dept Comp Engn, 1 Washington Sq, San Jose, CA 95192 USA.
EM rfatoohi@sjsu.edu
CR AGRAWAL S, 2002, ICLUT0205
   ERZBERGER M, 1999, EVERY DAD NEEDS MOM
   FATOOHI R, 2001, J SCI PROGRAMMING, V9, P27
   FOSTER I, 2002, IEEE COMPUTER    JUN
   Foster I., 2001, Intl. J. Supercomputer Applications
   Fox G, 2002, CONCURR COMP-PRACT E, V14, P1035, DOI 10.1002/cpe.734
   GALLOPOULOS E, 1994, IEEE COMPUTATIONAL S
   GAMMA E, 1995, DESIGN PATTERNS
   HAPNER M, 2001, JAVA MESSAGE SERVICE
   houstis E., 2000, ENABLING TECHNOLOGIE
   Huang Y, 2003, INT J HIGH PERFORM C, V17, P317, DOI 10.1177/1094342003173001
   *OMG, 1999, 990701 OMG
   *OMG, 1997, 970701 OMG
   *OMG, 2001, 010233 OMG
   PALLICKARA S, 2003, P ACM IFIP USENIX IN, P41
   PEDROSO H, 1998, P 3 INT C MASS PAR C
   Sarmenta LFG, 1998, CONCURRENCY-PRACT EX, V10, P1015, DOI 10.1002/(SICI)1096-9128(199809/11)10:11/13<1015::AID-CPE410>3.0.CO;2-C
   SMITH L, 2000, P SC2000 HIGH PERF N
   Walker DW, 2000, CONCURRENCY-PRACT EX, V12, P1455, DOI 10.1002/1096-9128(20001225)12:15<1455::AID-CPE538>3.0.CO;2-#
NR 19
TC 1
Z9 1
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2005
VL 47
IS 8
BP 565
EP 574
DI 10.1016/j.infsof.2004.10.007
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 921KR
UT WOS:000228763700006
DA 2024-07-18
ER

PT J
AU Miller, J
AF Miller, J
TI Replicating software engineering experiments: a poisoned chalice or the
   Holy Grail
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software engineer; real world settings; empirical values
ID DESIGN
AB Recently, software engineering has witnessed a great increase in the amount of work with an empirical component; however, this work has often little or no established empirical framework within the topic to draw upon. Frequently, researchers use frameworks from other disciplines in an attempt to alleviate this deficiency. A common underpinning in these frameworks is that experimental replication is available as the cornerstone of knowledge discovery within the discipline. This paper investigates the issues involved in accepting this premise as a fundamental building block with empirical software engineering and recommends extending the traditional view of replication to improve the effectiveness of this essential process within our domain. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Alberta, Dept Elect & Comp Engn, STEAM Res Ctr, ECERF, Edmonton, AB T6G 2V4, Canada.
C3 University of Alberta
RP Univ Alberta, Dept Elect & Comp Engn, STEAM Res Ctr, ECERF, 2nd Floor,9107-116 St, Edmonton, AB T6G 2V4, Canada.
EM jm@ece.ualberta.ca
CR AMATO I, 1993, SCIENCE, V260, P895, DOI 10.1126/science.260.5110.895
   [Anonymous], ISERN9502
   [Anonymous], REPLICATION RES SOCI
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Brewer J., 1989, Multimethod Research: A Synthesis of Styles, DOI 10.1002/nur.4770140212
   BROAD W, 1986, BETRAYERS TRUTH
   BROOKS RE, 1980, COMMUN ACM, V23, P207, DOI 10.1145/358841.358847
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Close F., 1990, TOO HOT HANDLE STORY
   Cohen J., 1988, STAT POWER ANAL BEHA
   Collins Harry M., 1985, Changing order: Replication and induction in scientific practice
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   DALY J, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P50, DOI 10.1109/ICSM.1994.336790
   DALY J, 1996, THESIS U STRATHCLYDE
   DERSIMONIAN R, 1986, CONTROL CLIN TRIALS, V7, P177, DOI 10.1016/0197-2456(86)90046-2
   DuMouchel W.H., 1990, Statistical Methodology in the Pharmaceutical Sciences, P509, DOI [DOI 10.1177/096228020101000404, 10.1177/096228020101000404]
   Dunsmore A, 2003, IEEE T SOFTWARE ENG, V29, P677, DOI 10.1109/TSE.2003.1223643
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   Hall J.A., 1994, HDB RES SYNTHESIS, P17
   HAUCK WW, 1984, AM STAT, V38, P214, DOI 10.2307/2683659
   HAYES W, 1999, 6 IEEE INT S SOFTW M
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   HOAGLIN DC, 1975, AM STAT, V29, P122, DOI 10.2307/2683438
   HOOKER JN, 1994, OPER RES, V42, P201, DOI 10.1287/opre.42.2.201
   Hunter JE, 1996, PSYCHOL PUBLIC POL L, V2, P324, DOI 10.1037/1076-8971.2.2.324
   KORSON TD, 1986, THESIS GEORGIA STATE
   Kramer S., 1999, STAT STRATEGIES SMAL
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   Mc Grath J., 1982, JUDGEMENT CALLS RES
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Miller J, 2004, J SYST SOFTWARE, V73, P183, DOI 10.1016/j.jss.2003.12.019
   MILLER J, 1999, 6 IEEE INT S SOFTW M
   Nye MaryJo., 1986, Sciences in the Provinces: Scientific Communities and Provincial Leadership in France, 1860- 1930
   PARNAS DL, 1987, J SYST SOFTWARE, V7, P259, DOI 10.1016/0164-1212(87)90025-2
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Rosenthal R., 1984, META ANALYTIC PROCED
   SCANLAN DA, 1989, IEEE SOFTWARE, V6, P28, DOI 10.1109/52.35587
   SHNEIDERMAN B, 1977, COMMUN ACM, V20, P373, DOI 10.1145/359605.359610
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Wohlin C, 2003, LECT NOTES EMPIRICAL, P85
   Wolf Wolf F. M F. M, Meta-analysis: Quantitative methods for research synthesis
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
NR 47
TC 38
Z9 39
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2005
VL 47
IS 4
BP 233
EP 244
DI 10.1016/j.infsof.2004.08.005
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 899JS
UT WOS:000227141300002
DA 2024-07-18
ER

PT J
AU Hatton, L
AF Hatton, L
TI EC - a measurement based safer subset of ISOC suitable for embedded
   system development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE ISOC; embedded system; base subset
AB With the explosive growth of embedded systems, there is a major need for a standardised code of practice in the use of C. Although this area has been explored before, progress has been ad hoc and most importantly, carried out in the general absence of any measurement support. This paper attempts to define a relatively small number of rules which avoid known fault modes in the language which have published occurrence rates. It will studiously avoid any rules for which no measurement support is available. It is anticipated that the base subset may be extended as time goes by as further data becomes available. Much of the subset is equally relevant to ISO C++, although very little data exists to guide similar initiatives for the considerable part of C++, which lies outside C. (C) 2004 Published by Elsevier B.V.
C1 Kingston Univ, Ctr Forens Software Engn, Kingston upon Thames KT1 2EE, Surrey, England.
   Univ Kent, Comp Lab, Canterbury, Kent, England.
C3 Kingston University; University of Kent
RP Hatton, L (corresponding author), Kingston Univ, Ctr Forens Software Engn, Kingston upon Thames KT1 2EE, Surrey, England.
EM l.hatton@kingston.ac.uk
CR Hatton L, 2004, INFORM SOFTWARE TECH, V46, P465, DOI 10.1016/j.infsof.2003.09.016
   HATTON L, 2004, UNPUB EMBEDDED SYSTE
   HATTON L, 2004, IN PRESS SOFTWARE FA
   HATTON L, 1995, DEV HIGH INTEGRITY S
   HATTON L, 1997, T EXPT ERRORS SCI SO
   KOENIG A, 1988, TRAPS PITFALLS
   *MISRA, 1998, MISRA C GUID US C LA
   PFLEEGER L, 1997, IEEE COMPUTER, V30
   SAFER C, 2000, SAFER C TOOLSET
   SMITH DJ, 1997, MAINTAINABILITY RISK
   SPULER DA, 1994, C PLUS PLUS C DEBUGG
   Van der Linden P., 1994, EXPERT C PROGRAMMING
NR 12
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2005
VL 47
IS 3
BP 181
EP 187
DI 10.1016/j.infsof.2004.08.001
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 896QV
UT WOS:000226949500004
DA 2024-07-18
ER

PT J
AU Dybjer, P
   Qiao, HY
   Takeyama, M
AF Dybjer, P
   Qiao, HY
   Takeyama, M
TI Verifying Haskell programs by combining testing, model checking and
   interactive theorem proving
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Quality Software (QSIC 2003)
CY SEP 25-26, 2003
CL Beijing, PEOPLES R CHINA
DE program verification; random testing; proof-assistants; type theory;
   binary decision diagrams; Haskell
AB We propose a program verification method that combines random testing, model checking and interactive theorem proving. Testing and model checking are used for debugging programs and specifications before a costly interactive proof attempt. During proof development, testing and model checking quickly eliminate false conjectures and generate counterexamples which help to correct them. With an interactive theorem prover we also ensure the correctness of the reduction of a top level problem to subproblems that can be tested or proved. We demonstrate the method using our random testing tool and binary decision diagrams-based (BDDs) tautology checker, which are added to the Agda/Alfa interactive proof assistant for dependent type theory. In particular we apply our techniques to the verification of Haskell programs. The first example verifies the BDD checker itself by testing its components. The second uses the tautology checker to verify bitonic sort together with a proof that the reduction of the problem to the checked form is correct. (C) 2004 Published by Elsevier B.V.
C1 Chalmers Univ Technol, Dept Comp Sci, S-41296 Gothenburg, Sweden.
   Univ Gothenburg, S-41296 Gothenburg, Sweden.
   Natl Inst Adv Ind Sci & Technol, Res Ctr Verificat & Semant, Amagasaki, Hyogo 6610974, Japan.
C3 Chalmers University of Technology; University of Gothenburg; National
   Institute of Advanced Industrial Science & Technology (AIST)
RP Tang Haozong, Box 901, Guangzhou, Peoples R China.
EM peterd@cs.chalmers.se; qiao@cs.chalmers.se; makoto.takeyama@aist.go.jp
CR [Anonymous], 1989, P 4 INT S FUNCT PROG
   Augustsson L, 1999, ACM SIGPLAN NOTICES, V34, P239, DOI 10.1145/291251.289451
   BOVE A, 2002, THESIS CHALMERS U TE
   BRADLEY J, BINARY DECISION DIAG
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   CHEN TY, 2002, P ACM SIGSOFT 2002 I, V4, P191
   CLAESSEN K, 2000, P ACM SIGPLAN INT C, V9, P18
   Coquand T, 2003, LECT NOTES COMPUT SC, V2701, P105
   Day N.A., 1999, P 1999 HASK WORKSH U
   Dybjer P, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P272, DOI 10.1109/QSIC.2003.1319111
   Dybjer P, 2003, LECT NOTES COMPUT SC, V2758, P188
   Dybjer P., 1994, Formal Aspects of Computing, V6, P440, DOI 10.1007/BF01211308
   Dybjer P, 1999, LECT NOTES COMPUT SC, V1581, P129
   Dybjer Peter., 2001, Proof Theory in Computer Science, P93, DOI DOI 10.1007/3-540-45504-3_7
   GELLER M, 1978, COMMUN ACM, V21, P368, DOI 10.1145/359488.359495
   HANCOCK P, 2000, LECT NOTES COMPUTER, V1863, P317
   Hayashi S, 2002, THEOR COMPUT SCI, V272, P177, DOI 10.1016/S0304-3975(00)00350-9
   HUGHES J, 1989, COMPUT J, V32, P98, DOI 10.1093/comjnl/32.2.98
   KRSTIC S, 2002, LECT NOTES COMPUTER, V2294, P182
   Nordstrom B., 1990, Programming in Martin-Lof's Type Theory
   Reynolds J. C., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P513
   Verma KN, 2000, LECT NOTES COMPUT SC, V1961, P162
NR 22
TC 14
Z9 18
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2004
VL 46
IS 15
BP 1011
EP 1025
DI 10.1016/j.infsof.2004.07.002
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 876GF
UT WOS:000225484000004
DA 2024-07-18
ER

PT J
AU Wong, B
AF Wong, B
TI The software evaluation framework 'SEF' extended
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software evaluation; software quality; metrics; empirical software
   engineering; human factors
AB The primary objective of this paper was to present a study on the metrics which can be applied to the Software Evaluation Framework. The paper presents the results of a preliminary study, which focuses on the measurements applied to the framework. It provides a description of the metrics used and an analysis of how they compare to each other in the measurement of the software characteristics. This objective was accomplished by empirically testing the model with quantitative techniques. An earlier qualitative study provided a list of metrics, which were then tested with the quantitative study described in this paper. The results of this study are important as it identifies the metrics, perceived by stakeholders as essential for applying the Software Evaluation Framework to software evaluation. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Technol Sydney, Fac Informat Technol, Sydney, NSW 2007, Australia.
C3 University of Technology Sydney
RP Univ Technol Sydney, Fac Informat Technol, POB 123, Sydney, NSW 2007, Australia.
EM bernard@it.uts.edu.au
CR [Anonymous], 1978, PSYCHOMETRIC METHODS
   [Anonymous], 1951, The art of asking questions
   [Anonymous], 1980, MEASURING ASSESSING
   [Anonymous], 2001, BEHAV CHANGE, DOI DOI 10.1375/BECH.18.1.58
   Bagozzi RP, 2000, PSYCHOL MARKET, V17, P535, DOI 10.1002/(SICI)1520-6793(200007)17:7<535::AID-MAR1>3.0.CO;2-H
   Bagozzi RP, 1997, PSYCHOL MARKET, V14, P539, DOI 10.1002/(SICI)1520-6793(199709)14:6<539::AID-MAR1>3.0.CO;2-8
   CLAWSON CJ, 1978, CONTRIBUTIONS CONSUM, P396
   Gorsuch R.L., 1983, FACTOR ANAL
   GUTMAN J, 1982, J MARKETING, V46, P60, DOI 10.2307/3203341
   Gutman J, 1997, PSYCHOL MARKET, V14, P545, DOI 10.1002/(SICI)1520-6793(199709)14:6<545::AID-MAR2>3.0.CO;2-7
   KAHLE LR, 1986, J CONSUM RES, V13, P405, DOI 10.1086/209079
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   PETER JP, 1979, J MARKETING RES, V16, P6, DOI 10.2307/3150868
   Rokeach M., NATURE HUMAN VALUES
   Rokeach M., 1968, BELIEFS ATTITUDES VA
   ROMBACH D, 1990, P ANN WORKSH CTR SOF
   Stevens JP., 2002, APPL MULTIVARIATE ST
   Tabachnick, 2013, Using multivariate statistics, V6th
   TOLMAN EC, 1951, GENERAL THEORY REASO, P148
   Valette-Florence P, 1998, J BUS RES, V42, P161, DOI 10.1016/S0148-2963(97)00111-2
   VIDGEN R, 1996, MULTIPLE PERSPECTIVE
   Wong B, 2002, LECT NOTES COMPUT SC, V2559, P103
   Wong B., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P6
   Wong B, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P56, DOI 10.1109/ISESE.2002.1166926
   WONG B, 1996, PILOT STUDY STAKEHOL
   WONG B, 1995, P 2 AUSTR C SOFTW ME, P54
   YANKELOVICH D, 1981, NEW RULES AM LIFE SE, P60
NR 27
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2004
VL 46
IS 15
BP 1037
EP 1047
DI 10.1016/j.infsof.2004.07.005
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 876GF
UT WOS:000225484000006
DA 2024-07-18
ER

PT J
AU Karlsson, F
   Ågerfalk, PJ
AF Karlsson, F
   Ågerfalk, PJ
TI Method configuration:: adapting to situational characteristics while
   creating reusable assets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE method configuration; method engineering; situational method;
   adaptation; reuse
AB The world of systems engineering methods is changing as rigorous 'off-the-shelf' methods gain popularity. The need for configuration of such methods is increasing accordingly. In this paper, method configuration is treated as a kind of method engineering, focusing on adaptation of a base method. A meta-method based on the concepts of Configuration Packages and Configuration Templates is proposed. Configuration Packages are pre-made reusable configurations of a base method suitable for a specific characteristic of a development situation. Configuration Templates with different characteristics can be related to different Configuration Packages and used as a base for reaching a situational method efficiently. The paper presents experiences from two empirical studies in which the Method for Method Configuration was developed and validated. These studies indicate that this meta-method eases the burden of the method engineer in configuring a method for particular project characteristics. Specifically it helped in deciding what in the base method to omit and to make sure that omissions made were congruent with the overall situational method. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Orebro, Dept Informat, ESI, MELAB, SE-70182 Orebro, Sweden.
   Univ Limerick, Dept Comp Sci & Informat Syst, Limerick, Ireland.
C3 Orebro University; University of Limerick
RP Univ Orebro, Dept Informat, ESI, MELAB, SE-70182 Orebro, Sweden.
EM fkn@esi.oru.se; par.agerfalk@ul.ie
RI Karlsson, Fredrik/AAQ-1270-2021; Agerfalk, Par J/I-9374-2012
CR Agerfalk P., 1999, Managing Information Technology Resources in Organizations in the Next Millennium. 1999 Information Resources Management Association International Conference, P184
   AGERFALK PJ, 2003, P 5 INT C ENT INF SY, P185
   Beck K., 2000, EXTREME PROGRAMMING
   Braa K., 1999, ACCOUNTING MANAGEMEN, V9, P25, DOI [DOI 10.1016/S0959-8022(98)00018-6, 10.1016/S0959-8022(98)00018-6]
   Brinkkemper S, 1999, INFORM SYST, V24, P209, DOI 10.1016/S0306-4379(99)00016-2
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Goldkuhl G., 1998, IEE Proceedings-Software, V145, P113, DOI 10.1049/ip-sen:19982197
   GOLDKUHL G, 1999, 19903 CMTO LINK U
   HARES JS, 1992, INFORMATION ENG ADV
   HARMSEN AF, 1997, THESIS UTRECHT
   KANDL H, 2002, REQUIR ENG, V7, P113
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   KUMAR K, 1992, CHALLENGES STRATEGIE
   Mathiassen L., 2002, Information Technology & People, V15, P321, DOI 10.1108/09593840210453115
   Mumford E., 2001, Information Technology & People, V14, P12, DOI 10.1108/09593840110384753
   NILSSON AG, 1999, PERSPECTIVES BUSINES, P226
   ODELL J, 1996, IFIP TC8 WG8 7 8 2 W
   Ralyté J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Rolland C., 1999, Requirements Engineering, V4, P169, DOI 10.1007/s007660050018
   ROLLAND C, 1996, PROPOSAL CONTEXT SPE
   Rossi M, 2000, P 33 HAW INT C SYST
   Ter Hofstede AHM, 1997, INFORM SYST, V22, P401, DOI 10.1016/S0306-4379(97)00024-0
   vanSlooten K, 1996, METHOD ENGINEERING, P29
   Whiston S.C., 1993, J CAREER DEV, V19, P175
NR 27
TC 66
Z9 76
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2004
VL 46
IS 9
BP 619
EP 633
DI 10.1016/j.infsof.2003.12.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DD
UT WOS:000221589000005
DA 2024-07-18
ER

PT J
AU Benander, A
   Benander, B
   Sang, J
AF Benander, A
   Benander, B
   Sang, J
TI Factors related to the difficulty of learning to program in Java - an
   empirical study of non-novice programmers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE empirical analysis; object orientation; human factors; Java programming
AB Due to its relative newness and popularity, Java is being taught to numerous non-novice programmers both in industry and in academia. Claims have been made that certain background characteristics of programmers relate to ease in learning Java. In this study, background information of 135 non-novice programmers was obtained, together with data relating to their difficulty of learning several different features of Java. Results of this study could be used by software project managers contemplating the use of Java, and by academicians involved in curricular planning. (C) 2003 Published by Elsevier B.V.
C1 Cleveland State Univ, Cleveland, OH 44114 USA.
C3 University System of Ohio; Cleveland State University
RP Cleveland State Univ, 1860 E 18th St,BU 324, Cleveland, OH 44114 USA.
EM abenande@cis.csuohio.edu
CR AUGUSTINE FK, 1990, J INFORMATION SYSTEM, V2, P2
   Benander AC, 1997, J COMPUT INFORM SYST, V37, P85
   Böszörményi L, 1998, SOFTWARE-CONC TOOL, V19, P141, DOI 10.1007/s003780050017
   Christian W, 2000, COMPUT PHYS COMMUN, V127, P16, DOI 10.1016/S0010-4655(00)00018-7
   FADLALLA A, 1998, SYSTEMS DEV MANAGEME
   HARVEY D, 2002, JAVA PROGRAM
   KANN C, 1996, P 10 ANN ADA SOFTW E, P41
   KRILL P, 2001, JAVA WORLD      1106
   Meehan A, 2001, INFORM SOFTWARE TECH, V43, P151, DOI 10.1016/S0950-5849(00)00146-4
   MILLER R, 2000, MIGRATING CPLUSPLUS
   Mittermeir R, 1997, LECT NOTES COMPUT SC, V1204, P336
   Nilsen K, 1998, COMMUN ACM, V41, P49, DOI 10.1145/276609.276619
   NOON JP, 1994, COMPUTER SCI PRODUCT, V3, P2
   PRECHELT L, 2000, IEEE             OCT, P23
   SAGAR A, 1998, JAVA DEV J, V3, P18
   SANDEEP S, 1998, COMMUN ACM, V41, P34
   Thimbleby H, 1999, SOFTWARE PRACT EXPER, V29, P457, DOI 10.1002/(SICI)1097-024X(19990425)29:5<457::AID-SPE243>3.0.CO;2-5
   Tobochnik J, 1999, COMPUT PHYS COMMUN, V121, P562, DOI 10.1016/S0010-4655(99)00407-5
   Tyma P, 1998, COMMUN ACM, V41, P38, DOI 10.1145/276609.276617
   VINCENT C, 2001, JAVA WORLD       FEB
   WONG W, 2002, TECHUPDATE      0326
   2001, EVANS DATA REPORT WI, V1
NR 22
TC 7
Z9 9
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2004
VL 46
IS 2
BP 99
EP 107
DI 10.1016/S0950-5849(03)00112-5
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 763PD
UT WOS:000188094000002
DA 2024-07-18
ER

PT J
AU Lindsay, A
   Downs, D
   Lunn, K
AF Lindsay, A
   Downs, D
   Lunn, K
TI Business processes - attempts to find a definition
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE business process; business process management; business process
   reengineering
AB Definitions of business process given in much of the literature on Business Process Management are limited in depth and their related models of business processes are correspondingly constrained. After giving a brief history of the progress of business process modeling techniques from production systems to the office environment, this paper proposes that most definitions are based on machine metaphor type explorations of a process. While these techniques are often rich and illuminating it is suggested that they are too limited to express the true nature of business processes that need to develop and adapt to today's challenging environment. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Huddersfield, Sch Comp & Engn, Huddersfield, W Yorkshire, England.
C3 University of Huddersfield
RP Lunn, K (corresponding author), Univ Huddersfield, Sch Comp & Engn, Huddersfield, W Yorkshire, England.
CR BARJI SJ, 2002, LANGUAGE BASED REQUI
   BIDER, 2002, GBPM 02
   Bussler C., 1994, Proceedings. Third Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (Cat. No.94TH0632-0), P81, DOI 10.1109/ENABL.1994.330492
   CURTIS B, 1992, COMMUNICATION ACM, V35
   Davenport T.H., 1993, Process Innovation
   Ellis C. A., 1994, Collaborative Computing, V1, P61
   Eriksson H., 2000, BUSINESS MODELING UM
   FLORES RF, 1995, VALUE METHODOLOGY WO
   GULLA JA, 1994, MODELLING COOPERATIV
   Hammer M., 1994, REENGINEERING CORPOR
   JACOBSON I, 1995, OBJECT ADV
   Joosten S., 1994, TRIGGER MODELLING WO
   Melao N, 2000, INFORM SYST J, V10, P105, DOI 10.1046/j.1365-2575.2000.00075.x
   Mintzberg H., 1979, The structuring of organizations
   Morgan G., 2006, Images of Organization
   OULD AM, 1995, BUSINESS PROCESSES M
   Senge P. M., 1990, 5 DISCIPLINE ART PRA
   TERSINE R, OPEN U
   *WORKFL MAN COAL, 1994, GLOS WORKFL MAN COAL
   YU EJ, 1994, P C ENT REL APPR ER, P548
   2000, P PBPM 00
NR 21
TC 167
Z9 196
U1 2
U2 67
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2003
VL 45
IS 15
BP 1015
EP 1019
DI 10.1016/S0950-5849(03)00129-0
PG 5
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 737GZ
UT WOS:000186223200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wallace, C
AF Wallace, C
TI Using Alloy in process modelling
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE alloy; process modelling; data modelling; state machine; UML; OCL; model
   analysis
AB Many notations and supporting tools are available to be used for describing business processes, but most lack the ability to do more than a syntactic check on the form of the model. Checking that they correctly depict the semantics of the situation is left to inspection. In this paper, we examine the uses that the analysable language Alloy can play in process modelling. We explore its application to descriptions of the organisation and its rules, to the description of processes and in the meta-modelling of process models. From the experiment with modelling a somewhat complex organisational situation, we conclude that Alloy has potential to increase the value of process modelling. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ W England, Fac Comp Engn & Math, Bristol BS16 1QY, Avon, England.
C3 University of West England
RP Wallace, C (corresponding author), Univ W England, Fac Comp Engn & Math, Coldharbour Lane, Bristol BS16 1QY, Avon, England.
CR Alexander C., 1964, Notes on the Synthesis of Form
   ANDONI A, 2000, MIT LAB COMPUTER SCI
   Bustard D., 2000, SYSTEM MODELING BUSI
   Campbell B, 2000, SYSTEMS MODELING FOR BUSINESS PROCESS IMPROVEMENT, P33
   Checkland P., 1982, Systems thinking, systems practice
   Cook S., 1994, DESIGNING OBJECT SYS
   D'Souza D., 1998, OBJECTS COMPONENTS F
   Fowler M., 1997, UML DISTILLED
   Fowler M., 1997, ANAL PATTERNS
   GOGOLLA M, 2002, P 1 EUR C INF COMM T, P228
   JACKSON D, 2000, P ACM SIGSOFT C FDN
   Jackson D., 2001, P ACM SIGSOFT C FDN
   JACKSON D, 2003, COMMUNICATION    JUN
   Jackson M., 2001, Problem Frames
   Jackson M., 1983, SYSTEMS DEV
   Kawalek P, 2000, SYSTEMS MODELING FOR BUSINESS PROCESS IMPROVEMENT, P61
   KENT S, 1997, P OOPSLA97
   Ould M.A., 1995, BUSINESS PROCESSES M
   Spivey J. Michael, 1992, Z NOTATION
   WARMER J, 1998, OBJECT CONSTRAINT LA
NR 20
TC 12
Z9 17
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC 1
PY 2003
VL 45
IS 15
BP 1031
EP 1043
DI 10.1016/S0950-5849(03)00131-9
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 737GZ
UT WOS:000186223200004
DA 2024-07-18
ER

PT J
AU Wang, D
   Hao, RB
   Lee, D
AF Wang, D
   Hao, RB
   Lee, D
TI Fault detection in Rule-based Software systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT Concordia Prestigious Workshop on Communications Software Engineering
CY SEP 11-12, 2001
CL MONTREAL, CANADA
DE Rule-based Software system; fault detection; packet filter
AB Motivated by packet filtering of firewall systems in Internet applications, we study the fault detection problem in the general Rule-based Software systems. We discuss algorithms for the detection of conflicts in a given set of rules. We first study a constrained version of the fault detection problem and propose a two-phase algorithm. The first phase is to do the rule normalization. The second phase is to detect conflicting rules. For this constrained version of the fault detection problem, the algorithm takes polynomial time. For the general problem, it is NP-hard. We apply the algorithms to the Rule Table getting from one of the firewalls in Bell Labs and report the experiment result. (C) 2003 Elsevier B.V. All rights reserved.
C1 Peking Univ, Dept Comp Sci & Technol, Beijing 100871, Peoples R China.
   Bell Labs Res China, Beijing 100080, Peoples R China.
C3 Peking University
RP Wang, D (corresponding author), Peking Univ, Dept Comp Sci & Technol, Beijing 100871, Peoples R China.
CR AYANOGLU E, 1998, READING NOTES NETW 1
   Garey M.R., 1979, COMPUTERS INTRACTABI
   HAO R, 2000, IEEE GLOB
   HOOD CS, 1997, IEEE T RELIAB, V46
   LAZAR A, 1992, P ICCS ISITA SING
   LEE D, 1996, P IEEE, V84
   Lewis H., 1998, Elements of the Theory of Computation
   MANO MM, 1972, COMPUTER LOGIC DESIG
   TANENBAUM S, 1996, COMPUTER NETWORKS
   WANG D, 2001, CONC PREST WORKSH CO
NR 10
TC 9
Z9 12
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP 15
PY 2003
VL 45
IS 12
BP 865
EP 871
DI 10.1016/S0950-5849(03)00065-X
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 724QW
UT WOS:000185499100007
DA 2024-07-18
ER

PT J
AU He, XD
   Chu, WC
   Yang, HJ
AF He, XD
   Chu, WC
   Yang, HJ
TI A new approach to verify rule-based systems using petri nets
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE rule-based systems; verification; petri nets
ID EXPERT-SYSTEMS; VERIFICATION; KNOWLEDGE
AB In the past several years, various graphical techniques were proposed to analyze various types of structural errors, including inconsistency (conflict rules), incompleteness (missing rules), redundancy (redundant rules), and circularity (circular depending rules), in rule-based systems in which rules can be represented in propositional logic. In this paper, we present a special reachability graph technique based on omega-nets (a special type of low-level petri nets) to detect all of the above types of structural errors. Our new technique is simple, efficient, and can be easily automated. We highlight the unique features of this new approach and demonstrate its application through two examples. (C) 2003 Elsevier B.V. All rights reserved.
C1 Florida Int Univ, Sch Comp Sci, Miami, FL 33199 USA.
   Tunghai Univ, Dept Comp & Informat Sci, Taichung, Taiwan.
   De Montfort Univ, Dept Comp Sci, Leicester LE1 9BH, Leics, England.
C3 State University System of Florida; Florida International University;
   Tunghai University; De Montfort University
RP He, XD (corresponding author), Florida Int Univ, Sch Comp Sci, Miami, FL 33199 USA.
CR AGARWAL R, 1992, INT J MAN MACH STUD, V36, P447, DOI 10.1016/0020-7373(92)90043-K
   CRAGUN BJ, 1987, INT J MAN MACH STUD, V26, P633, DOI 10.1016/S0020-7373(87)80076-7
   GINSBERG A, 1988, P AAAI 88 ST PAUL, P585
   Levesque H., 1985, Readings in Knowledge Representation, P41
   MURATA T, 1988, J FRANKLIN I, V325, P73, DOI 10.1016/0016-0032(88)90047-6
   Murata T., 1991, IEEE Transactions on Knowledge and Data Engineering, V3, P281, DOI 10.1109/69.91059
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nazareth D. L., 1991, Knowledge Acquisition, V3, P339, DOI 10.1016/S1042-8143(05)80024-X
   NAZARETH DL, 1989, INT J MAN MACH STUD, V30, P255, DOI 10.1016/S0020-7373(89)80002-1
   NAZARETH DL, 1993, IEEE T KNOWL DATA EN, V4, P402
   NGUYEN TA, 1987, AI MAG, V8, P69
   Ramaswamy M, 1997, IEEE T KNOWL DATA EN, V9, P221, DOI 10.1109/69.591448
   SUWA M, 1982, AI MAG, V3, P16, DOI https://doi.org/10.1609/aimag.v3i4.377
   Valiente G., 1993, International Journal of Expert Systems Research and Applications, V6, P341
   YANG SJH, 1998, P 22 INT COMP SOFTW
   ZHANG D, 1994, IEEE T KNOWL DATA EN, V6, P983, DOI 10.1109/69.334887
   [No title captured]
NR 17
TC 14
Z9 19
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 15
PY 2003
VL 45
IS 10
BP 663
EP 669
DI 10.1016/S0950-5849(03)00058-2
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 715NN
UT WOS:000184978800003
DA 2024-07-18
ER

PT J
AU Cao, YY
   Lim, EP
   Ng, WK
AF Cao, YY
   Lim, EP
   Ng, WK
TI Data model for warehousing historical Web information
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE temporal Web data model; Web warehousing; Web operations
ID QUERY LANGUAGE
AB In this paper, we present a temporal web data model designed for warehousing historical data from World Wide Web (WWW). As the Web is now populated with large volume of information, it has become necessary to capture selected portions of web information in a data warehouse that supports further information processing such as data extraction, data classification, and data mining. Nevertheless, due to the unstructured and dynamic nature of Web, the traditional relational model and its temporal variants could not be used to build such a data warehouse. In this paper, we therefore propose a temporal web data model that represents web documents and their connectivities in the form of temporal web tables. To represent web data that evolve with time, a visible time interval is associated with each web document. To manipulate temporal web tables, we have defined a set of web operators with capabilities ranging from extracting WWW information into web tables, to merging information from different web tables. We further illustrate the use of our temporal web data model using some realistic motivating examples. (C) 2003 Elsevier Science B.V. All rights reserved.
C1 Nanyang Technol Univ, Ctr Adv Informat Syst, Sch Comp Engn, Nanyang 639798, Singapore.
C3 Nanyang Technological University
RP Lim, EP (corresponding author), Nanyang Technol Univ, Ctr Adv Informat Syst, Sch Comp Engn, Block N4,2A-32 Nanyang Ave, Nanyang 639798, Singapore.
EM aseplim@ntu.edu.sg
RI Ng, Wee Keong/A-3724-2011; Lim, Ee-Peng/E-8562-2012
OI Ng, Wee Keong/0000-0001-7106-2768; Lim, Ee-Peng/0000-0003-0065-8665
CR Abiteboul S., 1997, International Journal on Digital Libraries, V1, P68, DOI 10.1007/s007990050001
   AMAGASA T, 2000, P 11 INT C DAT EXP S, P334
   [Anonymous], 1993, Temporal Databases: Theory, Design, and Implementation
   AROCENA G, 1998, P ICDE 98 ORL FLOR F
   ATZENI P, 1997, P 23 VLDB C ATH GREE
   BERTINO E, 1996, P 5 INT C EXT DAT TE
   Bohlen MH, 1995, WORK COMP, P153
   Buneman P, 1996, P ACM SIGMOD INT C M, P505
   Cho J., 2000, Estimating Frequency of Change
   CHO J, 2000, P 26 INT C VER LARG
   Clifford J., 1987, Proceedings of the Third International Conference on Data Engineering (Cat. No.87CH2407-5), P528
   COBENA G, 2002, P IEEE INT C DAT ENG
   Douglis F., 1998, World Wide Web, V1, P27, DOI 10.1023/A:1019243126596
   DYRESON CE, 1999, P 25 VLDB C
   Fernandez M., 1997, SIGMOD Record, V26, P4, DOI 10.1145/262762.262763
   FERNANDEZ M, 1998, P ACM SIGMOD C MAN D
   Fielding R., 1997, HYPERTEXT TRANSFER P
   FRIEDL EF, 2000, P 1 INT C ADV INF SY
   GRANDI F, 1998, P SIST EV BAS DAT SE
   HIMMERODER R, 1997, P 5 INT C DED OBJ OR
   KONOPNICKI D, 1995, P 21 VLDB C ZUR SWIT
   Lakshmanan L., 1996, P 6 INT WORKSH RES I
   LORESCU D, 1998, ACM SIGMOD RECORD, V27, P59
   MARIAN A, 2001, P 27 VLDB C SEPT
   MENDELZON A, 1997, J DIGITAL LIB, V1, P54
   Mendelzon A. O., 1997, Proceedings of the Sixteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, PODS 1997, P134, DOI 10.1145/263661.263677
   NAVATHE SB, 1989, INFORM SCIENCES, V49, P147, DOI 10.1016/0020-0255(89)90026-1
   NG WK, 2000, P 11 INT C DAT EXP S
   NG WK, 1998, P IEEE INT C ADV DIG
   SNODGRASS R, 1987, ACM T DATABASE SYST, V12, P247, DOI 10.1145/22952.22956
   SNODGRASS R, 1985, P ACM SIGMOD INT C M, P236
   [No title captured]
NR 32
TC 2
Z9 2
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2003
VL 45
IS 6
BP 315
EP 334
DI 10.1016/S0950-5849(03)00019-3
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 673GN
UT WOS:000182572500003
DA 2024-07-18
ER

PT J
AU Taibi, T
   Ngo, DCL
AF Taibi, T
   Ngo, DCL
TI Formal specification of design pattern combination using BPSL
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Balanced Pattern Specification Language; structural aspect; behavioral
   aspect; First Order Logic substitutions; behavioral dominance
AB Pattern users are faced with difficulties in understanding when and how to use the increasing number of available design patterns due the inherent ambiguity in the existing means (textual and graphical) of describing them. Since patterns are seldom used in isolation but are usually combined to solve complex problems, the above-mentioned difficulties have even worsen.
   Hence, there is an appealing need to introduce formalism to accurately describe patterns and pattern combination to allow rigorous reasoning about them. The main problem of existing formal specification languages for design patterns is lack of completeness. This is mainly due either because they were not originally conceived to specify design patterns and have been adapted to do so, or they tend to focus on specifying either the structural or behavioral aspect of design patterns but not both of them. Moreover, only few of them venture in specifying design pattern combination.
   We propose a simple yet Balanced Pattern Specification Language that is aimed to achieve equilibrium by specifying the structural as well as behavioral aspects of design patterns. This is achieved by combining two subsets of logic one from First Order Logic and one from Temporal Logic of Actions. Moreover it can be used to formally specify pattern combination. (C) 2002 Elsevier Science B.V. All rights reserved.
C1 Multimedia Univ, Fac Informat Technol, Jalan Multimedia, Cyberjaya 63100, Selangor, Malaysia.
   Multimedia Univ, Fac Informat Sci & Technol, Melaka 75450, Malaysia.
C3 Multimedia University; Multimedia University
RP Multimedia Univ, Fac Informat Technol, Jalan Multimedia, Cyberjaya 63100, Selangor, Malaysia.
EM toufik.taibi@mmu.edu.my; david.ngo@mmu.edu.my
RI Ngo, David C. L./E-3307-2012
CR ABADI M, 1993, ACM T PROGR LANG SYS, V15, P73, DOI 10.1145/151646.151649
   [Anonymous], 1989, 8807 ISO
   BACK RJR, 1988, ACM T PROGR LANG SYS, V10, P513, DOI 10.1145/48022.48023
   CHINNASAMY S, 1999, P 7 INT C ADV COMP C
   DONG J, 2000, P 7 ANN IEEE INT C W, P279, DOI DOI 10.1109/ECBS.2000.839887]
   EDEN AH, 1999, 2 NORD WORKSH SOFTW
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   RAMBAUGH J, 1998, UNIFIED MODELING LAN
   Saeki M, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P408, DOI 10.1109/APSEC.2000.896727
   Taibi T, 2001, JOOP, V14, P8
   VLISSIDES J, 1997, C PLUS PLUS REPORT, V9
   VLISSIDES JM, 1997, MULTICAST C PLUS PLU, V9
NR 14
TC 29
Z9 31
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2003
VL 45
IS 3
BP 157
EP 170
AR PII S0950-5849(02)00195-7
DI 10.1016/S0950-5849(02)000195-7
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 643KW
UT WOS:000180861300005
DA 2024-07-18
ER

PT J
AU Licorish, SA
   da Costa, DA
   Zolduoarrati, E
   Grattan, N
AF Licorish, Sherlock A.
   da Costa, Daniel Alencar
   Zolduoarrati, Elijah
   Grattan, Natalie
TI Relating team atmosphere and group dynamics to student software
   development teams' performance
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Team atmosphere; Group dynamics; Software development projects; Team
   performance
ID CLASSIFICATION; EXPERIENCE
AB Context: While the software engineering community (i.e., those involved with engineering software) is constantly in search of insights into team atmosphere and group dynamics and the way these issues impact team performance, little opportunities typically exist to explore this issue. Student projects offer an opportunity for us to understand these issues, and particularly if these students are on the verge of leaving university for post-study work and using similar practices to those used in industry.Objective: We explore a range of student software development projects' data and students' open-ended responses to five group dynamics categories: communication, time management, commitment, problem analysis and solving, and initiative and involvement.Method: We analyse both quantitative and qualitative data to study the variation in group dynamics across teams developing different software and how these variations correlated with team satisfaction. We also explore the group dynamics themes that evolve from students' open responses in relation to the five categories. Furthermore, we relate the prevalence of the themes to various software development performance metrics, before exploring the opportunity of predicting an optimum team dynamics.Results: We observe variations in the way different teams work, but higher performing teams also committed more to their projects. Various group dynamics themes were evident among functional teams, and specific patterns were more pronounced when teams were productive. Further, while there is no specific group dynamics pattern that predicts project success, successful teams were most organised and reflective.Conclusion: Competence may set the tone for positive group dynamics and team performance. Also, an achievement-driven orientation is as important as the soft skills and interpersonal aspects.
C1 [Licorish, Sherlock A.; da Costa, Daniel Alencar; Zolduoarrati, Elijah; Grattan, Natalie] Univ Otago, Dept Informat Sci, Dunedin, New Zealand.
C3 University of Otago
RP Licorish, SA (corresponding author), Univ Otago, Dept Informat Sci, Dunedin, New Zealand.
EM sherlock.licorish@otago.ac.nz
OI Licorish, Sherlock/0000-0001-7318-2421
FU University of Otago Commerce Research Grant Award - accessed through the
   Otago Business School Research Committee
FX This work is funded by a University of Otago Commerce Research Grant
   Award - accessed through the Otago Business School Research Committee.
CR Akdur D, 2019, MEDD C EMBED COMPUT, P251
   [Anonymous], 2009, J. Inf. Syst. Edu.
   [Anonymous], 2008, Software Process: Improvement and Practice, DOI DOI 10.1002/SPIP.378
   [Anonymous], Group vs. team: What's the difference?
   [Anonymous], 2017, P 21 INT C EV ASS, DOI DOI 10.1145/3084226.3084271
   [Anonymous], Software Developer vs. Software Engineer: What's the Difference?
   [Anonymous], 1996, ACM Int. Conf. Proc. Series, DOI DOI 10.1145/369585.369659
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Braun V, 2019, QUAL RES SPORT EXERC, V11, P589, DOI 10.1080/2159676X.2019.1628806
   Brown J, 1999, PROCEEDINGS OF THE THIRTIETH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P281, DOI 10.1145/384266.299788
   Bastarrica MC, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING TRACK (ICSE-SEET 2017), P137, DOI 10.1109/ICSE-SEET.2017.15
   Clairvoyantsoft, 2019, MLmuse: Correlation and Collinearity-How they can make or break a model [Web log post]
   Daniels M, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P128
   Dorairaj S, 2012, LECT NOTES BUS INF P, V111, P47
   Exter ME, 2019, J COMPUT HIGH EDUC, V31, P472, DOI 10.1007/s12528-018-9198-9
   Favela J, 2001, IEEE SOFTWARE, V18, P47, DOI 10.1109/52.914742
   Fioravanti ML, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P806, DOI 10.1145/3159450.3159599
   Gersting J. L., 1997, SIGCSE Bulletin, V29, P325, DOI 10.1145/268085.268207
   Giovanini L., 2021, arXiv
   GitBucket, about us
   Gordenko M., 2019, P 6 INT C ACT PROBL, P278
   Groeneveld W., 2019, arXiv
   Güven S, 2014, IEEE IFIP NETW OPER
   Hall D, 2013, ACT LEARN HIGH EDUC, V14, P37, DOI 10.1177/1469787412467123
   Jayden K, 2020, CONF SOFTW ENG EDUC, P36, DOI 10.1109/cseet49119.2020.9206201
   Kapitsaki GM, 2018, ITICSE'18: PROCEEDINGS OF THE 23RD ANNUAL ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P320, DOI 10.1145/3197091.3197103
   Kaur P, 2015, PROCEDIA COMPUT SCI, V57, P500, DOI 10.1016/j.procs.2015.07.372
   Kennedy A, 2006, COMPUT INTELL-US, V22, P110, DOI 10.1111/j.1467-8640.2006.00277.x
   Klug M, 2016, ROY SOC OPEN SCI, V3, DOI 10.1098/rsos.160007
   Knudson S, 2016, Arxiv, DOI arXiv:1609.08776
   Kortum F, 2019, LECT NOTES COMPUT SC, V11915, P725, DOI 10.1007/978-3-030-35333-9_56
   Kula E, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P991, DOI 10.1109/ASE51524.2021.9678939
   Licorish S. A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P83, DOI 10.1109/CHASE.2012.6223029
   Licorish S.A., 2014, P 18 INT C EV ASS SO, DOI [10.1145/2601248.2601265, DOI 10.1145/2601248.2601265]
   Licorish SA., 2022, Journal of Information Systems Education, V33, P245
   Licorish SA, 2022, J SYST SOFTWARE, V186, DOI 10.1016/j.jss.2021.111156
   Licorish SA, 2018, INFORM SOFTWARE TECH, V97, P10, DOI 10.1016/j.infsof.2017.12.005
   Licorish SA, 2017, INFORM MANAGE-AMSTER, V54, P364, DOI 10.1016/j.im.2016.09.005
   Licorish SA, 2016, ASIA PAC SOFWR ENG, P369, DOI [10.1109/APSEC.2016.47, 10.1109/APSEC.2016.062]
   Licorish SA, 2015, INFORM SOFTWARE TECH, V64, P113, DOI 10.1016/j.infsof.2015.02.004
   Licorish SA, 2014, INFORM SOFTWARE TECH, V56, P1578, DOI 10.1016/j.infsof.2014.02.004
   Lukusa Lina, 2020, TEEM'20: Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality, P885, DOI 10.1145/3434780.3436648
   Magana AJ., 2018, Journal of Information Systems Education, V29, P75
   Marques M, 2018, IEEE T EDUC, V61, P63, DOI 10.1109/TE.2017.2742989
   Matthews R., 2012, P 10 INT C ADV MOB C, P293, DOI DOI 10.1145/2428955.2429013
   Naseer M, 2020, SUSTAINABILITY-BASEL, V12, DOI 10.3390/su12114663
   O'Connor RV, 2012, INT J HUM CAP INF TE, V3, P13, DOI 10.4018/jhcitp.2012070102
   Paasivaara M, 2018, PROC INT CONF SOFTW, P49, DOI 10.1145/3183377.3183398
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Presler-marshall Kai, 2022, ICER 2022 V1: Proceedings of the 2022 ACM Conference on International Computing Education Research V.1, P177, DOI 10.1145/3501385.3543980
   Riding R., 2013, Cognitive styles and learning strategies: Understanding style differences in learning and behavior
   Rinker T., 2022, Package 'sentimentr' [Code documentation]
   Robillard P. N., 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P101, DOI 10.1109/ICSSP.2012.6225952
   Ryan K, 2020, 2020 ACM/IEEE 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET 2020), P103, DOI 10.1145/3377814.3381719
   Sa'adah U, 2021, INT CONF INFORM COMM, P106, DOI 10.1109/ICTS52701.2021.9607916
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Waheed H, 2020, COMPUT HUM BEHAV, V104, DOI 10.1016/j.chb.2019.106189
   Williams LA, 2000, COMMUN ACM, V43, P108, DOI 10.1145/332833.332848
   Zolduoarrati E, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111427
NR 59
TC 0
Z9 0
U1 11
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107377
DI 10.1016/j.infsof.2023.107377
EA NOV 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB8H8
UT WOS:001129659400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Lonetti, F
   Bertolino, A
   Di Giandomenico, F
AF Lonetti, Francesca
   Bertolino, Antonia
   Di Giandomenico, Felicita
TI Model-based security testing in IoT systems: A Rapid Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Internet of Things; Model-based testing; Security testing
ID INTERNET; TAXONOMY; ATTACKS
AB Context: Security testing is a challenging and effort-demanding task in IoT scenarios. The heterogeneous devices expose different vulnerabilities that can influence the methods and cost of security testing. Model based security testing techniques support the systematic generation of test cases for the assessment of security requirements by leveraging the specifications of the IoT system model and of the attack templates.Objective: This paper aims to review the adoption of model-based security testing in the context of IoT, and then provides the first systematic and up-to-date comprehensive classification and analysis of research studies in this topic.Method: We conducted a systematic literature review analyzing 803 publications and finally selecting 17 primary studies, which satisfied our inclusion criteria and were classified according to a set of relevant analysis dimensions.Results: We report the state-of-the-art about the used formalisms, the test techniques, the objectives, the target applications and domains; we also identify the targeted security attacks, and discuss the challenges, gaps and future research directions.Conclusion: Our review represents the first attempt to systematically analyze and classify existing studies on model-based security testing for IoT. According to the results, model-based security testing has been applied in core IoT domains. Models complexity and the need of modeling evolving scenarios that include heterogeneous open software and hardware components remain the most important shortcomings. Our study shows that model-based security testing of IoT applications is a promising research direction. The principal future research directions deal with: extending the existing modeling formalisms in order to capture all peculiarities and constraints of complex and large scale IoT networks; the definition of context-aware and dynamic evolution modeling approaches of IoT entities; and the combination of model-based testing techniques with other security test strategies such as penetration testing or learning techniques for model inference.
C1 [Lonetti, Francesca; Bertolino, Antonia; Di Giandomenico, Felicita] CNR, Ist Sci & Tecnol Informaz, Via G Moruzzi 1, I-56124 Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR)
RP Lonetti, F (corresponding author), CNR, Ist Sci & Tecnol Informaz, Via G Moruzzi 1, I-56124 Pisa, Italy.
EM francesca.lonetti@isti.cnr.it; antonia.bertolino@isti.cnr.it;
   felicita.digiandomenico@isti.cnr.it
RI Bertolino, Antonia/ABD-6837-2020
OI Bertolino, Antonia/0000-0001-8749-1356
FU project SERICS under MUR National Recovery and Resilience Plan -
   European Union-NextGenerationEU [PE00000014]
FX This work was partially supported by project SERICS (PE00000014) under
   the MUR National Recovery and Resilience Plan funded by the European
   Union-NextGenerationEU.
CR Ahmad A, 2018, ADV COMPUT, V108, P1, DOI 10.1016/bs.adcom.2017.11.002
   Ahmad A, 2016, LECT NOTES COMPUT SC, V9953, P727, DOI 10.1007/978-3-319-47169-3_55
   Ahmad E, 2023, IEEE ACCESS, V11, P50642, DOI 10.1109/ACCESS.2023.3277429
   Aichernig BK, 2021, IEEE INT CONF SOFTW, P47, DOI 10.1109/ICST49551.2021.00017
   Robles-Ramirez DA, 2017, P I CONF MEC EL AUT, P151, DOI 10.1109/ICMEAE.2017.20
   Allweyer T., 2016, BPMN 20 INTRO STANDA
   Anand P, 2020, IEEE ACCESS, V8, P168825, DOI 10.1109/ACCESS.2020.3022842
   Anwer F., 2017, Trends in Software Testing, P35
   Arcile J, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3534967
   Atwady Y, 2017, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON FUTURE NETWORKS AND DISTRIBUTED SYSTEMS (ICFNDS '17), DOI 10.1145/3102304.3102312
   Berrouyne I, 2022, IEEE INTERNET THINGS, V9, P19757, DOI 10.1109/JIOT.2022.3170500
   Bin Tauqeer O, 2021, INTELL AUTOM SOFT CO, V29, P291, DOI 10.32604/iasc.2021.017260
   Bodei C, 2021, J PARALLEL DISTR COM, V157, P233, DOI 10.1016/j.jpdc.2021.07.004
   Bures M, 2020, LECT NOTES COMPUT SC, V12310, P93, DOI 10.1007/978-3-030-58768-0_6
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Carlini N, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1577
   Cartaxo B., 2019, INT SYMP EMP SOFTWAR, P1, DOI [10.1109/ESEM.2019.8870144, DOI 10.1109/esem.2019.8870144]
   Cartaxo B., 2020, Rapid Reviews in Software Engineering, P357
   Cartaxo Bruno, 2018, 22 INT C EV ASS SOFT, P24, DOI DOI 10.1145/3210459.3210462
   Chandan AbhishekR., 2018, 2018 INT C INVENTIVE, P1431
   Chen CK, 2018, COMPUTER, V51, P82, DOI 10.1109/MC.2018.2141033
   Cortés M, 2019, SAST 2019: PROCEEDINGS OF THE IV BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, P3, DOI 10.1145/3356317.3356326
   Daoudagh S, 2020, SOFTWARE QUAL J, V28, P249, DOI 10.1007/s11219-019-09470-5
   Dias JP, 2018, IEEE ICST WORKSHOP, P104, DOI 10.1109/ICSTW.2018.00035
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Fortino G, 2017, COMPUT SCI ENG, V19, P68, DOI 10.1109/MCSE.2017.3421541
   Garousi V, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111032
   Gehlot V, 2019, WINT SIMUL C PROC, P1519, DOI 10.1109/WSC40007.2019.9004691
   Valadares DCG, 2021, IEEE INTERNET THINGS, V8, P17199, DOI 10.1109/JIOT.2021.3077850
   Greenberg A., 2016, Wired Magazine
   Gui ZJ, 2020, IEEE ACCESS, V8, P29826, DOI 10.1109/ACCESS.2020.2973043
   Hamel C, 2021, J CLIN EPIDEMIOL, V129, P74, DOI 10.1016/j.jclinepi.2020.09.041
   Heiding F, 2023, COMPUT SCI REV, V48, DOI 10.1016/j.cosrev.2023.100551
   Jabbar R., 2020, ENASE 2020 P 15 INT, DOI [10.5220/0009594305950602, DOI 10.5220/0009594305950602]
   Johari R, 2020, PROCEEDINGS OF THE 2020 5TH INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND SECURITY (ICCCS-2020), DOI 10.1109/icccs49678.2020.9276853
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Khanam S, 2020, IEEE ACCESS, V8, P219709, DOI 10.1109/ACCESS.2020.3037359
   Khedker UdayP., 2009, Data Flow Analysis: Theory and Practice, DOI DOI 10.1201/9780849332517
   Kirchhof JC, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111087
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Krichen Moez, 2018, Smart Societies, Infrastructure, Technologies and Applications. First International Conference, SCITA 2017. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 224), P360, DOI 10.1007/978-3-319-94180-6_34
   Krichen M, 2021, CMC-COMPUT MATER CON, V66, P2997, DOI 10.32604/cmc.2021.014090
   Krichen M, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P570, DOI 10.5220/0007830605700577
   Krichen M, 2020, EAI SPRINGER INNOVAT, P629, DOI 10.1007/978-3-030-13705-2_26
   Lallie HS, 2020, COMPUT SCI REV, V35, DOI 10.1016/j.cosrev.2019.100219
   Larsen Kim G., 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P212, DOI 10.1007/978-3-030-03427-6_18
   Legeard B, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P391, DOI 10.1109/ICST.2013.55
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Lohiya R, 2021, IEEE INTERNET THINGS, V8, P8774, DOI 10.1109/JIOT.2020.3048439
   Lounis K, 2020, IEEE ACCESS, V8, P88892, DOI 10.1109/ACCESS.2020.2993553
   Lunkeit A, 2018, IEEE ICST WORKSHOP, P244, DOI 10.1109/ICSTW.2018.00056
   Mahmood S., 2021, Digital Transformation, Cyber Security and Resilience of Modern Societies, P219, DOI DOI 10.1007/978-3-030-65722-2_14
   Mahmood S, 2022, VEH COMMUN, V35, DOI 10.1016/j.vehcom.2022.100468
   Mahmoodi Y, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P602, DOI 10.5220/0006724606020609
   Mahmoodi Y, 2018, 2018 21ST EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD 2018), P177, DOI 10.1109/DSD.2018.00043
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   Marksteiner S, 2021, 2021 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2021), P129, DOI 10.1109/EuroSPW54576.2021.00021
   Marksteiner S, 2019, THIRD CENTRAL EUROPEAN CYBERSECURITY CONFERENCE (CECC 2019), DOI 10.1145/3360664.3362698
   Matheu SN, 2020, LECT NOTES COMPUT SC, V11897, P286, DOI 10.1007/978-3-030-39303-8_22
   Matheu-García SN, 2019, COMPUT STAND INTER, V62, P64, DOI 10.1016/j.csi.2018.08.003
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Miller A., 2020, Technical Report
   Morin B, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.11
   Murad G, 2018, INT CONF COMP SCI, P17, DOI 10.1109/CSIT.2018.8486149
   Nadir I, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW), P39, DOI 10.1109/EuroSPW.2019.00011
   Neisse R, 2017, 2017 GLOBAL INTERNET OF THINGS SUMMIT (GIOTS 2017), P373
   Matheu SN, 2019, IEEE ACCESS, V7, P149444, DOI 10.1109/ACCESS.2019.2947157
   Peleska Jan, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P82, DOI 10.1007/978-3-030-03427-6_11
   Peroli M, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1685
   Rak M, 2022, COMPUT ELECTR ENG, V99, DOI 10.1016/j.compeleceng.2022.107721
   Reynen E, 2018, J CLIN EPIDEMIOL, V96, P23, DOI 10.1016/j.jclinepi.2017.12.001
   Rudin C, 2019, NAT MACH INTELL, V1, P206, DOI 10.1038/s42256-019-0048-x
   Sabbagh M., 2021, P 5 WORKSH COMP ARCH, P1, DOI [10.1145/1122445.1122456, DOI 10.1145/1122445.1122456]
   Sengupta J, 2020, J NETW COMPUT APPL, V149, DOI 10.1016/j.jnca.2019.102481
   Shah Y, 2020, 2020 11TH IEEE ANNUAL UBIQUITOUS COMPUTING, ELECTRONICS & MOBILE COMMUNICATION CONFERENCE (UEMCON), P406, DOI 10.1109/UEMCON51285.2020.9298138
   Siboni S, 2019, IEEE T RELIAB, V68, P23, DOI 10.1109/TR.2018.2864536
   Siegel JE, 2018, IEEE INTERNET THINGS, V5, P2386, DOI 10.1109/JIOT.2017.2755620
   Sommer F, 2023, IEEE ACCESS, V11, P55474, DOI 10.1109/ACCESS.2023.3282176
   Teeba Ismail Kh, 2020, International Journal of Interactive Mobile Technologies, V14, P128, DOI 10.3991/ijim.v14i09.13431
   Thelwall M, 2022, QUANT SCI STUD, V3, P37, DOI 10.1162/qss_a_00177
   Tretmans Jan, 2017, ModelEd, TestEd, TrustEd - Essays Dedicated to Ed Brinksma on the Occasion of His 60th Birthday. LNCS 10500, P87, DOI 10.1007/978-3-319-68270-9_5
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Vermesan O, 2017, RIVER PUBL SER COMM, P189
   Wang R, 2019, J LOG ALGEBR METHODS, V104, P254, DOI 10.1016/j.jlamp.2019.02.004
   Willcock C., 2011, An introduction to TTCN-3, DOI [10.1002/9780470977903, DOI 10.1002/9780470977903]
   Wirtz R, 2019, LECT NOTES COMPUT SC, V11391, P205, DOI 10.1007/978-3-030-12143-3_17
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Woolf N., 2016, The Guardian26 October
   Xiao L, 2018, IEEE SIGNAL PROC MAG, V35, P41, DOI 10.1109/MSP.2018.2825478
   Xie W, 2017, INT C PAR DISTRIB SY, P769, DOI 10.1109/ICPADS.2017.00104
   Zhu SC, 2022, WIRELESS PERS COMMUN, V123, P165, DOI 10.1007/s11277-021-09124-5
NR 91
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107326
DI 10.1016/j.infsof.2023.107326
EA SEP 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T7ZT9
UT WOS:001080135600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Kalouptsoglou, I
   Siavvas, M
   Ampatzoglou, A
   Kehagias, D
   Chatzigeorgiou, A
AF Kalouptsoglou, Ilias
   Siavvas, Miltiadis
   Ampatzoglou, Apostolos
   Kehagias, Dionysios
   Chatzigeorgiou, Alexander
TI Software vulnerability prediction: A systematic mapping study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systematic mapping study; Software security; Vulnerability prediction;
   Machine learning
AB Context: Software security is considered a major aspect of software quality as the number of discovered vulnerabilities in software products is growing. Vulnerability prediction is a mechanism that helps engineers to prioritize their inspection efforts focusing on vulnerable parts. Despite the recent advancements, current literature lacks a systematic mapping study on vulnerability prediction. Objective: This paper aims to analyze the state-of-the-art of vulnerability prediction focusing on: (a) the goals of vulnerability prediction-related studies; (b) the data collection processes and the types of datasets that exist in the literature; (c) the mostly examined techniques for the construction of the prediction models and their input features; and (d) the utilized evaluation techniques.Method: We collected 180 primary studies following a broad search methodology across four popular digital libraries. We mapped these studies to the variables of interest and we identified trends and relationships between the studies.Results: The main findings suggest that: (i) there are two major study types, prediction of vulnerable software components and forecasting of the evolution of vulnerabilities in software; (ii) most studies construct their own vulnerability-related dataset retrieving information from vulnerability databases for real-world software; (iii) there is a growing interest for deep learning models along with a trend on textual source code representation; and (iv) F1-score was found to be the most widely used evaluation metric.Conclusions: The results of our study indicate that there are several open challenges in the domain of vulnerability prediction. One of the major conclusions, is the fact that most studies focus on within-project prediction, neglecting the real-world scenario of cross-project prediction.
C1 [Kalouptsoglou, Ilias; Siavvas, Miltiadis; Kehagias, Dionysios] Ctr Res & Technol Hellas, Informat Technol Inst, 6th Km Charilaou Thermi Rd, Thermi 57001, Thessaloniki, Greece.
   [Kalouptsoglou, Ilias; Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Egnatia 156, Thessaloniki 54636, Thessaloniki, Greece.
C3 Centre for Research & Technology Hellas; University of Macedonia
RP Kalouptsoglou, I (corresponding author), Ctr Res & Technol Hellas, Informat Technol Inst, 6th Km Charilaou Thermi Rd, Thermi 57001, Thessaloniki, Greece.
EM iliaskaloup@uom.edu.gr; siavvasm@iti.gr; a.ampatzoglou@uom.edu.gr;
   diok@iti.gr; achat@uom.edu.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021; Kehagias, Dionysios
   D/H-9091-2016
OI Kalouptsoglou, Ilias/0000-0002-5118-2508
FU European Union [952684]
FX This work is funded by the European Union's Horizon 2020 Research and
   Innovation Program through the IoTAC Project, Grant Number 952684.
CR Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2022, Common Vulnerabilities and Exposures.
   [Anonymous], 2022, TIOBE index for November 2022
   [Anonymous], 2022, One-hot vectors
   [Anonymous], 2023, ISO/IEC 27000:2018
   [Anonymous], 2023, C NEUR INF PROC SYST
   [Anonymous], 2022, SMS on vulnerability prediction: A systematic mapping study
   [Anonymous], 2022, OWASP benchmark
   [Anonymous], 2022, NIST software assurance reference dataset
   [Anonymous], 2022, OWASP Top 10
   [Anonymous], 2022, NATL VULNERABILITY D
   Bagheri A., 2021, COMMUNICATIONS COMPU, P267, DOI [10.1007/978-3-030-85347-1_20, DOI 10.1007/978-3-030-85347-1_20]
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bhuiyan FA, 2021, IEEE ACCESS, V9, P28471, DOI 10.1109/ACCESS.2021.3058067
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Croft Roland., 2021, Data preparation for software vulnerability prediction: A systematic literature review
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dowd M., 2006, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities
   Farhoodi R, 2013, INT J SOFTW ENG KNOW, V23, P463, DOI 10.1142/S0218194013500137
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Ferenc R, 2019, INT WORK REAL ARTIF, P8, DOI 10.1109/RAISE.2019.00010
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Hanif H, 2022, IEEE IJCNN, DOI [10.1109/IJCNN55064.2022.9892280, 10.1109/MEPCON55441.2022.10021719]
   Hanif H, 2021, J NETW COMPUT APPL, V179, DOI 10.1016/j.jnca.2021.103009
   Joulin A, 2016, Arxiv, DOI [arXiv:1607.01759, DOI 10.48550/ARXIV.1607.01759]
   Kalouptsoglou Ilias, 2022, Security in Computer and Information Sciences: Second International Symposium, EuroCybersec 2021, Revised Selected Papers. Communications in Computer and Information Science (1596), P23, DOI 10.1007/978-3-031-09357-9_3
   Kalouptsoglou I, 2022, ENTROPY-SWITZ, V24, DOI 10.3390/e24050651
   Kalouptsoglou I, 2020, LECT NOTES COMPUT SC, V12252, P877, DOI 10.1007/978-3-030-58811-3_62
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Krsul I.V., 1998, SOFTWARE VULNERABILI
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mosolygo Balazs, 2021, 2021 International Conference on Code Quality (ICCQ), P15, DOI 10.1109/ICCQ51190.2021.9392984
   Nong Y., 2022, IEEE Transactions on Software Engineering (TSE)
   Peng Dinglan, 2021, P MACHINE LEARNING R, V139, P8476
   Peng H., 2021, Advances in Neural Information Processing Systems, V34, P9343
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rafique S., 2015, 2015 IEEEACIS 16 INT, P1, DOI [10.1109/SNPD.2015.7176244, DOI 10.1109/SNPD.2015.7176244]
   Roziere Baptiste, 2020, processing systems, V33, P20601
   Semasaba AOA, 2020, IET SOFTW, V14, P654, DOI 10.1049/iet-sen.2020.0084
   Senanayake J, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3556974
   Tian JF, 2021, I C DEPENDABLE SYST, P93, DOI 10.1109/DSN-W52860.2021.00026
   Vaswani A, 2017, ADV NEUR IN, V30
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wartschinski L, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106809
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 50
TC 0
Z9 0
U1 1
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107303
DI 10.1016/j.infsof.2023.107303
EA AUG 2023
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R2FY3
UT WOS:001062565100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Wang, WY
   Wu, CH
   He, J
AF Wang, Wen-Yao
   Wu, Chen-Hao
   He, Jie
TI CLeBPI: Contrastive Learning for Bug Priority Inference
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Contrastive learning; Bug report; Bug priority inference; Software
   maintenance
ID INFORMATION-RETRIEVAL; PREDICTION
AB Context: Automated bug priority inference (BPI) can reduce the time overhead of bug triagers for priority assignments, improving the efficiency of software maintenance. Objective: There are two orthogonal lines for this task, i.e., traditional machine learning based (TML-based) and neural network based (NN-based) approaches. Although these approaches achieve competitive performance, our observation finds that existing approaches face the following two issues: 1) TML-based approaches require much manual feature engineering and cannot learn the semantic information of bug reports; 2) Both TML-based and NN-based approaches cannot effectively address the label imbalance problem because they are difficult to distinguish the semantic difference between bug reports with different priorities. Method: We propose CLeBPI (Contrastive Learning for Bug Priority Inference), which leverages pre-trained language model and contrastive learning to tackle the above-mentioned two issues. Specifically, CLeBPI is first pre-trained on a large-scale bug report corpus in a self-supervised way, thus it can automatically learn contextual representations of bug reports without manual feature engineering. Afterward, it is further pre-trained by a contrastive learning objective, which enables it to distinguish semantic differences between bug reports, learning more precise contextual representations for each bug report. When finishing pre-training, we can connect a classification layer to CLeBPI and fine-tune it for BPI in a supervised way. Results: We choose four baseline approaches and conduct comparison experiments on a public dataset. The experimental results show that CLeBPI outperforms all baseline approaches by 23.86%-77.80% in terms of weighted average F1-score, showing its effectiveness. Conclusion: This paper propose CLeBPI, a pre-trained model combining contrastive learning that can auto-matically predict bug priority. Experimental results show that It achieves new result in BPI and can effectively alleviate label imbalance problem.
C1 [Wang, Wen-Yao; Wu, Chen-Hao] Macau Univ Sci & Technol, Fac Innovat Engn, Taipa, Macao, Peoples R China.
   [He, Jie] Hunan Univ, Coll Comp Sci & Elect Engn, Changsha, Hunan, Peoples R China.
   [He, Jie] Wuzhou Univ, Guangxi Key Lab Machine Vis & Intelligent Control, Wuzhou, Guangxi, Peoples R China.
C3 Macau University of Science & Technology; Hunan University; Wuzhou
   University
RP He, J (corresponding author), Hunan Univ, Coll Comp Sci & Elect Engn, Changsha, Hunan, Peoples R China.; He, J (corresponding author), Wuzhou Univ, Guangxi Key Lab Machine Vis & Intelligent Control, Wuzhou, Guangxi, Peoples R China.
EM wenyaowang108@gmail.com; wuchenhao78@gmail.com; wuchenhao78@gmail.com
FU National Natural Science Foundation of China [61961036, 62162054];
   Natural Science Foundation of Guangxi, China [2020JJA170007]; Special
   Project of Guangxi Science and Technology Base and Talent [AD20297148]
FX This work was supported in part by the National Natural Science
   Foundation of China (Grant No. 61961036, 62162054), in part by Natural
   Science Foundation of Guangxi, China (Grant No. 2020JJA170007), and in
   part by Special Project of Guangxi Science and Technology Base and
   Talent (Guike AD20297148).
CR Abdelmoez W, 2012, 2012 22ND INTERNATIONAL CONFERENCE ON COMPUTER THEORY AND APPLICATIONS (ICCTA), P167, DOI 10.1109/ICCTA.2012.6523564
   Alenezi M, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P112, DOI 10.1109/ICMLA.2013.114
   Allison B, 2006, LECT NOTES ARTIF INT, V4188, P327
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bani-Salameh H, 2021, E-INFORMATICA, V15, P29, DOI 10.37190/e-Inf210102
   Beltagy Iz, 2019, arXiv, DOI DOI 10.48550/ARXIV.1903.10676
   Bhattacharya P, 2010, PROC IEEE INT CONF S
   Chen T, 2020, PR MACH LEARN RES, V119
   Chen T, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P767, DOI 10.1145/3097983.3098202
   Choudhary P.A., 2017, Int. J. Adv. Res. Comput. Sci., V8, P1315, DOI DOI 10.26483/IJARCS.V8I5.3559
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Ethayarajh K, 2019, Arxiv, DOI [arXiv:1909.00512, DOI 10.18653/V1/D19]
   Fang S, 2022, J SYST SOFTWARE, V185, DOI 10.1016/j.jss.2021.111160
   Fang S, 2021, IEEE T RELIAB, V70, P563, DOI 10.1109/TR.2021.3074412
   Fang S, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106542
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Gao TY, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6894
   Hadsell R, 2006, IEEE C COMP VIS PATT, P1735, DOI DOI 10.1109/CVPR.2006.100
   Harris CR, 2020, NATURE, V585, P357, DOI 10.1038/s41586-020-2649-2
   He JJ, 2020, INT C PROGRAM COMPRE, P117, DOI 10.1145/3387904.3389263
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Henderson Matthew, 2017, arXiv
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang J., 2021, arXiv
   Huang ZH, 2015, Arxiv, DOI arXiv:1508.01991
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jin Q, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3490238
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Kim T, 2021, Arxiv, DOI arXiv:2106.07345
   Kouris P, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5082
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lee J, 2020, BIOINFORMATICS, V36, P1234, DOI 10.1093/bioinformatics/btz682
   Lei Ba J., 2016, arXiv
   Li BH, 2020, Arxiv, DOI [arXiv:2011.05864, DOI 10.48550/ARXIV.2011.05864]
   Li Y., 2022, P 16 ACM IEEE INT S, P1
   Li Z., 2018, P 27 INT C COMP LING, P3203
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Loshchilov I, 2019, Arxiv, DOI arXiv:1711.05101
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Minaee S, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3439726
   Muller M., 2020, arXiv
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Radford A., 2018, Improving language understanding by generative pre-training
   Saha RK, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P258, DOI 10.1109/MSR.2015.31
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Shaw P, 2018, Arxiv, DOI arXiv:1803.02155
   Sutskever I, 2014, ADV NEUR IN, V27
   Tan YS, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110567
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Umer Q, 2020, IEEE T RELIAB, V69, P1341, DOI 10.1109/TR.2019.2959624
   Umer Q, 2018, IEEE ACCESS, V6, P35743, DOI 10.1109/ACCESS.2018.2850910
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang CH, 2020, AAAI CONF ARTIF INTE, V34, P9154
   Wei CH, 2016, DATABASE-OXFORD, DOI 10.1093/database/baw032
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Yang ZL, 2019, ADV NEUR IN, V32
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zhang T, 2017, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC.2017.28
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 68
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2023
VL 164
AR 107302
DI 10.1016/j.infsof.2023.107302
EA AUG 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CA7W2
UT WOS:001122604000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Oliveira, J
   Gheyi, R
   Teixeira, L
   Ribeiro, M
   Leandro, O
   Fonseca, B
AF Oliveira, Jonhnanthan
   Gheyi, Rohit
   Teixeira, Leopoldo
   Ribeiro, Marcio
   Leandro, Osmar
   Fonseca, Baldoino
TI Towards a better understanding of the mechanics of refactoring detection
   tools
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Refactoring; Mechanics; Program comprehension
AB Context: Refactoring is a crucial practice used by many developers, available in popular IDEs, like Eclipse. Moreover, refactoring detection tools, such as RefDiff and RefactoringMiner, help improve the comprehension of refactoring application changes.Objective: In this article, we better understand to what extent refactoring detection tools (RefDiff and RefactoringMiner) identify refactoring operations that developers apply in practice.Methods: We survey with 53 developers of popular Java projects on GitHub. We asked them to identify six refactoring transformations applied to small programs.Results: There is no unanimity in all questions of our survey. Refactoring detection tools do not detect many refactoring operations expected by developers. In 4 out of 6 questions, most developers prefer the Eclipse refactoring mechanics.Conclusion: The results highlight the importance of diving deep into the refactoring mechanics and defining a baseline. Empirical studies focused on mining refactoring operations may be limited by an incomplete or unrepresentative sample of such operations, thus posing a challenge for researchers in this field.
C1 [Oliveira, Jonhnanthan; Gheyi, Rohit; Leandro, Osmar] Univ Fed Campina Grande, Campina Grande, Brazil.
   [Teixeira, Leopoldo] Univ Fed Pernambuco, Pernambuco, Brazil.
   [Ribeiro, Marcio; Fonseca, Baldoino] Univ Fed Alagoas, Alagoas, Brazil.
C3 Universidade Federal de Campina Grande; Universidade Federal de
   Pernambuco; Universidade Federal de Alagoas
RP Oliveira, J (corresponding author), Univ Fed Campina Grande, Campina Grande, Brazil.
EM jonhnanthan@copin.ufcg.edu.br; rohit@dsc.ufcg.edu.br; lmt@cin.ufpe.br;
   marcio@ic.ufal.br; osmar@copin.ufcg.edu.br; baldoino@ic.ufal.br
RI Fonseca, Baldoino/JUV-2819-2023; Teixeira, Leopoldo M/G-5937-2016
OI Fonseca, Baldoino/0000-0002-0730-0319; Oliveira,
   Jonhnanthan/0000-0002-7782-410X
FU CNPq, Brazil; CAPES, Brazil; FAPEAL, Brazil
FX We want to thank the anonymous reviewers for their insightful
   suggestions. This work was partially supported by CNPq, Brazil, CAPES,
   Brazil, and FAPEAL, Brazil grants.
CR Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2011, S VIS LANG HUM CEN C, P165, DOI 10.1109/VLHCC.2011.6070394
   Oliveira J, 2019, INFORM SOFTWARE TECH, V110, P136, DOI 10.1016/j.infsof.2019.03.002
   Silva DS, 2020, INT J ENTREP BEHAV R, V26, P595, DOI [10.1108/IJEBR-07-2019-0425, 10.1109/TSE.2020.2968072]
   Tempero E, 2017, COMMUN ACM, V60, P54, DOI 10.1145/3131873
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
NR 10
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107273
DI 10.1016/j.infsof.2023.107273
EA JUN 2023
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA N2LE9
UT WOS:001035382200001
DA 2024-07-18
ER

PT J
AU Alami, A
   Zahedi, M
   Krancher, O
AF Alami, Adam
   Zahedi, Mansooreh
   Krancher, Oliver
TI Antecedents of psychological safety in agile software development teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Psychological safety; Mixed-methods
ID LEADERSHIP; ENGAGEMENT; WORKPLACE; BEHAVIOR; WORK
AB Context: Psychological safety continues to inspire researchers' curiosity in various fields of study. It has been shown to enhance teams' performance, efficiency, and learning, among other corollaries. Researchers are stretching the boundaries of these early findings to identify further effects of psychological safety. Recent work shows that psychological safety promotes knowledge sharing, norm clarity, and complements agile values.Objective: Studies show that psychological safety enhance agile values and practices, and some practitioners went as far as to claim "agile doesn't work without psychological safety."Yet, researchers have not explored its antecedents. In this study, we sought to understand how psychological safety materializes in agile software development teams.Method: We opted for a two-phase mixed-methods study; an exploratory qualitative phase (18 interviews) followed by a quantitative phase (survey study, N = 365) to broaden the empirical coverage and test phase one's findings.Results: Our findings show that psychological safety is established in agile software teams when individuals, the team, and the leadership adopt and promote strategies conducive to promoting a psychologically safe workplace. While openness and no blame towards team members are the "butter and bread"of psychological safety, collective-decision making within the team and the leadership ownership remain the pillars of a psychologically safe workplace. Conversely, team autonomy, technical practices providing a safety net and slack time were not found to promote psychological safety.Conclusion: To institutionalize psychological safety in agile software teams, individuals, teams, and the leadership should consolidate their effort to adopt no blame, openness, collective decision-making in the team, and assuming the ownership of promoting a psychologically safe workplace.
C1 [Alami, Adam] Aalborg Univ, Aalborg, Denmark.
   [Zahedi, Mansooreh] Univ Melbourne, Melbourne, Australia.
   [Krancher, Oliver] IT Univ Copenhagen, Copenhagen, Denmark.
   [Alami, Adam] Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
C3 Aalborg University; University of Melbourne; IT University Copenhagen;
   Aalborg University
RP Alami, A (corresponding author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg, Denmark.
EM adal@cs.aau.dk
RI Alami, Adam/KBR-2703-2024
OI Alami, Adam/0000-0003-4483-0105; Zahedi, Mansooreh/0000-0001-6276-9956;
   Krancher, Oliver/0000-0003-3876-3604
CR Alami A., 2022, INFORM SOFTWARE TECH
   Alami A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10208-4
   Antonakis J, 2010, LEADERSHIP QUART, V21, P1086, DOI 10.1016/j.leaqua.2010.10.010
   Bienefeld N, 2014, EUR J WORK ORGAN PSY, V23, P930, DOI 10.1080/1359432X.2013.808398
   Buvik M., 2022, 55 HAW INT C SYST SC, P10
   Buvik MP, arXiv
   Carmeli A, 2007, LONG RANGE PLANN, V40, P30, DOI 10.1016/j.lrp.2006.12.002
   Carmeli A, 2010, CREATIVITY RES J, V22, P250, DOI 10.1080/10400419.2010.504654
   Cockburn A., 2002, Cutter IT Journal, V15, P6
   Creswell J. W., 2007, DESIGNING CONDUCTING
   Detert JR, 2007, ACAD MANAGE J, V50, P869
   DeVellis R. F., 2021, Scale development: Theory and applications, V5th
   Diegmann P., 2017, ICIS
   digital.ai, 2021, 15 STAT AG REP AG LE
   Duhigg C., 2016, New York Times
   Dupuis M, 2019, BEHAV RES METHODS, V51, P2228, DOI 10.3758/s13428-018-1103-y
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Edmondson A, 1999, ADMIN SCI QUART, V44, P350, DOI 10.2307/2666999
   Edmondson AC, 2014, ANNU REV ORGAN PSYCH, V1, P23, DOI 10.1146/annurev-orgpsych-031413-091305
   Faraj S, 2009, J APPL PSYCHOL, V94, P604, DOI 10.1037/a0014367
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Hennel P, 2021, PROJ MANAG J, V52, P11, DOI 10.1177/8756972820933057
   KAHN WA, 1990, ACAD MANAGE J, V33, P692, DOI 10.5465/256287
   Kergel D., 2021, LISTENING, V56, P5, DOI [10.5840/listening20215612, DOI 10.5840/LISTENING20215612]
   Lee G, 2010, MIS QUART, V34, P87
   Lenberg P, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P79, DOI 10.1145/3195836.3195847
   Lovett M, 2018, APPL PSYCHOL-INT REV, V67, P339, DOI 10.1111/apps.12124
   Madjar N, 2009, HUM PERFORM, V22, P128, DOI 10.1080/08959280902743501
   May DR, 2004, J OCCUP ORGAN PSYCH, V77, P11, DOI 10.1348/096317904322915892
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Nembhard IM, 2006, J ORGAN BEHAV, V27, P941, DOI 10.1002/job.413
   Newman A, 2017, HUM RESOUR MANAGE R, V27, P521, DOI 10.1016/j.hrmr.2017.01.001
   O'Neill OA, 2009, J APPL SOC PSYCHOL, V39, P2396, DOI 10.1111/j.1559-1816.2009.00531.x
   Oppenheimer DM, 2009, J EXP SOC PSYCHOL, V45, P867, DOI 10.1016/j.jesp.2009.03.009
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Post C, 2012, GROUP ORGAN MANAGE, V37, P555, DOI 10.1177/1059601112456289
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Schaubroeck J, 2011, J APPL PSYCHOL, V96, P863, DOI 10.1037/a0022625
   Schein E.H., 1965, PERSONAL ORG CHANGE
   Thorgren S, 2019, RES TECHNOL MANAGE, V62, P31, DOI 10.1080/08956308.2019.1563436
   Tynan R, 2005, J APPL SOC PSYCHOL, V35, P223, DOI 10.1111/j.1559-1816.2005.tb02119.x
   Wooldridge J.M., 2016, Introductory Econometrics: A Modern Approach
   Zhang YX, 2010, INT J INFORM MANAGE, V30, P425, DOI 10.1016/j.ijinfomgt.2010.02.003
NR 45
TC 2
Z9 2
U1 8
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107267
DI 10.1016/j.infsof.2023.107267
EA JUN 2023
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA K2GL1
UT WOS:001014675000001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Yousefifeshki, F
   Li, H
   Khomh, F
AF Yousefifeshki, Fatemeh
   Li, Heng
   Khomh, Foutse
TI Studying the challenges of developing hardware description language
   programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Hardware description languages; Stack overflow; Stack exchange;
   Qualitative analysis; Topic modeling
ID STACK; ARCHITECTURE; DESIGN; TRENDS; SCALE; HML
AB Context: Developing domain specific architectures (e.g., Google's TPU) typically requires writing programs in Hardware Description Languages (HDLs). Compared to traditional general-purpose programming languages (GPPLs) (e.g., C++, Java, Python), developing programs in HDLs (e.g., VHDL or Verilog) lacks support from our community. Such an imbalance in the support for GPPLs and HDLs will impede future advances in computer systems. Objective: We believe that our software engineering community should pay more attention to supporting HDL development. Thus, we make an initial attempt in this direction to study the challenges of developing programs in HDLs by mining HDL-related questions in technical forums.Method: We identified 16,700 HDL-related questions in two Stack Exchange forums: Stack Overflow (SO) and Electrical Engineering (EE) Stack Exchange. Through qualitative analysis, topic modeling, and quantitative analysis, we examined the types of questions, the questions' topics, and identified the most challenging topics for developers.Results: We identified ten types of HDL-related questions, including seven types identified in prior work and three new types more relevant to HDLs (e.g., questions related to code explanation and tool search). We also observed that most of the challenges facing HDL developers are similar to those facing GPPL developers, while some challenges (e.g., lower-level operations such as bit and register operations) are more specific to HDLs. Finally, we observed that HDL-related questions are less likely and take a longer time to get accepted answers than GPPL-related questions, and identified the most challenging topics of questions (e.g., file/memory I/O). Conclusion: Our work identified opportunities for different stakeholders in the software and hardware communities to improve the practices of developing HDL programs: software engineering researchers may leverage their expertise to help in advancing HDL languages and methodology, such as to improving the language abstractions for low-level operations such as bit/register operations or memory/file I/Os; Stack Exchange and its moderators may leverage the community size and expertise in both the SO and EE forums to collectively recommend experts to answer questions related to HDLs; HDL language and library developers may provide more actionable error messages, better documentation and logging support to help HDL developers address their encountered issues; tool developers are encouraged to provide advanced IDEs and testing frameworks to help HDL developers improve their development and testing productivity.
C1 [Yousefifeshki, Fatemeh; Li, Heng; Khomh, Foutse] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Li, H (corresponding author), Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
EM fatemeh.yousefifeshki@polymtl.ca; heng.li@polymtl.ca;
   foutse.khomh@polymtl.ca
OI Li, Heng/0000-0001-5441-6763
CR Addisie A, 2020, IEEE T COMPUT, V69, P1233, DOI 10.1109/TC.2020.3004169
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Alshangiti Moayad, 2019, INT SYMP EMP SOFTWAR, P117, DOI DOI 10.1109/esem.2019.8870187
   Ankit A, 2020, IEEE T COMPUT, V69, P1128, DOI 10.1109/TC.2020.2998456
   [Anonymous], 1994, Synthesis and optimization of digital circuits
   [Anonymous], 2013, P 40 ANN INT S COMPU, DOI DOI 10.1145/2485922.2485925
   Arda SE, 2020, IEEE T COMPUT, V69, P1248, DOI 10.1109/TC.2020.2986963
   Ashenden Peter J., 2010, The Designer's Guide to VHDL
   Bachrach J, 2012, DES AUT CON, P1212
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bailey S., 2003, Comparison of VHDL, Verilog and SystemVerilog, P29
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barbosa Luis S., 2020, P IEEE ACM 42 INT C, P427, DOI DOI 10.1145/3387940.3392184
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S., 2017, Analyzing the relationships between android api classes and their references on stack overflow
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Bjesse P, 1999, ACM SIGPLAN NOTICES, V34, P174, DOI 10.1145/291251.289440
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Capra M, 2020, IEEE ACCESS, V8, P225134, DOI 10.1109/ACCESS.2020.3039858
   circt.llvm, 2021, CIRC IR COMP TOOLS
   Dally WJ, 2020, COMMUN ACM, V63, P48, DOI 10.1145/3361682
   Daly Ross, 2018, 2 WORKSH OP SOURC ED
   data.stackexchange, 2022, STACK EXCH DAT EXPL
   Decaluwe J., 2004, Linux journal, P84
   Elliott C, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3110271
   Endoh Y, 2011, AOSD 2011 PROCEEDINGS AND COMPANION MATERIAL, P19
   Galloway D., 1995, Proceedings IEEE Symposium on FPGAs for Custom Computing Machines (Cat. No.95TB8077), P136, DOI 10.1109/FPGA.1995.477419
   github, 2021, QUSOC LOW LEV RTL DE
   Golson Steve, 2016, Language wars in the 21st century: verilog versus vhdl-revisited
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Han S, 2016, CONF PROC INT SYMP C, P243, DOI 10.1109/ISCA.2016.30
   Harris D., 2010, DIGITAL DESIGN COMPU
   HDL, 2021, US
   Heldmann T, 2021, LECT NOTES COMPUT SC, V12727, P99, DOI 10.1007/978-3-030-78375-4_5
   Hennessy John., A new golden age for computer architecture: Domain-specific hardware/software co-design, enhanced security, open instruction sets, and agile chip development
   Hennessy JL, 2019, COMMUN ACM, V62, P48, DOI 10.1145/3282307
   Hoskote YV, 1997, IEEE T COMPUT AID D, V16, P217, DOI 10.1109/43.594828
   Izraelevitz A, 2017, ICCAD-IEEE ACM INT, P209, DOI 10.1109/ICCAD.2017.8203780
   Jones K.Sparck., 1997, READINGS INFORM RETR
   Jouppi NP, 2018, COMMUN ACM, V61, P50, DOI 10.1145/3154484
   Krishnakumar A., 2022, ACM T EMBED COMPUT S
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li YB, 2000, IEEE T VLSI SYST, V8, P1, DOI 10.1109/92.820756
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Magma, 2021, US
   McCallum A.K., 2002, MALLET MACHINE LEARN
   meta.stackexchange, 2021, AC PAP US STACK EXCH
   OLEARY J, 1993, IFIP TRANS A, V32, P327
   Openja M, 2020, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME46990.2020.00020
   Rebouças M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P634, DOI 10.1109/SANER.2016.66
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Snyder W., 2004, P N AM SYSTEMC US GR, P1
   Sutherland S., 2006, SystemVerilog for Design Second Edition: A Guide to Using SystemVerilog for Hardware Design and Modeling
   Tan CM, 2002, INFORM PROCESS MANAG, V38, P529, DOI 10.1016/S0306-4573(01)00045-0
   Tan TS, 2014, J ELECTRON TEST, V30, P255, DOI 10.1007/s10836-014-5449-5
   Thomas Donald, 2008, VERILOG HARDWARE DES
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Truong Lenny, 2019, 3 SUMM ADV PROGR LAN
   Turakhia Y, 2018, ACM SIGPLAN NOTICES, V53, P199, DOI [10.1145/3296957.3173193, 10.1145/3173162.3173193]
   Turan F, 2020, IEEE T COMPUT, V69, P1185, DOI 10.1109/TC.2020.2988765
   Uddin G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10021-5
   Venkatesh PK, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P131, DOI 10.1109/ICWS.2016.25
   Villar J. I., 2011, Proceedings of the 2011 VII Southern Conference on Programmable Logic (SPL), P117, DOI 10.1109/SPL.2011.5782635
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Wang Sheng-Hong, 2019, P 2 WORKSH OP SOURC
   Wang TQ, 2020, IEEE T COMPUT, V69, P1143, DOI 10.1109/TC.2020.3000118
   West BL, 2020, IEEE T COMPUT, V69, P1209, DOI 10.1109/TC.2020.2990061
   Wills LW, 2020, IEEE T COMPUT, V69, P1096, DOI 10.1109/TC.2020.3002674
   Wolf C., 2016, Yosys open synthesis suite
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
   Zou J, 2017, INFORM SOFTWARE TECH, V84, P19, DOI 10.1016/j.infsof.2016.12.003
   Zou J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P446, DOI 10.1109/MSR.2015.60
NR 78
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2023
VL 159
AR 107196
DI 10.1016/j.infsof.2023.107196
EA MAR 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H1HY1
UT WOS:000993552200001
DA 2024-07-18
ER

PT J
AU Ceh-Varela, E
   Canto-Bonilla, C
   Duni, D
AF Ceh-Varela, Edgar
   Canto-Bonilla, Carlos
   Duni, Dhimitraq
TI Application of Project-Based Learning to a Software Engineering course
   in a hybrid class environment
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Project-Based Leaning; Software Engineering; Hybrid environment
ID PBL; ENGAGEMENT
AB Context: This paper centers on Project-Based Learning (PBL). In PBL, the student is now the center of the whole teaching and learning process, while the instructor's role is now of a facilitator presenting to the students the resources and guidance to solve the given problem. Most existing studies, apply PBL to courses having in-person students.<br />Objective: The paper presents the application of a PBL approach to a Software Engineering (SE) course having a hybrid class environment (i.e., online and in-person students). The main objective of this paper is to analyze the students' attitudes after experiencing working on a real-life problem as part of our PBL approach in a hybrid class environment.Methods: We propose a relaxed plan-based software development model as basis for guiding the project execution. At the end of the course, we applied a survey to the students to evaluate their experience in the course.Results: We obtained the answers of 70.8% of students taking a SE course. With these answers, we could measure the students' perception of using PBL in a SE course and how this strategy helped them to gain soft and hard skills in software development. We divided the answers for their analysis into different categories: soft skills, technical skills, learning experience, and other results. Moreover, we compare the performance of the teams and students based on their type (i.e., online and in-person).Conclusion: We found qualitative differences in the experience of online and in-person students. Based on our experience with this study, we provide guidelines for applying PBL in a hybrid environment. Overall, our study has demonstrated a positive contribution in supporting teaching SE using a PBL in a hybrid class environment.
C1 [Ceh-Varela, Edgar; Duni, Dhimitraq] Eastern New Mexico Univ, Dept Math Sci, Portales, NM 88130 USA.
   [Canto-Bonilla, Carlos] Univ Tecnol Metropolitana, Dept Informat Technol, Merida, Yucatan, Mexico.
RP Ceh-Varela, E (corresponding author), Eastern New Mexico Univ, Dept Math Sci, Portales, NM 88130 USA.
EM eduardo.ceh@enmu.edu; carlos.canto@utmetropolitana.edu.mx;
   dhimitraq.duni@enmu.edu
OI Ceh Varela, Edgar/0000-0001-6277-2741
CR Almeida C, 2022, 2022 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING EDUCATION FOR THE NEXT GENERATION (SEENG 2022), P28, DOI 10.1145/3528231.3536382
   Bédard D, 2012, INTERDISCIP J PROBL-, V6, P7, DOI 10.7771/1541-5015.1355
   BENINGTON HD, 1983, ANN HIST COMPUT, V5, P350
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Capraro R.M., 2008, Project-based learning: An integrated science, technology, engineering, and technology (STEM) approach
   Chau T, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P302
   Chen HR, 2021, INT J EMERG TECHNOL, V16, P248, DOI 10.3991/ijet.v16i05.21085
   Chen JB, 2021, EUR J ENG EDUC, V46, P90, DOI 10.1080/03043797.2020.1718615
   Claypool K., 2005, SIGCSE Bulletin, V37, P123, DOI 10.1145/1151954.1067482
   DESMARCHAIS JE, 1992, MED EDUC, V26, P190, DOI 10.1111/j.1365-2923.1992.tb00153.x
   dos Santos SC, 2009, CONF SOFTW ENG EDUC, P182, DOI 10.1109/CSEET.2009.39
   Edy Duwi Leksono, 2020, 2020 4th International Conference on Vocational Education and Training (ICOVET), P378, DOI 10.1109/ICOVET50258.2020.9230137
   Elahi B., 2019, 2019 ASEE ANN C EXP
   Ende Markus, 2013, 2013 Second International Conference on E-Learning and E-Technologies in Education (ICEEE 2013), P229, DOI 10.1109/ICeLeTE.2013.6644379
   Faba L, 2020, COMPUT APPL ENG EDUC, V28, P1311, DOI 10.1002/cae.22303
   Fioravanti ML, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P806, DOI 10.1145/3159450.3159599
   Guo PY, 2020, INT J EDUC RES, V102, DOI 10.1016/j.ijer.2020.101586
   Hayashi V., 2021, 13 INT S PROJECT APP, P247
   Hosseinzadeh N, 2012, IEEE T EDUC, V55, P495, DOI 10.1109/TE.2012.2191588
   Humphrey W.S., 1988, P 4 INT SOFTW PROC W, P82
   Jain Ritu, 2018, ACM SIGSOFT Software Engineering Notes, V43, DOI 10.1145/3178315.3178329
   Jamilurahman F., 2021, INT J ED MANAGEMENT, V11, P46, DOI [10.5815/ijeme.2021, DOI 10.5815/IJEME.2021]
   Judge MK, 2011, PROCD SOC BEHV, V15, P1546, DOI 10.1016/j.sbspro.2011.03.328
   Kwiatkowski C., 2019, Sustainable Leadership for Entrepreneurs and Academics, P121, DOI [10.1007/978-3-030-15495-0_13, DOI 10.1007/978-3-030-15495-0_13]
   Lanthony A, 2018, IEEE GLOB ENG EDUC C, P263, DOI 10.1109/EDUCON.2018.8363238
   Leite V, 2017, PROC IEEE INT SYMP, P1555, DOI 10.1109/ISIE.2017.8001477
   Liu WC, 2009, LEARN INDIVID DIFFER, V19, P139, DOI 10.1016/j.lindif.2008.07.002
   Marutschke DM, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P30, DOI 10.1145/3196369.3196390
   Matinnejad R., 2011, 2011 9th International Conference on Software Engineering Research, Management and Applications, P197, DOI 10.1109/SERA.2011.17
   Matkovic P., 2010, Journal of Industrial Engineering and Management, V1, P163
   Matturro G, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P101, DOI 10.1109/CHASE.2015.30
   Means B., 2010, EVALUATION EVIDENCE, DOI DOI 10.30935/CEDTECH/8708
   Montero J., 2006, IEEE T EDUC, V49
   Morais P, 2021, IEEE REV IBEROAM TEC, V16, P21, DOI 10.1109/RITA.2021.3052677
   Najid N., 2018, INT J ACAD RES BUS S, V7, P39
   Novalinda R., 2020, Int. J. Multi Sci, V1, P12
   Olivares-Ceja JM, 2017, EDULEARN PROC, P6263
   Panicker RC, 2021, 2021 IEEE FRONTIERS IN EDUCATION CONFERENCE (FIE 2021), DOI 10.1109/FIE49875.2021.9637053
   Piccinini N, 2006, EDUC TECHNOL SOC, V9, P54
   Pimentel J.J.A., 2018, PROGRAMACION MAT SOF
   Porter SR, 2005, RES HIGH EDUC, V46, P127, DOI 10.1007/s11162-004-1597-2
   Rai P., 2014, International Journal of Computer Science Information Technologies, V5, P1112
   Reeves T.C., 2002, AUTHENTIC ACTIVITIES
   Reynolds M, 2000, STUD HIGH EDUC, V25, P267, DOI 10.1080/03075070050193406
   Richardson I, 2011, 2011 24TH IEEE-CS CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING (CSEET), P91, DOI 10.1109/CSEET.2011.5876161
   Richardson I, 2009, CONF SOFTW ENG EDUC, P174, DOI 10.1109/CSEET.2009.34
   Rohm AJ, 2021, J MARKET EDUC, V43, P204, DOI 10.1177/02734753211001409
   Saad A., 2022, J. Contemp. Issues Thought, V12, P65
   Sanchez P., 2012, JORN ENS INF 18 2012
   Souza M, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P537, DOI 10.1145/3350768.3352457
   Souza Mauricio, 2019, ANAIS 27 WORKSHOP ED, P71
   Ya Zhou, 2013, 2013 IEEE Frontiers in Education Conference (FIE), P1510, DOI 10.1109/FIE.2013.6685088
   Yadav Ravi Shanker., 2012, International Journal of Scientific Engineering Research, V3, P1
   Zainal D.A. P., 2020, International Journal on Advanced Science, Engineering and Information Technology, V10, P555, DOI DOI 10.18517/IJASEIT.10.2.10191
   Zlotnik A., 2007, C ICL2007 SEP 26 28, P6
NR 55
TC 1
Z9 1
U1 3
U2 17
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107189
DI 10.1016/j.infsof.2023.107189
EA MAR 2023
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A4NV0
UT WOS:000954919200001
DA 2024-07-18
ER

PT J
AU Ferreira, FHC
   Nakagawa, EY
   dos Santos, RP
AF Ferreira, Francisco Henrique Cerdeira
   Nakagawa, Elisa Yumi
   dos Santos, Rodrigo Pereira
TI Towards an understanding of reliability of software-intensive
   systems-of-systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE System -of -systems; Reliability; Conceptual model; Empirical study; SoS
ID MODEL; PREDICTION; RESILIENCE; EVOLUTION
AB Context: Large-scale software-intensive Systems-of-Systems (SoS) have become present in several critical domains and have sometimes depended on diverse trending technologies, such as cloud computing and machine learning. At the same time, the SoS dynamic architecture makes it difficult to assure SoS reliability leading to diverse studies with specific solutions, while the need for a shared view of what precisely SoS reliability refers to still exists. Objective: The main contribution of this article is to go towards an understanding of SoS reliability. We present a conceptual model whose concepts as well as their definitions and relationships were defined by systematically examining the literature of the field. Methods: We surveyed 36 practitioners and researchers regarding ambiguity, explanatory power, parsimony, generality, and utility of our model. Next, we adjusted our model according to their contribution.Results: We reach a conceptual model containing 29 concepts and their relationships that help to comprehend SoS reliability. In addition, we provided a glossary with a definition of each concept of our conceptual model. We also proposed a SoS reliability definition grounded on the literature.Conclusions: By organizing the knowledge of SoS reliability, this conceptual model makes it possible to expand the body of knowledge in the area and opens several opportunities for further investigations; in particular, this model serves as a basis for novel solutions aiming to assure SoS reliability.
C1 [Ferreira, Francisco Henrique Cerdeira; dos Santos, Rodrigo Pereira] Fed Univ State Rio de Janeiro UNIRIO, Rio De Janeiro, Brazil.
   [Nakagawa, Elisa Yumi] Univ Sao Paulo, Sao Carlos, Brazil.
C3 Universidade Federal do Estado do Rio de Janeiro; Universidade de Sao
   Paulo
RP Ferreira, FHC (corresponding author), Fed Univ State Rio de Janeiro UNIRIO, Rio De Janeiro, Brazil.
EM francisco.ferreira@uniriotec.br
RI Santos, Rodrigo Pereira dos/AAA-5620-2021
OI Santos, Rodrigo Pereira dos/0000-0003-4749-2551; Cerdeira Ferreira,
   Francisco Henrique/0000-0003-1745-1070
FU UNIRIO, Brazil; FAPERJ, Brazil [211.583/2019]; CAPES, Brazil; CNPq,
   Brazil [313245/2021-5]; FAPESP, Brazil [2015/24144-7, 2017/06195-9];
   Federal University of Juiz de Fora (UFJF)
FX This study was funded by UNIRIO, Brazil, FAPERJ, Brazil (211.583/2019) ,
   CAPES, Brazil, CNPq, Brazil (313245/2021-5) , and FAPESP, Brazil
   (2015/24144-7 and 2017/06195-9) . The first author also thanks to the
   Federal University of Juiz de Fora (UFJF) .
CR Ackermann Christopher, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P175, DOI 10.1109/ISSRE.2009.27
   Agbo IO, 2019, INT TEST CONF P, DOI 10.1109/itc44170.2019.9000175
   Andrews Z., 2013, P 2013 IEEE 11 INT S, P1, DOI [10.1109/ISADS.2013.6513445, DOI 10.1109/ISADS.2013.6513445]
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Axelsson J, 2018, ANN IEEE SYST CONF, P300
   Axelsson J, 2019, 2019 14TH ANNUAL CONFERENCE SYSTEM OF SYSTEMS ENGINEERING (SOSE), P31, DOI [10.1109/sysose.2019.8753846, 10.1109/SYSOSE.2019.8753846]
   Barry EJ, 2003, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2003.1201192
   Bass Len, 2012, SEI S SOFTW
   Berander P., 2005, SOFTWARE QUALITY ATT
   Bicaku Ani, 2022, IEEE Systems Journal, V16, P2195, DOI 10.1109/JSYST.2021.3064196
   Blischke W.R., 2000, WILEY SER PROB STAT
   Boardman J, 2006, PROCEEDINGS OF THE 2006 IEEE/SMC INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING, P118
   Bourget Edwin, 2020, CPSS '20: Proceedings of the 6th ACM on Cyber-Physical System Security Workshop, P30, DOI 10.1145/3384941.3409590
   Broy M, 2015, COMPUTER, V48, P96, DOI 10.1109/MC.2015.139
   Cadavid H, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106202
   Cavalcante E., 2016, P 2 INT WORKSHOP SMA, P1, DOI [10.1145/3009912.3009918, DOI 10.1145/3009912.3009918]
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Chazette L, 2021, INT REQUIR ENG CONF, P197, DOI 10.1109/RE51729.2021.00025
   Chen QB, 2017, DESTECH TRANS COMP, V190, P446
   Cook JL, 2008, P REL MAINT S, P318
   Cook JL, 2009, P REL MAINT S, P13
   Corbin J., 2015, BASICS QUALITATIVE R
   Dagli C., 2009, INCOSE INT S, V19, P578, DOI [10.1002/j.2334-5837.2009.tb00969.x, DOI 10.1002/J.2334-5837.2009.TB00969.X]
   Dahmann J., 2008, C SYST ENG RES CSER
   Dahmann J., 2008, CrossTalk, V21, P7
   Daughtrey T, 2015, P REL MAINT S
   Delécolle A, 2020, 2020 IEEE 15TH INTERNATIONAL CONFERENCE OF SYSTEM OF SYSTEMS ENGINEERING (SOSE 2020), P93, DOI [10.1109/sose50414.2020.9130468, 10.1109/SoSE50414.2020.9130468]
   Dersin P., 2014, SYSTEMS OF SYSTEMS
   DiMario MJ, 2009, IEEE SYST J, V3, P360, DOI 10.1109/JSYST.2009.2029661
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Ed-daoui I, 2018, INT J CRIT INFRASTRU, V14, P80, DOI 10.1504/IJCIS.2018.10011743
   Fernandes J, 2019, 2019 IEEE 20TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION FOR DATA SCIENCE (IRI 2019), P364, DOI 10.1109/IRI.2019.00063
   Ferreira FH, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P54, DOI 10.1109/SEAA53835.2021.00016
   Filippini R, 2014, RELIAB ENG SYST SAFE, V125, P82, DOI 10.1016/j.ress.2013.09.010
   Garro A, 2015, IEEE SYST J, V9, P232, DOI 10.1109/JSYST.2014.2321617
   Gonçcalves MB, 2014, IEEE SYS MAN CYBERN, P1605, DOI 10.1109/SMC.2014.6974145
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Neto VVG, 2018, PROCEEDINGS OF THE 14TH BRAZILIAN SYMPOSIUM ON INFORMATION SYSTEMS (SBSI2018), P160, DOI 10.1145/3229345.3229369
   Guariniello C, 2013, PROCEDIA COMPUT SCI, V16, P265, DOI 10.1016/j.procs.2013.01.028
   Han SY, 2012, IEEE SYS MAN CYBERN, P1251, DOI 10.1109/ICSMC.2012.6377904
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   IEEE, 2019, SYST SOFTW ENG SYST
   Imamura M., 2021, BRAZ S INF SYST SBSI, P1, DOI [10.1145/3466933.3466954, DOI 10.1145/3466933.3466954]
   Incki K, 2018, PROCEDIA COMPUT SCI, V134, P75, DOI 10.1016/j.procs.2018.07.146
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Jackson S., 2009, ARCHITECTING RESILIE, Vfirst, P297
   Keating C., 2018, ENG EMERGENCE, P32
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Koubeissi A, 2015, 2015 10TH SYSTEM OF SYSTEMS ENGINEERING CONFERENCE (SOSE), P358, DOI 10.1109/SYSOSE.2015.7151934
   Lewis GA, 2009, 2009 IEEE INTERNATIONAL SYSTEMS CONFERENCE, PROCEEDINGS, P247, DOI 10.1109/SYSTEMS.2009.4815806
   Ligaarden O., 2010, EUROPEAN SAFETY RELI, P347
   Lo D, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P557
   Lyu M., 1996, Handbook of Software Reliability Engineering
   Lyu MR, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P153, DOI 10.1109/FOSE.2007.24
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Mekdeci B., 2011, INCOSE INT S, V21, P3310, DOI [10.1002/j.2334-5837.2011.tb01313.x, DOI 10.1002/J.2334-5837.2011.TB01313.X]
   Mokhtarpour B, 2017, IEEE SYST J, V11, P1928, DOI 10.1109/JSYST.2014.2352332
   Mokhtarpour Behrokh, 2015, 2015 ANN REL MAINT S, P1, DOI DOI 10.1109/RAMS.2015.7105101
   Ncube C, 2018, INT REQUIR ENG CONF, P112, DOI 10.1109/RE.2018.00021
   Nielsen CB, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2794381
   Olivero MA, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106874
   Ong AD, 2000, J APPL SOC PSYCHOL, V30, P1691, DOI 10.1111/j.1559-1816.2000.tb02462.x
   OSMUNDSON JS, 2012, INCOSE INT S, V22, P787
   Pecht M., 2009, PRODUCT RELIABILITY, Vsecond, P480
   Petratos P, 2019, PROCEEDINGS OF 2019 3RD INTERNATIONAL CONFERENCE ON CLOUD AND BIG DATA COMPUTING (ICCBDC 2019), P100, DOI 10.1145/3358505.3358513
   Pham H., 2006, SYSTEM SOFTWARE RELI, DOI 10.1007/1-84628-295-0
   Preiss O, 2001, EUROMICRO CONF PROC, P114, DOI 10.1109/EURMIC.2001.952445
   Randell B., 2001, DEP COMPUTING SCI TE, V739, P1
   Richards M. G., 2009, THESIS MIT
   Rinaldi SA, 2001, IEEE CONTR SYST MAG, V21, P11, DOI 10.1109/37.969131
   Sahu Kavita, 2019, Data Management, Analytics and Innovation. Proceedings of ICDMAI 2018. Advances in Intelligent Systems and Computing (AISC 808), P221, DOI 10.1007/978-981-13-1402-5_17
   Sanduka I, 2015, IEEE INTL CONF IND I, P1531, DOI 10.1109/INDIN.2015.7281961
   Sarjoughian H., 2002, NIST SPEC PUBL, P429
   Seo D, 2016, 2016 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS), P12, DOI [10.1109/SESoS.2016.011, 10.1145/2897829.2897833]
   Silva E., 2014, P 2014 EUR C SOFTW A, DOI [10.1145/2642803.2642829, DOI 10.1145/2642803.2642829]
   Silva E, 2015, 2015 10th System of Systems Engineering Conference (SoSE), P346, DOI 10.1109/SYSOSE.2015.7151951
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Stratton W., 2009, AEROSPACE C AEROCONF, P1, DOI [10.1109/AERO.2009.4839620, DOI 10.1109/AERO.2009.4839620]
   Summers M. P., 2017, INT SYSTEMS C SYSCON, P759
   Tamburello RN, 2015, P I MECH ENG O-J RIS, V229, P46, DOI 10.1177/1748006X14549394
   Tao Yue, 2021, Leveraging Applications of Formal Methods, Verification and Validation: Tools and Trends: 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020, Proceedings. Lecture Notes in Computer Science, Theoretical Computer Science and General Issues (12479), P54, DOI 10.1007/978-3-030-83723-5_5
   Tran HT, 2015, THESIS GEORGIA I TEC
   Tsilipanos K, 2013, IEEE SYST J, V7, P114, DOI 10.1109/JSYST.2012.2207274
   Uday P, 2015, SYSTEMS ENG, V18, P491, DOI 10.1002/sys.21325
   Uday P, 2013, PROCEDIA COMPUT SCI, V16, P532, DOI 10.1016/j.procs.2013.01.056
   Van Bossuyt DL, 2019, SYSTEMS ENG, V22, P519, DOI 10.1002/sys.21520
   Vierhauser M, 2015, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2015.7320412
   Wang HB, 2019, IEEE T SERV COMPUT, V12, P398, DOI 10.1109/TSC.2016.2633264
   Wang HB, 2019, J SYST SOFTWARE, V151, P180, DOI 10.1016/j.jss.2019.02.023
   Wang HB, 2018, J PARALLEL DISTR COM, V114, P70, DOI 10.1016/j.jpdc.2017.12.006
   Wang HB, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P81, DOI 10.1109/ICWS.2017.19
   Wang HB, 2017, IEEE T SOFTWARE ENG, V43, P556, DOI 10.1109/TSE.2016.2615615
   Wang HB, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P582, DOI 10.1109/ICWS.2014.87
   Wang L, 2013, LECT NOTES COMPUT SC, V8274, P421, DOI 10.1007/978-3-642-45005-1_30
   Wen TJ, 2014, CHIN CONT DECIS CONF, P2262, DOI 10.1109/CCDC.2014.6852546
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Yong Mao Huang, 2015, 2015 IEEE MTT-S International Microwave Symposium (IMS2015), P1, DOI 10.1109/MWSYM.2015.7167111
   Zhu M., 2022, OPTIMIZATION MODELS, P1, DOI DOI 10.1007/978-3-030-78919-0_1
NR 101
TC 4
Z9 4
U1 2
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2023
VL 158
AR 107186
DI 10.1016/j.infsof.2023.107186
EA FEB 2023
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A1MV2
UT WOS:000952848200001
DA 2024-07-18
ER

PT J
AU Hu, J
   Xie, H
   Lei, Y
   Yu, K
AF Hu, Jian
   Xie, Huan
   Lei, Yan
   Yu, Ke
TI A light-weight data augmentation method for fault localization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Imbalanced data; Fault localization; Feature selection; Data
   augmentation
ID EFFICIENT; CLONING
AB Context: Fault localization (FL) is essentially a search over the space of program statements to find suspicious entities that might have caused a program failure. However, the input data is high-dimensional and extremely imbalanced since the real-world programs are large in size and the number of failing test cases is much less than that of passing test cases, which limits the effectiveness and efficiency of existing FL methods. The state-of-the-art FL method (Aeneas) solves the imbalanced and high-dimensional problem but in a complex and time-consuming process.Objective: Due to the limited effectiveness of original FL methods and the low efficiency of Aeneas, this paper proposes Lamont, a Light-weight data augmentation method to improve the effectiveness of original FL methods and the efficiency of Aeneas.Methods: Lamont uses revised linear discriminant analysis (LDA) to reduce the dimensionality of the original coverage matrix and leverage synthetic minority over-sampling (SMOTE) to generate the synthesized failing tests. The balanced coverage matrix with reduced dimensionality is fed into FL methods to obtain the ranked suspicious list of statements. To evaluate the efficiency and effectiveness, we compare Lamont with six representative FL methods and Aeneas on 458 versions of 10 real-life programs.Results: It can be observed that Lamont outperforms in most cases for Top-K metric and reduces the number of statements that need to be checked from 17.45% to 79.81% compared with the original six FL methods. Furthermore, Lamont saves the time over the state-of-the-art data augmentation method Aeneas from 55.33% to 68.39% with comparable effectiveness.Conclusion: This work conducts a large-scale experimental study to investigate the effectiveness and efficiency of Lamont. Two conclusions can be obtained based on the experimental results. First, it shows that Lamont is more effective than the original FL methods. Second, it shows Lamont is more efficient than Aeneas with similar effectiveness in six FL methods.
C1 [Hu, Jian; Xie, Huan; Lei, Yan; Yu, Ke] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
C3 Chongqing University
RP Hu, J (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM jianhu@cqu.edu.cn; huanxie@cqu.edu.cn; yanlei@cqu.edu.cn;
   keyu@cqu.edu.cn
RI xie, huan/HNP-1126-2023
OI xie, huan/0000-0002-5265-0051
FU National Key Research and Development Project of China [2020YFB1711900];
   National Natural Science Foundation of China [61902421]
FX Acknowledgments This work is partially supported by the National Key
   Research and Development Project of China (No. 2020YFB1711900) and the
   National Natural Science Foundation of China (No. 61902421) .
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cheng Gong, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P470, DOI 10.1109/COMPSACW.2012.89
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Duda R., 1973, Pattern Classification and Scene Analysis
   Fengxi Song, 2010, Proceedings of the 2010 International Conference on System Science, Engineering Design and Manufacturing Informatization (ICSEM 2010), P27, DOI 10.1109/ICSEM.2010.14
   Fisher RA, 1936, ANN EUGENIC, V7, P179, DOI 10.1111/j.1469-1809.1936.tb02137.x
   FRIEDMAN JH, 1989, J AM STAT ASSOC, V84, P165, DOI 10.2307/2289860
   Gao YC, 2013, INT CONF QUAL SOFTW, P288, DOI 10.1109/QSIC.2013.23
   Gu JX, 2018, PATTERN RECOGN, V77, P354, DOI 10.1016/j.patcog.2017.10.013
   HASTIE T, 1995, ANN STAT, V23, P73, DOI 10.1214/aos/1176324456
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HONG ZQ, 1991, PATTERN RECOGN, V24, P317, DOI 10.1016/0031-3203(91)90074-F
   Jain, 2009, ENCY BIOMETRICS, P549, DOI DOI 10.1007/978-0-387-73003-5_585
   Japkowicz N, 2000, IC-AI'2000: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOL 1-III, P111
   Ji SW, 2008, IEEE T NEURAL NETWOR, V19, P1768, DOI 10.1109/TNN.2008.2002078
   Jones JA, 2004, PROC INT CONF SOFTW, P54, DOI 10.1109/ICSE.2004.1317420
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kanungo R.N., 1990, MANAGEMENT DEV COUNT, P1
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Lei Y, 2018, IET SOFTW, V12, P190, DOI 10.1049/iet-sen.2017.0026
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Lei Y, 2012, IEICE T INF SYST, VE95D, P2247, DOI 10.1587/transinf.E95.D.2247
   Li HF, 2006, IEEE T NEURAL NETWOR, V17, P157, DOI 10.1109/TNN.2005.860852
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   RAO CR, 1948, J ROY STAT SOC B, V10, P159
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Sohn K, 2015, ADV NEUR IN, V28
   Tse T.H., 2014, Comput. Rev., V55, P92
   Wang HF, 2020, IEEE ACCESS, V8, P124297, DOI 10.1109/ACCESS.2020.3004145
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Wright CS, 2011, LECT NOTES COMPUT SC, V6694, P198, DOI 10.1007/978-3-642-21323-6_25
   Wu ZH, 2019, INTERSPEECH, P1163, DOI 10.21437/Interspeech.2019-2248
   Xian YQ, 2019, PROC CVPR IEEE, P10267, DOI 10.1109/CVPR.2019.01052
   Xian YQ, 2018, PROC CVPR IEEE, P5542, DOI 10.1109/CVPR.2018.00581
   Xie H, 2022, PROC INT CONF SOFTW, P48, DOI 10.1145/3510003.3510136
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Zhang L, 2017, J SYST SOFTWARE, V129, P35, DOI 10.1016/j.jss.2017.04.017
   Zhang Z, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106486
   Zhang Z, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2312
   Zhang Z, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P445, DOI [10.1109/saner.2019.8668002, 10.1109/SANER.2019.8668002]
   Zhang Z, 2017, IEICE T INF SYST, VE100D, P3027, DOI 10.1587/transinf.2017EDL8143
   Zheng Wei, 2016, Mathematical Problems in Engineering, V2016, DOI DOI 10.1155/2016/1820454
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 57
TC 4
Z9 4
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107148
DI 10.1016/j.infsof.2023.107148
EA JAN 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8G9JX
UT WOS:000920658100001
DA 2024-07-18
ER

PT J
AU Vogel, T
   Carwehl, M
   Rodrigues, GN
   Grunske, L
AF Vogel, Thomas
   Carwehl, Marc
   Rodrigues, Genaina Nunes
   Grunske, Lars
TI A property specification pattern catalog for real-time system
   verification with UPPAAL
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Real-time systems; Property specification patterns; Observer automata
ID MODEL-CHECKING; REQUIREMENTS
AB Context: The goal of specification pattern catalogs for real-time requirements is to mask the complexity of specifying such requirements in a timed temporal logic for verification. For this purpose, they provide frontends to express and translate pattern-based natural language requirements to formulae in a suitable logic. However, the widely used real-time model checking tool UPPAAL only supports a restricted subset of those formulae that focus only on basic and non-nested reachability, safety, and liveness properties. This restriction renders many specification patterns inapplicable. As a workaround, timed observer automata need to be constructed manually to express sophisticated requirements envisioned by these patterns.Objective: In this work, we fill these gaps by providing a comprehensive specification pattern catalog for UPPAAL. The catalog supports qualitative and real-time requirements and covers all corresponding patterns of existing catalogs.Method: The catalog we propose is integrated with UPPAAL. It supports the specification of qualitative and real-time requirements using patterns and provides an automated generator that translates these requirements to observer automata and TCTL formulae. The resulting artifacts are used for verifying systems modeled as timed automata in UPPAAL. Thus, our catalog enables an automated end-to-end verification process for UPPAAL based on property specification patterns and observer automata.Results: We evaluate our catalog on three UPPAAL system models reported in the literature and mostly applied in an industrial setting. As a result, not only the reproducibility of the related UPPAAL models was possible, but also the validation of an automated, seamless, and accurate pattern-and observer-based verification process. Conclusion: The proposed property specification pattern catalog for UPPAAL enables practitioners to specify qualitative and real-time requirements in a pattern-based way - without directly using a temporal logic - and to verify them in UPPAAL while supporting a comprehensive set of patterns.
C1 [Vogel, Thomas; Carwehl, Marc; Grunske, Lars] Humboldt Univ, Inst Informat, Berlin, Germany.
   [Rodrigues, Genaina Nunes] Univ Brasilia, Dept Comp Sci, Brasilia, Brazil.
C3 Humboldt University of Berlin; Universidade de Brasilia
RP Vogel, T; Carwehl, M (corresponding author), Humboldt Univ, Inst Informat, Berlin, Germany.
EM thomas.vogel@informatik.hu-berlin.de; carwehl@informatik.hu-berlin.de
RI Grunske, Lars/AAH-4550-2019
OI Grunske, Lars/0000-0002-8747-3745; Nunes Rodrigues,
   Genaina/0000-0003-1661-8131; Carwehl, Marc/0000-0003-0631-365X
FU German Federal Ministry of Education and Research [01IS16027];
   Coordenacao de Aperfeioamento de Pessoal de Nivel Superior - Brasil
   (CAPES) [001]; Alexander von Humboldt Foundation, Germany
FX This research work is part of the Safe.Spec project funded by the German
   Federal Ministry of Education and Research (01IS16027) . This study was
   financed in part by the Coordenacao de Aperfeioamento de Pessoal de
   Nivel Superior - Brasil (CAPES) - Finance Code 001 and the Alexander von
   Humboldt Foundation, Germany.
CR Aceto L, 2003, THEOR COMPUT SCI, V300, P411, DOI 10.1016/S0304-3975(02)00334-1
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P414, DOI 10.1109/LICS.1990.113766
   Alur R., 1991, THESIS STANFORD U
   Andre Etienne, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P33, DOI 10.1007/978-3-642-32759-9_6
   Andre E., 2015, PNSE PETRI NETS, V1372, P25
   André É, 2013, IEEE INT C ENG COMP, P125, DOI 10.1109/ICECCS.2013.26
   Asteasuain F, 2017, REQUIR ENG, V22, P239, DOI 10.1007/s00766-015-0242-2
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Behrmann G., 2006, TUT UPPAAL 4 0
   Bellini P, 2009, J SYST SOFTWARE, V82, P183, DOI 10.1016/j.jss.2008.06.041
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Bozga M, 1998, LECT NOTES COMPUT SC, V1427, P546, DOI 10.1007/BFb0028779
   Braberman V, 2005, IEEE T SOFTWARE ENG, V31, P1028, DOI 10.1109/TSE.2005.131
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Filipovikj P, 2014, INT REQUIR ENG CONF, P444, DOI 10.1109/RE.2014.6912296
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Giannakopoulou D., 2020, NO ARC E DAATN77785
   Gruhn V, 2006, ELECTRON NOTES THEOR, V153, P117, DOI 10.1016/j.entcs.2005.10.035
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Havelund K, 1997, REAL TIM SYST SYMP P, P2, DOI 10.1109/REAL.1997.641264
   Havelund K., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P277
   Heinzemann C, 2015, COMPUT SCI-RES DEV, V30, P255, DOI 10.1007/s00450-014-0257-9
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Jensen HE, 2000, LECT NOTES COMPUT SC, V1926, P19
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lahtinen J, 2012, RELIAB ENG SYST SAFE, V105, P104, DOI 10.1016/j.ress.2012.03.021
   Langenfeld V., 2021, CEUR WORKSHOP PROC, V2857
   Li SH, 2010, FORM METHOD SYST DES, V37, P200, DOI 10.1007/s10703-010-0103-z
   Lindahl Magnus, 2001, International Journal on Software Tools for Technology Transfer, V3, P353, DOI [10.1007/s100090100048, DOI 10.1007/S100090100048]
   Nayak A, 2022, LECT NOTES COMPUT SC, V13216, P87, DOI 10.1007/978-3-030-98464-9_8
   Post A, 2012, LECT NOTES COMPUT SC, V7152, P225, DOI 10.1007/978-3-642-27705-4_18
   Post A, 2012, REQUIR ENG, V17, P19, DOI 10.1007/s00766-011-0145-9
   Rodrigues A, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P206, DOI 10.1145/3194133.3194147
   Sirjani M, 2021, LECT NOTES COMPUT SC, V12524, P67, DOI 10.1007/978-3-030-67220-1_6
   Sun J, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430537
   Tripakis S, 2009, ACM T COMPUT LOG, V10, DOI 10.1145/1507244.1507245
   UPPAAL, 2020, UPPAAL CAS STUD SIT
NR 41
TC 3
Z9 3
U1 2
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107100
DI 10.1016/j.infsof.2022.107100
EA NOV 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7D9DL
UT WOS:000900782600004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Krause-Glau, A
   Hansen, M
   Hasselbring, W
AF Krause-Glau, Alexander
   Hansen, Malte
   Hasselbring, Wilhelm
TI Collaborative program comprehension via software visualization in
   extended reality
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Program comprehension; Software visualization; City metaphor; Extended
   reality; Virtual reality; Augmented reality
ID EVOLUTION
AB Context: In software visualization research, various approaches strive to create immersive environments by employing extended reality devices. In that context, only few research has been conducted on the effect of collaborative, i.e., multi-user, extended reality environments.
   Objective: We present our journey toward a web-based approach to enable (location-independent) collaborative program comprehension using desktop, virtual reality, and mobile augmented reality devices.
   Method: We designed and implemented three mull-user modes in our web-based live trace visualization tool ExplorViz. Users can employ desktop, mobile, and virtual reality devices to collaboratively explore software visualizations. We conducted two preliminary user studies in which subjects evaluated our VR and AR modes after solving common program comprehension tasks.
   Results: The VR and AR environments can be suitable for collaborative work in the context of program comprehension. The analyzed feedback revealed problems regarding the usability, e.g., readability of visualized entities and performance issues. Nonetheless, our approach can be seen as a blueprint for other researchers to replicate or build upon these modes and results.
   Conclusions: ExplorViz's mull-user modes are our approach to enable heterogeneous collaborative software visualizations. The preliminary results indicate the need for more research regarding effectiveness, usability, and acceptance. Unlike related work, we approach the latter by introducing a mull-user augmented reality environment for software visualizations based on off-the-shelf mobile devices.
C1 [Krause-Glau, Alexander; Hansen, Malte; Hasselbring, Wilhelm] Univ Kiel, Dept Comp Sci, Christian Albrechts Pl 4, D-24211 Kiel, Germany.
C3 University of Kiel
RP Krause-Glau, A (corresponding author), Univ Kiel, Dept Comp Sci, Christian Albrechts Pl 4, D-24211 Kiel, Germany.
EM akr@informatik.uni-kiel.de
RI Hasselbring, Wilhelm/G-4794-2011
OI Hasselbring, Wilhelm/0000-0001-6625-4335
CR [Anonymous], 2013, 2013 1 IEEE WORKING
   Bandukda M., 2010, IN 2010 INT C INFORM, P1
   Baum D, 2020, EIGHTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2020), P100, DOI 10.1109/VISSOFT51673.2020.00015
   Beck K., 2000, EXTREME PROGRAMMING
   Bennett KH, 2002, ADV COMPUT, V56, P1, DOI 10.1016/S0065-2458(02)80003-1
   Bruck J., 2020, THESIS ARTIFACTS COL, DOI [10.5281/zenodo.3923715, DOI 10.5281/ZENODO.3923715]
   Bruck J, 2020, COLLABORATIVE PROGRA, DOI [10.5281/zenodo.3923715, DOI 10.5281/ZENODO.3923715]
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Dashuber V, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P55, DOI 10.1109/VISSOFT52517.2021.00015
   DeLine R, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P241, DOI 10.1109/VLHCC.2005.32
   Diehl S., 2007, SOFTWARE VISUALIZATI, DOI DOI 10.1007/978-3-540-46505-8
   Dominic J, 2020, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME46990.2020.00046
   Dominic J, 2020, INT C PROGRAM COMPRE, P391, DOI 10.1145/3387904.3389287
   Elliott A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P547, DOI 10.1109/ICSE.2015.191
   Fittkau F., 2015, EXPT DATA RES PERSPE, DOI [10.5281/zenodo.18378, DOI 10.5281/ZENODO.18378]
   Fittkau F, 2017, INFORM SOFTWARE TECH, V87, P259, DOI 10.1016/j.infsof.2016.07.004
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P125, DOI 10.1109/VISSOFT.2015.7332422
   Fittkau F, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P130, DOI 10.1109/VISSOFT.2015.7332423
   Fittkau F, 2015, INT C PROGRAM COMPRE, P266, DOI 10.1109/ICPC.2015.37
   Fittkau Florian, 2013, Proc. IEEE Working Conf. on Softw. Vis, P1
   Hansen M., 2021, THESIS ZENODO, DOI [10.5281/zenodo.5075126, DOI 10.5281/ZENODO.5075126]
   Hansen Malte, 2021, Collaborative Program Comprehension Based on Augmented Reality
   Hasselbring W, 2020, SOFTW IMPACTS, V6, DOI 10.1016/j.simpa.2020.100034
   Henrysson A, 2005, INTERNATIONAL SYMPOSIUM ON MIXED AND AUGMENTED REALITY, PROCEEDINGS, P80
   Jeffery C. L., 2019, P 27 INT C CENTRAL E
   Jung F, 2020, IVAPP: PROCEEDINGS OF THE 15TH INTERNATIONAL JOINT CONFERENCE ON COMPUTER VISION, IMAGING AND COMPUTER GRAPHICS THEORY AND APPLICATIONS, VOL 3: IVAPP, P149, DOI 10.5220/0008945201490156
   Koschke R, 2021, INT WORKS SOFTW CLON, P15, DOI 10.1109/IWSC53727.2021.00009
   Krause A, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P125, DOI 10.1109/VISSOFT52517.2021.00024
   Krause A, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P9, DOI 10.1109/ICSA-C50368.2020.00011
   Krause-Glau A, 2021, SUPPLEMENTARY DATA C, DOI [10.5281/zenodo.5790175, DOI 10.5281/ZENODO.5790175]
   Merino L., 2018, THESIS U BERN, DOI [10.7892/boris.118274, DOI 10.7892/BORIS.118274]
   Merino L, 2019, COMPANION OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P13, DOI 10.1145/3302541.3313104
   Merino L, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P54, DOI 10.1109/VISSOFT.2018.00014
   Moreno-Lumbreras D, 2021, 2021 WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2021), P12, DOI 10.1109/VISSOFT52517.2021.00011
   Novais RL, 2013, INFORM SOFTWARE TECH, V55, P1860, DOI 10.1016/j.infsof.2013.05.008
   Oberhauser R., 2017, International Journal of Virtual Reality, V17, P79, DOI DOI 10.20870/IJVR.2017.17.2.2894
   Pfahler F, 2020, EIGHTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2020), P22, DOI 10.1109/VISSOFT51673.2020.00007
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Schreiber A, 2019, AEROSP CONF PROC
   Siegmund J, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P13, DOI 10.1109/SANER.2016.35
   Souza R., 2012, P 2 BRAZ WORKSH SOFT
   van Deursen A, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/WCRE.2001.957822
   Wettel R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P92, DOI 10.1109/VISSOF.2007.4290706
   Winter V, 2019, PROC FRONT EDUC CONF, DOI 10.1109/fie43999.2019.9028612
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Yousoof Muhammed, 2008, WSEAS Transactions on Information Science and Applications, V5, P655
   Zirkelbach C., 2019, P 9 INT C ADV COLLAB, P1
NR 47
TC 3
Z9 3
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2022
VL 151
AR 107007
DI 10.1016/j.infsof.2022.107007
EA JUL 2022
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V5BX
UT WOS:000859493100006
OA hybrid
DA 2024-07-18
ER

PT J
AU Kantola, K
   Vanhanen, J
   Tolvanen, J
AF Kantola, Konsta
   Vanhanen, Jari
   Tolvanen, Jussi
TI Mind the product owner: An action research project into agile release
   planning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Canonical action research; Agile release planning; Product owner
ID LARGE-SCALE AGILE; INTERVIEW DATA; SCRUM
AB Context: This paper studies agile release planning in a software development organization with 13 development teams. It is important for software development organizations to be able to plan work in an efficient way that supports development work. Objective: The research aims to understand issues within agile release planning in the studied organization, and to make some improvement to the agile release planning practices there. Method: The study followed canonical action research methodology completing one cycle of diagnosis, action planning, intervention, evaluation, and learning. Qualitative methods were used during these phases to identify preliminary issues, to support the choice of action, and the evaluation of those actions. Results: The research identified issues of strain on the role of Product Owners. Sources of strain in the organization include changing priorities, the effort required to build up domain competence for new projects, and external pressure to push out new features. Additionally, there was difficulty for people participating in agile release planning to suggest improvements to the used practices due in part to the complexity and scale of planning practices in a multi-team development organization. The actions taken as part of the research provided ways for Product Owners to share knowledge between themselves, to better affect the working practices in the organization, and promoted a sense of team spirit between the Product Owners. Conclusion: Organizations should be mindful of their Product Owners when looking at their release planning practices. Problems for Product Owners are problems in planning for the whole organization. Having an active, collective, and structured channel for continuous improvement for Product Owners can help drive improvements to agile release planning.
C1 [Kantola, Konsta; Vanhanen, Jari] Aalto Univ, POB 11000, FI-00076 AALTO, Finland.
   [Kantola, Konsta; Tolvanen, Jussi] Accountor Finago Oy, Keilaniementie 1, Espoo 02150, Finland.
C3 Aalto University
RP Kantola, K (corresponding author), Accountor Finago Oy, Keilaniementie 1, Espoo 02150, Finland.
EM konsta.kantola@finago.com
RI Vanhanen, Jari/G-6041-2012
OI Vanhanen, Jari/0000-0002-0278-3665
CR Ameller D, 2016, LECT NOTES COMPUT SC, V10027, P48, DOI 10.1007/978-3-319-49094-6_4
   Bass JM, 2015, EMPIR SOFTW ENG, V20, P1525, DOI 10.1007/s10664-014-9322-z
   Berntzen M, 2019, LECT NOTES BUS INF P, V355, P121, DOI 10.1007/978-3-030-19034-7_8
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Davison RM, 2012, MIS QUART, V36, P763
   DeCuir-Gunby JT, 2011, FIELD METHOD, V23, P136, DOI 10.1177/1525822X10388468
   DiCicco-Bloom B, 2006, MED EDUC, V40, P314, DOI 10.1111/j.1365-2929.2006.02418.x
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fowler M., 2001, Software Development, V9, P28
   FREY JH, 1991, SOC SCI J, V28, P175, DOI 10.1016/0362-3319(91)90003-M
   Halcomb EJ, 2006, APPL NURS RES, V19, P38, DOI 10.1016/j.apnr.2005.06.001
   Heikkila V.T., 2015, AALTO U PUBLICATION
   Heikkilä V, 2010, P ANN HICSS, P4276
   Heikkilä VT, 2017, EMPIR SOFTW ENG, V22, P2892, DOI 10.1007/s10664-016-9491-z
   Heikkilä VT, 2015, INFORM SOFTWARE TECH, V57, P116, DOI 10.1016/j.infsof.2014.09.005
   Heikkilä VT, 2013, LECT NOTES BUS INF P, V149, P195
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Judy K.H., 2008, Hawaii International Conference on System Sciences, Proceedings of the 41st Annual, P462
   Kallio H, 2016, J ADV NURS, V72, P2954, DOI 10.1111/jan.13031
   Lucero A, 2015, LECT NOTES COMPUT SC, V9297, P231, DOI 10.1007/978-3-319-22668-2_19
   Midgley G, 2003, SYST PRACT ACT RES, V16, P77, DOI 10.1023/A:1022833409353
   Neal JW, 2015, AM J EVAL, V36, P118, DOI 10.1177/1098214014536601
   Paasivaara M., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P174, DOI 10.1109/ICGSE.2012.41
   Parameswaran UD, 2020, QUAL SOC WORK, V19, P630, DOI 10.1177/1473325019840394
   Roberts K, 2019, BMC MED RES METHODOL, V19, DOI 10.1186/s12874-019-0707-y
   Schwaber K., 2020, Scrum Guide
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Staron M., 2020, Action Research in Software Engineering
   Sverrisdottir HS, 2014, PROCD SOC BEHV, V119, P257, DOI 10.1016/j.sbspro.2014.03.030
   Wautelet Y, 2014, LECT NOTES COMPUT SC, V8484, P211, DOI 10.1007/978-3-319-07881-6_15
NR 32
TC 5
Z9 6
U1 36
U2 54
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106900
DI 10.1016/j.infsof.2022.106900
EA MAR 2022
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0V1OR
UT WOS:000788115100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dissanayake, N
   Jayatilaka, A
   Zahedi, M
   Babar, MA
AF Dissanayake, Nesara
   Jayatilaka, Asangi
   Zahedi, Mansooreh
   Babar, M. Ali
TI Software security patch management-A systematic literature review of
   challenges, approaches, tools and practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Security patch management; Vulnerability management; Systematic
   literature review
ID GUIDELINES
AB Context: Software security patch management purports to support the process of patching known software security vulnerabilities. Patching security vulnerabilities in large and complex systems is a hugely challenging process that involves multiple stakeholders making several interdependent technological and socio-technical decisions. Given the increasing recognition of the importance of software security patch management, it is important and timely to systematically review and synthesise the relevant literature on this topic. Objective: This paper aims at systematically reviewing the state of the art of software security patch management to identify the socio-technical challenges in this regard, reported solutions (i.e., approaches, tools, and practices), the rigour of the evaluation and the industrial relevance of the reported solutions, and to identify the gaps for future research. Method: We conducted a systematic literature review of 72 studies published from 2002 to March 2020, with extended coverage until September 2020 through forward snowballing. Results: We identify 14 socio-technical challenges in software security patch management, 18 solution approaches, tools and practices mapped onto the software security patch management process. We provide a mapping between the solutions and challenges to enable a reader to obtain a holistic overview of the gap areas. The findings also reveal that only 20.8% of the reported solutions have been rigorously evaluated in industrial settings. Conclusion: Our results reveal that 50% of the common challenges have not been directly addressed in the solutions and that most of them (38.9%) address the challenges in one phase of the process, namely vulnerability scanning, assessment and prioritisation. Based on the results that highlight the important concerns in software security patch management and the lack of solutions, we recommend a list of future research directions. This study also provides useful insights about different opportunities for practitioners to adopt new solutions and understand the variations of their practical utility.
C1 [Dissanayake, Nesara; Jayatilaka, Asangi; Babar, M. Ali] Univ Adelaide, Ctr Res Engn Software Technol, Adelaide, SA, Australia.
   [Zahedi, Mansooreh] Univ Melbourne, Melbourne, Vic, Australia.
C3 University of Adelaide; University of Melbourne
RP Dissanayake, N (corresponding author), Univ Adelaide, Ctr Res Engn Software Technol, Adelaide, SA, Australia.
EM nesara.madugodasdissanayakege@adelaide.edu.au;
   asangi.jayatilaka@adelaide.edu.au; mansooreh.zahedi@unimelb.edu.au;
   ali.babar@adelaide.edu.au
OI Zahedi, Mansooreh/0000-0001-6276-9956; Jayatilaka,
   Asangi/0000-0003-2051-030X; Dissanayake, Nesara/0000-0002-2873-137X; Ali
   Babar, Muhammad/0000-0001-9696-3626
CR Accenture Security, 2020, CYB THREATSC REP
   Ahmed BH, 2020, IET SOFTW, V14, P468, DOI 10.1049/iet-sen.2019.0201
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2014, P 18 INT C EV ASS SO
   [Anonymous], 2020, 2020 CYBER HYGIENE R
   Araujo F, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P942, DOI 10.1145/2660267.2660329
   Brandom R., 2020, FORMER EQUIFAX CEO B
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brykczynski H, 2003, IEEE SOFTWARE, V20, P50, DOI 10.1109/MS.2003.1159029
   Cavusoglu H., 2006, WEIS
   Cavusoglu H, 2008, MANAGE SCI, V54, P657, DOI 10.1287/mnsc.1070.0794
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Crowder James A., 2020, Artificial psychology: Psychological modeling and testing of AI systems, P35
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dellermann D, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P274
   Dey D, 2015, INFORMS J COMPUT, V27, P462, DOI 10.1287/ijoc.2014.0638
   Director of Product Management-Owl Cyber Defense Solutions Scott Coleman, 2020, CYB SEC REV
   Dissanayake N, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P793, DOI 10.1145/3468264.3468595
   Dittrich Y, 2016, INFORM SOFTWARE TECH, V70, P220, DOI 10.1016/j.infsof.2015.07.001
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Eddy N.P. Melissa, 2020, CYBER ATTACK SUSPECT
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gentile Ugo, 2019, International Journal of Critical Computer-Based Systems, V9, P115
   Gerace T., 2005, SIGUCCS 05, P98
   Gregersen A.R., 2013, INT C SOFTWARE TECHN, P99
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Islam C, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3305268
   Kamar E., 2016, IJCAI, P4070
   Keele S, 2007, GUIDELINES PERFORMIN
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Lee M, 2020, EQUIFAX DATA BREACH
   Li Frank, 2019, 15 S US PRIV SEC SOU
   Mell Peter, 2005, NIST Special Publication, V800, P40
   Miedes E., 2012, ITISIDI2012004 U POL
   Mugarza I., 2018, INT J SAFETY SECUR E, V8, P121
   Newman L.H, 2020, EQUIFAX OFFICIALLY H
   Nicastro F. M., 2003, Information Systems Security, V12, P5, DOI 10.1201/1086/43808.12.5.20031101/78486.2
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Schmidt Kjeld, 2014, COOP 2014, P427, DOI [10.1007/978-3-319-06498-7_26, DOI 10.1007/978-3-319-06498-7_26]
   Seifzadeh H, 2013, J SOFTW-EVOL PROC, V25, P535, DOI 10.1002/smr.1556
   Shahin M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110752
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Shahin M, 2014, J SYST SOFTWARE, V94, P161, DOI 10.1016/j.jss.2014.03.071
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Souppaya M., 2013, NIST Special Publication, V800, P40, DOI [DOI 10.6028/NIST.SP.800-40R3, 10.6028/NIST.SP.800-40r3]
   Thomas B, 2020, NEW WINDOWS VULNERAB
   Tiefenau C, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P239
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zahedi M, 2016, INT J INFORM MANAGE, V36, P995, DOI 10.1016/j.ijinfomgt.2016.06.007
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 58
TC 20
Z9 21
U1 1
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2022
VL 144
AR 106771
DI 10.1016/j.infsof.2021.106771
EA DEC 2021
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK3DU
UT WOS:000745098800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Panichella, S
   Canfora, G
   Di Sorbo, A
AF Panichella, Sebastiano
   Canfora, Gerardo
   Di Sorbo, Andrea
TI <i>"Won't</i><i> We</i><i> Fix</i><i> this</i> Issue?"Qualitative
   characterization and automated identification of wontfix issues on
   GitHub
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Issue tracking; Issue management; Empirical study; Machine learning
ID BUG; ALGORITHMS; SEVERITY; LIFE
AB Context : Addressing user requests in the form of bug reports and Github issues represents a crucial task of any successful software project. However, user-submitted issue reports tend to widely differ in their quality, and developers spend a considerable amount of time handling them. Objective : By collecting a dataset of around 6,000 issues of 279 GitHub projects, we observe that developers take significant time (i.e., about five months, on average) before labeling an issue as a wontfix. For this reason, in this paper, we empirically investigate the nature of wontfix issues and methods to facilitate issue management process. Method : We first manually analyze a sample of 667 wontfix issues, extracted from heterogeneous projects, investigating the common reasons behind a "wontfix decision", the main characteristics of wontfix issues and the potential factors that could be connected with the time to close them. Furthermore, we experiment with approaches enabling the prediction of wontfix issues by analyzing the titles and descriptions of reported issues when submitted. Results and conclusion : Our investigation sheds some light on the wontfix issues' characteristics, as well as the potential factors that may affect the time required to make a "wontfix decision". Our results also demonstrate that it is possible to perform prediction of wontfix issues with high average values of precision, recall, and F-measure (90%-93%).
C1 [Panichella, Sebastiano] Zurich Univ Appl Sci, Zurich, Switzerland.
   [Canfora, Gerardo; Di Sorbo, Andrea] Univ Sannio, Benevento, BN, Italy.
C3 Zurich University of Applied Sciences; University of Sannio
RP Panichella, S (corresponding author), Zurich Univ Appl Sci, Zurich, Switzerland.
EM panc@zhaw.ch; canfora@unisannio.it; disorbo@unisannio.it
OI Panichella, Sebastiano/0000-0003-4120-626X; Di Sorbo,
   Andrea/0000-0002-3192-739X
FU Horizon 2020 (EU Commission) [957254-COSMOS]
FX Sebastiano Panichella gratefully acknowledges the Horizon 2020 (EU
   Commission) support for the project COSMOS (DevOps for Com-plex
   Cyber-physical Systems) , Project No. 957254-COSMOS.
CR Almhana R, 2016, IEEE INT CONF AUTOM, P286, DOI 10.1145/2970276.2970344
   [Anonymous], 2016, BUG STATUS WONTFIX
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Ashraf U, 2020, IEEE WORK CONF MIN S, P538, DOI 10.1145/3379597.3387492
   Azeem MI, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P115, DOI 10.1145/3379177.3388904
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Baysal O, 2009, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2009.5090066
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Cawley GC, 2010, J MACH LEARN RES, V11, P2079
   Chaturvedi K. K., 2012, International Journal of Open Source Software and Processes, V4, P32, DOI 10.4018/jossp.2013040103
   Cohen William W., 2004, PROCS 2004 C EMPIRIC, P309
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Dalle JM, 2008, INT FED INFO PROC, V275, P265
   Destefanis G, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P14, DOI 10.1145/3194932.3194936
   Dhasade A.B., 2020
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fazzini M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141, DOI 10.1145/3213846.3213869
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Heppler L, 2016, IFIP ADV INF COMM TE, V472, P85, DOI 10.1007/978-3-319-39225-7_7
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Jiang J, 2017, INFORM SOFTWARE TECH, V91, P44, DOI 10.1016/j.infsof.2017.06.005
   Just S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P82, DOI 10.1109/VLHCC.2008.4639063
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kallis R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2020.102598
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kavaler D, 2017, IEEE INT CONF AUTOM, P72, DOI 10.1109/ASE.2017.8115620
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kikas R, 2015, LECT NOTES COMPUT SC, V9459, P295, DOI 10.1007/978-3-319-26844-6_22
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Liao ZF, 2018, IEEE ACCESS, V6, P24003, DOI 10.1109/ACCESS.2018.2810295
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Liu WJ, 2018, INT J SOFTW ENG KNOW, V28, P537, DOI 10.1142/S0218194018500158
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   Mi Q, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915986
   Moreno Laura, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P530, DOI 10.1145/3183440.3183464
   Murgia A, 2018, EMPIR SOFTW ENG, V23, P521, DOI 10.1007/s10664-017-9526-0
   Nielebock S, 2019, EMPIR SOFTW ENG, V24, P103, DOI 10.1007/s10664-018-9622-9
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Ortu M, 2015, LECT NOTES BUS INF P, V212, P129, DOI 10.1007/978-3-319-18612-2_11
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Panichella S, 2018, 2018 IEEE 2ND INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS AND EVOLUTION OF SOFTWARE TESTS (VST), P1, DOI 10.1109/VST.2018.8327148
   Panichella S, 2015, PROC IEEE INT CONF S, P586, DOI 10.1109/ICSM.2015.7332519
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Panichella S, 2014, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME.2014.47
   Panichella Sebastiano, 2014, P 22 INT C PROGR COM, P177
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Ramírez-Mora SL, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110663
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Rodeghero P, 2016, J SOFTW-EVOL PROC, V28, P542, DOI 10.1002/smr.1773
   Russo ER, 2019, J SYST SOFTWARE, V156, P84, DOI 10.1016/j.jss.2019.06.001
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Salo R, 2015, SPLST, P164
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Spencer D., 2009, CARD SORTING DESIGNI
   Tan X, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P398, DOI 10.1145/3368089.3409746
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Uddin J, 2017, ARTIF INTELL REV, V47, P145, DOI 10.1007/s10462-016-9478-6
   Wang QY, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P45, DOI [10.1109/ibf50092.2020.9034539, 10.1109/IBF50092.2020.9034539]
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Xia X, 2013, EUR CON SFTWR MTNCE, P331, DOI 10.1109/CSMR.2013.43
   XUAN J, 2017, ABS170404769 CORR
   Yang Cheng, 2017, P 9 ASIA PACIFIC S I, P14
   Yu Y, 2018, IEEE WORK CONF MIN S, P22, DOI 10.1145/3196398.3196455
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P589, DOI [10.1109/saner.2019.8667997, 10.1109/SANER.2019.8667997]
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang T, 2016, INT J SOFTW ENG KNOW, V26, P405, DOI 10.1142/S0218194016500170
   Zhou Y, 2021, IEEE T SOFTWARE ENG, V47, P2755, DOI 10.1109/TSE.2020.2967383
   Zhou Y, 2014, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2014.53
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2009, INT SYMP EMP SOFTWAR, P436
NR 102
TC 13
Z9 13
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106665
DI 10.1016/j.infsof.2021.106665
EA JUN 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300006
OA Green Submitted, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Liu, SG
   Wang, HY
   Xu, C
AF Liu, Shuguan
   Wang, Huiyan
   Xu, Chang
TI TIDY: A PBE-based framework supporting smart transformations for entity
   consistency in PowerPoint
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Programming by example; Rich-formatted documents
ID SQL QUERIES; PROGRAM
AB Context: Programming by Example (PBE) is increasingly assisting human users by recognizing and executing repetitive tasks, such as text editing and spreadsheet manipulation. Yet, existing work falls short on dealing with rich-formatted documents like PowerPoint (PPT) files, when examples are few and collecting them is intrusive.
   Objective: This article presents TIDY, a PBE-based framework, to assist automated entity transformations for their layout and style consistency in rich-formatted documents like PowerPoint, in a way adaptive to entity contexts and flexible with user selections.
   Methods: TIDY achieves this by examining entities' operation histories, and proposes a two-stage framework to first identify user intentions behind histories and then make wise next-operation recommendations for users, in order to maintain the entity consistency for rich-formatted documents.
   Results: We implemented TIDY as a prototype tool and integrated it into PowerPoint as a plug-in module. We experimentally evaluated TIDY with real-world user operation data. The evaluation reports that TIDY achieved promising effectiveness with a hit rate of 77.3% on average, which was stably holding for a variety of editing tasks. Besides, TIDY took only marginal time overhead, costing several to several tens of milliseconds, to complete each recommendation.
   Conclusion: TIDY assists users to complete repetitive tasks in rich-formatted documents by non-intrusive user intention recognition and smart next-operation recommendations, which is effective and practically useful.
C1 [Liu, Shuguan; Wang, Huiyan; Xu, Chang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Liu, Shuguan; Wang, Huiyan; Xu, Chang] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
C3 Nanjing University; Nanjing University
RP Wang, HY; Xu, C (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Peoples R China.
EM liu_shuguan@126.com; cocowhy1013@gmail.com; changxu@nju.edu.cn
OI Xu, Chang/0000-0002-6299-4704; Wang, Huiyan/0000-0001-6879-1628
FU National Natural Science Foundation of China [61932021, 61690204];
   Collaborative Innovation Center of Novel Software Technology and
   Industrialization, China
FX We thank the editor and anonymous reviewers for their constructive
   suggestions. This work is supported by the National Natural Science
   Foundation of China (61932021, 61690204) and the Collaborative
   Innovation Center of Novel Software Technology and Industrialization,
   China.
CR Abouzied Azza, 2013, P 32 ACM SIGMOD SIGA, P49, DOI 10.1145
   Andersen Jesper, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P337, DOI 10.1109/ASE.2008.44
   Andersen J, 2010, AUTOMAT SOFTW ENG, V17, P119, DOI 10.1007/s10515-010-0062-z
   [Anonymous], PPT OBJECT MODEL
   [Anonymous], 2014, P 19 INT C INT US IN, DOI [DOI 10.1145/2557500, 10.1145/2557500.2557522, DOI 10.1145/2557500.2557522]
   Barowy DW, 2015, ACM SIGPLAN NOTICES, V50, P218, DOI [10.1145/2813885.2737952, 10.1145/2737924.2737952]
   Bhatia R., 1996, MATRIX ANAL
   BROOKS R, 1993, INT J MAN MACH STUD, V39, P1054
   Ceci M, 2003, LECT NOTES COMPUT SC, V2633, P57
   Drosos I, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20)
   Gao X, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428287
   GOSSOT D, 1994, CHEST, V105, P1467, DOI 10.1378/chest.105.5.1467
   Gulwani S, 2017, LECT NOTES COMPUT SC, V10695, P3, DOI 10.1007/978-3-319-71237-6_1
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Gulwani S, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P803, DOI 10.1145/2588555.2612177
   Gulwani S, 2016, NATO SCI PEAC SECUR, V45, P137, DOI 10.3233/978-1-61499-627-9-137
   Gulwani S, 2012, COMMUN ACM, V55, P97, DOI 10.1145/2240236.2240260
   Gulwani S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P62
   Gulwani S, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P317, DOI 10.1145/1926385.1926423
   Hartmann B., 2016, ABS160809000 CORR
   ITZHAKY S, 2010, P 10 INT C OBJ OR PR, P36
   Jacobellis J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1319, DOI 10.1109/ICSE.2013.6606707
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P542, DOI [10.1145/2594291.2594333, 10.1145/2666356.2594333]
   Leung A, 2015, ACM SIGPLAN NOTICES, V50, P565, DOI [10.1145/2813885.2738002, 10.1145/2737924.2738002]
   Lieberman H, 2001, MORGAN KAUFMANN SERI, DOI [10.1016/b978-1-55860-688-3.x5000-3, DOI 10.1016/B978-1-55860-688-3.X5000-3]
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Miltner A, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360569
   Raza M, 2014, AAAI CONF ARTIF INTE, P283
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Shen YY, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P493, DOI 10.1145/2588555.2593664
   Singh R, 2012, PROC VLDB ENDOW, V5, P740
   Singh R, 2016, ACM SIGPLAN NOTICES, V51, P343, DOI 10.1145/2914770.2837668
   Singh R, 2015, LECT NOTES COMPUT SC, V9206, P398, DOI 10.1007/978-3-319-21690-4_23
   Srivastava S, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P313, DOI 10.1145/1706299.1706337
   Ts'o TY, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK, P235
   Wang CL, 2017, ACM SIGPLAN NOTICES, V52, P452, DOI [10.1145/3140587.3062365, 10.1145/3062341.3062365]
   Wu J, 2018, PROC IEEE ACM INT C, P266, DOI 10.1145/3183440.3194963
   Yaghmazadeh N, 2016, ACM SIGPLAN NOTICES, V51, P508, DOI [10.1145/2980983.2908088, 10.1145/2908080.2908088]
   Zhang S, 2013, IEEE INT CONF AUTOM, P224, DOI 10.1109/ASE.2013.6693082
NR 39
TC 0
Z9 0
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2021
VL 138
AR 106611
DI 10.1016/j.infsof.2021.106611
EA MAY 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI1GV
UT WOS:000672531500008
DA 2024-07-18
ER

PT J
AU Mancebo, J
   Garcia, F
   Calero, C
AF Mancebo, Javier
   Garcia, Felix
   Calero, Coral
TI A process for analysing the energy efficiency of software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software sustainability; Green software; Software consumption
   measurement; Energy consumption measurement process; Energy efficiency
ID GREEN
AB Context: It is essential to be aware of the energy efficiency of software when it is running, so that it can be improved; to that end, energy consumption measurements need to be carried out. To ensure that these measurements are as reliable as possible, it is recommended that a well-defined process be followed.
   Objective: To identify how the process for analysing the energy efficiency of software should be carried out (including the definition of the software to be evaluated, the selection of measuring instruments, the analysis and the presentation of results, etc.), in an endeavour to improve the reliability and consistency of the information obtained regarding energy efficiency.
   Method: An analysis of related work was carried out, to extract some good practices in measuring energy consumption; based on our experience, a process to analyse the energy efficiency of the software has been defined.
   Results: We have defined a process to analyse the energy efficiency of the software. We describe this process through a set of phases that covers all the steps needed to carry out a correct analysis of the energy consumption of the software executed. Moreover, this process was validated with two different studies using different measurement instruments (one with a hardware-based approach and one with a software-based approach) to ensure its applicability to all types of studies with software energy consumption measurement.
   Conclusion: The steps to be followed to analyse the energy efficiency of the software need to be established. A new process has hence been defined to improve the reliability and consistency of the measurements. Furthermore, this process facilitates the replicability and comparison of the studies carried out.
C1 [Mancebo, Javier; Garcia, Felix; Calero, Coral] Univ Castilla La Mancha, Inst Technol & Informat Syst, Alarcos Res Grp, Ciudad Real, Spain.
C3 Universidad de Castilla-La Mancha
RP Mancebo, J (corresponding author), Univ Castilla La Mancha, Inst Technol & Informat Syst, Alarcos Res Grp, Ciudad Real, Spain.
EM Javier.Mancebo@uclm.es; Felix.Garcia@uclm.es; Coral.Calero@uclm.es
RI Calero, Coral/D-4319-2011
OI Calero, Coral/0000-0003-0728-4176
FU Spanish Ministry of Economy, Industry and Competitiveness
   [RTI2018098309BC31]; European FEDER funds; Department of Education,
   Culture and Sports of the Directorate General of Universities, Research
   and Innovation of the JCCM (Regional Government of the Autonomous Region
   of CastillaLa Mancha) [SBPLY/17/180501/000364]
FX This work was part of the BIZDEVOPSGlobal (RTI2018098309BC31) ,
   supported by the Spanish Ministry of Economy, Industry and
   Competitiveness and European FEDER funds, and was also part of the SOS
   project (No. SBPLY/17/180501/000364) , funded by the Department of
   Education, Culture and Sports of the Directorate General of
   Universities, Research and Innovation of the JCCM (Regional Government
   of the Autonomous Region of CastillaLa Mancha) .
CR Andrae A., 2017, NORDIC DIGITAL BUS S, V10
   Andrae A. S., 2019, International Journal of Science and Engineering Investigations, V8, P27
   [Anonymous], 2008, ASTM Int, V08, P1, DOI [10.1520/C0157, DOI 10.1520/C0157, 10.1520/C0157_C0157M-08, DOI 10.1520/C0157,08]
   [Anonymous], 2012, GUIDELINES CONDUCTIN
   [Anonymous], 2019, 2019 INT C COMP INF
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Becker C., 2014, ARXIV PREPRINT ARXIV
   Bhattacharya A., 2009, JOULEMETER VIRTUAL M
   Bourdon A., 2013, ERCIM NEWS, V2013
   Brooks A., 1996, INT SOFTWARE ENG RES, V2
   Calero C, 2020, TSINGHUA SCI TECHNOL, V25, P401, DOI 10.26599/TST.2019.9010006
   Calero C, 2017, SUSTAIN COMPUT-INFOR, V16, P117, DOI 10.1016/j.suscom.2017.10.011
   Chandra TB, 2019, ADV INTELL SYST, V731, P93, DOI 10.1007/978-981-10-8848-3_9
   Chowdhury S, 2019, EMPIR SOFTW ENG, V24, P1649, DOI 10.1007/s10664-018-9640-7
   Dick M, 2010, IFIP ADV INF COMM TE, V328, P248
   Fenton N., 2014, SOFTWARE METRICS RIG
   García F, 2009, KNOWL ENG REV, V24, P23, DOI 10.1017/S0269888909000125
   Goethert W., 2004, APPL INDICATOR TEMPL
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Henderson-Sellers B, 2003, COMMUN ACM, V46, P73, DOI 10.1145/944217.944242
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   ISO/IEC/IEEE International Standard-Systems and Software Engineering-Measurement Process, 2017, 15939 ISOIECIEEE, P1
   Jagroep E, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1852
   Jagroep E, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P2198, DOI 10.1145/2695664.2695825
   Jagroep EA, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P523, DOI 10.1145/2889160.2889216
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kandel S, 2011, INFORM VISUAL, V10, P271, DOI 10.1177/1473871611415994
   Kern E, 2018, FUTURE GENER COMP SY, V86, P199, DOI 10.1016/j.future.2018.02.044
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Mancebo J, 2018, 2018 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P16, DOI 10.1145/3194078.3194081
   Moises A.C., 2018, 2018 9 INT GREEN SUS, P1
   Noureddine A., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P21, DOI 10.1109/GREENS.2012.6224251
   Park R.E., 1996, GOAL DRIVEN SOFTWARE
   Pinto G, 2017, COMMUN ACM, V60, P68, DOI 10.1145/3154384
   Procaccianti G, 2015, SUSTAIN COMPUT-INFOR, V7, P2, DOI 10.1016/j.suscom.2014.11.004
   PSM, 2000, PRACT SOFTW SYST MEA
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   van Solingen D.R., 1999, GOAL QUESTION METRIC
   Vidal J., 2017, CLIMATE HOME NEWS, V11
   Wilcox R.R., 2011, INTRO ROBUST ESTIMAT
NR 43
TC 7
Z9 7
U1 1
U2 15
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106560
DI 10.1016/j.infsof.2021.106560
EA FEB 2021
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4GK
UT WOS:000634797600001
DA 2024-07-18
ER

PT J
AU Kurnia, S
   Kotusev, S
   Shanks, G
   Dilnutt, R
   Milton, S
AF Kurnia, Sherah
   Kotusev, Svyatoslav
   Shanks, Graeme
   Dilnutt, Rod
   Milton, Simon
TI Stakeholder engagement in enterprise architecture practice: What
   inhibitors are there?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Enterprise Architecture; Stakeholders; Engagement; Problems; Case Study;
   Grounded Theory
ID INFORMATION-TECHNOLOGY; STRATEGIC ALIGNMENT; DIGITAL BUSINESS; DYNAMIC
   CAPABILITIES; MANAGEMENT; IMPLEMENTATION; TRANSFORMATION; ANTECEDENTS;
   PERFORMANCE; ARTIFACTS
AB Context: Enterprise architecture (EA) is a collection of artifacts describing various aspects of an organization from an integrated business and IT perspective. EA practice is an organizational activity that implies using EA artifacts for facilitating decision-making and improving business and IT alignment. EA practice involves numerous participants ranging from C-level executives to project teams and effective engagement between these stakeholders and architects is critically important for success. Moreover, many practical problems with EA practice can be also attributed to insufficient engagement between architects and other EA stakeholders. However, the notion of engagement received only limited attention in the EA literature and the problem of establishing engagement has not been intentionally studied. Objective: This paper intends to explore in detail the problem of achieving effective engagement between architects and other EA stakeholders in an organization, identify the main inhibitors of engagement and present a theoretical model explaining the problem of establishing engagement in practice. Method: This paper is based on a single in-depth revelatory case study including nine interviews with different participants of EA practice (e.g. architects and other EA stakeholders) and documentation analysis. It leverages the grounded theory method to construct a conceptual model explaining the problem of engagement in the studied organization. Results: This paper identifies 28 direct and indirect inhibitors of engagement and unifies them into a holistic conceptual model addressing the problem of achieving engagement that covers the factors undermining both strategic and initiative-based engagement between architects and other EA stakeholders. Conclusions: This paper focuses on the notion of engagement and offers arguably the first available theoretical model that explains how typical engagement problems between architects and other stakeholders inhibit the realization of value from EA practice. However, the developed model has a number of limitations and we call for further empirical research on engagement problems in EA practice and coping strategies for addressing these problems.
C1 [Kurnia, Sherah; Shanks, Graeme; Dilnutt, Rod; Milton, Simon] Univ Melbourne, Melbourne, Vic, Australia.
   [Kotusev, Svyatoslav] HSE Univ, Moscow, Russia.
C3 University of Melbourne; HSE University (National Research University
   Higher School of Economics)
RP Kotusev, S (corresponding author), HSE Univ, Moscow, Russia.
EM sherahk@unimelb.edu.au; kotusev@kotusev.com; gshanks@unimelb.edu.au;
   rpd@unimelb.edu.au; simon.milton@unimelb.edu.au
OI SHANKS, GRAEME/0000-0003-4316-8017; Dilnutt, Rod/0000-0003-4617-3743
FU Australian Research Council [DP14010024]
FX We would like to thank the Australian Research Council for funding this
   study (DP14010024). We are grateful to Dr. Keith Frampton for organizing
   initial access to the case organization. We also appreciate the case
   study participants' on-going support for our research.
CR Ahlemann F., 2012, Strategic enterprise architecture management: Challenges, best practices, and future developments, P265
   Akkermans H, 2002, EUR J INFORM SYST, V11, P35, DOI 10.1057/palgrave/ejis/3000418
   Al-Kharusi H., 2016, P 20 PAC AS INF SYST, P1
   [Anonymous], 2012, P 20 EUROPEAN C INFO
   [Anonymous], 2013, P 21 EUROPEAN C INFO
   [Anonymous], 2019, EAP PAGE ENTERPRISE
   [Anonymous], 2018, EA PAGE ENTERPRISE A
   [Anonymous], 2011, J ENTERPRISE ARCHITE
   [Anonymous], 2018, PRACTICE ENTERPRISE
   [Anonymous], 2006, P 14 EUR C INF SYST
   [Anonymous], 2001, PRACT GUID FED ENT A
   [Anonymous], 2007, HDB ENTERPRISE SYSTE
   [Anonymous], 2012, STRATEGIC ENTERPRISE
   [Anonymous], 2007, HDB ENTERPRISE SYSTE
   [Anonymous], 2010, DR DOBBS J
   [Anonymous], 2010, P 16 AM C INF SYST A
   [Anonymous], 2008, QUALITY SOFTWARE ARC
   [Anonymous], 2007, P 13 AMERICAS C INFO
   Armour F. J., 2001, IT Professional, V3, P30, DOI 10.1109/6294.977769
   Azevedo CLB, 2015, IEEE INT ENTERP DIST, P159, DOI 10.1109/EDOC.2015.31
   Bacharach, 1983, RES SOCIOLOGY ORG RE, V2
   Baets W., 1992, Journal of Strategic Information Systems, V1, P205, DOI 10.1016/0963-8687(92)90036-V
   Banaeianjahromi Negin, 2019, Information Systems Frontiers, V21, P877, DOI 10.1007/s10796-017-9779-6
   Banaeianjahromi N., 2018, 12 INT C RES CHALL I, P1
   Bassellier G, 2004, MIS QUART, V28, P673
   Beijer P., 2010, IT architecture: essential practice for IT business solutions
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   BENJAMIN RI, 1993, SLOAN MANAGE REV, V34, P23
   Blomqvist S, 2015, CONF BUS INFORM, P43, DOI 10.1109/CBI.2015.39
   Broadbent M, 1997, SLOAN MANAGE REV, V38, P77
   Burton, 2011, RESTART REENERGIZEEN
   Burton B., 2009, 13 WORST ENTERPRISE
   BURTON B., 2012, 8 BUSINESS CAPABILIT
   Campbell B, 2005, PACIFIC ASIA CONFERENCE ON INFORMATION SYSTEMS 2005, SECTIONS 1-8 AND POSTER SESSIONS 1-6, P656
   Chan YE, 2006, IEEE T ENG MANAGE, V53, P27, DOI 10.1109/TEM.2005.861804
   Chan YE, 2007, J INF TECHNOL-UK, V22, P297, DOI 10.1057/palgrave.jit.2000109
   Chuang C.H., 2010, Proceedings of the Annual Hawaii International Conference on System Sciences, P1, DOI DOI 10.1109/HICSS.2010.449
   COHEN MD, 1972, ADMIN SCI QUART, V17, P1, DOI 10.2307/2392088
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Dale M., 2013, J Enterp Arch, V9, P77
   Dang D.D., 2016, P 2016 18 EUROPEAN C, P1, DOI DOI 10.1109/EPE.2016.7695604
   Darke P, 1998, INFORM SYST J, V8, P273, DOI 10.1046/j.1365-2575.1998.00040.x
   DAVENPORT TH, 1989, HARVARD BUS REV, V67, P130
   de Reuver M, 2018, J INF TECHNOL-UK, V33, P124, DOI 10.1057/s41265-016-0033-3
   Edelman DC, 2015, HARVARD BUS REV, V93, P90
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fallmyr T, 2014, P ANN HICSS, P3788, DOI 10.1109/HICSS.2014.471
   FEAPO, 2018, GUID CAR ENT ARCH
   FEAPO, 2013, COMM PERSP ENT ARCH
   Fonstad, 2006, EXPANDING VALUE OUTS
   Fonstad N.O., 2006, MIS Quarterly Executive, V5, P1
   Foorthuis R. M., 2007, P 2 TRENDS ENT ARCH, P51
   Foorthuis R, 2016, INFORM SYST FRONT, V18, P541, DOI 10.1007/s10796-014-9542-1
   Foorthuis R, 2012, J DATABASE MANAGE, V23, P44, DOI 10.4018/jdm.2012040103
   Garud R, 2005, MIS QUART, V29, P9
   Gerow JE, 2016, INFORM MANAGE-AMSTER, V53, P541, DOI 10.1016/j.im.2015.12.006
   Gerow JE, 2014, MIS QUART, V38, P1159
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Greefhorst D, 2011, ENTERP ENG SER, P1, DOI 10.1007/978-3-642-20279-7
   Grindley K., 1992, Journal of Strategic Information Systems, V1, P57, DOI 10.1016/0963-8687(92)90002-E
   Hansen AM, 2011, MIS Q EXEC, V10, P175
   Hofstede G., 2010, CULTURES ORG SOFTWAR
   James, 2008, FINDINGS ELEMENTS SU
   Janssen M, 2012, SOC SCI COMPUT REV, V30, P24, DOI 10.1177/0894439310392187
   Jusuf MB, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P4887
   Kaisler S.H., 2005, HICSS'05, p224b, DOI DOI 10.1109/HICSS.2005.241
   Kaisler SH, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P4807
   Kappelman L., 2008, P 14 AM C INF SYST, P1
   Kappelman L.A., 2010, The SIM guide to enterprise architecture
   Karimi J, 2015, J MANAGE INFORM SYST, V32, P39, DOI 10.1080/07421222.2015.1029380
   Kautz, 2018, P 26 EUR C INF SYST, P1
   Keen P, 2013, MIS QUART, V37, P643
   Kemp Peter, 2009, IT Now, V51, P20, DOI 10.1093/itnow/bwp032
   Kotusev de S., 2015, P 23 EUR C INF SYST, P1
   Kotusev S., 2020, ENTERPRISE ARCHITECT
   Kotusev S., 2020, P 53 HAW INT C SYST, P5613
   Kotusev S., 2016, J Enterp Arch, V12, P28
   Kotusev S., 2019, ENTERPRISE ARCHITECT
   Kotusev S., 2020, P 41 INT C INF SYST, P1
   Kotusev S, 2020, IT PROF, V22, P47, DOI 10.1109/MITP.2019.2912136
   Kotusev S, 2018, COMMUN ASSOC INF SYS, V43, P321, DOI 10.17705/1CAIS.04320
   Kotusev S, 2019, J INF TECHNOL-UK, V34, P102, DOI 10.1177/0268396218816273
   Kotusev S, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017300029
   Kotusev S, 2017, INT J COOP INF SYST, V26, DOI 10.1142/S0218843017300017
   Kotusev S, 2015, P ANN HICSS, P4069, DOI 10.1109/HICSS.2015.489
   Kurnia S., 2020, P 53 HAW INT C SYST, P5583
   Lange M, 2016, EUR J INFORM SYST, V25, P411, DOI 10.1057/ejis.2014.39
   Lankhorst MM, 2010, LECT NOTES BUS INF, V69, P78
   Lapalme J, 2012, IT PROF, V14, P37, DOI 10.1109/MITP.2011.109
   Lapkin A., 2010, 10 CRITERIA CHOOSING
   Lapkin Allega., 2008, GARTNER CLARIFIES DE
   Laudon K.C. e., 2013, Management Information Systems: Managing the Digital Firm, V13th
   Lederer A. L., 1989, Journal of Management Information Systems, V6, P5
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Levy M., 2014, P 20 AM C INF SYST A, P1
   Li WZ, 2016, J INF TECHNOL-UK, V31, P185, DOI 10.1057/jit.2016.10
   Löhe J, 2014, INF SYST E-BUS MANAG, V12, P101, DOI 10.1007/s10257-012-0211-y
   Lohe J., 2012, P 20 EUR C INF SYST, P1
   Luftman J, 1999, CALIF MANAGE REV, V42, P109, DOI 10.2307/41166021
   Luftman J., 2004, MIS Quarterly Executive, V3, P89
   Luftman J., 1999, COMMUN ASSOC INF SYS, V1, P1, DOI DOI 10.17705/1CAIS.00111
   Luftman J., 2006, MIS Q EXEC, V5, P81
   Luftman J, 2017, J INF TECHNOL-UK, V32, P26, DOI 10.1057/jit.2015.23
   Lux J., 2012, STRATEGIC ENTERPRISE
   Makiya G., 2008, Journal of Enterprise Architecture, V4, P27
   March JG, 1997, ORGAN SCI, V8, P698, DOI 10.1287/orsc.8.6.698
   MASUCH M, 1985, ADMIN SCI QUART, V30, P14, DOI 10.2307/2392809
   Molnar WA, 2013, LECT NOTES BUS INF P, V151, P76
   Mondorf A, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P2933
   Murer S, 2011, MANAGED EVOLUTION: A STRATEGY FOR VERY LARGE INFORMATION SYSTEMS, P1, DOI 10.1007/978-3-642-01633-2
   NATH R, 1989, INFORM MANAGE, V16, P71, DOI 10.1016/0378-7206(81)90073-2
   Nickerson, 2018, P 39 INT C INF SYST, P1
   Niemi E, 2017, ENTERP INF SYST-UK, V11, P313, DOI 10.1080/17517575.2015.1048831
   Parker T., 2008, J Enterp Arch, V4, P46
   Preston DS, 2009, INFORM SYST RES, V20, P159, DOI 10.1287/isre.1070.0159
   Quartel D, 2012, ENTERP INF SYST-UK, V6, P189, DOI 10.1080/17517575.2011.625571
   Radeke F., 2010, P 16 AM C INF SYST, P1
   Rahimi F, 2017, COMMUN ASSOC INF SYS, V40
   Reich BH, 2000, MIS QUART, V24, P81, DOI 10.2307/3250980
   Riempp Gerold, 2007, Information Systems and e-Business Management, V5, P359, DOI 10.1007/s10257-007-0052-2
   Robertson, 2004, REALIZING IT ENABLED
   Ross, 2004, ENTERPRISE ARCHITECT
   Ross J.W., 2019, Designed for Digital How to Architect Your Business for Sustained Success
   Ross JeanneW., 2007, Enterprise Architecture as a Strategy
   Rossebo JE., 2016, 2016 JOINT WORKSHOP, P1
   Saint-Louise P, 2019, INT J ENG BUS MANAG, V11, DOI 10.1177/1847979019866337
   Schein EH, 1996, SLOAN MANAGE REV, V38, P9
   Schmidt C, 2011, EUR J INFORM SYST, V20, P168, DOI 10.1057/ejis.2010.68
   Schöenherr M, 2009, LECT NOTES COMPUT SC, V5472, P400, DOI 10.1007/978-3-642-01247-1_40
   Schweda, STATE ART ENTERPRISE
   Scott J., 2009, ARCHITECTURE GOVERNA, V5, P1
   Sebastian, 2014, ARCHITECT YOUR BUSIN
   Seddon PB, 2012, EUR J INFORM SYST, V21, P6, DOI 10.1057/ejis.2011.9
   Seppanen Ville, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P114, DOI 10.1109/CEC.2009.70
   Sia SK, 2016, MIS Q EXEC, V15, P105
   SILLINCE JAA, 1995, EUR J INFORM SYST, V4, P103, DOI 10.1057/ejis.1995.12
   Simon D, 2013, COMMUN ASSOC INF SYS, V32
   Simon D, 2014, INF SYST E-BUS MANAG, V12, P5, DOI 10.1007/s10257-013-0213-4
   Smith HA, 2012, MIS Q EXEC, V11, P75
   Spewak S.H., 1992, ENTERPRISE ARCHITECT
   Staw, 1991, RES ORG BEHAV ANN SE, V13
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   SUTTON RI, 1987, ACAD MANAGE J, V30, P405, DOI 10.5465/256007
   Tallon PP, 2011, MIS QUART, V35, P463
   Tamm T, 2015, MIS Q EXEC, V14, P181
   Tarafdar M, 2009, INFORM SYST MANAGE, V26, P338, DOI 10.1080/10580530903245705
   Teo TSH, 1999, INT J INFORM MANAGE, V19, P173, DOI 10.1016/S0268-4012(99)00007-9
   van der Raadt B, 2008, LECT NOTES COMPUT SC, V5292, P19, DOI 10.1007/978-3-540-88030-1_4
   van der Raadt B, 2010, J SYST SOFTWARE, V83, P1954, DOI 10.1016/j.jss.2010.05.076
   Vitale M. R., 1986, Proceedings of the Seventh International Conference on Information Systems, P265
   Wagter Roel., 2005, Dynamic Enterprise Architecture: How to Make it Work
   Ward J, 1996, J STRATEGIC INF SYST, V5, P37, DOI 10.1016/S0963-8687(96)80022-9
   Weill P., 2010, ACHIEVING SUPERIOR V
   Weill P., 2018, What's Your Digital Business Model? Six Questions to Help You Build the Next-Generation Enterprise
   Weill P, 2018, MIT SLOAN MANAGE REV, V59, P21
   Weill P, 2013, MIT SLOAN MANAGE REV, V54, P71
   Westerman G., 2012, MITSLOAN MANAGEMENT, V2, P2
   Westerman G, 2015, MIT SLOAN MANAGE REV, V56, P10
   Woerner, 2013, MANAGING TOTAL DIGIT
   Yayla AA, 2012, EUR J INFORM SYST, V21, P373, DOI 10.1057/ejis.2011.52
   Yeow A, 2018, J STRATEGIC INF SYST, V27, P43, DOI 10.1016/j.jsis.2017.09.001
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
   Yin R.K., 2003, CASE STUDY RES DESIG
   Ylimaki T., 2006, Journal of Enterprise Architecture, V2, P29
   Zachman J., 1997, DATABASE PROGRAMMING, V10, P44
NR 167
TC 5
Z9 5
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2021
VL 134
AR 106536
DI 10.1016/j.infsof.2021.106536
EA FEB 2021
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RD3ON
UT WOS:000633391900001
DA 2024-07-18
ER

PT J
AU Chen, X
   Mu, YZ
   Liu, K
   Cui, ZQ
   Ni, C
AF Chen, Xiang
   Mu, Yanzhou
   Liu, Ke
   Cui, Zhanqi
   Ni, Chao
TI Revisiting heterogeneous defect prediction methods: How far are we?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Heterogeneous defect prediction;
   Unsupervised defect prediction; Non-effort-aware performance indicators;
   Effort-aware performance indicators; Diversity analysis; Empirical
   studies
ID FEATURE-SELECTION
AB Context: Cross-project defect prediction applies to the scenarios that the target projects are new projects. Most of the previous studies tried to utilize the training data from other projects (i.e., the source projects). However, metrics used by practitioners to measure the extracted program modules from different projects may not be the same, and performing heterogeneous defect prediction (HDP) is challenging.
   Objective: Researchers have proposed many novel HDP methods with promising performance until now. Recently, unsupervised defect prediction (UDP) methods have received more attention and show competitive performance. However, to our best knowledge, whether HDP methods can perform significantly better than UDP methods has not yet been thoroughly investigated.
   Method: In this article, we perform a comparative study to have a holistic look at this issue. Specifically, we compare five HDP methods with four UDP methods on 34 projects in five groups under the same experimental setup from three different perspectives: non-effort-aware performance indicators (NPIs), effort-aware performance indicators (EPIs) and diversity analysis on identifying defective modules.
   Result: We have the following findings: (1) HDP methods do not perform significantly better than some of UDP methods in terms of two NPIs and four EPIs. (2) According to two satisfactory criteria recommended by previous studies, the satisfactory ratio of existing HDP methods is pessimistic. (3) The diversity of prediction for defective modules across HDP vs. UDP methods is more than that within HDP methods or UDP methods.
   Conclusion: The above findings implicate there is still a long way for the HDP issue to go. Given this, we present some observations about the road ahead for HDP.
C1 [Chen, Xiang; Liu, Ke] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Chen, Xiang] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin, Peoples R China.
   [Mu, Yanzhou] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Cui, Zhanqi] Beijing Informat Sci & Technol Univ, Comp Sch, Beijing, Peoples R China.
   [Ni, Chao] Zhejiang Univ, Sch Software Technol, Ningbo, Peoples R China.
C3 Nantong University; Guilin University of Electronic Technology; Tianjin
   University; Beijing Information Science & Technology University;
   Zhejiang University
RP Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
EM xchencs@ntu.edu.cn; myz_2019218009@tju.edu.cn; l51415370@163.com;
   czq@bistu.edu.cn; jacknichao920209@gmail.com
RI Chen, Xiang/AAG-3663-2019
OI Chen, Xiang/0000-0002-1180-3891
FU National Natural Science Foundation of China [61702041, 61872263,
   61202006]; Guangxi Key Laboratory of Trusted Software [kx202012]
FX The authors would like to thank the editors and the anonymous reviewers
   for their insightful comments and suggestions, which can substantially
   improve the quality of this work. Xiang Chen and Yanzhou Mu have
   contributed equally to this work and they are co-first authors. This
   work is supported in part by the National Natural Science Foundation of
   China (Grant nos. 61702041, 61872263 and 61202006), and Guangxi Key
   Laboratory of Trusted Software (Grant no. kx202012).
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2018, OPTOELECTRON LETT, DOI DOI 10.1007/s11801-018-7228-5
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Chakraborty J., 2019, ARXIV190505786
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen X, 2020, IEEE T RELIAB, V69, P70, DOI 10.1109/TR.2019.2924932
   Chen X, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2234
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Chen X, 2019, IEEE ACCESS, V7, P117088, DOI 10.1109/ACCESS.2019.2934890
   Cheng M., 2016, P 28 INT C SOFTW ENG, P171
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He Peng., 2014, CORR
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Huang Q, 2020, ENVIRON TECHNOL, V41, P1664, DOI 10.1080/09593330.2018.1543359
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M., 2010, P INT C PRED MOD SOF, P1
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li Z. Q., 2017, IEEE T KNOWL DATA EN, V99, P1
   Li ZQ, 2019, AUTOMAT SOFTW ENG, V26, P599, DOI 10.1007/s10515-019-00259-1
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Li ZQ, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1658
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Liu WS, 2016, IEEE T RELIAB, V65, P38, DOI 10.1109/TR.2015.2461676
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ni C., 2020, IEEE T SOFTW ENG
   Ni C, 2019, J SYST SOFTWARE, V152, P215, DOI 10.1016/j.jss.2019.03.012
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vaerenbergh S.v., 2010, KERNEL METHODS NONLI
   Wang SY, 2019, IEEE T PATTERN ANAL, V41, P2783, DOI [10.1109/INTMAG.2018.8508542, 10.1109/TNNLS.2017.2771290, 10.1109/TPAMI.2018.2861871]
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110402
   Xu Z, 2019, J SYST SOFTWARE, V154, P59, DOI 10.1016/j.jss.2019.03.027
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Yuan ZD, 2020, IEEE ACCESS, V8, P30037, DOI 10.1109/ACCESS.2020.2972644
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhou Z.-H., 2012, ENSEMBLE METHODS FDN, DOI DOI 10.1201/B12207
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 68
TC 18
Z9 19
U1 0
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106441
DI 10.1016/j.infsof.2020.106441
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Biesialska, K
   Franch, X
   Muntés-Mulero, V
AF Biesialska, Katarzyna
   Franch, Xavier
   Muntes-Mulero, Victor
TI Big Data analytics in Agile software development: A systematic mapping
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile software development; Software analytics; Data analytics; Machine
   learning; Artificial intelligence; Literature review
ID DATA SCIENCE; DRIVEN; PRIORITIZATION; LESSONS; DELAY
AB Context: Over the last decade, Agile methods have changed the software development process in an unparalleled way and with the increasing popularity of Big Data, optimizing development cycles through data analytics is becoming a commodity. Objective: Although a myriad of research exists on software analytics as well as on Agile software development (ASD) practice on itself, there exists no systematic overview of the research done on ASD from a data analytics perspective. Therefore, the objective of this work is to make progress by linking ASD with Big Data analytics (BDA). Method: As the primary method to find relevant literature on the topic, we performed manual search and snowballing on papers published between 2011 and 2019. Results: In total, 88 primary studies were selected and analyzed. Our results show that BDA is employed throughout the whole ASD lifecycle. The results reveal that data-driven software development is focused on the following areas: code repository analytics, defects/bug fixing, testing, project management analytics, and application usage analytics. Conclusions: As BDA and ASD are fast-developing areas, improving the productivity of software development teams is one of the most important objectives BDA is facing in the industry. This study provides scholars with information about the state of software analytics research and the current trends as well as applications in the business environment. Whereas, thanks to this literature review, practitioners should be able to understand better how to obtain actionable insights from their software artifacts and on which aspects of data analytics to focus when investing in such initiatives.
C1 [Biesialska, Katarzyna; Franch, Xavier] Univ Politecn Cataluna, Barcelona, Spain.
   [Muntes-Mulero, Victor] Beawre Digital SL, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya
RP Biesialska, K (corresponding author), Univ Politecn Cataluna, Barcelona, Spain.
EM katarzyna.biesialska@upc.edu
RI Franch, Xavier/A-8588-2008; Harrison, Dylan/AFP-8142-2022
OI Biesialska, Katarzyna/0000-0002-2865-7990; Muntes-Mulero,
   Victor/0000-0002-6693-2295
FU Catalan Agencia de Gestion de Ayudas Universitarias y de Investigacion
   (AGAUR) through the FI Ph.D. grant; Spanish Ministerio de Economia,
   Industria y Competitividad through the GENESIS project [TIN2016-79269-R]
FX This work is supported in part by the Catalan Agencia de Gestion de
   Ayudas Universitarias y de Investigacion (AGAUR) through the FI Ph.D.
   grant. The research is also partially supported by the Spanish
   Ministerio de Economia, Industria y Competitividad through the GENESIS
   project (grant TIN2016-79269-R).
CR Abdellatif TM, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING, P30, DOI 10.1109/BIGDSE.2015.14
   Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   Alam A., 2016, P 10 ACM IEEE INT S, P27
   Alshakhouri M, 2018, INFORM SOFTWARE TECH, V98, P131, DOI 10.1016/j.infsof.2018.01.008
   Ambler Scott W., 2008, BALANCING AGILITY FO, P1
   Ameller D, 2015, INFORM SOFTWARE TECH, V62, P42, DOI 10.1016/j.infsof.2015.02.006
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2012, Disciplined agile delivery: A practitioner's guide to agile software delivery in the enterprise
   [Anonymous], 2015, SCALED AGILE FRAMEWO
   [Anonymous], 2016, VISIONS, V40
   [Anonymous], 2003, HYPE CYCLE EMERGING
   [Anonymous], 2015, LESS FRAMEWORK
   [Anonymous], 1969, The analysis of communication content
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Asthana S., 2019, P 2019 27 ACM JOINT
   Augustine V, 2018, IEEE SOFTWARE, V35, P72, DOI 10.1109/MS.2017.4541044
   Avelino G, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P11, DOI 10.1109/MS.2018.185140155
   Bagriyanik S., 2016, GLOBAL J INFORM TECH, V6, P107, DOI DOI 10.18844/gjit.v6i1.397
   Balogh G, 2015, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSM.2015.7332490
   Batarseh FA, 2018, SOFTWARE QUAL J, V26, P49, DOI 10.1007/s11219-015-9285-3
   Becker K, 2015, INFORM SOFTWARE TECH, V57, P494, DOI 10.1016/j.infsof.2014.06.003
   Blackett G., 2018, ANAL NETWORK R ANAL
   Blincoe K, 2019, EMPIR SOFTW ENG, V24, P1610, DOI 10.1007/s10664-018-9656-z
   Boehm R.T. Barry., 2003, Balancing Agility and Discipline: A Guide for the Perplexed
   Boerman MP, 2015, INT WORKS EMERG TREN, P54, DOI 10.1109/WETSoM.2015.15
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Braione P, 2014, SOFTWARE QUAL J, V22, P311, DOI 10.1007/s11219-013-9207-1
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen David, 2008, USING MAPPING STUDIE, P20
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Calefato F, 2016, EMPIR SOFTW ENG, V21, P1002, DOI 10.1007/s10664-015-9372-x
   Çalikli G, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P51, DOI 10.1145/3202710.3203156
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Cao LB, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3076253
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen WJ, 2014, IEEE ANTENNAS PROP, P689, DOI 10.1109/APS.2014.6904675
   Choetkiertikul M, 2018, IEEE T SOFTWARE ENG, V44, P551, DOI 10.1109/TSE.2017.2693989
   Choetkiertikul M, 2017, EMPIR SOFTW ENG, V22, P1223, DOI 10.1007/s10664-016-9496-7
   Conoscenti M, 2019, J SYST SOFTWARE, V156, P126, DOI 10.1016/j.jss.2019.06.075
   Czekster RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2955093
   Czerwonka J, 2013, IEEE SOFTWARE, V30, P64, DOI 10.1109/MS.2013.68
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P835, DOI 10.1007/s10664-017-9548-7
   Dalpiaz F, 2019, INFORM SOFTWARE TECH, V110, P3, DOI 10.1016/j.infsof.2018.12.007
   Dam Hoa Khanh, 2018, ARXIV181210578
   Dehghan A, 2017, IEEE WORK CONF MIN S, P124, DOI 10.1109/MSR.2017.53
   Destefanis G, 2016, INT WORKS EMERG TREN, P22, DOI 10.1109/WETSoM.2016.012
   Didar Al Alam S. M., 2016, 2016 IEEE/ACM 5th International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE). Proceedings, P15, DOI 10.1109/RAISE.2016.011
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Dong Qiu, 2015, ACM Computing Surveys, V47, DOI 10.1145/2631685
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ebert C, 2019, IEEE SOFTWARE, V36, P66, DOI 10.1109/MS.2019.2933681
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Fabijan A, 2017, PROC INT CONF SOFTW, P770, DOI 10.1109/ICSE.2017.76
   Fitzgerald B, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P93, DOI 10.1145/2591062.2591190
   Freire A, 2018, INFORM SOFTWARE TECH, V100, P119, DOI 10.1016/j.infsof.2018.04.004
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   García J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3106237.3117772
   Golfarelli M, 2013, J SYST SOFTWARE, V86, P2357, DOI 10.1016/j.jss.2013.04.028
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Habayeb M, 2018, IEEE T SOFTWARE ENG, V44, P1224, DOI 10.1109/TSE.2017.2757480
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Heikkilä VT, 2015, INFORM SOFTWARE TECH, V57, P116, DOI 10.1016/j.infsof.2014.09.005
   Hoda R, 2017, INFORM SOFTWARE TECH, V85, P60, DOI 10.1016/j.infsof.2017.01.007
   Hu G., 2018, APPFLOW USING MACHIN
   Hu H, 2014, IEEE ACCESS, V2, P652, DOI 10.1109/ACCESS.2014.2332453
   Huijgens H, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P866, DOI 10.1145/3106237.3117779
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Janssen M, 2017, J BUS RES, V70, P338, DOI 10.1016/j.jbusres.2016.08.007
   Johanssen J.O., 2018, PROFES
   Karim MR, 2016, IEEE-ACM INT WKSP CO, P7, DOI [10.1145/2896839.2896845, 10.1109/CESI.2016.012]
   Kitchenham B., 2007, EBSE20071 SCH COMP S
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kortum F, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P34, DOI 10.1109/ICSSP.2019.00015
   Kupiainen E, 2015, INFORM SOFTWARE TECH, V62, P143, DOI 10.1016/j.infsof.2015.02.005
   Laanti M, 2011, INFORM SOFTWARE TECH, V53, P276, DOI 10.1016/j.infsof.2010.11.010
   Larson D, 2016, INT J INFORM MANAGE, V36, P700, DOI 10.1016/j.ijinfomgt.2016.04.013
   Liechti O, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TESTING (AST), P9, DOI 10.1109/AST.2017.3
   Lin J, 2013, IEEE INT CONF AUTOM, P758, DOI 10.1109/ASE.2013.6693151
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Lunesu MI, 2018, INFORM SOFTWARE TECH, V103, P226, DOI 10.1016/j.infsof.2018.07.004
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Maddila C.S., 2019, P 2019 27 ACM JOINT
   Malgonde O, 2019, EMPIR SOFTW ENG, V24, P1017, DOI 10.1007/s10664-018-9647-0
   Manzano M., 2018, PROMISE
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Meidan A, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3186888
   Menzies T, 2018, IEEE SOFTWARE, V35, P64, DOI 10.1109/MS.2018.290111035
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Menzies T, 2012, PROC INT CONF SOFTW, P1032, DOI 10.1109/ICSE.2012.6227117
   Mottos DI, 2019, INFORM SOFTWARE TECH, V113, P68, DOI 10.1016/j.infsof.2019.05.004
   Nayebi M, 2019, IEEE T SOFTWARE ENG, V45, P839, DOI 10.1109/TSE.2018.2810895
   Olsson HH, 2014, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2014.75
   Paasivaara M, 2018, EMPIR SOFTW ENG, V23, P2550, DOI 10.1007/s10664-017-9555-8
   Pareto L, 2012, J SYST SOFTWARE, V85, P1971, DOI 10.1016/j.jss.2012.04.054
   Partanen J., 2019, 2019 ACM IEEE INT S, P1
   Paz F., 2014, ESEM
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Philip AA, 2019, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2019.00054
   Pietrantuono R, 2019, INT WORKSH AUTOMAT, P21, DOI 10.1109/AST.2019.00009
   Pospieszny P, 2018, J SYST SOFTWARE, V137, P184, DOI 10.1016/j.jss.2017.11.066
   Provost F, 2013, BIG DATA, V1, P51, DOI 10.1089/big.2013.1508
   Ramaki AA, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3184898
   Robbes R, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2013.92
   Rocha T, 2019, J SYST SOFTWARE, V154, P176, DOI 10.1016/j.jss.2019.04.060
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Rodrigues DS, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182659
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Sahaf Z., 2014, PROC INT C SOFTW SYS, P149, DOI [10.1145/2600821.2600832, DOI 10.1145/2600821.2600832]
   Scheerer A, 2015, P ANN HICSS, P5124, DOI 10.1109/HICSS.2015.606
   Schermann G, 2018, PROC IEEE INT CONF S, P485, DOI 10.1109/ICSME.2018.00059
   Scott E., 2018, ICSSP
   Sharma VS, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1214, DOI 10.1109/ASE.2019.00142
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Snyder B, 2018, IEEE SOFTWARE, V35, P78, DOI 10.1109/MS.2017.4541032
   Souza R, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.30
   Staron Miroslaw, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P3, DOI 10.1007/978-3-642-21843-9_3
   Sulun E., 2019, P 15 INT C PRED MOD
   Svensson RB, 2019, LECT NOTES BUS INF P, V355, P69, DOI 10.1007/978-3-030-19034-7_5
   Szoke A, 2011, INFORM SOFTWARE TECH, V53, P574, DOI 10.1016/j.infsof.2011.01.008
   Torrecilla-Salinas CJ, 2015, INFORM SOFTWARE TECH, V61, P124, DOI 10.1016/j.infsof.2015.01.006
   Tüzün E, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P115, DOI 10.1109/ICSSP.2019.00023
   Vargas EL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P21, DOI 10.1145/3183399.3183416
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   VERSIONONE, 2018, 12th annual State of Agile report
   Winter J., 2019, P 2019 27 ACM JOINT
   Wnuk K, 2016, IEEE T SOFTWARE ENG, V42, P47, DOI 10.1109/TSE.2015.2445347
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916006
   Xiao L, 2018, IEEE SOFTWARE, V35, P64, DOI 10.1109/MS.2017.4541052
   Yu Z, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/3338906.3340448
   Zhang DM, 2013, IEEE SOFTWARE, V30, P30, DOI 10.1109/MS.2013.94
   Zhang JZ, 2019, INFORM SOFTWARE TECH, V108, P30, DOI 10.1016/j.infsof.2018.12.002
NR 138
TC 19
Z9 19
U1 9
U2 48
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2021
VL 132
AR 106448
DI 10.1016/j.infsof.2020.106448
EA JAN 2021
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QB6LA
UT WOS:000614249900007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Salaou, AD
   Damian, D
   Lassenius, C
   Voda, D
   Gançarski, P
AF Salaou, Abdoul-Djawadou
   Damian, Daniela
   Lassenius, Casper
   Voda, Dragos
   Gancarski, Pierre
TI Archetypes of delay: An analysis of online developer conversations on
   delayed work items in IBM Jazz
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Text analysis; Software engineering; Agile development; Categorical time
   series; Clustering; Thematic analysis; Task completion; Iteration
   completion; Repository mining; Jazz repository
ID K-MEANS; TIME; CLASSIFICATION
AB Context. A widely adopted methodology, agile software development provides enhanced flexibility to actively adjust a project scope. In agile teams, particularly in distributed environment, developers interact, manage requirements knowledge, and coordinate primarily in online collaboration tools. Developer conversations become invaluable sources to track and understand developers' interactions around implementation of requirements, as well as the progress of implementation relative to the project scope and the planned iterations in agile projects. Although extensive research around iteration planning exists, there is a lack of research that leverages developer conversation data to understand delays in implementing planned requirements in agile projects.
   Objective. By using developer conversations in a large agile project at IBM, this work aims to analyze conversation in work items (WIs) that are delayed and derive patterns that suggest reasons for delay in the project.
   Method. We conducted a case study of the IBM Jazz project, and used thematic analysis to code the developer conversations as time-series, and cluster analysis to identify patterns that differentiated the evolution of discussions in WIs that were late vs. not late in the project.
   Results. We identified six main patterns of WI delay. Through semantic analysis of developer conversations within particular clusters we were able to explain the reasons for delays in each pattern. In comparison to non-late WIs, we find that the major reason for delay is a lack of frequent communication associated with a poor project management of WIs. Similarly, non-late tasks more often delegate to children tasks to accelerate the implementation of requirements, in addition to processing requests quickly to resolve bottlenecks in implementation.
   Conclusion. Our study complements existing research in bringing evidence that developer conversations are a useful resource that can highlight delays in requirement implementation, as well as recommend patterns in the dynamics of developers interactions relevant to such delays.
C1 [Salaou, Abdoul-Djawadou; Damian, Daniela] Univ Victoria, SEGAL Lab, Victoria, BC, Canada.
   [Salaou, Abdoul-Djawadou; Gancarski, Pierre] Univ Strasbourg, ICube Lab, Strasbourg, France.
   [Lassenius, Casper; Voda, Dragos] Aalto Univ, Espoo, Finland.
   [Lassenius, Casper] Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
C3 University of Victoria; Universites de Strasbourg Etablissements
   Associes; Universite de Strasbourg; Aalto University
RP Salaou, AD (corresponding author), Univ Strasbourg, ICube Lab, Strasbourg, France.
EM adsalaou@unistra.fr; Daniela.damian@uvic.ca; casper.lassenius@aalto.fi;
   dragos.voda@aalto.fi; gancarski@unistra.fr
RI Lassenius, Casper C/A-4339-2013
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX LWe acknowledge the support of the Natural Sciences and Engineering
   Research Council of Canada (NSERC).
CR Amasaki S, 2005, SOFTWARE QUAL J, V13, P177, DOI 10.1007/s11219-005-6216-8
   Amin A, 2013, J SYST SOFTWARE, V86, P1923, DOI 10.1016/j.jss.2013.03.045
   [Anonymous], 2017, ARXIV170405742
   [Anonymous], 2017, The scrum guide: the definitive guide to scrum
   [Anonymous], 2010, P 19 INT C WORLD WID
   [Anonymous], 1994, FAST SUBSEQUENCE MAT
   Arora P, 2016, PROCEDIA COMPUT SCI, V78, P507, DOI 10.1016/j.procs.2016.02.095
   Bar-Joseph Z, 2004, BIOINFORMATICS, V20, P2493, DOI 10.1093/bioinformatics/bth283
   Beck K., 2001, Agile manifesto
   Berndt D.J., 1994, AAAI 94 WORKSH KNOWL, V10, P359, DOI [10.5555/3000850.3000887, DOI 10.5555/3000850.3000887]
   Bicer S., 2011, Proceedings of International Conference on Software and Systems Process, P63
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Choetkiertikul M, 2018, IEEE T SOFTWARE ENG, V44, P551, DOI 10.1109/TSE.2017.2693989
   Choetkiertikul M, 2017, EMPIR SOFTW ENG, V22, P1223, DOI 10.1007/s10664-016-9496-7
   Clair RP, 2008, WHY WORK: THE PERCEPTIONS OF A REAL JOB AND THE RHETORIC OF WORK THROUGH THE AGES, P1
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Datta S, 2012, ACM SIGPLAN NOTICES, V47, P655, DOI 10.1145/2398857.2384664
   Dehghan A, 2017, IEEE WORK CONF MIN S, P124, DOI 10.1109/MSR.2017.53
   DeSantis L, 2000, WESTERN J NURS RES, V22, P351, DOI 10.1177/019394590002200308
   Didar Al Alam S. M., 2016, 2016 IEEE/ACM 5th International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE). Proceedings, P15, DOI 10.1109/RAISE.2016.011
   Ernst J, 2005, BIOINFORMATICS, V21, pI159, DOI 10.1093/bioinformatics/bti1022
   Esling P, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379788
   Fereday J., 2006, INT J QUAL METH, V5, P80, DOI [10.1177/160940690600500107, DOI 10.1177/160940690600500107]
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   Fu TC, 2011, ENG APPL ARTIF INTEL, V24, P164, DOI 10.1016/j.engappai.2010.09.007
   Gat I., 2010, AGIL PROD PROJ MANAG, V11
   Halkidi M, 2001, J INTELL INF SYST, V17, P107, DOI 10.1023/A:1012801612483
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hay I., 2000, QUALITATIVE RES METH
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Huang YP, 2007, EXPERT SYST APPL, V33, P199, DOI 10.1016/j.eswa.2006.04.022
   Izakian H, 2015, ENG APPL ARTIF INTEL, V39, P235, DOI 10.1016/j.engappai.2014.12.015
   Karvonen T, 2017, INFORM SOFTWARE TECH, V86, P87, DOI 10.1016/j.infsof.2017.01.009
   Kavaler D, 2017, IEEE INT CONF AUTOM, P72, DOI 10.1109/ASE.2017.8115620
   Kim HD, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P885, DOI 10.1145/2505515.2505612
   Knauss E, 2015, REQUIR ENG, V20, P383, DOI 10.1007/s00766-014-0205-z
   Kraemer H.C., 2014, Wiley StatsRef: Statistics reference online, P1
   Kyung-A Yoon, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P443
   Li D, 2002, IEEE SIGNAL PROC MAG, V19, P17, DOI 10.1109/79.985674
   Licorish Sherlock A., 2017, INF SOFTW TECHNOL
   Likas A, 2003, PATTERN RECOGN, V36, P451, DOI 10.1016/S0031-3203(02)00060-2
   Mcfedries P, 2017, IEEE SPECTRUM, V54, P21, DOI 10.1109/MSPEC.2017.7934225
   Mcgee M, 2012, J PROBAB STAT, V2012, DOI 10.1155/2012/417393
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Muda Lindasalwa, 2010, Voice recognition algorithms using mel frequency cepstral coefficient (mfcc) and dynamic time warping (dtw) techniques
   Niennattrakul V, 2007, MUE: 2007 INTERNATIONAL CONFERENCE ON MULTIMEDIA AND UBIQUITOUS ENGINEERING, PROCEEDINGS, P733
   Paparrizos J, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1855, DOI 10.1145/2723372.2737793
   Parkinson C.N., 1958, Parkinson's law, or the pursuit of progress
   Petitjean F, 2011, PATTERN RECOGN, V44, P678, DOI 10.1016/j.patcog.2010.09.013
   Power K, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P28, DOI 10.1109/MTD.2013.6608675
   Pranckevicius T, 2017, BALT J MOD COMPUT, V5, P221, DOI 10.22364/bjmc.2017.5.2.05
   Raja U., 2011, J SOFTW ENG APPL, V4, P497
   Ratanamahatana CA, 2004, SIAM PROC S, P11
   Richter C, 2015, IEEE CONF VIS ANAL, P213, DOI 10.1109/VAST.2015.7347684
   Rodrigues PP, 2008, IEEE T KNOWL DATA EN, V20, P615, DOI 10.1109/TKDE.2007.190727
   Romesburg C., 2004, CLUSTER ANAL RES
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Smith J. A., 2015, Qualitative psychology: A practical guide to research methods
   Sterling C., 2011, MANAGING SOFTWARE DE
   Vaismoradi M, 2013, NURS HEALTH SCI, V15, P398, DOI 10.1111/nhs.12048
   Wang Jun, 2013, SLPAT 2013
   Weigend AS, 2018, SANTAFE TIME SERIES
   Weinmann M, 2016, BUS INFORM SYST ENG+, V58, P433, DOI 10.1007/s12599-016-0453-1
   Weiss CH, 2012, QUAL TECHNOL QUANT M, V9, P171, DOI 10.1080/16843703.2012.11673284
   Weiss G.M., 2004, ACM SIGKDD Explorations Newsletter, V6, DOI DOI 10.1145/1007730.1007734
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Ye N, 2002, IEEE T COMPUT, V51, P810, DOI 10.1109/TC.2002.1017701
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
   Zhong S, 2004, IEEE INTELL SYST, V19, P20, DOI 10.1109/MIS.2004.1274907
NR 71
TC 0
Z9 0
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2021
VL 129
AR 106435
DI 10.1016/j.infsof.2020.106435
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI7BA
UT WOS:000583428200012
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Kim, Y
   Lee, D
   Baek, J
   Kim, M
AF Kim, Yunho
   Lee, Dongju
   Baek, Junki
   Kim, Moonzoo
TI MAESTRO: Automated test generation framework for high test coverage and
   reduced human effort in automotive industry
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Automated test generation; Concolic testing; Fuzzing; Automotive
   software; Coverage testing
AB Context: The importance of automotive software has been rapidly increasing because software controls many components of motor vehicles such as smart-key system, fire pressure monitoring system, and advanced driver assistance system. Consequently, the automotive industry spends a large amount of human effort to test automotive software and is interested in automated testing techniques to ensure high-quality automotive software with reduced human effort.
   Objective: Applying automated test generation techniques to automotive software is technically challenging because of false alarms caused by imprecise test drivers/stubs and lack of tool supports for symbolic analysis of bit-fields and function pointers in C. To address such challenges, we have developed an automated testing framework MAESTRO.
   Method: MAESTRO automatically builds a test driver and stubs for a target task (i.e., a software unit consisting of target functions). Then, it generates test inputs to a target task with the test driver and stubs by applying concolic testing and fuzzing together in an adaptive way. In addition, MAESTRO transforms a target program that uses bitfields into a semantically equivalent one that does not use bit-fields. Also, MAESTRO supports symbolic function pointers by identifying the candidate functions of a symbolic function pointer through static analysis.
   Results: MAESTRO achieved 94.2% branch coverage and 82.3% MC/DC coverage on the four target modules (238 KLOC) developed by Hyundai Mobis. Furthermore, it significantly reduced the cost of coverage testing by reducing the manual effort for coverage testing by 58.8%.
   Conclusion: By applying automated testing techniques, MAESTRO can achieve high test coverage for automotive software with significantly reduced manual testing effort.
C1 [Kim, Yunho; Kim, Moonzoo] Korea Adv Inst Sci & Technol, 291 Daehak Ro, Daejeon 34141, South Korea.
   [Lee, Dongju; Baek, Junki] Hyundai Mobis, 17-2 Mabuk Ro, Yongin 16891, Gyeonggi Do, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Hyundai Mobis
RP Kim, M (corresponding author), Korea Adv Inst Sci & Technol, 291 Daehak Ro, Daejeon 34141, South Korea.
EM dongju.lee@mobis.co.kr; jk.baek@mobis.co.kr; moonzoo@cs.kaist.ac.kr
FU Next-Generation Information Computing Development Program through NRF -
   MSIT [NRF2017M3C4A7068177]; Basic Science Research Program through NRF -
   MSIT [NRF-2019R1A2B5B01069865]; Basic Science Research Program through
   NRF - Ministry of Education [NRF2017R1D1A1B03035851]; Hyundai Mobis
FX We thank Ahcheong Lee and Hyunwoo Kim for their initial effort of
   applying MAESTRO to IBU. This research has been supported by Hyundai
   Mobis, Next-Generation Information Computing Development Program through
   NRF funded by MSIT (No. NRF2017M3C4A7068177), Basic Science Research
   Program through NRF funded by MSIT (NRF-2019R1A2B5B01069865), and Basic
   Science Research Program through NRF funded by the Ministry of Education
   (NRF2017R1D1A1B03035851).
CR [Anonymous], 2012, INT S SOFTWARE TESTI
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2008, P OSDI
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 2017, NDSS
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Broy M, 2007, P IEEE, V95, P356, DOI 10.1109/JPROC.2006.888386
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Choi Y, 2018, J SYST SOFTWARE, V137, P563, DOI 10.1016/j.jss.2017.07.040
   Cummins C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P95, DOI 10.1145/3213846.3213848
   Falcini F, 2017, IEEE SOFTWARE, V34, P56, DOI 10.1109/MS.2017.79
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Godboley S, 2018, COMPUT STAND INTER, V59, P61, DOI 10.1016/j.csi.2018.02.005
   Godboley S, 2018, COMPUT STAND INTER, V55, P27, DOI 10.1016/j.csi.2017.04.003
   Godboley S, 2017, SOFTWARE PRACT EXPER, V47, P311, DOI 10.1002/spe.2405
   Godboley S, 2017, COMPUT STAND INTER, V50, P1, DOI 10.1016/j.csi.2016.09.006
   Godboley S, 2016, INNOV SYST SOFTW ENG, V12, P319, DOI 10.1007/s11334-016-0284-8
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 2008, PLDI
   Khurshid Sarfraz., 2003, TACAS
   Kim M, 2012, FORM ASP COMPUT, V24, P355, DOI 10.1007/s00165-011-0200-9
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Li G., 2011, CAV
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Pailoor S, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P729
   Park Y, 2015, 2015 IEEE MAGNETICS CONFERENCE (INTERMAG)
   Pasareanu C.S., 2008, ISSTA
   Ramos DA, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P49
   SEN K., 2006, CAV
   Serebryany K, 2016, 2016 IEEE CYBERSECURITY DEVELOPMENT (IEEE SECDEV 2016), P157, DOI [10.1109/SecDev.2016.043, 10.1109/SecDev.2016.32]
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Traub M, 2017, IEEE SOFTWARE, V34, P27, DOI 10.1109/MS.2017.69
   VISSER W., 2000, ASE
   Whalen MW, 2016, IEEE SOFTWARE, V33, P22, DOI 10.1109/MS.2016.94
   Zalewski M., 2017, AM FUZZY LOP AFL FUZ
NR 59
TC 3
Z9 3
U1 3
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2020
VL 123
AR 106221
DI 10.1016/j.infsof.2019.106221
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LK1XD
UT WOS:000530651200009
DA 2024-07-18
ER

PT J
AU Cai, HP
   Fu, XQ
   Hamou-Lhadj, A
AF Cai, Haipeng
   Fu, Xiaoqin
   Hamou-Lhadj, Abdelwahab
TI A study of run-time behavioral evolution of benign versus malicious apps
   in android
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android apps; Security; Execution; Evolution; Longitudinal study
AB Context: The constant evolution of the Android platform and its applications have imposed significant challenges both to understanding and securing the Android ecosystem. Yet, despite the growing body of relevant research, it remains unclear how Android apps evolve in terms of their run-time behaviors in ways that impede our gaining consistent empirical knowledge about the workings of the ecosystem and developing effective technical solutions to defending it against security threats. Intuitively, an essential step towards addressing these challenges is to first understand the evolution itself. Among others, one avenue to examining a program's run-time behavior is to dissect the program's execution in terms of its syntactic and semantic structure.
   Objective: In this paper, we study how benign Android apps execute differently from malware over time, in terms of their execution structures measured by the distribution and interaction among functionality scopes, app components, and callbacks. In doing so, we attempt to reveal how relevant app execution structure is to app security orientation (i.e., benign or malicious).
   Method: By tracing the method calls and inter-component communications (ICCs) of 15,451 benign apps and 15,183 malware developed during eight years (2010-2017), we systematically characterized the execution structure of malware versus benign apps and revealed similarities and disparities between them that are not previously known.
   Results: Our results show, among other findings, that (1) despite their similarity in execution distribution over functionality scopes, malware accessed framework functionalities mainly through third-party libraries, while benign apps were dominated by calls within the framework; (2) use of Activity component had been rising in malware while benign apps saw continuous drop in such uses; (3) malware invoked significantly more Services but less Content Providers than benign apps during the evolution of both groups; (4) malware carried ICC data significantly less often via standard data fields than benign apps, albeit both groups did not carry any data in most ICCs; and (5) newer malware tended to have more even distribution of callbacks among event-handler categories, while the distribution remained constant in benign apps over time.
   Conclusion: We discussed how these findings inform understanding app behaviors, optimizing static and dynamic code analysis of Android apps, and developing sustainable app security defense solutions.
C1 [Cai, Haipeng; Fu, Xiaoqin] Washington State Univ, Pullman, WA 99164 USA.
   [Hamou-Lhadj, Abdelwahab] Concordia Univ, Montreal, PQ, Canada.
C3 Washington State University; Concordia University - Canada
RP Cai, HP (corresponding author), Washington State Univ, Pullman, WA 99164 USA.
EM haipeng.cai@wsu.edu; xiaoqin.fu@wsu.edu; wahab.hamou-lhadj@concordia.ca
RI FU, XIAOQIN/J-9331-2016; Cai, Haipeng/K-7802-2015
OI Cai, Haipeng/0000-0002-5224-9970; Hamou-Lhadj,
   Abdelwahab/0000-0002-3319-5006
CR Aafer Y, 2013, L N INST COMP SCI SO, V127, P86
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Allix K, 2016, EMPIR SOFTW ENG, V21, P183, DOI 10.1007/s10664-014-9352-6
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Burguera I., 2011, P 1 ACM WORKSH SEC P, P15, DOI DOI 10.1145/2046614.2046619
   Cai H., 2019, IEEE T INF FORENS SE
   Cai H., 2019, ACM T SOFTW ENG METH
   Cai H., 2016, COMPUT SCI TECHN REP
   Cai H., 2017, SYSTEMATIC DYNAMIC C
   Cai HP, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P216, DOI 10.1145/3293882.3330564
   Cai HP, 2018, PROC IEEE ACM INT C, P350, DOI 10.1145/3183440.3195004
   Cai HP, 2017, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSME.2017.31
   Cai HP, 2017, PROC IEEE INT CONF S, P643, DOI 10.1109/ICSME.2017.35
   Cai Haipeng, 2018, ARXIV180708221
   Calciati P, 2018, IEEE WORK CONF MIN S, P142, DOI 10.1145/3196398.3196449
   Chen S, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P377, DOI 10.1145/2897845.2897860
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Enck W, 2011, P 20 USENIX C SEC SE, P2
   Faruki P, 2015, IEEE COMMUN SURV TUT, V17, P998, DOI 10.1109/COMST.2014.2386139
   Fu XQ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P272, DOI 10.1109/ICSE-Companion.2019.00110
   Galal Hisham Shehata, 2015, J COMPUTER VIROLOGY, V12, P1
   Grace M., 2012, P 10 INT C MOB SYST, P281
   He DJ, 2018, IEEE INT CONF AUTOM, P167, DOI 10.1145/3238147.3238185
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   I.D.C.I. Research, 2016, ANDR DOM MOB MARK
   Kolbitsch C, 2009, P 18 C USENIX SEC S, P351, DOI DOI 10.1093/MP/SSQ045
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Lindorfer Martina, 2014, 2014 Third International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (BADGERS). Proceedings, P3, DOI 10.1109/BADGERS.2014.7
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mariconti E, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23353
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mercaldo F, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1978
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Mohammed M., 2019, ACM SIGPLAN SIGBED I, P188
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Moser A, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P421, DOI 10.1109/ACSAC.2007.21
   Patel P, 2018, INT WORKSH AUTOMAT, P34, DOI 10.1145/3194733.3194742
   Rasthofer S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23039
   Rasthofer S, 2017, PROC INT CONF SOFTW, P300, DOI 10.1109/ICSE.2017.35
   Ren JJ, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23143
   Romano J., ANN M FLOR ASS I RES
   Saracino Andrea, 2018, IEEE Transactions on Dependable and Secure Computing, V15, P83, DOI 10.1109/TDSC.2016.2536605
   Shabtai A, 2012, J INTELL INF SYST, V38, P161, DOI 10.1007/s10844-010-0148-x
   Suarez-Tangil G, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P309, DOI 10.1145/3029806.3029825
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Tam K, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23145
   Taylor VF, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P45, DOI 10.1145/3052973.3052990
   Walpole RE., 2011, PROBABILITY STAT ENG, V9th
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wei XT, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P31
   Wei XT, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P137
   Wu DJ, 2012, ASIA JT CONF INF SEC, P62, DOI 10.1109/AsiaJCIS.2012.18
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xu K, 2016, IEEE T INF FOREN SEC, V11, P1252, DOI 10.1109/TIFS.2016.2523912
   Yan Y, 2016, IEEE T MOBILE COMPUT, V15, P2564, DOI 10.1109/TMC.2015.2499187
   Yang C, 2014, LECT NOTES COMPUT SC, V8712, P163, DOI 10.1007/978-3-319-11203-9_10
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Zhang M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1105, DOI 10.1145/2660267.2660359
   Zhang ZY, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P40, DOI 10.1109/MOBILESoft.2019.00016
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 63
TC 38
Z9 38
U1 5
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106291
DI 10.1016/j.infsof.2020.106291
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800011
DA 2024-07-18
ER

PT J
AU Capiluppi, A
   Di Ruscio, D
   Di Rocco, J
   Nguyen, PT
   Ajienka, N
AF Capiluppi, Andrea
   Di Ruscio, Davide
   Di Rocco, Juri
   Nguyen, Phuong T.
   Ajienka, Nemitari
TI Detecting Java software similarities by using different clustering
   techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE FOSS (Free and open-source software); Application Domains; Latent
   Dirichlet Allocation; Machine Learning; Expert Opinions; OO
   (object-oriented)
ID TEST SUITE REDUCTION; METRICS SUITE
AB Background: Research on empirical software engineering has increasingly been conducted by analysing and measuring vast amounts of software systems. Hundreds, thousands and even millions of systems have been (and are) considered by researchers, and often within the same study, in order to test theories, demonstrate approaches or run prediction models. A much less investigated aspect is whether the collected metrics might be context-specific, or whether systems should be better analysed in clusters.
   Objective: The objectives of this study are (i) to define a set of clustering techniques that might be used to group similar software systems, and (ii) to evaluate whether a suite of well-known object-oriented metrics is context-specific, and its values differ along the defined clusters.
   Method: We group software systems based on three different clustering techniques, and we collect the values of the metrics suite in each cluster. We then test whether clusters are statistically different between each other, using the Kolgomorov-Smirnov (KS) hypothesis testing.
   Results: Our results show that, for two of the used techniques, the KS null hypothesis (e.g., the clusters come from the same population) is rejected for most of the metrics chosen: the clusters that we extracted, based on application domains, show statistically different structural properties.
   Conclusions: The implications for researchers can be profound: metrics and their interpretation might be more sensitive to context than acknowledged so far, and application domains represent a promising filter to cluster similar systems.
C1 [Capiluppi, Andrea] Brunel Univ London, Dept Comp Sci, London, England.
   [Di Ruscio, Davide; Di Rocco, Juri; Nguyen, Phuong T.] Univ Aquila, Dept Informat Engn Comp Sci & Math, Laquila, Italy.
   [Ajienka, Nemitari] Edge Hill Univ, Dept Comp Sci, Ormskirk, England.
C3 Brunel University; University of L'Aquila; Edge Hill University
RP Capiluppi, A (corresponding author), Brunel Univ London, Dept Comp Sci, London, England.
EM andrea.capiluppi@brunel.ac.uk; davide.diruscio@univaq.it;
   juri.dirocco@univaq.it; phuong.nguyen@univaq.it;
   nemitari.ajienka@edgehill.ac.uk
RI Di Ruscio, Davide/AAG-4674-2020; Nguyen, Phuong/ABE-3890-2021;
   Capiluppi, Andrea/AGO-2961-2022; Ajienka, Nemitari/ABI-3639-2020; Di
   Rocco, Juri/HSE-7230-2023
OI Di Ruscio, Davide/0000-0002-5077-6793; Nguyen,
   Phuong/0000-0002-3666-4162; Capiluppi, Andrea/0000-0001-9469-6050; Di
   Rocco, Juri/0000-0002-7909-3902; Ajienka, Nemitari/0000-0002-8792-282X
FU European Union [732223]
FX The research described in this paper has been carried out as part of the
   CROSSMINER Project, which has received funding from the European Union's
   Horizon 2020 Research and Innovation Programme under Grant 732223
CR Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   Amelia Rizki, 2017, Journal of Software, V12, P315, DOI 10.17706/jsw.12.5.315-325
   [Anonymous], 2010, IEEE INT C SOFTW MAI
   [Anonymous], 2017, P 21 INT C EVALUATIO, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084287, DOI 10.1145/3084226.3084287]
   Asaduzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P516, DOI [10.1145/2901739.2903500, 10.1109/MSR.2016.068]
   Bao LF, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P37, DOI [10.1145/2901739.2901748, 10.1109/MSR.2016.014]
   Berkhin P, 2006, GROUPING MULTIDIMENSIONAL DATA: RECENT ADVANCES IN CLUSTERING, P25
   Bizer C, 2009, INT J SEMANT WEB INF, V5, P1, DOI 10.4018/jswis.2009081901
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Blondel VD, 2004, SIAM REV, V46, P647, DOI 10.1137/S0036144502415960
   Borges H, 2016, P 12 INT C PRED MOD, P1
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Burlet G, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P292, DOI 10.1109/MSR.2015.34
   Cabral B, 2007, LECT NOTES COMPUT SC, V4609, P151
   Callaú O, 2013, EMPIR SOFTW ENG, V18, P1156, DOI 10.1007/s10664-012-9203-2
   Capiluppi A., 2019, P 2 INT WORKSH SOFTW
   Chen N, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P305, DOI 10.1145/2684822.2685305
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Console R, 2007, SEISMOL RES LETT, V78, P49, DOI 10.1785/gssrl.78.1.49
   Crowston K., 2003, P 24 INT C INF SYST, P327
   de Souza LBL, 2013, IEEE WORK CONF MIN S, P217, DOI 10.1109/MSR.2013.6624030
   Deshpande A, 2008, INT FED INFO PROC, V275, P197
   Destefanis Giuseppe., 2014, Agile processes in software engineering and extreme programming. chapter Software Metrics in Agile Software: An Empirical Study, P157
   Evans WS, 2009, SOFTWARE QUAL J, V17, P309, DOI 10.1007/s11219-009-9074-y
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Flynt J.P., 2005, SOFTWARE ENG GAME DE
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   GLASS RL, 1995, IEEE SOFTWARE, V12, P63, DOI 10.1109/52.391837
   Guha S., 1998, CURE, P73, DOI DOI 10.1145/276305.276312
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Jeh G., 2002, PROC 8 ACM SIGKDD IN, P538
   JIANG J, 2017, EMPIR SOFTW ENG, V22, P547, DOI DOI 10.1007/s10664-016-9436-6
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Karus S., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories, P13
   Karypis G, 1999, COMPUTER, V32, P68, DOI 10.1109/2.781637
   Kaufman L., 2009, FINDING GROUPS DATA
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Khan SUR, 2016, INT J INFORM MANAGE, V36, P963, DOI 10.1016/j.ijinfomgt.2016.05.025
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kuhn A., 2005, 12 WORK C REV ENG WC
   Kulkarni U. L., 2010, Proceedings of the Third International Conference on Emerging Trends in Engineering and Technology (ICETET 2010), P646, DOI 10.1109/ICETET.2010.159
   Leitao AM, 2004, SOFTWARE QUAL J, V12, P361, DOI 10.1023/B:SQJO.0000039793.31052.72
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Lopes R.H., 2011, International Encyclopedia of Statistical Science, V1, P718
   Lorenz M., 1994, OBJECT ORIENTED SOFT, V131
   Maimon O., CLUSTERING METHODS, P321, DOI [10.1007/0-387-25465-X_15, DOI 10.1007/0-387-25465-X_15]
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Mori A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P41, DOI 10.1145/3194164.3194173
   Mustafa MW, 2010, IMCIC 2010: INTERNATIONAL MULTI-CONFERENCE ON COMPLEXITY, INFORMATICS AND CYBERNETICS, VOL I (POST-CONFERENCE EDITION), P41
   Nafi KW, 2018, IEEE INT WORK C SO, P139, DOI 10.1109/SCAM.2018.00023
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nakshatri S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P500, DOI [10.1145/2901739.2903499, 10.1109/MSR.2016.064]
   Ng RT, 2002, IEEE T KNOWL DATA EN, V14, P1003, DOI 10.1109/TKDE.2002.1033770
   Nguyen PT, 2020, SOFTWARE QUAL J, V28, P595, DOI 10.1007/s11219-019-09483-0
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen PT, 2018, EUROMICRO CONF PROC, P388, DOI 10.1109/SEAA.2018.00069
   Nguyen PT, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1477, DOI 10.1145/2740908.2742141
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Osman H, 2017, IEEE WORK CONF MIN S, P302, DOI 10.1109/MSR.2017.21
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Ragkhitwetsagul C, 2018, INT WORKS SOFTW CLON, P44, DOI 10.1109/IWSC.2018.8327318
   Ramos Juan, 1999, Using tf-idf to Determine Word Relevance in Document Queries
   Reshi J.A., 2019, J INF TECHNOL MANAG, V10, P41
   Rock, 1999, P 15 INT C DATA ENG, P512
   Sarwar B., 2001, P 10 INT C WORLD WID, P285, DOI 10.1145/371920.372071
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   Spinellis D, 2004, IEEE SOFTWARE, V21, P28, DOI 10.1109/MS.2004.1259204
   Steinbach M., 2000, 6 ACM SIGKDD WORLD T
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tiarks R, 2011, SOFTWARE QUAL J, V19, P295, DOI 10.1007/s11219-010-9115-6
   Coutinho AEVB, 2016, SOFTWARE QUAL J, V24, P407, DOI 10.1007/s11219-014-9265-z
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Von Luxburg U., 2012, P ICML WORKSH UNS TR, P65
   Walenstein A., 2006, SIMILARITY PROGRAMS
   Weisstein Eric W., 2004, Bonferroni correction
   Wermelinger M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P502, DOI 10.1109/MSR.2015.74
   Xu D., 2015, Annals of Data Science, V2, P165, DOI [DOI 10.1007/S40745-015-0040-1, 10.1007/s40745-015-0040-1]
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Zhang T, 1997, DATA MIN KNOWL DISC, V1, P141, DOI 10.1023/A:1009783824328
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
NR 92
TC 8
Z9 9
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2020
VL 122
AR 106279
DI 10.1016/j.infsof.2020.106279
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LC4TR
UT WOS:000525318800007
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Cadavid, H
   Andrikopoulos, V
   Avgeriou, P
AF Cadavid, Hector
   Andrikopoulos, Vasilios
   Avgeriou, Paris
TI Architecting systems of systems: A tertiary study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Systems of Systems; SoS Architecting; Tertiary study; Systematic
   literature review
ID SOFTWARE ARCHITECTURE; LITERATURE-REVIEWS; MODEL
AB Context: The term System of Systems (SoS) has increasingly been used in a wide variety of domains to describe those systems composed of independent constituent systems that collaborate towards a mission that they could not accomplish on their own. There is a significant volume of research by the software architecture community that aims to overcome the challenges involved in architecting SoS, as evidenced by the number of secondary studies in the field published so far. However, the boundaries of such research do not seem to be well defined, at least partially, due to the emergence of SoS-adjacent areas of interest like the Internet of Things.
   Objective: This paper aims to investigate the current state of research on SoS architecting by synthesizing the demographic data, assessing the quality and the coverage of architecting activities and software quality attributes by the research, and distilling a concept map that reflects a community-wide understanding of the concept of SoS.
   Method: We conduct what is, to the best of our understanding, the first tertiary study on SoS architecting. Such tertiary study was based on five research questions, and was performed by following the guidelines of Kitchenham et al. In all, 19 secondary studies were evaluated, which is comparable to other tertiary studies.
   Results: The study illustrates a state of disconnection in the research community, with research gaps in the coverage of particular phases and quality attributes. Furthermore, a more effective approach in classifying systems as SoS is required, as the means of resolving conceptual and terminological overlaps with the related domains.
   Conclusions: Despite the amount of research in the area of SoS architecting, more coordinated and systematic targeted efforts are required in order to address the identified issues with the current state of research.
C1 [Cadavid, Hector; Andrikopoulos, Vasilios; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Dept Comp Sci, Groningen, Netherlands.
C3 University of Groningen
RP Cadavid, H (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Dept Comp Sci, Groningen, Netherlands.
EM h.f.cadavid.rengifo@rug.nl; v.andrikopoulos@rug.nl; p.avgeriou@rug.nl
RI Andrikopoulos, Vasilios/IVH-6273-2023
OI Andrikopoulos, Vasilios/0000-0001-7937-0247; Avgeriou,
   Paris/0000-0002-7101-0754; Cadavid Rengifo, Hector
   Fabio/0000-0003-4965-4243
CR Abdalla G, 2015, P BRAZ SYMP SOFTW, P70, DOI 10.1109/SBCARS.2015.18
   Alfieri A, 2012, INT J TECHNOL MANAGE, V57, P149, DOI 10.1504/IJTM.2012.043956
   [Anonymous], 2014, ENABLING MANUFACTURI, DOI DOI 10.1007/978-3-319-02054
   [Anonymous], P INT C SOFTW ENG KN
   [Anonymous], TERTIARY STUDY MODEL
   [Anonymous], 2013, PROC INFORMATIK 2013
   [Anonymous], 2018, INF SOFTW TECHNOL
   [Anonymous], 2016 42 LAT AM COMP
   [Anonymous], 2011, P ECIS 2011 P 19 EUR
   [Anonymous], 2007, P 2014 EUR C SOFTW A, DOI DOI 10.1145/2642803.2642825
   [Anonymous], 2014, P 2014 EUR C SOFTW A, DOI DOI 10.1145/2642803.2642828
   [Anonymous], SYST C SYSCON 2018 A
   [Anonymous], 2018, SYSTEM SYSTEMS CHARA
   [Anonymous], 2017, IEEE SYST J
   [Anonymous], EMPIR SOFTW ENG NATL
   [Anonymous], 2009, Crosstalk
   Axelsson J, 2015, 2015 10th System of Systems Engineering Conference (SoSE), P18, DOI 10.1109/SYSOSE.2015.7151918
   Bandara W, 2015, COMMUN ASSOC INF SYS, V37, P154
   Barot V, 2013, 2013 8TH INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE), P7, DOI 10.1109/SYSoSE.2013.6575234
   Bianchi T, 2015, THIRD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS SESOS 2015, P23, DOI 10.1109/SESoS.2015.12
   Boardman J, 2006, PROCEEDINGS OF THE 2006 IEEE/SMC INTERNATIONAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING, P118
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Carvalho AMBR, 2016, I C DEPENDABLE SYST, P1, DOI 10.1109/DSN-W.2016.68
   Cavanagh S, 1997, Nurse Res, V4, P5, DOI 10.7748/nr.4.3.5.s2
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Curcio K, 2019, COMPUT STAND INTER, V64, P61, DOI 10.1016/j.csi.2018.12.003
   Daneshvar M., 2018, P 4 INT EN MAN TECHN 2018 12 INT C RES CH, P1, DOI DOI 10.1109/RCIS.2018.8406655
   Silva EDE, 2014, 2014 BRAZILIAN SYMPOSIUM ON COMPUTER NETWORKS AND DISTRIBUTED SYSTEMS (SBRC), P26, DOI 10.1109/SBRC.2014.4
   Diallo SY, 2016, J DEF MODEL SIMUL-AP, V13, P275, DOI 10.1177/1548512915621973
   Dixon-Woods Mary, 2005, J Health Serv Res Policy, V10, P45, DOI 10.1258/1355819052801804
   Feitosa D., 2018, Evaluation of Novel Approaches to Software Engineering, P243
   Gomes P, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P191, DOI 10.1109/SEAA.2015.51
   Gonçalves MB, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1411, DOI 10.1145/2695664.2695737
   Gonçcalves MB, 2014, IEEE SYS MAN CYBERN, P1605, DOI 10.1109/SMC.2014.6974145
   Gorod A, 2018, 2018 13TH ANNUAL CONFERENCE ON SYSTEM OF SYSTEMS ENGINEERING (SOSE), P556, DOI 10.1109/SYSOSE.2018.8428792
   Guessi M, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1433, DOI 10.1145/2695664.2695795
   Harrison NB, 2007, LECT NOTES COMPUT SC, V4758, P263
   Henshaw Michael J. de C., 2016, Insight, V19, P51
   Hofmeister C, 2007, J SYST SOFTWARE, V80, P106, DOI 10.1016/j.jss.2006.05.024
   ISO, 2011, IEC 25010: 2011 systems and software engineering-systems and software quality requirements and evaluation (square)-system and software quality models, V34, P2910
   Khan MU, 2019, J SYST SOFTWARE, V149, P396, DOI 10.1016/j.jss.2018.12.018
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Klein J, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON PRODUCT LINE APPROACHES IN SOFTWARE ENGINEERING (PLEASE), P1, DOI 10.1109/PLEASE.2013.6608653
   Lopes AJ, 2011, PROCEDIA COMPUT SCI, V6, DOI 10.1016/j.procs.2011.08.083
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Motta RC, 2017, 2017 IEEE/ACM JOINT 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS AND 11TH WORKSHOP ON DISTRIBUTED SOFTWARE DEVELOPMENT, SOFTWARE ECOSYSTEMS AND SYSTEMS-OF-SYSTEMS( JSOS 2017), P9, DOI 10.1109/JSOS.2017.5
   Nakagawa E.Y., 2013, P 1 INT WORKSH SOFTW, P13, DOI DOI 10.1145/2489850.2489853
   Novak J.D., 1995, Learning Science in the Schools: Research Reforming Practice, P229
   Papatheocharous E, 2015, LECT NOTES BUS INF P, V210, P81, DOI 10.1007/978-3-319-19593-3_7
   Peugeot T, 2017, COMPLEX SYSTEMS DESIGN & MANAGEMENT (CSD&M 2016), P29, DOI 10.1007/978-3-319-49103-5_3
   Raatikainen M, 2019, J SYST SOFTWARE, V149, P485, DOI 10.1016/j.jss.2018.12.027
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   Vargas IG, 2016, 2016 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SYSTEMS-OF-SYSTEMS (SESOS), P32, DOI [10.1109/SESoS.2016.014, 10.1145/2897829.2897835]
   Vierhauser M, 2016, INFORM SOFTWARE TECH, V80, P89, DOI 10.1016/j.infsof.2016.08.005
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wortmann A, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P281, DOI 10.1109/MODELS.2017.14
   Yang C, 2016, J SYST SOFTWARE, V111, P157, DOI 10.1016/j.jss.2015.09.028
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 62
TC 22
Z9 23
U1 1
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2020
VL 118
AR 106202
DI 10.1016/j.infsof.2019.106202
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JW2LV
UT WOS:000502890100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Yu, L
   Alégroth, E
   Chatzipetrou, P
   Gorschek, T
AF Yu, Liang
   Alegroth, Emil
   Chatzipetrou, Panagiota
   Gorschek, Tony
TI Utilising CI environment for efficient and effective testing of NFRs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile; Continuous integration; CI; DevOps; Non-functional requirement;
   NFR; Scaled agile framework; SAFe
ID CONTINUOUS INTEGRATION; SOFTWARE; CHALLENGES; DELIVERY; RELIABILITY;
   DEPLOYMENT; AGREEMENT
AB Context: Continuous integration (CI) is a practice that aims to continuously verify quality aspects of a software intensive system both for functional and non-functional requirements (NFRs). Functional requirements are the inputs of development and can be tested in isolation, utilising either manual or automated tests. In contrast, some NFRs are difficult to test without functionality, for NFRs are often aspects of functionality and express quality aspects. Lacking this testability attribute makes NFR testing complicated and, therefore, underrepresented in industrial practice. However, the emergence of CI has radically affected software development and created new avenues for software quality evaluation and quality information acquisition. Research has, consequently, been devoted to the utilisation of this additional information for more efficient and effective NFR verification.
   Objective: We aim to identify the state-of-the-art of utilising the CI environment for NFR testing, hereinafter referred to as CI-NFR testing.
   Method: Through rigorous selection, from an initial set of 747 papers, we identified 47 papers that describe how NFRs are tested in a CI environment. Evidence-based analysis, through coding, is performed on the identified papers in this SLR.
   Results: Firstly, ten CI approaches are described by the papers selected, each describing different tools and nine different NFRs where reported to be tested. Secondly, although possible, CI-NFR testing is associated with eight challenges that adversely affect its adoption. Thirdly, the identified CI-NFR testing processes are tool-driven, but there is a lack of NFR testing tools that can be used in the CI environment. Finally, we proposed a CI framework for NFRs testing.
   Conclusion: A synthesised CI framework is proposed for testing various NFRs, and associated CI tools are also mapped. This contribution is valuable as results of the study also show that CI-NFR testing can help improve the quality of NFR testing in practices.
C1 [Yu, Liang] Qvantel Sweden AB, Campus Grasvik 12, S-37180 Karlskrona, Sweden.
   [Yu, Liang; Alegroth, Emil; Gorschek, Tony] Blekinge Inst Technol, Karlskrona, Sweden.
   [Chatzipetrou, Panagiota] Orebro Univ Sch Business, Dept Informat, CERIS, SE-70182 Orebro, Sweden.
C3 Blekinge Institute Technology
RP Yu, L (corresponding author), Qvantel Sweden AB, Campus Grasvik 12, S-37180 Karlskrona, Sweden.
EM liang.yu@bth.se; emil.alegroth@bth.se; panagiota.chatzipetrou@oru.se;
   tony.gorschek@bth.se
RI Harrison, Dylan/AFP-8142-2022
OI Yu, Liang/0000-0001-5949-1375
FU KM foundation through the S.E.R.T. Research Profile project at Blekinge
   Institute of Technology
FX We would like to acknowledge that this work was supported by the KM
   foundation through the S.E.R.T. Research Profile project at Blekinge
   Institute of Technology.
CR Abreu R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P551, DOI 10.1109/ICSE.2015.192
   Agresti A., 2013, CATEGORICAL DATA ANA
   Altman DG, 1991, PRACTICAL STAT MED R
   [Anonymous], 2014, P 1 INT WORKSHOP MOD
   [Anonymous], P 1 INT WORKSH QUAL
   [Anonymous], COMP COMMERCIAL OPEN
   [Anonymous], P SCI WORKSH P XP201
   [Anonymous], 2016, P 10 ACM IEEE INT S
   [Anonymous], 2015, 2015 INT C PERVASIVE
   [Anonymous], P 10 ACM IEEE INT S
   [Anonymous], 2016, P 4 INT WORKSH REL E
   [Anonymous], 2015, PROC 1 INT WORKSHOP
   [Anonymous], 25021 ISOIEC
   Bougouffa S, 2017, IEEE INTL CONF IND I, P621, DOI 10.1109/INDIN.2017.8104843
   Chen LP, 2015, IEEE SOFTWARE, V32, P49
   Chia Hung Kao, 2017, 2017 International Conference on Applied System Innovation (ICASI). Proceedings, P1457, DOI 10.1109/ICASI.2017.7988191
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cois CA, 2014, IEEE INT PROF COMMUN
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Debbiche A, 2014, LECT NOTES COMPUT SC, V8892, P17, DOI 10.1007/978-3-319-13835-0_2
   Deissenboeck F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1007, DOI 10.1145/1985793.1985977
   Dlugi M, 2015, P 1 INT WORKSH QUAL, P25
   Dösinger S, 2012, IEEE INT CONF AUTOM, P374, DOI 10.1145/2351676.2351751
   Dowling Phelim, 2015, ACM Queue, V13, P20
   Ferme V, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P261, DOI 10.1145/3184407.3184417
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gwet KL, 2008, BRIT J MATH STAT PSY, V61, P29, DOI 10.1348/000711006X126600
   Hu JJ, 2014, 2014 INTERNATIONAL SYMPOSIUM ON COMPUTER, CONSUMER AND CONTROL (IS3C 2014), P13, DOI 10.1109/IS3C.2014.17
   Janes A, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P97, DOI 10.1145/3053600.3053618
   Janus Andre, 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P9, DOI 10.1109/WETSoM.2012.6226998
   Ki Y, 2009, IEEE INT CONF AUTOM, P525, DOI 10.1109/ASE.2009.73
   Ladányi G, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2015.7081819
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laukkanen E, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962608
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Mairiza D., 2010, P 2010 ACM S APPL CO, P311, DOI DOI 10.1145/1774088.1774153
   Merson P., 2013, 2013 C SYST PROGR AP, P153
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Nouacer R, 2016, MICROPROCESS MICROSY, V47, P252, DOI 10.1016/j.micpro.2016.07.020
   Ohtsuki H, 2016, ECOL RES MONOGR, P209, DOI 10.1007/978-4-431-56448-5_14
   OLSSON HH, 2014, CONTINUOUS SOFTWARE, P9, DOI DOI 10.1109/SEAA.2014.75
   Paixao KVR, 2017, IEEE WORK CONF MIN S, P479, DOI 10.1109/MSR.2017.33
   Preuveneers D, 2016, J SYST SOFTWARE, V116, P162, DOI 10.1016/j.jss.2015.12.024
   Rehmann Kim-Thomas, 2016, ACM SIGMETRICS Performance Evaluation Review, V43, P43, DOI 10.1145/2897356.2897362
   Robson C, 2011, REAL WORLD RES, V3
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rossi C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P12, DOI 10.1145/2950290.2994157
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Soni M, 2016, IEEE CONF CLOUD COMP, P85, DOI 10.1109/CCEM.2015.29
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Taryana A, 2017, 2017 INTERNATIONAL CONFERENCE ON SUSTAINABLE INFORMATION ENGINEERING AND TECHNOLOGY (SIET), P259, DOI 10.1109/SIET.2017.8304146
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vogel-Heuser B, 2015, J SYST SOFTWARE, V110, P54, DOI 10.1016/j.jss.2015.08.026
   Waller Jan, 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [10.1145/2735399, 10.1145/2735399.2735416]
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
NR 57
TC 10
Z9 10
U1 1
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2020
VL 117
AR 106199
DI 10.1016/j.infsof.2019.106199
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JN4MX
UT WOS:000496874400005
DA 2024-07-18
ER

PT J
AU Baig, JJA
   Mahmood, S
   Alshayeb, M
   Niazi, M
AF Baig, Jawad Javed Akbar
   Mahmood, Sajjad
   Alshayeb, Mohammad
   Niazi, Mahmood
TI Package-Level stability evaluation of object-oriented systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Object oriented package stability; Software metrics; Software stability;
   Software maintenance
ID DESIGN INSTABILITY; SOFTWARE; METRICS; MAINTAINABILITY; THRESHOLDS;
   EVOLUTION
AB Context: Software stability is an important object-oriented design characteristic that contributes to the maintainability quality attribute. Software stability quantifies a given systems sensitivity to change between different versions. Stable software tends to reduce the maintenance effort. Assessing software stability during the object-oriented design phase is one of the measures to obtain maintainable software. To determine software stability, there are several metrics at the architecture, system and class levels, but few studies have investigated stability at the package level.
   Objective: In this paper, we propose a new package stability metrics (PSM) based on the notion of change between package contents, intra-package connections and inter-package connections.
   Method: We validate the PSM theoretically and empirically. The theoretical validation is based on a study of the mathematical properties of the metrics. The empirical validation is carried out using five open source software programs and we also present a comparison with comparable existing stability metrics packages. For the empirical validation, we perform correlation analysis, principal component analysis and prediction analysis.
   Results: Correlation analysis shows that our proposed metrics provides a better indication of package stability than the existing stability metrics and they are negatively correlated with the maintenance effort. Principal component analysis shows that the proposed metrics captures new dimensions of package stability and helps to increase the maintenance prediction accuracy.
   Conclusion: We found there was a negative correlation between our metric and maintenance effort. We also found a positive correlation between the existing package stability metrics which are based on changes in lines of code and class names.
C1 [Baig, Jawad Javed Akbar; Mahmood, Sajjad; Alshayeb, Mohammad; Niazi, Mahmood] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals
RP Mahmood, S (corresponding author), King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
EM smahmood@kfupm.edu.sa
RI Niazi, Mahmood/C-8873-2015; Mahmood, Sajjad/B-2295-2010; Alshayeb,
   Mohammad/B-5941-2015
OI Mahmood, Sajjad/0000-0001-5786-5118; Alshayeb,
   Mohammad/0000-0001-7950-0099
FU Deanship of Scientific Research at King Fand University of Petroleum and
   Minerals, Saudi Arabia [IN161028]
FX The authors would like to acknowledge the support provided by the
   Deanship of Scientific Research at King Fand University of Petroleum and
   Minerals, Saudi Arabia under Research Grant IN161028. We also thank the
   reviewers for their valuable feedback that have greatly helped in
   improving the paper.
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Ahmed M., 2004, STABLE ANAL PATTERNS, V21
   Akram Z, 2016, DIS MARKERS, V2016, P1, DOI 10.1155/2016/4801418
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Alenezi M, 2016, INT J ADV COMPUT SC, V7, P550
   Alenezi M, 2015, INT J CLOUD APPL COM, V5, P24, DOI [10.4018/IJCAC.2015100102, 10.4018/ijcac.2015100102]
   Almugrin S, 2016, J SYST SOFTWARE, V121, P298, DOI 10.1016/j.jss.2016.02.024
   Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   Alshayeb M, 2011, IET SOFTW, V5, P415, DOI 10.1049/iet-sen.2010.0050
   Alshayeb M, 2014, ARAB J SCI ENG, V39, P7865, DOI 10.1007/s13369-014-1372-4
   Alshayeb M, 2013, IET SOFTW, V7, P339, DOI 10.1049/iet-sen.2013.0030
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2014, SOFTWARE METRICS RIG, DOI DOI 10.1201/B17461
   Aversano L., 2018, P HAW INT C SYST SCI, P1
   Aversano L, 2019, INT J SOFTW ENG KNOW, V29, P515, DOI 10.1142/S0218194019500220
   Aversano L, 2013, WORK CONF REVERSE EN, P417, DOI 10.1109/WCRE.2013.6671317
   Bansiya J., 2000, ACM Computing Surveys (CSUR), V32
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Becce G, 2012, LECT NOTES COMPUT SC, V7212, P347, DOI 10.1007/978-3-642-28872-2_24
   Berthold Michael R., 2009, SIGKDD Explor. Newsl., V11, P26, DOI [10.1145/1656274.1656280, DOI 10.1145/1656274.1656280, :10.1145/1656274.1656280]
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chong CY, 2015, J SYST SOFTWARE, V110, P28, DOI 10.1016/j.jss.2015.08.014
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Constantinou E, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1580, DOI 10.1145/2695664.2695895
   Ebad SA, 2015, IET SOFTW, V9, P76, DOI 10.1049/iet-sen.2014.0017
   Elish MO, 2015, SOFT COMPUT, V19, P2511, DOI 10.1007/s00500-014-1576-2
   Elish MO, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P193, DOI 10.1109/CSMR.2003.1192427
   Fayad M, 2002, COMMUN ACM, V45, P111
   Fayad M.E., 2001, Communications of the ACM, V44, P95
   Fayad ME, 2002, COMMUN ACM, V45, P109, DOI 10.1145/505248.505278
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Garland J., 1999, WORKSH ACC SOFTW STA
   Grosser D, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P252, DOI 10.1109/METRIC.2003.1232472
   Grosser D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P295, DOI 10.1109/ASE.2002.1115033
   Handani F., 2015, P INT C INF TECHN SY, P1
   Hassan Y., 2007, Measuring software architectural stability using retrospective analysis
   Hauke J, 2011, QUAEST GEOGR, V30, P87, DOI 10.2478/v10117-011-0021-1
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   Jazayeri M., ARCHITECTURAL STABIL, P13, DOI [10.1007/3-540-48046-3_2, DOI 10.1007/3-540-48046-3_2]
   Johari K., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2088883.2088893
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   KLEMA VC, 1980, IEEE T AUTOMAT CONTR, V25, P164, DOI 10.1109/TAC.1980.1102314
   Kozlov D., 2013, OPEN SOFTWARE ENG J, V7, P1
   Li W, 2000, INFORM SOFTWARE TECH, V42, P373, DOI 10.1016/S0950-5849(99)00088-9
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Martin R., 1997, TECHNICAL REPORT
   Mattsson M, 2000, J SOFTW MAINT-RES PR, V12, P79, DOI 10.1002/(SICI)1096-908X(200003/04)12:2<79::AID-SMR204>3.0.CO;2-A
   Nassif AB, 2013, J SYST SOFTWARE, V86, P144, DOI 10.1016/j.jss.2012.07.050
   Olague HM, 2006, J SOFTW MAINT EVOL-R, V18, P237, DOI 10.1002/smr.332
   Panda AK, 2017, FINANC INNOV, V3, DOI 10.1186/s40854-016-0051-8
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Rufiange S, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P137, DOI 10.1109/VISSOFT.2014.30
   Rufiange S, 2014, J SYST SOFTWARE, V88, P231, DOI 10.1016/j.jss.2013.10.044
   Sethi K, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P269, DOI 10.1109/WICSA.2009.5290817
   Shatnawi R, 2015, J SOFTW-EVOL PROC, V27, P95, DOI 10.1002/smr.1702
   Soong N., 1977, P ACM ANN C, P163
   Sousa Bruno L, 2017, 13 BRAZ S INF SYST S, V396
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   Zou KH, 2003, RADIOLOGY, V227, P617, DOI 10.1148/radiol.2273011499
NR 64
TC 5
Z9 5
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2019
VL 116
AR 106172
DI 10.1016/j.infsof.2019.08.004
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JM6SN
UT WOS:000496342000005
DA 2024-07-18
ER

PT J
AU Balera, JM
   de Santiago, VA
AF Balera, Juliana Marino
   de Santiago Junior, Valdivino Alexandre
TI A systematic mapping addressing Hyper-Heuristics within Search-based
   Software Testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Search-based Software Testing; Hyper-heuristics; Systematic Mapping;
   Evolutionary Algorithms; Genetic Algorithms; Meta-heuristics
ID GENETIC ALGORITHM; GENERATION; STRATEGY; SWARM
AB Context: Search-based Software Testing (SBST) is a research field where testing a software product is formulated as an optimization problem. It is an active sub-area of Search-based Software Engineering (SBSE) where many studies have been published and some reviews have been carried out. The majority of studies in SBST has been adopted meta-heuristics while hyper-heuristics have a long way to go. Moreover, there is still a lack of studies to perceive the state-of-the-art of the use of hyper-heuristics within SBST.
   Objective: The objective of this work is to investigate the adoption of hyper-heuristics for Software Testing highlighting the current efforts and identifying new research directions.
   Method: A Systematic mapping study was carried out with 5 research questions considering papers published up to may/2019, and 4 different bases. The research questions aims to find out, among other things, what are the hyper-heuristics used in the context of Software Testing, for what problems hyper-heuristics have been applied, and what are the objective functions in the scope of Software Testing.
   Results: A total of 734 studies were found via the search strings and 164 articles were related to Software Testing. However, from these, only 26 papers were actually in accordance with the scope of this research and 3 more papers were considered due to snowballing or expert's suggestion, totalizing 29 selected papers. Few different problems and application domains where hyper-heuristics have been considered were identified.
   Conclusion: Differently from other communities (Operational Research, Artificial Intelligence), SBST has little explored the benefits of hyper-heuristics which include generalization and less difficulty in parameterization. Hence, it is important to further investigate this area in order to alleviate the effort of practitioners to use such an approach in their testing activities.
C1 [Balera, Juliana Marino; de Santiago Junior, Valdivino Alexandre] INPE, Lab Associado Computacao & Matemat Aplicada LABAC, Av Astronautas 1758, BR-12227010 Sao Jose Dos Campos, SP, Brazil.
   [de Santiago Junior, Valdivino Alexandre] Univ Nottingham, Sch Comp Sci, Jubilee Campus,Wollaton Rd, Nottingham NG8 1BB, England.
C3 Instituto Nacional de Pesquisas Espaciais (INPE); University of
   Nottingham
RP Balera, JM (corresponding author), INPE, Lab Associado Computacao & Matemat Aplicada LABAC, Av Astronautas 1758, BR-12227010 Sao Jose Dos Campos, SP, Brazil.
EM juliana.balera@inpe.br; valdivino.santiago@inpe.br
RI Santiago Junior, Valdivino Alexandre de/C-7309-2016
OI Santiago Junior, Valdivino Alexandre de/0000-0002-4277-021X
FU Coordenac do de Aperfeigoamento de Pessoal de NIvel Superior
   (CAPES)/Brazil; Fundagdo de Amparo d Pesquisa do Estado de Stio Paulo
   (FAPESP)/Brazil [2018/083728]
FX This work was supported by Coordenac do de Aperfeigoamento de Pessoal de
   NIvel Superior (CAPES)/Brazil, and Fundagdo de Amparo d Pesquisa do
   Estado de Stio Paulo (FAPESP)/Brazil [process number: 2018/083728].
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahmed BS, 2017, INFORM SOFTWARE TECH, V86, P20, DOI 10.1016/j.infsof.2017.02.004
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], HDB RES SYNTHESIS
   Arora V, 2016, CONCURR COMP-PRACT E, V28, P1572, DOI 10.1002/cpe.3711
   Asoudeh N, 2014, PROC INT SYMP SOFTW, P288, DOI 10.1109/ISSRE.2014.14
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Bian Y, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1992
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Burke EK, 2013, J OPER RES SOC, V64, P1695, DOI 10.1057/jors.2013.71
   Burke EK, 2010, INT SER OPER RES MAN, V146, P449, DOI 10.1007/978-1-4419-1665-5_15
   Cha S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1244, DOI 10.1145/3180155.3180166
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chung L., NONFUNCTIONAL REQUIR, P363, DOI [10.1007/978-3-642-02463-419, DOI 10.1007/978-3-642-02463-419]
   Cohen MB, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P47, DOI 10.1109/SBST.2017.2
   Cowling P, 2001, LECT NOTES COMPUT SC, V2079, P176
   De Carvalho V. R., 2015, 6 WORKSH ENG SOFTW B, P1
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Díaz E, 2008, COMPUT OPER RES, V35, P3052, DOI 10.1016/j.cor.2007.01.009
   Din F, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P85, DOI 10.1109/QRS-C.2017.22
   Ferreira TD, 2016, IEEE C EVOL COMPUTAT, P4135, DOI 10.1109/CEC.2016.7744315
   Ferreira TN, 2017, IEEE COMPUT INTELL M, V12, P34, DOI 10.1109/MCI.2017.2670461
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Filho H., 2018, MULTIPLE OBJECTIVE T, P162, DOI [10.1145/3266237.3266275, DOI 10.1145/3266237.3266275]
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fredericks EM, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P59, DOI 10.1145/3194718.3194726
   García-Villoria A, 2011, EUR J OPER RES, V211, P160, DOI 10.1016/j.ejor.2010.12.005
   Garrido P, 2010, J HEURISTICS, V16, P795, DOI 10.1007/s10732-010-9126-2
   Gonzalez-Hernandez L, 2010, LECT NOTES COMPUT SC, V6508, P51, DOI 10.1007/978-3-642-17458-2_6
   Guizzo G., 2015, 6 WORKSH ENG SOFTW B, P11
   Guizzo G, 2020, NAT COMPUT, V19, P481, DOI 10.1007/s11047-018-9677-y
   Guizzo G, 2017, LECT NOTES COMPUT SC, V10452, P168, DOI 10.1007/978-3-319-66299-2_15
   Guizzo G, 2015, 2015 BRAZILIAN CONFERENCE ON INTELLIGENT SYSTEMS (BRACIS 2015), P1, DOI 10.1109/BRACIS.2015.11
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Guizzo G, 2017, APPL SOFT COMPUT, V56, P331, DOI 10.1016/j.asoc.2017.03.012
   Gupta P, 2016, INT CONF RELI INFO, P584, DOI 10.1109/ICRITO.2016.7785022
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Jakobovi D, 2007, LECT NOTES COMPUT SC, V4445, P321
   Jakubovski Filho H. Luiz, 2018, INCORPORATING USER P, DOI [10.1109/CEC.2018.8477803, DOI 10.1109/CEC.2018.8477803]
   Jakubovski HL, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P114, DOI 10.1145/3131151.3131152
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Jia Y, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P15, DOI 10.1109/SBST.2015.10
   Khan SUR, 2016, INT J INFORM MANAGE, V36, P963, DOI 10.1016/j.ijinfomgt.2016.05.025
   Khari M, 2019, SOFT COMPUT, V23, P1933, DOI 10.1007/s00500-017-2906-y
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim J, 2015, ACM IMCOM 2015, PROCEEDINGS, DOI 10.1145/2701126.2701207
   Le Thi My Hanh, 2014, International Journal of Computer and Information Technology, V3, P763
   Li WW, 2019, IEEE T EVOLUT COMPUT, V23, P59, DOI 10.1109/TEVC.2017.2785346
   Maashi M, 2014, EXPERT SYST APPL, V41, P4475, DOI 10.1016/j.eswa.2013.12.050
   Mahmoud T, 2015, EXPERT SYST APPL, V42, P8753, DOI 10.1016/j.eswa.2015.07.029
   Mala D.J., 2010, ACM SIGSOFT SOFTW EN, V35, P1, DOI DOI 10.1145/1764810.1764824
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Martins LEG, 2016, INFORM SOFTWARE TECH, V75, P71, DOI 10.1016/j.infsof.2016.04.002
   McClymont K, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P2003
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Miller J, 2006, INFORM SOFTWARE TECH, V48, P586, DOI 10.1016/j.infsof.2005.06.006
   Oliveira RAP, 2014, ADV COMPUT, V95, P113, DOI 10.1016/B978-0-12-800160-8.00003-6
   Patil M, 2012, PROC TECH, V4, P778, DOI 10.1016/j.protcy.2012.05.127
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   POLI R, 2007, P C EV COMP CEC2007, P3500, DOI DOI 10.1109/CEC.2007.4424926
   Popentiu-Vladicescu F, 2016, PROCEDIA COMPUT SCI, V92, P6, DOI 10.1016/j.procs.2016.07.315
   Lima JAP, 2017, II BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING (SAST 2017), DOI 10.1145/3128473.3128479
   Qi J, 2016, RES SER CHIN DREAM, P1, DOI 10.1007/978-981-10-2466-5
   Saeed A, 2016, APPL SOFT COMPUT, V49, P1094, DOI 10.1016/j.asoc.2016.08.030
   Shahbazi A, 2016, IEEE T SOFTWARE ENG, V42, P361, DOI 10.1109/TSE.2015.2487958
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Strickler A, 2016, APPL SOFT COMPUT, V49, P1232, DOI 10.1016/j.asoc.2016.07.059
   Tyasnurita R., 2015, 15 UK WORKSH COMP IN
   Vats P, 2014, 2014 INNOVATIVE APPLICATIONS OF COMPUTATIONAL INTELLIGENCE ON POWER, ENERGY AND CONTROLS WITH THEIR IMPACT ON HUMANITY (CIPECH), P476, DOI 10.1109/CIPECH.2014.7019110
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
   Xu X., 2018, BOOSTING SEARCH BASE, DOI [10.1109/CEC.2018.8477734, DOI 10.1109/CEC.2018.8477734]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zamli KZ, 2017, INFORM SCIENCES, V399, P121, DOI 10.1016/j.ins.2017.03.007
   Zamli KZ, 2016, APPL SOFT COMPUT, V44, P57, DOI 10.1016/j.asoc.2016.03.021
   Zhang YY, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196831
   Zitzler E., 2001, TIK REPORT, V103
NR 80
TC 19
Z9 20
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 176
EP 189
DI 10.1016/j.infsof.2019.06.012
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200011
DA 2024-07-18
ER

PT J
AU El Asri, I
   Kerzazi, N
   Uddin, G
   Khomh, F
   Idrissi, MAJ
AF El Asri, Ikram
   Kerzazi, Noureddine
   Uddin, Gias
   Khomh, Foutse
   Idrissi, M. A. Janati
TI An empirical study of sentiments in code reviews
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Empirical software engineering; Code review; Sentiment analysis; Opinion
   mining; Affective analysis; Propensity score matching
AB Context Modern code reviews are supported by tools to enhance developers' interactions allowing contributors to submit their opinions for each committed change in form of comments. Although the comments are aimed at discussing potential technical issues, the text might enclose harmful sentiments that could erode the benefits of suggested changes.
   Objective: In this paper, we study empirically the impact of sentiment embodied within developers' comments on the time and outcome of the code review process.
   Method: Based on historical data of four long-lived Open Source Software (OSS) projects from a code review system we investigate whether perceived sentiments have any impact on the interval time of code changes acceptance.
   Results: We found that (1) contributors frequently express positive and negative sentiments during code review activities; (2) the expressed sentiments differ among the contributors depending on their position within the social network of the reviewers (e.g., core vs peripheral contributors); (3) the sentiments expressed by contributors tend to be neutral as they progress from the status of newcomer in an OSS project to the status of core team contributors; (4) the reviews with negative comments on average took more time to complete than the reviews with positive/neutral comments, and (5) the reviews with controversial comments took significantly longer time in one project.
   Conclusion: Through this work, we provide evidences that text-based sentiments have an impact on the duration of the code review process as well as the acceptance or rejection of the suggested changes.
C1 [El Asri, Ikram; Kerzazi, Noureddine; Uddin, Gias; Khomh, Foutse; Idrissi, M. A. Janati] Mohammed V Univ Rabat Morocco, ENSIAS, Polytech Montreal, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP El Asri, I (corresponding author), Mohammed V Univ Rabat Morocco, ENSIAS, Polytech Montreal, Montreal, PQ, Canada.
EM ikram.asri@um5s.net.ma
OI Janati Idrissi, Mohammed Abdou/0000-0002-3567-1483
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   [Anonymous], 2001, EMOTIONS SOCIAL PSYC
   [Anonymous], 1977, EXPLORATORY DATA ANA
   [Anonymous], 2012, SENTIMENT ANAL OPINI
   [Anonymous], 2010, P 19 ACM INT C INF K
   [Anonymous], 2008, INF RETRIEV
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Bostanci B, 2013, ADV INTELL SYST, V201, P15, DOI 10.1007/978-81-322-1038-2_2
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Calefato F., 2017, EMPIR SOFTW ENG, P31
   Crowston K., 2006, P 39 HAW INT C SYST
   Destefanis G, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.73
   Dmitrienko A., 2005, ANAL CLIN TRIALS USI
   Freeman LintonC., 2011, SAGE HDB SOCIAL NETW, P26, DOI DOI 10.4135/9781446294413.03
   Garcia D, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P410, DOI 10.1109/CGC.2013.71
   Garimella K., 2018, ACM TRANS SOC COMPUT, V1, P3, DOI [DOI 10.1145/3140565, 10.1145/3140565]
   George J M, 1992, Psychol Bull, V112, P310, DOI 10.1037/0033-2909.112.2.310
   Gias Uddin and Foutse Khomh, 2017, TECHNICAL REPORT
   GitHub Sentiment Sot, 2018, SENT BOT
   Guillory J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P745
   Guo LQ, 2018, SCI REP-UK, V8, DOI 10.1038/s41598-018-23306-5
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Imtiaz N, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P55, DOI 10.1145/3194932.3194938
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Kerzazi N., 2018, EMPIRICAL STUDY SENT
   Khan IA, 2011, COGN TECHNOL WORK, V13, P245, DOI 10.1007/s10111-010-0164-1
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kucuktunc O., 2012, Proceedings of the Fifth ACM International Conference on Web Search and Data Mining, P633, DOI [DOI 10.1145/2124295.2124371, 10.1145/2124295.2124371]
   Lin B, 2018, INT SYM QUAL ELECT, P1, DOI 10.1109/ISQED.2018.8357256
   Luo Zhehui, 2010, Med Care Res Rev, V67, P528, DOI 10.1177/1077558710361486
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Munezero M, 2014, IEEE T AFFECT COMPUT, V5, P101, DOI 10.1109/TAFFC.2014.2317187
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Newman MEJ, 2003, SIAM REV, V45, P167, DOI 10.1137/S003614450342480
   Novielli N, 2018, IEEE WORK CONF MIN S, P14, DOI 10.1145/3196398.3196453
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Pang B, 2002, PROCEEDINGS OF THE 2002 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P79, DOI 10.3115/1118693.1118704
   Paul R., 2019, P 16 INT C SOFTW AN, P15
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Robertson I, 2011, WELL-BEING: PRODUCTIVITY AND HAPPINESS AT WORK, P1, DOI 10.1057/9780230306738
   Sinha V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P520, DOI [10.1109/MSR.2016.069, 10.1145/2901739.2903501]
   Spinellis A., 2018, P 40 INT C SOFTW ENG, P4
   Sudhakar GP, 2012, SERB J MANAG, V7, P65, DOI 10.5937/sjm1201065S
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thavaneswaran A., 2008, PROPENSITY SCORE MAT
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tian Y, 2017, IEEE INT CONF AUTOM, P153, DOI 10.1109/ASE.2017.8115628
   Tourani P., 2014, CASCON, P34
   Uddin G, 2019, IEEE Trans Softw Eng, P1
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Yang X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P820, DOI 10.1145/2635868.2661682
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Zamanirad S, 2017, IEEE INT CONF AUTOM, P832, DOI 10.1109/ASE.2017.8115694
NR 62
TC 26
Z9 29
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 37
EP 54
DI 10.1016/j.infsof.2019.06.005
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200003
DA 2024-07-18
ER

PT J
AU Magalhaes, APF
   Andrade, AMS
   Maciel, RSP
AF Fontes Magalhaes, Ana Patricia
   Santos Andrade, Aline Maria
   Pitangueira Maciel, Rita Suzana
TI Model driven transformation development (MDTD): An approach for
   developing model to model transformation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model to model transformation; Framework; Development process; Modeling
   language; Uml profile
ID DESIGN
AB Context In the Model Driven Development (MDD) approach, model transformations are responsible for the semi-automation of software development process converting models between different abstraction levels. The development of model transformations involves a complexity inherent to the transformation domain, in addition to the complexity of software development in general. Therefore, the construction of model transformations requires software engineering feature such as processes and languages to facilitate its development and maintenance.
   Objective: This paper presents a framework to develop unidirectional relational model transformation using the MDD approach itself, which integrates: (i) a software development process suitable for the model transformation domain (ii) a Domain specific language for transformation modeling (iii) a transformation chain, to (semi) automate the proposed process, and (iv) a development environment to support it.
   Methods: The proposal systematizes the development of model transformation, following the MDD principles. An iterative and incremental process guides transformation development from requirement specification to transformation codification. The proposal has been evaluated through a case study and a controlled experiment.
   Results: The framework enables model transformation specification at a high abstraction level and (semi) automatically transforms it into models at a low abstraction level until the transformation code. The results of the case study showed that people with different levels of knowledge of MDD, or without experience in transformation languages, were able to develop transformations through the framework and generated executable code.
   Conclusions: The framework integrates the essential elements involved in the development of model transformation and enables the abstraction of technological details. The results of the case study and controlled experiment showed the feasibility of the proposal and its use in dealing with the complexity involved in model transformation development.
C1 [Fontes Magalhaes, Ana Patricia] Univ Estado Bahia, Dept Exact Sci & Earth, Salvador, BA, Brazil.
   [Santos Andrade, Aline Maria; Pitangueira Maciel, Rita Suzana] Univ Fed Bahia, Comp Sci Dept, Salvador, BA, Brazil.
   [Fontes Magalhaes, Ana Patricia] Univ Salvador, Post Grad Program Comp & Syst, Salvador, BA, Brazil.
C3 Universidade do Estado Bahia; Universidade Federal da Bahia; Universidad
   de El Salvador; Universidade Salvador (UNIFACS)
RP Magalhaes, APF (corresponding author), Post Grad Program Comp, Dept Exact Sci & Earth, Av Leonor Calmon, BR-40296210 Salvador, BA, Brazil.
EM apmagalhaes@uneb.br
RI Maciel, Rita Suzana Pitangueira/AAA-5111-2022
OI Maciel, Rita Suzana Pitangueira/0000-0003-3159-6065
CR Bollati VA, 2013, INFORM SOFTWARE TECH, V55, P699, DOI 10.1016/j.infsof.2012.11.004
   [Anonymous], ATL TRANSF LANG
   [Anonymous], 2018, The R Project for Statistical Computing
   [Anonymous], 2008, OMG
   [Anonymous], THESIS
   [Anonymous], 4 IPM INT C FUND SOF
   [Anonymous], MOD DRIV ARCH MDA
   [Anonymous], 2011, UML INFR
   [Anonymous], UML USER GUIDE
   [Anonymous], P 2 INT WORKSH MOD T
   [Anonymous], INT C SOFTW ENG KNOW
   [Anonymous], 2010, MODEL DRIVEN SOFTWAR
   [Anonymous], INT C UN MOD LANG
   [Anonymous], INT C COMP INT COMM
   [Anonymous], ECL PROC FRAM EPF
   [Anonymous], 15504 ISO ISOIEC
   [Anonymous], 14 INT C COMP SUPP C
   [Anonymous], SYSTEMATIC APPROACH
   [Anonymous], 2017, EMBEDDED DISTRIBUTED
   [Anonymous], QUER VIEW TRANSF QVT
   [Anonymous], 2015, SEKE
   Avazpour I, 2015, J VISUAL LANG COMPUT, V28, P195, DOI 10.1016/j.jvlc.2015.02.005
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Del Fabro MD, 2009, SOFTW SYST MODEL, V8, P305, DOI 10.1007/s10270-008-0094-z
   Ergin H, 2016, COMPUT LANG SYST STR, V46, P106, DOI 10.1016/j.cl.2016.07.004
   Gamma E., 1994, DESIGN PATTERNS
   Guerra E, 2010, LECT NOTES COMPUT SC, V6394, P106
   Jiménez A, 2015, SCI COMPUT PROGRAM, V98, P3, DOI 10.1016/j.scico.2014.09.003
   Kleiner M, 2018, J SYST SOFTWARE, V142, P136, DOI 10.1016/j.jss.2018.04.053
   Kleppe A. G., 2003, MODEL DRIVEN ARCHITE
   Kolahdouz-Rahimi Shekoufeh, 2012, Fundamentals of Software Engineering. 4th IPM International Conference, FSEN 2011. Revised Selected Papers, P48, DOI 10.1007/978-3-642-29320-7_4
   Li Jin, 2010, 2010 International Conference on Computer Application and System Modeling (ICCASM 2010), P519, DOI 10.1109/ICCASM.2010.5620641
   Ma K, 2011, J UNIVERS COMPUT SCI, V17, P1863
   Ma ZY, 2016, PROCEEDINGS OF THE 2016 SAI COMPUTING CONFERENCE (SAI), P1199, DOI 10.1109/SAI.2016.7556130
   Maciel RSP, 2006, JOINT MEETING OF THE FOURTH WORKSHOP ON MODEL-BASED DEVELOPMENT OF COMPUTER-BASED SYSTEMS AND THIRD INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, PROCEEDINGS, P135
   Magalhaes AP, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P3, DOI 10.1145/2973839.2973841
   Magalhaes AP, 2013, P BRAZ SYMP SOFTW, P109, DOI 10.1109/SBCARS.2013.22
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Maciel RSP, 2013, AUTOMAT SOFTW ENG, V20, P427, DOI 10.1007/s10515-013-0124-0
   Reyes-Delgado PY, 2016, COMPUT STAND INTER, V47, P24, DOI 10.1016/j.csi.2016.02.005
   Samimi-Dehkordi L, 2018, INFORM SOFTWARE TECH, V100, P47, DOI 10.1016/j.infsof.2018.03.011
   Sani A. A., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P76, DOI 10.1109/MySEC.2011.6140647
   Siikarla M, 2008, LECT NOTES COMPUT SC, V5063, P1, DOI 10.1007/978-3-540-69927-9_1
   Skersys T, 2016, J SYST SOFTWARE, V122, P327, DOI 10.1016/j.jss.2016.09.046
   Sommerville I., 2011, Software engineering
   Wohlin C., 2014, Empirical Software Engineering, V20, P1427
NR 49
TC 8
Z9 9
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 55
EP 76
DI 10.1016/j.infsof.2019.06.004
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200004
DA 2024-07-18
ER

PT J
AU Anderson, J
   Azizi, M
   Salem, S
   Do, H
AF Anderson, Jeff
   Azizi, Maral
   Salem, Saeed
   Do, Hyunsook
TI On the use of usage patterns from telemetry data for test case
   prioritization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regression testing; Test case prioritization; Telemetry data; Usage
   patterns
AB Context: Modern applications contain pervasive telemetry to ensure reliability and enable monitoring and diagnosis. This presents a new opportunity in the area of regression testing techniques, as we now have the ability to consider usage profiles of the software when making decisions on test execution.
   Objective: The results of our prior work on test prioritization using telemetry data showed improvement rate on test suite reduction, and test execution time. The objective of this paper is to further investigate this approach and apply prioritization based on multiple prioritization algorithms in an enterprise level cloud application as well as open source projects. We aim to provide an effective prioritization scheme that practitioners can implement with minimum effort. The other objective is to compare the results and the benefits of this technique factors with code coverage-based prioritization approaches, which is the most commonly used test prioritization technique.
   Method: We introduce a method for identifying usage patterns based on telemetry, which we refer to as "telemetry fingerprinting." Through the use of various algorithms to compute fingerprints, we conduct empirical studies on multiple software products to show that telemetry fingerprinting can be used to more effectively prioritize regression tests.
   Results: Our experimental results show that the proposed techniques were able to reduce over 30% in regression test suite run times compared to the coverage-based prioritization technique in detecting discoverable faults. Further, the results indicate that fingerprints are effective in identifying usage patterns, and that the fingerprints can be applied to improve regression testing techniques.
   Conclusion: In this research, we introduce the concept of fingerprinting software usage patterns through telemetry. We provide various algorithms to compute fingerprints and conduct empirical studies that show that fingerprints are effective in identifying distinct usage patterns. By applying these techniques, we believe that regression testing techniques can be improved beyond the current state-of-the-art, yielding additional cost and quality benefits.
C1 [Anderson, Jeff] Microsoft Inc, Fargo, ND 58104 USA.
   [Azizi, Maral; Do, Hyunsook] Univ North Texas, Denton, TX 76203 USA.
   [Salem, Saeed] North Dakota State Univ, Fargo, ND USA.
C3 Microsoft; University of North Texas System; University of North Texas
   Denton; North Dakota State University Fargo
RP Anderson, J (corresponding author), Microsoft Inc, Fargo, ND 58104 USA.; Azizi, M (corresponding author), Univ North Texas, Denton, TX 76203 USA.
EM jeffand@microsoft.com; maraazizi@my.unt.edu; saeed.salem@ndsu.edu;
   hyunsook.do@unt.edu
RI Salem, Saeed/HNQ-4336-2023
OI salem, saeed/0000-0001-6478-4674; Azizi, Maral/0000-0002-0008-5003
FU NSF CAREER Award [CCF-1564238]
FX This work was supported, in part, by NSF CAREER Award CCF-1564238 to
   University of North Texas.
CR Amalfitano Domenico, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P274, DOI 10.1109/ICSTW.2010.34
   Anderson J., 2015, P 37 IEEE INT C SOFT
   Anderson J., 2014, P 11 WORK C MIN SOFT, P142
   Anderson J., 2016, P 32 IEEE INT C SOFT
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2008, P ACM SIGSOFT S FDN
   Avritzer A, 1996, IEEE SOFTWARE, V13, P76, DOI 10.1109/52.536461
   Barik T., 2016, P INT C SOFTW ENG IC
   Beszédes A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P46, DOI 10.1109/ICSM.2012.6405252
   Brooks P. A., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, P333
   Busany N., 2015, P INT S FDN SOFTW FD
   Campos J., 2013, P INT C AUT SOFTW EN
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Cotroneo D, 2013, PROC INT SYMP SOFTW, P178, DOI 10.1109/ISSRE.2013.6698917
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do H., 2010, IEEE T SOFTW ENG, V36
   Do H., 2010, IEEE T SOFTW ENG, V26
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P312, DOI 10.1109/TSE.2005.50
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Fu Q., 2014, P INT C SOFTW ENG IC
   Gonzalez-Sanchez A., 2011, P 25 AAAI C ART INT
   Gonzalez-Sanchez A., 2011, P INT C AUT SOFTW EN
   Hamburg MA, 2010, NEW ENGL J MED, V363, P301, DOI 10.1056/NEJMp1006304
   Hao D, 2012, PROC INT CONF SOFTW, P738, DOI 10.1109/ICSE.2012.6227144
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Hou SS, 2008, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSM.2008.4658074
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   KIM JM, 2002, P INT C SOFTW ENG
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Mirarab S, 2007, LECT NOTES COMPUT SC, V4422, P276
   Mirarab S, 2012, IEEE T SOFTWARE ENG, V38, P936, DOI 10.1109/TSE.2011.56
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Murphy C., 1998, STAT POWER ANAL SIMP
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Parsons T., 2007, THESIS
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sampath Sreedevi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P141, DOI 10.1109/ICST.2008.42
   Sampath S., 2008, P INT C SOFTW TEST I
   Sherriff M, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ISSRE.2007.25
   Walcott K. R., 2006, P INT S SOFTW TEST A
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 48
TC 9
Z9 9
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2019
VL 113
BP 110
EP 130
DI 10.1016/j.infsof.2019.05.008
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IE1DW
UT WOS:000472127100007
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Bibi, S
   Avgeriou, P
   Verbeek, M
   Chatzigeorgiou, A
AF Ampatzoglou, Apostolos
   Bibi, Stamatia
   Avgeriou, Paris
   Verbeek, Marijn
   Chatzigeorgiou, Alexander
TI Identifying, categorizing and mitigating threats to validity in software
   engineering secondary studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical software engineering; Secondary studies; Threats to Validity;
   Literature Review
ID SYSTEMATIC LITERATURE-REVIEWS; RANDOMIZED CLINICAL-TRIALS; QUALITY
AB Context: Secondary studies are vulnerable to threats to validity. Although, mitigating these threats is crucial for the credibility of these studies, we currently lack a systematic approach to identify, categorize and mitigate threats to validity for secondary studies.
   Objective: In this paper, we review the corpus of secondary studies, with the aim to identify: (a) the trend of reporting threats to validity, (b) the most common threats to validity and corresponding mitigation actions, and (c) possible categories in which threats to validity can be classified.
   Method: To achieve this goal we employ the tertiary study research method that is used for synthesizing knowledge from existing secondary studies. In particular, we collected data from more than 100 studies, published until December 2016 in top quality software engineering venues (both journals and conference).
   Results: Our results suggest that in recent years, secondary studies are more likely to report their threats to validity. However, the presentation of such threats is rather ad hoc, e.g., the same threat may be presented with a different name, or under a different category. To alleviate this problem, we propose a classification schema for reporting threats to validity and possible mitigation actions. Both the classification of threats and the associated mitigation actions have been validated by an empirical study, i.e., Delphi rounds with experts.
   Conclusion: Based on the proposed schema, we provide a checklist, which authors of secondary studies can use for identifying and categorizing threats to validity and corresponding mitigation actions, while readers of secondary studies can use the checklist for assessing the validity of the reported results.
C1 [Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Bibi, Stamatia] Univ Western Macedonia, Dept Informat & Telecommun, Kozani, Greece.
   [Avgeriou, Paris; Verbeek, Marijn] Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
C3 University of Macedonia; University of Western Macedonia; University of
   Groningen
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
EM apostolos.ampatzoglou@gmail.com
RI Ampatzoglou, Apostolos/AAC-3632-2020; Chatzigeorgiou,
   Alexandros/AAL-6077-2021
OI Avgeriou, Paris/0000-0002-7101-0754; Bibi, Stamatia/0000-0003-4248-3752
CR Avellar SA, 2017, EVALUATION REV, V41, P283, DOI 10.1177/0193841X16665199
   Bano M, 2014, IEEE INT WORKS EMPIR, P9, DOI 10.1109/EmpiRE.2014.6890110
   BASILI VR, 1991, RELIAB ENG SYST SAFE, V32, P171, DOI 10.1016/0951-8320(91)90053-A
   Biffl S., 2014, 8 ACM IEEE INT S EMP
   Budgen D, 2018, INFORM SOFTWARE TECH, V95, P62, DOI 10.1016/j.infsof.2017.10.017
   Cai KY, 2008, J SYST SOFTWARE, V81, P1051, DOI 10.1016/j.jss.2007.08.028
   Centre for Reviews and Dissemination University of York, 2002, Effect. Matters, V6, P1
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva FQB, 2011, INFORM SOFTWARE TECH, V53, P899, DOI 10.1016/j.infsof.2011.04.004
   Downs SH, 1998, J EPIDEMIOL COMMUN H, V52, P377, DOI 10.1136/jech.52.6.377
   Dwan K, 2008, PLOS ONE, V3, DOI 10.1371/journal.pone.0003081
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Greenwood D.J., 2007, INTRO ACTION RES
   Imtiaz S., 2013, P 17 INT C EV ASS SO
   Jadad AR, 1996, CONTROL CLIN TRIALS, V17, P1, DOI 10.1016/0197-2456(95)00134-4
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Kitchenham B., 2015, EVIDENCE BASE SOFTWA
   Kitchenham B., P 3 INT S EMP SOFTW, P336
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham Barbara., 2010, EASE'10 Proceedings of the 14th international conference on Evaluation and Assessment in Software Engineering, P25, DOI DOI 10.14236/EWIC/EASE2010.4
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Marques A.B., 2012, GLOBAL SOFTWARE ENG, P27
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Moher D., 2015, SYSTEMATIC REV, V54
   Nickerson R., 2009, EUR C INF SYST
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Pfleeger S.L., 2001, SIGSOFT SOFTW ENG NO
   Rothstein H.R., 2008, Journal of Experimental Criminology, V4, P61, DOI 10.1007/s11292-007-9046-9
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shea BJ, 2007, BMC MED RES METHODOL, V7, DOI 10.1186/1471-2288-7-10
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Slocum TA, 2012, EDUC TREAT CHILD, V35, P201, DOI 10.1353/etc.2012.0009
   Tichy WF, 2007, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSECOMPANION.2007.33
   Verhagen AP, 1998, J CLIN EPIDEMIOL, V51, P1235, DOI 10.1016/S0895-4356(98)00131-0
   Verner J.M., 2012, EVALUATION ASSESSMEN
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Wong WE, 2011, J SYST SOFTWARE, V84, P162, DOI 10.1016/j.jss.2010.09.036
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zaza S, 2000, AM J PREV MED, V18, P44, DOI 10.1016/S0749-3797(99)00122-1
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 53
TC 120
Z9 135
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2019
VL 106
BP 201
EP 230
DI 10.1016/j.infsof.2018.10.006
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HF6XJ
UT WOS:000454381300012
OA Green Published
DA 2024-07-18
ER

PT J
AU Martinez, J
   Ziadi, T
   Papadakis, M
   Bissyandé, TF
   Klein, J
   le Traon, Y
AF Martinez, Jabier
   Ziadi, Tewfik
   Papadakis, Mike
   Bissyande, Tegawende F.
   Klein, Jacques
   le Traon, Yves
TI Feature location benchmark for extractive software product line adoption
   research using realistic and synthetic Eclipse variants
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature location; Software families; Eclipse; Benchmark; Software
   product lines; Static analysis; Information retrieval
ID MODEL; CODE
AB Context: It is common belief that high impact research in software reuse requires assessment in non-trivial, comparable, and reproducible settings. However, software artefacts and common representations are usually unavailable. Also, establishing a representative ground truth is a challenging and debatable subject. Feature location in the context of software families, which is key for software product line adoption, is a research field that is becoming more mature with a high proliferation of techniques.
   Objective: We present EFLBench, a benchmark and a framework to provide a common ground for the evaluation of feature location techniques in families of systems.
   Method: EFLBench leverages the efforts made by the Eclipse Community which provides feature-based family artefacts and their plugin-based implementations. Eclipse is an active and non-trivial project and thus, it establishes an unbiased ground truth which is realistic and challenging.
   Results: EFLBench is publicly available and supports all tasks for feature location techniques integration, benchmark construction and benchmark usage. We demonstrate its usage, simplicity and reproducibility by comparing four techniques in Eclipse releases. As an extension of our previously published work, we consider a decade of Eclipse releases and we also contribute an approach to automatically generate synthetic Eclipse variants to benchmark feature location techniques in tailored settings. We present and discuss three strategies for this automatic generation and we present the results using different settings.
   Conclusion: EFLBench is a contribution to foster the research in feature location in families of systems providing a common framework and a set of baseline techniques and results.
C1 [Martinez, Jabier] Tecnalia, ICT, Donostia San Sebastian, Spain.
   [Martinez, Jabier; Ziadi, Tewfik] Sorbonne Univ, LIP6, Paris, France.
   [Papadakis, Mike; Bissyande, Tegawende F.; Klein, Jacques; le Traon, Yves] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Martinez, Jabier] Univ Luxembourg, Luxembourg, Luxembourg.
C3 Sorbonne Universite; University of Luxembourg; University of Luxembourg
RP Ziadi, T (corresponding author), Sorbonne Univ, LIP6, Paris, France.
EM tewfik.ziadi@lip6.fr
RI LE TRAON, Yves/T-2911-2019
OI LE TRAON, Yves/0000-0002-1045-4861; Martinez,
   Jabier/0000-0001-8742-9640; Papadakis, Mike/0000-0003-1852-2547; Klein,
   Jacques/0000-0003-4052-475X
CR Acher M, 2014, SOFTW SYST MODEL, V13, P1367, DOI 10.1007/s10270-013-0364-2
   AL-Msie'deen Ra'Fat, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P302, DOI 10.1007/978-3-642-38977-1_22
   Al-Msiedeen R, 2013, SEKE SOFTWARE ENG KN, DOI [10.1109/IRI.2013.6642522, DOI 10.1109/IRI.2013.6642522]
   Al-MsieDeen R., 2013, ECOOP EUROPEAN CONFE, P1
   Alves V, 2007, LECT NOTES COMPUT SC, V4640, P117
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 1997, Formal Concept Analysis: Mathematical Foundations
   Araar I. E., 2016, INFORMATICA, V40
   Assuncao W.K.G., 2014, 18 INT SOFTWARE PROD, V2, P52, DOI [/10.1145/2647908.2655967, DOI 10.1145/2647908.2655967]
   Bayer J., 2003, IESEWP26
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Couto M. V., 2011, EXTRACTING SOFTWARE
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Dit B., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P203
   Eyal-Salman Hamzeh, 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P209, DOI 10.1109/IRI.2013.6642474
   Eyal-Salman H., 2014, SEKE: Software Engineering and Knowledge Engineering, P426
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Font Jaime., 2015, P 19 INT C SOFTWARE, P411, DOI [DOI 10.1145/2791060.2793678, 10.1145/2791060.2793678]
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Grünbacher P, 2009, IEEE INT CONF AUTOM, P247, DOI 10.1109/ASE.2009.11
   Henard C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P126
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Knodel J, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P120
   Kong K. C., 1990, TECHNICAL REPORT
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Kunrong Chen, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P1, DOI 10.1109/ICPC.2010.40
   Linsbauer L, 2014, PROC IEEE INT CONF S, P426, DOI 10.1109/ICSME.2014.67
   Lopez-Herrejon R.E., 2014, CORR
   Lopez-Herrejon R. E., 2001, 3 INT C GCSE 2001 SE, P10
   Martinez J, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P38, DOI 10.1145/3109729.3109748
   Martinez J, 2017, PROC IEEE ACM INT C, P67, DOI 10.1109/ICSE-C.2017.15
   Martinez J, 2016, LECT NOTES COMPUT SC, V9679, P267, DOI 10.1007/978-3-319-35122-3_18
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Méndez-Acuña D, 2016, LECT NOTES COMPUT SC, V9679, P368, DOI 10.1007/978-3-319-35122-3_24
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Porter MF, 2001, Snowball: a language for stemming algorithms
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Rubin J., 2012, FUNDAMENTAL APPROACH, V2012, DOI [10.1007/978-3-642-28872-220, DOI 10.1007/978-3-642-28872-220]
   Rubin J, 2012, IEEE INT CONF AUTOM, P242, DOI 10.1145/2351676.2351712
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   Shatnawi A., 2016, CORR
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Souza IS, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P147, DOI 10.1109/SBES.2013.12
   Trinidad P, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P359, DOI 10.1109/SPLC.2008.50
   Vale T, 2017, INFORM SOFTWARE TECH, V84, P1, DOI 10.1016/j.infsof.2016.12.004
   Xing ZC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1311, DOI 10.1109/ICSE.2013.6606705
   Yang Y., 2009, DOMAIN FEATURE MODEL
   Yinxing Xue, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P145, DOI 10.1109/WCRE.2012.24
   Ziadi T., 2014, P 29 ANN ACM S APPL, P1064
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 62
TC 17
Z9 17
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2018
VL 104
BP 46
EP 59
DI 10.1016/j.infsof.2018.07.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GZ1PB
UT WOS:000449138900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rekha, VS
   Muccini, H
AF Rekha, Smrithi, V
   Muccini, Henry
TI Group decision-making in software architecture: A study on industrial
   practices
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Group decision making; Software architecture; Architectural design
   decisions
ID CONFLICT-MANAGEMENT; TEAM PERFORMANCE; SUPPORT SYSTEM; RISKY-SHIFT;
   INFORMATION; KNOWLEDGE; MODEL; SIZE
AB Context A Software Architecture results from a comprehensive process in which several stakeholders deliberate upon the key requirements, issues, solutions and make architectural design decisions. Literature shows that most architectural decisions, in practice, are made in groups. Still, there is a limited understanding of industrial group decision-making practices in software architecture and the challenges that software architecture groups face.
   Objective: Our study, by drawing inspiration from group decision-making theories and models, aims at understanding (i) Existing decision-making practices in software architecture groups (ii) the comparison between practice and theory, (iii) the challenges that the groups face, and (iv) the satisfaction of group members with various aspects of Group Decision Making.
   Method: The study has been conducted through a questionnaire-based survey. 35 practitioners participated in this survey and the responses were analyzed qualitative and quantitatively.
   Results: The analysis of individual responses reveal that software architecture groups (composed, on average, of 3-5 co-located or dispersed members) adopt a discussion based approach while evaluating alternatives, thereby lacking a structured way of decision-making. In these groups, despite the involvement of group members in the discussions, the final decision is made by an individual of authority. Not only is structured decision-making less common, the usage of dedicated software tools for decision-making too is rare. These groups face challenges that are indicative of Groupthink and Group Polarization. Group members feel that quantity of alternatives generated during discussions and tool availability are below satisfactory and they have low satisfaction with the tool support available.
   Conclusion: This study has helped us develop an understanding of software architecture groups, their decision making practices and challenges faced together with the satisfaction of group members. What the industry needs is integration of group decision-making principles into software architecture decision-making and design of decision-making tools that assist the architecture groups.
C1 [Rekha, Smrithi, V] Amrita Vishwa Vidyapeetham, Amrita Sch Business, Coimbatore, Tamil Nadu, India.
   [Muccini, Henry] Univ Aquila, Dept Informat Engn Comp Sci & Math, Laquila, Italy.
C3 Amrita Vishwa Vidyapeetham; Amrita Vishwa Vidyapeetham Coimbatore;
   University of L'Aquila
RP Rekha, VS (corresponding author), Amrita Vishwa Vidyapeetham, Amrita Sch Business, Coimbatore, Tamil Nadu, India.
EM v_smrithirekha@cb.amrita.edu; henry.muccini@univaq.it
OI Muccini, Henry/0000-0001-6365-6515
CR Al-Naeem T, 2005, PROC INT CONF SOFTW, P244
   ALDAG RJ, 1993, PSYCHOL BULL, V113, P533, DOI 10.1037/0033-2909.113.3.533
   [Anonymous], 2005, Qualitative research Wiley Online Library
   [Anonymous], DIFFICULTY ARCHITECT
   [Anonymous], 2000, TECH REP
   [Anonymous], ACM COMPUT SURV CSUR
   [Anonymous], 1983, Groupthink: Psychological studies of policy decisions and fiascoes
   [Anonymous], 2010, HDB GROUP DECISION N
   [Anonymous], 2003, INTEGRATING ARCHITEC
   Bass L., 2001, International Workshop on Software Product-Family Engineering, P169, DOI DOI 10.21236/ADA469332
   Bhatti N., 2012, International Business Research, V5, P192, DOI [10.5539/ibr.v5n2p192, DOI 10.5539/IBR.V5N2P192, 10.5539/IBR.v5n2p192]
   Bonebright DA, 2010, HUM RESOUR DEV INT, V13, P111, DOI 10.1080/13678861003589099
   BRAY RM, 1978, J PERS SOC PSYCHOL, V36, P1424, DOI 10.1037/0022-3514.36.12.1424
   Brodbeck FC, 2007, ACAD MANAGE REV, V32, P459, DOI 10.5465/AMR.2007.24351441
   Bryman A., 2015, Business research methods, V4th edition
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Dennis A.R., 1993, Academy of Management Proceedings, P283
   FESTINGER L, 1950, PSYCHOL REV, V57, P271, DOI 10.1037/h0056932
   GALLUPE RB, 1990, INFORM MANAGE-AMSTER, V18, P1, DOI 10.1016/0378-7206(90)90059-Q
   Groher I, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P11, DOI 10.1109/WICSA.2015.27
   Gruenfeld DH, 1996, ORGAN BEHAV HUM DEC, V67, P1, DOI 10.1006/obhd.1996.0061
   Hinsz VB, 1997, PSYCHOL BULL, V121, P43, DOI 10.1037/0033-2909.121.1.43
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   KOGAN N, 1967, J EXP SOC PSYCHOL, V3, P75, DOI 10.1016/0022-1031(67)90038-8
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   Kruchten P, 2009, IEEE SOFTWARE, V26, P36, DOI 10.1109/MS.2009.52
   LARSON JR, 1994, J PERS SOC PSYCHOL, V67, P446, DOI 10.1037/0022-3514.67.3.446
   Laughlin PR, 2002, ORGAN BEHAV HUM DEC, V88, P605, DOI 10.1016/S0749-5978(02)00003-1
   LAUGHLIN PR, 1975, J PERS SOC PSYCHOL, V31, P522, DOI 10.1037/h0076474
   Malavolta I, 2014, LECT NOTES COMPUT SC, V8785, P9, DOI 10.1007/978-3-319-12241-0_2
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mesmer-Magnus JR, 2009, J APPL PSYCHOL, V94, P535, DOI 10.1037/a0013773
   Miesbauer Cornelia, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P130, DOI 10.1007/978-3-642-39031-9_12
   MULLEN B, 1994, PSYCHOL BULL, V115, P210, DOI 10.1037/0033-2909.115.2.210
   MYERS DG, 1972, BRIT J SOC CLIN PSYC, V11, P109, DOI 10.1111/j.2044-8260.1972.tb00790.x
   NEMETH CJ, 1986, PSYCHOL REV, V93, P23, DOI 10.1037/0033-295X.93.1.23
   Paul S, 2004, J MANAGE INFORM SYST, V21, P185, DOI 10.1080/07421222.2004.11045809
   Peniwati K, 2007, MATH COMPUT MODEL, V46, P935, DOI 10.1016/j.mcm.2007.03.005
   Rekha VS, 2014, LECT NOTES COMPUT SC, V8627, P17, DOI 10.1007/978-3-319-09970-5_2
   Salas E, 2008, HUM FACTORS, V50, P540, DOI 10.1518/001872008X288457
   Schuster N., 2007, ADkwik: Web 2.0 collaboration system for architectural decision engineering, P255
   Skogstad A, 2007, J OCCUP HEALTH PSYCH, V12, P80, DOI 10.1037/1076-8998.12.1.80
   Smrithi Rekha V., 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P185, DOI 10.1109/WICSA.2014.15
   Sunstein CR, 2002, J POLIT PHILOS, V10, P175, DOI 10.1111/1467-9760.00148
   Tamburri DA, 2016, IEEE SOFTWARE, V33, P70, DOI 10.1109/MS.2016.144
   Tang A, 2010, J SYST SOFTWARE, V83, P352, DOI 10.1016/j.jss.2009.08.032
   TAYLOR DW, 1952, J EXP PSYCHOL, V44, P360, DOI 10.1037/h0054376
   THOMAS KW, 1992, J ORGAN BEHAV, V13, P265, DOI 10.1002/job.4030130307
   Tofan D, 2016, INFORM SOFTWARE TECH, V72, P31, DOI 10.1016/j.infsof.2015.12.002
   Tofan D, 2014, INFORM SOFTWARE TECH, V56, P850, DOI 10.1016/j.infsof.2014.03.009
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   van Knippenberg D, 2007, ANNU REV PSYCHOL, V58, P515, DOI 10.1146/annurev.psych.58.110405.085546
   VANDEVEN A, 1971, ACAD MANAGE J, V14, P203, DOI 10.5465/255307
   VANDEVEN AH, 1974, ACAD MANAGE J, V17, P605, DOI 10.5465/255641
   VANDEVLIERT E, 1989, J SOC PSYCHOL, V129, P681, DOI 10.1080/00224545.1989.9713785
   Winslade J., 2000, Narrative mediation: A new approach to conflict resolution
NR 58
TC 12
Z9 13
U1 0
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2018
VL 101
BP 51
EP 63
DI 10.1016/j.infsof.2018.04.009
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GK3OE
UT WOS:000436054200004
DA 2024-07-18
ER

PT J
AU Tragatschnig, S
   Stevanetic, S
   Zdun, U
AF Tragatschnig, Simon
   Stevanetic, Srdjan
   Zdun, Uwe
TI Supporting the evolution of event-driven service-oriented architectures
   using change patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID FLEXIBILITY
AB Context: The components of an event-driven service-oriented architecture (EDSOA) are composed in a highly decoupled way, facilitating high flexibility, scalability and concurrency in SOA systems. Evolving an EDSOA is challenging because the absence of explicit dependencies among constituent components makes understanding and analysing the overall system composition difficult. The evolution of EDSOAs typically happens by performing a series of primitive changes which can be described formally as change primitives.
   Objective: In this article, we present our change pattern based approach for managing the EDSOA evolution as a novel design method supporting EDSOA evolution. The change patterns operate on a higher abstraction level than change primitives.
   Method: To evaluate our approach, we have compared both time and correctness of changes in a controlled experiment comparing the understanding and performing of changes in EDSOAs. The experiment has been conducted with 90 students of the Software Architecture course at the University of Vienna. We compare the efficiency of 3 sets of change operations for modifying a given system architecture to obtain a desired architecture: a minimal set of 3 change patterns, an extended set of 5 change patterns, and a minimal set of 4 change primitives.
   Results: Our results show that change patterns based evolution requires significantly less time to capture a similar level of correctness as the evolution based on change primitives, presuming that a certain level of transformation complexity is required. Furthermore, we did not observe a significant difference in the correctness level nor in the time required to perform the changes using an extended pattern set compared to a minimal set of patterns.
   Conclusions: We clearly show the feasibility of our approach by developing a design method and tool support using a model-driven tool chain consisting of 3 domain-specific languages and empirically evaluating the approach in a controlled experiment.
C1 [Tragatschnig, Simon; Stevanetic, Srdjan; Zdun, Uwe] Univ Vienna, Fac Comp Sci, Software Architecture Res Grp, Vienna, Austria.
C3 University of Vienna
RP Stevanetic, S (corresponding author), Univ Vienna, Fac Comp Sci, Software Architecture Res Grp, Vienna, Austria.
EM simon.tragatschnig@univie.ac.at; srdjan.stevanetic@univie.ac.at;
   uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
FU Austrian Science Fund (FWF) [P24345-N23]; Austrian Science Fund (FWF)
   [P24345] Funding Source: Austrian Science Fund (FWF)
FX This work was supported by the Austrian Science Fund (FWF), project:
   P24345-N23.
CR [Anonymous], 2012, Nonparametrics: Statistical Methods Based on Ranks and Its Impact on the Field of Nonparametric Statistics
   [Anonymous], 2006, WORKFLOW CONTROL FLO
   [Anonymous], 2000, Kluwer international series in software engineering
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Claes J, 2012, LECT NOTES COMPUT SC, V7481, P33, DOI 10.1007/978-3-642-32885-5_3
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Dadam P, 2009, COMPUT SCI-RES DEV, V23, P81, DOI 10.1007/s00450-009-0068-6
   Fiege L, 2002, KNOWL ENG REV, V17, P359, DOI 10.1017/S0269888903000559
   Field A., 2013, DISCOVERING STAT USI
   Fladeiro JL, 2007, MATH STRUCT COMP SCI, V17, P1029, DOI 10.1017/S0960129507006299
   Ganesan Siddarth., 2011, P 5 ACM INT C DISTRI, P195
   Garcia Joshua., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, P367, DOI DOI 10.1145/2491411.2491462
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Juric MB, 2010, INFORM SOFTWARE TECH, V52, P1023, DOI 10.1016/j.infsof.2010.04.005
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kraemer HC, 2006, BIOL PSYCHIAT, V59, P990, DOI 10.1016/j.biopsych.2005.09.014
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Luckham David C., 2001, POWER EVENTS INTRO C
   Muhl G, 2006, Distributed Event-Based Systems
   Niblett P, 2005, IBM SYST J, V44, P869, DOI 10.1147/sj.444.0869
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Overbeek S, 2012, SERV ORIENTED COMPUT, V6, P167, DOI 10.1007/s11761-011-0100-0
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   Pinggera J, 2012, LECT NOTES BUS INF P, V99, P370
   Popescu D., 2012, P 6 ACM INT C DISTR, P241, DOI [DOI 10.1145/2335484.2335511, 10.1145/2335484.2335511]
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Purchase HelenC., 2001, APVIS 01, P113
   Redding Guy, 2009, 2009 IEEE Conference on Commerce and Enterprise Computing, P41, DOI 10.1109/CEC.2009.39
   Rinderle-Ma S., 2008, 27 INT C CONC MOD ER, P279
   Russell N, 2005, LECT NOTES COMPUT SC, V3716, P353
   Schonenberg H, 2008, LECT NOTES BUS INF, V10, P16
   Thorn Lucineia Heloisa, 2009, International Journal of Business Process Integration and Management, V4, P93, DOI 10.1504/IJBPIM.2009.027778
   Tombros D, 2000, LECT NOTES COMPUT SC, V1789, P325
   Tragatschnig S., 2014, 29 S APPL COMP SAC 2
   Tragatschnig S, 2015, 2015 IEEE 24TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, P44, DOI 10.1109/WETICE.2015.13
   Tragatschnig S, 2013, LECT NOTES COMPUT SC, V8185, P283, DOI 10.1007/978-3-642-41030-7_19
   Tran Huy, 2013, 2013 17th IEEE International Enterprise Distributed Object Computing Conference (EDOC 2013), P217, DOI 10.1109/EDOC.2013.32
   Tran H., 2012, 20 INT C COOP INF SY, P164
   van der Aalst WMP, 2009, COMPUT SCI-RES DEV, V23, P99, DOI 10.1007/s00450-009-0057-9
   Weber B., 2012, ENABLING FLEXIBILITY
   Weber B., 2014, LNBIP, V175, P17, DOI DOI 10.1007/978-3-662-43745-2_2
   Weber B, 2008, DATA KNOWL ENG, V66, P438, DOI 10.1016/j.datak.2008.05.001
   Weber B, 2007, LECT NOTES COMPUT SC, V4495, P574
   Weber B, 2013, LECT NOTES BUS INF P, V147, P261
   Wilcox R, 2012, INTRODUCTION TO ROBUST ESTIMATION AND HYPOTHESIS TESTING, 3RD EDITION, P291, DOI 10.1016/B978-0-12-386983-8.00007-X
   Yuan ST, 2009, EXPERT SYST APPL, V36, P3671, DOI 10.1016/j.eswa.2008.02.024
   Zdun S. T. andy Uwe, 2015, 8 INT WORKSH EV BUS
NR 50
TC 7
Z9 7
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 133
EP 146
DI 10.1016/j.infsof.2018.04.005
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100009
DA 2024-07-18
ER

PT J
AU Mohagheghi, P
   Aparicio, ME
AF Mohagheghi, Parastoo
   Aparicio, Mario Ek
TI An industry experience report on managing product quality requirements
   in a large organization
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product quality; Non-functional requirements; Agile; Experience report;
   Maintenance; Technical debt
ID ARCHITECTURE
AB Context: Eliciting, managing and implementing product quality requirements (in-short quality requirements) in a large organization can be challenging when many stakeholders are involved and projects run in parallel; sometimes with varying priorities with regards to quality. In this case from a public organization in Norway, the separation between business units and the IT-department and the legacy burden are additional factors that increase the complexity of requirement management.
   Objective: This paper presents results and experiences from three years long work with quality requirements, starting from ad-hoc handling of quality requirements in separate projects to systematic work across projects with reusable sets of requirements and processes.
   Method: We present how quality requirements are captured and classified, as well as changes to the agile software development process as a consequence of increasing focus on product quality.
   Results: The ISO/IEC-25010:2011 standard is tailored for better context fit and is supported by concrete requirements and a methodology that covers the life cycle of software products in both greenfield and brownfield projects. In addition, the organization had to examine the current state of existing IT capabilities in order to establish a quality baseline for future development, and develop shared vision and roadmaps for product quality.
   Conclusions: In our experience, stakeholders prefer an iterative and lightweight approach in eliciting and refining quality requirements. The classification model and requirement lists are used as guidelines in requirement workshops. The developed terminology, updated templates and processes are reusable in projects and generalizable to different contexts, and are well adopted by the IT and business units. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Mohagheghi, Parastoo] Norwegian Labour & Welf Adm, Oslo, Norway.
   [Aparicio, Mario Ek] Miles Oslo AS, Oslo, Norway.
RP Mohagheghi, P (corresponding author), Norwegian Labour & Welf Adm, Oslo, Norway.
EM parastoo.mohagheghi@nav.no; mario.aparicio@gmail.com
FU NAV
FX We are grateful to NAV for supporting the publication of the paper. We
   are also grateful to Dr. Jason Baragry for his valuable comments during
   the writing of this paper.
CR Abrahamsson P, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.36
   Adzic Gojko., 2012, Impact Mapping: Making a Big Impact with Software Products and ProjectsPaperback
   [Anonymous], 2011, ISO 13314
   [Anonymous], 2012, Disciplined agile delivery: A practitioner's guide to agile software delivery in the enterprise
   [Anonymous], 2013, ENTERPRISE UNIFIED P
   [Anonymous], 2009, Extreme Programming: A gentle introduction
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 2012, 2012 3rd International Workshop on Managing Technical Debt, MTD 2012-Proceedings, DOI [10.1109/MTD.2012.6225997, DOI 10.1109/MTD.2012.6225997]
   [Anonymous], 2002, RES DESIGN QUALITATI
   [Anonymous], 2015, DISCIPLINED AGILE 2
   Barbacci M., 2003, QUALITY ATTRIBUTE WO, VThird
   Bellomo S, 2015, IEEE SOFTWARE, V32, P38, DOI 10.1109/MS.2015.35
   Blaine JD, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.46
   Boehm B.W., 1978, Characteristics of Software Quality
   Chaparro W., 2014, FACILITATING MINI QU
   Chen LP, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2012.174
   Cleland-Huang Jane, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P18, DOI 10.1007/978-3-642-37422-7_2
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Doerr J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P373, DOI 10.1109/RE.2005.47
   Doran G.T., 1981, Management Review. AMA FORUM, V70, p35 36, DOI DOI 10.1177/004057368303900411
   Dybå T, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P220, DOI 10.1109/METRIC.2004.1357905
   Franch X, 2003, IEEE SOFTWARE, V20, P34, DOI 10.1109/MS.2003.1159027
   Gilb T, 2005, COMPETITIVE ENGINEERING: A HANDBOOK FOR SYSTEMS ENGINEERING, REQUIREMENTS ENGINEERING, AND SOFTWARE ENGINEERING USING PLANGUAGE, P1, DOI 10.1016/B978-075066507-0/50005-2
   GILB T, 1998, PRINCIPLES SOFTWARE
   Gilb T., 2014, AGILE REC
   In H, 2001, PROC INT CONF SOFTW, P555
   Kläs M, 2011, EUROMICRO CONF PROC, P341, DOI 10.1109/SEAA.2011.62
   Maiden N, 2008, IEEE SOFTWARE, V25, P90, DOI 10.1109/MS.2008.54
   McKinsey, 1997, SOFTWARE IEEE, V4, P81
   Miguel JP., 2014, Int. J. Softw. Eng. Appl, V5, P31, DOI [DOI 10.5121/IJSEA.2014.5603, 10.5121/ijsea.2014, DOI 10.5121/IJSEA.2014]
   Mohagheghi P, 2010, 5 C2M EEMDD WORKSH E, P6
   Mohagheghi P, 2008, FRONT ARTIF INTEL AP, V182, P14, DOI 10.3233/978-1-58603-916-5-14
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Veld T.K., 2014, P NOKOBIT C, V22
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
   Woods E, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P56, DOI 10.1109/WICSA.2011.17
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
NR 38
TC 14
Z9 15
U1 0
U2 24
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2017
VL 88
BP 96
EP 109
DI 10.1016/j.infsof.2017.04.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW2TI
UT WOS:000402348500006
DA 2024-07-18
ER

PT J
AU Valle, AM
   Santos, EAP
   Loures, ER
AF Valle, Arthur M.
   Santos, Eduardo A. P.
   Loures, Eduardo R.
TI Applying process mining techniques in software process appraisals
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Process mining; Software process assessment; SCAMPI; Data collection and
   analysis; Process Mining Extension to SCAMPI
ID MODELS
AB Context: Process assessments are performed to identify the current maturity of organizations in relation to best practices. Existing process assessment methods, although widely used, have limitations such as: dependence on the competencies of appraisers; high amount of effort and resources required; subjectivity to analyze data and to judge on the implementation of practices; low confidence in sampling and its representativeness. Currently, due to the increasing use of information systems to support process execution, detailed information on the implementation of processes are recorded as event logs, transaction logs, etc. This fact enables the usage of process mining techniques as a powerful tool for process analysis. It allows using a significant amount of data with agility and reliability for process assessments.
   Objective: The objective of this paper is to present the development and application of a feasible, usable and useful method, which reduces the limitations of current SCAMPI method and defines how to apply process mining techniques in SCAMPI-based process appraisals.
   Method: Research method comprises nine steps that were performed in a manner that raised questions in the first four steps were answered by the last four steps of the research design.
   Results: The method "Process Mining Extension to SCAMPI" was designed, developed, applied in two cases and submitted for review by experts who judged it viable, usable, and useful.
   Conclusions: As per this research, process mining techniques are suitable to be applied in software process assessments since they are aligned with the purposes of data collection and analysis tasks. In addition to that, the resulting method was judged by experts as something that reduces identified limitations of one of the most used process assessment method. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Valle, Arthur M.; Santos, Eduardo A. P.; Loures, Eduardo R.] Pontificia Univ Catolica Parana, Imaculada Conceicao 1155, BR-80215901 Curitiba, Parana, Brazil.
   [Valle, Arthur M.] Waikato Inst Technol, Tristam St,Private Bag 3036, Hamilton 3240, New Zealand.
   [Santos, Eduardo A. P.] Univ Fed Parana, Pref Lothario Meissner 632, BR-80210170 Curitiba, Parana, Brazil.
C3 Pontificia Universidade Catolica do Parana; Waikato Institute of
   Technology; Universidade Federal do Parana
RP Valle, AM (corresponding author), Pontificia Univ Catolica Parana, Imaculada Conceicao 1155, BR-80215901 Curitiba, Parana, Brazil.; Valle, AM (corresponding author), Waikato Inst Technol, Tristam St,Private Bag 3036, Hamilton 3240, New Zealand.
EM arthur.valle@wintec.ac.nz
RI Santos, Eduardo A P/C-9021-2016
OI Santos, Eduardo A P/0000-0003-3075-9184
CR AG Siemens,, 2013, CORP TECHN SEC DES C
   [Anonymous], 2007, LIFE CYCLE SUPPORT S
   Beecham S, 2005, J SYST SOFTWARE, V76, P251, DOI 10.1016/j.jss.2004.06.004
   CMMI Institute, 2014, STAND CMMI APPR METH
   CMMI Product Team, 2010, CMUSEI2010TR034 CMMI
   CMMI Product Team, 2010, Technical Report CMU/SEI-2010-TR-033
   Cruafias J Riera, 2012, PROCESS MINING OPPOR
   Defence Materiel Organisation, 2007, CMUSEI2007TN006 DEF
   Forsberg K., 1991, INCOSE INT S, V1, P57, DOI [10.1002/j-2334-5837.1991.tb01484.x,o.1, DOI 10.1002/J-2334-5837.1991.TB01484.X,O.1, 10.1002/j.2334-5837.1991.tb01484.x, DOI 10.1002/J.2334-5837.1991.TB01484.X]
   Greenfield J., 2003, OOPSLA 03 COMPANION, P16, DOI DOI 10.1145/949344.949348
   Laporte C Y., 2013, Cross Talk, P28
   Lemos A.M., 2011, SEKE, P654
   Mans R., 2014, SUPPORTING PROCESS M
   Margarido IL, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P47, DOI 10.1109/QUATIC.2012.37
   Mc Caffery F, 2007, IEEE SOFTWARE, V24, P24, DOI 10.1109/MS.2007.3
   Mendling J., 2007, WORKSH EV DRIV CHAIN, p[39, 52]
   Montali M, 2010, LECT NOTES BUS INF P, V56, P343
   Munoz-Gama Jorge, 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P291, DOI 10.1007/978-3-642-38697-8_16
   Ning Chen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P333, DOI 10.1109/ASE.2011.6100070
   Northcutt D.M., 2010, SOFTW QUAL PROF, V12, P19
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Pino FJ, 2010, INFORM SOFTWARE TECH, V52, P1044, DOI 10.1016/j.infsof.2010.04.004
   Rout TP, 2007, J SYST SOFTWARE, V80, P1483, DOI 10.1016/j.jss.2007.01.045
   Rozinat A, 2008, INFORM SYST, V33, P64, DOI 10.1016/j.is.2007.07.001
   Rubin V, 2007, LECT NOTES COMPUT SC, V4470, P169
   Sadiq S, 2007, LECT NOTES COMPUT SC, V4714, P149
   Samalikova J, 2014, J SOFTW-EVOL PROC, V26, P714, DOI 10.1002/smr.1645
   Samalikova J., 2012, PROCESS MINING APPL
   SCAMPI Upgrade Team, 2011, CMUSEI2011TR006 SCAM
   Tarhan A, 2016, INFORM SOFTWARE TECH, V75, P122, DOI 10.1016/j.infsof.2016.01.010
   Valle A., 2014, SIMPDA, P179
   Valle Neto A.M., PROCESS MINING EXTEN
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst W, 2012, LECT NOTES BUS INF P, V99, P169
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2012, IEEE INTERNET COMPUT, V16, P82, DOI 10.1109/MIC.2012.12
   van der Aalst WMP, 2010, COMPUTER, V43, P90, DOI 10.1109/MC.2010.61
   van der Aalst W, 2011, DECIS SUPPORT SYST, V50, P636, DOI 10.1016/j.dss.2010.08.014
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P130
   van der Heijden T., 2012, PROCESS MINING PROJE
   Van Eck M., 2015, PM2 PROCESS MINING P
NR 41
TC 14
Z9 14
U1 0
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 19
EP 31
DI 10.1016/j.infsof.2017.01.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300002
DA 2024-07-18
ER

PT J
AU Youm, KC
   Ahn, J
   Lee, E
AF Youm, Klaus Changsun
   Ahn, June
   Lee, Eunseok
TI Improved bug localization based on code change histories and bug reports
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug localization; Information retrieval; Bug reports; Stack traces; Code
   change history; Method analysis
ID CHANGE IMPACT ANALYSIS
AB Context: Several issues or defects in released software during the maintenance phase are reported to the development team. It is costly and time-consuming for developers to precisely localize bugs. Bug reports and the code change history are frequently used and provide information for identifying fault locations during the software maintenance phase.
   Objective: It is difficult to standardize the style of bug reports written in natural languages to improve the accuracy of bug localization. The objective of this paper is to propose an effective information retrieval based bug localization method to find suspicious files and methods for resolving bugs.
   Method: In this paper, we propose a novel information retrieval-based bug localization approach, termed Bug Localization using Integrated Analysis (BLIA). Our proposed BLIA integrates analyzed data by utilizing texts, stack traces and comments in bug reports, structured information of source files, and the source code change history. We improved the granularity of bug localization from the file level to the method level by extending previous bug repository data.
   Results: We evaluated the effectiveness of our approach based on experiments using three open-source projects, namely AspectJ, SWT, and ZXing. In terms of the mean average precision, on average our approach improves the metric of BugLocator, BLUiR, BRTracer, AmaLgam and the preliminary version of BLIA by 54%, 42%, 30%, 25% and 15%, respectively, at the file level of bug localization.
   Conclusion: Compared with prior tools, the results showed that BLIA outperforms these other methods. We analyzed the influence of each score of BLIA from various combinations based on the analyzed information. Our proposed enhancement significantly improved the accuracy. To improve the granularity level of bug localization, a new approach at the method level is proposed and its potential is evaluated. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Youm, Klaus Changsun; Ahn, June; Lee, Eunseok] Sungkyunkwan Univ, Dept Informat & Commun Engn, Suwon, South Korea.
   [Youm, Klaus Changsun] Samsung Elect, Mobile Commun & Business, Suwon, South Korea.
C3 Sungkyunkwan University (SKKU); Samsung; Samsung Electronics
RP Youm, KC; Lee, E (corresponding author), Sungkyunkwan Univ, Dept Informat & Commun Engn, Suwon, South Korea.; Youm, KC (corresponding author), Samsung Elect, Mobile Commun & Business, Suwon, South Korea.
EM klausyoum@skku.edu; ahnjune@skku.edu; leees@skku.edu
OI Lee, Eunseok/0000-0002-6557-8087
FU Next-Generation Information Computing Development Program through the
   National Research Foundation of Korea (NRF) - Ministry of Education,
   Science and Technology [2012M3C4A7033347]; MISP (Ministry of Science,
   ICT & Future Planning) of Korea, under the National program for
   Excellence in Software
FX This research was supported by the Next-Generation Information Computing
   Development Program through the National Research Foundation of Korea
   (NRF) funded by the Ministry of Education, Science and Technology (no.
   2012M3C4A7033347), and the MISP (Ministry of Science, ICT & Future
   Planning) of Korea, under the National program for Excellence in
   Software supervised by the IITP (Institute for Information &
   Communications Technology Promotion). We are extremely grateful to Zhou
   et al., Saha et al. and Wong et al. for access to their datasets and
   results on their web sites, and anonymous reviewers for their feedback
   and suggestions for improvement.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2011, P ACM SIGSOFT S EURO
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 1999, FDN STAT NATURAL LAN
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Binkley David., 2010, Encyclopedia of Software Engineering, P454
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Conover W.J., 1999, WILEY SERIES PROBABI
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Davidsen MK, 2010, INFORM SOFTWARE TECH, V52, P707, DOI 10.1016/j.infsof.2010.03.003
   Davies S., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P125, DOI 10.1109/WCRE.2012.22
   Davies S, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P126, DOI 10.1109/ISSREW.2013.6688891
   Deerwester S., 1988, IMPROVING INFORM RET
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Gopinath D, 2012, IEEE INT CONF AUTOM, P40, DOI 10.1145/2351676.2351683
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lewis C., 2011, OU BUG PREDICTION GO
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Li BX, 2013, INFORM SOFTWARE TECH, V55, P1437, DOI 10.1016/j.infsof.2013.02.003
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Rao S., 2013, 4 PUR U SCH EL COMP
   Ren X, 2006, IEEE T SOFTWARE ENG, V32, P718, DOI 10.1109/TSE.2006.90
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Rocha H., 2015, J SOFTW ENG RES DEV, V3, P3, DOI DOI 10.1186/s40411-015-0018-x
   Rungta N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P109, DOI 10.1109/ICSM.2012.6405261
   Saha RK, 2014, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSME.2014.38
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Sisman B., 2016, J SOFTWARE EVOLUTION
   Sousa MJC, 1998, PROC IEEE INT CONF S, P265, DOI 10.1109/ICSM.1998.738518
   Sun SF, 2016, IEEE INT CONF SOFTW, P124, DOI 10.1109/ICST.2016.31
   Tantithamthavorn C, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P108, DOI 10.1109/ISSREW.2013.6688888
   Thung F, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P767, DOI 10.1145/2635868.2661678
   Wang Q, 2015, J NANOMATER, V2015, DOI 10.1155/2015/408634
   Wang SH, 2013, IEEE WORK CONF MIN S, P247, DOI 10.1109/MSR.2013.6624036
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wang XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P572, DOI 10.1145/2591062.2591066
   Wloka J, 2009, PROC INT CONF SOFTW, P567, DOI 10.1109/ICSE.2009.5070557
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong W. Eric, 2009, UTDCS45
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Zhang LM, 2013, J SOFTW-EVOL PROC, V25, P1357, DOI 10.1002/smr.1634
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 60
TC 73
Z9 85
U1 0
U2 28
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 177
EP 192
DI 10.1016/j.infsof.2016.11.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000011
DA 2024-07-18
ER

PT J
AU Silva, RA
   de Souza, SDS
   de Souza, PSL
AF Silva, Rodolfo Adamshuk
   Senger de Souza, Simone do Rocio
   Lopes de Souza, Paulo Sergio
TI A systematic review on search based mutation testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Mutation testing; Search based software testing; Meta-heuristic
ID SOFTWARE TEST DATA; REAL-TIME SYSTEMS; GENETIC ALGORITHM; GENERATION;
   FRAMEWORK; SELECTION; IMMUNE
AB Context: Search Based Software Testing refers to the use of meta-heuristics for the optimization of a task in the context of software testing. Meta-heuristics can solve complex problems in which an optimum solution must be found among a large amount of possibilities. The use of meta-heuristics in testing activities is promising because of the high number of inputs that should be tested. Previous studies on search based software testing have focused on the application of meta-heuristics for the optimization of structural and functional criteria. Recently, some researchers have proposed the use of SBST for mutation testing and explored solutions for the cost of application of this testing criterion.
   Objective: The objective is to identify how SBST has been explored in the context of mutation testing, how fitness functions are defined and the challenges and research opportunities in the application of meta-heuristic search techniques.
   Method: A systematic review involving 263 papers published between 1996 and 2014 examined the studies on the use of meta-heuristic search techniques for the optimization of mutation testing.
   Results: The results show meta-heuristic search techniques have been applied for the optimization of test data generation, mutant generation and selection of effective mutation operators. Five meta-heuristic techniques, namely Genetic Algorithm, Ant Colony, Bacteriological Algorithm, Hill Climbing and Simulated Annealing have been used in search based mutation testing. The review addressed different fitness functions used to guide the search.
   Conclusion: Search based mutation testing is a field of interest, however, some issues remain unexplored. For instance, the use of meta-heuristics for the selection of effective mutation operators was identified in only one study. The results have pointed a range of possibilities for new studies to be developed, i.e., identification of equivalent mutants, experimental studies and application to different domains, such as concurrent programs. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Silva, Rodolfo Adamshuk; Senger de Souza, Simone do Rocio; Lopes de Souza, Paulo Sergio] Univ Sao Paulo, Inst Math & Comp Sci, BR-13566590 Sao Carlos, SP, Brazil.
C3 Universidade de Sao Paulo
RP Silva, RA (corresponding author), Univ Sao Paulo, Inst Math & Comp Sci, BR-13566590 Sao Carlos, SP, Brazil.
EM adamshuk@icmc.usp.br; srocio@icmc.usp.br; pssouza@icmc.usp.br
RI Souza, Simone Senger R/G-7127-2011; Adamshuk Silva,
   Rodolfo/IYJ-9140-2023; Souza, Paulo S. L./F-5487-2011
OI Adamshuk Silva, Rodolfo/0000-0003-4215-7455; Souza, Simone
   Senger/0000-0001-9007-9821; Souza, Paulo/0000-0002-1560-2704
FU CAPES, Brazilian funding agency [DS-7252237/D]
FX The authors acknowledge CAPES, Brazilian funding agency (grant no.
   DS-7252237/D) for the financial support.
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   [Anonymous], P IEEE DES DIAGN EL
   [Anonymous], P 15 ANN C COMP GEN
   [Anonymous], INTRO TESTE SOFTWARE
   [Anonymous], ACM INT C P SERIES
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], P 15 ANN C COMP GEN
   [Anonymous], 1980, THESIS
   [Anonymous], P 2010 INT C COMP IN
   [Anonymous], REV SISTEMAS INFORM
   [Anonymous], P 8 IEEE INT C SOFTW
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P 11 ANN C GEN EV CO
   [Anonymous], 2007, THESIS
   [Anonymous], 1996, TECHNICAL REPORT
   [Anonymous], EMPIR SOFTW IN PRESS
   [Anonymous], TECHNICAL REPORT
   [Anonymous], P 6 INT C KSE KNOWL
   [Anonymous], UK SOFTW TEST WORKSH
   [Anonymous], P 13 ANN C COMP GEN
   [Anonymous], P 7 INT WORKSH SEARC
   Arcuri A, 2014, LECT NOTES COMPUT SC, V8636, P1
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Banzi AS, 2012, EXPERT SYST APPL, V39, P12131, DOI 10.1016/j.eswa.2012.04.041
   Barbosa E. F., 1998, 12th Brazilian Symposium on Software Engineering. Proceedings, P103
   Bashir M. B., 2013, P 9 INT C EM TECHN I, P1, DOI 10.1109/ICET.2013
   Baudry B, 2005, SOFTW TEST VERIF REL, V15, P73, DOI 10.1002/stvr.313
   Baudry B, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.30
   Baudry B, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P195, DOI 10.1109/ISSRE.2002.1173246
   Baudry B, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P253
   Baudry B, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - TOOLS 33, PROCEEDINGS, P108, DOI 10.1109/TOOLS.2000.848755
   Baudry B, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P4, DOI 10.1109/ISSRE.2000.885856
   Ben Ali YM, 2012, INT J APPL METAHEURI, V3, P15, DOI 10.4018/jamc.2012010102
   BLANCHARD Emmanuel., 2011, La police parisienne et les Algeriens (1944-1962), P1
   Bottaci L., 2001, P INT WORKSH SOFTW E, P3
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   Domínguez-Jiménez JJ, 2010, LECT NOTES COMPUT SC, V6189, P490, DOI 10.1007/978-3-642-13911-6_35
   Emer MCFP, 2003, SOFTWARE QUAL J, V11, P167, DOI 10.1023/A:1023772729494
   Estero-Botaro A, 2014, LECT NOTES COMPUT SC, V8763, P1, DOI 10.1007/978-3-662-44857-1_1
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gay Gregory., 2014, Proceedings of the 7th International Workshop on Search-Based Software Testing. SBST 2014, P19
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   Glover F. W., 2003, HDB METAHEURISTICS
   Haga H, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON CONTROL SYSTEM, COMPUTING AND ENGINEERING (ICCSCE 2012), P119, DOI 10.1109/ICCSCE.2012.6487127
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P80, DOI 10.1109/ICSTW.2010.13
   Harman M., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P397
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Hermadi I, 2003, IEEE C EVOL COMPUTAT, P85, DOI 10.1109/CEC.2003.1299560
   Holland I.H., 1975, ADAPTATION NATURAL A
   Hussain S., 2008, THESIS
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jones BF, 1998, COMPUT J, V41, P98, DOI 10.1093/comjnl/41.2.98
   Domínguez-Jiménez JJ, 2009, ECOWS'09: PROCEEDINGS OF THE 7TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P97, DOI 10.1109/ECOWS.2009.18
   Domínguez-Jiménez JJ, 2009, LECT NOTES COMPUT SC, V5404, P229
   Khor S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P346, DOI 10.1109/ASE.2004.1342761
   Kirkpatrick S., 1988, NEUROCOMPUTING FDN R, P551
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Langdon WB, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P21, DOI 10.1109/TAICPART.2009.18
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Le Thi My Hanh, 2014, International Journal of Computer and Information Technology, V3, P763
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   de Oliveira AAL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P829
   Lopez-Herrejon RE, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1255, DOI 10.1145/2576768.2598305
   Moncao ACBL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2533
   Louzada J., 2012, 2 0 1 2 IEEE C EVOLU, P1
   Maia Camila Loiola Brito, 2010, Advances in Software Engineering, DOI 10.1155/2010/428521
   Maia C. L. B., 2009, P AN 41 S BRAS PESQ, P1824
   Mansour N, 2001, J SYST SOFTWARE, V57, P79, DOI 10.1016/S0164-1212(00)00119-9
   Masud M., 2005, PROC CAN C ELECT COM, P1049
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   May P, 2003, LECT NOTES COMPUT SC, V2787, P81
   May P, 2007, LECT NOTES COMPUT SC, V4628, P336
   Mayo Michael, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P158, DOI 10.1007/978-3-642-39742-4_13
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Mishra KK, 2010, INT CONF COMP SCI, P426, DOI 10.1109/ICCSIT.2010.5564072
   Molinero C, 2009, LECT NOTES COMPUT SC, V5517, P343, DOI 10.1007/978-3-642-02478-8_43
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Nilsson R., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P306, DOI 10.1109/CMPSAC.2004.1342848
   Nilsson R, 2006, ELECTRON NOTES THEOR, V164, P97, DOI 10.1016/j.entcs.2006.10.010
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Omar E, 2014, IEEE ICST WORKSHOP, P165, DOI 10.1109/ICSTW.2014.19
   Omar E, 2013, PROC INT SYMP SOFTW, P340, DOI 10.1109/ISSRE.2013.6698887
   Omar E, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1271, DOI 10.1145/2576768.2598286
   Papadakis M., 2010, P 5 WORKSH AUT SOFTW, P111, DOI [http://doi.acm.org/10.1145/1808266, DOI 10.1145/1808266.1808283]
   Papadakis M, 2012, FRONT ARTIF INTEL AP, V240, P217, DOI 10.3233/978-1-61499-094-9-217
   Papadakis M, 2013, SPRINGERPLUS, V2, DOI 10.1186/2193-1801-2-121
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Patrick M, 2013, IEEE ICST WORKSHOP, P53, DOI 10.1109/ICSTW.2013.14
   PEZZE Mauro, 2008, Teste e analise de software, V1
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Schwarz B., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P382, DOI 10.1109/ICSTW.2011.56
   Serrestou Y, 2007, DSD 2007: 10TH EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN ARCHITECTURES, METHODS AND TOOLS, PROCEEDINGS, P222, DOI 10.1109/DSD.2007.4341472
   Subramanian Selvakumar, 2011, Journal of Computer Science, V7, P1581, DOI 10.3844/jcssp.2011.1581.1589
   Talbi E.-G, 2009, METAHEURISTICS DESIG, V74, DOI DOI 10.1002/9780470496916
   Tao Xie, 2012, 2012 IEEE 25th International SOC Conference (SOCC), P283, DOI 10.1109/SOCC.2012.6398362
   Tao Xie, 2011, Proceedings of the 2011 14th Euromicro Conference on Digital System Design. Architectures, Methods and Tools. (DSD 2011), P608, DOI 10.1109/DSD.2011.83
   Tracey N, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/ASE.1998.732680
   Untch R.H., 2009, ACMSE, P1, DOI 10.1145/1566445.1566540
   Vos TEJ, 2013, SOFTWARE QUAL J, V21, P259, DOI 10.1007/s11219-012-9174-y
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang K, 2014, I C RELIABIL MAINTAI, P418, DOI 10.1109/ICRMS.2014.7107215
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   Wegener J, 1998, REAL-TIME SYST, V15, P275, DOI 10.1023/A:1008096431840
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang YC, 2013, IEEE INT SYMP CIRC S, P2545, DOI 10.1109/ISCAS.2013.6572397
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zhan Y, 2008, J SYST SOFTWARE, V81, P262, DOI 10.1016/j.jss.2007.05.039
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
NR 119
TC 52
Z9 56
U1 1
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 19
EP 35
DI 10.1016/j.infsof.2016.01.017
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200003
DA 2024-07-18
ER

PT J
AU Garousi, V
   Mäntylä, MV
AF Garousi, Vahid
   Mantyla, Mika V.
TI When and what to automate in software testing? A multi-vocal literature
   review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Software test automation; Decision support; When to automate; What to
   automate; Multivocal literature review; Systematic literature review;
   Systematic Mapping study
ID PRIORITIZATION; CHALLENGES
AB Context: Many organizations see software test automation as a solution to decrease testing costs and to reduce cycle time in software development. However, establishment of automated testing may fail if test automation is not applied in the right time, right context and with the appropriate approach.
   Objective: The decisions on when and what to automate is important since wrong decisions can lead to disappointments and major wrong expenditures (resources and efforts). To support decision making on when and what to automate, researchers and practitioners have proposed various guidelines, heuristics and factors since the early days of test automation technologies. As the number of such sources has increased, it is important to systematically categorize the current state-of-the-art and-practice, and to provide a synthesized overview.
   Method: To achieve the above objective, we have performed a Multivocal Literature Review (MLR) study on when and what to automate in software testing. A MLR is a form of a Systematic Literature Review (SLR) which includes the grey literature (e.g., blog posts and white papers) in addition to the published (formal) literature (e.g., journal and conference papers). We searched the academic literature using the Google Scholar and the grey literature using the regular Google search engine.
   Results: Our MLR and its results are based on 78 sources, 52 of which were grey literature and 26 were formally published sources. We used the qualitative analysis (coding) to classify the factors affecting the when- and what-to-automate questions to five groups: (1) Software Under Test (SUT)-related factors, (2) test-related factors, (3) test-tool-related factors, (4) human and organizational factors, and (5) cross-cutting and other factors. The most frequent individual factors were: need for regression testing (44 sources), economic factors (43), and maturity of SUT (39).
   Conclusion: We show that current decision-support in software test automation provides reasonable advice for industry, and as a practical outcome of this research we have summarized it as a checklist that can be used by practitioners. However, we recommend developing systematic empirically-validated decision-support approaches as the existing advice is often unsystematic and based on weak empirical evidence. (c) 2016 Elsevier B.V. All rights reserved.
C1 [Garousi, Vahid] Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.
   [Garousi, Vahid] Moral Software Engn Consulting Corp, Calgary, AB, Canada.
   [Mantyla, Mika V.] Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
C3 Hacettepe University; University of Oulu
RP Garousi, V (corresponding author), Hacettepe Univ, Dept Comp Engn, Software Engn Res Grp, Ankara, Turkey.; Garousi, V (corresponding author), Moral Software Engn Consulting Corp, Calgary, AB, Canada.
EM vahid.garousi@hacettepe.edu.tr; mika.mantyla@oulu.fi
RI Mäntylä, Mika V/E-7644-2012
OI Garousi, Vahid/0000-0001-6590-7576; Mantyla, Mika/0000-0002-2841-5879
FU Hacettepe University; Scientific and Technological Research Council of
   Turkey (TUBITAK) [115E805]
FX Vahid Garousi was partially supported by several internal grants
   provided by the Hacettepe University and the Scientific and
   Technological Research Council of Turkey (TUBITAK) via grant #115E805.
   The authors would like to thank Professor Burak Turhan and Dr. Pilar
   Rodriguez from the University of Oulu and the anonymous reviewers for
   their comments on the earlier versions of this manuscript.
CR Afzal Wasif, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P488
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Amannejad Y, 2014, IEEE ICST WORKSHOP, P302, DOI 10.1109/ICSTW.2014.34
   Ammann Paul, 2008, Introduction to software testing, V1st
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2007, COCHRANE DATAB SYST
   [Anonymous], 2008, PROC 12 INT C EVAL A
   [Anonymous], 2012, How Google Tests Software
   Archie K.C., 1991, US Patent, Patent No. [#US 5021997, 5021997]
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Aveyard H., 2010, DOING LIT REV HLTH S, V2nd
   Bach J., 1997, P INT C EXP TEST COM
   Banerjee I., 2013, INFORM SOFTW TECHNOL
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Bell M., 2010, REPORT PROFESSIONAL
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Benzies KM, 2006, WORLDV EVID-BASED NU, V3, P55, DOI 10.1111/j.1741-6787.2006.00051.x
   Bozkurt M, 2013, SOFTW TEST VERIF REL, V23, P261, DOI 10.1002/stvr.1470
   Britton T, 2013, Reversible Debugging Software "Quantify the Time and Cost Saved Using Reversible Debuggers
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Cooper HM., 2009, HDB RES SYNTHESIS ME, V2nd edn
   Cruzes D.S., 2010, P ACM IEEE INT S EMP
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Daniel B., 2009, P 2009 IEEE ACM INT
   Desikan S., 2006, Software Testing: Principles and Practice
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Dustin E., 2009, IMPLEMENTING AUTOMAT
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   Feldstein J., 2014, RECRUIT MOTIVATE ENE
   Fewster M., 2012, COMMON MISTAKES TEST
   Garousi V., 2013, INFORM SOFTW TECHNOL
   Garousi V., 2016, INT C EV ASS SOFTW E
   Garousi V., 2016, ONLINE PAPER REPOSIT
   Garousi V., 2016, IEEE INT C SOFTW TES
   Garousi V., ONLINE PAPER REPOSIT
   Garousi V., 2011, J SOFTW SYST MODEL S
   Garousi V., 2013, TESTISTANBUL IND C
   Garousi V, 2015, J SYST SOFTWARE, V108, P148, DOI 10.1016/j.jss.2015.06.036
   Garousi V, 2013, ADV COMPUT, V89, P163, DOI 10.1016/B978-0-12-408094-2.00005-9
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Glass R.L., 2006, SOFTWARE CREATIVITY
   Harman M., 2014, IEEE T SOFTW ENG
   Haugset B, 2008, AGILE 2008, PROCEEDINGS, P27, DOI 10.1109/Agile.2008.82
   Hoffman D., 1999, SOFTW TEST AN REV C
   Hopewell S, 2005, PUBLICATION BIAS IN META-ANALYSIS: PREVENTION, ASSESSMENT AND ADJUSTMENTS, P49, DOI 10.1002/0470870168.ch4
   HP Capgemini, WORLD QUAL REP 2014
   Huizinga D., 2007, AUTOMATED DEFECT PRE
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   KAner C., 2001, LESSONS LEARNED SOFT
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Karhu Katja, 2009, 2009 2nd International Conference on Software Testing Verification and Validation (ICST 2009), P201, DOI 10.1109/ICST.2009.16
   Kelly M., 2007, ROI TEST AUTOMATION
   Kitchenham B., 2007, EVIDENCE BASED SOFTW
   Kitchenham B., 2010, P ACM IEEE INT C SOF, P589, DOI DOI 10.1145/1806799.1806887
   Kulesovs I., 2015, IOS APPL TESTING, V3, P138
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Mahood Q, 2014, RES SYNTH METHODS, V5, P221, DOI 10.1002/jrsm.1106
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Mosley DJ, 2002, JUST ENOUGH SOFTWARE
   Neto A.C.D., 2007, P ACM INT WORKSH EMP
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Page A., 2008, WE TEST SOFTWARE MIC
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pettichord B., 2001, 7 STEPS TEST AUTOMAT
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Sahaf Z., 2014, PROC INT C SOFTW SYS, P149, DOI [10.1145/2600821.2600832, DOI 10.1145/2600821.2600832]
   Shirole M., 2013, SIGSOFT SOFTW ENG NO, V38, P1, DOI DOI 10.1145/2492248.2492274
   Singh PK, 2013, IEEE INT ADV COMPUT, P1455
   Stobi K., 2009, PAC NW SOFTW QUAL C
   Stobie K., 2009, TOO MUCH AUTOMATION
   Sulayman M, 2009, COMM COM INF SC, V59, P1
   Taipale O, 2011, INT J SYST ASSUR ENG, V2, P114, DOI 10.1007/s13198-011-0065-6
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Whyte W.F., 1990, PARTICIPATORY ACTION
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Yasin A., 2012, THESIS
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yusifoglu V.G., 2014, J INFORM SOFTW TECHN
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   [No title captured]
NR 86
TC 98
Z9 107
U1 2
U2 49
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2016
VL 76
BP 92
EP 117
DI 10.1016/j.infsof.2016.04.015
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO6VZ
UT WOS:000377922900006
DA 2024-07-18
ER

PT J
AU Han, DS
   Yang, QL
   Xing, JC
   Li, JL
   Wang, HD
AF Han, Deshuai
   Yang, Qiliang
   Xing, Jianchun
   Li, Juelong
   Wang, Hongda
TI FAME: A UML-based framework for modeling fuzzy self-adaptive software
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software self-adaptation; Self-adaptive software modeling; SFSA; UML;
   Uncertainty
ID ADAPTATION; REQUIREMENTS
AB Context: Software Fuzzy Self-Adaptation (SFSA) is a fuzzy control-based software self-adaptation paradigm proposed to deal with the fuzzy uncertainty existing in self-adaptive software. However, as many software engineers lack fuzzy control knowledge, it is difficult for them to design and model this kind of fuzzy self-adaptive software (F-SAS). Therefore, efficient and effective modeling technologies and tools are needed for the SFSA framework.
   Objective: This paper aims to identify modeling requirements of F-SAS and to provide a modeling framework to specify, design and model F-SAS systems. Such a framework can simplify modeling process of F-SAS and improve the accessibility of software engineers to the SFSA paradigm.
   Method: This study proposes a modeling framework called Fuzzy self-Adaptation ModEling (FAME). By extending UML, FAME creates three types of modeling views. An analysis view called Fuzzy Case Diagram is created to specify the fuzzy self-adaptation goal and the realization processes of this goal. A structure view called Fuzzy Class Diagram is created to describe the fuzzy concepts and structural characteristics of F-SAS. A behavior view called Fuzzy Sequence Diagram is created to depict the dynamic behaviors of the F-SAS systems. The framework is implemented as a plug-in of Enterprise Architect.
   Results: We demonstrate the effectiveness and efficiency of the proposed approach by carrying out a subject-based empirical evaluation. The results show that FAME framework can improve modeling quality of F-SAS systems by 44.38% and shorten modeling time of F-SAS systems by 38.41% in comparison with traditional UML. Thus, FAME can considerably ease the modeling process of F-SAS systems.
   Conclusion: FAME framework incorporates the SFSA concepts into standard UML. Therefore, it provides a direct support to model SFSA characteristics and improves the accessibility of software engineers to the SFSA paradigm. Furthermore, it behaves a good example and provides good references for modeling domain-specific software systems. (c) 2016 Elsevier B.V. All rights reserved.
C1 [Han, Deshuai; Yang, Qiliang; Xing, Jianchun; Li, Juelong; Wang, Hongda] PLA Univ Sci & Technol, Coll Def Engn, Nanjing 210007, Jiangsu, Peoples R China.
   [Yang, Qiliang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Li, Juelong] Tech Management Off Naval Def Engn, Beijing 100841, Peoples R China.
C3 Army Engineering University of PLA; Nanjing University
RP Yang, QL (corresponding author), PLA Univ Sci & Technol, Coll Def Engn, Nanjing 210007, Jiangsu, Peoples R China.; Yang, QL (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
EM handeshuai@126.com; yql@893.com.cn
FU Natural Science Foundation of Jiangsu Province [BK20151451]; Foundation
   of State Key Laboratory for Novel Software Technology [KFKT2014B12]
FX The authors are very grateful to the anonymous reviewers for their
   insightful remarks and helpful comments on an earlier draft. This work
   was supported by the Natural Science Foundation of Jiangsu Province
   under Grant No.BK20151451 and the Foundation of State Key Laboratory for
   Novel Software Technology under Grant No.KFKT2014B12.
CR Angelopoulos K, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P23, DOI 10.1109/SEAMS.2013.6595489
   [Anonymous], 2004, THESIS CARNEGIE MELL
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 2011, UML PROF MARTE MOD A
   Bradbury J.S., 2004, Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems. WOSS '04, P28, DOI [10.1145/1075405.1075411, DOI 10.1145/1075405.1075411]
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng S.W., 2007, P ASE WORKSH LIV UNC
   Chuang SN, 2008, IEEE T SOFTWARE ENG, V34, P738, DOI 10.1109/TSE.2008.44
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Dumont GA, 2002, P AMER CONTR CONF, V1-6, P1137, DOI 10.1109/ACC.2002.1023173
   Esfahani Naeem, 2011, SIGSOFT FSE 11 19 AC, P234, DOI DOI 10.1145/2025113.2025147
   Fredericks EM, 2014, EMPIR SOFTW ENG, V19, P1466, DOI 10.1007/s10664-014-9305-0
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Han De-Shuai, 2015, Journal of Software, V26, P730, DOI 10.13328/j.cnki.jos.004758
   Han DS, 2014, CHIN CONT DECIS CONF, P2400, DOI 10.1109/CCDC.2014.6852575
   Hebig R., 2010, Proceedings of the Second International Workshop on Self-organizing Architectures, P21
   Jamshidi P, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P95, DOI 10.1145/2593929.2593940
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Knauss A, 2016, INFORM SOFTWARE TECH, V70, P85, DOI 10.1016/j.infsof.2015.10.001
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Laddaga R., 2004, P INT WORKSH SELF ST, P15
   Ljung L., 2010, INTRO MATH SYST THEO, V15, P221
   Luckey M, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P143, DOI 10.1109/SEAMS.2013.6595501
   Luckey Markus, 2011, PROCEEDING 6 INT S S, P30, DOI [10.1145/1988008.1988014, DOI 10.1145/1988008.1988014]
   Moon SI, 2004, IEEE T SYST MAN CY B, V34, P1045, DOI 10.1109/TSMCB.2003.819485
   Morandini M., 2008, P 2008 INT WORKSH SO, P9, DOI [10.1145/1370018.1370021, DOI 10.1145/1370018.1370021]
   Muller H.A., 2008, Proceedings of the 2nd International Workshop on Ultra-Large-Scale Softwareintensive Systems (ULSSIS 2008), P23
   Object Management Group, 2011, FORMAL20110806 OMG U
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Pascual GG, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P73, DOI 10.1109/SEAMS.2013.6595494
   Qiliang Yang, 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P13, DOI 10.1109/COMPSACW.2011.13
   Ramirez A.J., 2010, P 2010WORKSHOP SOFTW, P49
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Strano Carolyn, 2007, Information Systems and e-Business Management, V5, P379, DOI 10.1007/s10257-007-0053-1
   Tallabaci G, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P93, DOI 10.1109/SEAMS.2013.6595496
   Vogel T., 2013, P INT S SOFTW ENG AD, P129
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Whittle J, 2010, REQUIR ENG, V15, P177, DOI 10.1007/s00766-010-0101-0
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yang Q., 2014, P AS PAC S INT INT, P54
   Yang QL, 2013, J COMPUT SCI TECH-CH, V28, P165, DOI 10.1007/s11390-013-1321-9
   Yang Z., 2014, Requirements Engineering, P105, DOI DOI 10.1007/978-3-662-43610-3_9
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   吕建, 2006, [中国科学. E辑, 技术科学, Science in China. E], V36, P1037
NR 47
TC 11
Z9 13
U1 2
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2016
VL 76
BP 118
EP 134
DI 10.1016/j.infsof.2016.04.014
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DO6VZ
UT WOS:000377922900007
DA 2024-07-18
ER

PT J
AU Saeed, M
   Saleh, F
   Al-Insaif, S
   El-Attar, M
AF Saeed, Mazin
   Saleh, Faisal
   Al-Insaif, Sadiq
   El-Attar, Mohamed
TI Empirical validating the cognitive effectiveness of a new feature
   diagrams visual syntax
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Feature models; Visual syntax evaluation; Software product lines
ID DIMENSIONS
AB Context: Feature models are commonly used to capture and communicate the commonality and variability of features in a Software Product Line. The core component of Feature models is feature diagrams, which graphically depict features in a hierarchical form. In previous work we have proposed a new notation that aims to improve the cognitive effectiveness of feature diagrams.
   Objective: The objective of this paper is to empirically validate the cognitive effectiveness of the new feature diagrams notation in comparison to its original form.
   Methods: We use two distinct empirical user-studies to validate the new notation. The first empirical study uses the survey approach while the second study is a subject-based experiment. The survey study investigates the semantic transparency of the new notation while the second study investigates the speed and accuracy of reading the notation.
   Results: The results of the studies indicate that the proposed changes have significantly improved its cognitive effectiveness.
   Conclusions: The cognitive effectiveness of feature diagrams has been improved, however there remains further research for full acceptance of the new notation by its potential user community. Published by Elsevier B.V.
C1 [Saeed, Mazin; Saleh, Faisal; Al-Insaif, Sadiq; El-Attar, Mohamed] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran 31261, Saudi Arabia.
   [El-Attar, Mohamed] Mississippi State Univ, Comp Sci & Engn Dept, Mississippi State, MS 39762 USA.
C3 King Fahd University of Petroleum & Minerals; Mississippi State
   University
RP El-Attar, M (corresponding author), Mississippi State Univ, Comp Sci & Engn Dept, Butler Hall,665 George Perry St Box 9637, Mississippi State, MS 39762 USA.
EM mazin@kfupm.edu.sa; faisal86@me.com; sadiq.alinsaif@gmail.com;
   melattar@cse.msstate.edu
RI El-Attar, Mohamed/C-4329-2015; Alinsaif, Sadiq/JMP-3807-2023
OI Alinsaif, Sadiq/0000-0002-5185-7704
FU Deanship of Scientific Research (DSR) at King Fand University of
   Petroleum and Minerals (KFUPM) [IN141011]
FX The authors would like to thank the Deanship of Scientific Research
   (DSR) at King Fand University of Petroleum and Minerals (KFUPM) for
   funding this research through project #IN141011. We would like to thank
   the software engineering professionals and academics who partake in the
   survey. We would also like to thank the students who participated in the
   experiment.
CR [Anonymous], SOFTW SERV VAR MAN W
   [Anonymous], 1990, MENTAL REPRESENTATIO, DOI DOI 10.1093/ACPROF:OSO/9780195066661.001.0001
   Asikainen T, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P31, DOI 10.1109/SPLINE.2006.1691575
   Atienza M, 2001, CLIN NEUROPHYSIOL, V112, P2031, DOI 10.1016/S1388-2457(01)00650-2
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bertin J, 1983, IN PRESS
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Buhr R.J. A., 1996, USE CASE MAPS OBJECT
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 1999, LECT NOTES COMPUT SC, V1687, P2, DOI 10.1145/318774.318779
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Dagit J, 2006, J VISUAL LANG COMPUT, V17, P302, DOI 10.1016/j.jvlc.2006.04.006
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Genon N, 2011, LECT NOTES COMPUT SC, V6598, P221, DOI 10.1007/978-3-642-21652-7_14
   Genon N, 2011, LECT NOTES COMPUT SC, V6563, P377, DOI 10.1007/978-3-642-19440-5_25
   Goonetilleke RS, 2001, INT J HUM-COMPUT ST, V55, P741, DOI 10.1006/ijhc.2001.0501
   Gopalakrishnan S, 2010, LECT NOTES BUS INF P, V68, P145
   Green TRG, 2006, J VISUAL LANG COMPUT, V17, P328, DOI 10.1016/j.jvlc.2006.04.004
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Hall T., 2002, Software Process Improvement and Practice, V7, P3, DOI 10.1002/spip.150
   Haugen O., 2012, AD20120805 OMG
   Kang K. C., 1990, Technical Report
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Lehmann ErichL., 1998, NONPARAMETRICS STAT
   Mäder P, 2010, LECT NOTES COMPUT SC, V6394, P226
   Mendling J, 2010, INT J INF SYST MODEL, V1, P40, DOI 10.4018/jismd.2010040103
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Moody D, 2009, LECT NOTES COMPUT SC, V5452, P16, DOI 10.1007/978-3-642-00434-6_3
   Moody DL, 2010, REQUIR ENG, V15, P141, DOI 10.1007/s00766-010-0100-1
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   PALMER SE, 1992, COGNITIVE PSYCHOL, V24, P436, DOI 10.1016/0010-0285(92)90014-S
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Possompes T., 2011, Proceedings of the Twenty-Third International Conference on Software Engineering Knowledge Engineering, Miami Beach, Florida, Etats-Unis, P693
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Reinhartz-Berger I, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P42, DOI 10.1145/2648511.2648516
   Saeed M., 2014, REQUIR ENG, P180
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Tseng M.M., 2001, Handbook of industrial engineering, V3, P684
   vanderHeijden AHC, 1996, VIS COGN, V3, P357
   Wohlin C., 2000, Kluwer Int. Ser. Softw. Eng
   Yu E.S.K., 1997, MODELING REASONING S, P226
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 63
TC 13
Z9 13
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2016
VL 71
BP 1
EP 26
DI 10.1016/j.infsof.2015.10.012
PG 26
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB0RW
UT WOS:000368216200001
DA 2024-07-18
ER

PT J
AU Haselberger, D
AF Haselberger, David
TI A literature-based framework of performance-related leadership
   interactions in ICT project teams
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Leadership; Project team; Team performance; Interpersonal interaction;
   Classification; Clustering
ID TEAMWORK; MODEL
AB Context: In Information and Communication Technology (ICT) projects, leadership interactions affect project team performance and so influence the outcomes of projects. While aspects of team performance have been vastly researched, leadership skills and interactions specific to the challenges of ICT project environments remain less investigated.
   Objective: A taxonomy of leadership interactions is developed and descriptions of interactions are collected to form a framework of leadership interactions that support team performance in ICT projects.
   Method: A systematic literature review was conducted to find resources on supportive leadership interactions in ICT project teams, including categorization schemas of leadership functions and behaviors. The review was limited by the selection of sources to be searched and comprises articles from 1977 until early 2014. The developed taxonomy was compared to benchmark work on team leadership. Risks and challenges of leading ICT project teams as well as descriptions of interactions were collected.
   Results: Throughout the search process, 2780 articles were examined, 218 of which were included in the review. 62 articles qualified to be accepted, 156 were rejected. 20 (including 4 meta-studies) papers holding leadership interaction categories were selected as taxonomy papers. The developed taxonomy holds 18 key dimensions of leadership team interaction. 13 areas of risks and challenges were discerned. 262 leadership interaction descriptions relevant in ICT project teams were retrieved.
   Conclusions: In collected studies, the categories "systems sensing", "planning and scheduling", "coaching", as well as "monitoring and controlling" were highly developed. Many risks deal with project complexity and interpersonal processes. However, leadership interactions addressing these challenges are scarce, indicating a research gap. Furthermore, prominent leadership team interactions such as monitoring or consulting may need to be adapted to deal with challenges specific to ICT project teams. Few studies describe best-practice examples of leadership interaction in ICT teams. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Haselberger, David] Univ Vienna, Fac Comp Sci, A-1010 Vienna, Austria.
C3 University of Vienna
RP Haselberger, D (corresponding author), Univ Vienna, Fac Comp Sci, A-1010 Vienna, Austria.
EM david.haselberger@univie.ac.at
FU EU - Project "iCom - Constructive International Communication in the
   Context of ICT" - European Territorial Co-Operation Austria-Czech
   Republic [M00171]
FX This work was in part supported by the EU - Project "iCom - Constructive
   International Communication in the Context of ICT" (M00171), funded by
   European Territorial Co-Operation Austria-Czech Republic 2007-2013.
CR Abrahamsson P., 2002, Agile software development methods: Review and analysis, P478, DOI DOI 10.1076/CSED.12.3.167.8613
   Ancona DG, 2007, RES TECHNOL MANAGE, V50, P37, DOI 10.1080/08956308.2007.11657460
   [Anonymous], MODEL RISK MANAGEMEN
   [Anonymous], 2006, P 2006 C PATTERN LAN
   [Anonymous], VIKINGPLOP 2012
   [Anonymous], PROJECT MANAGEMENT T
   [Anonymous], JA MACH NUR PLAN
   [Anonymous], UNIFIED SOFTWARE DEV
   [Anonymous], 2012, P 16 EUR C PATT LANG, DOI [DOI 10.1145/2396716.2396731, 10.1145/2396716.2396731]
   [Anonymous], 1973, HARV BUS REV
   [Anonymous], MAN ENG TECHN PORTL
   [Anonymous], P 18 ANN ACM SIGUCCS
   [Anonymous], CONSTRUCTIVE COMMUNI
   [Anonymous], PATTERN LANGUAGES PR
   [Anonymous], LEADERSHIP BEHAV INF
   [Anonymous], EUROPLOP 2007
   [Anonymous], PICMET 2009 P
   [Anonymous], EUROPLOP 2005
   [Anonymous], SYST SCI HICSS 2011
   [Anonymous], THEORY PRACTICE PERS
   [Anonymous], P EUROPLOP C 2013 KL
   [Anonymous], 6 INT C RES WORK LEA
   [Anonymous], 2009, P 42 HAW INT C
   [Anonymous], EUROPLOP 2003
   [Anonymous], 1985, Leadership and performance beyond expectations
   [Anonymous], 31 ASEE IEEE FRONT E
   [Anonymous], EUROPLOP 2004
   [Anonymous], SOFTWARE DEV
   [Anonymous], EUROPILOP 2009
   [Anonymous], SURVEY HIERARCHICAL
   [Anonymous], PATTERN LANGUAGES PR
   [Anonymous], 20 ANN C SOC IND ORG
   [Anonymous], 2008, GUID PROJ MAN BOD KN
   [Anonymous], METADATA THESAURI TA
   [Anonymous], PLOP 1998
   [Anonymous], PLOP 1998
   [Anonymous], FSE 12
   [Anonymous], PARADIGMA HUMANISTIS
   [Anonymous], MAN ENG TECHN 2001 P
   [Anonymous], EXTR CHAOS
   [Anonymous], THESIS
   [Anonymous], 2002, J LEADER ORG STUD, DOI DOI 10.1177/107179190200900102
   [Anonymous], MANAGEMENT CONCEPTS
   [Anonymous], PROTOCOL SYSTEMATIC
   [Anonymous], EUROPLOP 2005
   [Anonymous], 1994, P 5 ANN BORL INT C
   [Anonymous], TECHNICAL REPORT
   [Anonymous], PACIS QUEENSL U TECH
   [Anonymous], 2012, LEADERSHIP CHALLENGE
   [Anonymous], P 41 HAW INT C SYST
   [Anonymous], P 15 ANN SIGCPR C AC
   [Anonymous], P 2012 IEEE ISMOT
   [Anonymous], EUROPLOP 2002
   [Anonymous], EUROPLOP 2011
   [Anonymous], 2004, Workflow Management: Models, Methods, and Systems
   [Anonymous], EUROPLOP 2003
   [Anonymous], PLOP 2011
   [Anonymous], TECHN MAN GLOB EC GR
   Bailey J., 2006, Engineering Management, V15, P34, DOI 10.1049/em:20050607
   Barchiesi MA, 2007, PROCEEDINGS OF 2007 INTERNATIONAL CONFERENCE ON MANAGEMENT SCIENCE & ENGINEERING (14TH) VOLS 1-3, P1437
   BASS BM, 1990, ORGAN DYN, V18, P19, DOI 10.1016/0090-2616(90)90061-S
   Berg J, 2006, SURFACTANT SCI SER, V137, P1
   Bergin J., 2006, EUROPLOP 2006, P1
   Boehm, 2003, BALANCING AGILITY DI
   Brenninkmeyer LD, 2004, ICLS2004: INTERNATIONAL CONFERENCE OF THE LEARNING SCIENCES, PROCEEDINGS, P97
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Burke CS, 2006, LEADERSHIP QUART, V17, P288, DOI 10.1016/j.leaqua.2006.02.007
   Burns M.M., 1978, LEADERSHIP-LONDON
   Cooke-Davies T., 2002, International Journal of Project Management, V20, P185
   Coplien JamesO., 2005, Organizational Patterns of Agile Software Development, V1st
   Curlee W.Gordon., 2010, COMPLEXITY THEORY PR
   Debnath NC, 2006, INT CONF ELECTRO INF, P280, DOI 10.1109/EIT.2006.252148
   Elshamy A, 2006, LECT NOTES COMPUT SC, V4044, P164
   FIEDLER FE, 1964, ADV EXP SOC PSYCHOL, V1, P149, DOI 10.1016/S0065-2601(08)60051-9
   Fleishman E.A., 1991, LEADERSHIP QUART, V2, P245
   Hackman J.R., 1987, Handbook of organizational behavior
   Hackman J.R., 1986, DESIGNING EFFECTIVE, P72
   Hackman JR, 2005, RES ORGAN BEHAV, V26, P37, DOI 10.1016/S0191-3085(04)26002-6
   Hackman JR, 2005, ACAD MANAGE REV, V30, P269, DOI [10.2307/20159119, 10.5465/AMR.2005.16387885]
   Hackman JR., 2002, Leading teams: Setting the stage for great performances
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Haselberger D, 2014, PROCD SOC BEHV, V119, P268, DOI 10.1016/j.sbspro.2014.03.031
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   Hersey P., 1969, MANAGEMENT ORG BEHAV
   Highsmith Jim., 2004, The Agile Software Development Series
   Hijazi Haneen., 2012, International Journal of Computer Applications in Technology, V45, P8
   House RJ, 1997, J MANAGE, V23, P409, DOI 10.1016/S0149-2063(97)90037-4
   House RJ, 1977, The Cutting Edge
   Joshi A, 2009, ORGAN SCI, V20, P240, DOI 10.1287/Orsc.1080.0383
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kriz J., 2006, Self-actualization
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Laplante P., 2003, IT Professional, V5, P46, DOI 10.1109/MITP.2003.1176490
   LEE DR, 1992, 1992 INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, P1, DOI 10.1109/IEMC.1992.225293
   Lee L.G., 1998, BUS PROCESS MANAG J, V4, P214, DOI [DOI 10.1108/14637159810224322, 10.1108/14637159810224322]
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   LORD RG, 1977, ADMIN SCI QUART, V22, P114, DOI 10.2307/2391749
   Majchrzak A, 2004, HARVARD BUS REV, V82, P131
   MANDAKOVIC T, 1991, TECHNOLOGY AND MANAGEMENT, P230, DOI 10.1109/PICMET.1991.183621
   McGrath J.E., 1962, LEADERSHIP BEHAV SOM
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Motschnig-Pitrik R, 2010, J HUMANIST PSYCHOL, V50, P374, DOI 10.1177/0022167809348017
   Nair A, 2006, J OPER MANAG, V24, P948, DOI 10.1016/j.jom.2005.11.005
   Nurmi N., 2009, Proceedings of the 2009 International Workshop on Intercultural Collaboration, P71, DOI DOI 10.1145/1499224.1499237
   Nygren R, 1996, ADV INT ST, V3, P67
   Pan G, 2011, IEEE T ENG MANAGE, V58, P109, DOI 10.1109/TEM.2010.2048908
   POSNER BZ, 1988, EDUC PSYCHOL MEAS, V48, P483, DOI 10.1177/0013164488482024
   Project Management Institute, 2007, PROJ MAN COMP DEV FR
   Ralston L, 2008, AGILE 2008, PROCEEDINGS, P417, DOI 10.1109/Agile.2008.47
   Salas E., 2004, LEADER DEV TRANSFORM, P325
   Salas E, 2008, HUM FACTORS, V50, P540, DOI 10.1518/001872008X288457
   Sarfraz Farhan, 2009, PICMET '09 - 2009 Portland International Conference on Management of Engineering & Technology, P1392, DOI 10.1109/PICMET.2009.5262001
   Sauer C, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1297797.1297801
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Senge P.M., 2006, 5 DISCIPLINE
   Smith J.L., 2005, Proceedings of the 43rd annual southeast regional conference, V2, P300
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Sumner M, 2006, INFORM SYST MANAGE, V23, P43, DOI 10.1201/1078.10580530/46352.23.4.20060901/95112.6
   Thamhain H.J., 1999, Proceedings of the 32nd Hawaii International Conference on System Sciences, HICSS'99, P1
   Thoma Don, 2007, Proceedings of the 2007 Integrated Communications, Navigation and Surveillance Conference, P1
   Thomasson J. A., 2000, Proceedings of the 5th International Conference on Precision Agriculture, Bloomington, Minnesota, USA, 16-19 July, 2000, P1
   Tuffley D, 2012, IET SOFTW, V6, P176, DOI 10.1049/iet-sen.2011.0044
   Turner J., 2005, PROJ MANAG J, V36, P49, DOI DOI 10.1177/875697280503600206
   VROOM VH, 1995, LEADERSHIP QUART, V6, P169, DOI 10.1016/1048-9843(95)90033-0
   Wageman R, 2009, ORGAN DYN, V38, P192, DOI 10.1016/j.orgdyn.2009.04.004
   Wang JT, 2010, TECHNOVATION, V30, P601, DOI 10.1016/j.technovation.2010.07.003
   Yamauchi Y., 2006, 28th International Conference on Software Engineering Proceedings, P877, DOI 10.1145/1134285.1134439
   Zaccaro SJ, 2001, LEADERSHIP QUART, V12, P451, DOI 10.1016/S1048-9843(01)00093-5
NR 128
TC 6
Z9 10
U1 1
U2 27
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 1
EP 17
DI 10.1016/j.infsof.2015.09.003
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DA3LC
UT WOS:000367697600001
DA 2024-07-18
ER

PT J
AU Ahmed, BS
   Abdulsamad, TS
   Potrus, MY
AF Ahmed, Bestoun S.
   Abdulsamad, Taib Sh.
   Potrus, Moayad Y.
TI Achievement of minimized combinatorial test suite for
   configuration-aware software functional testing using the Cuckoo Search
   algorithm
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Combinatorial testing; Search-based software testing; Cuckoo Search;
   Covering array; Test generation tools; Mutation testing
ID PARTICLE SWARM OPTIMIZATION; COVERING ARRAYS; GENERATION; SYSTEM
AB Context: Software has become an innovative solution nowadays for many applications and methods in science and engineering. Ensuring the quality and correctness of software is challenging because each program has different configurations and input domains. To ensure the quality of software, all possible configurations and input combinations need to be evaluated against their expected outputs. However, this exhaustive test is impractical because of time and resource constraints due to the large domain of input and configurations. Thus, different sampling techniques have been used to sample these input domains and configurations.
   Objective: Combinatorial testing can be used to effectively detect faults in software-under-test. This technique uses combinatorial optimization concepts to systematically minimize the number of test cases by considering the combinations of inputs. This paper proposes a new strategy to generate combinatorial test suite by using Cuckoo Search concepts.
   Method: Cuckoo Search is used in the design and implementation of a strategy to construct optimized combinatorial sets. The strategy consists of different algorithms for construction. These algorithms are combined to serve the Cuckoo Search.
   Results: The efficiency and performance of the new technique were proven through different experiment sets. The effectiveness of the strategy is assessed by applying the generated test suites on a real-world case study for the purpose of functional testing.
   Conclusion: Results show that the generated test suites can detect faults effectively. In addition, the strategy also opens a new direction for the application of Cuckoo Search in the context of software engineering. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Ahmed, Bestoun S.; Potrus, Moayad Y.] Salahaddin Univ Hawler, Engn Coll, Software Engn Dept, Erbil Kurdistan 44002, Iraq.
   [Abdulsamad, Taib Sh.] Univ Sulaimani, Coll Commerce, Stat & Comp Dept, Sulaimania, Kurdistan, Iraq.
C3 University of Sulimanyah
RP Ahmed, BS (corresponding author), Salahaddin Univ Hawler, Engn Coll, Software Engn Dept, Erbil Kurdistan 44002, Iraq.
EM bestoon82@gmail.com; Taib.shamsadin@yahoo.com; moayad_75@yahoo.com
RI Ahmed, Bestoun S./B-4429-2010; Potrus, Moayad Yousif/AAD-9537-2021
OI Ahmed, Bestoun S./0000-0001-9051-7609; Shamsadin,
   Taib/0000-0001-9774-3721
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahmed B. S., 2014, TEST GENERATION STRA
   Ahmed BS, 2014, ENG SCI TECHNOL, V17, P218, DOI 10.1016/j.jestch.2014.06.001
   Ahmed BS, 2012, APPL SOFT COMPUT, V12, P1330, DOI 10.1016/j.asoc.2011.11.029
   Ahmed BS, 2012, INT J INNOV COMPUT I, V8, P431
   [Anonymous], ACM WORKSH INT SOFTW
   [Anonymous], COMBINATORIAL RANDOM
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2006, P 24 PAC NW SOFTW QU
   [Anonymous], 2012, J ACAD APPL STUDIES
   Arshem j., 2009, TVG DOWNLOAD PAGE
   Baresi L, 2006, ELECTRON NOTES THEOR, V148, P89, DOI 10.1016/j.entcs.2005.12.014
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bhargavaa V, 2013, FLUID PHASE EQUILIBR, V337, P191, DOI 10.1016/j.fluid.2012.09.018
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Calvagna A, 2009, IEEE ICST WORKSHOP, P10, DOI 10.1109/ICSTW.2009.7
   Chateauneuf M, 2002, J COMB DES, V10, P217, DOI 10.1002/jcd.10002
   Chen X, 2009, ASIA PAC SOFWR ENG, P160, DOI 10.1109/APSEC.2009.18
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen M.B., 2003, P 14 INT S SOFTW REL
   COHEN MB, 2004, THESIS U AUCKLAND
   Colbourn CJ, 2010, DISCRETE APPL MATH, V158, P1158, DOI 10.1016/j.dam.2010.03.008
   Czerwonka J., 2008, PAIRWISE INDEPENDENT
   Danziger P, 2009, THEOR COMPUT SCI, V410, P5403, DOI 10.1016/j.tcs.2009.07.057
   Fister Iztok  Jr., 2013, International Journal of Mathematical Modelling and Numerical Optimisation, V4, P387, DOI 10.1504/IJMMNO.2013.059205
   Forbes M, 2008, J RES NATL INST STAN, V113, P287, DOI 10.6028/jres.113.022
   Fouch S., 2007, 6 JOINT M EUR SOFTW
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Hartman A., 2005, SOFTWARE HARDWARE TE, V34
   Hoskins D. S., 2005, 5 INT WORKSH SOFTW P
   Kacker RN, 2013, MEASUREMENT, V46, P3745, DOI 10.1016/j.measurement.2013.02.021
   Kamat S., 2014, INT J INNOV RES COMP, V2
   Kaveh A, 2013, STRUCT DES TALL SPEC, V22, P1023, DOI 10.1002/tal.754
   Kobayashi N., 2002, THESIS OSAKA U OSAKA
   Kuliamin VV, 2011, PROGRAM COMPUT SOFT+, V37, P121, DOI 10.1134/S0361768811030029
   Kumar A., 2011, 2011 3rd International Conference on Electronics Computer Technology (ICECT 2011), P264, DOI 10.1109/ICECTECH.2011.5941602
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Li XT, 2015, INFORM SCIENCES, V298, P80, DOI 10.1016/j.ins.2014.11.042
   Liu WL, 2007, INT C COMP AID DES C, P252
   Maity S., 2003, INT S SOFTW REL ENG
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Moravej Z, 2013, INT J ELEC POWER, V44, P672, DOI 10.1016/j.ijepes.2012.08.009
   Nidhra S., 2012, Int. J. Embed. Syst. Appl, V2
   Nie CH, 2015, INFORM SOFTWARE TECH, V62, P198, DOI 10.1016/j.infsof.2015.02.008
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Ouaarab A, 2014, NEURAL COMPUT APPL, V24, P1659, DOI 10.1007/s00521-013-1402-2
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Qu X, 2013, ADV COMPUT, V89, P141, DOI 10.1016/B978-0-12-408094-2.00004-7
   Ronneseth AH, 2009, DISCRETE APPL MATH, V157, P2177, DOI 10.1016/j.dam.2007.09.024
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Sherwood G., 1994, 3 INT C SOFTW TEST A
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Singh S., 2013, International Journal of Scientific & Engineering Research, V4
   SINGH S, 2013, INT J RES ENG ADV TE, V4, P1
   Nguyen TT, 2015, INT J ELEC POWER, V65, P271, DOI 10.1016/j.ijepes.2014.10.004
   Walton S, 2013, ELSEV INSIGHT, P257, DOI 10.1016/B978-0-12-405163-8.00011-9
   Wang ZY, 2008, INT CONF QUAL SOFTW, P155, DOI 10.1109/QSIC.2008.52
   Williams A., 2008, TCONFIG DOWNLOAD PAG
   Williams AW, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.1996.558835
   Xin-She Yang, 2010, International Journal of Mathematical Modelling and Numerical Optimisation, V1, P330, DOI 10.1504/IJMMNO.2010.035430
   Yang X.S., 2019, Mathematical Foundations of Nature-Inspired Methods
   Yang XS, 2009, WOR CONG NAT BIOL, P210, DOI 10.1109/nabic.2009.5393690
   Yang XS, 2014, NEURAL COMPUT APPL, V24, P169, DOI 10.1007/s00521-013-1367-1
   Yilmaz C., 2004, ACM SIGSOFT SOFTW EN
   Yilmaz C, 2014, COMPUTER, V47, P37, DOI 10.1109/MC.2013.408
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Yuan X, 2010, IEEE T SOFTWARE ENG, V36, P81, DOI 10.1109/TSE.2009.68
   Zamli KZ, 2011, INFORM SCIENCES, V181, P1741, DOI 10.1016/j.ins.2011.01.002
   Zhang ZQ, 2014, J SYST SOFTWARE, V98, P191, DOI 10.1016/j.jss.2014.09.001
NR 74
TC 63
Z9 65
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2015
VL 66
BP 13
EP 29
DI 10.1016/j.infsof.2015.05.005
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CN8OG
UT WOS:000358699900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Brhel, M
   Meth, H
   Maedche, A
   Werder, K
AF Brhel, Manuel
   Meth, Hendrik
   Maedche, Alexander
   Werder, Karl
TI Exploring principles of user-centered agile software development: A
   literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Agile software development; User-centered design; Systematic literature
   review
ID INTEGRATING USABILITY; INTERACTION DESIGN; KEY PRINCIPLES; UP-FRONT;
   REQUIREMENTS; METHODOLOGIES; PERFORMANCE; INTERFACE; FRAMEWORK; INDUSTRY
AB Context: In the last decade, software development has been characterized by two major approaches: agile software development, which aims to achieve increased velocity and flexibility during the development process, and user-centered design, which places the goals and needs of the system's end-users at the center of software development in order to deliver software with appropriate usability. Hybrid development models, referred to as user-centered agile software development (UCASD) in this article, propose to combine the merits of both approaches in order to design software that is both useful and usable.
   Objective: This paper aims to capture the current state of the art in UCASD approaches and to derive generic principles from these approaches. More specifically, we investigate the following research question: Which principles constitute a user-centered agile software development approach?
   Method: We conduct a systematic review of the literature on UCASD. Identified works are analyzed using a coding scheme that differentiates four levels of UCASD: the process, practices, people/social and technology dimensions. Through subsequent synthesis, we derive generic principles of UCASD.
   Results: We identified and analyzed 83 relevant publications. The analysis resulted in a comprehensive coding system and five principles for UCASD: (1) separate product discovery and product creation, (2) iterative and incremental design and development, (3) parallel interwoven creation tracks, (4) continuous stakeholder involvement, and (5) artifact-mediated communication.
   Conclusion: Our paper contributes to the software development body of knowledge by (1) providing a broad overview of existing works in the area of UCASD, (2) deriving an analysis framework (in form a coding system) for works in this area, going beyond former classifications, and (3) identifying generic principles of UCASD and associating them with specific practices and processes. (C) 2015 Published by Elsevier B.V.
C1 [Brhel, Manuel; Maedche, Alexander; Werder, Karl] Univ Mannheim, Chair Informat Syst 4, D-68131 Mannheim, Germany.
   [Meth, Hendrik; Maedche, Alexander] Univ Mannheim, Inst Enterprise Syst, D-68131 Mannheim, Germany.
C3 University of Mannheim; University of Mannheim
RP Maedche, A (corresponding author), Univ Mannheim, Inst Enterprise Syst, L15,I-6, D-68131 Mannheim, Germany.
EM brhel@es.uni-mannheim.de; meth@es.uni-mannheim.de;
   maedche@es.uni-mannheim.de; werder@es.uni-mannheim.de
RI Werder, Karl/AAG-9163-2020
OI Werder, Karl/0000-0001-8481-1596; Maedche, Alexander/0000-0001-6546-4816
CR Adikari S, 2009, LECT NOTES COMPUT SC, V5610, P549, DOI 10.1007/978-3-642-02574-7_62
   Ahmad WFW, 2013, LECT NOTES COMPUT SC, V8237, P640, DOI 10.1007/978-3-319-02958-0_58
   [Anonymous], 2007, SKETCHING USER EXPER
   [Anonymous], 2002, INFORM AGE
   [Anonymous], 2004, XP Ser
   [Anonymous], 1998, 924111 ISO
   [Anonymous], P IEEE WESTCON
   [Anonymous], 2013, INT C DESIGN USER EX
   [Anonymous], 1977, OUTLINE THEORY PRACT
   Ardito C, 2014, INT J HUM-COMPUT ST, V72, P542, DOI 10.1016/j.ijhcs.2013.10.004
   Peixoto CSA, 2009, 2009 THIRD INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION, VOL 1, PROCEEDINGS, P156, DOI 10.1109/IITA.2009.393
   Peixoto CSA, 2009, ITI, P311, DOI 10.1109/ITI.2009.5196100
   Arnowitz J., 2013, INTERACTIONS, V20, P76
   Barksdale Jeremy T., 2012, International Journal of Agile and Extreme Software Development, V1, P52
   Barksdale J.T., 2010, Proc. CHI Extended Abstracts, P4691
   Barksdale JT, 2009, AGILE 2009 CONFERENCE, P19, DOI 10.1109/AGILE.2009.57
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Benigni G, 2010, LECT NOTES COMPUT SC, V6017, P422, DOI 10.1007/978-3-642-12165-4_34
   Bertholdo A.P., 2014, LNCS, P33, DOI DOI 10.1007/978-3-319-07668-3_4
   Beyer H, 2004, LECT NOTES COMPUT SC, V3134, P50
   Blau B., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P404, DOI 10.1109/ARES.2011.66
   Blomkvist S, 2005, HUM COM INT, V8, P219, DOI 10.1007/1-4020-4113-6_12
   Boehm B, 2000, COMPUTER, V33, P99, DOI 10.1109/2.869384
   Boehm B, 2011, FUTURE OF SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-15187-3_1
   Botzenhardt A., 2011, ICIS 2011 P
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brooks Fred, 1975, The Mythical Man-Month
   Broschinsky D, 2008, AGILE 2008, PROCEEDINGS, P543, DOI 10.1109/Agile.2008.91
   Brown J. M., 2011, Proceedings of the 2011 Agile Conference, P87, DOI 10.1109/AGILE.2011.45
   Brown J, 2008, AGILE 2008, PROCEEDINGS, P39, DOI 10.1109/Agile.2008.54
   Budwig M., 2009, Proc. CHI Extended Abstracts, P3075, DOI DOI 10.1145/1520340.1520434
   Caballero L, 2014, LECT NOTES COMPUT SC, V8742, P283, DOI 10.1007/978-3-662-44811-3_20
   Cajander Å, 2013, LECT NOTES COMPUT SC, V8119, P762
   Carlsson SA, 2011, INF SYST E-BUS MANAG, V9, P109, DOI 10.1007/s10257-010-0140-6
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Charters S., 2007, GUIDELINES PERFORMIN
   Cho L, 2009, AGILE 2009 CONFERENCE, P400, DOI 10.1109/AGILE.2009.47
   Clegg C, 1997, ERGONOMICS, V40, P851, DOI 10.1080/001401397187694
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Cole M., 1996, CULTURAL PSYCHOL ONC
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Constantine LL, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.991331
   Cooper A., 2007, FACE 3 ESSENTIALS IN
   Cooper A., 2004, The Inmates Are Running the Asylum: Why High Tech Products Drive Us Crazy and How to Restore the Sanity
   Costabile Maria Francesca., 2001, Handbook of Software Engineering Knowledge Engineering: Fundamentals, V1, P179
   da Silva Bruno Santana, 2006, PROC 7 S HUMAN FACTO, P101, DOI [10.1145/1298023.1298038, DOI 10.1145/1298023.1298038]
   da Silva TS, 2013, 2013 AGILE CONFERENCE (AGILE), P42, DOI 10.1109/AGILE.2013.11
   de Carvalho C.R.M., 2010, Proceedings of the IX Symposium on Human Factors in Computing Systems, P213
   Detweiler M., 2007, Interactions, V14, P40, DOI 10.1145/1242421.1242447
   Dingsoyr T, 2012, J SYST SOFTWARE, V85, P1213, DOI 10.1016/j.jss.2012.02.033
   Düchting M, 2007, LECT NOTES COMPUT SC, V4550, P58
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Evnin J, 2008, AGILE 2008, PROCEEDINGS, P537, DOI 10.1109/Agile.2008.81
   Feiner Johannes, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P342, DOI 10.1007/978-3-642-34347-6_26
   Felker C, 2011, SIGCSE 12: PROCEEDINGS OF THE 43RD ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P301
   Ferre X, 2005, LECT NOTES COMPUT SC, V3547, P202
   Ferre X, 2007, LECT NOTES COMPUT SC, V4550, P68
   Ferreira Jennifer, 2012, Proceedings of the 2012 Agile Conference, P11, DOI 10.1109/Agile.2012.33
   Ferreira J., 2007, 2007 AG C AGILE2007, P50
   Ferreira J, 2007, LECT NOTES COMPUT SC, V4536, P9
   Ferreira J, 2010, LECT NOTES BUS INF, V48, P178
   Fisher KG, 2009, AGILE 2009 CONFERENCE, P223, DOI 10.1109/AGILE.2009.72
   Fitzgerald B, 2012, COMPUTER, V45, P89, DOI 10.1109/MC.2012.147
   Fox D, 2008, AGILE 2008, PROCEEDINGS, P63, DOI 10.1109/Agile.2008.78
   Gebert D, 2006, EUR J WORK ORGAN PSY, V15, P431, DOI 10.1080/13594320600826314
   GONCALVES J, 2011, 13 IFIP TC 13 INT C, V6761, P63
   Göransson B, 2003, LECT NOTES COMPUT SC, V2844, P316
   GOULD JD, 1985, COMMUN ACM, V28, P300, DOI 10.1145/3166.3170
   Gulliksen J, 2003, BEHAV INFORM TECHNOL, V22, P397, DOI 10.1080/01449290310001624329
   Häger F, 2015, UNDERST INNOV, P263, DOI 10.1007/978-3-319-06823-7_14
   Haikara J, 2007, LECT NOTES COMPUT SC, V4536, P153
   Hansson C., 2006, 39 HAW INT C SYST SC
   Harris MA, 2009, COMMUN ASSOC INF SYS, V24, P739
   Heimgartner R., 2014, LNCS, V8517, P123
   Hellmann Theodore D., 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P444, DOI 10.1109/ICSTW.2010.35
   Hellmann TD, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P185, DOI 10.1007/978-3-642-12575-1_9
   Hennings L., 2012, SOFTWARE PEOPLE, P151
   Hodgetts P, 2005, AGILE 2005, Proceedings, P235, DOI 10.1109/ADC.2005.24
   Holzinger A, 2005, P INT COMP SOFTW APP, P169
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Hosseini-Khayat Ali, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P59, DOI 10.1109/AGILE.2010.11
   Humayoun SR, 2012, PROCEEDINGS OF THE INTERNATIONAL WORKING CONFERENCE ON ADVANCED VISUAL INTERFACES, P596, DOI 10.1145/2254556.2254666
   Humayoun SR, 2011, LECT NOTES COMPUT SC, V6776, P55, DOI 10.1007/978-3-642-21753-1_7
   HUMAYOUN SR, 2014, SMART ORG SMART ARTI, P183
   Husain Z, 2008, LECT NOTES COMPUT SC, V5298, P313, DOI 10.1007/978-3-540-89350-9_22
   Hussain Zahid, 2008, 2008 First International Conference on Advances in Computer Human Interaction - ACHI '08, P189, DOI 10.1109/ACHI.2008.24
   Hussain Z, 2009, LECT NOTES BUS INF P, V31, P174
   Illmensee T, 2009, AGILE 2009 CONFERENCE, P404, DOI 10.1109/AGILE.2009.45
   Inayat I., 2014, Computers in Human Behavior
   ISO, 9241210 ISO
   Isomursu Minna, 2012, Proceedings of the 2012 Agile Conference, P1, DOI 10.1109/Agile.2012.10
   Jurca G., AG C AGILE 2014, P24
   Kane D, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P40, DOI 10.1109/ADC.2003.1231451
   Kettunen P, 2009, TECHNOVATION, V29, P408, DOI 10.1016/j.technovation.2008.10.003
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kollmann J, 2009, AGILE 2009 CONFERENCE, P11, DOI 10.1109/AGILE.2009.58
   Kropp E., 2 INT WORKSH US ACC, P9
   Kuusinen Kati, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P94, DOI 10.1007/978-3-642-34347-6_6
   Kuusinen K, 2014, LECT NOTES COMPUT SC, V8742, P259, DOI 10.1007/978-3-662-44811-3_17
   Kuusinen Kati, 20 AS PAC SOFTW ENG, P535
   Larman Craig., 2003, AGILE ITERATIVE DEV
   Larusdottir MK, 2010, IFIP ADV INF COMM TE, V332, P98
   Larusdottir MK, 2011, LECT NOTES COMPUT SC, V6949, P430, DOI 10.1007/978-3-642-23768-3_50
   Lee J. C., 2011, P ANN C HUM FACT COM, P863, DOI [10.1145/1979742.1979681, DOI 10.1145/1979742.1979681]
   Lee J.C., 2007, 2007 AG C AGILE2007
   Lee J.C., 2006, Proc. CHI '06, P1767
   Lee JC, 2009, AGILE 2009 CONFERENCE, P3, DOI 10.1109/AGILE.2009.30
   Leszek A, 2008, AGILE 2008, PROCEEDINGS, P196, DOI 10.1109/Agile.2008.46
   Lievesley M.a., 2006, CHI '06 extended abstracts on Human factors in computing systems - CHI EA '06, P1025
   Lizano F., 2015, HUMAN COMPUTER INTER, P500
   Losada B., 2011, P 14 INT C HUM COMP, P470
   Losada B, 2012, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON INTERACCION PERSONA-ORDENADOR (INTERACCION'12), DOI 10.1145/2379636.2379674
   Losada B, 2013, SCI COMPUT PROGRAM, V78, P2268, DOI 10.1016/j.scico.2012.07.022
   Mao JY, 2005, COMMUN ACM, V48, P105, DOI 10.1145/1047671.1047677
   Martin A, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P42
   Martin R.C., 1999, ITERATIVE INCREMENTA
   Maurer F., 2013, SOFTWARE ENG, V7171, P185
   Mayhew D.J., 2005, COST JUSTIFYING USAB, P41
   Medina NM, 2010, LECT NOTES COMPUT SC, V6488, P564, DOI 10.1007/978-3-642-17616-6_49
   Memmel T., 2007, BCS HCI 07 P 21 BRIT, P167, DOI DOI 10.1177/004057368303900411
   Memmel T, 2007, LECT NOTES COMPUT SC, V4554, P453
   Memmel T, 2007, LECT NOTES COMPUT SC, V4550, P174
   Meszaros G., 2006, AGILE 2006
   Miller L, 2005, AGILE 2005, PROCEEDINGS, P225, DOI 10.1109/ADC.2005.16
   Najafi M, 2008, AGILE 2008, PROCEEDINGS, P531, DOI 10.1109/Agile.2008.67
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   OBENDORF H, 2006, HCI ED WORKSH 2006 H
   Obendorf H., 2008, Proc. Conference on Human Factors in Computing Systems (CHI '08), P2159
   Paelke Volker, 2008, Proceedings of the 7th ACM Conference on Designing Interactive Systems. DIS 2008, P240, DOI 10.1145/1394445.1394471
   Paelke V, 2010, ISPRS J PHOTOGRAMM, V65, P256, DOI 10.1016/j.isprsjprs.2009.05.006
   Park MHJ, 2009, J PROD INNOVAT MANAG, V26, P86, DOI 10.1111/j.1540-5885.2009.00336.x
   Patten J., 2002, P 2002 C NEW INTERFA, P1
   Patton J., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P1
   Peres A.L., AG C AGILE 2014, P61
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petrovic K, 2011, LECT NOTES COMPUT SC, V6769, P485, DOI 10.1007/978-3-642-21675-6_56
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Plonka L., 2014, AGILE PROCESSES SOFT, P1
   Rafla T, 2007, SOFTWARE QUAL J, V15, P117, DOI 10.1007/s11219-006-9009-9
   Rahim L, 2014, INT C COMP INF SCI I, P1
   Raison C., 2013, Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), V8012, P573, DOI DOI 10.1007/978-3-642-39229-0
   Rasmussen R, 2011, INTERACT COMPUT, V23, P176, DOI 10.1016/j.intcom.2011.02.006
   Rittenbruch M., 2002, PART DES INQ POL CON, P23
   Salah D, 2014, LECT NOTES COMPUT SC, V8742, P108, DOI 10.1007/978-3-662-44811-3_7
   Salvador C., 2014, P 7 EUR AM C TEL INF
   Sang-Hyun Lee, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P317, DOI 10.1109/COMPSAC.2010.39
   Scheiber F., 2012, SOFTWARE PEOPLE FUND, P39, DOI 10.1007/978-3-642-31371-4_3
   Schwaber K., 2011, The Scrum Guide - The Definitive Guide to Scrum: The Rules of the Game
   Schwaber K., 2001, Agile software development with scrum
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Seffah A, 2005, HUM COM INT, V8, P37, DOI 10.1007/1-4020-4113-6_3
   Sein M.K., 2011, MIS Q, V35, P1
   Sharp Helen, 2007, Interaction Design: Beyond Human Computer Interaction, V2
   Silva da Silva T., 2011, Proceedings of the 2011 Agile Conference, P77, DOI 10.1109/AGILE.2011.24
   Singh M, 2008, AGILE 2008, PROCEEDINGS, P555, DOI 10.1109/Agile.2008.33
   Sohaib O.Khan., 2010, Computer Design and Applications (ICCDA), 2010 International Conference on, P32, DOI DOI 10.1109/ICCDA.2010.5540916
   Sy D, 2007, J USABILITY STUD, V2, P112
   Troy LC, 2008, J MARKETING, V72, P132, DOI 10.1509/jmkg.72.6.132
   UNGAR J, 2008, P 26 ANN CHI C EXT A, P02167
   Ungar J.M., 2008, Proc. CHI Extended Abstracts, P2167, DOI DOI 10.1145/1358628.1358650
   Vom Brocke J., 2009, Reconstructing the Giant: On the Importance of Rigour in Documenting the Literature Search Process
   Wale-Kolade A., 2013, Building Sustainable Information Systems, P569, DOI DOI 10.1007/978-1-4614-7540-8_44
   Wang S, 2008, INFORM SYST FRONT, V10, P555, DOI 10.1007/s10796-008-9115-2
   Webster J, 2002, MIS QUART, V26, pXIII
   Williams H, 2007, AGILE 2007, PROCEEDINGS, P285, DOI 10.1109/AGILE.2007.61
   Wolkerstorfer P., 2008, P 26 ANN CHI C HUM F, P2151, DOI 10.1145/1358628.1358648
   Zhang P., 2005, Communications of the Association for Information Systems, V15, P29
NR 169
TC 184
Z9 196
U1 13
U2 139
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 163
EP 181
DI 10.1016/j.infsof.2015.01.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CF7PI
UT WOS:000352748400010
DA 2024-07-18
ER

PT J
AU Wnuk, K
   Runeson, P
   Lantz, M
   Weijden, O
AF Wnuk, Krzysztof
   Runeson, Per
   Lantz, Matilda
   Weijden, Oskar
TI Bridges and barriers to hardware-dependent software ecosystem
   participation - A case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Empirical study; Software ecosystems; Business strategy;
   Hardware-dependent software ecosystem
ID INNOVATION; ENTRY
AB Background: Software ecosystems emerged as means for several actors to jointly provide more value to the market than any of them can do on its own. Recently, software ecosystems are more often used to support the development of hardware-dependent solutions.
   Objectives: This work aims at studying barriers and bridges to participation in an ecosystem with substantial hardware dependencies.
   Method: We conducted an interview-based case study of an ecosystem around Axis' network video surveillance systems, interviewing 10 internal experts and 8 external representatives of 6 companies, complemented by document studies at Axis.
   Results: Major bridges to the ecosystem include end customer demands, open and transparent communication and relationship, as well as internal and external standardizations. Barriers include the two-tier business model, entry barriers and execution performance issues. Approximately half of the identified bridges and barriers could be considered hardware-dependent ecosystems specific.
   Conclusion: Our results suggest that ecosystem leaders should share their sales channels with the ecosystem participants and focus on good communication and relationships as the dominant factors for the ecosystem participation. Moreover, we report that internal and external standardization can play a dual role, not only ease the development but also enable additional sales channels and new opportunities for the ecosystem participants. At the same time, the business model selected by the ecosystem leaders and performance, are identified as the main barriers to ecosystem participation. We believe that the business model barrier may be much more important for similar hardware-dependent software ecosystems. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Wnuk, Krzysztof; Runeson, Per; Lantz, Matilda; Weijden, Oskar] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 Lund University
RP Wnuk, K (corresponding author), Lund Univ, Dept Comp Sci, Box 118, SE-22100 Lund, Sweden.
EM krzysztof.wnuk@cs.lth.se; per.runeson@cs.lth.se
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851
FU SYNERGIES (Synthesis of a Software Engineering Framework for Open
   Innovation through Empirical Research), ICT framework project, Swedish
   National Science Foundation [621-2012-5354]
FX The authors would like to thank Axis and the other companies in the
   ecosystem for providing the information to this study. Thanks to Dr.
   David Callele for excellent reviews of this paper. This work is funded
   by the SYNERGIES (Synthesis of a Software Engineering Framework for Open
   Innovation through Empirical Research), ICT framework project, Swedish
   National Science Foundation, Grant 621-2012-5354.
CR Angeren J.v., 2011, 3 INT WORKSH SOFTW E, P1
   [Anonymous], 2011, Proceedings of the 2011 44th Hawaii International Conference on System Sciences", HICSS'11, DOI [DOI 10.1109/HICSS.2011.264, 10.1109/HICSS.2011.264]
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2007, QUALITATIVE RES PRAC, DOI DOI 10.4135/9781848608191.D33
   [Anonymous], P 30 INT C INF SYST
   [Anonymous], 2012, 4 INT WORKSH SOFTW E
   [Anonymous], 2004, The business of software: What every manager, programmer, and entrepreneur must know to thrive and survive in good times and bad
   Anvaari M., 2010, ECSA '10: Proceedings of the Fourth European Conference on Software Architecture, P85, DOI DOI 10.1145/1842752.1842775
   Basole Rahul C., 2008, 7th International Conference on Mobile Business (ICMB 2008), P65, DOI 10.1109/ICMB.2008.32
   Bergman B., 1994, QUALITY CUSTOMER NEE
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Ceccagnoli M, 2012, MIS QUART, V36, P263
   Clements P., 2002, Software product lines
   Cusumano M.A., 2002, MIT SLOAN MANAGE REV, P1
   Das TK, 2001, ORGAN STUD, V22, P251, DOI 10.1177/0170840601222004
   Dubois A, 2002, J BUS RES, V55, P553, DOI 10.1016/S0148-2963(00)00195-8
   Easterbrook S.M., 2007, SELECTING EMPIRICAL, P285
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Eklund U, 2012, LECT NOTES BUS INF P, V114, P248
   Gawer A, 2007, J ECON MANAGE STRAT, V16, P1
   Hagel J., 2008, Harvard Business Review
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Hyrynsalmi S., 2012, P FORTH INT WORKSH S, P59
   Iansiti Marco, 2004, The keystone advantage: What the new dynamics of business ecosystems mean for strategy, innovation, and sustainability
   Jansen S., 2009, P 1 INT WORKSHOP SOF, P34
   Kofman A, 2009, 2009 ICSE WORKSHOP ON SOFTWARE DEVELOPMENT GOVERNANCE, P9, DOI 10.1109/SDG.2009.5071330
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Li YR, 2009, TECHNOVATION, V29, P379, DOI 10.1016/j.technovation.2009.01.007
   Liguo Yu, 2008, IT Professional, V10, P56, DOI 10.1109/MITP.2008.94
   Makinen S., 2012, 18th International Conference on Engineering, Technology and Innovation, pp, P1, DOI DOI 10.1109/ICE.2012.6297653
   Manikas K., 2013, 5 INT WORKSH SOFTW E, P33
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   McGregor J.D., 2010, P 4 EUR C SOFTW ARCH, P73
   Mizushima K., 2011, P TECHN MAN EN SMART, P1
   Monteith J. Y., 2013, 5 INT WORKSH SOFTW E, P57
   MOORE JF, 1999, DEATH COMPETITION LE
   Popp K.M., 2011, 3 INT WORKSH SOFTW E, P77
   Robbes R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P904, DOI 10.1145/1985793.1985940
   Rohrbeck R, 2009, R&D MANAGE, V39, P420, DOI 10.1111/j.1467-9310.2009.00568.x
   Santos R., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P206, DOI 10.1109/SBES.2012.24
   Syed S., 2013, P 5 INT WORKSHOP SOF, V987, P19
   Telesca L., 2007, 2 INT C COMM SYST SO, P1
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   WILLIAMSON OE, 1991, ADMIN SCI QUART, V36, P269, DOI 10.2307/2393356
   Zacharakis AL, 2003, J BUS VENTURING, V18, P217, DOI 10.1016/S0883-9026(02)00084-8
   Zhu F, 2012, STRATEGIC MANAGE J, V33, P88, DOI 10.1002/smj.941
NR 48
TC 17
Z9 17
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2014
VL 56
IS 11
SI SI
BP 1493
EP 1507
DI 10.1016/j.infsof.2014.05.015
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AO4ZD
UT WOS:000341349000006
DA 2024-07-18
ER

PT J
AU Laznik, J
   Juric, MB
AF Laznik, Jurij
   Juric, Matjaz B.
TI Context aware exception handling in business process execution language
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE BPEL fault handling; Semantic Web; Business process exception handling;
   SOA; Workflow exception handling patterns
AB Context: Fault handling represents a very important aspect of business process functioning. However, fault handling has thus far been solved statically, requiring the definition of fault handlers and handling logic to be defined at design time, which requires a great deal of effort, is error-prone and relatively difficult to maintain and extend. It is sometimes even impossible to define all fault handlers at design time.
   Objective: To address this issue, we describe a novel context-aware architecture for fault handling in executable business process, which enables dynamic fault handling during business process execution.
   Method: We performed analysis of existing fault handling disadvantages of WS-BPEL. We designed the artifact which complements existing statically defined fault handling in such a way that faults can be defined dynamically during business process run-time. We evaluated the artifact with analysis of system performance and performed a comparison against a set of well known workflow exception handling patterns.
   Results: We designed an artifact, that comprises an Observer component, Exception Handler Bus, Exception Knowledge Base and Solution Repository. A system performance analysis shows a significantly decreased repair time with the use of context aware activities. We proved that the designed artifact extends the range of supported workflow exception handling patterns.
   Conclusion: The artifact presented in this research considerably improves static fault handling, as it enables the dynamic fault resolution of semantically similar faults with continuous enhancement of fault handling in run-time. It also results in broader support of workflow exception handling patterns. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Laznik, Jurij] Banka Celje Dd, Celje 3000, Slovenia.
   [Laznik, Jurij] Univ Maribor, Fac Comp & Informat Sci, SI-2000 Maribor, Slovenia.
   [Juric, Matjaz B.] Univ Ljubljana, Fac Comp & Informat Sci, SI-1000 Ljubljana, Slovenia.
C3 University of Maribor; University of Ljubljana
RP Laznik, J (corresponding author), Univ Maribor, Fac Comp & Informat Sci, Smetanova Ulica 17, SI-2000 Maribor, Slovenia.
EM jurij.laznik@banka-celje.si
CR Adams M., 2005, Proceedings of the CAiSE'05 FORUM. 17th Conference on Advanced Information Systems Engineering, P45
   Alonso Javier., 2008, CoreGRID Workshop on Grid Middleware, P1
   ANATOLIY G, 2008, P WORKSH EXC HANDL, P1
   [Anonymous], 2006, Business Process Execution Language for Web Services BPEL and BPEL4WS
   Ardagna B, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.174
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Buhr PA, 2000, IEEE T SOFTWARE ENG, V26, P820, DOI 10.1109/32.877844
   Casati F, 1999, ACM T DATABASE SYST, V24, P405, DOI 10.1145/328939.328996
   Charfi A., 2004, ICSOC 04, P30
   Denaro G, 2007, PROC INT CONF SOFTW, P55, DOI 10.1109/ICSECOMPANION.2007.66
   Dovile V., 2005, EXPECTION HANDLING A, P42
   Filho F.C., 2006, INT C FDN SOFTWARE E, P152
   Filho F.C., 2007, P 2 WORKSH BEST PRAC
   Friedrich G, 2010, IEEE T SOFTWARE ENG, V36, P198, DOI 10.1109/TSE.2010.8
   Gaur H., 2010, ORACLE FUSION  MIDDL
   Grigori D., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P159
   Gurguis Sherif A., 2005, DEAS '05 : Proceedings ofthe 2005 workshop on Design and evolution of autonomie application software, P1
   Houspanossian A., 2005, EXTENDING OPEN SOURC
   Jiang SJ, 2005, ACM SIGPLAN NOTICES, V40, P27, DOI 10.1145/1052659.1052664
   Juric M., 2010, WS BPEL 2 0 SOA COMP
   Kareliotis C., 2008, P 10 INT C INF INT W, P248
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   Liu JJ, 2009, 2009 INTERNATIONAL FORUM ON INFORMATION TECHNOLOGY AND APPLICATIONS, VOL 1, PROCEEDINGS, P87, DOI 10.1109/IFITA.2009.114
   Mally G., 2011, FAULT MANAGEMENT FRA
   Martin R.C., 2010, VISITOR FAMILY DESIG
   Mejia Bernal J.F., 2010, P 2010 ACM S APPL CO, P470, DOI DOI 10.1145/1774088.1774186
   Miller R., 2003, ENCY PHARM TECHNOLOG, P1
   MODAFFERI S., 2006, MW4SOC '06: Proceedings of the 1st workshop on Middleware for Service Oriented Computing (MW4SOC 2006), P48
   Nicholas Z., 2004, P 2004 INT S INF COM, P172
   *OASIS, 2007, OASIS WEB SERV BUS P
   OASIS, 2010, WS HUMANTASK SPEC VE
   Pernici B, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P119, DOI 10.1109/ECOWS.2007.13
   ROSEN M, 2006, BPM SOA DOES ONE END
   Rosenberg F., 2005, P 2005 7 IEEE INT C
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   RUSSELL N, 2006, EXCEPTION HANDLING P
   SOAPUI, 2009, SOAPUI CREAT RUNN LO
   van der Aalst W. M. P., 2001, GROUP'01. Proceedings of the 2001 International ACM SIGGROUP Conference on Supporting Group Work, P42, DOI 10.1145/500286.500296
   Wu SF, 2009, 2009 INTERNATIONAL SYMPOSIUM ON INTELLIGENT UBIQUITOUS COMPUTING AND EDUCATION, P420, DOI 10.1109/IUCE.2009.54
   YANG J, 2003, P 4 INT C WEB INF SY
NR 40
TC 8
Z9 8
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2013
VL 55
IS 10
BP 1751
EP 1766
DI 10.1016/j.infsof.2013.04.001
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 203MT
UT WOS:000323298000006
DA 2024-07-18
ER

PT J
AU Li, BX
   Sun, XB
   Keung, J
AF Li, Bixin
   Sun, Xiaobing
   Keung, Jacky
TI FCA-CIA: An approach of using FCA to support cross-level change impact
   analysis for object oriented Java programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Formal concept analysis; Change impact analysis; Lattice of class and
   method dependence; Impact factor
ID FORMAL CONCEPT ANALYSIS; SOURCE CODE; FRAMEWORK
AB Background: Software Change Impact Analysis (CIA) is an essential technique in software engineering to identifying the potential influences of a change, or determining change entities to accomplish such a change. The results derived, in many cases, ambiguous for the software maintainers, introduces the problem of unclear starting point of these impacted entities.
   Objective: In an attempt to address this issue, this work proposes a novel approach for cross-level CIA, producing a ranked list of potentially impacted methods derived from class-level changes. Moreover, the approach of ranking the impact results is expected to be effective for maintainers to distinguish the probability of the impacted methods to be false-positives. Such results provide an eclectic approach for CIA.
   Method: The approach, FCA-CIA, uses formal concept analysis (FCA) to produce an intermediate representation of the program based on the static analysis of the source code. The representation is called Lattice of Class and Method Dependence (LoCMD). FCA-CIA takes the changed classes in the change set as a whole, and determines the reachable set from the changed classes on the LoCMD. Based on the hierarchical property of the LoCMD, the impacted methods are ranked according to the impact factor metric which corresponds to the priority of these methods to be inspected.
   Result: Empirical evaluations on four real-world software projects demonstrate the effectiveness of the impact factor metric and the FCA-CIA technique. The result shows the predicted impacted methods with higher impact factor values are more likely to be affected by the changes. Our study also shows that the FCA-CIA technique generates more accurate impact set than the JRipples and ICP coupling based CIA technique. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Li, Bixin; Sun, Xiaobing] Southeast Univ, Sch Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
   [Sun, Xiaobing] Yangzhou Univ, Sch Informat Engn, Yangzhou, Peoples R China.
   [Li, Bixin] Chinese Acad Sci, State Key Lab Comp Sci, Inst Software, Beijing 100864, Peoples R China.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
C3 Southeast University - China; Yangzhou University; Chinese Academy of
   Sciences; Institute of Software, CAS; City University of Hong Kong
RP Sun, XB (corresponding author), Southeast Univ, Sch Comp Sci & Engn, Nanjing, Jiangsu, Peoples R China.
EM bx.li@seu.edu.cn; xbsun@yzu.edu.cn; Keung@cityu.edu.hk
RI Keung, Jacky/ABA-7089-2020; Sun, Xiaobing/L-7423-2019; Keung,
   Jacky/X-4693-2019
OI Sun, Xiaobing/0000-0001-5165-5080; Keung, Jacky/0000-0002-3803-9600
FU National Natural Science Foundation of China [60973149]; State Key
   Laboratory of Computer Science of Chinese Academy of Sciences
   [SYSKF1110]; Ministry of Education of China [20100092110022]; Scientific
   Research Foundation of Graduate School of Southeast University
   [YBJJ1102]
FX This work is supported partially by National Natural Science Foundation
   of China under Grant No. 60973149, partially by the Open Funds of State
   Key Laboratory of Computer Science of Chinese Academy of Sciences under
   Grant No. SYSKF1110, partially by Doctoral Fund of Ministry of Education
   of China under Grant No. 20100092110022, and partially by the Scientific
   Research Foundation of Graduate School of Southeast University under
   Grant No. YBJJ1102.
CR Abdi MK, 2009, P INT COMP SOFTW APP, P234, DOI 10.1109/COMPSAC.2009.38
   Ammons G, 2003, ACM SIGPLAN NOTICES, V38, P182, DOI 10.1145/780822.781152
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], P ACM SIGSOFT S FDN
   [Anonymous], P 8 ACM SIGPLAN SIGS
   [Anonymous], P WORKSH 5 C ART INT
   [Anonymous], P INT C SOFTW TEST V
   Apiwattanapong T, 2005, PROC INT CONF SOFTW, P432
   Arévalo G, 2010, INFORM SOFTWARE TECH, V52, P1167, DOI 10.1016/j.infsof.2010.05.010
   Ball T, 1999, LECT NOTES COMPUT SC, V1687, P216, DOI 10.1145/318774.318944
   Beszedes A, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P103
   Birkhoff G., 1940, Lattice Theory
   Black S, 2008, INFORM SOFTWARE TECH, V50, P723, DOI 10.1016/j.infsof.2007.07.008
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Breech B, 2004, PROC IEEE INT CONF S, P453, DOI 10.1109/ICSM.2004.1357834
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CANFORA G, 2006, P INT WORKSH MIN SOF, P105, DOI DOI 10.1145/1137983.1138009
   Cellier P, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P991
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   El Kharraz A, 2010, LECT NOTES ARTIF INT, V5986, P267, DOI 10.1007/978-3-642-11928-6_19
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Hassaine S, 2011, CONF PROC INT SYMP C, P209, DOI 10.1109/ICPC.2011.54
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Joshi P, 2009, EUR CON SFTWR MTNCE, P237, DOI 10.1109/CSMR.2009.54
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Khor S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P346, DOI 10.1109/ASE.2004.1342761
   Kim HH, 2008, IET SOFTW, V2, P134, DOI 10.1049/iet-sen:20060069
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Lienhard A., 2005, PROC 20 IEEEACM INT, P66
   Mens K, 2005, COMPUT LANG SYST STR, V31, P183, DOI 10.1016/j.cl.2004.11.004
   Moha N, 2008, LECT NOTES ARTIF INT, V4923, P269
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Siff M, 1999, IEEE T SOFTWARE ENG, V25, P749, DOI 10.1109/32.824377
   Snelting G, 2000, ACM T PROGR LANG SYS, V22, P540, DOI 10.1145/353926.353940
   Sun XB, 2011, CHINESE J ELECTRON, V20, P247
   Tilley T, 2005, LECT NOTES ARTIF INT, V3626, P250
   Tonella P, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/WCRE.2004.13
   Tonella P, 2004, PROC INT CONF SOFTW, P743, DOI 10.1109/ICSE.2004.1317515
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Tonella P, 2001, J SOFTW MAINT EVOL-R, V13, P309, DOI 10.1002/smr.235
   Turver R. J., 1994, Journal of Software Maintenance: Research and Practice, V6, P35, DOI 10.1002/smr.4360060104
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Xiaobing Sun, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P373, DOI 10.1109/COMPSAC.2010.45
   Zhang S, 2008, PROC IEEE INT CONF S, P87, DOI 10.1109/ICSM.2008.4658057
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 68
TC 16
Z9 20
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1437
EP 1449
DI 10.1016/j.infsof.2013.02.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200005
DA 2024-07-18
ER

PT J
AU Mazhelis, O
   Tyrväinen, P
   Frank, L
AF Mazhelis, Oleksiy
   Tyrvainen, Pasi
   Frank, Lauri
TI Vertical software industry evolution: The impact of software costs and
   limited customer base
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software industry; Customer base; Software development costs;
   Telecommunications OSS/BSS software
ID ECONOMICS
AB Context: Software systems are commonly used in a variety of industries as a means of automating organizational business processes. Initially, such software is often developed in-house by the vertical organizations possibly with the support of professional IT service providers; however, in many cases, internally developed software is eventually replaced with the software products provided by independent software vendors. These vendors often use license fees to recover their software development investments, as well as to gain some margin. However, if the vendor's customer base for a specific type of software is limited, then either the license fees are too high and hence the customers may prefer to develop the software internally, or the margin has to be decreased. As a result, the market for software products of that type may not materialize.
   Objective: The paper introduces an analytical model that defines the minimum number of customers that the software vendor should have for its software to be less expensive as compared to the in-house software.
   Method: Following a conceptual-analytical approach, a model is constructed wherein the minimum number of a vendor's customers is represented as a function of other factors affecting software development costs. This model is verified by applying it to estimate the minimum customer base in the segment of telecommunications billing mediation software.
   Results: Using the proposed analytical model, the minimum number of customers and the maximum number of software vendors in this segment are evaluated. The obtained results are found to be in line with the information available from a telecommunications software market database.
   Conclusions: Based on the model, a preliminary conclusion is made that in industries with high software development costs, heterogeneous legacy systems to integrate with, and a limited pool of potential customers, the number of software vendors is unlikely to be significant, and hence the in-house or custom-made software is unlikely to be superseded by the software products. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Mazhelis, Oleksiy; Tyrvainen, Pasi; Frank, Lauri] Univ Jyvaskyla, Dept Comp Sci & Informat Syst, FI-40014 Jyvaskyla, Finland.
C3 University of Jyvaskyla
RP Mazhelis, O (corresponding author), Univ Jyvaskyla, Dept Comp Sci & Informat Syst, POB 35, FI-40014 Jyvaskyla, Finland.
EM mazhelis@jyu.fi; pasi.t.tyrvainen@jyu.fi; lauri.frank@jyu.fi
OI Tyrvainen, Pasi/0000-0001-7716-3244; Frank, Lauri/0000-0002-3003-3300
FU Finnish Funding Agency for Technology and Innovation (Tekes); Nokia
   Siemens Networks; Tecnomen; Comptel; Nethawk; Mikkelin Puhelin
FX The authors thank Erkki Viitala for inspiring discussions and making
   valuable suggestions. The paper is based on the earlier study conducted
   in SmarTop research project<SUP>8</SUP> funded by The Finnish Funding
   Agency for Technology and Innovation (Tekes) and sponsored by Nokia
   Siemens Networks, Tecnomen, Comptel, Nethawk, and Mikkelin Puhelin.
CR [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2010, ACM T MANAG INF SYST
   Appari A, 2010, J SYST SOFTWARE, V83, P2098, DOI 10.1016/j.jss.2010.06.012
   Benaroch M, 2009, IEEE T SOFTWARE ENG, V35, P638, DOI 10.1109/TSE.2009.25
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm B, 1999, INFORM SOFTWARE TECH, V41, P937, DOI 10.1016/S0950-5849(99)00091-9
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bush AA, 2008, INFORM SOFTWARE TECH, V50, P499, DOI 10.1016/j.infsof.2007.08.006
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Gaffney J. E.  Jr., 1992, International Conference on Software Engineering, P327, DOI 10.1109/ICSE.1992.753510
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Huang L., 2005, SIGSOFT SOFTWARE ENG, V30, P1
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Jones C., 1999, SOFTWARE PROJECT MAN
   Koskinen J., 2010, SOFTWARE MAINTENANCE
   Martikainen O., P 3 BALK C INF BCI 2, P1
   Martikainen O., P 46 C FITCE, P1
   Matsumoto Y, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P163, DOI 10.1109/SPLINE.2007.26
   Mazhelis O., VERTICAL SOFTWARE IN
   Mazhelis O., P 3 INT C SOFTW DAT, P80
   Mazhelis O., 2008, IADIS WWW INT C OCT, P144
   Mazhelis O., 2008, MINIMAL CUSTOM UNPUB
   Molokken-Ostvold K, 2005, EMPIR SOFTW ENG, V10, P7, DOI 10.1023/B:EMSE.0000048321.46871.2e
   Nikolik B, 2012, INFORM SOFTWARE TECH, V54, P1229, DOI 10.1016/j.infsof.2012.06.003
   Pedrycz W., 2002, P 14 INT C SOFTW ENG, P7
   POULIN JS, 1993, IBM SYST J, V32, P567, DOI 10.1147/sj.324.0567
   Putnam LawrenceH., 1991, Measures for excellence: reliable software on time, within budget
   Rodriguez-Soria P., SEKE, P135
   Rokunuzzaman M., 2011, Journal of Software, V6, P31, DOI 10.4304/jsw.6.1.31-37
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Sullivan K., REAL OPTIONS BUSINES
   Terplan K., 2001, OSS Essentials: support system solutions for service providers
   Trendowicz Adam, 2011, LECT NOTES COMPUTER, P232
   Tyrvainen P., 2008, IFIP INT FE IN PRESS, P11
   WILLIAMSON OE, 1971, AM ECON REV, V61, P112
   WILLIAMSON OE, 1979, J LAW ECON, V22, P233, DOI 10.1086/466942
NR 37
TC 3
Z9 3
U1 1
U2 15
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2013
VL 55
IS 4
BP 690
EP 698
DI 10.1016/j.infsof.2012.10.006
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 111NE
UT WOS:000316527200004
DA 2024-07-18
ER

PT J
AU Andersson, H
   Herzog, E
   Ölvander, J
AF Andersson, Henric
   Herzog, Erik
   Olvander, Johan
TI Experience from model and software reuse in aircraft simulator product
   line engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Product Line; SPL; Knowledge Based Engineering; Configurator;
   Model Based Development; PDM
ID FAMILY DESIGN
AB Context: "Reuse" and "Model Based Development" are two prominent trends for improving industrial development efficiency. Product lines are used to reduce the time to create product variants by reusing components. The model based approach provides the opportunity to enhance knowledge capture for a system in the early stages in order to be reused throughout its lifecycle. This paper describes how these two trends are combined to support development and support of a simulator product line for the SAAB 39 Gripen fighter aircraft.
   Objective: The work aims at improving the support (in terms of efficiency and quality) when creating simulation model configurations. Software based simulators are flexible so variants and versions of included models may easily be exchanged. The objective is to increase the reuse when combining models for usage in a range of development and training simulators.
   Method: The research has been conducted with an interactive approach using prototyping and demonstrations, and the evaluation is based on an iterative and a retrospective method.
   Results: A product line of simulator models for the SAAB 39 Gripen aircraft has been analyzed and defined in a Product Variant Master. A configurator system has been implemented for creation, integration, and customization of stringent simulator model configurations. The system is currently under incorporation in the standard development process at SAAB Aeronautics.
   Conclusion: The explicit and visual description of products and their variability through a configurator system enables better insights and a common understanding so that collaboration on possible product configurations improves and the potential of software reuse increases. The combination of application fields imposes constraints on how traditional tools and methods may be utilized. Solutions for Design Automation and Knowledge Based Engineering are available, but their application has limitations for Software Product Line engineering and the reuse of simulation models. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Andersson, Henric; Olvander, Johan] Linkoping Univ, Dept Management & Engn, SE-58183 Linkoping, Sweden.
   [Andersson, Henric; Herzog, Erik] SAAB Aeronaut, SE-58188 Linkoping, Sweden.
C3 Linkoping University; Saab Group
RP Andersson, H (corresponding author), Linkoping Univ, Dept Management & Engn, SE-58183 Linkoping, Sweden.
EM henric.andersson@liu.se
FU Swedish National Aeronautics Research Programme NFFP; SAAB Aeronautics
FX We wish to thank the Swedish National Aeronautics Research Programme
   NFFP and SAAB Aeronautics for sponsoring this work. Thanks are also due
   to the Gripen aircraft simulators group and the EMMA Project Team at
   SAAB Aeronautics, whose support is much appreciated.
CR Andersson H., 2010, P 27 INT C AER SCI N
   Andersson H., 2011, P 20 IEEE INT C COLL
   Andersson H., 2009, THESIS LINKOPINGS U
   Andersson H., 2010, 7 EUR SYST ENG C EUS
   [Anonymous], 2003, SIM MOD PORT HDB
   [Anonymous], 2008, PRODUCT CUSTOMIZATIO, DOI DOI 10.1007/978-3-540-71449-1
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Carlsson M., 2012, P 50 AIAA AER SCI M
   Christen E, 1999, IEEE T CIRCUITS-II, V46, P1263, DOI 10.1109/82.799677
   Clements P., 2002, Software product lines
   Crnkovic I., 2003, ART H COMP SCI LIBR
   Haug A., 2009, 5 WORLD C MASS CUST
   Hopgood A.A., 2001, INTELLIGENT SYSTEMS, DOI 10.1201/9781003226277
   Hvam L., 2010, ASS BEN PROD CONF P
   INSIGHT, 2009, MBSE THEM INCOSE, V12, P6
   Jiao J, 2007, J INTELL MANUF, V18, P1, DOI 10.1007/s10845-007-0001-4
   Mannisto T., 2001, P 10 INT WORKSH SOFT
   Mittal S., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P1395
   Mocko G., 2004, P ASME 2004 INT DES
   Modelisar, 2010, FUNCT MOCK UP INT MO
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Rosenmuller M., 2011, THESIS OTTO VONGUERI
   SIVARD G, 2001, THESIS ROYAL I TECHN
   Thevenot HJ, 2006, J ENG DESIGN, V17, P99, DOI 10.1080/09544820500275693
   Ulrich K.T., 2008, Product Design and Development, V4th
   van Gurp J., 2000, THESIS BLEKINGE I TE
   Wickenberg J., 2011, P 5 EUR C MAN TECHN, P463
   Williamson K., 2002, Research Methods for Students, Academics and Professionals: Information Management and Systems
NR 28
TC 3
Z9 5
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 595
EP 606
DI 10.1016/j.infsof.2012.06.014
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200008
DA 2024-07-18
ER

PT J
AU Mahdavi-Hezavehi, S
   Galster, M
   Avgeriou, P
AF Mahdavi-Hezavehi, Sara
   Galster, Matthias
   Avgeriou, Paris
TI Variability in quality attributes of service-based software systems: A
   systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Variability; Service-based systems; Quality attributes; Systematic
   literature review
AB Context: Variability is the ability of a software artifact (e.g., a system, component) to be adapted for a specific context, in a preplanned manner. Variability not only affects functionality, but also quality attributes (e.g., security, performance). Service-based software systems consider variability in functionality implicitly by dynamic service composition. However, variability in quality attributes of service-based systems seems insufficiently addressed in current design practices.
   Objective: We aim at (a) assessing methods for handling variability in quality attributes of service-based systems, (b) collecting evidence about current research that suggests implications for practice, and (c) identifying open problems and areas for improvement.
   Method: A systematic literature review with an automated search was conducted. The review included studies published between the year 2000 and 2011. We identified 46 relevant studies.
   Results: Current methods focus on a few quality attributes, in particular performance and availability. Also, most methods use formal techniques. Furthermore, current studies do not provide enough evidence for practitioners to adopt proposed approaches. So far, variability in quality attributes has mainly been studied in laboratory settings rather than in industrial environments.
   Conclusions: The product line domain as the domain that traditionally deals with variability has only little impact on handling variability in quality attributes. The lack of tool support, the lack of practical research and evidence for the applicability of approaches to handle variability are obstacles for practitioners to adopt methods. Therefore, we suggest studies in industry (e.g., surveys) to collect data on how practitioners handle variability of quality attributes in service-based systems. For example, results of our study help formulate hypotheses and questions for such surveys. Based on needs in practice, new approaches can be proposed. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Mahdavi-Hezavehi, Sara; Galster, Matthias; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, NL-9700 AK Groningen, Netherlands.
C3 University of Groningen
RP Galster, M (corresponding author), Univ Groningen, Dept Math & Comp Sci, POB 407, NL-9700 AK Groningen, Netherlands.
EM mgalster@ieee.org
OI Avgeriou, Paris/0000-0002-7101-0754
FU NWO SaS-LeG [638.000.000.07N07]
FX We thank the reviewers for their valuable comments that helped improve
   the paper. This research has been partially sponsored by NWO SaS-LeG,
   Contract No. 638.000.000.07N07.
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Aiello Marco, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P245, DOI 10.1109/COMPSACW.2010.50
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Anderson W, 2007, ICCBSS 2007: SIXTH INTERNATIONAL IEEE CONFERENCE ON COMMERCIAL-OFF-THE-SHELF (COTS)-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P141
   [Anonymous], 2006, Technical Report
   Bachmann Felix, 2005, VARIABILITY SOFTWARE, DOI [10.21236/ada450337, DOI 10.21236/ADA450337]
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Biolchini J., 2005, Int. Sugar J.
   Bosch J., 2002, P 4 INT WORKSH SOFTW, P303
   Brereton P., 2005, SERVICE BASED SYSTEM
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen L., 2010, P 14 INT SOFTW PROD, P1
   [陈丽琼 CHEN Li-qiong], 2009, [高分子通报, Polymer Bulletin], P1
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Cohen S., 2010, MANAGING VARIATION S
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Endo A.T., 2010, BRAZ WORKSH SYST AUT, P89
   Erl T., 2009, SOA DESIGN PATTERNS, VFirst
   Finney K, 1996, IEEE T SOFTWARE ENG, V22, P158, DOI 10.1109/32.485225
   Gannod G.C., 2007, ICSEW 07, P118
   Gehlert A., 2009, QUALITY REFERENCE MO, P64
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Gu Q, 2009, SERV ORIENTED COMPUT, V3, P171, DOI 10.1007/s11761-009-0046-7
   Hilliard R., 2010, P 4 EUR C SOFTW ARCH, P312
   Hofmeister C, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P77
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   IEEE Computer Society Software Engineering Standards Committee, 1998, IEEE STAND SOFTW QUA
   IEEE Computer Society Software Engineering Standards Committee, 1990, IEEE STAND GLOSS SOF
   ISO/IEC, 2001, Software engineering-Product quality-Part 1: Quality model
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Kazhamiakin R, 2010, LECT NOTES COMPUT SC, V6500, P117
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Kontogiannis K., 2007, Proc. of the International Workshop on Systems Development in SOA Environments, P1, DOI DOI 10.1109/SDSOA.2007.12
   Kontogogos A., 2009, TECHNICAL REPORT, P9
   Kontogogos A, 2009, IEEE ENABL TECHNOL, P254, DOI 10.1109/WETICE.2009.44
   Montagud S., 2011, SOFTWARE QUALITY J
   O'Brien L., 2007, INT WORKSH SYST DEV, P1
   O'Brien L., 2005, QUALITY ATTRIBUTES S, P39
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Rainer A., 2009, GUIDELINES ASSESSM S
   Riaz M., 2010, 14 INT C EV ASS SOFT, P1
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Varadan R, 2008, IBM SYST J, V47, P473, DOI 10.1147/sj.473.0473
   Yin R.K., 2014, Applications of case study research, V2nd
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
   Zhang H, 2010, 2011 INTERNATIONAL CONFERENCE ON COMPUTERS, COMMUNICATIONS, CONTROL AND AUTOMATION (CCCA 2011), VOL I, P1
NR 57
TC 56
Z9 61
U1 0
U2 26
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2013
VL 55
IS 2
BP 320
EP 343
DI 10.1016/j.infsof.2012.08.010
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 060EO
UT WOS:000312759500010
OA Green Published
DA 2024-07-18
ER

PT J
AU Heckman, S
   Williams, L
AF Heckman, Sarah
   Williams, Laurie
TI A systematic literature review of actionable alert identification
   techniques for automated static code analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Automated static analysis; Systematic literature review; Actionable
   alert identification; Unactionable alert mitigation; Warning
   prioritization; Actionable alert prediction
AB Context: Automated static analysis (ASA) identifies potential source code anomalies early in the software development lifecycle that could lead to field failures. Excessive alert generation and a large proportion of unimportant or incorrect alerts (unactionable alerts) may cause developers to reject the use of ASA. Techniques that identify anomalies important enough for developers to fix (actionable alerts) may increase the usefulness of ASA in practice.
   Objective: The goal of this work is to synthesize available research results to inform evidence-based selection of actionable alert identification techniques (AAIT).
   Method: Relevant studies about AAITs were gathered via a systematic literature review.
   Results: We selected 21 peer-reviewed studies of AAITs. The techniques use alert type selection; contextual information: data fusion; graph theory; machine learning: mathematical and statistical models; or dynamic detection to classify and prioritize actionable alerts. All of the AAITs are evaluated via an example with a variety of evaluation metrics.
   Conclusion: The selected studies support (with varying strength), the premise that the effective use of ASA is improved by supplementing ASA with an MIT. Seven of the 21 selected studies reported the precision of the proposed AAITs. The two studies with the highest precision built models using the subject program's history. Precision measures how well a technique identifies true actionable alerts out of all predicted actionable alerts. Precision does not measure the number of actionable alerts missed by an MIT or how well an MIT identifies unactionable alerts. Inconsistent use of evaluation metrics, subject programs, and ASAs in the selected studies preclude meta-analysis and prevent the current results from informing evidence-based selection of an AAIT. We propose building on an actionable alert identification benchmark for comparison and evaluation of MIT from literature on a standard set of subjects and utilizing a common set of evaluation metrics. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Heckman, Sarah; Williams, Laurie] N Carolina State Univ, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Heckman, S (corresponding author), N Carolina State Univ, 890 Oval Dr,Campus Box 8206, Raleigh, NC 27695 USA.
EM heckman@csc.ncsu.edu; williams@csc.ncsu.edu
OI Heckman, Sarah/0000-0003-4351-8611
FU IBM
FX We would like to thank the Real Search reading group, especially Lauren
   Haywood, for their comments on this paper. This work was funded by the
   first author's IBM PhD Fellowship.
CR Aggarwal A, 2006, P INT COMP SOFTW APP, P343
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Artho Cyrille., 2001, 2001 AUSTR SOFTW, P68
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   BOOGERD C, 2006, P PHIL SOFTW C NOV, P10
   Boogerd C, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P79, DOI 10.1109/SCAM.2008.18
   Boogerd C, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P149
   Boogerd C, 2008, PROC IEEE INT CONF S, P277, DOI 10.1109/ICSM.2008.4658076
   CHEN P, 2009, P INT C INF COMM SEC, P336
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Chess B., 2007, Secure programming with static analysis
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Csallner C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348254
   ENGLER D, 2000, OPERATING SYSTEMS DE
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   FLEISS JL, 1969, PSYCHOL BULL, V72, P323, DOI 10.1037/h0028106
   HAUGH E., 2003, Proceedings of the Network and Distributed System Security Symposium, P123
   HECKMAN S, 2008, TR200823 N CAR STAT
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   HECKMAN SS, 2009, THESIS N CAROLINA ST
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   *IEEE, 2008, 247652002 ISOIEC
   *IEEE, 1990, 610121990 IEEE STAND
   *IEEE, 2002, 10281997 R2002 IEEE
   Johnson S.C., 1978, LINT C PROGRAM CHECK
   Jung YB, 2005, LECT NOTES COMPUT SC, V3672, P203
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   KIM S, 2007, P INT WORKSH MIN SOF
   Kitchenham B., 2004, ARXIV
   Kong Deguang., 2007, Proceedings of the 2nd international conference on Scalable information systems, P55
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   KREMENEK T, 2004, P 12 ACM SIGSOFT INT, P83
   LIANG G, 2010, P 25 IEEE ACM INT C, P93
   Meng N, 2008, INT CONF QUAL SOFTW, P169, DOI 10.1109/QSIC.2008.30
   NANDA MG, 2010, P 32 ACM IEEE INT C, V2, P99
   Ogasawara H, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P109, DOI 10.1109/METRIC.1998.731235
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   RUNGTA N, 2008, P 4 INT HAIF VER C H, P23
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Vardeman S., 2001, BASIC ENG DATA COLLE
   Viega J, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P257, DOI 10.1109/ACSAC.2000.898880
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   Wagner D., 2000, IN NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM, P3
   WAGNER S, 2008, P 1 INT C SOFTW TEST, P248
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Witten I. H., 2005, DATA MINING PRACTICA
   Xiao S, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P346
   Yi K, 2007, INFORM PROCESS LETT, V102, P118, DOI 10.1016/j.ipl.2006.11.004
   Yu L, 2009, 2009 3RD INTERNATIONAL CONFERENCE ON POWER ELECTRONICS SYSTEMS AND APPLICATIONS: ELECTRIC VEHICLE AND GREEN ENERGY, P49
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
   [No title captured]
NR 61
TC 91
Z9 107
U1 1
U2 20
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2011
VL 53
IS 4
SI SI
BP 363
EP 387
DI 10.1016/j.infsof.2010.12.007
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 739QK
UT WOS:000288732700006
DA 2024-07-18
ER

PT J
AU Abdeen, H
   Ducasse, S
   Pollet, D
   Alloui, I
AF Abdeen, Hani
   Ducasse, Stephane
   Pollet, Damien
   Alloui, Ilham
TI Package Fingerprints: A visual summary of package interface usage
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software package; Visualization; Cohesion; Coupling
ID COUPLING MEASUREMENT; SOFTWARE; SYSTEMS
AB Context: Object-oriented languages such as Java, Smalltalk, and C++ structure their programs using packages. Maintainers of large systems need to understand how packages relate to each other, but this task is complex because packages often have multiple clients and play different roles (class container, code ownership, etc.). Several approaches have been proposed, among which the use of cohesion and coupling metrics. Such metrics help identify candidate packages for restructuring: however, they do not help maintainers actually understand the structure and interrelationships between packages.
   Objectives: In this paper, we use pre-attentive processing as the basis for package visualization and see to what extent it could be used in package understanding.
   Method: We present the Package Fingerprint, a 2D visualization of the references made to and from a package. The proposed visualization offers a semantically rich, but compact and zoomable views centered on packages. We focus on two views (incoming and outgoing references) that help users understand how the package under analysis is used by the system and how it uses the system.
   Results: We applied these views on four large systems: Squeak, JBoss, Azureus, and ArgoUML. We obtained several interesting results, among which, the identification of a set of recurring visual patterns that help maintainers: (a) more easily identify the role of and the way a package is used within the system (e.g., the package under analysis provides a set of layered services), and (b) detect either problematic situations (e.g., a single package that groups together a large number of basic services) or opportunities for better package restructuring (e.g., removing cyclic dependencies among packages). The visualization generally scaled well and the detection of different patterns was always possible.
   Conclusion: The proposed visualizations and patterns proved to be useful in understanding and maintaining the different systems we addressed. To generalize to other contexts and systems, a real user study is required. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Abdeen, Hani; Ducasse, Stephane; Pollet, Damien] INRIA Lille Nord Europe USTL LIFL CNRS UMR 8022, RMoD, F-59650 Villeneuve Dascq, France.
RP Ducasse, S (corresponding author), INRIA Lille Nord Europe USTL LIFL CNRS UMR 8022, RMoD, 40 Ave Halley, F-59650 Villeneuve Dascq, France.
EM hani.abdeen@inria.fr; stephane.ducasse@inria.fr; damien.pollet@inria.fr;
   ilham.alloui@univ-savoie.fr
OI Ducasse, Stephane/0000-0001-6070-6599
CR Abdeen H., 2009, THESIS U LILLE
   ABDEEN H, 2008, PACKAGE REFERENCE FI, P213
   Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   Abreu FB, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2001.914968
   [Anonymous], 2000, Information Visualization: Perception for Design
   [Anonymous], 2018, The Visual Display of Quantitative Information
   [Anonymous], P CSMR 2006 10 EUR C
   [Anonymous], P 6 WORK C REV ENG
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Beyer D., 2005, P 21 IEEE INT C SOFT, P89
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chuah MC, 1998, IEEE COMPUT GRAPH, V18, P24, DOI 10.1109/38.689658
   D'Ambros M, 2006, WORK CONF REVERSE EN, P189
   Denker M, 2007, ELECTRON NOTES THEOR, V166, P81, DOI 10.1016/j.entcs.2006.08.003
   DONG XY, 2007, ICSM 2007, P375
   DUCASSE S, 2005, P 11 IEEE INT SOFTW, P70
   Ducasse Stephane., 2007, Software Maintenance, P94
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   FOWLER M, 2001, REDUCING COUPLING
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Froehlich J, 2004, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.2004.1317461
   Hautus Edwin, 2002, IASTED INT C SOFTW E
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Laval J., 2009, P ESUG INT WORKSH SM
   MANCORIDIS S, 1999, P ICSM 99 INT C SOFT
   Martin R.C., 1996, Granularity
   Martin R.C., 2000, Design Principles and Design Patterns
   MARTIN RC, 2002, SRP SINGLE RESPONSIB
   Melton H., 2007, ACSC 07
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Pinzger Martin., 2005, SOFTVIS 05, P67
   PONISIO L, 2006, P 3 SOFTW MEAS EUR F, P91
   RISING L, 1992, SOFTWARE PRACT EXPER, V22, P553, DOI 10.1002/spe.4380220705
   Sangal Neeraj, 2005, P 20 ANN ACM SIGPLAN, P167, DOI DOI 10.1145/1103845.1094824
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Storey MAD, 1997, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION, PROCEEDINGS, P38, DOI 10.1109/INFVIS.1997.636784
   STOREY MAD, 2005, SOFTVIS 05, P193
   TREISMAN A, 1985, COMPUT VISION GRAPH, V31, P156, DOI 10.1016/S0734-189X(85)80004-9
   Voinea L., 2005, Proceedings of the ACM Symposium on Software Visualization, P47, DOI [10.1145/1056018.1056025, DOI 10.1145/1056018.1056025]
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Xie XR, 2006, WORK CONF REVERSE EN, P231
   [No title captured]
   [No title captured]
NR 50
TC 9
Z9 10
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2010
VL 52
IS 12
BP 1312
EP 1330
DI 10.1016/j.infsof.2010.07.005
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677DB
UT WOS:000283968200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rodríguez, A
   de Guzmán, IGR
   Fernández-Medina, E
   Piattini, M
AF Rodriguez, Alfonso
   Garcia-Rodriguez de Guzman, Ignacio
   Fernandez-Medina, Eduardo
   Piattini, Mario
TI Semi-formal transformation of secure business processes into analysis
   class and use case models: An MDA approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE MDA; Secure business processes; BPMN; UML
ID TAXONOMY
AB Context: Model-Driven Development (MDD) is an alternative approach for information systems development. The basic underlying concept of this approach is the definition of abstract models that can be transformed to obtain models near implementation. One fairly widespread proposal in this sphere is that of Model Driven Architecture (MDA). Business process models are abstract models which additionally contain key information about the tasks that are being carried out to achieve the company's goals, and two notations currently exist for modelling business processes: the Unified Modelling Language (UML), through activity diagrams, and the Business Process Modelling Notation (BPMN).
   Objective: Our research is particularly focused on security requirements, in such a way that security is modelled along with the other aspects that are included in a business process. To this end, in earlier works we have defined a metamodel called secure business process (SBP), which may assist in the process of developing software as a source of highly valuable requirements (including very abstract security requirements), which are transformed into models with a lower abstraction level, such as analysis class diagrams and use case diagrams through the approach presented in this paper.
   Method: We have defined all the transformation rules necessary to obtain analysis class diagrams and use case diagrams from SBP, and refined them through the characteristic iterative process of the action-research method.
   Results: We have obtained a set of rules and a checklist that make it possible to automatically obtain a set of UML analysis classes and use cases, starting from SBP models. Our approach has additionally been applied in a real environment in the area of the payment of electrical energy consumption.
   Conclusions: The application of our proposal shows that our semi-automatic process can be used to obtain a set of useful artifacts for software development processes. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Garcia-Rodriguez de Guzman, Ignacio; Fernandez-Medina, Eduardo; Piattini, Mario] Univ Castilla La Mancha, Informat Syst & Technol Dept, ALARCOS Res Grp, E-13071 Ciudad Real, Spain.
   [Rodriguez, Alfonso] Univ Bio Bio, Dept Comp Sci & Informat Technol, Chillan, Chile.
C3 Universidad de Castilla-La Mancha; Universidad del Bio-Bio
RP Fernández-Medina, E (corresponding author), Univ Castilla La Mancha, Informat Syst & Technol Dept, ALARCOS Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM alfonso@ubiobio.cl; Ignacio.GRodriguez@uclm.es;
   Eduardo.FdezMedina@uclm.es; Mario.Piattini@uclm.es
RI Piattini, Mario/F-6271-2013; de Guzmán, Ignacio
   García-Rodríguez/N-4489-2014; Rodriguez, Alfonso/N-5691-2015;
   Fernandez-Medina, Eduardo/D-4648-2011
OI Piattini, Mario/0000-0002-7212-8279; de Guzmán, Ignacio
   García-Rodríguez/0000-0002-0038-0942; Rodriguez,
   Alfonso/0000-0002-1236-9388; Fernandez-Medina,
   Eduardo/0000-0003-2553-9320
FU "Ministerio de Ciencia e Innovacion" (Spain) [PET 2008-0136]; SISTEMA
   [PII2109-0150-3135]; PRALIN [PAC08-0121-1374]; FEDER; Consejeria de
   Ciencia y Tecnologia de la Junta de Comunidades de Castilla-La Mancha
   (Spain); MEDUSAS [IDI-20090557]; Ministerio de Ciencia e Innovacion
   (Spain); QUASI-MODO [PAC08-0157-0668]
FX We would like to thank Mr. Eduardo Robba, business and systems analyst
   at Coopelan Ltda., for his valuable collaboration in the development of
   the application example. This research is part of the following
   projects: BUSINESS (PET 2008-0136) Project financed by the "Ministerio
   de Ciencia e Innovacion" (Spain), QUASI-MODO (PAC08-0157-0668), SISTEMA
   (PII2109-0150-3135), and PRALIN (PAC08-0121-1374), both partially
   supported by the FEDER and the Consejeria de Ciencia y Tecnologia de la
   Junta de Comunidades de Castilla-La Mancha (Spain), and MEDUSAS
   (IDI-20090557) supported by the Centro para el Desarrollo Tecnologico
   Industrial. Ministerio de Ciencia e Innovacion (Spain).
CR AGRAWAL A, 2003, 18 IEEE INT C AUT SO
   Aguilar-Savén RS, 2004, INT J PROD ECON, V90, P129, DOI 10.1016/S0925-5273(03)00102-6
   Ahamed S.I, 2006, ENTERPRISE INFORM SY, P215
   AKEHURST DH, 2006, 9 INT C MOD DRIV ENG
   ALLILAIRE F, 2004, 2 EUR WORKSH MDA
   [Anonymous], UN MOD LANG SUP VERS
   [Anonymous], 2003, COMM WAR MET CWM SPE
   [Anonymous], SECURITY ENG SERVICE
   ANTONIOL G, 2004, 12 IEEE INT WORKSH P
   BACKES M, 2003, INT C BUS PROC MAN B
   BARROS JP, 2000, WORKSH DYN BEH UML M
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   BEZIVIN J, 2005, ECLIPSE BASED IDE AT
   BEZIVIN J, 2004, EUR J INFORM PROF, V5, P21
   *BPMN, 2006, DTC060201 BPMN OMG
   BRAUN P, 2003, BIDIRECTIONAL OBJECT
   BREU R, 2008, INFORM SYSTEMS E BUS
   CHOO KKR, 2007, RES PUBLIC POLICY SE, V78
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   DIJKMAN RM, 2002, 6 INT C SOFTW ENG AP
   Dufresne T., 2003, PROCESS MODELING E B
   FALLERI JR, 2006, EUR C MOD DRIV ARCH
   Firesmith D., 2004, J OBJECT TECHNOLOGY, V3, P61, DOI DOI 10.5381/JOT.2004.3.1.C6
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   Giaglis GM, 2001, INT J FLEX MANUF SYS, V13, P209, DOI 10.1023/A:1011139719773
   GUTIERREZ JJ, 2008, 11 INT C MOD DRIV EN
   HAFNER M, 2006, MODEL DRIVEN ENG LAN
   Harmon P., 2004, Business Process Trends Newsletter, V2
   HERRMANN G, 1998, 11 INT BLED EL COMM
   Herrmann P., 2006, Electronic Commerce Research, V6, P305, DOI 10.1007/s10660-006-8677-7
   JOUAULT F, 2005, INT WORKSH MOD TRANS
   JOUAULT F, 2006, ACM S APPL COMP MOD
   King SF, 2006, INFORM SOFTWARE TECH, V48, P1104, DOI 10.1016/j.infsof.2006.02.003
   Kleppe A.G., 2003, The Model Driven Architecture: Practice and Promise, P192
   KOBIAKOV P, 2005, MDA QVT TOGETHER ARC
   KURTEV I, 2007, APPL GRAPH TRANSFORM
   Kuznetsov MB, 2007, PROGRAM COMPUT SOFT+, V33, P44, DOI 10.1134/S0361768807010069
   LIEW P, 2004, 12 INT WORKSH SOFTW
   LIST B, 2005, 1 INT WORKSH BEST PR
   MACEK O, 2009, DATABASES TEXTS SPEC
   MANA A, 2003, 14 INT WORKSH DAT EX
   MELLOR SJ, 2004, MDA DISTILLED PRINCI, P176
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   *OBJ MAN GROUP, 2006, ARCH DRIV MOD ADM KN
   *OBJ MAN GROUP, 2007, FORMAL20070205 OBJ M
   *OBJ MAN GROUP, 2005, PTC051101 OMG, P204
   *OBJ MAN GROUP, 2005, FORMAL050704 OBJ MAN
   *OMG, 2005, OCL 2 0 PEC VERS 2 0
   OMG, 2003, MDA GUID VERS 1 0 1
   *OMG, 2002, MET OBJ FAC MOF SPEC
   RADER G, 2008, RATIONAL SOFTWARE EN
   Robson C., 2002, Real World Research, V2nd
   RODRIGUEZ A, 2006, 3 INT C TRUST PRIV S
   RODRIGUEZ A, 2006, 2 INT WORKSH BEST PR
   RODRIGUEZ A, 2007, 3 INT WORKSH FDN PRA
   RODRIGUEZ A, 2007, 4 INT C TRUST PRIV S
   RODRIGUEZ A, 2007, 5 INT C BUS PROC MAN
   Rodríguez A, 2007, IEICE T INF SYST, VE90D, P745, DOI 10.1093/ietisy/e90-d.4.745
   ROHM AW, 1998, 14 ANN COMP SEC APPL
   ROHM AW, 1999, 15 ANN COMP SEC APPL
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   RUNGWORAWUT W, 2005, WSEAS T COMPUTERS, V4, P1526
   RUNGWORAWUT W, 2006, T ENG COMPUTING TECH, V12, P165
   SINDRE G, 2007, REQUIREMENTS ENG FDN
   STOLFA S, 2004, SYST INT 12 ANN INT
   *UMT QVT, 2005, SOURCEFORGE
   VIVAS JL, 2003, INFORM SECURITY
   WALTON JP, 2002, P 30 ANN ACM SIGUCCS
   *WFMC, 1999, TERM GLOSS
   White S., 2004, PROCESS MODELING NOT
   WOLTER C, 2007, WISE WORKSH
   WOLTER C, 2007, 5 INT C BUS PROC MAN
NR 73
TC 58
Z9 60
U1 0
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2010
VL 52
IS 9
BP 945
EP 971
DI 10.1016/j.infsof.2010.03.015
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 629QL
UT WOS:000280214700006
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, Magne
TI Identification of more risks can lead to increased over-optimism of and
   over-confidence in software development effort estimates
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Effort estimation; Risk assessment; Human judgment
ID EXPERT JUDGMENT; EXPERIENCES; PREDICTION; BIASES; END
AB Software professionals are, on average, over-optimistic about the required effort usage and over-confident about the accuracy of their effort estimates. A better understanding of the mechanisms leading to the over-optimism and over-confidence may enable better estimation processes and, as a consequence, better managed software development projects We hypothesize that there are situations where more work on risk identification leads to increased over-optimism and over-confidence in software development effort estimates, instead of the Intended improvement of realism. Four experiments with software professionals are conducted to test the hypothesis All four experiments provide results in support of the hypothesis. Possible explanations of the counter-intuitive finding relate to results from cognitive science on "illusion-of-control", "cognitive accessibility", "the peak-end rule" and "risk as feeling" Thorough work on risk identification is essential for many purposes and our results should not lead to less emphasis on this activity Our results do, however, suggest that it matters how risk identification and judgment-based effort estimation processes are combined A simple approach for better combination of risk identification work and effort estimation is suggested (C) 2009 Elsevier B V All rights reserved
C1 [Jorgensen, Magne] Simula Res Lab, NO-1325 Lysaker, Norway.
   [Jorgensen, Magne] Univ Oslo, NO-0316 Oslo, Norway.
C3 University of Oslo
RP Jorgensen, M (corresponding author), Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
RI Jorgensen, Magne/H-4402-2016
CR [Anonymous], 2008, A Guide to the Project Management Body of Knowledge (PMBOK Guide), V4th
   [Anonymous], IND USE FORMAL SOFTW
   [Anonymous], INT S EMP SOFTW ENG
   BABAD E, 1991, J APPL SOC PSYCHOL, V21, P1921, DOI 10.1111/j.1559-1816.1991.tb00514.x
   Buehler R, 1997, PERS SOC PSYCHOL B, V23, P238, DOI 10.1177/0146167297233003
   Do AM, 2008, PSYCHON B REV, V15, P96, DOI 10.3758/PBR.15.1.96
   Evans JST, 2003, TRENDS COGN SCI, V7, P454, DOI 10.1016/j.tics.2003.08.012
   Hallahan M, 1996, BEHAV RES THER, V34, P489, DOI 10.1016/0005-7967(95)00082-8
   HAMMOND KR, 1987, IEEE T SYST MAN CYB, V17, P753, DOI 10.1109/TSMC.1987.6499282
   HENRY RA, 1994, ORGAN BEHAV HUM DEC, V57, P210, DOI 10.1006/obhd.1994.1012
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P953, DOI 10.1109/TSE.2004.92
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   JORGENSEN M, 2009, SELECTION WORK EFFOR
   KAHNEMAN D, 1993, PSYCHOL SCI, V4, P401, DOI 10.1111/j.1467-9280.1993.tb00589.x
   LANGER EJ, 1975, J PERS SOC PSYCHOL, V32, P311, DOI 10.1037/0022-3514.32.2.311
   MILBURN MA, 1978, ORGAN BEHAV HUM PERF, V21, P17, DOI 10.1016/0030-5073(78)90035-1
   Mussweiler T, 2003, PSYCHOL REV, V110, P472, DOI 10.1037/0033-295X.110.3.472
   OTWAY H, 1992, RISK ANAL, V12, P83, DOI 10.1111/j.1539-6924.1992.tb01310.x
   PELHAM BW, 1995, J PERS SOC PSYCHOL, V68, P581, DOI 10.1037/0022-3514.68.4.581
   ROSENTHAL R, 1978, PSYCHOL BULL, V85, P85
   Sanna LJ, 2004, PSYCHOL SCI, V15, P474, DOI 10.1111/j.0956-7976.2004.00704.x
   Simon H.A., 1957, MODELS MAN SOCIAL RA
   Slovic P, 2007, EUR J OPER RES, V177, P1333, DOI 10.1016/j.ejor.2005.04.006
   Thompson SC, 1998, PSYCHOL BULL, V123, P143, DOI 10.1037/0033-2909.123.2.143
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   de Venter G, 2008, AUST J MANAGE, V32, P545
   VISCUSI WK, 1991, THEOR DECIS, V31, P159, DOI 10.1007/BF00132991
   White D., 2002, International Journal of Project Management, V20, DOI [10.1016/S0263-7863(00)00029-6, DOI 10.1016/S0263-7863(00)00029-6]
NR 28
TC 19
Z9 20
U1 0
U2 16
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2010
VL 52
IS 5
SI SI
BP 506
EP 516
DI 10.1016/j.infsof.2009.12.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 588XF
UT WOS:000277107200004
DA 2024-07-18
ER

PT J
AU Gutiérrez, C
   Rosado, DG
   Fernández-Medina, E
AF Gutierrez, Carlos
   Rosado, David G.
   Fernandez-Medina, Eduardo
TI The practical application of a process for eliciting and designing
   security in web service systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Application information security; Software process; Web Services
   Security; Design methodology
AB Best practices currently state that the security requirements and security architectures of distributed software-intensive systems should be based on security risk assessments, which have been designed from security patterns, are implemented in security standards and are tool-supported throughout their development life-cycle. Web service-based information systems uphold inter-enterprise relations through the Internet, and this technology has been revealed as the reference solution with which to implement Service-Oriented Architectures. In this paper, we present the application of the Process for Web Service Security (PWSSec), developed by the authors, to a real web service-based case study. The manner in which security in inter-organizational information systems can be analyzed, designed and implemented by applying PWSSec, which combines a risk analysis and management, along with a security architecture and a standard-based approach. is also shown. We additionally present a tool built to provide support to the PWSSec process. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Gutierrez, Carlos; Rosado, David G.; Fernandez-Medina, Eduardo] Univ Castilla La Mancha, Inst Informat Technol & Syst, ALARCOS Res Grp, Dept Informat Technol & Syst, E-13071 Ciudad Real, Spain.
   [Gutierrez, Carlos] Correos Telecom, Madrid, Spain.
C3 Universidad de Castilla-La Mancha
RP Fernández-Medina, E (corresponding author), Univ Castilla La Mancha, Inst Informat Technol & Syst, ALARCOS Res Grp, Dept Informat Technol & Syst, E-13071 Ciudad Real, Spain.
EM eduardo.fdezmedina@uclm.es
RI Rosado, David G./L-8221-2014; Fernandez-Medina, Eduardo/D-4648-2011
OI Rosado, David G./0000-0003-4613-5501; Fernandez-Medina,
   Eduardo/0000-0003-2553-9320
FU Spanish Ministry of Education and Science [TIN2006-15175-C05-05];
   QUASIMODO [PAC08-0157-0668]; FEDER; Regional Science and Technology
   Ministry of Castilla-La Mancha (Spain)
FX This research is part of the ESFINGE (TIN2006-15175-C05-05) Project
   financed by the Spanish Ministry of Education and Science, and of the
   QUASIMODO (PAC08-0157-0668) Project, financed by the FEDER and the
   Regional Science and Technology Ministry of Castilla-La Mancha (Spain).
CR AIELLO M, 2004, UPGRADE, V5, P20
   ALBERTS CJ, 1999, NETWORKED SYSTEMS SU, P84
   [Anonymous], WEB SERVICES SECURIT
   [Anonymous], UML PROF MOD QUAL SE
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   [Anonymous], 2005, INV CLIM REG INT INV
   Avison D, 1999, COMMUN ACM, V42, P94, DOI 10.1145/291469.291479
   BERTINO S, 2001, 6 ACM S ACC CONTR MO
   BHARGAVAN K, 2005, 2005 WORKSH SEC WEB, P1
   Bhatti R, 2004, COMPUTER, V37, P41, DOI 10.1109/MC.2004.1297300
   Boehm B.W., 1988, IEEE COMPUTER, V21, P61
   BREU M, 2005, 5 INT C WEB ENG ICWE
   BUECKER A, 2007, IBM REDBOOKS
   *CCN CERT, 2008, REV AUDITORIA SEGURI, P70
   CHANG S, 2003, 27 ANN INT COMP SOFT
   DELESSY NA, 2008, SAC 08
   DEUBLER M, 2004, 2 INT C SERV OR COMP
   DEUBLER M, 2004, IASTED C SOFTW ENG I
   ENDREI MJ, 2004, PATTERNS SERVICE ORI, P345
   ERL T, 2007, PRINCIPLES SERVICE D, P573
   FERNANDEZ EB, 2007, DEXA 07
   FERRARI E, 2004, EXTENDING DATABASE T
   FIELDING RT, 2000, SOFTWARE RES GROUP
   GUTIERREZ C, 2005, ACM WORKSH SEC WEB S
   GUTIERREZ C, 2005, WEB INFORM SECURITY, P318
   GUTIERREZ C, 2004, WORKSH INT COMM SEC
   GUTIERREZ C, 2005, S REQ ENG INF SEC PA
   GUTIERREZ C, 2006, IEEE INT C WEB SERV
   HAFNER M, 2009, SEC ENG SERV OR ARCH, P248
   HOUMB SH, 2003, 10 AS PAC SOFTW ENG
   *IBM, 2002, SEC WEB SERV WORLD P
   Kock N., 2001, INFORM TECHNOLOGY PE, V14, P6, DOI DOI 10.1108/ITP.2001.16114AAA.001
   Krutchen P., 1995, IEEE SOFTWARE, V12, P42, DOI [10.1109/52.469759, DOI 10.1109/52.469759]
   LEUNE K, INT C SERV OR COMP W
   LEVINSON HL, 2006, ACQUISITION SUPPORT, P64
   *LIB ALL PROJ, 2003, LIB ID FF ARCH OV V1
   LOPEZ F, 2005, MAGERIT VERSION 2 ME, P154
   LOPEZ F, 2005, MAGERIT VERSION 2 ME, V3, P154
   MCTAGGART R, 1991, ADULT ED Q, V41
   MOORE AP, 2001, SURVIVABLE SYSTEMS
   Nagaratnam N, 2005, IBM SYST J, V44, P847, DOI 10.1147/sj.444.0847
   NAKAMURA Y, 2005, IEEE INT C SERV COMP
   Padak N., 1994, GUIDELINES PLANNING
   REMY D, 2004, SECURING WEB SERVICE, P408
   ROSADO G, 2006, INTERNET RES, V16
   SINGHAL A, 2007, RECOMMENDATIONS NATL
   Toval A., 2001, Requirements Engineering, V6, P205, DOI 10.1007/PL00010360
   *VERISIGN, 2004, WEB SERV POL FRAM WS
   Vinoski S, 2004, IEEE INTERNET COMPUT, V8, P94, DOI 10.1109/MIC.2004.42
   *W3C, 2004, WERB SERV ARCH
   WADSWORTH Y, 2005, ACTION RES INT, V2
   *WS I, 2005, SEC CHALL THREATS CO
   *WS I, 2004, SEC PROF VE IN PRESS
   ZHANG J, 2005, IT PROF, V7, P32
   ZHANG LJ, 2004, E COMMERCE TECHNOLOG
NR 55
TC 13
Z9 15
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2009
VL 51
IS 12
BP 1712
EP 1738
DI 10.1016/j.infsof.2009.05.004
PG 27
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 510ZR
UT WOS:000271133600007
DA 2024-07-18
ER

PT J
AU Lundberg, J
   Gutzmann, T
   Edvinsson, M
   Löwe, W
AF Lundberg, Jonas
   Gutzmann, Tobias
   Edvinsson, Marcus
   Lowe, Welf
TI Fast and precise points-to analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th IEEE International Working Conference on Source Code Analysis and
   Manipulation
CY SEP 28-29, 2008
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Semant Designs, SAP, Reengn Forum, Ctr Res Evolut Search & Testing
DE Points-to analysis; Dataflow analysis; Escape analysis
ID ESCAPE ANALYSIS; OBJECT
AB Many software engineering applications require points-to analysis. These client applications range from optimizing compilers to integrated program development environments (IDEs) and from testing environments to reverse-engineering tools. Moreover, software engineering applications used in an edit-compile cycle need points-to analysis to be fast and precise.
   In this article, we present a new context- and flow-sensitive approach to points-to analysis where calling contexts are distinguished by the points-to sets analyzed for their call target expressions. Compared to other well-known context-sensitive techniques it is faster in practice, on average, twice as fast as the call string approach and by an order of magnitude faster than the object-sensitive technique. In fact, it shows to be only marginally slower than a context-insensitive baseline analysis. At the same time, it provides higher precision than the call string technique and is similar in precision to the object-sensitive technique. We confirm these statements with experiments using a number of abstract precision metrics and a concrete client application: escape analysis. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Lundberg, Jonas; Gutzmann, Tobias; Edvinsson, Marcus; Lowe, Welf] Vaxjo Univ, Software Technol Grp, Sch Math & Syst Engn, S-35195 Vaxjo, Sweden.
C3 Vaxjo University; Linnaeus University
RP Gutzmann, T (corresponding author), Vaxjo Univ, Software Technol Grp, Sch Math & Syst Engn, S-35195 Vaxjo, Sweden.
EM Jonas.Lundberg@vxu.se; Tobias.Gutzmann@vxu.se; Marcus.Edvinsson@vxu.se;
   Welf.Lowe@vxu.se
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1999, P OBJ OR SYST LANG
   Binkley DW, 1998, J SYST SOFTWARE, V40, P17, DOI 10.1016/S0164-1212(97)00016-2
   Blanchet B, 2003, ACM T PROGR LANG SYS, V25, P713, DOI 10.1145/945885.945886
   BLANCHET B, 1999, P 1999 ACM SIGPLAN C, P20
   Bogda J, 1999, ACM SIGPLAN NOTICES, V34, P35, DOI 10.1145/320385.320388
   CHATTERJEE R, 1999, S PRINC PROGR LANG, P133
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clausen LR, 1997, CONCURRENCY-PRACT EX, V9, P1031, DOI 10.1002/(SICI)1096-9128(199711)9:11<1031::AID-CPE354>3.0.CO;2-O
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Gay D, 2000, LECT NOTES COMPUT SC, V1781, P82
   HASTI R, 1998, P ACM SIGPLAN 98 C P, P97
   HENDERSONSELLER.B, 1999, OBJECT ORIENTED METR
   HIND M, 2001, WORKSH PROGR AN SOFT, P54
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   ISHIZAKI K, 2000, P ACM SIGPLAN C OBJ, P294
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   Lundberg J., 2007, SCALABLE FLOW SENSIT
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   MARLOWE TJ, 1990, ACTA INFORM, V28, P121, DOI 10.1007/BF01237234
   MARLOWE TJ, LCSRTR249
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Milanova A, 2002, PROC IEEE INT CONF S, P586, DOI 10.1109/ICSM.2002.1167823
   Muchnick S., 1997, ADV COMPILER DESIGN
   Nielsen F., 2005, PRINCIPLES PROGRAM A
   OCallahan R., 2000, THESIS CARNEGIE MELL
   RUF E, 2000, P C PROGR LANG DES I, P208
   Ryder BG, 2003, LECT NOTES COMPUT SC, V2622, P126
   Salah M, 2005, PROC IEEE INT CONF S, P155
   SEEMANN J., 1998, Proceedings of 5th international symposium on Foundations of Software Engineering, P10, DOI DOI 10.1145/288195.288207
   Sharir Micha, 1981, PROGRAM FLOW ANAL TH
   Shivers O., 1991, CMUCS91145
   Tai KC, 1999, J OBJECT-ORIENT PROG, V12, P18
   Tonella P, 2003, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSM.2003.1235418
   TRAPP M, 1999, 199914 U KARLSR FAK
   Trapp M., 1999, THESIS U KARLSRUHE
   WHALEY J, 1999, C OBJ OR PROGR SYST, P187
   Whaley John., 2004, PROGRAMMING LANGUAGE, P131
   [No title captured]
   [No title captured]
NR 41
TC 7
Z9 9
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2009
VL 51
IS 10
BP 1428
EP 1439
DI 10.1016/j.infsof.2009.04.012
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 481VN
UT WOS:000268840400005
DA 2024-07-18
ER

PT J
AU Azar, D
   Harmanani, H
   Korkmaz, R
AF Azar, D.
   Harmanani, H.
   Korkmaz, R.
TI A hybrid heuristic approach to optimize rule-based software quality
   estimation models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Search-based software engineering; Soft computing
ID PROJECT-MANAGEMENT; METRICS; COST
AB Software quality is defined as the degree to which a software component or system meets specified requirements and specifications. Assessing software quality in the early stages of design and development is crucial as it helps reduce effort, time and money. However, the task is difficult since most software quality characteristics (such as maintainability, reliability and reusability) cannot be directly and objectively measured before the software product is deployed and used for a certain period of time. Nonetheless, these software quality characteristics can be predicted from other measurable software quality attributes such as complexity and inheritance. Many metrics have been proposed for this purpose. In this context, we speak of estimating software quality characteristics from measurable attributes. For this purpose, software quality estimation models have been widely used. These take different forms: statistical models, rule-based models and decision trees. However, data used to build such models is scarce in the domain of software quality. As a result, the accuracy of the built estimation models deteriorates when they are used to predict the quality of new software components. In this paper, we propose a search-based software engineering approach to improve the prediction accuracy of software quality estimation models by adapting them to new unseen software products. The method has been implemented and favorable result comparisons are reported in this work. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Azar, D.; Harmanani, H.; Korkmaz, R.] Lebanese Amer Univ, Dept Math & Comp Sci, Byblos 14012010, Lebanon.
C3 Lebanese American University
RP Harmanani, H (corresponding author), Lebanese Amer Univ, Dept Math & Comp Sci, Byblos 14012010, Lebanon.
EM haidar@acm.org
RI Azar, Danielle/AAI-7798-2020; Harmanani, Haidar/Q-7755-2019
OI Azar, Danielle/0000-0002-6159-3714; Harmanani,
   Haidar/0000-0001-5416-4383
FU Lebanese National Council for Scientific Research (CNRS); Research
   Council at the Lebanese American University
FX This work was supported in part by a grant from the Lebanese National
   Council for Scientific Research (CNRS), and from the Research Council at
   the Lebanese American University.
CR Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Amaral de Almeida M., 1999, Foundations of Intelligent Systems. 11th International Symposium, ISMIS'99. Proceedings, P565
   [Anonymous], P 19 INT C SOFTW ENG
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   Antoniol G, 2004, LECT NOTES COMPUT SC, V3103, P1425
   Azar D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P285, DOI 10.1109/ASE.2002.1115031
   Azar D, 2007, NEW TECHNOLOGIES, MOBILITY AND SECURITY, P297, DOI 10.1007/978-1-4020-6270-4_25
   BARNES GM, 1993, J OBJECT-ORIENT PROG, V6, P27
   Basili VR, 1997, PROC INT CONF SOFTW, P282, DOI 10.1145/253228.253289
   BOUKTIF S, 2004, J OBJECT TECHNOLOGY, V3
   BRIAND L, 2000, ADV COMPUTERS, V20
   Briand L., 2000, J SYSTEMS SOFTWARE, V51
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Chang CK, 1998, P INT COMP SOFTW APP, P534, DOI 10.1109/CMPSAC.1998.716715
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   COPPICK JC, 1992, 1992 ACM COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P317, DOI 10.1145/131214.131254
   Darwin C., 1859, ORIGIN SPECIES MEANS
   DEALMEIDA MA, 1999, INT J SOFTWARE ENG K
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   GLOVER F, 1986, COMPUT OPER RES, V13, P533, DOI 10.1016/0305-0548(86)90048-1
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   HENDERSONSELLER.B, 1991, P INT C TECHN OBJ OR, P131
   Holland I.H., 1975, ADAPTATION NATURAL A
   Khoshgoftaar TM, 1998, COMPUTER, V31, P66, DOI 10.1109/2.666844
   Khoshgoftaar TM, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P82, DOI 10.1109/HASE.1998.731598
   KIRSOPP C, 2002, P 2002 C GEN EV COMP, P367
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Mao Y., 1998, IEEE AUT SOFTW ENG C
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   METROPOLIS N, 2005, J CHEM ANAL, V21, P1953
   Pedrycz W, 2005, J SYST SOFTWARE, V76, P277, DOI 10.1016/j.jss.2004.06.018
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   VIVANCO R, 2007, P IEEE INT C SOFTW M, P503
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Zuse Horst., 1997, A Framework of Software Measurement
NR 45
TC 13
Z9 14
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2009
VL 51
IS 9
BP 1365
EP 1376
DI 10.1016/j.infsof.2009.05.003
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 478BC
UT WOS:000268561700007
DA 2024-07-18
ER

PT J
AU Nicolás, J
   Toval, A
AF Nicolas, Joaquin
   Toval, Ambrosio
TI On the generation of requirements specifications from software
   engineering models: A systematic literature review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Specification generation from software engineering model; Textual
   requirements generation from software engineering model; Requirements
   document generation from software engineering model; Systematic
   literature review
AB System and software requirements documents play a crucial role in software engineering in that they must both communicate requirements to clients in an understandable manner and define requirements in precise detail for system developers. The benefits of both lists of textual requirements (usually written in natural language) and software engineering models (usually specified in graphical form) can be brought together by combining the two approaches in the specification of system and software requirements documents. If, moreover, textual requirements are generated from models in an automatic or closely monitored form, the effort of specifying those requirements is reduced and the completeness of the specification and the management of the requirements traceability are improved. This paper presents a systematic review of the literature related to the generation of textual requirements specifications from software engineering models. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Nicolas, Joaquin; Toval, Ambrosio] Univ Murcia, Dept Informat & Sistemas, Software Engn Res Grp, E-30071 Murcia, Spain.
C3 University of Murcia
RP Nicolás, J (corresponding author), Univ Murcia, Dept Informat & Sistemas, Software Engn Res Grp, Campus Espinardo, E-30071 Murcia, Spain.
EM jnr@um.es; atoval@um.es
RI Toval, Ambrosio/P-1180-2014; Nicolás Ros, Joaquín/C-6321-2015
OI Toval, Ambrosio/0000-0002-8273-5937; Nicolás Ros,
   Joaquín/0000-0003-1760-3804
FU CICYT (Science and Technology joint Committee); Spanish Ministry of
   Science and Technology [TIN2006-15175-C05-03]; Science and Technology
   regional ministry of the junta de Comunidades de Castilla-La Mancha
   [PAC08-0142-335]
FX Partially financed by the CICYT (Science and Technology joint
   Committee), Spanish Ministry of Science and Technology (DEDALO Project,
   TIN2006-15175-C05-03), and the Science and Technology regional ministry
   of the junta de Comunidades de Castilla-La Mancha (MELISA Project,
   PAC08-0142-335).
CR Alrajeh D., 2006, INT WORKSH SCEN STAT
   [Anonymous], 1998, COMMUNICATIONS KOREA
   [Anonymous], 2005, Just enough requirements management: where software development meets marketing
   ANTON AI, 1998, 20 INT C SOFTW ENG I
   ARLOW J, 1998, SPRINGER LNCS, V1618
   ARLOW J., 2004, ENTERPRISE PATTERNS
   BERENBACH B, 2003, 11 INT C REQ ENG RE
   BERENBACH B, 2004, COMP 19 C OO PROGR S
   BIOLCHINI J, 2005, TRES67905 COPPE UFRJ
   Buhne S, 2006, SOFTWARE PRODUCT LIN, P161
   BURKE D, 2005, LOGICAL ASPECTS COMP
   Cabral G, 2008, ELECTRON NOTES THEOR, V195, P171, DOI 10.1016/j.entcs.2007.08.032
   Cheng B.H.C., 2007, Future of Software Engineering. IEEE
   *CMMI, 2006, CAP MAT MOD INT V 1
   Cox K, 2005, INFORM SOFTWARE TECH, V47, P319, DOI 10.1016/j.infsof.2004.09.002
   DANIELS J, 2005, INCOSE 15 ANN INT S
   DJEBBI O, 2007, 19 INT C ADV INF SYS
   DJEBBI O, 2007, AS PAC SOFTW ENG C A
   Djebbi O, 2007, INT REQUIR ENG CONF, P301, DOI 10.1109/RE.2007.29
   Eriksson H, 2007, INT J HUM-COMPUT ST, V65, P624, DOI 10.1016/j.ijhcs.2007.03.008
   FINKELSTEIN A, 2000, INF SYS PUBL ADM LAW
   Firesmith D, 2005, J OBJECT TECHNOL, V4, P27, DOI 10.5381/jot.2005.4.1.c3
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   GOLDSMITH RF, 2004, DISCOVERING REAL BUS
   HEIN A, 2000, DTSCH SOFTWARE PRODU
   *ITEA OFF, 2004, ITEA TECHN ROADM SOF
   Kang K. C., 1990, Technical Report
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   LAMSWEERDE A, 2004, 12 REQ ENG C 2004 RE
   LAVOIE B, 1996, 8 INT WORKSH NAT LAN
   LETIER E, 2002, 10 S FDN SOFTW ENG 2
   MAIDEN N, 2005, 27 INT C SOFTW ENG I
   MAIDEN N, 2007, SOCIAL MODELING REQU
   MAIDEN N, 1998, 3 INT C REQ ENG ICRE
   MAIDEN N, 2007, 15 INT REQ ENG C RE
   Maiden NAM, 2005, REQUIR ENG, V10, P276, DOI 10.1007/s00766-005-0010-9
   MAVIN A, 2003, 11 INT C REQ ENG RE
   Meziane F, 2008, REQUIR ENG, V13, P1, DOI [10.1007/s00766-007-0054-0, 10.1007/S00766-007-0054-0]
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   PROBASCO L, 1999, COMBINING SOFTWARE R
   Rabiser R, 2007, INT REQUIR ENG CONF, P367, DOI 10.1109/RE.2007.26
   REGNELL B, 2004, 10 ANN WORKSH REQ EN
   Robertson S., 2006, Mastering the Requirements Process
   SCHLICK M, 2000, WORKSH KNOWL BAS SYS
   SMITH SL, 1982, C HUM FACT COMP SYS
   Sommerville I., 2004, Software Engineering
   TURETKEN O, 2004, 1 C PRINC SOFTW ENG
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   YU E, 1995, 3 INT C COOP INF SYS
   Zachos K, 2005, IEEE SOFTWARE, V22, P89, DOI 10.1109/MS.2005.134
NR 51
TC 64
Z9 65
U1 3
U2 28
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2009
VL 51
IS 9
BP 1291
EP 1307
DI 10.1016/j.infsof.2009.04.001
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 478BC
UT WOS:000268561700001
DA 2024-07-18
ER

PT J
AU Briand, LC
   Labiche, Y
   He, S
AF Briand, L. C.
   Labiche, Y.
   He, S.
TI Automating regression test selection based on UML designs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Regression testing; Test selection; Object-oriented software
   engineering; UML
AB This paper presents a methodology and tool to support test selection from regression test suites based on change analysis in object-oriented designs. We assume that designs are represented using the Unified Modeling Language (UML) 2.0 and we propose a formal mapping between design changes and a classification of regression test cases into three categories: Reusable, Retestable, and Obsolete. We provide evidence of the feasibility of the methodology and its usefulness by using our prototype tool on an industrial case study and two student projects. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Briand, L. C.] Simula Res Lab, Lysaker, Norway.
   [Labiche, Y.; He, S.] Carleton Univ, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
   [Briand, L. C.] Univ Oslo, Lysaker, Norway.
C3 Carleton University; University of Oslo
RP Briand, LC (corresponding author), Simula Res Lab, POB 134, Lysaker, Norway.
EM briand@simula.no; labiche@sce.carleton.ca; siyuan@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
FU Canada Research Chair
FX This project was supported in part by a Canada Research Chair. We would
   like to thank Gregg Rothermel for helpful discussions on the evaluation
   framework.
CR [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 2001, DESIGN CONTRACT EXAM
   Bell D, 2004, UMLS SEQUENCE DIAGRA
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   BRIAND LC, 2002, P IEEE ICSM IN PRESS
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Chen Y., 2002, P C CTR ADV STUD COL
   Chen Y, 2007, FIFTEENTH COLOR IMAGING CONFERENCE: COLOR SCIENCE AND ENGINEERING SYSTEMS, TECHNOLOGIES, AND APPLICATIONS, FINAL PROGRAM AND PROCEEDINGS, P54
   Coleman Derek., 1994, OBJECT ORIENTED DEV
   DENG D, 2004, P INT S MULT SOFTW E
   Douglass B.P., 2004, REAL TIME UML, V3rd
   Harrold MJ, 1999, J SYST SOFTWARE, V47, P173, DOI 10.1016/S0164-1212(99)00037-0
   HARROLD MJ, 2001, P ACM C OBJ OR PROGR
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Leung H. K. N., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), P60, DOI 10.1109/ICSM.1989.65194
   LEUNG HKN, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P201, DOI 10.1109/ICSM.1991.160330
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Muccini H, 2005, P INT COMP SOFTW APP, P189
   MUCCINI H, 2005, P ICSE WORKSH ARCH D
   OMG, 2003, Tech. rep. ptc/03-08-02
   Pender T., 2003, UML BIBLE
   PILSKALNS O, 2006, P IEEE INT C SOFTW M
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Rothermel G, 2000, SOFTW TEST VERIF REL, V10, P77, DOI 10.1002/1099-1689(200006)10:2<77::AID-STVR197>3.0.CO;2-E
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   von Mayrhauser A, 1999, J SOFTW MAINT-RES PR, V11, P93, DOI 10.1002/(SICI)1096-908X(199903/04)11:2<93::AID-SMR188>3.0.CO;2-5
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Ye W, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P133, DOI 10.1109/CSMR.2003.1192420
   2005, IBM RATIONAL RATIONA
NR 33
TC 65
Z9 73
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2009
VL 51
IS 1
SI SI
BP 16
EP 30
DI 10.1016/j.infsof.2008.09.010
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 389FU
UT WOS:000262077500004
DA 2024-07-18
ER

PT J
AU Cotroneo, D
   di Flora, C
   Graziano, A
   Russo, S
AF Cotroneo, Domenico
   di Flora, Cristiano
   Graziano, Almerindo
   Russo, Stefano
TI Securing services in nomadic computing environments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE service oriented architectures; security; nomadic computing
AB This work addresses the existing research gap regarding the security of service oriented architectures and their integration in the context of nomadic computing. The state of the art of Service Oriented Architectures (SOAs) is thoroughly investigated to understand what secure service provision means for different SOAs and whether an established notion of secure SOA existed. Based on the analysis of existing SOAs, we define a set of requirements for securing services among different nomadic computing domains. Such requirements concern the security of service registration and that of the discovery and delivery phases. The surveyed SOAs are then evaluated in the light of the defined requirements, revealing interesting observations about how current SOAs address security issues. The second part of this work addresses the research issue of achieving secure service provision in a nomadic computing environment characterized by a number of heterogeneous service oriented architectures. A solution is presented in the form of an architectural model, named Secure Nomadic Computing Architecture. The model relies on a novel three-phase discovery-delivery protocol which allows the enforcement of a number of security requirements, identified as a result of the first part of the work. Finally, we present an exemplary implementation of the proposed architectural model developed within the context of a distributed management information system for the discovery of digital educational content. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Cotroneo, Domenico; Russo, Stefano] Univ Naples Federico II, Dipartimento Informat & Sistemist, I-80125 Naples, Italy.
   [di Flora, Cristiano] Nokia Res Ctr, Smart Space Applicat Platform Team, Tampere, Finland.
   [Graziano, Almerindo] Sheffield Hallam Univ, Sheffield S1 1WB, S Yorkshire, England.
C3 University of Naples Federico II; Nokia Corporation; Nokia Finland;
   Siemens AG; Nokia Siemens Networks; Sheffield Hallam University
RP Cotroneo, D (corresponding author), Univ Naples Federico II, Dipartimento Informat & Sistemist, Via Claudio 21, I-80125 Naples, Italy.
EM cotroneo@unina.it; cristiano.diflora@nokia.com; a.graziano@shu.ac.uk;
   sterusso@unina.it
RI Russo, Stefano/H-7723-2013
OI Russo, Stefano/0000-0002-8747-3446
CR Adjie-Winoto W, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P186, DOI 10.1145/319344.319164
   ALTMAN JE, 2003, PKI SECURITY JXTA OV
   [Anonymous], 2002, ACM C COMP COMM SEC
   Bromberg YD, 2005, LECT NOTES COMPUT SC, V3790, P164
   BURNSIDE M, 2002, P S APPL COMP SAC 02
   BUTLER MH, 2002, HPL200289
   CARLOS A, 2006, MPAC 06, P10
   Carminati B, 2005, IEEE SECUR PRIV, V3, P14, DOI 10.1109/MSP.2005.121
   Covington MJ, 2002, 18TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P249, DOI 10.1109/CSAC.2002.1176296
   DAVID P, 2002, EUROCRYPT 02, P149
   ELLISON C, 2003, DEVICE SECURITY 1 SE
   Grace P, 2003, LECT NOTES COMPUT SC, V2888, P1170
   GRAZIANO A, 2002, P 14 INT C SOFTW ENG, P103
   GUTTMAN E, 1999, 2608 IETF RFCC
   Hodes TD, 2002, WIREL NETW, V8, P213, DOI 10.1023/A:1013772027164
   HOWES T, 1998, RFC245 IETF
   JERONIMO M, 2004, UPNP DESIGN EXAMPLE
   Kagal L, 2002, WIREL NETW, V8, P619, DOI 10.1023/A:1020385804671
   Mavrakis N, 2003, IEEE POTENTIALS, V22, P9, DOI 10.1109/MP.2003.1238687
   Miller MS, 2003, LECT NOTES COMPUT SC, V2896, P224
   MINAMI K, 2005, PERVASIVE MOB COMPUT, V1, P123
   RAMAN S, 2003, P 200O ACM S APPL CO
   Raverdy P.-G., 2006, MOBIQUITOUS06, P1
   RAVERDY PG, 2006, P 7 INT C MOB DAT MA, P3
   *S I G BLU, 2001, SPEC BLU SYST COR PR
   *SAL CONS, 2000, SAL ARCH SPEC VERS 2
   *TEAHA, 2005, P 21 IEEE S REL DIST
   TRAVERSAT B, 2003, PROJECT JXTA 2 0 SUP
   VETTORELLO M, 2001, P WORKSH AD HOC COMM
   WALDO J, JINI SPECIFICATION
   *WORLD WID WEB CON, 2003, COMP CAP PREF PROF C
   ZHU F, 2003, P 200O IEEE ANN C PE
   [No title captured]
   2004, COMMON OBJECT REQUES
NR 34
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2008
VL 50
IS 9-10
BP 924
EP 947
DI 10.1016/j.infsof.2007.08.002
PG 24
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 324PG
UT WOS:000257529900007
DA 2024-07-18
ER

PT J
AU Yu, LG
AF Yu, Liguo
TI Self-organization process in open-source software: An empirical study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software evolution; self-organization; empirical study; open-source
   software
ID MAINTAINABILITY
AB Software systems must continually evolve to adapt to new functional requirements or quality requirements to remain competitive in the marketplace. However, different software systems follow different strategies to evolve, affecting both the release plan and the quality of these systems. In this paper, software evolution is considered as a self-organization process and the difference between closed-source software and open-source software is discussed in terms of self-organization. In particular, an empirical study of the evolution of Linux from version 2.4.0 to version 2.6.13 is reported. The study shows how open-source software systems self-organize to adapt to functional requirements and quality requirements. (C) 2007 Elsevier B.V. All rights reserved.
C1 Indiana Univ, Dept Informat & Comp Sci, South Bend, IN 46615 USA.
C3 Indiana University System; Indiana University South Bend
RP Yu, LG (corresponding author), Indiana Univ, Dept Informat & Comp Sci, 1700 Mishawaka Ave,POB 7111, South Bend, IN 46615 USA.
EM ligyu@iusb.edu
CR Anderson PW, 1996, NATURE, V383, P772, DOI 10.1038/383772b0
   [Anonymous], BIOLOGY
   [Anonymous], 1977, Statistical concepts and methods
   Chen K, 2004, EMPIR SOFTW ENG, V9, P197, DOI 10.1023/B:EMSE.0000027779.70556.d0
   CONRAD M, 1988, HIGH EVOLVABILITY DY, P33
   Cook S, 2005, IEEE INTERNATIONAL WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P17, DOI 10.1109/IWSE.2005.2
   Cook S., 2000, Software Evolution and Software Evolvability
   FORRESTER L, 1961, IND DYNAMICS PEGASUS
   GEISSER S, 1980, GROWTH CURVE ANAL HD
   Godfrey Michael, 2001, P INT WORKSH PRINC S, P103, DOI [10.1145/602461.602482, DOI 10.1145/602461.602482]
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Jensen C, 2005, LECT NOTES COMPUT SC, V3840, P449
   Koch S., 2005, Proceedings of the First International Conference on Open Source Systems, P148
   Landauer C, 2005, IEEE INTERNATIONAL WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P29, DOI 10.1109/IWSE.2005.12
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   LU L, 2005, P 4 INT S EMP SOFTW, P287
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nakakoji Kumiyo, 2002, P INT WORKSHOP PRINC, P76, DOI DOI 10.1145/512035.512055
   *OP SOURC IN, 1997, OP SOURC DEF
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Rawlings J. O., 1998, APPL REGRESSION ANAL
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Samoladas I, 2004, COMMUN ACM, V47, P83, DOI 10.1145/1022594.1022598
   Schach S. R., 2002, IEE Proceedings-Software, V149, P18, DOI 10.1049/ip-sen:20020198
   Schach SR, 2003, SOFTWARE QUAL J, V11, P211, DOI 10.1023/A:1025114726917
   STEWART KJ, 2005, ACM SIGSOFT SOFTWARE, V30, P1
   YU L, 2000, P 2 INT IEEE WORKSH, P82
   Yu LG, 2004, IEEE T SOFTWARE ENG, V30, P694, DOI 10.1109/TSE.2004.58
   Yu LG, 2006, J SOFTW MAINT EVOL-R, V18, P311, DOI 10.1002/smr.335
NR 30
TC 12
Z9 15
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2008
VL 50
IS 5
BP 361
EP 374
DI 10.1016/j.infsof.2007.02.018
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 290WJ
UT WOS:000255153200001
DA 2024-07-18
ER

PT J
AU Tan, ZJ
   Zhang, Z
   Wang, W
   Shi, B
AF Tan, Zijing
   Zhang, Zijun
   Wang, Wei
   Shi, Baile
TI Consistent data for inconsistent XML document
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE inconsistent; XML; repair
AB XML document may contain inconsistencies that violate predefined integrity constraints, which causes the data inconsistency problern. In this paper, we consider how to get the consistent data from an inconsistent XML document. There are two basic concepts for this problem: Repair is the data consistent with the integrity constraints, and also minimally differs from tile original one. Consistent data is the data common for every possible repair. First we give a general constraint model for XML, which can express tile commonly discussed integrity constraints, including functional dependencies, keys and multivalued dependencies. Next we provide a repair framework for inconsistent XML document with three basic update operations: node insertion, node deletion and node value modification. Following this approach, we introduce the concept of repair for inconsistent XML document, discuss the chase method to generate repairs, and prove some important properties of the chase. Finally we give a method to obtain tile greatest lower bound of all possible repairs, which is sufficient for consistent data. We also implement prototypes Of Our method, and evaluate our framework and algorithms in the experiment. (c) 2006 Elsevier B.V. All rights reserved.
C1 Fudan Univ, Dept Comp & Informat Technol, Shanghai 200433, Peoples R China.
C3 Fudan University
RP Tan, ZJ (corresponding author), Fudan Univ, Dept Comp & Informat Technol, Shanghai 200433, Peoples R China.
EM zjtan@fudan.edu.cn; 0272415@fudan.edu.cn; weiwangl@fudan.edu.cn;
   bshi@fudan.edu.cn
RI WANG, HUIYUAN/IXX-2427-2023
CR ABITEBOUL S, 2001, PODS, P35
   Abiteboul Serge, 2004, P 23 ACM SIGACT SIGM, P35, DOI [10.1145/1055558.1055564, DOI 10.1145/1055558.1055564]
   [Anonymous], 2005, PODS
   Arenas M, 2004, ACM T DATABASE SYST, V29, P195, DOI 10.1145/974750.974757
   Arenas M, 2003, THEOR PRACT LOG PROG, V3, P393, DOI 10.1017/S1471068403001832
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Arenas M., 2004, P 23 ACM SIGMOD SIGA, P229
   Arenas Marcelo., 2002, P 21 ACM SIGACT SIGM, P259
   Arenas Marcelo., 2005, PODS, P13
   Bohannon P., 2005, SIGMOD, P143
   BRAVO L, 2003, P 18 INT JOINT C ART, P10
   Buneman P, 2002, LECT NOTES COMPUT SC, V2397, P133
   Buneman Peter., 2001, P 10 INT WORLD WIDE, P201
   Chomicki J, 2005, INFORM COMPUT, V197, P90, DOI 10.1016/j.ic.2004.04.007
   Fagin R, 2005, ACM T DATABASE SYST, V30, P174, DOI 10.1145/1061318.1061323
   Flesca S, 2005, LECT NOTES COMPUT SC, V3806, P175
   Flesca S, 2003, LECT NOTES COMPUT SC, V2824, P238
   Greco G, 2003, IEEE T KNOWL DATA EN, V15, P1389, DOI 10.1109/TKDE.2003.1245280
   GRECO G, 2003, EFFECTIVE DATBASES T, P318
   Ng W, 2003, LECT NOTES COMPUT SC, V2736, P244
   Tan ZJ, 2006, LECT NOTES COMPUT SC, V4092, P379
   Tan ZJ, 2006, FIRST INTERNATIONAL MULTI-SYMPOSIUMS ON COMPUTER AND COMPUTATIONAL SCIENCES (IMSCCS 2006), PROCEEDINGS, VOL 2, P488, DOI 10.1109/IMSCCS.2006.223
   Vincent MW, 2004, ACM T DATABASE SYST, V29, P445, DOI 10.1145/1016028.1016029
   Vincent MW, 2003, LECT NOTES COMPUT SC, V2681, P14
   Wijsen J, 2005, ACM T DATABASE SYST, V30, P722, DOI 10.1145/1093382.1093385
   Wijsen J, 2003, LECT NOTES COMPUT SC, V2572, P378
NR 26
TC 4
Z9 6
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2007
VL 49
IS 9-10
BP 947
EP 959
DI 10.1016/j.infsof.2006.10.004
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 199PQ
UT WOS:000248708100001
DA 2024-07-18
ER

PT J
AU Morgenshtern, O
   Raz, T
   Dvir, D
AF Morgenshtern, Ofer
   Raz, Tzvi
   Dvir, Dov
TI Factors affecting duration and effort estimation errors in software
   development projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE duration and effort estimation errors; software development projects
ID COST-ESTIMATION; MODELS; DECOMPOSITION; PERSPECTIVE; ACCURACY
AB The purpose of this research was to fill a gap in the literature pertaining to the influence of project uncertainty and managerial factors on duration and effort estimation errors. Four dimensions were considered: project uncertainty, use of estimation development processes, use of estimation management processes, and the estimator's experience. Correlation analysis and linear regression models were used to test the model and the hypotheses on the relations between the four dimensions and estimation errors, using a sample of 43 internal software development projects executed during the year 2002 in the IT division of a large government organization in Israel. Our findings indicate that, in general, a high level of uncertainty is associated with higher effort estimation errors while increased use of estimation development processes and estimation management processes, as well as greater estimator experience, are correlated with lower duration estimation errors. From a practical perspective, the specific findings of this study can be used as guidelines for better duration and effort estimation. Accounting for project uncertainty while managing expectations regarding estimate accuracy; investing more in detailed planning and selecting estimators based on the number of projects they have managed rather than their cumulative experience in project management, may reduce estimation errors. (c) 2006 Elsevier B.V. All rights reserved.
C1 Ben Gurion Univ Negev, Sch Management, IL-84105 Beer Sheva, Israel.
   Tel Aviv Univ, Fac Management, IL-69978 Tel Aviv, Israel.
C3 Ben Gurion University; Tel Aviv University
RP Dvir, D (corresponding author), Ben Gurion Univ Negev, Sch Management, POB 653, IL-84105 Beer Sheva, Israel.
EM dvird@som.bgu.ac.il
RI Dvir, Dov/X-7299-2019; DVIR, DOV/F-1125-2012
CR Albrecht A.J., 1979, Em Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, P83
   [Anonymous], 1980, MEASURING ASSESSING
   Boehm BW., 1981, Software Engineering Economics
   BROOKS F.P., 1982, MYTHICAL MAN MONTH E
   BUEHLER R, 1994, J PERS SOC PSYCHOL, V67, P366, DOI 10.1037/0022-3514.67.3.366
   BUSBY J., 1999, INT J PROJ MANAG, V17, P293
   CHEN Z, 2005, P WORKSH PRED MOD SO
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   EWUSIMENSAH K, 1991, MIS QUART, V15, P67, DOI 10.2307/249437
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Glass R.L., 1998, SOFTWARE RUNAWAYS
   GOODMAN PA, 1992, INFORM SOFTWARE TECH, V34, P379, DOI 10.1016/0950-5849(92)90012-E
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   HENRION M, 1993, ORGAN BEHAV HUM DEC, V55, P207, DOI 10.1006/obhd.1993.1031
   Hill J., 2000, International Journal of Project Management, V18, P13, DOI 10.1016/S0263-7863(98)00062-3
   HINN J, 1991, P 13 INT C SOFTW ENG, P276
   HORA SC, 1993, J BEHAV DECIS MAKING, V6, P133, DOI 10.1002/bdm.3960060205
   HUGHES MW, 1986, IND ENG          APR, P14
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   LEDERER AL, 1990, MIS QUART, V14, P159, DOI 10.2307/248774
   Lederer AL, 1998, IEEE T SOFTWARE ENG, V24, P137, DOI 10.1109/32.666827
   LEDERER AL, 1995, J SYST SOFTWARE, V31, P125, DOI 10.1016/0164-1212(94)00092-2
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   PETERS TJ, 1982, SEARCH EXCELLENCE AM
   Raz T., 1998, Project Management Journal, V29, P17, DOI [10.1177/875697289802900403, DOI 10.1177/875697289802900403]
   WIECZOREK I, 2002, P 8 IEEE S SOFTW MET
   YEATES D, 1986, SYSTEMS PROJECT MANA
NR 31
TC 37
Z9 47
U1 4
U2 19
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2007
VL 49
IS 8
BP 827
EP 837
DI 10.1016/j.infsof.2006.09.006
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 187JR
UT WOS:000247844300002
DA 2024-07-18
ER

PT J
AU Allison, I
   Merali, Y
AF Allison, I.
   Merali, Y.
TI Software process improvement as emergent change: A structurational
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software process improvement; software quality; software package
   development; structuration theory
ID INFORMATION-SYSTEMS; ORGANIZATIONS; QUALITY; FIELD
AB This paper presents a framework that draws oil Structuration theory and dialectical hermeneutics to explicate file dynamics of software process improvement (SPI) in a packaged software organisation. Adding to the growing body of qualitative research, this approach overcomes some of the criticisms of interpretive studies, especially the need for the research to be reflexive in nature.
   Our longitudinal analysis of the case study shows SPI to be an emergent rather than a deterministic activity: the design and action of the change process are shown to be intertwined and shaped by their context. This understanding is based upon a structurational perspective that highlights how the unfolding/realisation of the process improvement (intent) are enabled and constrained by their context. The work builds on the recognition that the improvements can be understood from an organisational learning perspective. Fresh insights to the improvement process are developed by recognising the role of the individual to influence the improvement through facilitating or resisting the changes. The understanding gained here can be applied by organisations to enable them to improve the effectiveness of their SPI programmes, and so improve the quality of their software. (C) 2007 Elsevier B.V. All rights reserved.
C1 Nottingham Trent Univ, Sch Comp & Informat, Nottingham NG11 8NS, England.
   Univ Warwick, Warwick Business Sch, Coventry CV4 7AL, W Midlands, England.
C3 Nottingham Trent University; University of Warwick
RP Allison, I (corresponding author), Nottingham Trent Univ, Sch Comp & Informat, Nottingham NG11 8NS, England.
EM ian.allison@ntu.ac.uk
OI Merali, Yasmin/0000-0002-0718-272X
CR AAEN I, 2002, IMPROVING SOFTWARE O, P23
   ALLISON I, 2003, P 8 UKAIS C U WARW 9
   [Anonymous], COMMUN IIMA
   [Anonymous], 1993, THE GIDDENS READER
   [Anonymous], QUALITATIVE DATA ANA
   [Anonymous], INFORM SYSTEMS J
   [Anonymous], 1989, PARTICIPANT OBSERVAT
   [Anonymous], 1996, IDEAL USERS GUIDE SO
   Bach J.:., 1994, American Programmer, V7, P13
   Benbasat I, 1999, MIS QUART, V23, P3, DOI 10.2307/249403
   BOLLINGER TB, 1991, IEEE SOFTWARE, V8, P25, DOI 10.1109/52.300034
   Ciborra C., 1999, RETHINKING MANAGEMEN, P136
   Conradi R, 2002, IEEE SOFTWARE, V19, P92, DOI 10.1109/MS.2002.1020295
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fincham R, 2002, BRIT J MANAGE, V13, P1, DOI 10.1111/1467-8551.00219
   Giddens A., 1976, NEW RULES SOCIOLOGIC
   Hansen B, 2004, INT J INFORM MANAGE, V24, P457, DOI 10.1016/j.ijinfomgt.2004.08.007
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   Holstein J.A., 1997, QUALITATIVE RES THEO, P113
   Hosking D.M., 1992, ORG CHANGE INNOVATIO
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Mathiassen L., 1998, REFLECTIVE SYSTEMS D
   Nandhakumar J, 1997, INFORM SYST J, V7, P109, DOI 10.1046/j.1365-2575.1997.00013.x
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Pettigrew A., 1997, Scandinavian Journal of Management, V13, P337, DOI DOI 10.1016/S0956-5221(97)00020-1
   Pettigrew AM, 1990, ORGAN SCI, V1, P267, DOI 10.1287/orsc.1.3.267
   Ravichandran T, 2000, MIS QUART, V24, P381, DOI 10.2307/3250967
   Senge PM, 2000, BREAKING THE CODE OF CHANGE, P59
   SWANSON EB, 1994, MANAGE SCI, V40, P1069, DOI 10.1287/mnsc.40.9.1069
   THOMPSON K, 1993, INFORM SOFTWARE TECH, V35, P331, DOI 10.1016/0950-5849(93)90003-L
   Truex D., 2000, Accounting, Management and Information Technologies, V10, P53, DOI 10.1016/S0959-8022(99)00009-0
   Truex DP, 1999, COMMUN ACM, V42, P117, DOI 10.1145/310930.310984
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   WEICKKE, 1995, SENSEMAKING ORG
NR 36
TC 33
Z9 34
U1 1
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2007
VL 49
IS 6
BP 668
EP 681
DI 10.1016/j.infsof.2007.02.003
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 169NU
UT WOS:000246599700011
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Kang, Y
   Park, C
   Wu, CS
AF Kang, Yoohoon
   Park, Chanjin
   Wu, Chisu
TI Reverse-engineering 1-n associations from Java bytecode using alias
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE reverse-engineering; class diagram; program understanding; alias
   analysis; static program analysis; type inference
AB 1-n associations are design language constructs that represent one-to-many structural invariants for objects To implement 1-n associations, container classes, such as Vector in Java, are frequently used Lis programming language constructs. Many of the current CASE tools fail to reverse-engineer 1-n associations that have been implemented via containers because sophisticated analyses are required to infier the type of elements collected in containers. This paper presents a new approach to reverse-engineering 1-n associations from Java bytecode based on alias analysis. In our approach, 1-n associations are inferred by examining the abstract heap structure that is constructed by applying an alias analysis on inter-variable relationships extracted from assignments and method invocations of containers. Our approach handles container alias problem that has been neglected by previous techniques by approximating the relationships between containers and elements at the object level rather than analyzing only the bytecode. Our prototype implementation was used with a suite of well-known Java programs. Most of the 1-n associations were successfully reverse-engineered from hundreds of class files in less than 1 minute. (c) 2006 Elsevier B.V. All rights reserved.
C1 Univ Seoul, Sch Comp Sci & Engn, Seoul, South Korea.
C3 University of Seoul
RP Kang, Y (corresponding author), Univ Seoul, Sch Comp Sci & Engn, Seoul, South Korea.
EM rmaker@selab.srm.ac.kr; cjpark@selab.snu.ac.kr; wuchisu@selab.snu.ac.kr
CR Andersen L. O., 1994, Ph.D. thesis
   Gamma Erich., 1994, DESIGN PATTERNS
   Gosling J., 2000, The Java Language Specification
   GUEHENEUC Y, 2004, P 19 ANN  C OBJ OR P
   Jackson D, 2001, IEEE T SOFTWARE ENG, V27, P156, DOI 10.1109/32.908960
   JACKSON D, 2000, FUTURE SOFTWARE ENG, P1
   Kollmann R, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/WCRE.2001.957812
   KOLLMANN R, 2002, P 9 WORK C REV ENG W
   Kramer C., 1996, P 3 WORK C REV ENG W
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Niere J., 2002, P 24 INT C SOFTW ENG
   PARK C, 2004, P 11 WORK C REV ENG
   RUMBAUGH J, 2000, ESSAYS PROGRAMMING M
   Steensgaard Bjarne., 1996, POINTS TO ANAL ALMOS, P32
   SUNDARESAN V, 2000, P 15 ANN C OBJ OR PR
   Tonella P, 2001, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSM.2001.972750
   [No title captured]
NR 17
TC 2
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2007
VL 49
IS 2
BP 81
EP 98
DI 10.1016/j.infsof.2006.02.004
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 118EY
UT WOS:000242926300001
DA 2024-07-18
ER

PT J
AU Sowe, S
   Stamelos, L
   Angelis, L
AF Sowe, Sulayman
   Stamelos, Loannis
   Angelis, Lefteris
TI Identifying knowledge brokers that yield software engineering knowledge
   in OSS projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE open source software projects; debian; mailing lists; mundane
   activities; social networks; visualization
AB Much research on open source software development concentrates on developer lists and other software repositories to investigate what motivates professional software developers to participate in open source software projects. Little attention has been paid to individuals who spend valuable time in lists helping participants on some mundane yet vital project activities. Using three Debian lists as a case study we investigate the impact of knowledge brokers and their associated activities in open source projects. Social network analysis was used to visualize how participants are affiliated with the lists. The network topology reveals substantial community participation. The consequence of collaborating in mundane activities for the success of open source software projects is discussed. The direct beneficiaries of this research are in the identification of knowledge experts in open source software projects. (C) 2006 Elsevier B.V. All rights reserved.
C1 Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Sowe, S (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM sksowe@csd.auth.gr
RI Stamelos, Ioannis/AAK-7207-2020; Sowe, Dr. Sulayman K/C-1737-2015
OI Sowe, Dr. Sulayman K/0000-0002-8605-2009
CR ADELSTEIN T, DESKTOP LINUX NEW LI
   [Anonymous], P 2004 ACM C COMP SU
   [Anonymous], 5 EUR C ORG KNOWL LE
   Barabási AL, 2003, SCI AM, V288, P60, DOI 10.1038/scientificamerican0503-60
   BARAHONA JM, 2004, P 4 WORKSH OP SOURC
   BARBASI A, 2002, LINKED NEW SCI NETW
   BONACCORSI A, WHY OPEN SOURCE CAN
   Borgatti Stephen P., 2002, UCINET for Windows
   FELLER J, 2005, SOGSOFT SOFTWARE ENG, V30, P1
   FITZGERALD B, 2004, IT SYSTEMS PERSPECTI, V10, P92
   GHOSH RA, 2003, FIRSTMONDAY, V8
   GIACOLETTO E, 2003, AUTOMATIC EXPANSION, P785
   Gloor P.A., 2003, Proceedings of the twelfth international conference on Information and knowledge management, CIKM '03, P56, DOI DOI 10.1145/956863.956875
   HANNEMAN R, 2002, UCINET WINDOWS SOFTW
   HERTEL G, MOTIVATION SOFTWARE
   Jones Q, 2004, INFORM SYST RES, V15, P194, DOI 10.1287/isre.1040.0023
   KEITH K, 10 WORST ENG PITFALL
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   LANZARA FG, 2003, 19 EGOS C COP
   Lerner J, 2001, EUR ECON REV, V45, P819, DOI 10.1016/S0014-2921(01)00124-6
   Madey G, 2005, FREE/OPEN SOURCE SOFTWARE DEVELOPMENT, P203
   Michlmayr M, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FREENIX TRACK 2004 USENIX ANNUAL TECHNICAL CONFERENCE, P93
   MOCKUS A, 2003, ACM T SOFTW ENG METH, V11, P1
   Mutton P, 2004, IEEE INFOR VIS, P35, DOI 10.1109/IV.2004.1320122
   NICHOLS MD, 2003, FIRSTMONDAY, V8
   RAYMOND SE, 1999, CATHEDRAL BAZAAR
   SOWE SK, 2005, MANAGING LEARNING VI, P290
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   XU J, 2005, IEEE P 38 HAW INT C, P195
   Zawinski J, MESSAGE THREADING
NR 31
TC 48
Z9 50
U1 0
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2006
VL 48
IS 11
BP 1025
EP 1033
DI 10.1016/j.infsof.2005.12.019
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 101CL
UT WOS:000241716400003
DA 2024-07-18
ER

PT J
AU Lv, T
   Yan, P
AF Lv, T
   Yan, P
TI Mapping DTDs to relational schemas with semantic constraints
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE XML; functional dependency; schema mapping; semantic constraints
ID MULTIVALUED DEPENDENCIES; XML
AB XML is becoming a prevalent format and standard for data exchange in many applications. With the increase of XML data, there is all urgent need to research some efficient methods to store and manage XML data. As relational databases are the primary choices for this purpose considering their data management power, it is necessary to research the problem of mapping XML schemas to relational schemas. The semantics of XML schemas are crucial to design, query, and store XML documents and functional dependencies are very important representations oils of semantic information of XML schemas. As DTDs are one of the most frequently used schemas for XML documents in these days, WC Will use DTDs as schemas of XML documents here. This paper proposes the concept and the formal definition of XML functional dependencies over DTDs. A method to map XML DTDs to relational schemas with constraints such as functional dependencies, domain constraints, choice constraints, reference constraints, and cardinality constraints over DTDs is given, which can preserve the structures of DTDs as well its the semantics implied by the above constraints over DTDs. The concepts and method of mapping DTDs to relational schemas presented in the paper can be extended to the field of XML Schema just with some modifications in related formal definitions. (c) 2005 Elsevier Ltd All rights, reserved.
C1 Xinjiang Univ, Coll Math & Syst Sci, Urumqi 830046, Peoples R China.
   Artillery Acad, Teaching & Res Sect Comp Sci, Hefei 230031, Peoples R China.
C3 Xinjiang University
RP Xinjiang Univ, Coll Math & Syst Sci, Urumqi 830046, Peoples R China.
EM lt0410@l63.com; yanp2002cn@163.com
CR Agichtein E, 2003, LECT NOTES COMPUT SC, V2814, P390
   AMERYAHIA S, 2004, GENERIC FLEXIBLE FRA
   [Anonymous], 2000, EXTENSIBLE MARKUP LA
   *ARB TEXT INC, 1998, W3C XML SPEC DTD
   Arenas M., 2002, Proceedings of the twenty-first ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems, PODS'02, P85, DOI [10.1145/543613, DOI 10.1145/543613]
   Bohannon P, 2003, PROC INT CONF DATA, P759, DOI 10.1109/ICDE.2003.1260859
   Bohannon P, 2002, PROC INT CONF DATA, P64, DOI 10.1109/ICDE.2002.994698
   CHEN Y, 2002, MSCIS0204 U PENNS
   CHOI B, 2002, P 5 INT WORKSH WEB D, P43
   Deutsch A, 1999, SIGMOD RECORD, VOL 28, NO 2 - JUNE 1999, P431, DOI 10.1145/304181.304220
   Fallside D.C., 2004, W3C recommendation, V16
   FLORESCU D, 1999, B TECHNICAL COMMITTE, P431
   Lee D, 2003, FR ART INT, V95, P1
   Lee ML, 2002, LECT NOTES COMPUT SC, V2287, P124
   Lu SY, 2003, LECT NOTES COMPUT SC, V2814, P366
   [吕腾 Lv Teng], 2004, [计算机研究与发展, Journal of Computer Research and Development], V41, P615
   Saxton LV, 2004, LECT NOTES COMPUT SC, V3129, P357
   SCHMIDT A, 2000, P INT WORKSH WEB DAT, P47
   Shanmugasundaram J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P302
   Vincent MW, 2003, LECT NOTES COMPUT SC, V2712, P4
   [Wang Qing 王庆], 2003, [软件学报, Journal of Software], V14, P1275
NR 21
TC 10
Z9 12
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2006
VL 48
IS 4
BP 245
EP 252
DI 10.1016/j.infsof.2005.05.001
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 027PP
UT WOS:000236427800003
DA 2024-07-18
ER

PT J
AU Mouchawrab, S
   Briand, LC
   Labiche, Y
AF Mouchawrab, S
   Briand, LC
   Labiche, Y
TI A measurement framework for object-oriented software testability
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID TEST ORDER
AB Testing is an expensive activity in the development process of any software system. Measuring and assessing the testability of software would help in planning testing activities and allocating required resources. More importantly, measuring software testability early in the development process, during analysis or design stages, can yield the highest payoff as design refactoring can be used to improve testability before the implementation starts.
   This paper presents a generic and extensible measurement framework for object-oriented software testability, which is based on a theory expressed as a set of operational hypotheses. We identify design attributes that have an impact on testability directly or indirectly, by having an impact on testing activities and sub-activities. We also describe the cause-effect relationships between these attributes and software testability based on thorough review of the literature and our own testing experience. Following the scientific method, we express them as operational hypotheses to be further tested. For each attribute, we provide a set of possible measures whose applicability largely depends on the level of details of the design documents and the testing techniques to be applied. The goal of this framework is twofold: (1) to provide structured guidance for practitioners trying to measure design testability, (2) to provide a theoretical framework for facilitating empirical research on testability. (c) 2005 Elsevier B.V. All rights reserved.
C1 Carleton Univ, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP Carleton Univ, Software Qual Engn Lab, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM briand@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
CR [Anonymous], 1997, APPL CASE BASED REAS
   [Anonymous], SOFTWARE ENG COMPUTA
   [Anonymous], PTC031014 OMG
   [Anonymous], P ICSE
   [Anonymous], 2001, DESIGN CONTRACT EXAM
   [Anonymous], 1991, 9126 ISOIEC
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   BACHE R, 1990, SOFTWARE ENG J, V5, P86, DOI 10.1049/sej.1990.0011
   Bashir I., 2000, Testing Object-Oriented Software : Life-Cycle Solutions, V1st
   Baudry B, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P54, DOI 10.1109/METRIC.2002.1011325
   BINDER RV, 1994, COMMUN ACM, V37, P87, DOI 10.1145/182987.184077
   BINDER RV, 1999, OBJECT TECHNOLOGY TE
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   BRIAND L, 1994, 3301 CSTR U MAR
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand L. C., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P88, DOI 10.1109/ICSM.1993.366952
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC, 2003, SOFTWARE PRACT EXPER, V33, P637, DOI 10.1002/spe.520
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Bruntink M, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P136
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Hitz M., 1995, PROC INT S APPL CORP
   *IEEE PRESS, 1990, 610121990 ANSIIEEE
   Jungmayr S, 2002, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2002.1167797
   KOLENCE KW, 1973, ACM SIGMETRICS PERFO, V2, P2, DOI DOI 10.1145/1041613.1041614
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Larman C., 2002, APPL UML PATTERNS, V2nd
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   MOUCHAWRAB S, SCE0505 CARL U
   OMG, 2003, Tech. rep. ptc/03-08-02
   Robson C., 2002, Real world research
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
NR 39
TC 38
Z9 43
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2005
VL 47
IS 15
BP 979
EP 997
DI 10.1016/j.infsof.2005.09.003
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 998MH
UT WOS:000234322400004
DA 2024-07-18
ER

PT J
AU Fecko, MA
   Lott, CM
AF Fecko, MA
   Lott, CM
TI XML-based requirements engineering for an electronic clearinghouse
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE GUI; message-processing; XML; business rules; requirements engineering
ID BUSINESS RULES
AB We present methods and tools to support XML-based requirements engineering for an electronic clearinghouse that connects trading partners in the telecommunications area. The original semi-structured requirements, locally known as business rules, were written as message specifications in a non-standardized and error-prone format using MS Word. To remedy the resulting software failures and faults, we first formalized the requirements by designing an W3C XML Schema for the precise definition of the requirements structure. The schema allows a highly structured representation of the essential information in eXtensible Markup Language (XML). Second, to offer the requirements engineers the ability to edit the XML documents in a friendly way while preserving their information structure, we developed a custom editor called XLEdit. Third, by developing a converter from MS Word to the target XML format, we helped the requirements engineers to migrate the existing business rules. Fourth, we developed translators from the structured requirements to schema languages, which enabled automated generation of message-validation code. The increase in customer satisfaction and clearinghouse-service efficiency are primary gains from the investment in the technology for structured requirements editing and validation. (c) 2005 Published by Elsevier B.V.
C1 Telcordia Technol Inc, Appl Res Area, Piscataway, NJ 08854 USA.
C3 Ericsson; Telcordia Technologies
RP Fecko, MA (corresponding author), Telcordia Technol Inc, Appl Res Area, 1 Telcordia Dr RRC-1L326, Piscataway, NJ 08854 USA.
EM mfecko@telcordia.com
CR *AC SIN COMP CTR, 2002, SCHEM XML STRUCT VAL
   *AP SOFTW FDN, 2002, AP XML PROJ
   AYERS D, 2002, SML APPL DEV MSXML 4
   BUDKOWSKI S, 1987, COMPUT NETWORKS ISDN, V14, P3, DOI 10.1016/0169-7552(87)90084-5
   Chen DJ, 2002, J SYST SOFTWARE, V61, P129, DOI 10.1016/S0164-1212(01)00108-X
   CUNNING SJ, 1998, P IEEE C WKSP ENG CO
   DAY NA, 2000, P IEEE INT C REQ ENG
   DODDS L, 2002, W3C SCHEMA NEEDS YOU
   Dromey RG, 2003, I C SOFTW ENG FORM M, P2, DOI 10.1109/SEFM.2003.1236202
   DUBOIS K, 2002, P IEEE JOINT INT REQ
   Durán A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P165, DOI 10.1109/ICRE.2002.1048519
   GREENSPAN SJ, 1986, INFORM SYST, V11, P9, DOI 10.1016/0306-4379(86)90020-7
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1427, P526, DOI 10.1007/BFb0028775
   HEITMEYER C, 1997, P IEEE INT S REQ ENG
   Holzner Steve., 2000, Inside XML, VFirst
   JACKSON M, 1995, PROC INT CONF SOFTW, P15, DOI 10.1145/225014.225016
   Kay Michael, 2001, XSLT Programmer's Reference
   LEVENSON NG, 1994, IEEE T SOFTWARE ENG, V20
   Liu S, 1998, IEEE T SOFTWARE ENG, V24, P24, DOI 10.1109/32.663996
   Nambiar U, 2002, IEEE INTERNET COMPUT, V6, P43, DOI 10.1109/MIC.2002.1020325
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   Niu JW, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P188
   Petropoulos M, 2002, COMPUT NETW, V39, P541, DOI 10.1016/S1389-1286(02)00218-9
   REDMOND WA, MIRCROSOFT
   ROBIE J, 1998, P W3C QUER LANG C QL
   Rosca D, 2001, P INT COMP SOFTW APP, P3, DOI 10.1109/CMPSAC.2001.960591
   *TELC TECHN INC, EXCH LINK EL CLEAR S
   THEES J, 1998, P INT WORKSH FDT EST, P187
   *UN CEFAST OASIS, EL BUS EXT MARK LANG
   *US FCC, 2003, WIR LOC NUMB PORT
   *W3C, 2002, IN PRES XQUER 1 0 XP
   WALMSLEY P, 2002, GOLDFARB DEFINITIVE
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zhang HX, 2001, PROC INT CONF SOFTW, P831, DOI 10.1109/ICSE.2001.919195
   [No title captured]
NR 35
TC 1
Z9 1
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT 1
PY 2005
VL 47
IS 13
BP 841
EP 858
DI 10.1016/j.infsof.2005.01.005
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 974GF
UT WOS:000232578600002
DA 2024-07-18
ER

PT J
AU Bahn, H
AF Bahn, H
TI Web cache management based on the expected cost of web objects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE world wide web; cache; caching; proxy; replacement algorithm
ID REPLACEMENT
AB With the recent explosion in usage of the World Wide Web, Web caching has become increasingly important. However, due to the non-uniform cost/size property of data objects in this environment, design of an efficient caching algorithm becomes an even more difficult problem compared to the traditional caching problems. In this paper, we propose the Least Expected Cost (LEC) replacement algorithm for Web caches that provides a simple and robust framework for the estimation of reference probability and fair evaluation of non-uniform Web objects. LEC evaluates a Web object based on its cost per unit size multiplied by the estimated reference probability of the object. This results in a normalized assessment of the contribution to the cost-savings ratio, leading to a fair replacement algorithm. We show that this normalization method finds optimal solution under some assumptions. Trace-driven simulations with actual Web cache logs show that LEC offers the performance of caches more than twice its size compared with other algorithms we considered. Nevertheless, it is simple, having no parameters to tune. We also show how the algorithm can be effectively implemented as a Web cache replacement module. (c) 2004 Elsevier B.V. All rights reserved.
C1 Ewha Womans Univ, Dept Comp Sci & Engn, Seoul 120750, South Korea.
C3 Ewha Womans University
RP Ewha Womans Univ, Dept Comp Sci & Engn, 11-1 Daehyun Dong, Seoul 120750, South Korea.
EM bahn@ewha.ac.kr
CR Abrams M., 1995, P 4 INT WORLD WID WE, P119
   Aggarwal C, 1999, IEEE T KNOWL DATA EN, V11, P94, DOI 10.1109/69.755618
   [Anonymous], 1999, P 2 WORKSH INT SERV
   Bahn H, 2002, COMPUTER, V35, P65, DOI 10.1109/MC.2002.1009170
   Bahn H, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS (USITS'99), P187
   Breslau L, 1999, IEEE INFOCOM SER, P126, DOI 10.1109/INFCOM.1999.749260
   Cao P, 1997, PROCEEDINGS OF THE USENIX SYMPOSIUM ON INTERNET TECHNOLOGIES AND SYSTEMS, P193
   Coffman Jr Edward G., 1973, Operating Systems Theory
   *DIG EQ CORP, DIG EQ CORP PROX CAC
   Hosseini-Khayat S, 2000, IEEE T COMPUT, V49, P769, DOI 10.1109/12.868024
   JIN S, 2000, P 20 INT C DISTR COM, P254
   JIN S, 2000, P 4 INT WEB CATCH CO
   KELLY T, 1999, P 4 INT WEB CACH WOR
   Lee D, 1999, PERFORMANCE EVALUATION REVIEW, SPECIAL ISSUE, VOL 27 NO 1, JUNE 1999, P134, DOI 10.1145/301464.301487
   NICLAUSSE N, 1998, P WORKSH INT SERV PE, P119
   *NLANR, NLANR PROX CACH TRAC
   ONEIL EJ, 1993, P ACM SIGMOD INT C M, P297
   Rizzo L, 2000, IEEE ACM T NETWORK, V8, P158, DOI 10.1109/90.842139
   Shim J, 1999, IEEE T KNOWL DATA EN, V11, P549, DOI 10.1109/69.790804
   Wooster RP, 1997, COMPUT NETWORKS ISDN, V29, P977, DOI 10.1016/S0169-7552(97)00041-X
   [No title captured]
NR 21
TC 3
Z9 5
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 15
PY 2005
VL 47
IS 9
BP 609
EP 621
DI 10.1016/j.infsof.2004.11.002
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 934GQ
UT WOS:000229695300003
DA 2024-07-18
ER

PT J
AU Hatton, L
AF Hatton, L
TI Embedded System Paranoia: a tool for testing embedded system arithmetic
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE embedded system paranoia; arithmetic implementation; arithmetic quality
AB The quality of arithmetic implementation is of concern to all who work with or depend on the results of numerical computations. Embedded systems have become enormously complicated and widespread in most if not all consumer devices in recent years so there is a clear need to measure the quality of the arithmetic in the same way that conventional systems have been measured for some time using programs such as the well-known paranoia. A new version of paranoia has been introduced specifically to extend the domain of testable systems to embedded control systems. This paper describes the development of ESP (Embedded System Paranoia) and gives example outputs and free download sites. The example outputs indicate that even today, the quality of arithmetic implementations cannot be taken for granted with numerous implementation problems being reported in those embedded environments tried so far. (c) 2004 Elsevier B.V. All rights reserved.
C1 Kingston Univ, Ctr Forens Software Engn, Kingston, ON KT1 1LQ, Canada.
RP Hatton, L (corresponding author), Kingston Univ, Ctr Forens Software Engn, Kingston, ON KT1 1LQ, Canada.
EM lesh@leshatton.org
CR [Anonymous], 1980, Software Manual for the Elementary Functions
   [Anonymous], ANSIIEEE754
   CODY WJ, 1988, ACM T MATH SOFTWARE, V14, P303, DOI 10.1145/50063.51907
   HATTON L, 1995, SOFTWARE MANUAL ELEM
   Hatton L, 1995, MCGRAW HILL INT SERI
   HATTON L, 2004, IN PRESS
   *IEEE, 1987, 854 ANSI IEEE
   *ISO, 1999, 9891999 ISO
   KAHAN WM, WHY JAVAS FLOATING P
   KAHAN WM, DOCUMENTATION HEADER
   MALCOLM MA, 1972, COMMUN ACM, V15, P949, DOI 10.1145/355606.361870
   Press W. H., 2002, Numerical Recipes in C: the Art of Scientific Computing, V2nd ed., DOI DOI 10.1119/1.14981
   SAYERS D, 1993, COMMUNICATION
   1999, SAFER C TOOLSET TOOL
NR 14
TC 3
Z9 3
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN 1
PY 2005
VL 47
IS 8
BP 555
EP 563
DI 10.1016/j.infsof.2004.10.005
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 921KR
UT WOS:000228763700005
DA 2024-07-18
ER

PT J
AU Baglietto, P
   Maresca, M
   Parodi, A
   Zingirian, N
AF Baglietto, P
   Maresca, M
   Parodi, A
   Zingirian, N
TI Stepwise deployment methodology of a service oriented architecture for
   business communities
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE business community; web services; technology deployment experience
AB This paper describes the deployment of a Service Oriented Architecture in the specific context of the 'Business Communities', i.e. Communities of heterogeneous actors that cooperate in the same business area. The architecture is based on XML and Web Services technologies.
   More specifically the paper analyzes the structure and the requirements of Business Communities in general, derives the requirements of the architecture and describes its implementation. Finally, a case study is presented to show how the architecture has been implemented for the Business Community of the Port of Genoa characterized by users operating in the cargo and transport business area. (c) 2004 Elsevier B.V. All rights reserved.
C1 Univ Genoa, DIST, I-16145 Genoa, Italy.
C3 University of Genoa
RP Baglietto, P (corresponding author), Univ Genoa, DIST, Via Opera Pia 13, I-16145 Genoa, Italy.
EM p.baglietto@dist.unige.it
CR [Anonymous], 1995, APPL CRYPTOGRAPHY PR
   BRANCHAUD M, 1997, SURVEY PULIC KEY INR
   BURBECK S, 2000, TAO E BUSINESS SERVI
   Feghhi J., 1999, DIGITAL CERTIFICATES
   *IBM WEB SERV ARCH, 2000, WEB SERV ARCH OV THE
   *MIN I U RIC SCI T, 2001, CLUST 25 PROG P10 CA
   Scheu S, 2001, BASIC APPL ECOL, V2, P3, DOI 10.1078/1439-1791-00031
   *UDDI COMM, UDDI UN DESCR DISC I
   W3C, WEB SERV DESCR LANG
   *WEB SERV, 2001, BUS OBJ COMP MOD ORC
   EBXML ELECT BUSINESS
   XML SIGNATURE
   SOAP VERSION 1 2 0
   2001, USING WSDL UDDI REGI
   XML ENCRYPTION
NR 15
TC 14
Z9 14
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR 15
PY 2005
VL 47
IS 6
BP 427
EP 436
DI 10.1016/j.infsof.2004.09.011
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 916VO
UT WOS:000228414700005
DA 2024-07-18
ER

PT J
AU Kabeli, J
   Shoval, P
AF Kabeli, J
   Shoval, P
TI Comprehension and quality of analysis specifications - a comparison of
   FOOM and OPM methodologies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE conceptual modeling; data modeling; functional analysis;
   experimentation; method engineering; method evaluation and comparison;
   object-oriented; analysis and design; requirements engineering; system
   development methodologies; ADISSA; FOOM; OPM
ID GUIDELINES; DESIGN
AB FOOM-Functional and Object Oriented Methodology-combines two essential software-engineering paradigms: the functional (or process-oriented) approach and the object-oriented (00) approach. The two main products of the analysis phase of FOOM are an initial class diagram and OO-DFDs (dataflow diagrams including data classes rather than traditional data-stores). We evaluated these analysis products by comparing them with the analysis products of OPM-Object-Process Methodology-which also combines the functional and object-oriented approaches, using a unified diagrammatic notation. FOOM and OPM were compared in two controlled experiments from two main points of view: users and analysts. From the point of view of users we compared mainly comprehension of analysis specifications in each methodology. From the point of view of analysts we compared mainly quality, namely correctness of specifications created by analysts who utilized the two methodologies. The main results of the experiments are that FOOM specifications are more comprehensible and prefer-red by users, and that analysts create more correct specifications when using FOOM methodology. (C) 2004 Elsevier B.V. All rights reserved.
C1 Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
C3 Ben Gurion University
RP Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
EM kabeli@bgumail.bgu.ac.il; shoval@bgumail.bgu.ac.il
RI Shoval, Peretz/F-1229-2012
OI Shoval, Peretz/0000-0002-0183-2832
CR BAJAJ A, 2004, P CAISE IFIP8 1 INT, P297
   BATRA D, 1994, INT J HUM-COMPUT ST, V41, P481, DOI 10.1006/ijhc.1994.1070
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Dori D., 1996, Annals of Software Engineering, V2, P25, DOI 10.1007/BF02063805
   Dori D., 2011, OBJECT PROCESS METHO, P1208
   Juristo N., 2013, BASICS SOFTWARE ENG
   KABELI J, 2002, P 7 CAISE IFIP8 1 WO, P23
   KBELI J, 2003, PRACTICING SOFTWARE, P82
   KBELI J, 2003, P 8 CAISE IFIP8 1 IN, P48
   KIM YG, 1995, COMMUN ACM, V38, P103, DOI 10.1145/203241.203265
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Mathiassen L., 2000, OBJECT ORIENTED ANAL
   Peleg M, 2000, IEEE T SOFTWARE ENG, V26, P742, DOI 10.1109/32.879812
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SHOVAL P, 1988, INFORM SYST, V13, P193, DOI 10.1016/0306-4379(88)90016-6
   Shoval P., 2001, Journal of Database Management, V12, P15, DOI 10.4018/jdm.2001010102
   Shoval P., 1994, Journal of Database Management, V5, P28
   Shoval P, 1997, DATA KNOWL ENG, V21, P297, DOI 10.1016/S0169-023X(97)88935-5
   Topi H., 2002, Journal of Database Management, V13, P3, DOI 10.4018/jdm.2002040101
NR 19
TC 5
Z9 6
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2005
VL 47
IS 4
BP 271
EP 290
DI 10.1016/j.infsof.2004.08.009
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 899JS
UT WOS:000227141300005
DA 2024-07-18
ER

PT J
AU Becker, K
   Ghedini, C
AF Becker, K
   Ghedini, C
TI A documentation infrastructure for the management of data mining
   projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE knowledge discovery in databases; documentation; organizational memory;
   project management
ID KNOWLEDGE; HYPERMEDIA; SYSTEMS; SUPPORT; TOOL
AB Effective project management is a key factor for successful Knowledge Discovery in Databases (KDD) projects. The systematic documentation of previous knowledge, experiments, data and results is a helpful means of keeping track of the project current status. Despite its value, documentation is most often perceived as an overhead. We propose a documentation infrastructure composed of a documentation model and a supporting environment that allows the capture, storage and retrieval of KDD process-related information and artifacts. The paper describes this infrastructure, and reports preliminary experiences on its use. Preliminary results reveal generalized satisfaction with regard to infrastructure expressiveness and functionality, and highlight the contributions of the documentation produced for improving project management, project execution and team communication. The role of documentation in learning and reuse was also identified. (C) 2004 Elsevier B.V. All rights reserved.
C1 Pontificia Univ Catolica Rio Grande do Sul, Fac Informat, BR-90619900 Porto Alegre, RS, Brazil.
C3 Pontificia Universidade Catolica Do Rio Grande Do Sul
RP Pontificia Univ Catolica Rio Grande do Sul, Fac Informat, Av Ipiranga 6681, BR-90619900 Porto Alegre, RS, Brazil.
EM kbecker@inf.pucrs.br
RI Becker, Karin/E-8963-2013; Guellner Ghedini, Cinara/K-3695-2012
OI Becker, Karin/0000-0003-4967-1027; Guellner Ghedini,
   Cinara/0000-0003-0355-2890
CR Abecker A, 1998, IEEE INTELL SYST APP, V13, P40, DOI 10.1109/5254.683209
   Adriaans P., 1996, DATA MINING
   [Anonymous], LECT NOTES ARTIFICIA
   ATTWOOD M, 2002, P 35 HAW INT C SYST, P919
   BAEZAYATES R, 1999, MODERN INFORMATION
   BECKER K, 2000, P 14 SPIES ANN INT S, P412
   BECKER K, 2003, P INT WORKSH UT US C
   Berry MichaelJ., 1997, DATA MINING TECHNIQU
   Bieber M, 1997, INT J HUM-COMPUT ST, V47, P31, DOI 10.1006/ijhc.1997.0130
   Bonifati A, 2000, SIGMOD RECORD, V29, P68, DOI 10.1145/344788.344822
   Borges MRS, 1999, DECIS SUPPORT SYST, V27, P269, DOI 10.1016/S0167-9236(99)00051-2
   Brachman R., 1996, ADV KNOWLEDGE DISCOV, P36
   CAGENA P, 1998, DISCOVERING DATA MIN
   CHAPMAN P, CRISPDM 1 0
   Ciancarini P, 2001, INTERACT COMPUT, V13, P677, DOI 10.1016/S0953-5438(01)00037-6
   COCKBURN A, 1995, INTERACT COMPUT, V7, P195, DOI 10.1016/0953-5438(95)93509-4
   COCKBURN A, 1997, P 5 C COMP ASS RES I, P55
   CONKLIN J, 1987, COMPUTER, V20, P17, DOI 10.1109/MC.1987.1663693
   CONKLIN J, 1988, ACM T INFORM SYST, V6, P303, DOI 10.1145/58566.59297
   CONKLIN J, DESIGNING ORG MEMORY
   CONKLIN J, 1996, READINGS GROUPWARE C, P561
   Conklin Jeff., 2001, HYPERTEXT, P123
   COOLEY R, 1999, J KNOWLEDGE INFORMAT, V1
   Engels R., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P163
   ENGELS R, 1999, THESIS U KARLSRUHE K
   Fayyad U, 1996, COMMUN ACM, V39, P27, DOI 10.1145/240455.240464
   Ghedini C, 2001, SCCC 2001: XXI INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P105, DOI 10.1109/SCCC.2001.972638
   GHEDINI C, 2003, P 5INT C ENT INF SYS, P238
   Guerrero LA, 2001, INFORM SOFTWARE TECH, V43, P457, DOI 10.1016/S0950-5849(01)00154-9
   Guerrero LA, 1999, DECIS SUPPORT SYST, V27, P255, DOI 10.1016/S0167-9236(99)00050-0
   Hipp J, 1999, LECT NOTES COMPUT SC, V1749, P31
   Khoshafian S., 1995, Introduction to groupware, workflow, and workgroup computing
   Kosala Raymond., 2000, SIGKDD EXPLOR NEWSL, V2, P1
   Lee J., 1990, Proceedings o f the 1990 ACM conference on Computer-supported cooperative work, P79
   Machado LD, 2003, 3RD IEEE INTERNATIONAL CONFERENCE ON ADVANCED LEARNING TECHNOLOGIES, PROCEEDINGS, P360, DOI 10.1109/ICALT.2003.1215123
   Maurer F, 2002, ANN SOFTW ENG, V14, P145, DOI 10.1023/A:1020505708326
   NIELSEN J, 1990, COMMUN ACM, V33, P196
   Regli WC, 2000, ENG COMPUT-GERMANY, V16, P209, DOI 10.1007/PL00013715
   Shearer C., 2000, J. Data Warehous, V5, P13
   Spiliopoulou M, 2000, COMMUN ACM, V43, P127, DOI 10.1145/345124.345167
   SRIKANT R, 1996, P 5 INT C EXT DAT TE, V1057, P3
   Srivastava J., 2000, SIGKDD EXPLORATIONS, V1, P12, DOI DOI 10.1145/846183.846188
   UTTING K, 1989, ACM T INFORM SYST, V7, P58, DOI 10.1145/64789.64992
   Wirth R., 2000, Proceedings of the Fourth International Conference on the Practical Application of Knowledge Discovery and Data Mining, P29
   Wirth R, 1997, LECT NOTES ARTIF INT, V1263, P243
   Zantout H, 1999, INT J INFORM MANAGE, V19, P471, DOI 10.1016/S0268-4012(99)00043-2
NR 46
TC 7
Z9 8
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2005
VL 47
IS 2
BP 95
EP 111
DI 10.1016/j.infsof.2004.06.004
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 886VD
UT WOS:000226260000003
DA 2024-07-18
ER

PT J
AU Ortin, F
   Diez, D
AF Ortin, F
   Diez, D
TI Designing an adaptable heterogeneous abstract machine by means of
   reflection
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE reflection; abstract machine; virtual machine; adaptability;
   heterogeneity
AB The concepts of abstract and virtual machines have been used for many different purposes to obtain diverse benefits such as code portability, compiler simplification, interoperability, distribution and direct support of specific paradigms. Despite of these benefits. the main drawback of virtual machines has always been execution performance. Consequently, there has been considerable research aimed at improving the performance of virtual machine's application execution compared to its native counterparts. Techniques like adaptive Just In Time compilation or efficient and complex garbage collection algorithms have reached such a point that Microsoft and Sun Microsystems identify this kind of platforms as appropriate to implement commercial applications.
   What we have noticed in our research work is that these platforms have heterogeneity, extensibility, platform porting and adaptability limitations caused by their monolithic designs. Most designs of common abstract machines are focused on supporting a fixed programming language and the computation model they offer is set to the one employed by the specific language. We have identified reflection as a basis for designing an abstract machine, capable of overcoming the previously mentioned limitations. Reflection is a mechanism that gives our platform the capability to adapt the abstract machine to different computation models and heterogeneous computing environments. not needing to modify its implementation. In this paper we present the reflective design of our abstract machine, example code extending the platform, a reference implementation, and a comparison between our implementation and other well-known platforms. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Oviedo, Dept Comp Sci, Oviedo 33007, Spain.
C3 University of Oviedo
RP Univ Oviedo, Dept Comp Sci, Calvo Sotelo S-N, Oviedo 33007, Spain.
EM ortin@lsi.uniovi.es
RI Ortin, Francisco/K-9272-2014
OI Ortin, Francisco/0000-0003-1199-8649
CR BRACHA G, 1993, ACM SIGPLAN NOTICES, V28
   BULL JM, 2000, CONCURRENCY-PRACT EX, P12
   DIEHL S, 2000, ELSEVIER FUTURE GEN, V16
   Goldberg Adele., 1983, Smalltalk- 80: The language and Implementation
   GOLM M, 1997, LECT NOTES COMPUTER, V1357, P507
   HURSCH WL, 1995, UNCCS9503 NE U
   Jones R.E., 1996, Garbage Collection: Algorithms for Automatic Dynamic Memory Management
   Joy B., 2000, JAVA LANGUAGE SPECIF, V2nd
   LINDHOLM T, 1996, JAVA VIRTUAL MACHINE
   MAES P, 1987, THESIS VRIJE U BRUSS
   MEIJER K, TECHNICAL OVERVIEW C
   MILLER S, 1992, DEC HP NETWORK COMPU
   NEWARD T, 2003, SHARED SOURCE CLI ES
   NORI KV, 1981, PASCAL LANGUAGE ITS
   Ortín F, 2002, ACM SIGPLAN NOTICES, V37, P35, DOI 10.1145/596992.597002
   ORTIN F, 2002, THESIS U OVIEDO SPAI
   ORTIN F, 2004, ELSEVIER J SYSTEMS S, V71, pR30
   ORTIN F, 1999, 14 BRAZ S DAT SBBD F
   PARNAS DL, 1972, COMMUN ACM, V15, pR30
   RODDICK J, 1995, INFORMATION SOFTWARE, P37
   Rossum G.V., 2000, PYTHON REFERENCE MAN
   UNGAR D, 1986, ACM SIPLAN NOTICES, V22, pR30
   UNGAR D, 1991, ORG PROGR CLASSES LI
   WHITNEY J, 2002, WINDOWS NET SERVER 7
   [No title captured]
   [No title captured]
NR 26
TC 6
Z9 6
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB 1
PY 2005
VL 47
IS 2
BP 81
EP 94
DI 10.1016/j.infsof.2004.06.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 886VD
UT WOS:000226260000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Norvåg, K
AF Norvåg, K
TI The design, implementation, and performance of the V2 temporal document
   database system
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE temporal databases; document databases; web archiving; query processing
AB It is now feasible to store previous versions of documents, and not only the most recent version which has been the traditional approach. This is of interest in a number of application, both temporal document databases as well as web archiving systems and temporal XML warehouses. In this paper, we describe the architecture and the implementation of V2, a temporal document database system that supports storage, retrieval, and querying of temporal documents. We also give some performance results from a mini-benchmark run on the V2 prototype. (C) 2004 Elsevier B.V. All rights reserved.
C1 Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, N-7491 Trondheim, Norway.
C3 Norwegian University of Science & Technology (NTNU)
RP Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Sem Saelandsv 7-9, N-7491 Trondheim, Norway.
EM kjetil.norvag@idi.ntnu.no
OI Norvag, Kjetil/0000-0002-4250-9329
CR Abiteboul S., 1993, P 19 INT C VER LARG
   AGUILERA V, 2000, P ACM SIGIR WORKSH X
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Cabo MJA, 2001, CONCURR COMP-PRACT E, V13, P987, DOI 10.1002/cpe.609
   Chawathe SS, 1998, PROC INT CONF DATA, P4, DOI 10.1109/ICDE.1998.655752
   Chawathe SS, 1999, THEOR PRACT OBJ SYST, V5, P143, DOI 10.1002/(SICI)1096-9942(1999)5:3<143::AID-TAPO3>3.0.CO;2-S
   Chien SY, 2001, PR GR LAK SYMP VLSI, P95, DOI 10.1109/RIDE.2001.916496
   CHIEN SY, 2001, P 27 INT C VER LARG, P291
   CHIEN SY, 2000, TR51
   CONRADI R, 1998, ACM COMPUTER SURVEYS, V30
   ELIAS P, 1975, IEEE T INFORM THEORY, V21, P194, DOI 10.1109/TIT.1975.1055349
   FRAENKEL AS, 1985, NATO ASI SERIES F, V12, P169
   GRANDI F, 2000, P ADV INF SYST 1 INT
   March L.X., 2001, IEEE Data Engineering Bulletin, V24, P40
   Marian A., 2001, Proceedings of the 27th International Conference on Very Large Data Bases, P581
   Melnik Sergey., 2001, WWW 01 P 10 INT C WO, P396
   NAVARRO G, 1997, ACM T INF SYST, V15
   Norvåg K, 2000, 2000 INTERNATIONAL DATABASE ENGINEERING AND APPLICATIONS SYMPOSIUM - PROCEEDINGS, P158
   NORVAG K, 2002, P 17 ACM S APPL COMP
   NORVAG K, 2002, 112002 IDI NORW U SC
   NORVAG K, 2002, P WORKSH KNOWL FOR D
   NORVAG K, 2002, EDBT WORKSH EDBT 200, P169
   NORVAG K, 2003, P PERSP SYST INF PSI
   Olson MA, 1999, PROCEEDINGS OF THE FREENIX TRACK, P183
   QUASS D, 1996, P 1996 ACM SIGMOD IN
   STONEBRAKER M, 1987, P 13 VLDB C
   SUZUKI T, 1996, P 7 AUSTR DAT C
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Witten I.H., 1999, Managing Gigabytes: Compressing and Indexing Documents and Images
   [No title captured]
NR 30
TC 8
Z9 9
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL 1
PY 2004
VL 46
IS 9
BP 557
EP 574
DI 10.1016/j.infsof.2003.10.006
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 823DD
UT WOS:000221589000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Abbas, A
   Tsang, EPK
AF Abbas, A
   Tsang, EPK
TI Software engineering aspects of constraint-based timetabling - a case
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Constraint Satisfaction; timetabling; program specification; software
   engineering
ID SATISFACTION
AB This paper details the stages of building a substantial, carefully specified, fully tested and fully operational university and school timetabling system. This is reported as a case study in applying Constraint Satisfaction techniques. The emphasis is on the software engineering aspects of the problem. That is, Constraint Satisfaction problems are expressed in a language more familiar to the formal software engineering community. Moreover, this language is used to formulate domain constraints and heuristic information. In addition to that, the user's needs are looked at more closely. For instance, the system supplies indications useful for relaxing or reformulating the constraints of the problem when a solution satisfying these constraints is impossible to produce. This has a value in bringing Constraint Satisfaction one-step closer to formal specification, program verification and transformation. (C) 2003 Published by Elsevier B.V.
C1 Univ Balamand, Dept Comp Sci, Tripoli, Lebanon.
   Univ Essex, Dept Comp Sci, Colchester CO4 3SQ, Essex, England.
C3 University Balamand; University of Essex
RP Abbas, A (corresponding author), Univ Balamand, Dept Comp Sci, POB 100, Tripoli, Lebanon.
EM abbas@balamand.edu.lb; edward@essex.ac.uk
CR ABBAS A, 2001, P CP AI OR 2001 WORK
   ABBAS A, 2001, P AICCSA 2001 ACS IE
   ABBAS A, 2003, UNPUB DEPICT 0 1 FOR
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1993, Foundations of Constraint Satisfaction
   [Anonymous], 1978, P 2 NAT C CAN SOC CO
   [Anonymous], 1999, OPL OPTIMIZATION PRO
   AZEVEDO F, 1994, P 2 WORLD C EXP SYST
   Bistarelli S, 1997, J ACM, V44, P201, DOI 10.1145/256303.256306
   BLIEK C, 1998, P AAAI
   BLUM C, 2002, P 4 INT C PRACT THEO
   BOIZUMAULT P, 1994, P 1994 ILPS POST C W, V1, P116
   BORRETT JE, 1998, THESIS U ESSEX COLCH
   Burke E.K., 2002, P 4 INT C PRACT THEO
   BURKE EK, 1998, SPRINGER LECT NOTES, V1408
   CARTER MW, 1996, LNCS, V1408, P4
   CARTER MW, 2000, P 3 INT C PRACT THEO
   Dechter R, 2002, ARTIF INTELL, V136, P147, DOI 10.1016/S0004-3702(02)00120-0
   ELSAKKOUT H, 1996, P PRACT APPL CONSTR
   FLENER P, 2001, P IJAI 01 WORKSH MOD
   FREUDER EC, 1992, ARTIF INTELL, V58, P21, DOI 10.1016/0004-3702(92)90004-H
   FREUDER EC, 1999, 1 INT C PRACT APPL C, P15
   FROST D, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P294
   Ginsberg ML, 1993, J ARTIF INTELL RES, V1, P25, DOI 10.1613/jair.1
   HARALICK RM, 1980, ARTIF INTELL, V14, P263, DOI 10.1016/0004-3702(80)90051-X
   HENZ M, 1995, LNCS, V1153
   HNICH B, 2003, THESIS UPPSALA U SWE
   *ILOG INC, ILOG CPLEX 7 0 US MA
   JIANG YJ, 1994, P 2 WORKSH PRINC PRA
   Jussien N., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P249
   KAMARAINEN O, 2002, ECLIPSE USER GROUP N
   KINGSTON JH, 2000, P 3 INT C PRACT THEO
   LAURIERE JL, 1978, ARTIF INTELL, V10, P29, DOI 10.1016/0004-3702(78)90029-2
   LEGIERSKI W, 2002, P 4 INT C PRACT THEO
   LOHNERTZ M, 2002, P 4 INT C PRACT THEO
   MACKWORTH AK, 1977, ARTIF INTELL, V8, P99, DOI 10.1016/0004-3702(77)90007-8
   MCCOLLUM B, 2000, P 3 INT C PRACT THEO
   MCDERMOTT C, 1985, INTRO ARTIFICIAL INT
   MULLER T, 2002, P 4 INT C PRACT THEO
   NORDSTROM B, 1990, INT SERIES MONOGRAPH, V7
   PROSSER P., 1993, COMPUT INTELL, V9, P268, DOI DOI 10.1111/J.1467-8640.1993.TB00310.X
   REIS LP, 2000, P 3 INT C PRACT THEO
   RUDOVA H, 2002, P 4 INT C PRACT THEO
   Schiex T., 1994, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V3, P187, DOI 10.1142/S0218213094000108
   SCHIEX T, 1994, P 11 EUR C ART INT, P165
   Smith B. M., 1996, Constraints, V1, P119, DOI 10.1007/BF00143880
   TRICK MA, 2000, P 3 INT C PRACT THEO
   TSANG E, 1999, 1 INT C PRACT APPL C, P81
   Wallace M., 1996, Constraints, V1, P139, DOI 10.1007/BF00143881
   WHITE GM, 2000, P 3 INT C PRACT THEO
   YOSHIKAWA M, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P1111
   ZERVOUDAKIS K, 2000, P 3 INT C PRACT THEO, P128
   CHIC 2 PROJECT
NR 53
TC 6
Z9 7
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2004
VL 46
IS 6
BP 359
EP 372
DI 10.1016/S0950-5849(03)00107-1
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OT
UT WOS:000220241100001
DA 2024-07-18
ER

PT J
AU Chou, SC
AF Chou, SC
TI DPEM: a decentralized software process enactment model
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE process; process-centered software engineering environment; process
   language; decentralized process enactment model
ID EVOLUTION; MANAGEMENT; SUPPORT; CSPL
AB This paper proposes a decentralized process enactment model called DPEM, which operates on the network. It consists of multiple developer sites, a name server site, a developer coordinator site, and an event manager site. DPEM also provides an intermediate process language called DPEL. To enact a process program written in a source process language (e.g. CSPL and APPL/A), the process program is first translated into DPEL segments, in which those for developer sites are composed of activities and synchronization information. Next, DPEL segments are transferred to DPEM sites. Then, activities in developer sites are enacted concurrently, during which activities are synchronized using synchronization information transferred to the developer sites. Major features offered by DPEM are: (1) every site in DPEM can enact DPEL segments and hence no site will become a bottleneck, (2) a software product is managed by the site that accesses it frequently, which reduces network flows, and (3) DPEM can coordinate heterogeneous process-centered software engineering environments using the intermediate process language DPEL. (C) 2003 Elsevier B.V. All rights reserved.
C1 Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien 974, Taiwan.
C3 National Dong Hwa University
RP Chou, SC (corresponding author), Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien 974, Taiwan.
EM scchou@mail.ndhu.edu.tw
CR Abeysinghe G, 1997, INFORM SOFTWARE TECH, V39, P107, DOI 10.1016/S0950-5849(96)01126-3
   Ambriola V., 1997, ACM Transactions on Software Engineering and Methodology, V6, P283, DOI 10.1145/258077.258080
   Aoyama M, 1998, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.1998.671097
   Avrilionis D, 1996, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.1996.493400
   BANDINELLI SC, 1993, IEEE T SOFTWARE ENG, V19, P1128, DOI 10.1109/32.249659
   Barrett D. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P378, DOI 10.1145/235321.235324
   BELKHATIR N, 1994, COMPUT J, V37, P621, DOI 10.1093/comjnl/37.7.621
   BELKHATIR N, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P212, DOI 10.1109/ICSM.1994.336773
   BENSHAUL IZ, 1994, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.1994.296777
   CHEN JY, 1994, INFORM SOFTWARE TECH, V36, P3, DOI 10.1016/0950-5849(94)90003-5
   CHEN JY, 1994, J SYST SOFTWARE, V27, P17, DOI 10.1016/0164-1212(94)90111-2
   CHEN JY, 1998, P 1998 IEEE KNOWL DA, P181
   Chen JYJ, 1999, J SYST SOFTWARE, V47, P105, DOI 10.1016/S0164-1212(99)00030-8
   Chen JYJ, 1997, IEEE T SOFTWARE ENG, V23, P171, DOI 10.1109/32.585504
   Chou SC, 2002, INT J SOFTW ENG KNOW, V12, P545, DOI 10.1142/S0218194002001050
   Chou SC, 2003, IEICE T INF SYST, VE86D, P56
   Chou SC, 1999, INFORM SOFTWARE TECH, V41, P507, DOI 10.1016/S0950-5849(99)00013-0
   Chou SC, 2000, SOFTWARE PRACT EXPER, V30, P175, DOI 10.1002/(SICI)1097-024X(200003)30:3<175::AID-SPE294>3.0.CO;2-M
   CHOU SC, 2003, J OBJECT TECHNOLOGY, V1, P137
   CHOU SC, 2000, J OBJECT ORIENTED PR, V13, P18
   Chou SC, 2000, J OBJECT ORIENTED PR, V13, P21
   Cugola G, 1998, IEEE T SOFTWARE ENG, V24, P982, DOI 10.1109/32.730546
   Doppke J. C., 1998, ACM Transactions on Software Engineering and Methodology, V7, P1, DOI 10.1145/268411.268415
   FERNSTROM C, 1993, P 2 INT C SOFTW PROC, P12
   Fuggetta A, 1996, INFORM SOFTWARE TECH, V38, P289, DOI 10.1016/0950-5849(95)01053-X
   GARG PK, 1996, PROCESS CTR SOFTWARE, P17
   GEPPERT A, 1996, 9605 U ZUR
   Greenwood RM, 1996, PROC INT CONF SOFTW, P428, DOI 10.1109/ICSE.1996.493437
   GUGOLA G, 1995, P 17 ICSE, P265
   HAGEN CJ, 1999, THESIS SWISS FEDERAL
   Heimann P, 1996, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.1996.493428
   Heimann P, 1997, INT J SOFTW ENG KNOW, V7, P431, DOI 10.1142/S0218194097000254
   Jaccheri M. L., 1998, ACM Transactions on Software Engineering and Methodology, V7, P368, DOI 10.1145/292182.292194
   JACCHERI ML, 1993, IEEE T SOFTWARE ENG, V19, P1145, DOI 10.1109/32.249660
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   JUNKERMANN G, 1996, PROCESS CTR SOFTWARE, P202
   Min SY, 2000, INFORM SOFTWARE TECH, V42, P1, DOI 10.1016/S0950-5849(99)00050-6
   Sutton S. M.  Jr., 1995, ACM Transactions on Software Engineering and Methodology, V4, P221, DOI 10.1145/214013.214017
NR 38
TC 2
Z9 2
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY 1
PY 2004
VL 46
IS 6
BP 383
EP 395
DI 10.1016/j.infsof.2003.08.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OT
UT WOS:000220241100003
DA 2024-07-18
ER

PT J
AU Krishnan, S
   Uhlmann, J
AF Krishnan, S
   Uhlmann, J
TI The design of an anonymous file sharing system based on group anonymity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE anonymous; file sharing; information sharing; user group
AB There are a variety of contexts in which network users have legitimate reasons to want to exchange information, e.g. documents and media files, while maintaining anonymity. One such context is an online user group with a special interest in a particular medical condition that is associated with unfair or illegal discrimination. The challenge for designing a secure and anonymous file sharing system is that it seems necessary for some external source to know the network destination of the requested information. This is problematic because the identity of the recipient can potentially be determined from a network address. Even if the source or conduit of the information is trusted, it may be compromised by an outside agent who cannot be trusted. In this paper we use a general mechanism called 'group anonymity' that provides a new level of network privacy and security. We also describe a particular use of this mechanism in a software system which is an anonymous file sharing application that preserves the anonymity of users using the system and the privacy of the data being exchanged. (C) 2003 Elsevier B.V. All rights reserved.
C1 Univ Missouri, Dept Comp Engn & Comp Sci, Columbia, MO 65201 USA.
C3 University of Missouri System; University of Missouri Columbia
RP Univ Missouri, Dept Comp Engn & Comp Sci, 201 EBW, Columbia, MO 65201 USA.
EM uhlmannj@missouri.edu; uhlmannj@missouri.edu
CR CANETTI R, 1997, P CRYPTO 97
   GARSEK Z, 2001, CARDOZO ARTS ENTERTA, V205
   Grosso W., 2001, Java RMI, V2nd
   Reed MG, 1998, IEEE J SEL AREA COMM, V16, P482, DOI 10.1109/49.668972
   REITER K, 1998, ACM T INFORM SYST, V1, P6692
   RIVEST R, 1997, P 1997 E SOFTW ENCR
   RIVEST RL, 1998, CHAFFING WINNOWONG C
   SARLATA V, 2001, NETW PROT 9 INT C IC, P272
   SHIELDS C, 2000, P 7 ACM C COMP COMM
   Wright Matthew., 2001, An analysis of the degradation of anonymous protocols
NR 10
TC 2
Z9 4
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 15
PY 2004
VL 46
IS 4
BP 273
EP 278
DI 10.1016/j.infsof.2003.07.006
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 776CX
UT WOS:000189098400006
DA 2024-07-18
ER

PT J
AU Halme, E
   Jantunen, M
   Vakkuri, V
   Kemell, KK
   Abrahamsson, P
AF Halme, Erika
   Jantunen, Marianna
   Vakkuri, Ville
   Kemell, Kai-Kristian
   Abrahamsson, Pekka
TI Making ethics practical: User stories as a way of implementing ethical
   consideration in Software Engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE User story; Ethics; AI ethics; Design science research; Software
   engineering practice
AB Context: Shortcomings of AI systems have recently brought ethics into the spotlight in Software Engineering (SE) in the form of AI ethics. However, actually implementing ethics into practice remains a challenge in both AI ethics and SE at large. Translating abstract ethical principles into requirements and features is difficult and lacks established processes, as well as practices and methods. Objective: In this study, we explored user stories as a way of implementing ethics in SE. Initially, we simply investigated whether user stories could be utilized for this purpose. After we began to consider this possible, we began to develop the concept of ethical user stories (EUSs) as a specific practice for this purpose. Method: We utilized a design science research (DSR) approach to first explore the use of user stories in implementing ethics, and then to develop the concept of EUS. This process featured three DSR phases through which the concept of EUS was iteratively developed with empirical data. Results: Over three DSR iterations, we studied 689 user stories produced in different contexts including both student and industry settings. Based on the data, we defined the concept of EUS and provided empirical validation for it. Conclusions: The concept of EUS provides a novel way of tackling ethics in SE. This paper presents the concept in-depth, along with practical suggestions for utilizing EUS.
C1 [Halme, Erika; Jantunen, Marianna] Univ Jyvaskyla, Fac Informat Technol, Mattilanniemi 2, Jyvaskyla 40100, Finland.
   [Vakkuri, Ville] Univ Vaasa, Sch Mkt & Commun, Wolffintie 32 65200, Vaasa 65101, Finland.
   [Kemell, Kai-Kristian] Univ Helsinki, Dept Comp Sci, Pietari Kalmin Katu 5, Helsinki 00560, Finland.
   [Abrahamsson, Pekka] Tampere Univ, Fac Informat Technol & Commun Sci, Kanslerinrinne 1, 33014 Tampere, Finland.
C3 University of Jyvaskyla; University of Vaasa; University of Helsinki;
   Tampere University
RP Halme, E (corresponding author), Univ Jyvaskyla, Fac Informat Technol, Mattilanniemi 2, Jyvaskyla 40100, Finland.
EM erika.halme@rejlers.fi
RI ; Abrahamsson, Pekka/A-5559-2018
OI Jantunen, Marianna/0000-0002-8991-150X; Abrahamsson,
   Pekka/0000-0002-4360-2226; Kemell, Kai-Kristian/0000-0002-0225-4560;
   Vakkuri, Ville/0000-0002-1550-1110; Halme, Erika/0000-0003-0750-1580
FU DIMECC's Sea4Value ecosystem program; Business Finland funded SMARTER
   (Smart Terminal) research project
FX The authors would like to thank the students and industrial partners for
   their participation in the study. The work is funded by the DIMECC's
   Sea4Value ecosystem program and the Business Finland funded SMARTER
   (Smart Terminal) research project.
CR AI H, 2019, HIGH LEVEL EXPERT GR
   [Anonymous], 2021, What does INVEST stand for?
   Attard-Frost B., 2022, AI and Ethics, P1
   Bartley Christopher, 2016, Advanced Data Mining and Applications. 12th International Conference, ADMA 2016. Proceedings: LNAI 10086, P3, DOI 10.1007/978-3-319-49586-6_1
   Borenstein J, 2021, COMPUTER, V54, P96, DOI 10.1109/MC.2020.3034950
   Butler T., 2015, SIGGREEN PREICIS 201, P1
   Winter SJ, 2020, COMMUN ACM, V63, P18, DOI 10.1145/3430368
   Chatterjee D., 2021, ACIS 2021 P
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   De Lucia Andrea, 2010, Journal of Emerging Technologies in Web Intelligence, V2, P212, DOI 10.4304/jetwi.2.3.212-220
   Dias Canedo E., 2022, 55 HAW INT C SYST SC
   Dignum V, 2018, ETHICS INF TECHNOL, V20, P1, DOI 10.1007/s10676-018-9450-z
   Dimitrijevic S, 2015, INFORM SOFTWARE TECH, V57, P352, DOI 10.1016/j.infsof.2014.05.012
   Drake J.R., 2016, AIS Transactions on Human-Computer Interaction, V8, P160
   European Commission, 2019, Ethics Guidelines for Trustworthy AI, DOI DOI 10.2759/346720
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Friedman B, 2019, VALUE SENSITIVE DESIGN: SHAPING TECHNOLOGY WITH MORAL IMAGINATION, P1, DOI 10.7551/mitpress/7585.001.0001
   Friedman B, 2021, ETHICS INF TECHNOL, V23, P5, DOI 10.1007/s10676-021-09586-y
   Friedman Batya., 1996, Interactions, V3, P16, DOI [DOI 10.1145/242485.242493, 10.1145/242485.242493]
   Gilson F, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P129, DOI 10.1109/ICSA-C.2019.00031
   Giray G, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111031
   Gogoll J., 2021, Philos. Technol., P1
   Gotterbarn D.W., 2018, ACM code of ethics and professional conduct, V2019
   Hagendorff T, 2020, MIND MACH, V30, P99, DOI 10.1007/s11023-020-09517-8
   Hallamaa J, 2022, FRONT COMP SCI-SWITZ, V4, DOI 10.3389/fcomp.2022.776837
   Halme E., 2021, arXiv
   Halme E., 2022, JOINT P REFSQ 2022 W, P3122
   Halme E, 2022, LECT NOTES COMPUT SC, V13709, P631, DOI 10.1007/978-3-031-21388-5_48
   Halme E, 2021, LECT NOTES BUS INF P, V419, P36, DOI 10.1007/978-3-030-78098-2_3
   Hudson W., 2013, Interactions, V20, P50, DOI [10.1145/2517668, DOI 10.1145/2517668]
   IEEE, 2021, IEEE 7000-2021
   Jeffries R., 2001, EXTREME PROGRAMMING
   Jobin A, 2019, NAT MACH INTELL, V1, P389, DOI 10.1038/s42256-019-0088-2
   Johnson D.G., 1994, COMPUTER ETHICS, V2nd
   Kamthan Pankaj, 2021, CSSE 2021: 2021 4th International Conference on Computer Science and Software Engineering (CSSE 2021), P71, DOI 10.1145/3494885.3494899
   Kemell KK, 2022, LECT NOTES COMPUT SC, V13709, P553, DOI 10.1007/978-3-031-21388-5_41
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Lucassen G, 2015, INT REQUIR ENG CONF, P126, DOI 10.1109/RE.2015.7320415
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   McNamara A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P729, DOI 10.1145/3236024.3264833
   Mittelstadt B, 2019, NAT MACH INTELL, V1, P501, DOI 10.1038/s42256-019-0114-4
   MOOR JH, 1985, METAPHILOSOPHY, V16, P266, DOI 10.1111/j.1467-9973.1985.tb00173.x
   Moores TT, 2006, MIS QUART, V30, P167
   Moreno AM, 2012, LECT NOTES BUS INF P, V111, P168
   Morley J, 2020, SCI ENG ETHICS, V26, P2141, DOI 10.1007/s11948-019-00165-5
   Peeters J., 2005, S REQ ENG INF SEC, V12
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Perreault L., 2015, CONF-IRM
   Pfeiffer R.S., 1993, Ethics on the Job: Cases and Strategies
   Raharjana IK, 2021, IEEE ACCESS, V9, P53811, DOI 10.1109/ACCESS.2021.3070606
   Sloane Mona, 2022, FAccT '22: 2022 ACM Conference on Fairness, Accountability, and Transparency, P935, DOI 10.1145/3531146.3533156
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   The IEEE Global Initiative on Ethics of Autonomous and Intelligent Systems, 2019, Ethically aligned design: Prioritizing human wellbeing with autonomous and intelligent systems
   Vakkuri V., 2022, EJBO-Electronic Journal of Business Ethics and Organization Studies, V27
   Vakkuri V, 2020, Arxiv, DOI arXiv:1905.06417
   Vakkuri V, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111067
   Vakkuri V, 2020, IEEE SOFTWARE, V37, P50, DOI 10.1109/MS.2020.2985621
   Vakkuri V, 2020, LECT NOTES BUS INF P, V383, P195, DOI 10.1007/978-3-030-49392-9_13
   Wake B., 2003, INVEST in Good Stories, and SMART Tasks
   Wang X., 2014, Current advances on genetic resistance to rice blast disease, P195
   Zuber N, 2022, HUM SOC SCI COMMUN, V9, DOI 10.1057/s41599-022-01206-4
NR 63
TC 0
Z9 0
U1 5
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2024
VL 167
AR 107379
DI 10.1016/j.infsof.2023.107379
EA DEC 2023
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FA4P7
UT WOS:001143012700001
DA 2024-07-18
ER

PT J
AU Mangla, C
   Rani, S
   Abdelsalam, A
AF Mangla, Cherry
   Rani, Shalli
   Abdelsalam, Ahmed
TI QLSN: Quantum key distribution for large scale networks
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quantum computing; Security; Large scale networks; QKD; Qiskit
ID CRYPTOGRAPHY; MANAGEMENT; PROTOCOL; PROOF
AB Context: Key management among large-scale networks is still a challenging issue considering the limited information about adversaries (whether quantum or classical). One solution for such an issue is to use quantum-inspired to which refers to a technology, an algorithm, or a strategy that uses conventional computers to execute quantum physics concepts. These techniques make an effort to imitate particular quantum computing properties, such as superposition, entanglement, or quantum parallelism, in order to more effectively or creatively handle particular issues. It can provide security against all types of intruders.Objectives: In this article, inspired by Quantum Key Distribution, we proposed a key-management protocol for enhancing the security and reliability of the network. Two major objectives have been taken into consideration during the proposal of QLSN (proposed protocol), (i) reduced risk if the network needs to transfer the long keys and (ii) a reliable network to transmit the information safely.Methods: (i) QLSN is proposed in the place of the classical Diffie-Hellman key exchange algorithm, which makes it secure against attacks during the transmission of data through the IPSec tunnel. (ii) Risk Analysis is performed on 1-bit, 2 bits, 15 bits, and 50 bits sizes of data. Data transmission is tested for risk analysis and the probability of attacks is checked under different scenarios.Results: The simulation results illustrated the better performance of the proposed protocol in different scenarios with large-scale networks compared to the existing Diffie-Hellman key exchange used in the IPSec protocol proposed by CISCO. Using quantum algorithms and processing advantages, quantum adversaries may be able to take advantage of weaknesses in conventional security systems. Conclusion: An essential step in determining and validating the viability of proposed protocol inside a quantum computing framework is the integration of a QLSN protocol into the IBM Qiskit simulator. By addressing pressing concerns, this validation approach clarifies the performance and security consequences of large-scale networks. Looking ahead, the fusion of artificial intelligence and quantum computing promises fresh methods for key management that will improve network security. In addition, Turing machines-classical computing tools that bridge the gap between the classical and quantum computing paradigms-will continue to play crucial roles in the complex world of large-scale networks.
C1 [Mangla, Cherry; Rani, Shalli] Chitkara Univ, Chitkara Univ Inst Engn & Technol, Rajpura 140401, Punjab, India.
   [Abdelsalam, Ahmed] Lappeenranta Lahti Univ Technol, Software Engn Dept, Lappeenranta 53851, Finland.
   [Abdelsalam, Ahmed] Nok Bell Labs, Espoo 02610, Finland.
C3 Chitkara University, Punjab; Lappeenranta-Lahti University of Technology
   LUT
RP Rani, S (corresponding author), Chitkara Univ, Chitkara Univ Inst Engn & Technol, Rajpura 140401, Punjab, India.
EM shallir79@gmail.com; ahmed.abdelsalam@lut.fi
RI Rani, Shalli/AGY-9513-2022
OI Rani, Shalli/0000-0002-8474-9435; Mangla, Cherry/0000-0002-2476-9063
CR Ahn J, 2022, ENERGIES, V15, DOI 10.3390/en15030714
   [Anonymous], 1983, Coding, V15, P78
   Arrighi P, 2006, INT J QUANTUM INF, V4, P883, DOI 10.1142/S0219749906002171
   Bajpai P, 2020, IT PROF, V22, P21, DOI 10.1109/MITP.2020.2977285
   BENNETT CH, 1992, PHYS REV LETT, V68, P3121, DOI 10.1103/PhysRevLett.68.3121
   Bennett CH, 2014, NAT COMPUT, V13, P453, DOI 10.1007/s11047-014-9453-6
   Bennett Charles H., 2020, arXiv
   BENOR M, 1990, IEEE T INFORM THEORY, V36, P40, DOI 10.1109/18.50372
   Bollapragada V., 2005, IPsec VPN Design
   Brassard G, 2000, PHYS REV LETT, V85, P1330, DOI 10.1103/PhysRevLett.85.1330
   Brassard G., 1994, Advances in Cryptology EUROCRYPT93, P410, DOI [10.1007/3-540-48285-7_35, DOI 10.1007/3-540-48285-7_35]
   Braunstein SL, 2005, REV MOD PHYS, V77, P513, DOI 10.1103/RevModPhys.77.513
   Broadbent A, 2016, DESIGN CODE CRYPTOGR, V78, P351, DOI 10.1007/s10623-015-0157-4
   Bruss D, 1998, PHYS REV LETT, V81, P3018, DOI 10.1103/PhysRevLett.81.3018
   Chaudhary N., 2006, 2006 6 IEEE C NAN IE, V2, P882
   Childs A.M., 2001, arXiv
   Curty M, 2019, NPJ QUANTUM INFORM, V5, DOI 10.1038/s41534-019-0175-6
   Daffertshofer A, 2002, PHYS REV LETT, V88, DOI 10.1103/PhysRevLett.88.210601
   Damgård IB, 2008, SIAM J COMPUT, V37, P1865, DOI 10.1137/060651343
   Devetak I, 2005, P ROY SOC A-MATH PHY, V461, P207, DOI 10.1098/rspa.2004.1372
   Faisal M., 2020, COMPLEXITY 2020
   Gao RQ, 2022, Arxiv, DOI arXiv:2107.09329
   Hayashi M, 2022, IEEE ACCESS, V10, P29040, DOI 10.1109/ACCESS.2022.3159331
   Kumar A, 2021, ARCH COMPUT METHOD E, V28, P3831, DOI 10.1007/s11831-021-09561-2
   Lloyd S, 2002, NATURE, V416, P18, DOI 10.1038/416018a
   Lo HK, 2005, PHYS REV LETT, V94, DOI 10.1103/PhysRevLett.94.230504
   Lo HK, 2005, J CRYPTOL, V18, P133, DOI 10.1007/s00145-004-0142-y
   Merkle R. C., 1987, C THEOR APPL CRYPT T, P369, DOI [DOI 10.1007/3-540-48184-2_32, DOI 10.1007/3-540-48184-2]
   Moghadam MF, 2020, ELECTR POW SYST RES, V178, DOI 10.1016/j.epsr.2019.106024
   Nanda A, 2018, IEEE CONSUM ELECTR M, V7, P57, DOI 10.1109/MCE.2018.2851741
   Nielsen M. A., 2010, QUANTUM COMPUTATION, DOI [10.1017/cbo9780511976667, DOI 10.1017/CBO9780511976667]
   Patnaik R., 2021, Intelligent System Design, P723, DOI DOI 10.1007/978-981-15-5400-168
   Perti A., 2021, P INT C BIG DAT MACH, V9, P9
   Raddo T.R., 2019, 2019 21 INT C TRANSP, P1
   Saritha A, 2022, WIRELESS PERS COMMUN, V127, P2365, DOI 10.1007/s11277-021-08805-5
   Shor PW, 2000, PHYS REV LETT, V85, P441, DOI 10.1103/PhysRevLett.85.441
   Tian YL, 2020, IEEE T IND INFORM, V16, P6193, DOI 10.1109/TII.2020.2965975
   Touqeer H, 2021, J SUPERCOMPUT, V77, P14053, DOI 10.1007/s11227-021-03825-1
   Veltri L, 2013, AD HOC NETW, V11, P2724, DOI 10.1016/j.adhoc.2013.05.009
   Vijayakumar P, 2016, IEEE T INTELL TRANSP, V17, P1015, DOI 10.1109/TITS.2015.2492981
   Wang S, 2019, PHYS REV X, V9, DOI 10.1103/PhysRevX.9.021046
   Wiesner S., 1983, SIGACT News, V15, P78, DOI 10.1145/1008908.1008920
   WOOTTERS WK, 1982, NATURE, V299, P802, DOI 10.1038/299802a0
   Zhou HY, 2022, IEEE ACM T NETWORK, V30, P1328, DOI 10.1109/TNET.2021.3136943
NR 44
TC 0
Z9 0
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2024
VL 165
AR 107349
DI 10.1016/j.infsof.2023.107349
EA OCT 2023
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X9CV8
UT WOS:001101358700001
OA Bronze
DA 2024-07-18
ER

PT J
AU Wang, Y
   Zhou, AH
   Huang, Q
   Wang, XY
   Jiang, B
AF Wang, Ye
   Zhou, Aohui
   Huang, Qiao
   Wang, Xiaoyang
   Jiang, Bo
TI PAREI: A progressive approach for Web API recommendation by combining
   explicit and implicit information
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Web API recommendation; Explicit information; Implicit information; Deep
   learning
ID SERVICE
AB Context: Mashup is an application with specific functions by combining Web APIs that can provide services or data on the Internet, thus avoiding the behavior of repeatedly building wheels. Recommending suitable Web APIs in the vast number of Web APIs on the Internet for Mashup developers has become a challenging problem. Previous studies often fail to fully exploit and effectively synthesize various types of information between Web APIs and Mashups.Objective: This work proposes a Web API recommendation approach -PAREI by combining both explicit and implicit information to progressively optimize the recommendation results.Methods: First, PAREI uses the explicit structural information between Mashups and Web APIs to construct the Call Relationship Network (CRN). Second, PAREI calculates explicit semantic similarities between developer's requirement and Mashups to obtain candidate Mashup nodes in CRN. Then PAREI further mines the implicit structural information between Mashups. A combined similarity score for each Mashup node is calculated. Finally, PAREI uses CRN to obtain candidate Web APIs related to candidate Mashup nodes, and integrates implicit semantic information of Web APIs with combined scores of corresponding Mashups, so as to obtain Top-K Web APIs.Results: Comparison experiments show that PAREI has significantly improved the Recall, Precision, and MAP metrics compared with other approaches. Ablation experiments show that different types of information play various roles in Web API recommendation, and different combination modes have different effects on the recommendation results.Conclusion: This work constructs the PAREI model, which combines explicit and implicit information to obtain Web API recommendation results through a progressive strategy. According to the experiment results, we believe that the PAREI approach can help Mashup developers to find demanded Web APIs rapidly and accurately.
C1 [Wang, Ye; Zhou, Aohui; Huang, Qiao; Jiang, Bo] Zhejiang Gongshang Univ, Sch Comp Sci & Technol, Hangzhou, Peoples R China.
   [Wang, Xiaoyang] Univ New South Wales, Sch Comp Sci & Engn, Sydney, Australia.
C3 Zhejiang Gongshang University; University of New South Wales Sydney
RP Huang, Q (corresponding author), Zhejiang Gongshang Univ, Sch Comp Sci & Technol, Hangzhou, Peoples R China.
EM qiaohuang@zjgsu.edu.cn
OI Wang, Ye/0000-0003-3169-0211
FU Natural Science Foundation of Zhe-jiang Province, China [LY21F020011];
   Key Re-search and Development Program of Zhejiang Province [2021C01162]
FX This work was supported by the Natural Science Foundation of Zhe-jiang
   Province, China [grant number LY21F020011] ; and the Key Re-search and
   Development Program of Zhejiang Province [grant number 2021C01162] .
CR Cao BQ, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P212, DOI 10.1109/ICWS.2016.35
   Cao YC, 2019, P IEEE I C SERV COMP, P189, DOI 10.1109/SCC.2019.00040
   Chune Li, 2013, 2013 IEEE International Conference on Services Computing (SCC), P49, DOI 10.1109/SCC.2013.107
   Elshater Y, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P711, DOI 10.1109/ICWS.2015.99
   Gao TY, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6894
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Guosheng Kang, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P186, DOI 10.1109/ICWS.2012.86
   Kang GS, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P330, DOI 10.1109/ICWS49710.2020.00050
   Klusch M, 2016, KUNSTL INTELL, V30, P139, DOI 10.1007/s13218-015-0415-7
   Le Quoc V., 2014, P INT C MACH LEARN I
   Lei C, 2020, INFORM SCIENCES, V513, P98, DOI 10.1016/j.ins.2019.10.004
   Lo W, 2015, ENG APPL ARTIF INTEL, V38, P14, DOI 10.1016/j.engappai.2014.10.010
   Ma YT, 2021, Arxiv, DOI arXiv:2101.02836
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Rau D, 2022, LECT NOTES COMPUT SC, V13186, P207, DOI 10.1007/978-3-030-99739-7_24
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Sagayaraj S., 2020, International Journal of Information Technology, V12, P983, DOI 10.1007/s41870-020-00479-9
   Sangers J, 2013, EXPERT SYST APPL, V40, P4660, DOI 10.1016/j.eswa.2013.02.011
   Shi M., 2019, 2019 INT JOINT C NEU, P1, DOI DOI 10.1109/IJCNN.2019.8852438
   Shi M, 2019, IEEE T PARALL DISTR, V30, P1077, DOI 10.1109/TPDS.2018.2877363
   Wang F, 2022, IEEE T COMPUT SOC SY, V9, P986, DOI 10.1109/TCSS.2021.3064213
   Wang X, 2021, WORLD WIDE WEB, V24, P869, DOI 10.1007/s11280-021-00894-3
   Wu D, 2007, IEEE COMP SOC ANN, P325, DOI 10.1109/ISVLSI.2007.45
   Xia BF, 2015, IEEE T SERV COMPUT, V8, P674, DOI 10.1109/TSC.2014.2379251
   Xie WK, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1015, DOI 10.1145/3368089.3409731
   Xiong RB, 2018, EXPERT SYST APPL, V110, P191, DOI 10.1016/j.eswa.2018.05.039
   Yu L, 2014, KSII T INTERNET INF, V8, P2743, DOI 10.3837/tiis.2014.08.010
   Zheng ZB, 2011, IEEE T SERV COMPUT, V4, P140, DOI 10.1109/TSC.2010.52
   Zhu YQ, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P87, DOI 10.1109/ICWS53863.2021.00024
NR 29
TC 1
Z9 1
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2023
VL 162
AR 107269
DI 10.1016/j.infsof.2023.107269
EA JUN 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L9TC8
UT WOS:001026614200001
DA 2024-07-18
ER

PT J
AU Tanzil, MH
   Sarker, M
   Uddin, G
   Iqbal, A
AF Tanzil, Minaoar Hossain
   Sarker, Masud
   Uddin, Gias
   Iqbal, Anindya
TI A mixed method study of DevOps challenges
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE DevOps; CI; CD; Jenkins; Infrastructure as code
AB Context: DevOps practices combine software development and IT (Information Technology) operations. The continuous needs for rapid but quality software development requires the adoption of high-quality DevOps tools. There is a growing number of DevOps related posts in popular online developer forum Stack Overflow (SO). While previous research analyzed SO posts related to build/release engineering, we are aware of no research that specifically focused on DevOps related discussions.Objective: This paper aims to learn the challenges developers face while using the currently available DevOps tools and techniques along with the organizational challenges in DevOps practices. Method: We conduct an empirical study by applying topic modeling on 174K SO posts that contain DevOps discussions. We then validate and extend the empirical study findings with a survey of 21 professional DevOps practitioners.Results: We find that: (1) There are 23 DevOps topics grouped into four categories: Cloud & CI/CD Tools, Infrastructure as Code, Container & Orchestration, and Quality Assurance. (2) The topic category 'Cloud & CI/CD Tools' contains the highest number of topics (10) which cover 48.6% of all questions in our dataset, followed by the category Infrastructure as Code (28.9%). (3) The file management is the most popular topic followed by Jenkins Pipeline, while infrastructural Exception Handling and Jenkins Distributed Architecture are the most difficult topics (with least accepted answers). (4) In the survey, developers mention that it requires hands-on experience before current DevOps tools can be considered easy. They raised the needs for better documentation and learning resources to learn the rapidly changing DevOps tools and techniques. Practitioners also emphasized on the formal training approach by the organizations for DevOps skill development.Conclusion: Architects and managers can use the findings of this research to adopt appropriate DevOps technologies, and organizations can design tool or process specific DevOps training programs.
C1 [Tanzil, Minaoar Hossain; Uddin, Gias] Univ Calgary, Calgary, AB, Canada.
   [Sarker, Masud; Iqbal, Anindya] Bangladesh Univ Engn & Technol, Dhaka, Bangladesh.
C3 University of Calgary; Bangladesh University of Engineering & Technology
   (BUET)
RP Tanzil, MH (corresponding author), Univ Calgary, Calgary, AB, Canada.
EM minaoar.tanzil@ucalgary.ca
OI Uddin, Gias/0000-0003-1376-095X; Tanzil, Minaoar
   Hossain/0000-0002-3323-4917
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2021-02575]; University of Calgary; Alberta Graduate Excellence
   Scholarship
FX Acknowledgment Gias Uddin and Minaoar Hossain Tanzil were supported by
   Natural Sciences and Engineering Research Council of Canada
   (RGPIN-2021-02575) , University of Calgary, and Alberta Graduate
   Excellence Scholarship.
CR A. of the Study, 2023, REPLICATION PACKAGE
   Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Aiello B., 2016, Agile application lifecycle management: Using DevOps to drive process improvement
   Andrew M., 2002, MALLET MACHINE LEARN
   [Anonymous], 2020, STACK EXCHANGE 2020
   [Anonymous], 2012, EMPIR SOFTW ENG
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bandeira Alan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P255, DOI 10.1109/MSR.2019.00051
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bosch J., 2014, CONTINUOUS SOFTWARE, P3
   Bowen X., 2019, P 32 IEEEACM INT C A
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cito J., 2020, 2017 IEEE ACM 14 INT
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Fincher S, 2005, EXPERT SYST, V22, P89, DOI 10.1111/j.1468-0394.2005.00299.x
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Haque M. U.L., 2020, P 14 ACMIEEE INT S E
   Hassan A., 2012, EMPIR SOFTW ENG, V19, P619
   Hudson W., 2013, ENCY HUMAN COMPUTER, V2nd
   Jabbari R, 2016, PROCEEDINGS OF THE XP2016 SCIENTIFIC WORKSHOPS, DOI 10.1145/2962695.2962707
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   KRUSKAL WH, 1957, J AM STAT ASSOC, V52, P356, DOI 10.2307/2280906
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Loukides M., 2012, What is DevOps?
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Lwakatare LE, 2019, INFORM SOFTWARE TECH, V114, P217, DOI 10.1016/j.infsof.2019.06.010
   Lwakatare LE, 2015, LECT NOTES BUS INF P, V212, P212, DOI 10.1007/978-3-319-18612-2_19
   Mens T., 2014, EVOLVING SOFTWARE SY, V190
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   NLTK, 2016, PROC WORKSHOP SEMANT
   Openja M, 2020, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME46990.2020.00020
   Overflow S., 2020, STACK OV QUEST
   P. Labs, 2021, DEC DEVOPS
   P. Labs, 2015, 2015 STAT DEVOPS REP
   P. Labs, 2021, STAT DEVOPS REP
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Porter M.F., 1997, Readings in information retrieval
   Rahman A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P16, DOI 10.1145/3194760.3194769
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   Ren XX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P151, DOI 10.1109/ASE.2019.00024
   Roche J., 2013, Queue, V111, P20
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Senapathi M., 2018, ser. EASE'18, P57
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Tan CM, 2002, INFORM PROCESS MANAG, V38, P529, DOI 10.1016/S0306-4573(01)00045-0
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Upguard, 2021, DEVOPS STATS DOUBT
   Van Antwerp M., 2010, 43 HAWAII INT C SYST, P1, DOI [10. 1109/HICSS.2010.385., DOI 10.1109/HICSS.2010.385]
   Vogt W.P., 2015, SAGE DICT STAT METHO, V5th
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zahedi Mansooreh, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P41, DOI 10.1145/3383219.3383224
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 66
TC 1
Z9 1
U1 9
U2 24
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107244
DI 10.1016/j.infsof.2023.107244
EA MAY 2023
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I4IZ2
UT WOS:001002446300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, Y
   Xiong, A
   Xiao, Y
   Chen, ZY
AF Zhang, Yang
   Xiong, Ao
   Xiao, Yu
   Chen, Ziyang
TI A new combination method based on Pearson coefficient and information
   entropy for multi-sensor data fusion
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Evidence theory; Combination rule; Conflicting evidence; Data fusion
ID S-EVIDENCE THEORY; DIVERGENCE MEASURE
AB Context: When confronted with greatly contradictory evidence, the Dempster-Shafer evidence theory may exhibit certain constraints that lead to fused results which are inconsistent with common understanding. Within the existing Internet of Things landscape, there are occasions when a small number of sensors may malfunction and contradict each other.Objective: This study addresses contradictory information by processing the bodies of evidence beforehand. Additionally, an enhanced fusion technique for conflicting evidence is introduced, which employs Pearson correlation coefficient and information entropy.Methods: We propose a novel combination approach for multi-sensor data fusion based on evidence theory. Firstly, the credibility for each piece of evidence is computed through amalgamating correlation measurements with evidence distance between two pieces of evidence. Next, based on the information volume, the credibility is adjusted, resulting in the final weighting factor for the evidence. The reasonable weighted average evidence is then created using the weighting factor of each piece of evidence. Finally, the combined result is obtained by applying Dempster's combination rule, which combines the weighted average evidence N -1 times.Results: Upon comparing the fusion results, it has been observed that the performance of the proposed method surpasses that of other methods. Our method can effectively minimize the ramifications of profoundly conflicting evidence in the fusion process, resulting in more logical fusion results than other methods.Conclusions: The outcomes of numerical examples expose that the technique put forward in this manuscript can manage highly conflicting evidence, thereby yielding fusion results that are more precise and conducive to making sound decisions.
C1 [Zhang, Yang; Xiong, Ao; Xiao, Yu; Chen, Ziyang] Beijing Jiaotong Univ, Sch Elect & Informat Engn, Key Lab Commun & Informat Syst, Beijing Municipal Commiss Educ, Beijing 100044, Peoples R China.
C3 Beijing Municipal Commission of Education; Beijing Jiaotong University
RP Zhang, Y (corresponding author), Beijing Jiaotong Univ, Sch Elect & Informat Engn, Key Lab Commun & Informat Syst, Beijing Municipal Commiss Educ, Beijing 100044, Peoples R China.
EM zhang.yang@bjtu.edu.cn
OI , Yang/0000-0001-7070-081X
FU Fundamental Research Funds for the Central Universities [2022JBMC053]
FX This work was supported by the Fundamental Research Funds for the
   Central Universities (Grant No. 2022JBMC053) .
CR Al-Sharman MK, 2018, APPL SOFT COMPUT, V69, P149, DOI 10.1016/j.asoc.2018.04.025
   Bo X., 2021, J COMPUT TAIPEI, V32, P257
   Bouchard M, 2013, INT J APPROX REASON, V54, P615, DOI 10.1016/j.ijar.2013.01.006
   Chaudhari B., 2022, INT J PERFORM ENG, V18, P92
   Chen L, 2018, MATH PROBL ENG, V2018, DOI 10.1155/2018/5858272
   Cheng Y., 2022, Int. J. Perform. Eng., V18, P463
   DEMPSTER AP, 1967, ANN MATH STAT, V38, P325, DOI 10.1214/aoms/1177698950
   Deng Y, 2004, DECIS SUPPORT SYST, V38, P489, DOI 10.1016/j.dss.2004.04.015
   Deng Y, 2016, CHAOS SOLITON FRACT, V91, P549, DOI 10.1016/j.chaos.2016.07.014
   Deng Z, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20020381
   Duan ZH, 2018, INT J ADV MANUF TECH, V96, P803, DOI 10.1007/s00170-017-1474-8
   Dubois D., 1988, Computational Intelligence, V4, P244, DOI 10.1111/j.1467-8640.1988.tb00279.x
   Fan XF, 2006, PATTERN RECOGN LETT, V27, P366, DOI 10.1016/j.patrec.2005.08.025
   Jaiswal P., 2021, TURK J COMPUT MATH E, V12, P3857
   Joussleme A.-L., 2001, Information Fusion, V2, P91, DOI 10.1016/S1566-2535(01)00026-4
   Kashinath SA, 2021, IEEE ACCESS, V9, P51258, DOI 10.1109/ACCESS.2021.3069770
   Lin Z, 2021, SCI REP-UK, V11, DOI 10.1038/s41598-021-88814-3
   Liu PD, 2020, INT J FUZZY SYST, V22, P653, DOI 10.1007/s40815-019-00718-7
   Liu ZG, 2020, IEEE T FUZZY SYST, V28, P618, DOI 10.1109/TFUZZ.2019.2911915
   Pan LP, 2022, INFORM SCIENCES, V608, P251, DOI 10.1016/j.ins.2022.06.063
   Pan Y, 2020, INFORM FUSION, V60, P121, DOI 10.1016/j.inffus.2020.02.003
   Qiang CH, 2022, APPL INTELL, V52, P7832, DOI 10.1007/s10489-021-02797-2
   Qiao D, 2020, J AMB INTEL HUM COMP, V11, P2187, DOI 10.1007/s12652-019-01251-z
   Qiu S, 2022, INFORM FUSION, V80, P241, DOI 10.1016/j.inffus.2021.11.006
   Shafer G, 1976, MATH THEORY EVIDENCE, DOI DOI 10.1080/00401706.1978.10489628
   Shamlou A, 2021, INT J ELEC POWER, V129, DOI 10.1016/j.ijepes.2021.106854
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Smets P, 2007, INFORM FUSION, V8, P387, DOI 10.1016/j.inffus.2006.04.003
   Sureeyatanapas P, 2020, SYMMETRY-BASEL, V12, DOI 10.3390/sym12071109
   Tian Y, 2020, INT J FUZZY SYST, V22, P2333, DOI 10.1007/s40815-020-00911-z
   Wang HF, 2021, ENG APPL ARTIF INTEL, V97, DOI 10.1016/j.engappai.2020.104030
   Wu Q, 2019, COMPUT IND ENG, V127, P954, DOI 10.1016/j.cie.2018.11.029
   Xiao FY, 2020, INFORM SCIENCES, V514, P462, DOI 10.1016/j.ins.2019.11.022
   Xiao FY, 2019, INFORM FUSION, V46, P23, DOI 10.1016/j.inffus.2018.04.003
   Xiao FY, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18051487
   YAGER RR, 1987, INFORM SCIENCES, V41, P93, DOI 10.1016/0020-0255(87)90007-7
   Yang G, 2022, INFORM FUSION, V77, P29, DOI 10.1016/j.inffus.2021.07.016
   Yuan KJ, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-2205-6
   Zadeh L. A., 1986, AI magazine, V7, P85, DOI 10.1609/aimag.v7i2.542
   Zhang MM, 2022, IEEE T GEOSCI REMOTE, V60, DOI 10.1109/TGRS.2021.3093334
   Zhang Y, 2022, IET COMMUN, V16, P1344, DOI 10.1049/cmu2.12324
   Zhang Y, 2017, IEEE ACCESS, V5, P21585, DOI 10.1109/ACCESS.2017.2758419
   Zhang Z, 2021, STRUCT MULTIDISCIP O, V63, P2935, DOI 10.1007/s00158-021-02863-w
   Zhang ZJ, 2014, SENSORS-BASEL, V14, P9562, DOI 10.3390/s140609562
   Zhou DY, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0176832
   Zhu CS, 2021, INFORM SCIENCES, V570, P306, DOI 10.1016/j.ins.2021.04.059
   Zhu DQ, 2022, IEEE T CYBERNETICS, V52, P9414, DOI 10.1109/TCYB.2021.3055770
NR 47
TC 5
Z9 7
U1 9
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2023
VL 161
AR 107248
DI 10.1016/j.infsof.2023.107248
EA MAY 2023
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I2YK3
UT WOS:001001487300001
DA 2024-07-18
ER

PT J
AU Chen, JF
   Lv, TX
   Cai, SH
   Song, L
   Yin, S
AF Chen, Jinfu
   Lv, Tianxiang
   Cai, Saihua
   Song, Luo
   Yin, Shang
TI A novel detection model for abnormal network traffic based on
   bidirectional temporal convolutional network
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Detection model; Abnormal network traffic; Deep learning; Bidirectional
   temporal convolutional network; Semantic feature
ID LEARNING APPROACH; INTRUSION
AB Context: The increasingly complex and diverse network environment has increased traffic intrusion behaviors, but the traditional machine learning-based model has the problems of time-consuming and low detection accuracy due to the need of manually selecting features. Therefore, it is very important to construct an automatically abnormal network traffic detection model with a high detection accuracy. Objective: The goal of this paper is to train the network traffic through deep learning technology to generate an automatic abnormal network traffic detection model without manual design of features. Methods: We propose an abnormal network traffic detection model called BiTCN based on bidirectional time convolution network, it first uses temporal convolutional network (TCN) model to better grasp the sequence characteristics of network traffic, and then uses Exponential Linear Unit (ELU) activation function to replace ReLU in the model training stage to avoid the problem of neuron "death"leading to the reduction of detection accuracy, as well as improves the original one-way model to a two-way model to capture the two-way semantic fusion characteristics of network traffic. Results: We evaluate the efficiency and effectiveness of the proposed BiTCN model by comparing it with different models on the CTU and USTC-TFC2016 datasets. The experimental results show that the proposed BiTCN model outperforms other models in terms of the precision, accuracy, recall and F1-measure. Conclusion: In this paper, we propose a novel detection model for abnormal network traffic based on bidirectional temporal convolutional network , it solves some shortcomings and limitations of existing models, and obtains a high detection accuracy of abnormal network traffic with a high stability.
C1 [Chen, Jinfu; Lv, Tianxiang; Cai, Saihua; Song, Luo; Yin, Shang] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Peoples R China.
   Jiangsu Univ, Key Lab Secur Technol Ind Cyberspace, Zhenjiang 212013, Peoples R China.
C3 Jiangsu University; Jiangsu University
RP Cai, SH (corresponding author), Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Peoples R China.
EM caisaih@ujs.edu.cn
FU National Natural Science Foundation of China (NSFC) [62172194, 62202206,
   U1836116]; Natural Science Foundation of Jiangsu Province [BK20220515];
   Leading-edge Technology Program ofJiangsu Natural Science Foundation
   [BK20202001]; China Postdoctoral Science Foundation [2021M691310];
   Postdoctoral Science Foundation of Jiangsu Province [2021K636C]; Natural
   Science Foundation of the Jiangsu Higher Education Institutions
   [21KJB520031]; Future Network Scientific Research Fund Project
   [FNSRFP-2021-YB-50]; Qinglan Project of Jiangsu Province
FX This work was partly supported by the National Natural Science
   Foundation of China (NSFC) (Grant nos. 62172194, 62202206 andU1836116),
   the Natural Science Foundation of Jiangsu Province(Grant no.
   BK20220515), the Leading-edge Technology Program ofJiangsu Natural
   Science Foundation (Grant no. BK20202001), the China Postdoctoral
   Science Foundation (Grant no. 2021M691310),the Postdoctoral Science
   Foundation of Jiangsu Province (Grant no.2021K636C), the Natural Science
   Foundation of the Jiangsu Higher Education Institutions (Grant no.
   21KJB520031), the Future NetworkScientific Research Fund Project (Grant
   no. FNSRFP-2021-YB-50), andthe Qinglan Project of Jiangsu Province.
CR Akgun D, 2022, COMPUT SECUR, V118, DOI 10.1016/j.cose.2022.102748
   Alshammari R, 2009, IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN CYBER SECURITY, P167
   Anderson B, 2016, AISEC'16: PROCEEDINGS OF THE 2016 ACM WORKSHOP ON ARTIFICIAL INTELLIGENCE AND SECURITY, P35, DOI 10.1145/2996758.2996768
   [Anonymous], 2020, CTU U DATASET
   Bai H., 2021, SECUR COMMUN NETW, V2021, P1
   Bai SJ, 2018, Arxiv, DOI [arXiv:1803.01271, DOI 10.48550/ARXIV.1803.01271]
   Bujlow T, 2015, COMPUT NETW, V76, P75, DOI 10.1016/j.comnet.2014.11.001
   Chen JF, 2022, IET SOFTW, V16, P527, DOI 10.1049/sfw2.12067
   Chen JF, 2021, IEEE INT C S Q R S, P768, DOI 10.1109/QRS54544.2021.00086
   Clevert DA, 2016, Arxiv, DOI arXiv:1511.07289
   Fu J., 2022, BMC PLANT BIOL, V214
   He Y., 2019, J PHYS C SER, V1213, P042050, DOI [DOI 10.1088/1742-6596/1213/4/042050, 10.1088/1742-6596/1213/4/042050]
   Kurundkar GD., 2012, INT J ENG RES APPL, V2, P1288
   Goodman EL, 2020, Arxiv, DOI arXiv:2004.14477
   Lan J., 2022, COMPUT SECUR, V123
   Marin Gonzalo, 2019, 2019 IEEE Security and Privacy Workshops (SPW). Proceedings, P36, DOI 10.1109/SPW.2019.00019
   Moore A. W., 2005, Performance Evaluation Review, V33, P50, DOI 10.1145/1071690.1064220
   Nayef BH, 2022, MULTIMED TOOLS APPL, V81, P2065, DOI 10.1007/s11042-021-11593-6
   Nicholas L, 2018, J INTELL FUZZY SYST, V35, P5947, DOI 10.3233/JIFS-169836
   Okada Y., 2011, Proceedings of the 2011 Tenth International Conference on Machine Learning and Applications (ICMLA 2011), P358, DOI 10.1109/ICMLA.2011.162
   Ozawa K, 2019, MIDWEST SYMP CIRCUIT, P323, DOI [10.1109/mwscas.2019.8885057, 10.1109/MWSCAS.2019.8885057]
   Pedamonti D, 2018, Arxiv, DOI [arXiv:1804.02763, 10.48550/arXiv.1804.02763]
   Prasse P, 2017, IEEE SEC PRIV WORKS, P205, DOI 10.1109/SPW.2017.8
   Roy B, 2018, 2018 28TH INTERNATIONAL TELECOMMUNICATION NETWORKS AND APPLICATIONS CONFERENCE (ITNAC), P57
   Shams EA, 2018, WIREL NETW, V24, P1821, DOI 10.1007/s11276-016-1439-0
   Thay C., 2015, P 2015 COMP SCI ENG, P1, DOI DOI 10.1109/ICSEC.2015.7401433
   Wang SS, 2018, 2018 IEEE/ACM 26TH INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS)
   Wang SS, 2018, IEEE T INF FOREN SEC, V13, P1096, DOI 10.1109/TIFS.2017.2771228
   Wang W, 2017, 2017 31ST INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING (ICOIN), P712, DOI 10.1109/ICOIN.2017.7899588
   Wang WP, 2020, IEEE T RELIAB, V69, P174, DOI 10.1109/TR.2019.2927285
   Wu F, 2021, INT J WIREL INF NETW, V28, P262, DOI 10.1007/s10776-021-00520-z
   Yang J, 2021, IEEE T INF FOREN SEC, V16, P3538, DOI 10.1109/TIFS.2021.3083422
   Yin CL, 2017, IEEE ACCESS, V5, P21954, DOI 10.1109/ACCESS.2017.2762418
   You JX, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2236, DOI 10.1145/3308558.3313747
   Zhang B, 2018, SECUR COMMUN NETW, DOI 10.1155/2018/1914980
   Zhang HP, 2020, COMPUT NETW, V177, DOI 10.1016/j.comnet.2020.107315
   Zhang JW, 2020, COMPUT SECUR, V89, DOI 10.1016/j.cose.2019.101681
NR 37
TC 5
Z9 5
U1 24
U2 55
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2023
VL 157
AR 107166
DI 10.1016/j.infsof.2023.107166
EA FEB 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8X5GN
UT WOS:000932041100001
DA 2024-07-18
ER

PT J
AU Alonso, S
   Kalinowski, M
   Ferreira, B
   Barbosa, SDJ
   Lopes, H
AF Alonso, Silvio
   Kalinowski, Marcos
   Ferreira, Bruna
   Barbosa, Simone D. J.
   Lopes, Helio
TI A systematic mapping study and practitioner insights on the use of
   software engineering practices to develop MVPs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE MVP; Minimum viable product; Software engineering; Systematic mapping;
   Focus group
ID COMPANIES; STARTUPS
AB Background: Many startup environments and even traditional software companies have embraced the use of MVPs (Minimum Viable Products) to allow quickly experimenting solution options. The MVP concept has influenced the way in which development teams apply Software Engineering (SE) practices. However, the overall understanding of this influence of MVPs on SE practices is still poor.Objective: Our goal is to characterize the publication landscape on practices that have been used in the context of software MVPs and to gather practitioner insights on the identified practices.Method: We conducted a systematic mapping study using a hybrid search strategy that consists of a database search and parallel forward and backward snowballing. Thereafter, we discussed the mapping study results in two focus groups sessions involving twelve industry practitioners that extensively use MVPs in their projects to capture their perceptions on the findings of the mapping study. Results: We identified 33 papers published between 2013 and 2020. We observed some trends related to MVP ideation (or MVP conception) and evaluation practices. For instance, regarding ideation, we found six different approaches (e.g., Design Thinking, Lean Inception) and mainly informal end-user involvement practices (e.g., workshops, interviews). Regarding evaluation, there is an emphasis on end-user validations based on practices such as usability tests, A/B testing, and usage data analysis. However, there is still limited research related to MVP technical feasibility assessment and effort estimation. Practitioners of the focus group sessions reinforced the confidence in our results regarding ideation and evaluation practices, being aware of most of the identified practices. They also reported how they deal with the technical feasibility assessments (involving developers during the ideation and conducting informal experiments) and effort estimation in practice (based on expert opinion and using practices common to agile methodologies, such as Planning Poker).Conclusion: Our analysis suggests that there are opportunities for solution proposals and evaluation studies to address literature gaps concerning technical feasibility assessment and effort estimation. Overall, more effort needs to be invested into empirically evaluating the existing MVP-related practices.
C1 [Alonso, Silvio; Kalinowski, Marcos; Ferreira, Bruna; Barbosa, Simone D. J.; Lopes, Helio] Pontif Catholic Univ Rio Janeiro PUC Rio, Dept Informat, Rio De Janeiro, Brazil.
RP Alonso, S (corresponding author), Pontif Catholic Univ Rio Janeiro PUC Rio, Dept Informat, Rio De Janeiro, Brazil.
EM smarques@inf.puc-rio.br
RI Ferreira, Bruna/HZJ-4183-2023
FU Improvement of Higher Education Personnel (CAPES - Coordenacao de
   Aperfeicoamento de Pessoal de Nivel Superior), Brazil [001]; National
   Council for Scientific and Technological Development (CNPq - Conselho
   Nacional de Desenvolvimento Cientifico e Tecnologico), Brazil
   [312827/2020-2]
FX This study was financed in part by the Coordination for the Improvement
   of Higher Education Personnel (CAPES - Coordenacao de Aperfeicoamento de
   Pessoal de Nivel Superior), Brazil - Finance code 001, and by the
   National Council for Scientific and Technological Development (CNPq -
   Conselho Nacional de Desenvolvimento Cientifico e Tecnologico), Brazil -
   process 312827/2020-2.
CR Alonso S, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P62, DOI 10.1109/SEAA53835.2021.00017
   Nguyen-Duc A, 2017, LECT NOTES BUS INF P, V283, P20, DOI 10.1007/978-3-319-57633-6_2
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Caroli P., 2018, LEAN INCEPTION ALIGN
   Dennehy D, 2019, J DECIS SYST, V28, P224, DOI 10.1080/12460125.2019.1642081
   Edison H, 2018, J SYST SOFTWARE, V135, P69, DOI 10.1016/j.jss.2017.09.034
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Kalinowski M, 2020, LECT NOTES COMPUT SC, V12562, P106, DOI 10.1007/978-3-030-64148-1_7
   Kitchenham B., 2007, 2007001 EBSE
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Lenarduzzi V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P112, DOI 10.1109/SEAA.2016.56
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Mardini MT, 2019, INFORM SCIENCES, V485, P1, DOI 10.1016/j.ins.2019.02.006
   Menary J., 2021, EMERALD OPEN RES, V3, P6, DOI [DOI 10.35241/EMERALDOPENRES.14163.2, DOI 10.35241/EMERALDOPENRES.14163.1]
   Mourao E, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106294
   Mourao E, 2017, INT SYMP EMP SOFTWAR, P193, DOI 10.1109/ESEM.2017.30
   Munch J., 2013, Lecture Notes in Business Information Processing, V167, DOI DOI 10.1007/978-3-642-44930-7_9
   Nguyen-Duc A., 2016, Agile processes, in software engineering, and extreme programming, P118, DOI [10.1007/978-3-319-33515-510, DOI 10.1007/978-3-319-33515-510, DOI 10.1007/978-3-319-33515-5_10]
   Pantiuchina J, 2017, LECT NOTES BUS INF P, V283, P167, DOI 10.1007/978-3-319-57633-6_11
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Ries E, 2011, The Lean Startup
   Sommerville Ian, 2016, Software engineering 8
   Thomas D., 2019, The Pragmatic Programmer
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
NR 25
TC 1
Z9 2
U1 1
U2 11
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2023
VL 156
AR 107144
DI 10.1016/j.infsof.2022.107144
EA JAN 2023
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8F0GL
UT WOS:000919346400001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Tsai, WT
   Zhang, L
   Hu, SF
   Fan, ZZ
   Wang, QY
AF Tsai, Wei-Tek
   Zhang, Li
   Hu, Shufeng
   Fan, Zizheng
   Wang, Qianyu
TI Crowdtesting Practices and Models: An Empirical Approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Crowdsourced software testing (CST); Crowdsourced software development
   (CSD)
ID SOFTWARE-DEVELOPMENT; CROWD
AB Context: Crowdsourced software testing (CST) has received significant attention. After these years, CST has made new progress and changes.Objective: While current literature lists many CST challenges, this paper analyzes industrial CST practices, finds that many challenges already have practical solutions, summarizes their commonalities, and comes up with new CST models and processes.Method: We look for well-known CST websites to participate in and take a secret and unobtrusive approach where customers, platform managers, and fellow workers do not know that we are mainly interested in CST research. We then register at selected CST websites, collect any public documents such as whitepapers, open rules, and public training materials, and join as many test tasks as possible.Results: We analyze the confrontation and collaboration among clients, platforms, and workers in the CST sessions. Clients want to get as much bug information as possible for a small amount of pay, but workers want to get paid as much as possible for a small amount of bug information. We also study the process and method of selecting suitable CST workers. Based on these, this paper proposes three future research directions.Conclusion: Data security and privacy at CST are paramount. If this problem can be overcome, CST will have wider applications. Additionally, the integration of workers, internal workers, software automation, and artificial intelligence will be major drivers for CST. It is also critical to develop a standardized CST structure and processes, and this will push the field to grow significantly.
C1 [Tsai, Wei-Tek; Zhang, Li; Hu, Shufeng; Fan, Zizheng; Wang, Qianyu] Beihang Univ, Beijing, Peoples R China.
   [Tsai, Wei-Tek] Arizona State Univ, Tempe, AZ 85287 USA.
C3 Beihang University; Arizona State University; Arizona State
   University-Tempe
RP Zhang, L (corresponding author), Beihang Univ, Beijing, Peoples R China.
EM tsai@tiandetech.com; laridzhang@gmail.com; hushufeng@msn.com;
   1027174871@qq.com; by2006163@buaa.edu.cn
RI yang, yun/IZE-1092-2023
OI Zhang, Li/0000-0003-1535-3960
FU Chinese Ministry of Science and Technology; National Key Laboratory of
   Software Environment at Beihang University; National 973 Program
   [2013CB329601]; National Natural Science Foundation of China [61690202]
FX This work is supported by the Chinese Ministry of Science and Technology
   (Grant No. 2018YFB1402700) . This work is also supported by the National
   Key Laboratory of Software Environment at Beihang University, National
   973 Program (Grant No. 2013CB329601) , and the National Natural Science
   Foundation of China (Grant No. 61690202) .
CR Agerfalk P.J., 2015, Software sourcing in the age of open: leveraging the unknown workforce
   Alsayyari M, 2018, IEEE INT SYMP SERV O, P69, DOI 10.1109/SOSE.2018.00018
   Alyahya S, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106363
   Alyahya S, 2017, INT J ADV COMPUT SC, V8, P32
   [Anonymous], 2020, BEST CROWD TESTING C
   [Anonymous], 2022, GENTLE INTRO OBJECT
   [Anonymous], 2022, WHAT IS NATURAL LANG
   [Anonymous], 2020, 10 MOST POPULAR CROW
   [Anonymous], 2019, CROWDSOURCED TESTING
   [Anonymous], 2022, WHAT IS REINFORCEMEN
   [Anonymous], 2020, STEP BY STEP GUIDE G
   [Anonymous], 2020, GET PAID FRESSLANCE
   [Anonymous], 2010, P 11 ACM C EL COMM, DOI DOI 10.1145/1807342.1807376
   Archak N., 2010, P 19 INT C WORLD WID
   Archak N, 2009, P INT C INF SYST ATL, P200
   Bach J, 2003, Exploratory testing explained
   Bacon D.F., 2009, Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P973
   Bari E, 2016, PROCEEDINGS 2016 IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING SOSE 2016, P372, DOI 10.1109/SOSE.2016.69
   Bochkovskiy A, 2020, Arxiv, DOI arXiv:2004.10934
   Bosch Jan, 2009, 2009 13 INT SOFTW PR, V9, P111, DOI DOI 10.1145/1753235.1753251
   Bullinger A C, 2010, Innovation contests-where are we?
   Chen PH, 2005, APPL STOCH MODEL BUS, V21, P111, DOI 10.1002/asmb.537
   Corchon L.C., 2007, REV ECON DES, V11, P69, DOI [DOI 10.1007/S10058-007-0032-5, 10.1007/s10058-007-0032-5]
   DiPalantino D, 2009, 10TH ACM CONFERENCE ON ELECTRONIC COMMERCE - EC 2009, P119
   Doan A, 2011, COMMUN ACM, V54, P86, DOI 10.1145/1924421.1924442
   Dolstra E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P332, DOI 10.1109/ICST.2013.44
   Dubey A, 2016, INT CONF GLOBAL SOFT, P49, DOI 10.1109/ICGSE.2016.13
   Fan MY, 2021, PROC CVPR IEEE, P9711, DOI 10.1109/CVPR46437.2021.00959
   Fu SW, 2018, Arxiv, DOI arXiv:1810.09030
   Gaille L., 2020, 21 ADVANTAGE DISADVA
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Herbrich Ralf, 2006, Advances in neural information processing systems, V19
   Ho C.-J., 2013, P 30 INT C MACH LEAR, P534
   Hossfeld T, 2014, IEEE T MULTIMEDIA, V16, P541, DOI 10.1109/TMM.2013.2291663
   Hu ZH, 2014, 2014 IEEE 8TH INTERNATIONAL SYMPOSIUM ON SERVICE ORIENTED SYSTEM ENGINEERING (SOSE), P446, DOI 10.1109/SOSE.2014.79
   Illahi I, 2019, IEEE ACCESS, V7, P62042, DOI 10.1109/ACCESS.2019.2915604
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Jasinska-Kobus K, 2021, PR MACH LEARN RES, V130
   Kazman R, 2009, COMMUN ACM, V52, P76, DOI 10.1145/1538788.1538808
   KBV Research, 2022, GLOB CROWD TEST MARK
   Kittur A., 2010, XRDS CROSSROADS, V17, P22, DOI DOI 10.1145/1869086.1869096
   Kostova Nataliya, 2020, APPLAUSE CROWD TESTI
   Lakhani K R, 2010, HARVARD BUSINESS SCH
   Lakhani K R, 2010, Harvard Business School General Management Unit Case, P610
   Lakhani KR, 2013, NAT BIOTECHNOL, V31, P108, DOI 10.1038/nbt.2495
   LaMora A, 2012, AASDIVISION PLANETAR, V44
   Leicht N., 2016, EUR C INF SYST ECIS
   Leicht N., 2018, P 51
   Leicht N., 2015, P 28 BLED ECONF MAR
   Leicht N, 2017, IEEE SOFTWARE, V34, P62, DOI 10.1109/MS.2017.37
   Leimeister JM, 2009, J MANAGE INFORM SYST, V26, P197, DOI 10.2753/MIS0742-1222260108
   Li W., 2016, Crowdsourcing: Cloud -based Software Development
   Li W, 2015, PROGR IS, P3, DOI 10.1007/978-3-662-47011-4_1
   Mack N., 2005, QUALITATIVE RES METH, P13
   Madey G, 2008, GLOBAL INFORM TECHNO, P3296
   Malone T.W., 2019, SUPERMINDS SURPRISIN
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   MarketsandMarkets, 2022, CROWD TEST MARK TEST
   Mnih V, 2013, Arxiv, DOI [arXiv:1312.5602, 10.48550/arxiv.1312.5602]
   Musson R, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.67
   Nirkin Y, 2021, PROC CVPR IEEE, P4060, DOI 10.1109/CVPR46437.2021.00405
   Rand DG, 2009, SCIENCE, V325, P1272, DOI 10.1126/science.1177418
   RAPOPORT A, 1966, AM BEHAV SCI, V10, P10, DOI 10.1177/000276426601000303
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Santiago D, 36 TH ANN PACIFIC NW
   Sari A, 2019, J SYST SOFTWARE, V153, P200, DOI 10.1016/j.jss.2019.04.027
   Schenk E., 2009, CROWDSOURCING WHAT C
   Semantic Segmentation, 2022, WHAT IS SEMANTIC SEG
   Spinellis D, 2012, IEEE SOFTWARE, V29, P86, DOI 10.1109/MS.2012.85
   Stol KJ, 2019, IEEE T SOFTWARE ENG, V45, P237, DOI 10.1109/TSE.2017.2774297
   Stol KJ, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.52
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   Tibbetts H., MAXIMIZING CROWDSOUR
   Wang J., 2018, EFFECTIVE AUTOMATED
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Wenjun Wu, 2013, International Journal of Creative Computing, V1, P57, DOI 10.1504/IJCRC.2013.056925
   Wu WJ, 2013, FRONT COMPUT SCI-CHI, V7, P694, DOI 10.1007/s11704-013-2320-2
   Xu J., 2006, The economics of open source software development, P247
   Zanatta AL, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.151
   Zhang T, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P75, DOI 10.1109/SOSE.2017.28
   Zogaj S., 2014, J BUSINESS EC, V84, P375
NR 81
TC 0
Z9 0
U1 1
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2023
VL 154
AR 107103
DI 10.1016/j.infsof.2022.107103
EA NOV 2022
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7D9DL
UT WOS:000900782600002
DA 2024-07-18
ER

PT J
AU Gunawardena, S
   Tempero, E
   Blincoe, K
AF Gunawardena, Sanuri
   Tempero, Ewan
   Blincoe, Kelly
TI Concerns identified in code review: A fine-grained, faceted
   classification
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Code review; Code inspection; Concerns; Types; Defects; Decisions;
   Manual classification; Detection method; Detection expertise;
   Non-programmers
ID SOFTWARE; INSPECTIONS; CHALLENGES; BENEFITS
AB Context: Code review is a valuable software process that helps software practitioners to identify a variety of defects in code. Even though many code review tools and static analysis tools used to improve the efficiency of the process exist, code review is still costly. Objective: Understanding the types of defects that code reviews help to identify could reveal other means of cost improvement. Thus, our goal was to identify defect types detected in real-world code reviews, and the extent to which code review can be benefited from defect detection tools. Method: To this end, we classified 417 comments from code reviews of 7 OSS Java projects using thematic analysis. Results: We identified 116 defect types that we grouped into 15 groups to create a defect classification. Additionally, 38% of these defects could be automatically detected accurately. Conclusion: We learnt that even though many capable defect detection tools are available today, a substantial amount of defects that can be detected automatically, reach code review. Also, we identified several code review cost reduction opportunities.
C1 [Gunawardena, Sanuri; Tempero, Ewan] Univ Auckland, Sch Comp Sci, Auckland, New Zealand.
   [Blincoe, Kelly] Univ Auckland, Dept Elect Comp & Software Engn, Auckland, New Zealand.
C3 University of Auckland; University of Auckland
RP Gunawardena, S (corresponding author), Univ Auckland, Sch Comp Sci, Auckland, New Zealand.
EM sanuri.gunawardena@auckland.ac.nz; e.tempero@auckland.ac.nz;
   k.blincoe@auckland.ac.nz
RI Tempero, Ewan/D-2621-2009
OI Blincoe, Kelly/0000-0003-4092-9706
CR Agnelo J, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110451
   Al Mamun M. A., 2010, 3 SWEDISH MULTICORE, P18
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], PAC NW SOFTW QUAL C
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 2008, CAV WORKSH EXPL CONC
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], GERR COD REV
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Baum T, 2017, LECT NOTES COMPUT SC, V10611, P111, DOI 10.1007/978-3-319-69926-4_9
   Baum T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P85, DOI 10.1145/2950290.2950323
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Belli F, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.1997.630871
   Belli F, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.1996.558687
   Bin Xu, 2010, 2010 International Conference on E-Business and E-Government (ICEE 2010), P2680, DOI 10.1109/ICEE.2010.677
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cassee N, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P423, DOI [10.1109/saner48275.2020.9054818, 10.1109/SANER48275.2020.9054818]
   Chan K, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P147, DOI 10.1109/ASWEC.2001.948508
   Chawla I, 2015, P 8 IND SOFTW ENG C, DOI DOI 10.1145/2723742.2723751
   checkstyle, CHECKST TYP NAM
   checkstyle, CHECKST STAND CHECKS
   checkstyle, CHECKST NEEDBRACES
   Chen HX, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2325
   Chess B., 2007, Secure programming with static analysis
   Ciolkowski M, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1241366
   Code Review Open Platform (CROP), WELC
   Collaborator, PEER REV TOG EV YOUR
   Crucible, COLL COD REV
   Czerwonka J, 2019, COMMUN ACM, V62, P36, DOI 10.1145/3287289
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   Distefano D, 2019, COMMUN ACM, V62, P62, DOI 10.1145/3338112
   Do LNQ, 2022, IEEE T SOFTWARE ENG, V48, P835, DOI 10.1109/TSE.2020.3004525
   Ebert F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09909-5
   Edelstein O, 2003, CONCURR COMP-PRACT E, V15, P485, DOI 10.1002/cpe.654
   Eichinger F, 2010, LECT NOTES COMPUT SC, V6303, P56, DOI 10.1007/978-3-642-15585-7_7
   Fadhel M, 2020, AUTOMATING CODE REV
   Farchi E., 2008, 2008 1 INT C SOFTWAR, P404
   findbugs, FINDBUGS RET VAL MET
   findbugs, FINDBUGS BUG DESCR
   Gilb Tom, 1993, Software inspections
   GitHub Code Review, WRIT BETT COD
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   grammarly, GREAT WRIT SIMPL
   Grottke M, 2010, I C DEPEND SYS NETWO, P447, DOI 10.1109/DSN.2010.5544284
   Gunawardena S., SUPPORTING DOCUMENTA
   Hall T, 2000, INTERNATIONAL CONFERENCE ON SOFTWARE METHODS AND TOOLS, PROCEEDING, P127, DOI 10.1109/SWMT.2000.890428
   Harjumaa L, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P29
   Huang X, 2002, SOFTWARE RELIABILITY, V112
   Humphrey W S, 1995, A discipline for software engineering
   Hunny U., 2012, THESIS
   Intellij IDEA Code Inspection, YOU SUR KNOW WHAT TH
   Jamil Ameerah Muhsinah, 2020, SAC '20: Proceedings of the 35th Annual ACM Symposium on Applied Computing, P1566, DOI 10.1145/3341105.3373922
   Jayatilake SMDJT, 2013, PROCEEDINGS OF THE 2013 8TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE & EDUCATION (ICCSE 2013), P697
   jetbrains, INT IDEA ID NAM
   jetbrains, INTELLIJ IDEA CONTR
   jetbrains, INTELLIJ IDEA LIN IS
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   JOHNSON PM, 1994, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.1994.296771
   Kaner C., 1999, TESTING COMPUTER S
   Kelly D, 2004, J SYST SOFTWARE, V73, P361, DOI 10.1016/j.jss.2003.10.027
   Kester D, 2010, IEEE INT WORK C SO, P115, DOI 10.1109/SCAM.2010.26
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   KREJCIE RV, 1970, EDUC PSYCHOL MEAS, V30, P607, DOI 10.1177/001316447003000308
   Lacomis J, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P640, DOI 10.1109/ASE.2019.00064
   Laramee R.S, 2010, ADV COMPUT SCI ENG A, V4, P23
   Lei Q., 2011, PROCEDIA ENG, V15, P3577
   Lin B, 2017, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2017.17
   Liu CS, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY - COMPANION (QRS-C 2015), P14, DOI 10.1109/QRS-C.2015.15
   Liu HP, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P677, DOI 10.1145/3037697.3037735
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Lopes F, 2020, FUTURE GENER COMP SY, V102, P932, DOI 10.1016/j.future.2019.09.009
   Mabrey J., 2020, THESIS N CAROLINA AG
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Masood Adnan, 2015, 2015 IEEE International Symposium on Technologies for Homeland Security (HST), P1, DOI 10.1109/THS.2015.7225337
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   McLean R. K., 2012, 2012 International Conference on Software Security and Reliability Companion, P68, DOI 10.1109/SERE-C.2012.16
   Michael Inies R.C., 2004, THESIS U KENTUCKY
   Misra S, 2014, J SOFTW-EVOL PROC, V26, P1297, DOI 10.1002/smr.1691
   Nazir Sumaira, 2020, ICSIM '20: Proceedings of the 3rd International Conference on Software Engineering and Information Management, P210, DOI 10.1145/3378936.3378954
   Ning Li, 2010, Proceedings of the 2010 Second World Congress on Software Engineering (WCSE 2010), P234, DOI 10.1109/WCSE.2010.28
   Oh JS, 2005, FOURTH ANNUAL ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P37
   ONeill D, 1997, IEEE SOFTWARE, V14, P18, DOI 10.1109/52.566420
   oracle, COD CONV JAV TM PROG
   Paixao M, 2019, IEEE INT WORK C SO, P45, DOI 10.1109/SCAM.2019.00014
   Paixao M, 2018, IEEE WORK CONF MIN S, P46, DOI 10.1145/3196398.3196466
   Panichella S, 2020, EMPIR SOFTW ENG, V25, P4833, DOI 10.1007/s10664-020-09870-3
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   PMD, EXT CROSS LANG STAT
   pmd, PMD CONTROLSTATEMENT
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Putnam LawrenceH., 1991, Measures for excellence: reliable software on time, within budget
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rebai S, 2020, AUTOMAT SOFTW ENG, V27, P301, DOI 10.1007/s10515-020-00275-6
   Runeson P, 2014, EMPIR SOFTW ENG, V19, P1781, DOI 10.1007/s10664-013-9262-z
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Singh D, 2017, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2017.8103456
   Siy H, 2001, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2001.972741
   Sliz P, 2013, SCIENCE, V341, P236, DOI 10.1126/science.341.6143.236-b
   Smith J, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P221
   sonarqube, QUAL PROF SONARQUBE
   SonarQube Rules, US
   Tahaei M, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW), P129, DOI 10.1109/EuroSPW.2019.00021
   Thomas T, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P295, DOI 10.1109/VLHCC.2015.7357234
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Vassallo C., 2019, EMPIR SOFTW ENG, P1
   Wang J, 2015, INT J HUM-COMPUT ST, V77, P52, DOI 10.1016/j.ijhcs.2015.01.005
   Wang YQ, 2016, FOUND COMPUT DECIS S, V41, P77, DOI 10.1515/fcds-2016-0004
   wikipedia, COD CONV
   Wong YK, 2003, TECHNOLOGY MANAGEMENT FOR RESHAPING THE WORLD, P301
   Xia X, 2014, IEEE INT C ENG COMP, P39, DOI 10.1109/ICECCS.2014.14
   Xia X, 2014, IEICE T INF SYST, VE97D, P1769, DOI 10.1587/transinf.E97.D.1769
   Xia ZL, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P24, DOI 10.1109/SOFTWAREMINING.2017.8100850
   Yu L, 2008, LECT NOTES ARTIF INT, V5139, P427
NR 123
TC 2
Z9 2
U1 2
U2 18
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2023
VL 153
AR 107054
DI 10.1016/j.infsof.2022.107054
EA SEP 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4X6CZ
UT WOS:000860929000002
OA Bronze
DA 2024-07-18
ER

PT J
AU Ahmadi, H
   Ashtiani, M
   Azgomi, MA
   Saheb-Nassagh, R
AF Ahmadi, Hamidreza
   Ashtiani, Mehrdad
   Azgomi, Mohammad Abdollahi
   Saheb-Nassagh, Raana
TI A DQN-based agent for automatic software refactoring
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software refactoring; Design patterns; Technical debt; Software metrics;
   Reinforcement learning
AB Context: Nowadays, technical debt has become a very important issue in software project management. The main mechanism to repay this debt is through refactoring. Refactoring software projects usually comes at a high cost. As a result, researchers have always looked for ways to minimize this cost, and a good potential candidate to reduce the cost of a process is to automate it.
   Objective: One of the automatic software refactoring methods that recently has received a lot of attention is based on search-based software engineering (SBSE) methods. Although because of comprehensiveness and versatility SBSE is considered an appropriate method for automatic refactoring, it has its downsides, the most important of which are the uncertainty of the results and the exponential execution time.
   Method: In this research, a solution is proposed inspired by search-based refactoring while taking advantage of exploitation in reinforcement learning techniques. This work aims to solve the uncertainty problems and execution time for large programs. In the proposed approach, the problem of uncertainty is solved by targeting the selection of refactoring actions used in the search-based approach. Also, due to the reduction of the dependency between the choice of the appropriate refactoring and its execution time, the time problem in large software refactoring has been greatly improved.
   Results: Amongst the performed evaluations and specifically for the refactoring of the largest case study, the proposed approach managed to increase the accuracy to more than twice of the SBSE refactoring approaches, while reducing the execution time of refactoring by more than 98%.
   Conclusion: The results of the tests show that with increasing the volume and size of the software, the performance of the proposed approach also improves compared to the methods based on SBSE, both in terms of reducing technical debt and speeding up the refactoring process.
C1 [Ahmadi, Hamidreza; Ashtiani, Mehrdad; Azgomi, Mohammad Abdollahi; Saheb-Nassagh, Raana] Iran Univ Sci & Technol, Sch Comp Engn, Hengam St,Resalat Sq, Tehran 1684613114, Iran.
C3 Iran University Science & Technology
RP Ashtiani, M (corresponding author), Iran Univ Sci & Technol, Sch Comp Engn, Hengam St,Resalat Sq, Tehran 1684613114, Iran.
EM h_ahmadi@comp.iust.ac.ir; m_ashtiani@iust.ac.ir; azgomi@iust.ac.ir;
   r_sahebnassagh@comp.iust.ac.ir
RI Ashtiani, Mehrdad/S-9571-2018; Abdollahi Azgomi, Mohammad/D-3734-2009
OI Ashtiani, Mehrdad/0000-0002-4574-1545; Abdollahi Azgomi,
   Mohammad/0000-0002-9605-8412
CR Ahmadi Hamidreza, HRAHMADI71A CMA EXPT
   Alizadeh V, 2018, IEEE INT CONF AUTOM, P464, DOI [10.1145/3238147.3238217, 10.114513238147.3238217]
   [Anonymous], 1989, LEARNING DELAYED REW
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bloch J., 2017, EFFECTIVE JAVA, V3rd
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gaoa Y., 2020, PROTOTYPE SOFTWARE R
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Kebir S, 2017, INFORM SOFTWARE TECH, V88, P17, DOI 10.1016/j.infsof.2017.03.009
   Khatchadourian R, 2020, SCI COMPUT PROGRAM, V195, DOI 10.1016/j.scico.2020.102476
   Kohler Mirko, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P835, DOI 10.1109/ASE.2019.00082
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Mohan M, 2019, INFORM SOFTWARE TECH, V112, P83, DOI 10.1016/j.infsof.2019.04.009
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Mohan M., MMOHAN01A CMA EXPT S
   Mohan M, 2016, J SYST SOFTWARE, V120, P183, DOI 10.1016/j.jss.2016.05.019
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Shimomura T., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P213, DOI 10.1109/ICSEA.2010.39
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Szoke G, 2015, IEEE INT WORK C SO, P253, DOI 10.1109/SCAM.2015.7335422
   Techapalokul P, 2019, S VIS LANG HUM CEN C, P117, DOI [10.1109/vlhcc.2019.8818950, 10.1109/VLHCC.2019.8818950]
   Vimaladevi M, 2017, 2017 INTERNATIONAL CONFERENCE ON TECHNICAL ADVANCEMENTS IN COMPUTERS AND COMMUNICATIONS (ICTACC), P32, DOI 10.1109/ICTACC.2017.18
   Wang Y, 2018, IEEE T SOFTWARE ENG, V44, P202, DOI 10.1109/TSE.2017.2679752
   Zafeiris VE, 2017, INFORM SOFTWARE TECH, V82, P19, DOI 10.1016/j.infsof.2016.09.008
NR 28
TC 3
Z9 3
U1 1
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106893
DI 10.1016/j.infsof.2022.106893
EA MAR 2022
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700008
DA 2024-07-18
ER

PT J
AU Petrovska, A
   Kugele, S
   Hutzelmann, T
   Beffart, T
   Bergemann, S
   Pretschner, A
AF Petrovska, Ana
   Kugele, Stefan
   Hutzelmann, Thomas
   Beffart, Theo
   Bergemann, Sebastian
   Pretschner, Alexander
TI Defining adaptivity and logical architecture for engineering (smart)
   self-adaptive cyber-physical systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Adaptivity; Quality function; Knowledge; Logical architecture;
   Self-adaptive cyber-physical systems
ID ADAPTATION
AB Context: Modern cyber-physical systems (CPSs) are embedded in the physical world and intrinsically operate in a continuously changing and uncertain environment or operational context. To meet their business goals and preserve or even improve specific adaptation goals, besides the variety of run-time uncertainties and changes to which the CPSs are exposed-the systems need to self-adapt.
   Objective: The current literature in this domain still lacks a precise definition of what self-adaptive systems are and how they differ from those considered non-adaptive. Therefore, in order to answer how to engineer self-adaptive CPSs or self-adaptive systems in general, we first need to answer what is adaptivity, correspondingly self-adaptive systems.
   Method: In this paper, we first formally define the notion of adaptivity. Second, within the frame of the formal definitions, we propose a logical architecture for engineering decentralised self-adaptive CPSs that operate in dynamic, uncertain, and partially observable operational contexts. This logical architecture provides a structure and serves as a foundation for the implementation of a class of self-adaptive CPSs.
   Results: First, our results show that in order to answer if a system is adaptive, the right framing is necessary: the system's adaptation goals, its context, and the time period in which the system is adaptive. Second, we discuss the benefits of our architecture by comparing it with the MAPE-K conceptual model.
   Conclusion: Commonly accepted definitions of adaptivity and self-adaptive systems are necessary for work in this domain to be compared and discussed since the same terms are often used with different semantics. Furthermore, in modern self-adaptive CPSs, which operate in dynamic and uncertain contexts, it is insufficient if the adaptation logic is specified during the system's design, but instead, the adaptation logic itself needs to adapt and "learn" during run-time.
C1 [Petrovska, Ana; Hutzelmann, Thomas; Beffart, Theo; Bergemann, Sebastian; Pretschner, Alexander] Tech Univ Munich, Dept Informat, Boltzmannstasse 3, Garching, Germany.
   [Kugele, Stefan] TH Ingolstadt, Res Inst AImot Bavaria, Esplanade 10, D-85049 Ingolstadt, Germany.
C3 Technical University of Munich
RP Petrovska, A (corresponding author), Tech Univ Munich, Dept Informat, Boltzmannstasse 3, Garching, Germany.
EM ana.petrovska@tum.de; stefan.kugele@thi.de; t.hutzelmann@tum.de;
   theo.beffart@tum.de; sebastian.bergemann@tum.de;
   alexander.pretschner@tum.de
OI Kugele, Stefan/0000-0002-9833-4548; Bergemann,
   Sebastian/0000-0002-8135-7487
CR Affonso FJ, 2013, P BRAZ SYMP SOFTW, P129, DOI 10.1109/SBCARS.2013.24
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Asadollahi R, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P58, DOI 10.1109/SEAMS.2009.5069074
   Bennaceur Amel, 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P19
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Braberman Victor A., 2015, P 1 INT WORKSH CONTR, P9, DOI [10.1145/2804337.2804339, DOI 10.1145/2804337.2804339]
   Broy Manfred, 2009, P 2009 ACM S APPL CO, P1029, DOI [10.1145/1529282.1529508, DOI 10.1145/1529282.1529508]
   Cámara J, 2020, I W S E ADAP SM SYS, P125, DOI 10.1145/3387939.3391591
   Cheng S.-W., 2006, INT WORKSH SELF AD S, P2, DOI DOI 10.1145/1137677.1137679
   Danny Weyns, 2017, Chapter in Handbook of Software Engineering, P2
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   Fox D., 2001, Adv. Neural Inf. Process. Syst. (NIPS), V14, P26
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Garlan D., 2009, Autonomic Computing and Networking, P31, DOI [DOI 10.1007/978-0-387-89828-5, DOI 10.1007/978-0-387-89828-52]
   Gorton I., 2006, P 6 INT WORKSHOP SOF, P47
   Hallsteinsen S, 2012, J SYST SOFTWARE, V85, P2840, DOI 10.1016/j.jss.2012.07.052
   Josang Audun, 2016, SUBJECTIVE LOGIC
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Koenig N., 2004, 2004 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS) (IEEE Cat. No.04CH37566), P2149
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Kugele S., 2021, EUROPEAN C SOFTWARE, P37
   Mahdavi-Hezavehi S, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P45, DOI 10.1016/B978-0-12-802855-1.00003-4
   Musil A., 2017, MULTIDISCIPLINARY EN, P331, DOI [DOI 10.1007/978-3-319-56345-9_13, DOI 10.1007/978-3]
   Petrovska Ana, 2020, 2020 IEEE/ACM 15th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), P149, DOI 10.1145/3387939.3391600
   Petrovska A., 2021, P 2021 INT S SOFTW E
   Petrovska A, 2019, 2019 IEEE 4TH INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W 2019), P234, DOI 10.1109/FAS-W.2019.00061
   Pohl K, 2012, Model-based engineering of embedded systems: The SPES 2020 methodology
   Quin F, 2021, Arxiv, DOI arXiv:2103.09074
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164, DOI 10.1007/978-3-642-02161-9_9
   Weyns Danny, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P249, DOI 10.1007/978-3-642-39031-9_22
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
NR 34
TC 4
Z9 4
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106866
DI 10.1016/j.infsof.2022.106866
EA MAR 2022
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700002
DA 2024-07-18
ER

PT J
AU Dong, S
   Xue, YX
   Brinkkemper, S
   Li, YF
AF Dong, Shi
   Xue, Yinxing
   Brinkkemper, Sjaak
   Li, Yan-Fu
TI Multi-objective integer programming approaches to Next Release Problem -
   Enhancing exact methods for finding whole pareto front
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Next Release Problem; Multi-objective optimization; Integer linear
   programming; Search-based software engineering
ID EVOLUTIONARY ALGORITHMS; SOFTWARE; PERFORMANCE; SELECTION; SOLVE; RISK
AB Context: Project planning is a crucial part of software engineering, it involves selecting requirements to develop for the next release. How to make a good release plan is an optimization problem to maximize the goal of revenue under the condition of cost, time, or other aspects, namely Next Release Problem (NRP). Genetic and exact algorithms are used since it was proposed.
   Objective: We model NRP as bi-objective (revenue, cost) and tri-objective (revenue, cost, urgency) form, and investigate whether exact methods could solve bi-objective and tri-objective instances more efficiently.
   Methods: The state-of-art integer linear programming (ILP) approach to the bi-objective NRP is epsilon-constraint for finding all non-dominate solutions. To improve its efficiency, we employ CWMOIP (Constrained Weighted Multi-Objective Integer Programming) and I-EC (improved epsilon-constraint) for solving bi-objective instances. In tri-objective form, we introduce SolRep, an ILP method that optimizes the reference points from sampling, for finding solutions subset within a short time. NSGA-II is implemented as the evolutionary algorithm for the comparison with former methods and it adopts the seeding mechanism.
   Results : I-EC can find all non-dominated solutions with better performance than both epsilon-constraint and CWMOIP on all instances except for one. I-EC reduces solving time by 19.7% (large instances) and 91.5% (small instances) on average separately compared with epsilon-constraint. SolRep can find evenly distributed solutions and exceed NSGA-II illustrated by several indicators (such as HyperVolume) on tri-objective instances. And each method has its merit in the aspect of speed and number of the solutions.
   Conclusion: (1) The I-EC can solve all non-dominated solutions with better performance than the state-of-art exact method. (2) SolRep solves large tri-objective instances with more non-dominated solutions and solves small instances with less time compared with seeded NSGA-II. (3) Seeded NSGA-II shows its advantage on the number of non-dominated solutions on smaller tri-objective instances.
C1 [Dong, Shi; Xue, Yinxing] Univ Sci & Technol China, Sch Comp Sci & Technol, Hefei, Peoples R China.
   [Brinkkemper, Sjaak] Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
   [Li, Yan-Fu] Tsinghua Univ, Dept Ind Engn, Beijing, Peoples R China.
C3 Chinese Academy of Sciences; University of Science & Technology of
   China, CAS; Utrecht University; Tsinghua University
RP Xue, YX (corresponding author), Univ Sci & Technol China, Sch Comp Sci & Technol, Hefei, Peoples R China.
EM dongshi@mail.ustc.edu.cn; yxxue@ustc.edu.cn; s.brinkkemper@uu.nl;
   liyanfu@tsinghua.edu.cn
RI Dong, Shi/KBC-6824-2024
OI dong, shi/0000-0003-0202-2425
FU National Natural Science Foundation of China [61972373]; Basic Research
   Program of Jiangsu Province [BK20201192]
FX This work is supported by the National Natural Science Foundation of
   China (Grant No.61972373) and the Basic Research Program of Jiangsu
   Province (Grant No. BK20201192). Thank Prof. Nadarajen Veerapen for
   sharing source codes with us. Thank IBM for providing an academic
   license for using Cplex in our research. We appreciate a lot for Prof.
   Jifeng Xuan, and Dr. Muhammad Rezaul Karim sharing or publishing their
   datasets.
CR Amaral A, 2019, EVOL INTELL, V12, P421, DOI 10.1007/s12065-019-00237-2
   Domínguez-Ríos MA, 2019, J SYST SOFTWARE, V156, P217, DOI 10.1016/j.jss.2019.06.097
   Audet C, 2021, EUR J OPER RES, V292, P397, DOI 10.1016/j.ejor.2020.11.016
   Aydemir FB, 2018, INT REQUIR ENG CONF, P5, DOI 10.1109/RE.2018.00-56
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Botelho G., 2015, INVESTIGATING BIOINS
   Cai XY, 2013, IEEE INT CONF CON AU, P412
   Chen T, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1419, DOI 10.1145/3205455.3205513
   CPLEX I. I., 2009, Int. Bus. Mach. Corp., V46, P157
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   Etgar R, 2019, INT J PROD RES, V57, P4413, DOI 10.1080/00207543.2017.1404657
   Friedrich T, 2015, APPL SOFT COMPUT, V33, P223, DOI 10.1016/j.asoc.2015.04.043
   Geng JY, 2018, IEEE ACCESS, V6, P60547, DOI 10.1109/ACCESS.2018.2875122
   Hamdy A., 2019, International Journal of Machine Learning and Computing, V9, P561, DOI 10.18178/ijmlc.2019.9.5.840
   HarmanMark KrinkeJens, 2014, EXACT SCALABLE SENSI
   Karim MR, 2014, LECT NOTES COMPUT SC, V8636, P123
   Kumari AC, 2016, INFORM SOFTWARE TECH, V76, P31, DOI 10.1016/j.infsof.2016.04.010
   Li LB, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1247, DOI 10.1145/2576768.2598334
   Messac A, 2004, AIAA J, V42, P2101, DOI 10.2514/1.8977
   Mougouei D, 2020, SOFT COMPUT, V24, P11673, DOI 10.1007/s00500-019-04630-y
   NEBRO AJ, 2015, P COMP PUBL 2015 ANN, P1093, DOI DOI 10.1145/2739482.2768462
   Da Silva TGN, 2014, LECT NOTES ARTIF INT, V8857, P25, DOI 10.1007/978-3-319-13650-9_3
   Özlen M, 2009, EUR J OPER RES, V199, P25, DOI 10.1016/j.ejor.2008.10.023
   Olson, 2014, MATRIX PRIORITIZATIO
   Oluwagbemiga B.A., HYBRID ANT COLONY TA
   Paixao M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1469
   Pitangueira AM, 2017, INFORM SOFTWARE TECH, V87, P104, DOI 10.1016/j.infsof.2017.03.001
   Pitangueira AM, 2016, LECT NOTES COMPUT SC, V9619, P3, DOI 10.1007/978-3-319-30282-9_1
   Pitangueira AM, 2015, J SYST SOFTWARE, V103, P267, DOI 10.1016/j.jss.2014.09.038
   Sim WW, 2014, PROCEDIA COMPUT SCI, V28, P237, DOI 10.1016/j.procs.2014.03.030
   Veerapen N, 2015, INFORM SOFTWARE TECH, V65, P1, DOI 10.1016/j.infsof.2015.03.008
   Xuan JF, 2012, IEEE T SOFTWARE ENG, V38, P1195, DOI 10.1109/TSE.2011.92
   Xue YX, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3392031
   Xue YX, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1231, DOI 10.1145/3180155.3180257
   Yachuan Zhang, 2020, Artificial Intelligence and Security. 6th International Conference (ICAIS 2020). Proceedings. Lecture Notes in Computer Science (LNCS 12240), P143, DOI 10.1007/978-3-030-57881-7_13
   Zhang N, 2015, COMM COM INF SC, V562, P664, DOI 10.1007/978-3-662-49014-3_59
   [张耀文 Zhang Yaowen], 2018, [西北农业学报, Acat Agriculturae Boreali-Occidentalis Sinica], V27, P1
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
NR 40
TC 4
Z9 4
U1 1
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2022
VL 147
AR 106825
DI 10.1016/j.infsof.2022.106825
EA MAR 2022
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4L8PL
UT WOS:000852891700001
DA 2024-07-18
ER

PT J
AU Yu, X
   Keung, J
   Xiao, Y
   Feng, S
   Li, FY
   Dai, H
AF Yu, Xiao
   Keung, Jacky
   Xiao, Yan
   Feng, Shuo
   Li, Fuyang
   Dai, Heng
TI Predicting the precise number of software defects: Are we there yet?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software Defect Prediction; Number of defects; Regression algorithms;
   Empirical software engineering
ID SUPPORT VECTOR REGRESSION; POISSON REGRESSION; MODEL; QUALITY; SYSTEM;
   IMPACT; FAULTS; RIDGE
AB Context: Defect Number Prediction (DNP) models can offer more benefits than classification-based defect prediction. Recently, many researchers proposed to employ regression algorithms for DNP, and found that the algorithms achieve low Average Absolute Error (AAE) and high Pred(0.3) values. However, since the defect datasets generally contain many non-defective modules, even if a DNP model predicts the number of defects in all modules as zero, the AAE value of the model will be low and Pred(0.3) value will be high. Therefore, the good performance of the regression algorithms in terms of AAE and Pred(0.3) may be questioned due to the imbalanced distribution of the number of defects.Objective: To revisit the impact of regression algorithms for predicting the precise number of defects.Method: We examine the practical effects of 12 widely-used regression algorithms, two data resampling algorithm (SmoteR and ROS), and three ensemble learning algorithms (gradient boosting regression, AdaBoost.R2, and Bagging), one feature selection method (information gain) and one parameter optimization method (grid search) for predicting the precise number of defects on the 18 PROMISE datasets. We propose to evaluate the AAE and Pred(0.3) values for the modules with different numbers of defects separately.Results: The AAE values for defective modules are very high and the Pred(0.3) values are very low, i.e., the regression algorithms are very inaccurate for predicting the precise number of defects in defective modules.Conclusion: The problem of predicting the precise number of defects via regression algorithms is far from being solved. We recommend that software testers use regression algorithms to rank modules for testing resource allocation, rather than predict the precise number of defects to evaluate the software reliability and maintenance effort. In addition, most existing DNP studies employing the whole AAE and Pred(0.3) values of all modules as the evaluation metrics for the proposed DNP algorithms should be revisited.
C1 [Yu, Xiao; Li, Fuyang] Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Wuhan, Peoples R China.
   [Yu, Xiao; Li, Fuyang] Wuhan Univ, Technol Chongqing Res Inst, Chongqing, Peoples R China.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Xiao, Yan] Natl Univ Singapore, Sch Comp, Singapore, Singapore.
   [Feng, Shuo] Nanjing Inst Intelligent Technol, Nanjing, Peoples R China.
   [Dai, Heng] Wuhan Qingchuan Univ, Sch Mech & Elect Engn, Wuhan, Peoples R China.
C3 Wuhan University of Technology; Wuhan University; City University of
   Hong Kong; National University of Singapore
RP Li, FY (corresponding author), Wuhan Univ Technol, Sch Comp Sci & Artificial Intelligence, Wuhan, Peoples R China.; Li, FY (corresponding author), Wuhan Univ, Technol Chongqing Res Inst, Chongqing, Peoples R China.; Feng, S (corresponding author), Nanjing Inst Intelligent Technol, Nanjing, Peoples R China.
EM xiaoyu@whut.edu.cn; jacky.keung@cityu.edu.hk; dcsxan@nus.edu.sg;
   shuofeng5-c@my.cityu.edu.hk; fyli@whut.edu.cn; daiheng726@163.com
OI Yu, Xiao/0000-0002-4473-3068; Li, Fuyang/0009-0003-5862-9709; Keung,
   Jacky/0000-0002-3803-9600; XIAO, Yan/0000-0002-2563-083X; feng,
   shuo/0000-0002-1575-9891
FU Natural Science Foundation of Chongqing City [cstc2021jcyj-msxmX1115];
   Fundamental Research Funds for the Central Universities [WUT:
   213110003]; General Research Fund of the Research Grants Council of Hong
   Kong [11208017]; City University of Hong Kong [7005028, 7005217]; Intel
   [9220097];  [9678149];  [9440227];  [9229029];  [9440180];  [9220103]
FX This work is supported in part by the Natural Science Foundation of
   Chongqing City (No. cstc2021jcyj-msxmX1115) , the Fundamental Research
   Funds for the Central Universities (WUT: 213110003) , the General
   Research Fund of the Research Grants Council of Hong Kong (No. 11208017)
   and the research funds of City University of Hong Kong (No. 7005028 and
   7005217) , and the Research Support Fund by Intel (No. 9220097) , and
   funding supports from other industry partners (No. 9678149, 9440227,
   9229029, 9440180, and 9220103) . We thank Juan Li and Guoping Nie for
   their helpful comments about this work, Chenkai Shen, Weiqiang Peng,
   Peixin Yang, and Kuan Zou for helping us solve many coding problems.
CR Afkal W, 2008, INMIC: 2008 INTERNATIONAL MULTITOPIC CONFERENCE, P349, DOI 10.1109/INMIC.2008.4777762
   [Anonymous], 2011, NEGATIVE BINOMIAL RE
   Bal PR, 2020, IEEE T RELIAB, V69, P1355, DOI 10.1109/TR.2020.2996261
   Chakraborty T, 2021, IEEE T RELIAB, V70, P481, DOI 10.1109/TR.2020.3020238
   Chen Mingming., 2015, SEKE, P397
   Chen X, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106441
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Drucker H, 1997, ADV NEUR IN, V9, P155
   Drucker H., 1997, ICML, P107
   Gao KH, 2007, IEEE T RELIAB, V56, P223, DOI 10.1109/TR.2007.896761
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghosh D, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106512
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gu Q., 2019, SEKE, P425
   Hayat MJ, 2014, J NURS EDUC, V53, P208, DOI 10.3928/01484834-20140325-04
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Janes A, 2006, INFORM SCIENCES, V176, P3711, DOI 10.1016/j.ins.2005.12.002
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khoshgoftaar TM, 2007, PROC INT C TOOLS ART, P310, DOI 10.1109/ICTAI.2007.46
   Khoshgoftaar TM, 2012, INT J SOFTW ENG KNOW, V22, P161, DOI 10.1142/S0218194012400013
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   LAMBERT D, 1992, TECHNOMETRICS, V34, P1, DOI 10.2307/1269547
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Lyu MR, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P153, DOI 10.1109/FOSE.2007.24
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Maltamo M, 1998, CAN J FOREST RES, V28, P1107, DOI 10.1139/cjfr-28-8-1107
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Minami M, 2007, FISH RES, V84, P210, DOI 10.1016/j.fishres.2006.10.019
   Nevendra M, 2019, INT CONF ADV COMPU, P7, DOI [10.1109/iacc48062.2019.8971588, 10.1109/IACC48062.2019.8971588]
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Qiao L, 2020, NEUROCOMPUTING, V385, P100, DOI 10.1016/j.neucom.2019.11.067
   Qu Y, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106605
   Quan Sun, 2012, AI 2012: Advances in Artificial Intelligence. 25th Australasian Conference. Proceedings, P695, DOI 10.1007/978-3-642-35101-3_59
   Rathore Santosh Singh, 2016, ACM SIGSOFT Software Engineering Notes, V41, P1, DOI 10.1145/2853073.2853083
   Rathore S.S., 2019, FAULT PREDICTION MOD, P11
   Rathore S.S., 2019, FAULT PREDICTION MOD, P31
   Rathore SS, 2017, SOFT COMPUT, V21, P7417, DOI 10.1007/s00500-016-2284-x
   Rathore SS, 2015, PROCEDIA COMPUT SCI, V62, P303, DOI 10.1016/j.procs.2015.08.454
   Rathore SS, 2019, IEEE T RELIAB, V68, P216, DOI 10.1109/TR.2018.2864206
   Rathore SS, 2016, INT CONF IND INF SYS, P540, DOI 10.1109/ICIINFS.2016.8262999
   Rathore SS, 2017, EXPERT SYST APPL, V82, P357, DOI 10.1016/j.eswa.2017.04.014
   Rathore SS, 2017, KNOWL-BASED SYST, V119, P232, DOI 10.1016/j.knosys.2016.12.017
   Rathore SS, 2015, 2015 NATIONAL CONFERENCE ON RECENT ADVANCES IN ELECTRONICS & COMPUTER ENGINEERING (RAECE), P328, DOI 10.1109/RAECE.2015.7510216
   Saffari SE, 2013, STAT NEERL, V67, P67, DOI 10.1111/j.1467-9574.2012.00532.x
   Seber G. A., 2012, LINEAR REGRESSION AN, V329
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shi Q, 2016, ACCIDENT ANAL PREV, V88, P124, DOI 10.1016/j.aap.2015.12.001
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   SPECHT DF, 1991, IEEE T NEURAL NETWOR, V2, P568, DOI 10.1109/72.97934
   Steinberg D., 2002, 15 AUSTR JOINT C ART, P1
   Sun ZB, 2021, APPL SOFT COMPUT, V99, DOI 10.1016/j.asoc.2020.106940
   Tantithamthavorn C., 2016, R PACKAGE VERSION 2
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tong H, 2021, INFORM SOFTWARE TECH
   Tong HN, 2021, IEEE T SOFTWARE ENG, V47, P1886, DOI 10.1109/TSE.2019.2939303
   Torgo L, 2015, EXPERT SYST, V32, P465, DOI 10.1111/exsy.12081
   Nguyen TT, 2014, PROC INT CONF ADV, P321, DOI 10.1109/ATC.2014.7043405
   Wang J, 2012, INT SYMP EMP SOFTWAR, P191, DOI 10.1145/2372251.2372287
   Wu M, 2018, SEKE, P427
   Xiao X, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106653
   Xu JZ, 2021, IMPACT ASSESS PROJ A, V39, P429, DOI [10.1109/TR.2020.3040191, 10.1080/14615517.2020.1848242]
   Xu M, 2005, REMOTE SENS ENVIRON, V97, P322, DOI 10.1016/j.rse.2005.05.008
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yan XB, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106543
   Yang XX, 2018, IEEE T RELIAB, V67, P885, DOI 10.1109/TR.2018.2847353
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang YB, 2016, IEEE INT CONF AUTOM, P296, DOI 10.1145/2970276.2970353
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   You GA, 2016, INT J SOFTW ENG KNOW, V26, P1511, DOI 10.1142/S0218194016400155
   Yu L., 2012, USING NEGATIVE BINOM
   Yu X, 2020, IEEE T RELIAB, V69, P139, DOI 10.1109/TR.2019.2931559
   Yu X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P298, DOI [10.1109/SANER.2019.8668033, 10.1109/saner.2019.8668033]
   Yu X, 2017, PROC INT SYMP SOFTW, P78, DOI 10.1109/ISSRE.2017.18
   Yu X, 2017, J SYST SOFTWARE, V134, P44, DOI 10.1016/j.jss.2017.08.025
   Zhang H., 2008, P 2008 INT WORKING C, P141
   Zhang W, 2018, IET SOFTW, V12, P183, DOI 10.1049/iet-sen.2017.0168
   Zhao KS, 2021, IEEE T RELIAB, V70, P848, DOI 10.1109/TR.2021.3060937
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zou QY, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106588
NR 82
TC 29
Z9 29
U1 0
U2 23
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2022
VL 146
AR 106847
DI 10.1016/j.infsof.2022.106847
EA FEB 2022
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0J8ZG
UT WOS:000780387700007
DA 2024-07-18
ER

PT J
AU Ali, H
   Mussbacher, G
AF Ali, Hyacinth
   Mussbacher, Gunter
TI Layout merging with relative positioning in Concern-Oriented Reuse
   hierarchies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Relative positioning; Automatic layout; Software reuse; Model
   composition; Class diagram; Reuse hierarchy
ID GRAPHVIZ
AB Context: The advent of modeling in software engineering, like other engineering fields, has revolutionized the formalism and pace of software development. However, software applications are not built from scratch, instead, other existing software artifacts are reused and combined with new artifacts. This notion of software reuse has been in existence for decades. When structural models such as class diagrams are reused, the reusing and reused models often need to be merged and the result visualized to the modeler. However, layout mechanisms such as GraphViz, JGraphX, and other related layout tools do not retain the original layout and rather arbitrarily layout the merged models. Therefore, important information that corresponds to the mental map of a modeler and is conveyed by the specific layout is currently lost. Objective: This paper aims to establish layout algorithms to retain the original layout information from a set of individual but interrelated models after they are merged during software reuse to preserve a modeler's mental map of the models. Method: In this work, rpGraph uses the relative positioning of model elements to retain the general layout of a single reusing model and a single reused model (two-model merge). Additionally, rpGraph integrates its two-model merge approach into a multi-model merge in a reuse hierarchy to preserve the general topology of several interrelated models. Our findings are evaluated with 20 example single-model reuses from a library of reusable software model artifacts. We further carry out a case study in a reuse hierarchy framework, Concern Oriented Reuse (CORE), where rpGraph is applied to the layout of reusable artifacts, which result from a merge of several individual models. Result: A comparison of the merged layouts of rpGraph, GraphViz, and JGraphX shows that rpGraph performs better in terms of retaining the original layouts. Conclusion: Considering relative positioning during model merge increases the degree with which original layouts can be preserved.
C1 [Ali, Hyacinth; Mussbacher, Gunter] McGill Univ, 845 Sherbrooke St, Montreal, PQ H3A 0G4, Canada.
C3 McGill University
RP Ali, H (corresponding author), McGill Univ, 845 Sherbrooke St, Montreal, PQ H3A 0G4, Canada.
EM hyacinth.ali@mail.mcgill.ca; gunter.mussbacher@mcgill.ca
CR Al Abed Wisam., 2012, SLE 2012, P275
   Alam O, 2013, LECT NOTES COMPUT SC, V8107, P604, DOI 10.1007/978-3-642-41533-3_37
   Ali Hyacinth, 2020, SAM '20: Proceedings of the 12th System Analysis and Modelling Conference, P106, DOI 10.1145/3419804.3420271
   Amyot Daniel, 2011, Journal of Software, V6, P747, DOI 10.4304/jsw.6.5.747-768
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Braun CL., 1994, NATO STANDARD DEV RE, V1
   Carton A, 2009, LECT NOTES COMPUT SC, V5560, P238, DOI 10.1007/978-3-642-03764-1_7
   Cohen J., 1988, STAT POWER ANAL BEHA
   El Ahmar Y, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P64, DOI 10.1109/MODELS.2015.7338236
   Ellson J, 2004, MATH VIS, P127
   Ellson J, 2002, LECT NOTES COMPUT SC, V2265, P483
   Gamma Erich., 1994, DESIGN PATTERNS
   Gregorics B, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P196, DOI 10.1109/MODELS.2015.7338250
   Gutwenger C., 2003, SOFTVIS 03, P179
   Harsh O. K., 2006, Engineering Letters, V13, P30
   Hauke J, 2011, QUAEST GEOGR, V30, P87, DOI 10.2478/v10117-011-0021-1
   ITU-T, 2018, US REQ NOT URN LANG
   Jin Yanling, 2012, DESIGN IMPLEMENTATIO
   Johannes Jendrik., 2009, P 9 OOPSLA WORKSH DO
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Kang K. C., 1990, Technical Report
   Kermeta website, 2018, KOMP GEN MOD COMP TO
   Kienzle J, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P87
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Maier S, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P131, DOI 10.1109/VLHCC.2015.7357207
   McKnight P.E., 2010, Mann-Whitney U Test, The Corsini Encyclopedia of Psychology
   MISUE K, 1995, J VISUAL LANG COMPUT, V6, P183, DOI 10.1006/jvlc.1995.1010
   Mussbacher G, 2013, S VIS LANG HUM CEN C, P238, DOI 10.1109/RE.2013.6636724
   Phalp K, 2012, IFIP ADV INF COMM TE, V380, P262
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rüegg U, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P185, DOI 10.1145/2976767.2976805
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   TouchCORE website, 2018, TOUCHC
   Von Pilgrim Jens., 2007, ELECT COMMUN EASST, V7
   Whittle J, 2009, LECT NOTES COMPUT SC, V5560, P191, DOI 10.1007/978-3-642-03764-1_6
   Yongbeom Kim, 1998, Journal of Management Information Systems, V14, P113
NR 39
TC 0
Z9 0
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106757
DI 10.1016/j.infsof.2021.106757
EA NOV 2021
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XA3SJ
UT WOS:000720570800004
DA 2024-07-18
ER

PT J
AU Alkharabsheh, K
   Alawadi, S
   Kebande, VR
   Crespo, Y
   Fernández-Delgado, M
   Taboada, JA
AF Alkharabsheh, Khalid
   Alawadi, Sadi
   Kebande, Victor R.
   Crespo, Yania
   Fernandez-Delgado, Manuel
   Taboada, Jose A.
TI A comparison of machine learning algorithms on design smell detection
   using balanced and imbalanced dataset: A study of God class
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software quality; Design smell detection; Machine learning; God class;
   Balanced data
AB Context: Design smell detection has proven to be a significant activity that has an aim of not only enhancing the software quality but also increasing its life cycle. Objective: This work investigates whether machine learning approaches can effectively be leveraged for software design smell detection. Additionally, this paper provides a comparatively study, focused on using balanced datasets, where it checks if avoiding dataset balancing can be of any influence on the accuracy and behavior during design smell detection. Method: A set of experiments have been conducted-using 28 Machine Learning classifiers aimed at detecting God classes. This experiment was conducted using a dataset formed from 12,587 classes of 24 software systems, in which 1,958 classes were manually validated. Results: Ultimately, most classifiers obtained high performances,-with Cat Boost showing a higher performance. Also, it is evident from the experiments conducted that data balancing does not have any significant influence on the accuracy of detection. This reinforces the application of machine learning in real scenarios where the data is usually imbalanced by the inherent nature of design smells. Conclusions: Machine learning approaches can effectively be used as a leverage for God class detection. While in this paper we have employed SMOTE technique for data balancing, it is worth noting that there exist other methods of data balancing and with other design smells. Furthermore, it is also important to note that application of those other methods may improve the results, in our experiments SMOTE did not improve God class detection. The results are not fully generalizable because only one design smell is studied with projects developed in a single programming language, and only one balancing technique is used to compare with the imbalanced case. But these results are promising for the application in real design smells detection scenarios as mentioned above and the focus on other measures, such as Kappa, ROC, and MCC, have been used in the assessment of the classifier behavior.
C1 [Alkharabsheh, Khalid] Al Balqa Appl Univ BAU, Prince Abdullah Bin Ghazi Fac Informat & Commun T, Dept Software Engn, Salt, Jordan.
   [Fernandez-Delgado, Manuel; Taboada, Jose A.] Univ Santiago de Compostela, Ctr Singular Invest Tecnoloxias Intelixentes, CiTIUS, Santiago De Compostela 15782, Spain.
   [Crespo, Yania] Univ Valladolid, Dept Informat, Escuela Ingn Informat, Campus Miguel Delibes,Paseo Belen 15, Valladolid 47011, Spain.
   [Kebande, Victor R.] Blekinge Inst Technol, Dept Comp Sci DIDA, S-37179 Karlskrona, Sweden.
   [Alawadi, Sadi] Uppsala Univ, Dept Informat Technol, Box 337, S-75105 Uppsala, Sweden.
C3 Al-Balqa Applied University; Universidade de Santiago de Compostela;
   Universidad de Valladolid; Blekinge Institute Technology; Uppsala
   University
RP Alawadi, S (corresponding author), Uppsala Univ, Dept Informat Technol, Box 337, S-75105 Uppsala, Sweden.
EM khalidkh@bau.edu.jo; sadi.alawadi@it.uu.se; victor.kebande@bth.se;
   yania@infor.uva.es; manuel.fernandez.delgado@usc.es;
   joseangel.taboada@usc.es
RI alawadi, sadi/Q-8576-2016; Alkharabsheh, Khalid/HGB-7962-2022; González,
   José Ángel Taboada/L-5844-2014; R. Kebande, Victor/F-3934-2019; Crespo,
   Yania/I-5609-2015
OI Alkharabsheh, Khalid/0000-0002-3182-418X; González, José Ángel
   Taboada/0000-0003-1897-1537; R. Kebande, Victor/0000-0003-4071-4596;
   Crespo, Yania/0000-0003-0639-0540; Fernandez Delgado,
   Manuel/0000-0001-5483-9424
CR Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Alawadi Sadi, 2018, MACHINE LEARNING ALG
   Ali Reshi J., 2018, Journal of Information Technology Management, V10, P41
   Alkharabsheh Khalid, 2016, International Journal of Advanced Studies in Computer Science and Engineering, V5, P120
   Alkharabsheh K., 2019, INT C SOFTWARE ENG K, P361
   Alkharabsheh K., 2016, 21 JORN ING SOFTW BA, P143
   Alkharabsheh K., 2016, 21 JORN ING SOFTW BA, P159
   Alkharabsheh K, 2021, SOFTWARE QUAL J, V29, P197, DOI 10.1007/s11219-021-09550-5
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Alzubi J, 2018, J PHYS CONF SER, V1142, DOI 10.1088/1742-6596/1142/1/012012
   [Anonymous], 2005, PMD applied
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Blackman NJM, 2000, STAT MED, V19, P723, DOI 10.1002/(SICI)1097-0258(20000315)19:5<723::AID-SIM379>3.0.CO;2-A
   Borland, 2008, TOGETHER
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chawla NV, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P875, DOI 10.1007/978-0-387-09823-4_45
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Choinzon M, 2006, FRONT ARTIF INTEL AP, V140, P61
   Counsell S, 2007, THIRD INTERNATIONAL IEEE WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P23, DOI 10.1109/SE.2007.13
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Fernández-Delgado M, 2014, J MACH LEARN RES, V15, P3133
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Hall T, 2011, IEEE SOFTWARE, V28, P96, DOI 10.1109/MS.2011.138
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hollander M., 2013, Nonparametric statistical methods
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Kourou K, 2015, COMPUT STRUCT BIOTEC, V13, P8, DOI 10.1016/j.csbj.2014.11.005
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lopez C., 2010, 13 TOOLS WORKSH QUAN
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maiga A, 2012, IEEE INT CONF AUTOM, P278, DOI 10.1145/2351676.2351723
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Moha N., 2007, ASE 07 2007 ACM IEEE, P527, DOI [10.1145/1321631.1321727, DOI 10.1145/1321631.1321727]
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Peiris M., 2014, ACM SIGSOFT Softw. Eng. Notes, V39, P1
   Perez F., 2011, Ph.D. thesis
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos Jose Amancio, 2013, P 17 INT C EV ASS SO, P48
   Shatnawi R, 2015, J SOFTW-EVOL PROC, V27, P95, DOI 10.1002/smr.1702
   Tahvildari L, 2004, J SOFTW MAINT EVOL-R, V16, P331, DOI 10.1002/smr.299
   Tiberghien A., 2007, 1303 U MONTR
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Wainer J, 2016, ARXIV PREPRINT ARXIV
   Witten IH, 2011, MOR KAUF D, P1
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
NR 61
TC 15
Z9 15
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2022
VL 143
AR 106736
DI 10.1016/j.infsof.2021.106736
EA NOV 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XA3SJ
UT WOS:000720570800002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Hamdi, O
   Ouni, A
   Cinnéide, MO
   Mkaouer, MW
AF Hamdi, Oumayma
   Ouni, Ali
   Cinneide, Mel O.
   Mkaouer, Mohamed Wiem
TI A longitudinal study of the impact of refactoring in android
   applications
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Android; Refactoring; Code smells; Android smells; Empirical study
ID CODE-SMELLS; MAINTAINABILITY; DIFFUSENESS
AB Context: Mobile applications have to continuously evolve in order to meet new user requirements and technological changes. Addressing these constraints may lead to poor implementation and design choices, known code smells. Code refactoring is a key practice that is employed to ensure that the intent of a code change is properly achieved without compromising internal software quality. While previous studies have investigated the impact of refactoring on traditional code smells in desktop applications, little attention has been paid to the impact of refactoring activities in mobile application development. Objective: We aim to develop a broader understanding of the impact of refactoring activities on Android and traditional code smells in Android apps. Method: We conduct a longitudinal empirical study by analyzing the evolution history of five open-source Android apps comprising 652 releases and exhibiting a total of 9,600 refactoring operations. We consider 15 common Android smell types and 10 common traditional Object-Oriented (OO) code smell types to provide a broad overview of the relationship between refactoring and code smells. Results: We find that code smells are widespread across Android applications, but smelly classes are not particularly targeted by refactoring activities and, when they are, it is rare for refactoring to actually remove a smell. Conclusions: These somewhat surprising results indicate that it is critical to understand better the real quality issues that Android developers face, and to develop a model of code smells and refactoring that can better address their needs in practice.
C1 [Hamdi, Oumayma; Ouni, Ali] Univ Quebec, Ecole Technol Super, Montreal, PQ, Canada.
   [Cinneide, Mel O.] Univ Coll Dublin, Dublin, Ireland.
   [Mkaouer, Mohamed Wiem] Rochester Inst Technol, Rochester, NY 14623 USA.
C3 University of Quebec; University of Quebec Montreal; Ecole de
   Technologie Superieure - Canada; University College Dublin; Rochester
   Institute of Technology
RP Ouni, A (corresponding author), Univ Quebec, Ecole Technol Super, Montreal, PQ, Canada.
EM ali.ouni@etsmtl.ca
RI Mkaouer, Mohamed Wiem/N-7476-2017; Ouni, Ali/Y-8280-2019; Ó Cinnéide,
   Mel/GQP-1737-2022
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ouni,
   Ali/0000-0003-4708-0362; 
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [RGPIN-2018-05960]
FX This work is supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC) discovery grant RGPIN-2018-05960.
CR Agarwal R., 2017, Int. J. Data Netw. Sci., V1, P11
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., P 20 INT C VERY LARG
   AlOmar EA, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110821
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   AlZu'bi S, 2018, 2018 FIFTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P323, DOI 10.1109/SNAMS.2018.8554909
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Bessghaier Narjes, 2020, Services Computing - SCC 2020. 17th International Conference Held as Part of the Services Conference Federation, SCF 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12409), P67, DOI 10.1007/978-3-030-59592-0_5
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Carette A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P115, DOI 10.1109/SANER.2017.7884614
   Cedrim D, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P73, DOI 10.1145/2973839.2973848
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Cramer H., 1946, Mathematical Methods of Statistics, P500
   Delchev M., 2015, Fullscale Software Engineering, P31
   Du Bois B., 2003, InInternational Workshop on Evolution of Large-scale Industrial Software Applications, P37
   Fontana F.A., 2011, Proceedings of the 4th Workshop on Refactoring Tools, P37, DOI DOI 10.1145/1984732.1984741
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Grano G, 2019, J SYST SOFTWARE, V156, P312, DOI 10.1016/j.jss.2019.07.016
   Habchi S., 2020, ARXIV PREPRINT ARXIV
   Habchi S, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P87, DOI 10.1109/MOBILESoft.2019.00022
   Hamdi O, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P28, DOI 10.1109/MobileSoft52590.2021.00010
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hegedus P, 2018, INFORM SOFTWARE TECH, V95, P313, DOI 10.1016/j.infsof.2017.11.012
   I.D.C.I. Research, 2020, ANDR DOM MOB MARK
   Joshi B., 2016, BEGINNING SOLID PRIN
   Kadar I., 2016, P 12 INT C PREDICTIV, P1
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kaur M, 2016, PROCEDIA COMPUT SCI, V85, P78, DOI 10.1016/j.procs.2016.05.180
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   LIEBERHERR KJ, 1989, IEEE SOFTWARE, V6, P38, DOI 10.1109/52.35588
   Mannan UA, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P225, DOI [10.1109/MobileSoft.2016.048, 10.1145/2897073.2897094]
   Min Zhang, 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P458, DOI 10.1109/ICSTW.2011.69
   Minelli R., 2012, Software Analytics for Mobile Applications
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Muse Biruk Asmare, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P327, DOI 10.1145/3379597.3387467
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2019, INFORM SOFTWARE TECH, V105, P43, DOI 10.1016/j.infsof.2018.08.004
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, 2017 IEEE INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P8, DOI 10.1109/MALTESQUE.2017.7882010
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Peruma A., 2019, P 29 ANN INT C COMP, P193, DOI DOI 10.5555/3370272.3370293
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Piatetsky-Shapiro G., 1991, Knowledge discovery in databases, P229
   Prete K, 2010, PROC IEEE INT CONF S
   Reimann Jan., 2014, Softwaretechnik-Trends, V34
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Saika T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 4, P1, DOI 10.1109/SANER.2016.117
   Sharma T, 2020, EMPIR SOFTW ENG, V25, P4020, DOI 10.1007/s10664-020-09847-2
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Sons J.W, 1999, PATTERNS JAVA, V2
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Tahir A, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106333
   Tavares Cleiton, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P97, DOI 10.1145/3422392.3422408
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xu L., 2013, Techniques and Tools for Analyzing and Understanding Android Applications
NR 78
TC 4
Z9 12
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106699
DI 10.1016/j.infsof.2021.106699
EA AUG 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600010
DA 2024-07-18
ER

PT J
AU Pérez, B
   Castellanos, C
   Correal, D
   Rios, N
   Freire, S
   Spínola, R
   Seaman, C
   Izurieta, C
AF Perez, Boris
   Castellanos, Camilo
   Correal, Dario
   Rios, Nicolli
   Freire, Savio
   Spinola, Rodrigo
   Seaman, Carolyn
   Izurieta, Clemente
TI Technical debt payment and prevention through the lenses of software
   architects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Technical debt; Technical debt management; InsighTD; Payment practices;
   Preventive actions; Software architects
ID MANAGEMENT
AB Context: Architectural decisions are considered one of the most common sources of technical debt (TD). Thus, it is necessary to understand how TD is perceived by software architects, particularly, the practices supporting the elimination of debt items from projects, and the practices used to reduce the chances of TD occurrence. Objective: This paper investigates the most commonly used practices to pay off TD and to prevent debt occurrence in software projects from the architect's point of view. Method: We used the available data from InsighTD, which is a globally distributed family of industrial surveys on the causes, effects, and management of TD. We analyze responses from a corpus of 72 software architects from Brazil, Chile, Colombia, and the United States. Results: Results showed that refactoring (30.2%) was the main practice related to TD payment, followed by design improvements (14.0%). Refactoring, design improvements, and test improvements are the most cited payment practices among cases of code, design and test debt. Concerning the TD preventive practices, we find that having a well-defined architecture and design is the most cited practice (13.6%), followed by having a well-defined scope and requirements. This last practice is the most cited one for expert software architects. Finally, when comparing preventive practices among the three major roles derived from the survey (software architects, engineer roles, and management roles), we found that none of the roles shared the most cited practice, meaning that each role had its worries and focus on different strategies to reduce TD's presence in the software. Conclusion: The lists of TD payment and prevention practices can guide software teams by having a catalog of practices to keep debt controlled or reduced.
C1 [Perez, Boris; Castellanos, Camilo; Correal, Dario] Univ Los Andes, Bogota, Colombia.
   [Perez, Boris] Univ Francisco Paula Santander, Cucuta, Colombia.
   [Rios, Nicolli] Univ Fed Rio de Janeiro, Rio De Janeiro, Brazil.
   [Freire, Savio] Univ Fed Bahia, Salvador, BA, Brazil.
   [Freire, Savio] Fed Inst Ceara, Morada Nova, Brazil.
   [Spinola, Rodrigo] Univ Salvador, Salvador, BA, Brazil.
   [Seaman, Carolyn] Univ Maryland, Baltimore, MD 21201 USA.
   [Izurieta, Clemente] Montana State Univ, Bozeman, MT 59717 USA.
   [Izurieta, Clemente] Idaho Natl Labs, Bozeman, MT USA.
C3 Universidad de los Andes (Colombia); Universidad Francisco de Paula
   Santander; Universidade Federal do Rio de Janeiro; Universidade Federal
   da Bahia; Instituto Federal do Ceara (IFCE); Universidad de El Salvador;
   Universidade Salvador (UNIFACS); University System of Maryland;
   University of Maryland Baltimore; Montana State University System;
   Montana State University Bozeman; United States Department of Energy
   (DOE); Idaho National Laboratory
RP Pérez, B (corresponding author), Univ Los Andes, Bogota, Colombia.
EM br.perez41@uniandes.edu.co
RI Freire, Emmanuel Sávio Silva/AGE-1578-2022; Freire, Sávio/B-3292-2014
OI Freire, Emmanuel Sávio Silva/0000-0002-3989-9442; Freire,
   Sávio/0000-0002-3989-9442; PEREZ GUTIERREZ, BORIS
   RAINIERO/0000-0001-9249-1756; Castellanos, Camilo/0000-0002-3301-8720
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], 2018, REFACTORING IMPROVIN
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Codabux Z, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1894
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   F. Team, 2014, 3 TYPES SURVEY RES U
   Freire Savio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P210, DOI 10.1145/3383219.3383241
   Freire S, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1548, DOI 10.1145/3341105.3373912
   InsighTD, 2020, PUBLICATIONS
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   JohannesHolvitie V.L, 2014 6 INT WORKSH MA, P0000
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martini A, 2016, ASIA PAC SOFWR ENG, P161, DOI [10.1109/APSEC.2016.032, 10.1109/APSEC.2016.25]
   Martini A, 2015, INFORM SOFTWARE TECH, V67, P237, DOI 10.1016/j.infsof.2015.07.005
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   McConnell S., 2007, TECHNICAL DEBT
   McConnell Steve., 2004, Code Complete, V2nd ed
   Pacheco A, 2019, LECT NOTES COMPUT SC, V11915, P236, DOI 10.1007/978-3-030-35333-9_17
   Perez B., 2020, Journal of Physics: Conference Series, V1513, DOI 10.1088/1742-6596/1513/1/012003
   Perez B., 2020, P IEEE ACM INT C TEC
   Pérez B, 2019, P INT C CHIL COMPUT, DOI 10.1109/sccc49216.2019.8966424
   Power K, 2019, LECT NOTES COMPUT SC, V11681, P55, DOI 10.1007/978-3-030-29983-5_4
   Ramac R, 2020, EUROMICRO CONF PROC, P354, DOI 10.1109/SEAA51224.2020.00065
   Rios Nicolli, 2020, Requirements Engineering: Foundation for Software Quality. 26th International Working Conference, REFSQ 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12045), P55, DOI 10.1007/978-3-030-44429-7_4
   Rios N, 2020, EMPIR SOFTW ENG, V25, P3216, DOI 10.1007/s10664-020-09832-9
   Rios N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P3, DOI 10.1109/TechDebt.2019.00009
   Rios N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268917
   Rios N, 2018, EUROMICRO CONF PROC, P429, DOI 10.1109/SEAA.2018.00076
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Rios Nicolli, 2019, Causes and effects of the presence of technical debt in agile software projects
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Souza Lucineia, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P750, DOI 10.1145/3422392.3422430
   Webber W, 2010, ACM T INFORM SYST, V28, DOI 10.1145/1852102.1852106
   Wohlin C. C., EXPT SOFTWARE ENG
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Yli-Huumo J, 2014, LECT NOTES COMPUT SC, V8892, P93, DOI 10.1007/978-3-319-13835-0_7
NR 42
TC 8
Z9 8
U1 2
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106692
DI 10.1016/j.infsof.2021.106692
EA JUL 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600016
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Saad, J
   Martinelli, S
   Machado, LS
   de Souza, CRB
   Alvaro, A
   Zaina, L
AF Saad, Jullia
   Martinelli, Suellen
   Machado, Leticia S.
   de Souza, Cleidson R. B.
   Alvaro, Alexandre
   Zaina, Luciana
TI UX work in software startups: A thematic analysis of the literature
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software startup; User experience; Literature review; Thematic analysis;
   Software development
ID COMPANIES
AB Context: Startups are new and fast-growing innovative businesses. These companies also deal with uncertain market conditions and work under constant time and business pressures. Although User Experience (UX) has been widely adopted in the software industry, this has not been a reality in the context of software startups yet. Several factors might influence whether, which, and how UX is adopted by software startups. Objective: The objective of this paper is to investigate in the literature how software startups work with UX and to discover the relationship between software development practices and UX in startups. Methodology: Our methodology is composed of three main activities: (1) mapping the literature seeking publications on UX work, software engineering, and startups, which resulted in 21 relevant publications; (2) a thematic analysis based on the output of step 1 (i.e., the relevant literature); and (3) refining the themes found out in step 2 and the design of their relationships to explain the link between UX work and software startups. Results: The challenges, opportunities, and practices associated with UX in the context of software startups reported by the literature were organized in a set of themes. As a result, seven themes were defined so as to identify needs and opportunities related to UX work in startups. In addition, we synthesize open questions from the literature and suggest new ones to further research directions about the adoption of UX by software startups. Conclusion: Our findings demonstrate that software startups require an approach to UX that is more adherent to the startups' dynamic and disruptive nature. We also suggest emerging open research questions which should be answered to promote the evolution of UX as applied to software startups.
C1 [Saad, Jullia; Martinelli, Suellen; Alvaro, Alexandre; Zaina, Luciana] Univ Fed Sao Carlos, Rdv Joao L Santos,Km 110, Sorocaba, SP, Brazil.
   [Machado, Leticia S.; de Souza, Cleidson R. B.] Fed Univ Para, Av Augusto Correa 1, Belem, Para, Brazil.
C3 Universidade Federal de Sao Carlos; Universidade Federal do Para
RP Saad, J (corresponding author), Univ Fed Sao Carlos, Rdv Joao L Santos,Km 110, Sorocaba, SP, Brazil.
EM julliasaad01@gmail.com; suellen.martinelli@estudante.ufscar.br;
   leticia.smachado@gmail.com; cleidson.desouza@acm.org; alvaro@ufscar.br;
   lzaina@ufscar.br
RI de Souza, Cleidson R B/J-4409-2014
OI de Souza, Cleidson R B/0000-0003-3240-3122; Rofolfo Martinelli,
   Suellen/0000-0002-4421-2940; Santos Machado,
   Leticia/0000-0002-9105-3727; Alvaro, Alexandre/0000-0002-1453-3583
FU Sao Paulo Research Foundation (FAPESP), Brazil [2020/00615-9,
   2020/11441-1]; Coordenacao de Aperfeicoamento de Pessoal de Nivel
   Superior - Brazil (CAPES), Brazil [001]; Conselho Nacional de
   Desenvolvimento Cientifico e Tecnologico - Brazil (CNPq) [313312/20192,
   311256/2018-0]
FX We thank the support of grant #2020/00615-9 and #2020/114411, Sao Paulo
   Research Foundation (FAPESP), Brazil. We also thank Coordenacao de
   Aperfeicoamento de Pessoal de Nivel Superior -Brazil (CAPES), Brazil
   -Finance Code 001 and Conselho Nacional de Desenvolvimento Cientifico e
   Tecnologico -Brazil (CNPq grant 313312/20192 and 311256/2018-0) for
   supporting this work.
CR Alvertis I, 2016, PROCEDIA COMPUT SCI, V97, P73, DOI 10.1016/j.procs.2016.08.282
   [Anonymous], 2009, 92412102010 ISO
   Ardito C, 2014, INT J HUM-COMPUT ST, V72, P542, DOI 10.1016/j.ijhcs.2013.10.004
   Bajwa SS, 2017, IEEE SOFTWARE, V34, P18, DOI 10.1109/MS.2017.84
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Chilana PK, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2243
   Dam R., 2018, WHAT IS DESIGN THINK
   de Lima Salgado A., 2016, P 34 ACM INT C DES C, P1
   Eichhorn B, 2018, INT J MANAG PROJ BUS, V11, P289, DOI 10.1108/IJMPB-02-2017-0016
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Gauthier J., 2019, Global Startup Ecosystem Report 2019
   Gauthier J., 2020, GLOBAL STARTUP ECOSY
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Google, 2020, WHATS DES SPRINT GOO
   Gothelf J., 2016, Lean UX: Designing Great Products with Agile Teams
   Gray CM, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P4044, DOI 10.1145/2858036.2858410
   Hanson N., 2017, UX Maturity Models-A Collection | Natalie Hanson, Nathaliehanson.Com
   Hassenzahl M., 2000, Synth. Lectures Hum.-Centered Inform., V3, P1, DOI [https://doi.org/10.2200/S00261ED1V01Y201003HCI008, DOI 10.2200/S00261-D1V01Y201003HCI008, DOI 10.2200/S00261ED1V01Y201003HCI008, 10.2200/S00261ED1V01Y201003HCI008]
   Hokkanen L., 2016, P ACADEMICMINDTREK 2, P59, DOI [10.1145/2994310.2994371, DOI 10.1145/2994310.2994371]
   Hokkanen L., 2016, Lecture Notes in Business Information Processing, V251, P66, DOI [10.1007/978, DOI 10.1007/978]
   Hokkanen L, 2015, PROCEEDINGS OF THE 20TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2015), DOI 10.1145/2855321.2855373
   Hokkanen L, 2015, LECT NOTES BUS INF P, V212, P81, DOI 10.1007/978-3-319-18612-2_7
   Hokkanen L, 2015, LECT NOTES COMPUT SC, V9459, P217, DOI 10.1007/978-3-319-26844-6_16
   Holm J, 2015, IEEE INT CONF INF VI, P245, DOI 10.1109/iV.2015.52
   Hossain SS, 2019, LECT NOTES COMPUT SC, V11623, P70, DOI 10.1007/978-3-030-24308-1_6
   InVision, 2019, NEW DES FRONT
   Jurca G, 2014, 2014 AGILE CONFERENCE (AGILE), P24, DOI 10.1109/AGILE.2014.17
   Kashfi P, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.130
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Klotins Eriks, 2019, Empirical Software Engineering, V24, P68, DOI 10.1007/s10664-018-9620-y
   Klotins E, 2021, IEEE T SOFTWARE ENG, V47, P498, DOI 10.1109/TSE.2019.2900213
   Kopec W, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P49, DOI 10.1145/3195836.3195840
   Kuusinen Kati, 2019, Human-Centered Software Engineering. 7th IFIP WG 13.2 International Working Conference, HCSE 2018. Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11262), P3, DOI 10.1007/978-3-030-05909-5_1
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Liikkanen LA, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P1095, DOI 10.1145/2639189.2670285
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   May Beverly, 2012, Proceedings of the 2012 Agile Conference, P141, DOI 10.1109/Agile.2012.18
   Norman D., 2020, DEFINITION USER EXPE
   Ogunyemi A, 2015, LECT NOTES COMPUT SC, V9297, P479, DOI 10.1007/978-3-319-22668-2_37
   Ogunyemi AA, 2019, INT J HUM-COMPUT INT, V35, P1461, DOI 10.1080/10447318.2018.1541544
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Preece J., 2019, INTERACTION DESIGN H, P656
   Ries E, 2011, The Lean Startup
   Schmidt M, 2008, J IND ECOL, V12, P82, DOI 10.1111/j.1530-9290.2008.00004.x
   Seyam M, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON COLLABORATION TECHNOLOGIES AND SYSTEMS, P124, DOI 10.1109/CTS.2015.7210412
   Sommerville I., 2011, Software engineering
   Souza R, 2017, 2017 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR STARTUPS (SOFTSTART 2017), P17, DOI 10.1109/SoftStart.2017.2
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Tzafilkou K, 2017, COMPUT HUM BEHAV, V72, P23, DOI 10.1016/j.chb.2017.02.035
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
   Wang Xiaofeng, 2016, INT C AG SOFTW DEV, P169, DOI 10.1007/978-3-319-33515-5_14
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 57
TC 8
Z9 8
U1 3
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2021
VL 140
AR 106688
DI 10.1016/j.infsof.2021.106688
EA JUL 2021
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY8FG
UT WOS:000701752600005
DA 2024-07-18
ER

PT J
AU Feng, S
   Keung, J
   Yu, X
   Xiao, Y
   Zhang, M
AF Feng, Shuo
   Keung, Jacky
   Yu, Xiao
   Xiao, Yan
   Zhang, Miao
TI Investigation on the stability of SMOTE-based oversampling techniques in
   software defect prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software defect prediction; Class imbalance; Oversampling; SMOTE;
   Empirical Software Engineering
ID IMBALANCED DATA
AB Context: In practice, software datasets tend to have more non-defective instances than defective ones, which is referred to as the class imbalance problem in software defect prediction (SDP). Synthetic Minority Oversampling TEchnique (SMOTE) and its variants alleviate the class imbalance problem by generating synthetic defective instances. SMOTE-based oversampling techniques were widely adopted as the baselines to compare with the newly proposed oversampling techniques in SDP. However, randomness is introduced during the procedure of SMOTE-based oversampling techniques. If the performance of SMOTE-based oversampling techniques is highly unstable, the conclusion drawn from the comparison between SMOTE-based oversampling techniques and the newly proposed techniques may be misleading and less convincing. Objective: This paper aims to investigate the stability of SMOTE-based oversampling techniques. Moreover, a series of stable SMOTE-based oversampling techniques are proposed to improve the stability of SMOTE-based oversampling techniques. Method: Stable SMOTE-based oversampling techniques reduce the randomness in each step of SMOTE-based oversampling techniques by selecting defective instances in turn, distance-based selection of K neighbor instances, and evenly distributed interpolation. Besides, we mathematically prove and also empirically investigate the stability of SMOTE-based and stable SMOTE-based oversampling techniques on four common classifiers across 26 datasets in terms of AUC, balance, and MCC. Results: The analysis of SMOTE-based and stable SMOTE-based oversampling techniques shows that the performance of stable SMOTE-based oversampling techniques is more stable and better than that of SMOTE based oversampling techniques. The difference between the worst and best performances of SMOTE-based oversampling techniques is up to 23.3%, 32.6%, and 204.2% in terms of AUC, balance, and MCC, respectively. Conclusion: Stable SMOTE-based oversampling techniques should be considered as a drop-in replacement for SMOTE-based oversampling techniques.
C1 [Feng, Shuo; Keung, Jacky; Zhang, Miao] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Yu, Xiao] Wuhan Univ Technol, Sch Comp Sci & Technol, Wuhan, Peoples R China.
   [Xiao, Yan] Natl Univ Singapore, Sch Comp, Singapore, Singapore.
C3 City University of Hong Kong; Wuhan University of Technology; National
   University of Singapore
RP Yu, X (corresponding author), Wuhan Univ Technol, Sch Comp Sci & Technol, Wuhan, Peoples R China.
EM shuofeng5-c@my.cityu.edu.hk; jacky.keung@cityu.edu.hk;
   xiaoyu@whut.edu.cn; dcsxan@nus.edu.sg; miazhang9-c@my.cityu.edu.hk
OI feng, shuo/0000-0002-1575-9891; XIAO, Yan/0000-0002-2563-083X; ZHANG,
   Miao/0000-0001-9659-9393; Keung, Jacky/0000-0002-3803-9600
FU Research Grants Council of Hong Kong [11208017]; City University of Hong
   Kong [7005028, 7005217]; Intel [9220097];  [9678149];  [9440227]; 
   [9229029];  [9440180];  [9220103]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong (No. 11208017) and the research
   funds of City University of Hong Kong (No. 7005028 and 7005217) , and
   the Research Support Fund by Intel (No. 9220097) , and funding supports
   from other industry partners (No. 9678149, 9440227, 9229029, 9440180,
   and 9220103) .
CR Abu Shanab A, 2012, 2012 IEEE 13TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P415, DOI 10.1109/IRI.2012.6303039
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2007, The promise repository of empirical software engineering data
   [Anonymous], 2017, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2016.2584050
   Arar ÖF, 2017, APPL SOFT COMPUT, V59, P197, DOI 10.1016/j.asoc.2017.05.043
   Bal PR, 2020, IEEE T RELIAB, V69, P1355, DOI 10.1109/TR.2020.2996261
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bennin KE, 2017, INT SYMP EMP SOFTWAR, P364, DOI 10.1109/ESEM.2017.50
   Blagus R, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-106
   Bunkhumpornpat C, 2009, LECT NOTES ARTIF INT, V5476, P475, DOI 10.1007/978-3-642-01307-2_43
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen X, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106441
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Cohen G, 2006, ARTIF INTELL MED, V37, P7, DOI 10.1016/j.artmed.2005.03.002
   Elreedy D, 2019, INFORM SCIENCES, V505, P32, DOI 10.1016/j.ins.2019.07.070
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Feng W, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8050815
   Gong LN, 2020, IEEE T RELIAB, V69, P40, DOI 10.1109/TR.2019.2895462
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   Hassan AE., 2018, IEEE Transactions on Software Engineering
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Khan SH, 2018, IEEE T NEUR NET LEAR, V29, P3573, DOI 10.1109/TNNLS.2017.2732482
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Ochodek M, 2019, INFORM SOFTWARE TECH, V115, P131, DOI 10.1016/j.infsof.2019.06.003
   Pak C, 2018, INT J SOFTW ENG KNOW, V28, P811, DOI 10.1142/S0218194018500237
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Provost F., 2000, P AAAI 2000 WORKSH I, V68, P1, DOI DOI 10.1109/SOCPAR.2011
   Rahman A, 2019, INFORM SOFTWARE TECH, V112, P148, DOI 10.1016/j.infsof.2019.04.013
   Shippey T, 2019, INFORM SOFTWARE TECH, V106, P142, DOI 10.1016/j.infsof.2018.10.001
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Wong GY, 2013, IEEE IND ELEC, P2354, DOI 10.1109/IECON.2013.6699499
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Yu Q, 2017, FRONT INFORM TECH EL, V18, P1744, DOI 10.1631/FITEE.1601322
   Yu X, 2020, IEEE T RELIAB, V69, P139, DOI 10.1109/TR.2019.2931559
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang L, 2017, IEEE T NEUR NET LEAR, V28, P3045, DOI 10.1109/TNNLS.2016.2607757
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
NR 42
TC 50
Z9 52
U1 25
U2 121
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106662
DI 10.1016/j.infsof.2021.106662
EA JUN 2021
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300001
DA 2024-07-18
ER

PT J
AU Wang, D
   Kula, RG
   Ishio, T
   Matsumoto, K
AF Wang, Dong
   Kula, Raula Gaikovina
   Ishio, Takashi
   Matsumoto, Kenichi
TI Automatic patch linkage detection in code review using textual content
   and file location features
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Modern code review; Mining software repositories; Patch linkage
ID INSPECTIONS
AB Context: Contemporary code review tools are a popular choice for software quality assurance. Using these tools, reviewers are able to post a linkage between two patches during a review discussion. Large development teams that use a review-then-commit model risk being unaware of these linkages. Objective: Our objective is to first explore how patch linkage impacts the review process. We then propose and evaluate models that detect patch linkage based on realistic time intervals. Method: First, we carry out an exploratory study on three open source projects to conduct linkage impact analysis using 942 manually classified linkages. Second, we propose two techniques using textual and file location similarity to build detection models and evaluate their performance. Results: The study provides evidence of latency in the linkage notification. We show that a patch with the Alternative Solution linkage (i.e., patches that implement similar functionality) undergoes a quicker review and avoids additional revisions after the team has been notified, compared to other linkage types. Our detection model experiments show promising recall rates for the Alternative Solution linkage (from 32% to 95%), but precision has room for improvement. Conclusion: Patch linkage detection is promising, with likely improvements if the practice of posting linkages becomes more prevalent. From our implications, this paper lays the groundwork for future research on how to increase patch linkage awareness to facilitate efficient reviews.
C1 [Wang, Dong; Kula, Raula Gaikovina; Ishio, Takashi; Matsumoto, Kenichi] Nara Inst Sci & Technol, Nara, Japan.
C3 Nara Institute of Science & Technology
RP Wang, D (corresponding author), Nara Inst Sci & Technol, Nara, Japan.
EM wang.dong.vt8@is.naist.jp
RI Kula, Raula/AAD-6079-2019
OI Kula, Raula/0000-0003-2324-0608; Ishio, Takashi/0000-0003-4106-699X
FU Japan Society for the Promotion of Science (JSPS) KAKENHI [JP18H04094,
   JP20K19774, JP20H05706]
FX The authors declare that they have no known competing finan-cial
   interests or personal relationships that could have appeared to
   influence the work reported in this paper. This work is supported by
   Japan Society for the Promotion of Science (JSPS) KAKENHI Grant Numbers
   JP18H04094, JP20K19774, and JP20H05706.
CR Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], 2006, International Journal of Hybrid Intelligent Systems, DOI DOI 10.3233/HIS-2006-3104
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Baum T, 2017, LECT NOTES COMPUT SC, V10611, P111, DOI 10.1007/978-3-319-69926-4_9
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   BRESLOW N, 1970, BIOMETRIKA, V57, P579, DOI 10.1093/biomet/57.3.579
   Brothers L., 1990, CSCW 90 Los Angeles. Proceedings of the Conference on Computer-Supported Cooperative Work, P169, DOI 10.1145/99332.99353
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Gintell J., 1993, Software Engineering - ESEC '93. 4th European Software Engineering Conference Proceedings, P344
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gusfield Dan, 1997, Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology, DOI DOI 10.1017/CBO9780511574931
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Hirao T, 2020, IEEE Transactions on Software Engineering, DOI [DOI 10.1109/TSE.2020.2977907, 10.1109/TSE.2020.2977907]
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   Kittler J, 1998, IEEE T PATTERN ANAL, V20, P226, DOI 10.1109/34.667881
   Lanubile F., 2013, IEEE SOFTWARE, V1, P8
   Li Z, 2017, P 9 ASIA PACIFIC S I
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   MASHAYEKHI V, 1993, IEEE SOFTWARE, V10, P66, DOI 10.1109/52.232404
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Perpich JM, 1997, PROC INT CONF SOFTW, P14, DOI 10.1145/253228.253234
   Ramos Juan., 2003, USING TF IDF DETERMI, V242, P29
   Ren LY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P230, DOI [10.1109/SANER.2019.8668023, 10.1109/saner.2019.8668023]
   Rigby P., 2012, IEEE SOFTWARE, V5, P6
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thung F., 2014, P 29 ACM IEEE INT C, P871
   Viera AJ, 2005, FAM MED, V37, P360
   Wang QY, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI [10.1007/s11104-019-04156-0, 10.1145/3361242.3361254]
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Willett P, 2006, PROGRAM-ELECTRON LIB, V40, P219, DOI 10.1108/00330330610681295
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Yu Y., 2016, INFORM SOFTWARE TECH, V20, P4
   Yu Y, 2018, IEEE WORK CONF MIN S, P22, DOI 10.1145/3196398.3196455
   Zhang X, 2018, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSME.2018.00032
   Zhang Y., 2019, IEEE T SOFTWARE ENG, P1
NR 52
TC 5
Z9 5
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106637
DI 10.1016/j.infsof.2021.106637
EA JUN 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA US8LY
UT WOS:000697678300008
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Farshidi, S
   Jansen, S
   Deldar, M
AF Farshidi, Siamak
   Jansen, Slinger
   Deldar, Mahdi
TI A decision model for programming language ecosystem selection: Seven
   case studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Programming language ecosystem selection; Decision model; Industry case
   study; Software production; Multi-criteria decision-making; Decision
   support system
ID SUPPORT-SYSTEM; SOFTWARE; SCIENCE; SIMULATION
AB Context: Software development is a continuous decision-making process that mainly relies on the software engineer's experience and intuition. One of the essential decisions in the early stages of the process is selecting the best fitting programming language ecosystem based on the project requirements. A significant number of criteria, such as developer availability and consistent documentation, in addition to the number of available options in the market, lead to a challenging decision-making process. As the selection of programming language ecosystems depends on the application to be developed and its environment, a decision model is required to analyze the selection problem using systematic identification and evaluation of potential alternatives for a development project. Method: Recently, we introduced a framework to build decision models for technology selection problems in software production. Furthermore, we designed and implemented a decision support system that uses such decision models to support software engineers with their decision-making problems. This study presents a decision model based on the framework for the programming language ecosystem selection problem. Results: The decision model has been evaluated through seven real-world case studies at seven software development companies. The case study participants declared that the approach provides significantly more insight into the programming language ecosystem selection process and decreases the decision-making process's time and cost. Conclusion: With the decision model, software engineers can more rapidly evaluate and select programming language ecosystems. Having the knowledge in the decision model readily available supports software engineers in making more efficient and effective decisions that meet their requirements and priorities. Furthermore, such reusable knowledge can be employed by other researchers to develop new concepts and solutions for future challenges.
C1 [Farshidi, Siamak] Univ Amsterdam, Informat Inst, Amsterdam, Netherlands.
   [Jansen, Slinger] Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
   [Jansen, Slinger] Lappeenranta Univ Technol, Dept Comp Sci, Lappeenranta, Finland.
   [Deldar, Mahdi] Data Kavosh Software, Tehran, Iran.
C3 University of Amsterdam; Utrecht University; Lappeenranta-Lahti
   University of Technology LUT
RP Farshidi, S (corresponding author), Univ Amsterdam, Informat Inst, Amsterdam, Netherlands.
EM s.farshidi@uva.nl; slinger.jansen@uu.nl; m.deldar@datakavosh.com
RI Roijackers, Slinger/Y-4244-2019; Farshidi, Siamak/GQH-3241-2022;
   Farshidi, Siamak/AAD-9788-2022
OI Roijackers, Slinger/0000-0003-3752-2868; Farshidi,
   Siamak/0000-0003-3270-4398
FU NWO [628.006.001]
FX We thank the twelve experts that participated in this research.
   Furthermore, we thank the excellent support we have received from the
   journal editors and reviewers. This work is part of AMUSE Project and
   funded by NWO [project number 628.006.001] .
CR [Anonymous], 2019, INFORM SOFTWARE TECH, V139
   Badampudi D, 2018, J SYST SOFTWARE, V135, P88, DOI 10.1016/j.jss.2017.09.033
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Burge J.E., 2008, Rationale-Based Software Engineering
   Carvallo J.P., 2006, P INT WORKSHOP SOFTW, P9
   Cochran JK, 2005, COMPUT OPER RES, V32, P153, DOI 10.1016/S0305-0548(03)00209-0
   Corbin J., 2015, BASICS QUALITATIVE R
   Costanza P, 2019, BMC BIOINFORMATICS, V20, DOI 10.1186/s12859-019-2903-5
   Dear developers, DEAR DEV CODING LANG
   Dodgson J., 2009, Multi-criteria Analysis: A Manual
   Donzelli P, 2006, IEEE SOFTWARE, V23, P67, DOI 10.1109/MS.2006.90
   Dougherty Dale., 1997, SED AWK UNIX POWER T
   Doumpos M, 2013, Multicriteria decision aid and artificial intelligence: links, theory and applications
   DSDM Consortium, 2014, DSDM AG PROJ FRAM HD
   Dvorak O., 2018, ENT ENG WORK C, P39
   Encheva Sylvia, 2009, Recent Advances in Computer Engineering, V192
   Farshidi S., 2018, 23 INT C REQ ENG FDN, V2075, P100
   Farshidi S., 2020, P 14 EUROPEAN C SOFT, V1, P1
   Farshidi S, 2019, MOST USED PROGRAMMIN
   Farshidi S., 2020, **DATA OBJECT**, DOI [10.17632/5tc6v6zkzf.1, DOI 10.17632/5TC6V6ZKZF.1]
   Farshidi S, SOFTW SYST MODEL, P1
   Farshidi S, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110714
   Farshidi S, 2020, IEEE T ENG MANAGE, V67, P1109, DOI 10.1109/TEM.2019.2956897
   Farshidi S, 2018, CONF BUS INFORM, P139, DOI 10.1109/CBI.2018.00024
   Farshidi S, 2018, J DECIS SYST, V27, P98, DOI 10.1080/12460125.2018.1464821
   Feraud M, 2017, PROCEDIA COMPUT SCI, V109, P1080, DOI 10.1016/j.procs.2017.05.389
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fitzgerald DR, 2017, PERS INDIV DIFFER, V104, P339, DOI 10.1016/j.paid.2016.08.030
   Floudas C.A., 2008, Encyclopedia of optimization
   Fortus D, 2005, INT J SCI EDUC, V27, P855, DOI 10.1080/09500690500038165
   Garg Rakesh, 2019, International Journal of Reliability and Safety, V13, P291
   Garg R., 2017, Decis. Sci. Lett, V6, P117, DOI DOI 10.5267/J.DSL.2016.11.002
   Garg R, 2022, IEEE T CLOUD COMPUT, V10, P863, DOI 10.1109/TCC.2020.2980534
   Garg R, 2019, IEEE T EDUC, V62, P11, DOI 10.1109/TE.2018.2814611
   Gil-Aluja J., 2013, HDB MANAGEMENT UNCER, V55
   Gruber T.R, 1989, KNOWLEDGE ACQUISITIO, P47
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   HOLTZ NM, 1988, ENG COMPUT, V3, P183, DOI 10.1007/BF01202140
   Ibriwesh I, 2018, ARAB J SCI ENG, V43, P7995, DOI 10.1007/s13369-018-3283-2
   ISO, 2011, IEC 25010: 2011 systems and software engineering-systems and software quality requirements and evaluation (square)-system and software quality models, V34, P2910
   Jansen S, 2009, Information Systems Research Methods, Epistemology, and Applications, P120
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P29
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Jones SP, 2008, LECT NOTES COMPUT SC, V5356, P138
   JONES SRG, 1992, AM J SOCIOL, V98, P451, DOI 10.1086/230046
   Kaufmann L, 2012, J PURCH SUPPLY MANAG, V18, P76, DOI 10.1016/j.pursup.2012.04.004
   Khadka R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P36
   Khari M, 2013, International Journal of Global Research in Computer Science (UGC Approved Journal), V4, P38
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Lesani S.H., 2014, International Journal of the Analytic Hierarchy Process, V29, P1
   Mannila L., 2006, P BALTIC SEA C COMPU, P32
   Meredith J., 1989, J OPER MANAG, V8, P297
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Mishra AR, 2020, GRANULAR COMPUT, V5, P97, DOI 10.1007/s41066-018-0130-5
   Montibeller G, 2015, RISK ANAL, V35, P1230, DOI 10.1111/risa.12360
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   NADEAU R, 1993, INT POLIT SCI REV, V14, P203, DOI 10.1177/019251219301400204
   Parker KR, 2006, J INF TECHNOL EDUC-R, V5, P133
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Ribeiro RA, 2011, DECIS SUPPORT SYST, V51, P208, DOI 10.1016/j.dss.2010.12.009
   Ruhe G, 2002, LECT NOTES COMPUT SC, V2640, P104
   Rus I, 2003, INT J SOFTW ENG KNOW, V13, P531, DOI 10.1142/S0218194003001391
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sandhya R, 2018, INT J INF DECIS SCI, V10, P222
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Sujeeth A.K., 2011, ICML
   Triantaphyllou E., 1998, Encyclopedia of Electrical and Electronics Engineering, V15, P175
   Vujosevic-Janicic M, 2008, TEACH MATH-SERB, V11, P63
   Walls JG, 1992, INFORM SYST RES, V3, P36, DOI 10.1287/isre.3.1.36
   Xu L, 2007, EUR J INFORM SYST, V16, P531, DOI 10.1057/palgrave.ejis.3000703
   Yildizbasi A, 2018, COMPUT APPL ENG EDUC, V26, P1992, DOI 10.1002/cae.21961
   Yin R.K., 2014, Applications of case study research, V2nd
   YIN RK, 1981, KNOWLEDGE, V3, P97, DOI 10.1177/107554708100300106
   Yoon I, 2016, CLUSTER COMPUT, V19, P529, DOI 10.1007/s10586-016-0540-6
NR 77
TC 13
Z9 13
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2021
VL 139
AR 106640
DI 10.1016/j.infsof.2021.106640
EA JUN 2021
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA US8LY
UT WOS:000697678300003
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Peltonen, S
   Mezzalira, L
   Taibi, D
AF Peltonen, Severi
   Mezzalira, Luca
   Taibi, Davide
TI Motivations, benefits, and issues for adopting Micro-Frontends: A
   Multivocal Literature Review
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Micro-Frontends; Microservices; Web front-end development; Software
   architectures; Multivocal Literature Review
ID GREY LITERATURE; MICROSERVICES
AB Context: Micro-Frontends are increasing in popularity, being adopted by several large companies, such as DAZN, Ikea, Starbucks and may others. Micro-Frontends enable splitting of monolithic frontends into independent and smaller micro applications. However, many companies are still hesitant to adopt MicroFrontends, due to the lack of knowledge concerning their benefits. Additionally, provided online documentation is often times perplexed and contradictory.
   Objective: The goal of this work is to map the existing knowledge on Micro-Frontends, by understanding the motivations of companies when adopting such applications as well as possible benefits and issues.
   Method: For this purpose, we surveyed the academic and grey literature by means of the Multivocal Literature Review process, analysing 173 sources, of which 43 reported motivations, benefits and issues.
   Results: The results show that existing architectural options to build web applications are cumbersome if the application and development team grows, and if multiple teams need to develop the same frontend application. In such cases, companies adopted Micro-Frontends to increase team independence and to reduce the overall complexity of the frontend. The application of the Micro-Frontend, confirmed the expected benefits, and Micro-Frontends resulted to provide the same benefits as microservices on the back end side, combining the development team into a fully cross-functional development team that can scale processes when needed. However, Micro-Frontends also showed some issues, such as the increased payload size of the application, increased code duplication and coupling between teams, and monitoring complexity.
   Conclusions: Micro-Frontends allow companies to scale development according to business needs in the same way microservices do with the back end side. In addition, Micro-Frontends have a lot of overhead and require careful planning if an advantage is achieved by using Micro-Frontends. Further research is needed to carefully investigate this new hype, by helping practitioners to understand how to use Micro-Frontends as well as understand in which contexts they are the most beneficial.
C1 [Peltonen, Severi; Taibi, Davide] Tampere Univ, Tampere, Finland.
   [Mezzalira, Luca] DAZN, London, England.
C3 Tampere University
RP Taibi, D (corresponding author), Tampere Univ, Tampere, Finland.
EM severi.peltonen@gmail.com; luca.mezzalira@dazn.com; davide.taibi@tuni.fi
RI Taibi, Davide/E-4935-2015
OI Taibi, Davide/0000-0002-3210-3990
CR [Anonymous], 2020, INSTANCE LIFECYCLE H
   [Anonymous], 2019, ADOPTING MICROFRONTE
   [Anonymous], 2020, HOOKING COMPONENT LI
   [Anonymous], 2020, JAVASCRIPT HTML DOM
   [Anonymous], 2018, EXPERIENCES USING MI
   [Anonymous], 2016, TECHNOLOGY RADAR MIC
   [Anonymous], 2013, AIRBNBENG ISOMORPHIC
   [Anonymous], 2020, STATE LIFECYCLE
   [Anonymous], 2020, JAMSTACK STATIC WEBS
   [Anonymous], 1998, DOCUMENT OBJECT MODE
   [Anonymous], 2020, ACM DIGITAL LIB
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Bosch J, 2016, IEEE SOFTWARE, V33, P82, DOI 10.1109/MS.2016.14
   Caifang Yang, 2019, IOP Conference Series: Materials Science and Engineering, V490, DOI 10.1088/1757-899X/490/6/062082
   Chen LP, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P39, DOI 10.1109/ICSA.2018.00013
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Geers M., 2020, EXTENDING MICROSERVI
   Huang P., 2018, MOOA FRAMEWORK
   Jadhav MA, 2015, Int J Comput Sci Inf Technol, V6, P2876
   Khononoc V., 2019, WHAT IS DOMAIN DRIVE
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kotte G.N., 2016, 6 REASONS ISOMORPHIC
   Lenarduzzi V, 2021, IEEE SOFTWARE, V38, P54, DOI 10.1109/MS.2020.3030803
   Lenarduzzi V, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110710
   Mena M, 2019, IEEE ACCESS, V7, P104577, DOI 10.1109/ACCESS.2019.2932196
   Mezzalira L., 2021, IEEE SOFTWARE
   Mikowski M., 2013, SINGLE PAGE WEB APPL
   Neri D, 2020, SICS SOFTWARE, V35, P3, DOI 10.1007/s00450-019-00407-8
   Nupponen J, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P49, DOI [10.1109/ICSA-C50368.2020.00016, 10.1109/ICSA-050368.2020.00016]
   Pavlenko A., 2020, J INTERNET SERV INF, V10
   Soderlund T., 2017, MICROFRONTENDS MICRO
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Strauss A., 1990, BASICS QUALITATIVE R
   Taibi D., 2020, **DATA OBJECT**
   Taibi D, 2021, IEEE SOFTWARE, V38, P25, DOI 10.1109/MS.2020.3028708
   Taibi D, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P181, DOI 10.5220/0009578501810192
   Taibi D, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P111, DOI 10.1007/978-3-030-31646-4_5
   Taibi D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P221, DOI 10.5220/0006798302210232
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Takada M., 2013, MODERN WEB APPL OVER
   Wohlin C., 2012, Experimentation in Software Engineering
NR 42
TC 13
Z9 13
U1 6
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106571
DI 10.1016/j.infsof.2021.106571
EA MAR 2021
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Zhang, FL
   Khoo, SC
AF Zhang, Fanlong
   Khoo, Siau-cheng
TI An empirical study on clone consistency prediction based on machine
   learning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Code clones; Clone consistent change; Clone consistency prediction;
   Software maintenance; Machine learning
ID CODE CLONES
AB Context: Code Clones have been accepted as a common phenomenon in software, thanks to the increasing demand for rapid production of software. The existence of code clones is recognized by developers in the form of clone group, which includes several pieces of clone fragments that are similar to one another. A change in one of these clone fragments may indicate necessary "consistent changes"are required for the rest of the clones within the same group, which can increase extra maintenance costs. A failure in making such consistent change when it is necessary is commonly known as a "clone consistency-defect", which can adversely impact software maintainability. Objective: Predicting the need for "clone consistent changes"after successful clone-creating or clone-changing operations can help developers maintain clone changes effectively, avoid consistency-defects and reduce maintenance cost.
   Method: In this work, we use several sets of attributes in two scenarios of clone operations (clone-creating and clone-changing), and conduct an empirical study on five different machine-learning methods to assess each of their clone consistency predictability - whether any one of the clone operations will require or be free of clone consistency maintenance in future.
   Results: We perform our experiments on eight open-source projects. Our study shows that such predictions can be reasonably effective both for clone-creating and changing operating instances. We also investigate the use of five different machine-learning methods for predictions and show that our selected features are effective in predicting the needs of consistency-maintenance across all selected machine-learning methods.
   Conclusion: The empirical study conducted here demonstrates that the models developed by different machine-learning methods with the specified sets of attributes have the ability to perform clone-consistency prediction.
C1 [Zhang, Fanlong] Guangdong Univ Technol, Sch Comp, Guangzhou, Peoples R China.
   [Khoo, Siau-cheng] Natl Univ Singapore, Sch Comp, Singapore, Singapore.
C3 Guangdong University of Technology; National University of Singapore
RP Zhang, FL (corresponding author), Guangdong Univ Technol, Sch Comp, Guangzhou, Peoples R China.
EM izhangfanlong@gmail.com; khoosc@nus.edu.sg
FU China Scholarship Council (CSC) [201908440533]; Guangdong Provincial Key
   Laboratory of Cyber-Physical Systems, China [2016B030301008]; National
   AMP; Local Joint Engineering Research Center of Intelligent
   Manufacturing Cyber-Physical Systems; Key Area Research and Development
   Program of Guangdong, China [2018B010109007]; Guangdong Joint Fund of
   the National Natural Science Foundation of China [U1801263, U1701262]
FX This work is supported in part by the scholarship from China Scholarship
   Council (CSC) under the Grant CSC No. 201908440533 during a visit of the
   first author to the National University of Singapore as a postdoctoral
   fellow. This work is supported by Guangdong Provincial Key Laboratory of
   Cyber-Physical Systems, China (Grant No. 2016B030301008) , National &
   Local Joint Engineering Research Center of Intelligent Manufacturing
   Cyber-Physical Systems, the Key Area Research and Development Program of
   Guangdong, China (Grant No. 2018B010109007) , Guangdong Joint Fund of
   the National Natural Science Foundation of China (Grant No. U1801263,
   U1701262) .
CR AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   Al-Ghamdi, 2015, P 19 INT C EV ASS SO, P10
   [Anonymous], 1993, MORGAN KAUFMANN SERI
   [Anonymous], 2007, QUEENS SCH COMPUT T
   Aversano L, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P81
   Bettenburg N, 2009, WORK CONF REVERSE EN, P85, DOI 10.1109/WCRE.2009.51
   Cheng X, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P13, DOI 10.1109/SANER.2016.20
   Ci M, 2013, INT CONF INSTR MEAS, P848, DOI 10.1109/IMCCC.2013.189
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Duala-Ekoko E, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767754
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koschke Rainer, 2007, DUPLICATION REDUNDAN
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Lin Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P520, DOI 10.1145/2786805.2786871
   Mondal M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P93, DOI [10.1109/SANER48275.2020.9054846, 10.1109/saner48275.2020.9054846]
   Mondal M, 2016, SOFTWARE QUAL J, V24, P883, DOI 10.1007/s11219-016-9305-y
   Nadim M, 2020, INT WORKS SOFTW CLON, P15, DOI [10.1109/IWSC50091.2020.9047639, 10.1109/iwsc50091.2020.9047639]
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saha R. K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P293, DOI 10.1109/ICSM.2011.6080796
   Su X., 2020, IEEE ACCESS
   Wagner S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P79, DOI 10.1109/SANER.2016.94
   Wang XY, 2014, IEEE T SOFTWARE ENG, V40, P773, DOI 10.1109/TSE.2014.2323972
   Xie S, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P94, DOI 10.1109/CSMR-WCRE.2014.6747229
   Zhang FL, 2017, J SYST SOFTWARE, V134, P105, DOI 10.1016/j.jss.2017.08.045
   Zhang FL, 2017, CHINESE J ELECTRON, V26, P1132, DOI 10.1049/cje.2017.08.012
   Zhang FL, 2016, PROC INT SYMP SOFTW, P353, DOI 10.1109/ISSRE.2016.11
NR 39
TC 5
Z9 6
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2021
VL 136
AR 106573
DI 10.1016/j.infsof.2021.106573
EA MAR 2021
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SJ2MZ
UT WOS:000655363900008
DA 2024-07-18
ER

PT J
AU Javed, M
   Lin, YQ
AF Javed, Muhammad
   Lin, Yuqing
TI iMER: Iterative process of entity relationship and business process
   model extraction from the requirements
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Entity relationship model; Business process model; General requirements;
   User stories; Use case specification; Natural language processing
AB Context: Extracting conceptual models, e.g., entity relationship model or Business Process model, from software requirement document is an essential task in the software development life cycle. Business process model presents a clear picture of required system's functionality. Operations in business process model together with the data entity consumed, help the software developers to understand the database design and operations to be implemented. Researchers have been aiming at automatic extraction of these artefacts from the requirement document.
   Objective: In this paper, we present an automated approach to extract the entity relationship and business process models from requirements, which are possibly in different formats such as general requirements, use case specification and user stories. Our approach is based on the efficient natural language processing techniques.
   Method: It is an iterative approach of Models Extraction from the Requirements (iMER). iMER has multiple iterations where each iteration is to address a sub-problem. In the first iteration, iMER extracts the data entities and attributes. Second iteration is to find the relationships between data entities, while extracting cardinalities is in the third step. Business process model is generated in the fourth iteration, containing the external (actors') and internal (system's) operations.
   Evaluation: To evaluate the performance and accuracy of iMER, experiments are conducted on various formats of the requirement documents. Additionally, we have also evaluated our approaches using the requirement documents which been modified by shuffling the sentences and by merging with other requirements. Comparative study is also performed. The preliminary results show a noticeable improvement.
   Conclusion: The iMER is an efficient automated iterative approach that is able to extract the conceptual models from the various formats of requirements.
C1 [Javed, Muhammad; Lin, Yuqing] Univ Newcastle, Sch Elect Engn & Comp, Callaghan, NSW, Australia.
C3 University of Newcastle
RP Javed, M (corresponding author), Univ Newcastle, Sch Elect Engn & Comp, Callaghan, NSW, Australia.
EM m.javed@uon.edu.au; yuqing.lin@newcastle.edu.au
CR Abdessalem W.B, 2012, INT C COMP REL KNOL
   Al-Safadi L.A., 2009, INT J DIGITAL CONTEN, V3, P47
   Ambriola V., 2006, Automated Software Engineering, V13, P107, DOI 10.1007/s10515-006-5468-2
   [Anonymous], 2012, FORMAL CONCEPT ANAL
   [Anonymous], 2008, TECHNICAL REPORT
   [Anonymous], 2003, Formal Concept Analysis: Methods, and Applications in Computer Science
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Bajwa IS., 2009, European Journal of Scientific Research, V35, P22
   Becker J, 2000, LECT NOTES COMPUT SC, V1806, P30
   Btoush E., 2015, International Journal of Database Theory and Application, V8, P61
   Cole R, 2005, LECT NOTES COMPUT SC, V3403, P113
   Echeverria Jorge, 2018, Advances in Information Systems Development. Methods, Tools and Management. Lecture Notes in Information Systems and Organisation (LNISO 26), P33, DOI 10.1007/978-3-319-74817-7_3
   Elbendak M, 2011, J SYST SOFTWARE, V84, P1209, DOI 10.1016/j.jss.2011.02.025
   Fathi M., 2017, EL COMP ENG CCECE 20, P1
   Gupta A., 2017, ARXIV PREPRINT ARXIV
   Hamza HS, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P813, DOI 10.1109/ITNG.2009.276
   Harmain H. M., 2003, Automated Software Engineering, V10, P157, DOI 10.1023/A:1022916028950
   Hartmann Sven., 2007, Proceedings of the fourth Asia-Pacific conference on Comceptual modelling-, V67, P27
   Il-Yeol Song, 1995, Journal of Computer and Software Engineering, V3, P427
   Karaa WB, 2016, SOFTWARE PRACT EXPER, V46, P1443, DOI 10.1002/spe.2384
   Kienzle J, 2010, LECT NOTES COMPUT SC, V6210, P1
   Lin Y, 2019, INT C INT SCI, P143
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Marcus M. P., 1993, Computational Linguistics, V19, P313, DOI DOI 10.21236/ADA273556
   Meziane F., 2004, P 6 INT C ENT INF SY, P638
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Omar N., 2004, P AICS DUBL IR, P302
   Omer M., 2015, INT J COMPUT INF SYS, V9, P33
   Overmyer SP, 2001, PROC INT CONF SOFTW, P401, DOI 10.1109/ICSE.2001.919113
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Priss U, 2004, J UNIVERS COMPUT SCI, V10, P967
   Sagar VBRV, 2014, J SYST SOFTWARE, V88, P25, DOI 10.1016/j.jss.2013.08.036
   Silva P.S.M, 2011, WER
   Uduwela W.C., 2015, INT J DATABASE MANAG, V7, P49, DOI DOI 10.5121/IJDMS.2015.7604
   Yue T, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699697
NR 36
TC 4
Z9 4
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2021
VL 135
AR 106558
DI 10.1016/j.infsof.2021.106558
EA MAR 2021
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RQ5WO
UT WOS:000642489200002
DA 2024-07-18
ER

PT J
AU Panichella, A
AF Panichella, Annibale
TI A Systematic Comparison of search-Based approaches for LDA
   hyperparameter tuning
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Topic modeling; Latent dirichlet allocation; Search-based software
   engineering; Metaheuristic search; Duplicate bug report; Hyperparameter
   optimization
ID RECOVERING TRACEABILITY LINKS; DUPLICATE BUG REPORTS;
   INFORMATION-RETRIEVAL; SOURCE CODE; R PACKAGE; ALGORITHMS; EVOLUTION;
   NUMBER
AB Context:Latent Dirichlet Allocation (LDA) has been successfully used in the literature to extract topics from software documents and support developers in various software engineering tasks. While LDA has been mostly used with default settings, previous studies showed that default hyperparameter values generate sub-optimal topics from software documents.
   Objective: Recent studies applied meta-heuristic search (mostly evolutionary algorithms) to configure LDA in an unsupervised and automated fashion. However, previous work advocated for different meta-heuristics and surrogate metrics to optimize. The objective of this paper is to shed light on the influence of these two factors when tuning LDA for SE tasks.
   Method:We empirically evaluated and compared seven state-of-the-art meta-heuristics and three alternative surrogate metrics (i.e., fitness functions) to solve the problem of identifying duplicate bug reports with LDA. The benchmark consists of ten real-world and open-source projects from the Bench4BL dataset.
   Results:Our results indicate that (1) meta-heuristics are mostly comparable to one another (except for random search and CMA-ES), and (2) the choice of the surrogate metric impacts the quality of the generated topics and the tuning overhead. Furthermore, calibrating LDA helps identify twice as many duplicates than untuned LDA when inspecting the top five past similar reports.
   Conclusion:No meta-heuristic and/or fitness function outperforms all the others, as advocated in prior studies. However, we can make recommendations for some combinations of meta-heuristics and fitness functions over others for practical use. Future work should focus on improving the surrogate metrics used to calibrate/tune LDA in an unsupervised fashion.
C1 [Panichella, Annibale] Delft Univ Technol, Delft, Netherlands.
C3 Delft University of Technology
RP Panichella, A (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM a.panichella@tudelft.nl
CR Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Aletras N., 2013, P 10 INT C COMP SEM, P13, DOI [10.1145/2537052, DOI 10.1145/2537052]
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 1994, Advances in neural information processing systems
   [Anonymous], Introduction to genetic algorithms
   [Anonymous], 2002, Proceedings of the Eighteenth Conference on Uncertainty in Artificial Intelligence. UAI'02
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P136, DOI 10.1109/WCRE.1999.806954
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Anvik J, 2007, THESIS
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Baeza-Yates R., 1999, Modern information retrieval
   Baker R.D., 1995, Randomization Tests
   Bartz-Beielstein T, 2010, ARXIV10064645
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Binkley D., 2009, Encyclopedia of Software Engineering
   Binkley D, 2016, J SOFTW-EVOL PROC, V28, P893, DOI 10.1002/smr.1802
   Bird C., 2015, The Art and Science of Analyzing Software Data
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Capobianco G., 2009, 17 IEEE INT C PROGR
   Capobianco G, 2013, J SOFTW-EVOL PROC, V25, P743, DOI 10.1002/smr.1564
   Das S, 2011, IEEE T EVOLUT COMPUT, V15, P4, DOI 10.1109/TEVC.2010.2059031
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   Deb Kalyanmoy, 2014, International Journal of Artificial Intelligence and Soft Computing, V4, P1, DOI 10.1504/IJAISC.2014.059280
   Deb K., 1995, Complex Systems, V9, P115
   Eberhart R.C., 1995, Proc Int Symp Micro Mach Hum Sci, P39, DOI [DOI 10.1109/MHS.1995.494215, 10.1109/mhs.1995.494215]
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Fukuda S, 2019, LECT NOTES COMPUT SC, V11707, P65, DOI 10.1007/978-3-030-27618-8_5
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   Gbenga DE, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2906150
   Ghalanos A., 2014, PACKAGE PARMA
   Gilli D. M. Manfred, 2011, NUMERICAL METHODS OP
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Grün B, 2011, J STAT SOFTW, V40, P1
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hansen N, 2001, EVOL COMPUT, V9, P159, DOI 10.1162/106365601750190398
   Hindle A, 2019, EMPIR SOFTW ENG, V24, P902, DOI 10.1007/s10664-018-9643-4
   Hughes MC, 2015, JMLR WORKSH CONF PRO, V38, P370
   Japkowicz N., 2011, EVALUATING LEARNING, DOI [10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803]
   Kotelyanskii A, 2014, INT CONF QUAL SOFTW, P79, DOI 10.1109/QSIC.2014.43
   Kumar S, 2007, INT J ELEC POWER, V29, P738, DOI 10.1016/j.ijepes.2007.06.001
   Laarhoven P. J. M., 1987, Simulated Annealing, DOI [10.1007/978-94-015-7744-1, DOI 10.1007/978-94-015-7744-1_2]
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mantyla M.V., 2018, P 12 ACM IEEE INT S, P49
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mimno D, 2011, EMNLP, P262, DOI DOI 10.5555/2145432.2145462
   Mullen KM, 2011, J STAT SOFTW, V40, P1
   Onan A, 2018, COMPUT MATH METHOD M, V2018, DOI 10.1155/2018/2497471
   Panichella A, 2019, LECT NOTES COMPUT SC, V11664, P11, DOI 10.1007/978-3-030-27455-9_2
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella A, 2013, EUR CON SFTWR MTNCE, P199, DOI 10.1109/CSMR.2013.29
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Porteous I., 2008, P 14 ACM SIGKDD INT, P569, DOI DOI 10.1145/1401890.1401960
   Price Kenneth, 2006, NAT COMP SER, DOI 10.1007/3-540-31306-0
   Richter J., 2019, RANDOMSEARCH RANDOM
   Scrucca L, 2013, J STAT SOFTW, V53, P1
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Stevens K, 2012, P JOINT C EMPIRICAL, P952, DOI DOI 10.5555/2390948.2391052
   Subeno B., 2018, INT J ELECT COMPUTER, V8
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Teh YW, 2006, J AM STAT ASSOC, V101, P1566, DOI 10.1198/016214506000000302
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Valcarce D, 2018, 12TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS), P260, DOI 10.1145/3240323.3240347
   Whitley D., 2012, Handbook of natural computing, P637, DOI DOI 10.1007/978-3-540-92910-9_21
   Willett P, 2006, PROGRAM-ELECTRON LIB, V40, P219, DOI 10.1108/00330330610681295
   Xing W, 2006, SIXTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P178
   Yarnguy T., 2018, J TELECOMMUN ELECT C, V10, P21
   Yoshida T., 2020, ARXIV200210855
   Zhang Y., 2015, MATH PROBLEMS ENG 20, V2015
   Zhang Y, 2017, FUTURE GENER COMP SY, V66, P30, DOI 10.1016/j.future.2015.12.001
   Zheng YL, 2003, 2003 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-5, PROCEEDINGS, P1802, DOI 10.1109/ICMLC.2003.1259789
NR 82
TC 27
Z9 30
U1 5
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2021
VL 130
AR 106411
DI 10.1016/j.infsof.2020.106411
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PI2JM
UT WOS:000600922900017
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Amin, A
   Basri, S
   Rahman, M
   Capretz, LF
   Akbar, R
   Gilal, AR
   Shabbir, MF
AF Amin, Aamir
   Basri, Shuib
   Rahman, Mobashar
   Capretz, Luiz Fernando
   Akbar, Rehan
   Gilal, Abdul Rehman
   Shabbir, Muhammad Farooq
TI The impact of personality traits and knowledge collection behavior on
   programmer creativity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Programmer; Creativity; Personality traits; Big
   five; Knowledge collection behavior; Creativity intention
ID EMPLOYEE CREATIVITY; OPENNESS; INTELLIGENCE; MODEL; CONSCIENTIOUSNESS;
   SATISFACTION; PERFORMANCE; DIMENSIONS; EXPERIENCE; LEADERSHIP
AB Context: Creativity is one of the essential ingredients in successful software engineering. However, majority of the work related to creativity in software engineering has focused on creativity in requirement engineering. Furthermore, there are very few studies that examine programmer creativity and the impact of individual and contextual factors on it.
   Objective: The objective of the study is to analyze the impact of the big five personality traits including extraversion, agreeableness, conscientiousness, neuroticism and openness to experience, as well as knowledge collection behavior on a programmer's creativity intention.
   Method: A quantitative survey was conducted and data from 294 programmers, working in offshore software development projects, was collected. The data was later analyzed using Smart-PLS (3.0).
   Results and Conclusions: The results indicated that openness to experience, extraversion, conscientiousness and knowledge collection behavior positively predicted a programmer's creativity intention. On the other hand, neuroticism negatively predicts creativity intention of the programmer. The study also concluded that all of the independent variables, except the agreeableness trait, significantly predict creativity intention which in turn significantly predicts creativity. As a result, our conclusions indicate that programmer's personality traits and knowledge collection behavior play a key role in shaping their intention to be creative. Hence, personality traits and knowledge collection behavior should be given due attention during the hiring process of creativity-oriented software companies.
C1 [Amin, Aamir; Basri, Shuib; Rahman, Mobashar; Capretz, Luiz Fernando; Akbar, Rehan; Gilal, Abdul Rehman; Shabbir, Muhammad Farooq] Univ Tunku Abdul Rahman, Kampus Perak, Kampar, Malaysia.
C3 Universiti Tunku Abdul Rahman (UTAR)
RP Amin, A (corresponding author), Univ Tunku Abdul Rahman, Kampus Perak, Kampar, Malaysia.
EM aamir@utar.edu.my
RI amin, aamir/Z-2996-2019; Capretz, Luiz Fernando/K-5944-2013; SHABBIR,
   MUHAMMAD FAROOQ/AAC-4114-2019; Gilal, Abdul Rehman/M-3039-2017
OI amin, aamir/0000-0001-6385-452X; Capretz, Luiz
   Fernando/0000-0001-6966-2369; SHABBIR, MUHAMMAD
   FAROOQ/0000-0002-7846-701X; Gilal, Abdul Rehman/0000-0002-1904-1588
CR Abdullah I., 2016, International Review of Management and Marketing, V6, P177, DOI DOI 10.18775/IJMSBA.1849-5664-5419.2014.22.1001
   Abel G, 2013, J CHINESE PHILOS, V40, P17, DOI 10.1111/1540-6253.12063
   AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   Amabile T., 2012, ENCY MANAGEMENT THEO, P2013
   Amabile T.M., 2008, HDB ORG CREATIVITY, P33
   AMABILE TM, 1988, RES ORGAN BEHAV, V10, P123
   Amin Aamir, 2015, 2015 International Symposium on Technology Management and Emerging Technologies (ISTMET), P108, DOI 10.1109/ISTMET.2015.7359011
   Amin A, 2018, P INT CONF INTELL, P90, DOI 10.1109/ISMS.2018.00026
   [Anonymous], 2010, HDB PARTIAL LEAST SQ
   [Anonymous], 2010, SIGSOFT SOFTW ENG NO, DOI DOI 10.1145/1734103.1734111
   Anwar R, 2019, IEEE ACCESS, V7, P24231, DOI 10.1109/ACCESS.2019.2895690
   Bahl Sanjay, 2014, Information Management & Computer Security, V22, P2, DOI 10.1108/IMCS-01-2013-0002
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Batey M, 2006, GENET SOC GEN PSYCH, V132, P355, DOI 10.3200/MONO.132.4.355-430
   Batey M, 2010, LEARN INDIVID DIFFER, V20, P532, DOI 10.1016/j.lindif.2010.04.008
   Batey M, 2009, THINK SKILLS CREAT, V4, P60, DOI 10.1016/j.tsc.2009.01.002
   BERENBAUM H, 1994, J ABNORM PSYCHOL, V103, P148, DOI 10.1037/0021-843X.103.1.148
   Bledow R, 2013, ACAD MANAGE J, V56, P432, DOI 10.5465/amj.2010.0894
   Bock GW, 2005, MIS QUART, V29, P87, DOI 10.2307/25148669
   Cao J, 2011, S VIS LANG HUM CEN C, P35, DOI 10.1109/VLHCC.2011.6070375
   Capretz LF., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2088883.2088901
   Capretz LF, 2017, INFORM SOFTWARE TECH, V92, P92, DOI 10.1016/j.infsof.2017.07.011
   Chen BB, 2016, PERS INDIV DIFFER, V102, P56, DOI 10.1016/j.paid.2016.06.061
   Chen IYL, 2009, EDUC TECHNOL SOC, V12, P134
   Choi JN, 2012, SOC BEHAV PERSONAL, V40, P681, DOI 10.2224/sbp.2012.40.4.681
   Conboy K, 2009, IFIP ADV INF COMM TE, V301, P122, DOI 10.1007/978-3-642-02388-0_9
   Costa P., 1992, REVISED PERSONALITY
   Crawford B., 2012, ENG APPL WEA 2012 WO, P1
   Crawford BG, 2012, ASEE ANNU CONF EXPO
   Crawford B, 2007, LECT NOTES COMPUT SC, V4536, P161
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Denning PJ, 2012, COMMUN ACM, V55, P33, DOI 10.1145/2380656.2380668
   Dhondt S., 2003, KNOWLEDGE MANAGEMENT
   Dijkstra TK, 2015, COMPUT STAT DATA AN, V81, P10, DOI 10.1016/j.csda.2014.07.008
   Dollinger SJ, 2004, CREATIVITY RES J, V16, P35, DOI 10.1207/s15326934crj1601_4
   Driskell JE, 2006, GROUP DYN-THEOR RES, V10, P249, DOI 10.1037/1089-2699.10.4.249
   Esfahani A.N., 2012, Journal of Basic and Applied Scientific Research, V2, P3457
   Feist G J, 1998, Pers Soc Psychol Rev, V2, P290, DOI 10.1207/s15327957pspr0204_5
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Furnham A., 2006, IMAG COGN PERS, V25, P119, DOI [https://doi.org/10.2190/530V-3M9U-7UQ8-FMBG, DOI 10.2190/530V-3M9U-7UQ8-FMBG, 10.2190/530V-3M9U-7UQ8-FMBG]
   Furnham A, 2008, PERS INDIV DIFFER, V45, P613, DOI 10.1016/j.paid.2008.06.023
   Furnham A, 2008, PERS INDIV DIFFER, V44, P1060, DOI 10.1016/j.paid.2007.10.035
   Gee Woo Bock, 2002, Information Resources Management Journal, V15, P14, DOI 10.4018/irmj.2002040102
   George D., 2006, SPSS WINDOWS STEP ST, VSixth
   George JM, 2001, J APPL PSYCHOL, V86, P513, DOI 10.1037//0021-9010.86.3.513
   Glass R.L., 1995, SOFTWARE CREATIVITY
   GOFF K, 1993, EDUC GERONTOL, V19, P241, DOI 10.1080/0360127930190304
   Goldberg L.R., 1999, Personality psychology in Europe, V7, P7, DOI DOI 10.1037/0022-3514.86.1.174
   Govindaraju R, 2015, J ICT RES APPL, V9, P68, DOI 10.5614/itbj.ict.res.appl.2015.9.1.4
   Graziotin D., 2013, 14 INT C PROD FOC SO, DOI [10.6084/m9.figshare.703568, DOI 10.6084/M9.FIGSHARE.703568.]
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Gu MY, 2004, LECT NOTES COMPUT SC, V3009, P47
   Gulati J, 2015, PROCEEDING OF THE THIRD INTERNATIONAL SYMPOSIUM ON WOMEN IN COMPUTING AND INFORMATICS (WCI-2015), P209, DOI 10.1145/2791405.2791445
   Hair JF, 2011, J MARKET THEORY PRAC, V19, P139, DOI 10.2753/MTP1069-6679190202
   Hedge R., 2014, P 26 IEEE INT C SOFT
   Henseler J, 2009, ADV INT MARKETING, V20, P277, DOI 10.1108/S1474-7979(2009)0000020014
   Hoseinifar J, 2011, PROCD SOC BEHV, V30, DOI 10.1016/j.sbspro.2011.10.394
   James L.R., 2002, PERSONALITY WORK ORG
   John O.P., 1991, BIG 5 INVENTORY VERS
   John O.P., 1999, HDB PERSONALITY THEO, P102, DOI DOI 10.1525/FQ.1998.51.4.04A00260
   Judge TA, 1997, RES ORGAN BEHAV, V19, P151
   Kaufman SB, 2013, J CREATIVE BEHAV, V47, P233, DOI 10.1002/jocb.33
   King LA, 1996, J RES PERS, V30, P189, DOI 10.1006/jrpe.1996.0013
   Knobelsdorf M, 2008, ITICSE '08: PROCEEDINGS OF THE 13TH ANNUAL CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P286
   Lakhani R.K., 2005, WHY HACKERS DO WHAT
   Lee J.M., 1978, P 1978 ANN C 2 JAN, P561
   Lowry PB, 2014, IEEE T PROF COMMUN, V57, P123, DOI 10.1109/TPC.2014.2312452
   Makhija A, 2018, LECT NOTES ARTIF INT, V10947, P297, DOI 10.1007/978-3-319-93843-1_22
   Martindale C, 1996, PERS INDIV DIFFER, V20, P409, DOI 10.1016/0191-8869(95)00202-2
   Martindale C., 1989, HDB CREATIVITY, P211, DOI [10.1007/978-1-4757-5356-1_13, DOI 10.1007/978-1-4757-5356-1_13]
   Maxwell SE, 2007, PSYCHOL METHODS, V12, P23, DOI 10.1037/1082-989X.12.1.23
   *McCrae R.R., 1997, HDB PERSONALITY PSYC, P825, DOI [10.1016/B978-012134645-4/50032-9, DOI 10.1016/B978-012134645-4/50032-9]
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   MCCRAE RR, 1987, J PERS SOC PSYCHOL, V52, P1258, DOI 10.1037/0022-3514.52.6.1258
   Mohanani R, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P210, DOI 10.1109/SEAA.2017.21
   Mount M.K., 1995, RES PERSONNEL HUMAN, V13, P153, DOI DOI 10.1111/J.1744-6570.1991.TB00688.X
   Nikolaou I., EMPLOYEE RECRUITMENT
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Oldham GR, 1996, ACAD MANAGE J, V39, P607, DOI 10.5465/256657
   Pirzadeh L., 2010, THESIS, P2010
   Qureshi M., 2014, ARXIV14086130
   Raja U, 2004, ACAD MANAGE J, V47, P350, DOI [10.2307/20159586, 10.5465/20159586]
   Raja U, 2010, HUM RELAT, V63, P981, DOI 10.1177/0018726709349863
   Ramanathan Lakshmanan, 2015, Journal of Systems and Information Technology, V17, P167, DOI 10.1108/JSIT-10-2014-0070
   Reychav I, 2010, J KNOWL MANAG, V14, P285, DOI 10.1108/13673271011032418
   Rizwan Jameel Qureshi M., 2014, ARXIV14086130
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Santanen E. L., 2000, Proceedings of the 33rd Annual Hawaii International Conference on System Sciences
   Saunders M., 2009, Research methods for business students p, P649
   Senapathi M., 2014, P 18 INT C EVALUATIO, P10
   Shalley CE, 2004, J MANAGE, V30, P933, DOI 10.1016/j.jm.2004.06.007
   Sodiya A.S., 2007, INTERDISCIPLINARY J, V2
   Sung SY, 2009, SOC BEHAV PERSONAL, V37, P941, DOI 10.2224/sbp.2009.37.7.941
   Tierney P, 1999, PERS PSYCHOL, V52, P591, DOI 10.1111/j.1744-6570.1999.tb00173.x
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vaidya JG, 2002, J PERS SOC PSYCHOL, V83, P1469, DOI 10.1037//0022-3514.83.6.1469
   van den Hooff B., 2004, Journal of Knowledge Management, V8, P117, DOI 10.1108/13673270410567675
   Wagner S., 2018, ARXIV180106475, P1, DOI [10.48550/arXiv.1801.06475, DOI 10.48550/ARXIV.1801.06475]
   Wang M., 2012, International Journal of Business and Information, V7, P59
   Wang Y, 2009, INT SYMP EMP SOFTWAR, P411
   Wiesche M., 2014, SIGMIS CPR 14
   Wold H., 1982, SYSTEMS INDIRECT OBS, P36, DOI DOI 10.1016/S0169-7439(98)00109-9
   Wolfradt U, 2001, EUR J PERSONALITY, V15, P297, DOI 10.1002/per.409
   Wong K.K.K.-K., 2013, MARKET B, V24, P1
   Yang HL, 2009, COMPUT HUM BEHAV, V25, P429, DOI 10.1016/j.chb.2008.10.005
   Ye Y., 2006, P INT WORKSHOP INTER, P15
   Zhang XM, 2010, ACAD MANAGE J, V53, P107, DOI 10.5465/AMJ.2010.48037118
   Zhao H, 2006, J APPL PSYCHOL, V91, P259, DOI 10.1037/0021-9010.91.2.259
   Zhou J, 2001, ACAD MANAGE J, V44, P682, DOI 10.5465/3069410
NR 110
TC 22
Z9 23
U1 3
U2 32
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106405
DI 10.1016/j.infsof.2020.106405
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NZ0FW
UT WOS:000576767100002
DA 2024-07-18
ER

PT J
AU Saidani, I
   Ouni, A
   Chouchen, M
   Mkaouer, MW
AF Saidani, Islem
   Ouni, Ali
   Chouchen, Moataz
   Mkaouer, Mohamed Wiem
TI Predicting continuous integration build failures using evolutionary
   search
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Continuous integration; Build prediction; Multi-Objective optimization;
   Search-Based software engineering; Machine learning
ID CLASSIFICATION; PERFORMANCE; ALGORITHM; MODEL
AB Context: Continuous Integration (CI) is a common practice in modern software development and it is increasingly adopted in the open-source as well as the software industry markets. CI aims at supporting developers in integrating code changes constantly and quickly through an automated build process. However, in such context, the build process is typically time and resource-consuming which requires a high maintenance effort to avoid build failure.
   Objective: The goal of this study is to introduce an automated approach to cut the expenses of CI build time and provide support tools to developers by predicting the CI build outcome.
   Method: In this paper, we address problem of CI build failure by introducing a novel search-based approach based on Multi-Objective Genetic Programming (MOGP) to build a CI build failure prediction model. Our approach aims at finding the best combination of CI built features and their appropriate threshold values, based on two conflicting objective functions to deal with both failed and passed builds.
   Results: We evaluated our approach on a benchmark of 56,019 builds from 10 large-scale and long-lived software projects that use the Travis CI build system. The statistical results reveal that our approach outperforms the state-of-the-art techniques based on machine learning by providing a better balance between both failed and passed builds. Furthermore, we use the generated prediction rules to investigate which factors impact the CI build results, and found that features related to (1) specific statistics about the project such as team size, (2) last build information in the current build and (3) the types of changed files are the most influential to indicate the potential failure of a given build.
   Conclusion: This paper proposes a multi-objective search-based approach for the problem of CI build failure prediction. The performances of the models developed using our MOGP approach were statistically better than models developed using machine learning techniques. The experimental results show that our approach can effectively reduce both false negative rate and false positive rate of CI build failures in highly imbalanced datasets.
C1 [Saidani, Islem; Ouni, Ali; Chouchen, Moataz] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
   [Mkaouer, Mohamed Wiem] Rochester Inst Technol, Rochester, NY 14623 USA.
C3 University of Quebec; University of Quebec Montreal; Ecole de
   Technologie Superieure - Canada; Rochester Institute of Technology
RP Ouni, A (corresponding author), Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
EM islem.saidani.1@ens.etsmlt.ca; ali.ouni@etsmtl.ca;
   moataz.chouchen.1@ens.etsmtl.ca; mwmvse@rit.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017; Chouchen, Moataz/JZE-0325-2024; Ouni,
   Ali/Y-8280-2019
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ouni, Ali/0000-0003-4708-0362
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This work is supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC).
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P448, DOI 10.1109/TSE.2019.2897300
   Almarimi N, 2019, APPL SOFT COMPUT, V85, DOI 10.1016/j.asoc.2019.105830
   [Anonymous], 2001, SPEA2 IMPROVING STRE
   [Anonymous], 2020, DATASET CI BUILD PRE
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Atchison A, 2017, IEEE WORK CONF MIN S, P463, DOI 10.1109/MSR.2017.29
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bhowan U, 2014, IEEE T EVOLUT COMPUT, V18, P893, DOI 10.1109/TEVC.2013.2293393
   Bhowan U, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1331
   Bhowan U, 2013, IEEE T EVOLUT COMPUT, V17, P368, DOI 10.1109/TEVC.2012.2199119
   Bhowan U, 2010, LECT NOTES COMPUT SC, V6021, P1, DOI 10.1007/978-3-642-12148-7_1
   Boukharata S, 2019, AUTOMAT SOFTW ENG, V26, P275, DOI 10.1007/s10515-019-00256-4
   Cervantes J, 2013, IEEE SYS MAN CYBERN, P2659, DOI 10.1109/SMC.2013.7
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen JF, 2019, IEEE T SOFTWARE ENG, V45, P597, DOI 10.1109/TSE.2018.2790925
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   di Perro F, 2007, IEEE T EVOLUT COMPUT, V11, P17, DOI 10.1109/TEVC.2006.876362
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Eckart Z., 2001, EUROGEN EVOL METHOD, P1, DOI DOI 10.3929/ETHZ-A-004284029
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Fowler M., 2006, Continuous integration
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Hadka D., MOEA FRAM
   Hadka D., 2014, MOEA FRAM US GUID
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P157, DOI 10.1109/ESEM.2017.23
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Janssen KJM, 2008, J CLIN EPIDEMIOL, V61, P76, DOI 10.1016/j.jclinepi.2007.04.018
   Jin YC, 2008, IEEE T SYST MAN CY C, V38, P397, DOI 10.1109/TSMCC.2008.919172
   John G.H., 2013, ARXIV13024964
   Karnopp DC., 1963, Automatica, V1, P111, DOI [DOI 10.1016/0005-1098(63)90018-9, 10.1016/0005-1098(63)90018-9]
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Luo Y, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P139, DOI 10.1109/WISA.2017.17
   Malhotra R, 2017, AUTOMAT SOFTW ENG, V24, P673, DOI 10.1007/s10515-016-0203-0
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nejati S., 2019, SEARCH BAS SOFTW ENG
   Ni AS, 2018, PROC IEEE ACM INT C, P366, DOI 10.1145/3183440.3195012
   Ni AS, 2017, IEEE WORK CONF MIN S, P455, DOI 10.1109/MSR.2017.26
   Ouni Ali, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P1114, DOI 10.1145/3377929.3389887
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Paixao M, 2018, IEEE T EVOLUT COMPUT, V22, P394, DOI 10.1109/TEVC.2017.2691281
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Riquelme N, 2015, PROC LAT AM COMPUT C, P286, DOI 10.1109/clei.2015.7360024
   Saidani Islem, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P313, DOI 10.1145/3377929.3390050
   Santolucito M., 2018, TECHNICAL REPORT
   Scalabrino S, 2016, LECT NOTES COMPUT SC, V9962, P64, DOI 10.1007/978-3-319-47106-8_5
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wilcoxon Frank, 1970, SELECTED TABLES MATH, V1, P171, DOI [DOI 10.1002/9780471462422.EOCT, DOI 10.1007/SPRINGERREFERENCE_205698]
   Xia J, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P234, DOI 10.1109/WISA.2017.53
   Xia J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P311, DOI 10.1109/QRS-C.2017.59
   Xie Z, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2875
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang YY, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196831
   Zhao HM, 2007, DECIS SUPPORT SYST, V43, P809, DOI 10.1016/j.dss.2006.12.011
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 75
TC 19
Z9 19
U1 0
U2 7
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29a, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2020
VL 128
AR 106392
DI 10.1016/j.infsof.2020.106392
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NZ0FW
UT WOS:000576767100009
DA 2024-07-18
ER

PT J
AU Saied, MA
   Raelijohn, E
   Batot, E
   Famelis, M
   Sahraoui, H
AF Saied, Mohamed Aymen
   Raelijohn, Erick
   Batot, Edouard
   Famelis, Michalis
   Sahraoui, Houari
TI Towards assisting developers in API usage by automated recovery of
   complex temporal patterns
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
AB Context Despite the many advantages, the use of external libraries through their APIs remains difficult because of the usage patterns and constraints that are hidden or not properly documented. Existing work provides different techniques to recover API usage patterns from client programs in order to help developers use those libraries. However, most of these techniques produce patterns that generally do not involve temporal properties.
   Objective: In this paper, we discuss the problem of temporal usage patterns recovery and propose an algorithm to solve it. We also discuss how the obtained patterns can be used at different stages of client development.
   Method: We address the recovery of temporal API usage patterns as an optimization problem and solve it using a genetic-programming algorithm.
   Results: Our evaluation on different APIs shows that the proposed algorithm allows to derive non-trivial temporal usage that are useful and generalizable to new API clients.
   Conclusion: Recovering API usage temporal patterns helps client developers to use APIs in an appropriate way. In addition to potentially improve productivity, such patterns also helps preventing errors that result from an incorrect use of the APIs.
C1 [Saied, Mohamed Aymen] Univ Quebec Rimouski, Rimouski, PQ, Canada.
   [Raelijohn, Erick; Batot, Edouard; Famelis, Michalis; Sahraoui, Houari] Univ Montreal, Montreal, PQ, Canada.
C3 University of Quebec; Universite du Quebec a Rimouski; Universite de
   Montreal
RP Sahraoui, H (corresponding author), Univ Montreal, Montreal, PQ, Canada.
EM m_saied@encs.concordia.ca; erick.raelijohn@umontreal.ca;
   batotedo@iro.umontreal.ca; famelis@iro.umontreal.ca;
   sahraouh@iro.umontreal.ca
OI Saied, Mohamed Aymen/0000-0002-9488-645X; Raelijohn,
   Erick/0000-0002-5639-880X
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX We acknowledge the contributions of Pierre-Olivier Talbot in the
   conference version of this paper. We also acknowledge the support of the
   Natural Sciences and Engineering Research Council of Canada (NSERC).
CR Nguyen AT, 2012, PROC INT CONF SOFTW, P1407, DOI 10.1109/ICSE.2012.6227236
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering- Volume 1, ICSE '10
   Bastos C., 2016, P 12 BRAZ S INF SYST, V1, P34
   Benomar O, 2015, INT C PROGRAM COMPRE, P15, DOI 10.1109/ICPC.2015.11
   Cergani E., 2018, INT C SOFTWARE TECHN, P91
   Chan Wing- Kwan, 2012, P ACM SIGSOFT 20 INT
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dzifcak J, 2009, IEEE INT CONF ROBOT, P3768
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Goldsby H.J., AUTOMATICALLY DISCOV, P316, DOI 10.1007/978-3-642-16145-2_22.
   Huppe S, 2017, PROC IEEE ACM INT C, P274, DOI 10.1109/ICSE-C.2017.147
   Jensen SH, 2010, LECT NOTES COMPUT SC, V6337, P320, DOI 10.1007/978-3-642-15769-1_20
   Kebbal D, 2006, INT CONF PARA PROC, P397
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Lo D, 2008, J SOFTW MAINT EVOL-R, V20, P227, DOI 10.1002/smr.375
   Lo David, P 14 ACM SIGSOFT INT
   Nelken R., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P360
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Saied M. A., 2016, P IEEE 24 INT C PROG, P1
   Saied MA, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1435, DOI 10.1145/3205455.3205622
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Saied MA, 2015, 2015 IEEE 3RD WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P155, DOI 10.1109/VISSOFT.2015.7332428
   Saied MA, 2015, INT C PROGRAM COMPRE, P71, DOI 10.1109/ICPC.2015.16
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P33, DOI 10.1109/SANER.2015.7081813
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Shatnawi A, 2018, INT C PROGRAM COMPRE, P189, DOI 10.1145/3196321.3196349
   Somers H., 1999, Machine Translation, V14, P113, DOI 10.1023/A:1008109312730
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Sun X B, 2016, SCI PROGRAM, V2016, P5
   Uddin G, 2012, PROC INT CONF SOFTW, P804, DOI 10.1109/ICSE.2012.6227138
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Vayghan LA, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P970, DOI 10.1109/CLOUD.2018.00148
   Wang JY, 2004, PROC INT CONF DATA, P79, DOI 10.1109/ICDE.2004.1319986
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhu ZX, 2014, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2014.52
NR 42
TC 9
Z9 10
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2020
VL 119
AR 106213
DI 10.1016/j.infsof.2019.106213
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KL2WU
UT WOS:000513290100010
DA 2024-07-18
ER

PT J
AU Lian, XL
   Liu, WC
   Zhang, L
AF Lian, Xiaoli
   Liu, Wenchuang
   Zhang, Li
TI Assisting engineers extracting requirements on components from domain
   documents
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Requirements discovery; Domain reference model; Documents ranking;
   Extractive text summarization
ID KNOWLEDGE; AGREEMENT; KAPPA
AB Context When entering an unfamiliar domain, organizations usually have to invest significant time and effort performing domain analysis with the purpose of acquiring system requirements. This process usually involves collecting domain documents extensively, retrieving and reviewing the related ones carefully, searching for the requirements knowledge, then extracting and specifying system requirements. Furthermore, the task must often be performed repeatedly throughout the early phases of projects. Depending on the nature of the domain and the availability of documentation, this process is extremely time-consuming and may require non-trivial human effort.
   Objective: In order to assist engineers identifying requirements knowledge from a collect of domain documents, previously we proposed an approach MaRK in the Conference RE'16 which ranks the domain documents by their relevance to components and highlights the content that are likely to contain component-related information. Experiments showed MaRK can almost identify the top and bottom documents in the reference list. However, it tends to underestimate the relevance of the domain documents that have a number of sections with medium knowledge density.
   Method: We improve the ranking algorithm in MaRK and propose MaRK-H. In addition, to assist engineers locating the relevant information in lengthy documents, we preserve the highlighting work in MaRK and strengthen MaRK-II by extracting the summary of component-related text. MaRK-II is evaluated with the documents in three domains.
   Results: We found that MaRK-II significantly outperforms MaRK and VSM on ranking the documents by their relevance. And a user study showed that MaRK-II is indeed helpful for engineers to extract requirements on components.
   Conclusions: Our approach provides three mechanisms including documents ranking, pertinent content highlighting and summarizing to help engineers obtaining requirements from a collection of domain documents.
C1 [Lian, Xiaoli; Zhang, Li] Beihang Univ, Beijing 100191, Peoples R China.
   [Liu, Wenchuang] ByteDance Inc, Beijing 100083, Peoples R China.
C3 Beihang University
RP Zhang, L (corresponding author), Beihang Univ, Beijing 100191, Peoples R China.
EM lianxiaoli@buaa.edu.cn; liuwenchuang@bytedance.com; lily@buaa.edu.cn
RI Zhang, Li/AAA-9787-2020
OI lian, xiao li/0000-0002-6100-7068
FU National Science Foundation of China [61672078, 61732019]
FX We really appreciate Jane Cleland-Huang of the University of Notre Dame
   for her valuable suggestions on this study. Thank her for the reviews of
   the manual reference models of EHR and MIP. Thank Remo Ferrari and
   Michael Smith in Siemens Industry for evaluating our manual PTC domain
   reference model. We also thank all the participants involved in our
   study. This work is supported by the National Science Foundation of
   China Grant No. 61672078 and No. 61732019.
CR ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Agrawal R., P 20 INT C VERY LARG
   Agresti A., 1984, ANAL ORDINAL CATEGOR, V1st
   Alani H, 2003, IEEE INTELL SYST, V18, P14, DOI 10.1109/MIS.2003.1179189
   [Anonymous], 4 INT WORKSH VAR MOD
   [Anonymous], MANAGING REQUIREMENT, DOI DOI 10.1007/978-3-642-34419-03
   [Anonymous], DOMAIN ANAL
   [Anonymous], 195062012 ISOIEC
   [Anonymous], AAAI FALL S AI APPL
   [Anonymous], 2015, ARXIV150601597
   [Anonymous], 2007, Literature Survey for the Language and Statistics II course
   ARANGO G, 1993, PROC INT CONF SOFTW, P231, DOI 10.1109/ICSE.1993.346040
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Badgujar C, 2018, PROCEEDINGS OF THE 2018 SECOND INTERNATIONAL CONFERENCE ON INVENTIVE COMMUNICATION AND COMPUTATIONAL TECHNOLOGIES (ICICCT), P803, DOI 10.1109/ICICCT.2018.8473315
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Carbonell J., 1998, Proceedings of the 21st Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P335, DOI 10.1145/290941.291025
   Chen DY, 2018, IEEE ACCESS, V6, P50306, DOI 10.1109/ACCESS.2018.2868516
   Choudhury S, 2017, PROC INT CONF DATA, P1563, DOI 10.1109/ICDE.2017.228
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Conroy J. M., 2001, SIGIR Forum, P406
   Conroy John M., 2006, P COLING ACL 2006 MA, P152
   Daramola Olawande, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P172, DOI 10.1007/978-3-642-28714-5_15
   Daramola O., 2013, Managing Requirements Knowledge, P117, DOI [DOI 10.1007/978-3-642-34419-0_6, 10.1007/978-3-642-34419-0_6]
   Dumitru H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P181, DOI 10.1145/1985793.1985819
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   EDMUNDSON HP, 1969, J ACM, V16, P264, DOI 10.1145/321510.321519
   Farfeleder S, 2011, LECT NOTES COMPUT SC, V6644, P212, DOI 10.1007/978-3-642-21064-8_15
   Ferrari A, 2015, INT REQUIR ENG CONF, P26, DOI 10.1109/RE.2015.7320405
   Firesmith D, 2005, J OBJECT TECHNOL, V4, P27, DOI 10.5381/jot.2005.4.1.c3
   Gacitua R., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P5, DOI 10.1109/RE.2010.12
   Gacitua R, 2009, 2 INT WORKSH MAN REQ, P40, DOI DOI 10.1109/MARK.2009.7
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Jin XQ, 2015, IEEE T COMPUT AID D, V34, P1704, DOI 10.1109/TCAD.2015.2421907
   Juyeon Kang, 2014, Rules on the Web. From Theory to Applications. 8th International Symposium, RuleML 2014 Co-located with the 21st European Conference on Artificial Intelligence, ECAI 2014. Proceedings. LNCS: 8620, P186, DOI 10.1007/978-3-319-09870-8_14
   Kaiya H, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P189
   Kaiya H, 2010, ASIA PAC SOFWR ENG, P3, DOI 10.1109/APSEC.2010.11
   Kang K. C., 1990, Technical Report
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kendall M. G., 1948, Rank correlation methods.
   Lau R.Y., 2007, SYST SCI 2007 HICSS, P60, DOI [10.1109/HICSS. 2007.570., DOI 10.1109/HICSS.2007.570]
   Lecoeuche R, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P55, DOI 10.1109/ASE.2000.873650
   Lian XL, 2017, INT REQUIR ENG CONF, P292, DOI 10.1109/RE.2017.68
   Lian XL, 2016, INT REQUIR ENG CONF, P156, DOI 10.1109/RE.2016.50
   Liu YZ, 2017, J SYST SOFTWARE, V133, P126, DOI 10.1016/j.jss.2017.08.024
   LUHN HP, 1958, IBM J RES DEV, V2, P159, DOI 10.1147/rd.22.0159
   MAALEJ W., 2013, MANAGING REQUIREMENT
   Massey AK, 2013, S VIS LANG HUM CEN C, P4, DOI 10.1109/RE.2013.6636700
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Moratanch N, 2016, PROCEEDINGS OF IEEE INTERNATIONAL CONFERENCE ON CIRCUIT, POWER AND COMPUTING TECHNOLOGIES (ICCPCT 2016)
   Nayebi M, 2017, INT REQUIR ENG CONF, P388, DOI 10.1109/RE.2017.72
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564, DOI 10.1109/TSE.1984.5010280
   Northrop L.M., 2007, FRAMEWORK SOFTWARE P
   Portugal RLQ, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P102, DOI 10.1145/3266237.3266269
   Radev DR, 2004, INFORM PROCESS MANAG, V40, P919, DOI 10.1016/j.ipm.2003.10.006
   Radev DR, 2002, COMPUT LINGUIST, V28, P399, DOI 10.1162/089120102762671927
   Rahimi M, 2014, INT REQUIR ENG CONF, P253, DOI 10.1109/RE.2014.6912267
   Rashid A, 2016, PROC INT CONF SOFTW, P866, DOI 10.1145/2884781.2884785
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Shah U., 2002, Proceedings of the Eleventh International Conference on Information and Knowledge Management. CIKM 2002, P461, DOI 10.1145/584792.584868
   Shen L., 2004, 2004 IEEE International Engineering Management Conference (IEEE Cat. No.04CH37574), P525
   Sommerville I, 1997, ANN SOFTW ENG, V3, P101, DOI 10.1023/A:1018946223345
   SUCHANEK Fabian M., 2007, 16 INT WORLD WID WEB, V16, P697, DOI DOI 10.1145/1242572.1242667
   Tao Y, 2017, 2017 9TH INTERNATIONAL CONFERENCE ON ADVANCED INFOCOMM TECHNOLOGY (ICAIT 2017), P1, DOI 10.1109/ICAIT.2017.8388817
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Viera AJ, 2005, FAM MED, V37, P360
   Wei FR, 2010, KNOWL INF SYST, V22, P245, DOI 10.1007/s10115-009-0194-2
   Wu KS, 2013, INFORM SCIENCES, V224, P118, DOI 10.1016/j.ins.2012.10.019
NR 68
TC 7
Z9 7
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2020
VL 118
AR 106196
DI 10.1016/j.infsof.2019.106196
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JW2LV
UT WOS:000502890100002
DA 2024-07-18
ER

PT J
AU Sun, BC
   Wang, JX
   Gong, DW
   Tian, T
AF Sun, Baicai
   Wang, Jinxin
   Gong, Dunwei
   Tian, Tian
TI Scheduling sequence selection for generating test data to cover paths of
   MPI programs
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE MPI program; Path coverage; Test data generation; Scheduling sequence;
   Latin hypercube sampling
ID CONCURRENT PROGRAMS
AB Context: As one of key tasks in software testing, test data generation has been receiving widespread attention in recent years. Message-passing Interface (MPI) programs, which are one representative type of parallel programs, have the characteristic of non-determinism, which is reflected by the non-deterministic execution under different scheduling sequences against the same program input. Previous studies have shown that different difficulties are raised in generating test data under different scheduling sequences, suggesting that selecting appropriate scheduling sequences is beneficial to a high efficiency.
   Objective: We propose a method of selecting a superior and feasible scheduling sequence for generating test data in the criterion of path coverage against each target path of an MPI program.
   Method: In the proposed method, a number of program inputs are first sampled by Latin hypercube sampling. Then, the program is executed against each sample under each scheduling sequence, and all the scheduling sequences are sorted according to the similarities between the paths traversed by these samples and the target one. Finally, the feasibility of a scheduling sequence with the best quality is investigated based on the symbolic execution.
   Results: We apply the proposed method to seven typical MPI programs and compare it with the random one. The experimental results show that test data covering the target path can be generated under the selected scheduling sequence with high success rate and low time consumption.
   Conclusion: The proposed method takes the influence of scheduling sequences on generating test data into consideration, thus providing a competent way to test parallel programs.
C1 [Sun, Baicai; Wang, Jinxin; Gong, Dunwei] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao 266061, Shandong, Peoples R China.
   [Tian, Tian] Shandong Jianzhu Univ, Sch Comp Sci & Technol, Jinan 250101, Shandong, Peoples R China.
C3 China University of Mining & Technology; Qingdao University of Science &
   Technology; Shandong Jianzhu University
RP Gong, DW (corresponding author), China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
EM dwgong@vip.163.com
OI Sun, Baicai/0000-0001-6781-0866
FU National Key Research and Development Program of China
   [2018YFB1003802-01]; National Natural Science Foundation of China
   [61773384, 61763026, 61673404, 61573362, 61503220]
FX This paper is jointly supported by National Key Research and Development
   Program of China(2018YFB1003802-01), National Natural Science Foundation
   of China (61773384, 61763026, 61673404, 61573362, 61503220).
CR A Message P Forum, 1994, MPI MESS PASS INT ST
   [Anonymous], 2010, Introduction to high performance computing for scientists and engineers
   Bao XA, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0187471
   Bayraksan G, 2018, OPER RES LETT, V46, P173, DOI 10.1016/j.orl.2017.12.005
   Berkelaar M., 2004, LPSOLVE OPEN SOURCE
   Bhattacharya N., 2012, THESIS
   Bucur S, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P183
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chen G, 2004, IEEE POWER ELECTRON, P419, DOI 10.1109/PESC.2004.1355782
   Chipounov V., 2009, P 5 WORKSH HOT TOP S
   Dong H, 2017, OPER RES, V65, P1678, DOI 10.1287/opre.2017.1637
   Fei Y, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1919
   Ferrer J, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1213, DOI 10.1145/2330163.2330331
   Forejt V, 2014, LECT NOTES COMPUT SC, V8442, P263, DOI 10.1007/978-3-319-06410-9_19
   Fu XJ, 2015, IEEE HI ASS SYS ENGR, P181, DOI 10.1109/HASE.2015.35
   García-Ferreira I, 2016, LOG J IGPL, V24, P871, DOI 10.1093/jigpal/jzw042
   Goncalves W. F., 2017, P 2017 12 IB C INF S, P1, DOI DOI 10.23919/CISTI.2017.7975873
   Gong DW, 2016, INFORM SOFTWARE TECH, V80, P217, DOI 10.1016/j.infsof.2016.09.003
   Gropp W, 1996, PARALLEL COMPUT, V22, P789, DOI 10.1016/0167-8191(96)00024-5
   Haraty RA, 2018, APPL ARTIF INTELL, V32, P197, DOI 10.1080/08839514.2018.1451222
   Hong MY, 2016, 2016 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P1407, DOI 10.1109/CompComm.2016.7924935
   Huang H, 2017, IEEE COMPUT INTELL M, V12, P46, DOI 10.1109/MCI.2017.2670462
   Khan SA, 2013, PROCEEDINGS OF THE 2013 10TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P369, DOI 10.1109/ITNG.2013.59
   Liu FQ, 2017, IEEE C EVOL COMPUTAT, P869, DOI 10.1109/CEC.2017.7969400
   Liu W, 2017, INT J PARALLEL PROG, V45, P879, DOI 10.1007/s10766-016-0440-7
   MCKAY MD, 1979, TECHNOMETRICS, V21, P239, DOI 10.2307/1268522
   Ng N, 2012, LECT NOTES COMPUT SC, V7304, P202, DOI 10.1007/978-3-642-30561-0_15
   Nikravan Esmaeel, 2015, 2015 2nd International Conference on Knowledge-Based Engineering and Innovation (KBEI). Proceedings, P510, DOI 10.1109/KBEI.2015.7436097
   Ramos DA, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P49
   Sahoo B. K., 2016, WORLD J ENG TECHNOL, V4
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Siegel SF, 2011, MATH COMPUT SCI, V5, P395, DOI 10.1007/s11786-011-0100-7
   Silva RA, 2012, P 13 LAT AM TEST WOR, P1, DOI DOI 10.1109/LATW.2012.6261240
   Souza PSL, 2014, CONCURR COMP-PRACT E, V26, P21, DOI 10.1002/cpe.2937
   Souza SRS, 2008, CONCURR COMP-PRACT E, V20, P1893, DOI 10.1002/cpe.1297
   Souza SRS, 2015, SOFTW TEST VERIF REL, V25, P310, DOI 10.1002/stvr.1568
   Tian T, 2016, AUTOMAT SOFTW ENG, V23, P469, DOI 10.1007/s10515-014-0173-z
   Vakkalanka S, 2008, LECT NOTES COMPUT SC, V5123, P66
   Wang R, 2017, IEEE T RELIAB, V66, P425, DOI 10.1109/TR.2017.2681107
   Xu ZX, 2006, INT CONF QUAL SOFTW, P107
   Yan J, 2008, INFORM PROCESS LETT, V107, P87, DOI 10.1016/j.ipl.2008.01.007
   Yang CSD, 2003, SOFTW TEST VERIF REL, V13, P3, DOI 10.1002/stvr.262
   Yue H, 2015, ASIA PAC SOFWR ENG, P246, DOI 10.1109/APSEC.2015.34
   Zhou R, 2006, ARTIF INTELL, V170, P385, DOI 10.1016/j.artint.2005.12.002
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   Zhu ZM, 2017, IEEE C EVOL COMPUTAT, P612, DOI 10.1109/CEC.2017.7969367
   Zounmevo J.A., 2013, Proceedings of the 20th European MPI Users' Group Meeting, P43
NR 47
TC 17
Z9 19
U1 2
U2 16
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2019
VL 114
BP 190
EP 203
DI 10.1016/j.infsof.2019.07.002
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IQ3RQ
UT WOS:000480669200012
DA 2024-07-18
ER

PT J
AU Ibias, A
   Hierons, RM
   Núñez, M
AF Ibias, Alfredo
   Hierons, Robert M.
   Nunez, Manuel
TI Using Squeeziness to test component-based systems defined as Finite
   State Machines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
ID IMPLEMENTATION RELATIONS; SCHEDULERS
AB Context:Testing is the main validation technique used to increase the reliability of software systems. The effectiveness of testing can be strongly reduced by Failed Error Propagation. This situation happens when the System Under Test executes a faulty statement, the state of the system is affected by this fault, but the expected output is observed. Squeeziness is an information theoretic measure designed to quantify the likelihood of Failed Error Propagation and previous work has shown that Squeeziness correlates strongly with Failed Error Propagation in white-box scenarios. Despite its usefulness, this measure, in its current formulation, cannot be used in a black-box scenario where we do not have access to the source code of the components.
   Objective: The main goal of this paper is to adapt Squeeziness to a black-box scenario and evaluate whether it can be used to estimate the likelihood that a component of a software system introduces Failed Error Propagation.
   Method: First, we defined our black-box scenario. Specifically, we considered the Failed Error Propagation that a component introduces when it receives its input from another component. We were interested in this since such fault masking makes it more difficult to find faults in the previous component when testing. Second, we defined our notion of Squeeziness in this framework. Finally, we carried out experiments in order to evaluate our measure.
   Results: Our experiments showed a strong correlation between the likelihood of Failed Error Propagation and Squeeziness.
   Conclusion: We can conclude that our new notion of Squeeziness can be used as a measure that estimates the probability of Failed Error Propagation being introduced by a component. As a result, it has the potential to be used as a measure of testability, allowing testers to assess how easy it is to test either the whole system or a single component. We considered a simple model (Finite State Machines) but the notions and results can be extended/adapted to deal with more complex state-based models, in particular, those containing data.
C1 [Ibias, Alfredo; Nunez, Manuel] Univ Complutense Madrid, Dept Sistemas Informat & Computac, E-28040 Madrid, Spain.
   [Hierons, Robert M.] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
C3 Complutense University of Madrid; University of Sheffield
RP Núñez, M (corresponding author), Univ Complutense Madrid, Dept Sistemas Informat & Computac, E-28040 Madrid, Spain.
EM aibias@ucm.es; r.hierons@sheffield.ac.uk; manuelnu@ucm.es
RI Núñez, Manuel/B-6889-2008; Ibias, Alfredo/AAJ-6625-2020
OI Núñez, Manuel/0000-0001-9808-6401; Ibias, Alfredo/0000-0002-3122-4272;
   Hierons, Robert/0000-0002-4771-1446
FU Spanish MINECO-FEDER [TIN2015-65845-C3-1-R]; Region of Madrid [FORTE-CM,
   S2018/TCS-4314]; UK EPSRC [EP/P006116/2]; EPSRC [EP/P006116/1,
   EP/P006116/2] Funding Source: UKRI
FX This work has been supported by the Spanish MINECO-FEDER (grant number
   DArDOS, TIN2015-65845-C3-1-R); the Region of Madrid (grant number
   FORTE-CM, S2018/TCS-4314); and the UK EPSRC (grant number InfoTestSS,
   EP/P006116/2).
CR Allauzen C, 2007, LECT NOTES COMPUT SC, V4783, P11
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Amman P., 2017, INTRO SOFTWARE TESTI
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   Anido R, 2003, SOFTW TEST VERIF REL, V13, P141, DOI 10.1002/stvr.275
   [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   Apiwattanapong T, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P137, DOI 10.1109/TAIC-PART.2006.18
   Binder RV, 2015, COMMUN ACM, V58, P52, DOI 10.1145/2697399
   Boreale Michele, 2014, Information Security. 17th International Conference, ISC 2014. Proceedings: LNCS 8783, P216, DOI 10.1007/978-3-319-13257-0_13
   Braunstein C, 2014, LECT NOTES COMPUT SC, V8829, P380, DOI 10.1007/978-3-319-11737-9_25
   Cavalli AR, 2015, ANN TELECOMMUN, V70, P85, DOI 10.1007/s12243-015-0457-8
   Chothia T, 2014, LECT NOTES COMPUT SC, V8713, P219, DOI 10.1007/978-3-319-11212-1_13
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clark D, 2012, INFORM PROCESS LETT, V112, P335, DOI 10.1016/j.ipl.2012.01.004
   Cover T. M., 1991, ELEMENTS INFORM THEO
   El-Fakih K, 2006, LECT NOTES COMPUT SC, V3964, P245
   El-Ghali M, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P17, DOI 10.1109/IWSESS.2009.5068454
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Guo Q, 2006, INFORM SOFTWARE TECH, V48, P696, DOI 10.1016/j.infsof.2005.08.001
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hierons RM, 2018, IEEE T RELIAB, V67, P522, DOI 10.1109/TR.2018.2800093
   Hierons RM, 2017, J SYST SOFTWARE, V132, P319, DOI 10.1016/j.jss.2017.03.011
   Hierons RM, 2012, FORM ASP COMPUT, V24, P679, DOI 10.1007/s00165-012-0244-5
   Hierons RM, 2012, DISTRIB COMPUT, V25, P35, DOI 10.1007/s00446-011-0149-1
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hierons RM, 2017, IEEE T SOFTWARE ENG, V43, P1033, DOI 10.1109/TSE.2017.2652457
   Hwang I, 2010, COMPUT NETW, V54, P1108, DOI 10.1016/j.comnet.2009.10.014
   Kohavi Z., 1978, Switching and Finite State Automata Theory
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Moore E.F., 1956, AUTOMATA STUDIES
   Peleska J., 2018, 23 IEEE EUROPEAN TES, P1
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Petrenko A, 1996, COMPUT COMMUN, V19, P1236, DOI 10.1016/S0140-3664(96)01157-7
   PETRENKO A, 1996, 9 IFIP WORKSH TEST C, P00125
   Petrenko A., 2001, Modeling and verification of parallel processes, P196
   Shafique M, 2015, INT J SOFTW TOOLS TE, V17, P59, DOI 10.1007/s10009-013-0291-0
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Wang Y, 2009, COMPUT NETW, V53, P596, DOI 10.1016/j.comnet.2008.10.025
   Woodward M. R., 2000, Software Engineering Notes, V25, P168, DOI 10.1145/347636.349016
NR 46
TC 12
Z9 12
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2019
VL 112
BP 132
EP 147
DI 10.1016/j.infsof.2019.04.012
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IA9TG
UT WOS:000469899100010
DA 2024-07-18
ER

PT J
AU Zhang, W
   Li, ZQ
   Wang, Q
   Li, J
AF Zhang, Wen
   Li, Ziqiang
   Wang, Qing
   Li, Juan
TI FineLocator: A novel approach to method-level fine-grained bug
   localization by query expansion
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Method-level bug localization; Query expansion; Semantic similarity;
   Temporal proximity; Call dependency
ID INFORMATION; RETRIEVAL
AB Context: Bug localization, namely, to locate suspicious snippets from source code files for developers to fix the bug, is crucial for software quality assurance and software maintenance. Effective bug localization technique is desirable for software developers to reduce the effort involved in bug resolution. State-of-the-art bug localization techniques concentrate on file-level coarse-grained localization by lexical matching bug reports and source code files. However, this would bring about a heavy burden for developers to locate feasible code snippets to make change with the goal of fixing the bug.
   Objective: This paper proposes a novel approach called FineLocator to method-level fine-grained bug localization by using semantic similarity, temporal proximity and call dependency for method expansion.
   Method: Firstly, the bug reports and the methods of source code are represented by numeric vectors using word embedding (word2vec) and the TF-IDF method. Secondly, we propose three query expansion scores as semantic similarity score, temporal proximity score and call dependency score to address the representation sparseness problem caused by the short lengths of methods in the source code. Then, the representation of a method with short length is augmented by elements of its neighboring methods with query expansion. Thirdly, when a new bug report is incoming, FineLocator will retrieve the methods in source code by similarity ranking on the bug report and the augmented methods for bug localization.
   Results: We collect bug repositories of ArgoUML, Maven, Kylin, Ant and AspectJ projects to investigate the performance of the proposed FineLocator approach. Experimental results demonstrate that the proposed FineLocator approach can improve the performances of method-level bug localization at average by 20%, 21% and 17% measured by Top-N indicator, MAP and MRR respectively, in comparison with state-of-the-art techniques.
   Conclusion: This is the first paper to demonstrate how to make use of method expansion to address the representation sparseness problem for method-level fine-grained bug localization.
C1 [Zhang, Wen] Beijing Univ Technol, Coll Econ & Management, Res Base Beijing Modem Mfg Dev, Beijing 100124, Peoples R China.
   [Zhang, Wen] Xian Univ, Sch Informat Engn, Xian 710065, Shaanxi, Peoples R China.
   [Li, Ziqiang] Beijing Univ Chem Technol, Ctr Big Data Sci, Beijing 100029, Peoples R China.
   [Wang, Qing] Chinese Acad Sci, Inst Software, Lab Internet Software Technol, Beijing 100190, Peoples R China.
   [Li, Juan] Beijing Univ Technol, Coll Software, Beijing 100124, Peoples R China.
C3 Beijing University of Technology; Xi'an University; Beijing University
   of Chemical Technology; Chinese Academy of Sciences; Institute of
   Software, CAS; Beijing University of Technology
RP Zhang, W (corresponding author), Beijing Univ Technol, Coll Econ & Management, Res Base Beijing Modem Mfg Dev, Beijing 100124, Peoples R China.
EM zhangwen@bjut.buct.edu.cn; 2016200859@mail.buct.edu.cn;
   wq@itechs.iscas.ac.cn; lijuan@bjut.edu.cn
RI Li, Ziqiang/G-8998-2019; wang, qi/ITT-9652-2023
FU National Natural Science Foundation of China [61379046, 71601023,
   61432001]; National Key Research and Development Program of China
   [2018YFB1401000]; Innovation Fund Project of Xi'an Science and
   Technology Program (Special Series for Xi'an University) [2016CXWL21]
FX This research is supported in part by National Natural Science
   Foundation of China under Grant nos. 61379046, 71601023 and 61432001;
   the National Key Research and Development Program of China under grant
   No. 2018YFB1401000; the Innovation Fund Project of Xi'an Science and
   Technology Program (Special Series for Xi'an University No. 2016CXWL21).
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Almhana R, 2016, IEEE INT CONF AUTOM, P286, DOI 10.1145/2970276.2970344
   [Anonymous], 2011, P ACM SIGSOFT S EURO
   [Anonymous], 2013, P INT C LEARN REPR W
   [Anonymous], 2011, VIETNAM
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Berardi D, 2005, ARTIF INTELL, V168, P70, DOI 10.1016/j.artint.2005.05.003
   Boureau YL, 2010, PROC CVPR IEEE, P2559, DOI 10.1109/CVPR.2010.5539963
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Croft B, 2010, COMPUTER J, V54, P831
   Csurka G., 2004, Workshop on Statistical Learning in Computer Vision, ECCV, P59
   DUMAIS ST, 1991, BEHAV RES METH INS C, V23, P229, DOI 10.3758/BF03203370
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Janssen T, 2009, SINTER 09, P23
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jones James., 2003, The Pistol, P1
   Le Quoc V., 2014, P INT C MACH LEARN I
   Le Tien-Duy B., 2013, 2013 IEEE International Conference on Software Maintenance (ICSM), P380, DOI 10.1109/ICSM.2013.52
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Mendes E., 2009, P 13 C EV ASS SOFTW
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Ni  C., 2017, P 41 IEEE ANN COMP S
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Raghavan P., 2010, Introduction to Information Retrieval
   Rahman S, 2017, ENASE: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P171, DOI 10.5220/0006261901710178
   Rahman S, 2016, ENASE: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL SOFTWARE APPROACHES TO SOFTWARE ENGINEERING, P303, DOI 10.5220/0005896403030309
   Saha R. K., 2015, P 28 IEEE ACM INT C, P345
   Tang YB, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-TAIWAN (ICCE-TW), P101
   Tong SS, 2016, ASIA PAC SOFWR ENG, P169, DOI [10.1109/APSEC.2016.12, 10.1109/APSEC.2016.033]
   Nguyen V, 2019, J SYST SOFTWARE, V147, P124, DOI 10.1016/j.jss.2018.10.019
   Watson A. H., 1996, STRUCTURED TESTING T, V500, P235
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Widmer G, 1996, MACH LEARN, V23, P69, DOI 10.1023/A:1018046501280
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Yonggang Qiu, 1993, SIGIR Forum, P160
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Zhang W, 2019, INFORM SCIENCES, V470, P121, DOI 10.1016/j.ins.2018.08.039
   Zhang W, 2016, CHINESE J ELECTRON, V25, P1011, DOI 10.1049/cje.2016.08.012
   Zhang W, 2011, EXPERT SYST APPL, V38, P2758, DOI 10.1016/j.eswa.2010.08.066
   Zhang  Y., 2017, EMPIR SOFTW ENG, V23, P1
   Zhang Y, 2018, FRONT COMPUT SCI-CHI, V12, P280, DOI 10.1007/s11704-017-6015-y
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 51
TC 31
Z9 37
U1 2
U2 19
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2019
VL 110
BP 121
EP 135
DI 10.1016/j.infsof.2019.03.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HU1RI
UT WOS:000465049100009
DA 2024-07-18
ER

PT J
AU Ramakrishnan, R
   Kaur, A
AF Ramakrishnan, Raghu
   Kaur, Arvinder
TI Little's law based validation framework for load testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Load testing; Performance testing; Little's law; Software quality
AB Context: Performance is a key quality consideration for large-scale software systems which supports thousands of concurrent users. Load testing is an integral part of the development lifecycle and is used to address performance issues before deploying the system in production. But, how do we validate the output reported by load testing tools? Little's Law is useful for validating the accuracy of load testing output. Though IT industry is flooded with various enterprise and open source tools for load testing, but they do not offer support for validation of its result using Little's Law. Manual validation is time intensive and infeasible with increase in the complexity of testing scripts.
   Objective: In this paper we provide a Little's law-based validation framework which will enable the researchers and industry practitioners to validate load testing results. The implementation of the framework is also demonstrated.
   Method: To understand the constructs commonly used in load test scripts, we analysed scripts of two open source benchmark applications and eight large-scale software systems used in industry. We found that transactions are arranged using control flow patterns like sequential, loop and conditional. Based on the analysis, we devised the framework.
   Results: The efficacy of the proposed framework is successfully evaluated on two systems - an open source Dell DVD Store benchmarking application and a real-world large scale system used in industry. The framework is independent of load testing tool used and can be used with complex testing scripts.
   Conclusions There are no known frameworks or inbuilt support in existing load testing tools for guiding practitioners on applying Little's Law using output generated by tools. We address this significant gap by providing a framework which combines information from test scripts/reports and Little's Law to determine whether the results are valid. The provided implementation can be easily integrated with existing load testing tools.
C1 [Ramakrishnan, Raghu] Tata Consultancy Serv, Noida 201305, India.
   [Ramakrishnan, Raghu; Kaur, Arvinder] Guru Gobind Singh Indraprastha Univ, USICT, Delhi 110076, India.
C3 Tata Sons; Tata Consultancy Services Limited (TCS); GGS Indraprastha
   University
RP Ramakrishnan, R (corresponding author), Tata Consultancy Serv, Noida 201305, India.
EM raghuramakrishrian71@gmail.com; arvinder70@gmail.com
RI KAUR, ARVINDER/ABH-7358-2020
CR AlGhmadi HM, 2016, PROC IEEE INT CONF S, P279, DOI 10.1109/ICSME.2016.46
   [Anonymous], INT J NETW COMPUT
   Bondi AB, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P327, DOI 10.1145/2851553.2858668
   Brady J. F., 2012, 38 INT COMP MEAS GRO
   Foo King Chun, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P32, DOI 10.1109/QSIC.2010.35
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Fox G., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P85, DOI 10.1145/74587.74596
   Ghaith S., 2013, P INT S SOFTW TEST A, P370, DOI DOI 10.1145/2483760.2492399
   Ghaith S, 2013, EUR CON SFTWR MTNCE, P379, DOI 10.1109/CSMR.2013.54
   Jiang Z.M., 2010, INT S SOFTWARE TESTI, P143
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   LITTLE JDC, 1961, OPER RES, V9, P383, DOI 10.1287/opre.9.3.383
   Malik H., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P201, DOI 10.1109/ISSRE.2010.43
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Mansell R, 2010, INTERNATIONAL HANDBOOK OF INTERNET RESEARCH, P341, DOI [10.1007/978-1-4020-9789-8_21, 10.1109/COMPSACW.2010.66]
   Mansharamani  R., 2014, P 1 CMG IND ANN C
   Meier J.D., 2007, Performance Testing Guidance for Web Applications: Patterns Practices
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P70, DOI 10.1109/MIC.2002.1020328
   Nguyen THD, 2011, ASIA PAC SOFWR ENG, P282, DOI [10.1109/APSC.2011.59, 10.1109/APSEC.2011.59]
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   Nivas  T., 2011, 19 ACM SIGSOFT S FDN
   Ramakrishnan  R., MAKING SOFTWARE PERF
   Ramakrishnan R, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P157, DOI 10.1145/3021460.3021479
   Renuka S. R., 2003, 29 INT COMP MEAS GRO, P125
   Schroeder Bianca., 2006, NSDI 06, P18
   Shang Weiyi., 2015, P 6 ACMSPEC INT C PE, P15
   Simchi-Levi D, 2011, OPER RES, V59, P535, DOI 10.1287/opre.1110.0941
   Stolberg S. G., INSIDE RACE RESCUE H
   Wilson  T., 2011, CMG MEASURELT
NR 31
TC 3
Z9 3
U1 0
U2 2
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2019
VL 108
BP 88
EP 98
DI 10.1016/j.infsof.2018.11.007
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HM3IE
UT WOS:000459366200006
DA 2024-07-18
ER

PT J
AU Feitosa, D
   Ampatzoglou, A
   Avgeriou, P
   Chatzigeorgiou, A
   Nakagawa, EY
AF Feitosa, Daniel
   Ampatzoglou, Apostolos
   Avgeriou, Paris
   Chatzigeorgiou, Alexander
   Nakagawa, Elisa Y.
TI What can violations of good practices tell about the relationship
   between GoF patterns and run-time quality attributes?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; GoF patterns; Design; Quality analysis;
   Evaluation
ID OF-THE-ART; DESIGN PATTERNS; STATIC ANALYSIS; ROLES
AB Context: GoF patterns have been extensively studied with respect to the benefit they provide as problem-solving, communication and quality improvement mechanisms. The latter has been mostly investigated through empirical studies, but some aspects of quality (esp. run-time ones) are still under-investigated.
   Objective: In this paper, we study if the presence of patterns enforces the conformance to good coding practices. To achieve this goal, we explore the relationship between the presence of GoF design patterns and violations of good practices related to source code correctness, performance and security, via static analysis.
   Method: Specifically, we exploit static analysis so as to investigate whether the number of violations of good coding practices identified on classes is related to: (a) their participation in pattern occurrences, (b) the pattern category, (c) the pattern in which they participate, and (d) their role within the pattern occurrence. To answer these questions, we performed a case study on approximately 13,000 classes retrieved from five open-source projects.
   Results: The obtained results suggest that classes not participating in patterns are more probable to violate good coding practices for correctness, performance and security. In a more fine-grained level of analysis, by focusing on specific patterns, we observed that patterns with more complex structure (e.g., Decorator) and pattern roles that are more change-prone (e.g., Subclasses) are more likely to be associated with a higher number of violations (up to 50 times more violations).
   Conclusion: This finding implies that investing in a well-thought architecture based on best practices, such as patterns, is often accompanied with cleaner code with fewer violations.
C1 [Feitosa, Daniel; Ampatzoglou, Apostolos; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
   [Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
   [Nakagawa, Elisa Y.] Univ Sao Paulo, Dept Comp Syst, Sao Paulo, Brazil.
C3 University of Groningen; University of Macedonia; Universidade de Sao
   Paulo
RP Feitosa, D (corresponding author), Univ Groningen, Dept Math & Comp Sci, Groningen, Netherlands.
EM d.feitosa@rug.nl
RI Feitosa, Daniel/M-8700-2014; Ampatzoglou, Apostolos/AAC-3632-2020;
   Chatzigeorgiou, Alexandros/AAL-6077-2021
OI Feitosa, Daniel/0000-0001-9371-232X; Avgeriou, Paris/0000-0002-7101-0754
FU Brazilian agency CAPES/Nuffic [034/12]; Brazilian agency CNPq
   [204607/2013-2]; Brazilian agency INCT-SEC [573963/2008-8,
   2008/57870-9]; Dutch agency CAPES/Nuffic [034/12]; Dutch agency CNPq
   [204607/2013-2]; Dutch agency INCT-SEC [573963/2008-8, 2008/57870-9]
FX The authors would like to thank the financial support from the Brazilian
   and Dutch agencies CAPES/Nuffic [grant number 034/12]; CNPq [grant
   number 204607/2013-2]; and the INCT-SEC [grant number 573963/2008-8,
   2008/57870-9].
CR Abran A., 2014, GUIDE SOFTWARE ENG B
   Afacan T., 2011, 2011 6th IEEE International Symposium on Industrial Embedded Systems (SIES), P67, DOI 10.1109/SIES.2011.5953682
   Ahlgren R, 2005, LECT NOTES COMPUT SC, V3547, P143
   AlBreiki HH, 2014, IEEE INT CONF INNOV, P93, DOI 10.1109/INNOVATIONS.2014.6987569
   Aleksy M, 2006, 2006 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY, WORKSHOPS PROCEEDINGS, P459, DOI 10.1109/WI-IATW.2006.57
   Ali M., 2013, 2013 15 EUROPEAN C P, P1, DOI DOI 10.1109/EPE.2013.6634697
   Ampatzoglou A, 2015, IEEE T SOFTWARE ENG, V41, P781, DOI 10.1109/TSE.2015.2414917
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   Ampatzoglou A, 2012, INFORM SOFTWARE TECH, V54, P331, DOI 10.1016/j.infsof.2011.10.006
   Ampatzoglou Apostolos, 2011, P 15 INT ACAD MINDTR, P214, DOI [10.1145/2181037.2181074, DOI 10.1145/2181037.2181074]
   Ampatzoglou Apostolos., 2013, Proceedings of the 17th Panhellenic Conference on Informatics, PCI, P122
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Aversano L, 2009, IET SOFTW, V3, P395, DOI 10.1049/iet-sen.2008.0105
   Aversano L, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P180, DOI 10.1109/SCAM.2007.21
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Chantarasathaporn K., 2006, P 3 ACM INT C MOB TE, DOI 10.1145/1292331.1292364
   Cohen F., 2007, FASTSOA, P75, DOI [10.1016/B978-012369513-0/50005-7, DOI 10.1016/B978-012369513-0/50005-7]
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Díaz G, 2013, INFORM SOFTWARE TECH, V55, P1462, DOI 10.1016/j.infsof.2013.02.005
   Feitosa D, 2017, LECT NOTES COMPUT SC, V10611, P165, DOI 10.1007/978-3-319-69926-4_13
   Feitosa D, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1851
   Feitosa D, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P113, DOI 10.1145/2737182.2737190
   Ferraz FS, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P9, DOI 10.1109/ICSEA.2009.10
   Field A., 2013, Discovering statistics using IBM SPSS statistics, V4th, P591
   Firesmith Donald., 2003, J OBJECT TECHNOL, V2, P53
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gatrell M., 2011, Research Challenges in Information Science (RCIS), 2011 Fifth International Conference on, P1, DOI DOI 10.1109/RCIS.2011.6006827
   Goseva-Popstojanova K, 2015, INFORM SOFTWARE TECH, V68, P18, DOI 10.1016/j.infsof.2015.08.002
   Hafiz M, 2007, IEEE SOFTWARE, V24, P52, DOI 10.1109/MS.2007.114
   Hora A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P441, DOI 10.1109/ICSM.2012.6405305
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Izurieta C, 2013, SOFTWARE QUAL J, V21, P289, DOI 10.1007/s11219-012-9175-x
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Khomh F, 2009, PROC IEEE INT CONF S, P83, DOI 10.1109/ICSM.2009.5306327
   Kniesel G, 2009, INT C PROGRAM COMPRE, P208, DOI 10.1109/ICPC.2009.5090044
   Litke A., 2007, INT J ELECT COMPUT E, V1, P1663
   Mayvan BB, 2017, J SYST SOFTWARE, V125, P93, DOI 10.1016/j.jss.2016.11.030
   McNatt WB, 2001, P INT COMP SOFTW APP, P574, DOI 10.1109/CMPSAC.2001.960670
   Patton M.Q., 2017, QUALITATIVE RES EVAL
   Pettersson N, 2010, IEEE T SOFTWARE ENG, V36, P575, DOI 10.1109/TSE.2009.92
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Richle D, 2011, LECT NOTES COMPUT SC, V6510, P1, DOI 10.1007/978-3-642-19432-0_1
   Rudzki J., 2004, Scientific Engineering of Distributed Java Applications. 4th International Workshop, FIDJI 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3409), P12
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Schilling W., 2008, ANN RELIAB MAINTAINA, P399, DOI [10.1109/RAMS.2008.4925829, DOI 10.1109/RAMS.2008.4925829]
   Tripathi A.K., 2014, P 18 INT C EV ASS SO, DOI 10.1145/2601248.2601288
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Van Hagen M., 2007, P 1 INT WORK SOFTW P, P1
   van Solingen R., 2002, Goal question metric (gqm) approach, DOI [10.1002/0471028959.sof142, DOI 10.1002/0471028959.SOF142]
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 56
TC 9
Z9 10
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2019
VL 105
BP 1
EP 16
DI 10.1016/j.infsof.2018.07.014
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HD5RF
UT WOS:000452586900001
OA Green Published
DA 2024-07-18
ER

PT J
AU Zapalowski, V
   Nunes, I
   Nunes, DJ
AF Zapalowski, Vanius
   Nunes, Ingrid
   Nunes, Daltro Jose
TI The WGB method to recover implemented architectural rules
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Architectural rule; Source code dependency;
   Architecture recovery
ID SOFTWARE; SYSTEM; DESIGN; MODELS
AB Context: The identification of architectural rules, which specify allowed dependencies among architectural modules, is a key challenge in software architecture recovery. Existing approaches either retrieve a large set of rules, compromising their practical use, or are limited to supporting the understanding of such rules, which are manually recovered.
   Objective: To propose and evaluate a method to recover architectural rules, focusing on those implemented in the source code, which may differ from planned or conceptual rules.
   Method: We propose the WGB method, which analyzes dependencies among architectural modules as a graph, adding weights that correspond to the proposed module dependency strength (MDS) metric and identifies the set of implemented architectural rules by solving a mathematical optimization problem. We evaluated our method with a case study and an empirical study that compared rules extracted by the method with the conceptual architecture and source code dependencies of six systems. These comparisons considered efficiency and effectiveness of our method.
   Results: Regarding efficiency, our method took 45.55 s to analyze the largest system evaluated. Considering effectiveness, our method captured package dependencies as extracted rules with a reduction of 87.6%, on average, to represent this information. Using allowed architectural dependencies as a reference point (but not a gold standard), provided rules achieved 37.1% of precision and 37.8% of recall.
   Conclusion: Our empirical evaluation shows that the implemented architectural rules recovered by our method consist of abstract representations of (a large number of) module dependencies, providing a concise view of dependencies that can be inspected by developers to identify occurrences of architectural violations and undocumented rules.
C1 [Zapalowski, Vanius; Nunes, Ingrid; Nunes, Daltro Jose] Univ Fed Rio Grande do Sul, Inst Informat, Porto Alegre, RS, Brazil.
   [Nunes, Ingrid] Tech Univ Dortmund, Dept Comp Sci, Dortmund, Germany.
C3 Universidade Federal do Rio Grande do Sul; Dortmund University of
   Technology
RP Zapalowski, V (corresponding author), Univ Fed Rio Grande do Sul, Inst Informat, Porto Alegre, RS, Brazil.
EM vzapalowski@inf.ufrgs.br; ingrid.nunes@inf.ufrgs.br; daltro@inf.ufrgs.br
RI Nunes, Ingrid/A-3715-2014
OI Nunes, Ingrid/0000-0002-6879-5829
FU CAPES [1311715, 7619-15-4]; CNPq [303232/2015-3]; Alexander von Humboldt
   [BRA 1184533 HFSTCAPES-P]
FX Vanius Zapalowski would like to thank CAPES for research grants 1311715.
   Ingrid Nunes would like to thank for research grants CNPq ref.
   303232/2015-3, CAPES ref. 7619-15-4, and Alexander von Humboldt, ref.
   BRA 1184533 HFSTCAPES-P.
CR Allen E.B., 2001, Proceedings Seventh International Software Metrics Symposium, IEEE, P124
   Belle AB, 2016, INFORM SOFTWARE TECH, V74, P1, DOI 10.1016/j.infsof.2016.01.008
   Bischofberger W, 2004, LECT NOTES COMPUT SC, V3047, P1
   Bittencourt R. A., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P163, DOI 10.1109/WCRE.2010.26
   Bosch J, 2004, LECT NOTES COMPUT SC, V3047, P194
   Cai Yuanfang, 2013, P 9 INT ACM SIGSOFT, P133
   Chong CY, 2013, INFORM SOFTWARE TECH, V55, P1994, DOI 10.1016/j.infsof.2013.07.002
   Christl A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P89
   Christl A, 2007, INFORM SOFTWARE TECH, V49, P255, DOI 10.1016/j.infsof.2006.10.015
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Hora A, 2015, J SYST SOFTWARE, V109, P192, DOI 10.1016/j.jss.2015.08.007
   Hora A, 2013, WORK CONF REVERSE EN, P331, DOI 10.1109/WCRE.2013.6671308
   Huynh S, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P411, DOI 10.1145/1368088.1368144
   Knodel J., 2007, 2007 WORK IEEE IFIP, P44, DOI 10.1109/WICSA.2007.1
   Le Metayer D, 1998, IEEE T SOFTWARE ENG, V24, P521, DOI 10.1109/32.708567
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   Maffort C., 2013, 25 INT C SOFTW ENG K
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   Paiva R., 2016, P 31 ANN ACM S APPL, P1309, DOI [10.1145/2851613.2851765, DOI 10.1145/2851613.2851765]
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pruijt Leo, 2014, P WICSA 2014 COMP VO
   Riva C, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2002.995789
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Sartipi K, 2001, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2001.972754
   Scanniello Giuseppe, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P103, DOI 10.1109/SEFM.2010.19
   Schmerl B, 2006, IEEE T SOFTWARE ENG, V32, P454, DOI 10.1109/TSE.2006.66
   Stringfellow C, 2006, INFORM SOFTWARE TECH, V48, P484, DOI 10.1016/j.infsof.2005.05.007
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
   Tvedt RT, 2002, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSM.2002.1167796
   vanSolingen Rini, 2002, GOAL QUESTION METRIC, DOI [10.1002/0471028959.sof142, DOI 10.1002/0471028959.SOF142]
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Xiao L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1030, DOI 10.1145/2786805.2803194
   Zapalowski V., 2014, GROMOV HYPERBOLICITY, P14
NR 42
TC 2
Z9 2
U1 0
U2 3
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2018
VL 103
BP 125
EP 137
DI 10.1016/j.infsof.2018.06.012
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GU9ZY
UT WOS:000445717000008
DA 2024-07-18
ER

PT J
AU Politowski, C
   Fontoura, LM
   Petrillo, F
   Guéhéneuc, YG
AF Politowski, Cristiano
   Fontoura, Lisandra M.
   Petrillo, Fabio
   Gueheneuc, Yann-Gael
TI Learning from the past: A process recommendation system for video game
   projects using postmortems experiences
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software development process; Video game development; Recommendation
   system
AB Context: The video game industry is a billion dollar industry that faces problems in the way games are developed. One method to address these problems is using developer aid tools, such as Recommendation Systems. These tools assist developers by generating recommendations to help them perform their tasks.
   Objective: This article describes a systematic approach to recommend development processes for video game projects, using postmortem knowledge extraction and a model of the context of the new project, in which "postmortems" are articles written by video game developers at the end of projects, summarizing the experience of their game development team. This approach aims to provide reflections about development processes used in the game industry as well as guidance to developers to choose the most adequate process according to the contexts they're in.
   Method: Our approach is divided in three separate phases: in the first phase, we manually extracted the processes from the postmortems analysis; in the second one, we created a video game context and algorithm rules for recommendation; and finally in the third phase, we evaluated the recommended processes by using quantitative and qualitative metrics, game developers feedback, and a case study by interviewing a video game development team.
   Contributions: This article brings three main contributions. The first describes a database of developers' experiences extracted from postmortems in the form of development processes. The second defines the main attributes that a video game project contain, which it uses to define the contexts of the project. The third describes and evaluates a recommendation system for video game projects, which uses the contexts of the projects to identify similar projects and suggest a set of activities in the form of a process.
C1 [Politowski, Cristiano; Fontoura, Lisandra M.] Univ Fed Santa Maria, Dept Computacao Aplicada DCOM, Santa Maria, RS, Brazil.
   [Petrillo, Fabio; Gueheneuc, Yann-Gael] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Universidade Federal de Santa Maria (UFSM); Concordia University -
   Canada
RP Politowski, C (corresponding author), Univ Fed Santa Maria, Dept Computacao Aplicada DCOM, Santa Maria, RS, Brazil.
EM cpolitowski@inf.ufsm.br; lisandra@inf.ufsm.br; fabio@petrillo.com;
   yann-gael.gueheneuc@concordia.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019; Politowski, Cristiano/N-7287-2019
OI Politowski, Cristiano/0000-0002-0206-1056; Petrillo,
   Fabio/0000-0002-8355-1494
FU National Council for Scientific and Technological Development of Brazil
FX We give our thanks to the authors of the postmortems for sharing their
   cases as well for their feedbacks. This work has been supported by the
   National Council for Scientific and Technological Development of Brazil.
CR [Anonymous], GAME PLAN INSIDERS G
   [Anonymous], POSTMORTEM KINGDOMS
   [Anonymous], 2015, TECHNICAL REPORT
   [Anonymous], QSEIFS1004
   [Anonymous], 2016, GLOB GAM MARK REACH
   [Anonymous], 2010, GAME DEV ESSENTIALS
   [Anonymous], SYSTEMS SOFTWARE SER
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Bates B., 2004, GAME DESIGN THOMSON
   Beck K., 2000, APT BOOK SERIES
   Boehm B, 2004, LECT NOTES COMPUT SC, V3026, P1, DOI 10.1049/ic:20040317
   Callele D., 2005, Proceedings, 13th IEEE International Conference on Requirements Engineering (RE'05), P240, DOI [DOI 10.1109/RE.2005.58, 10.1109/re.2005.58]
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Fowler M., 2001, Wuhan University Journal of Natural Sciences, V6, P12, DOI 10.1007/BF03160222
   Fuggetta A., 2014, Proceedings of the on Future of Software Engineering, P1, DOI [10.1145/2593882.2593883, DOI 10.1145/2593882.2593883]
   Gasparic M, 2017, INFORM SOFTWARE TECH, V92, P236, DOI 10.1016/j.infsof.2017.08.006
   Hamann W., 2003, GOODBYE POSTMORTEMS
   Holmes R., 2008, Proceedings of the International working Conference on Mining Software Repositories, MSR '08, P23
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Humphrey W.S., 1988, P 4 INT SOFTW PROC W, P82
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Jolliffe I. T., 2002, PRINCIPAL COMPONENT
   Kanode CM, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P260, DOI 10.1109/ITNG.2009.74
   Keith Clinton., 2010, AGILE GAME DEV SCRUM, V1st
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Mouzhi Ge, 2010, P 4 ACM C REC SYST B, P257, DOI [10.1145/1864708.1864761, DOI 10.1145/1864708.1864761]
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Myllyaho M., 2004, IEEE FRANC 17 INT C
   OHagan Ann Osborne, 2015, EUR C SOFTW PROC IMP, P3, DOI DOI 10.1007/978-3-319-24647-5_1
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Pascarella L., 2018, IS VIDEO GAME DEV DI
   Petrillo F., 2010, Proceedings, 28th ACM International Conference on Design of Communication (SIGDOC 2010), ACM Digital Library, Brazil, September, P9
   Petrillo F., 2009, Computers in Entertainment CIE, V7, P13, DOI DOI 10.1145/1486508.1486521
   Petrillo F., 2008, P 2008 ACM S APPL CO, DOI 10.1145/1363686.1363854
   Politowski C., 2016, 15 S BRAS JOG ENTR D
   Politowski C, 2016, 2016 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS), P22, DOI [10.1145/2896958.2896960, 10.1109/GAS.2016.012]
   Ponzanelli L, 2017, PROC INT CONF SOFTW, P94, DOI 10.1109/ICSE.2017.17
   Robillard M. P., 2014, SPRINGER SCI BUS
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Royce W. W., 1987, P 9 INT C SOFTW ENG
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Shani G, 2011, RECOMMENDER SYSTEMS HANDBOOK, P257, DOI 10.1007/978-0-387-85820-3_8
   Velasquez I., 2017, INF SOFTW TECHNOL
   Washburn M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P280, DOI 10.1145/2889160.2889253
   Weststar Johanna, 2016, TECHNICAL REPORT
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 49
TC 7
Z9 11
U1 0
U2 10
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2018
VL 100
BP 103
EP 118
DI 10.1016/j.infsof.2018.04.003
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GJ1VN
UT WOS:000435056100007
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Pira, E
   Rafe, V
   Nikanjam, A
AF Pira, Einollah
   Rafe, Vahid
   Nikanjam, Amin
TI Searching for violation of safety and liveness properties using
   knowledge discovery in complex systems specified through graph
   transformations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Data mining; Bayesian network; Model checking; State space explosion;
   Graph transformation system
ID MODEL CHECKING; DEADLOCK DETECTION; HEURISTIC SOLUTION; OPTIMIZATION;
   REFINEMENT
AB Context Model checking is an automatic and precise technique in verification and refutation of software and hardware systems. Despite its advantages, the state space explosion problem may occur in large and complex systems. Recent studies demonstrate that using meta-heuristic and evolutionary algorithms are a proper solution to handle the state space explosion problem. In systems which are specified formally through graph transformations, the state space is constructed by applying all enable rules on all generated states. In such systems, there is a dependency between rules in each sequence of applied rules in the state space.
   Objective: This fact motivates us to use knowledge discovery techniques to intelligently explore only a portion of the state space instead of exhaustive exploration. We propose two different techniques to acquire such knowledge form the model state space. In this paper, we propose a data mining-based approach in which the required knowledge is obtained from exploring a slight portion of the model state space. Another approach is proposed in which a Bayesian network is used to capture this knowledge. After acquiring the required knowledge, it is employed to explore only a portion of the model state space intelligently, to refute a property.
   Results: The proposed approaches can be used to analyze the reachability, safety and liveness properties. To evaluate the proposed approaches, they are implemented in GROOVE, an open source toolset for designing and model checking of systems specified through graph transformations.
   Conclusion: Experimental results on different set of benchmarks show that the proposed approaches are faster and more accurate in comparison with the existing meta-heuristic and evolutionary techniques in model checking of complex software systems specified through graph transformations.
C1 [Pira, Einollah; Rafe, Vahid] Arak Univ, Fac Engn, Dept Comp Engn, Arak 3815688349, Iran.
   [Nikanjam, Amin] KN Toosi Univ Technol, Fac Comp Engn, Tehran 1631714191, Iran.
C3 Arak University; K. N. Toosi University of Technology
RP Rafe, V (corresponding author), Arak Univ, Fac Engn, Dept Comp Engn, Arak 3815688349, Iran.
EM piraep@gmail.com; v-rafe@araku.ac.ir; nikanjam@kntu.ac.ir
RI Nikanjam, Amin/AAT-7832-2020
OI Nikanjam, Amin/0000-0002-0440-6839; Pira, Einollah/0000-0001-9010-6113
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Alba E., 2008, P 10 ANN C GEN EV CO, P1735
   Alba E, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1066
   Alba Enrique., 1996, Parallel Problem Solving from NatureaATPPSN IV, P869
   [Anonymous], 1993, P SIGSOFT 93 FDN SOF
   [Anonymous], CAUSATION PREDICTION
   [Anonymous], 1997, Handbook of Graph Grammars and Computing by Graph Transformation
   [Anonymous], 2005, THESIS
   [Anonymous], THESIS
   [Anonymous], 2014, ARXIV14077933
   Araragi T., 2006, INT WORKSH MOD CHECK, P84
   Bacchus F., 1993, Uncertainty in Artificial Intelligence. Proceedings of the Ninth Conference (1993), P243
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baresi L., 2006, ACM SIGSOFT SOFTWARE, V5, P187
   Behjati Razieh, 2009, Fundamentals of Software Engineering. Third IPM International Conference, FSEN 2009. Revised Selected Papers, P292
   Berry MichaelJ., 1997, DATA MINING TECHNIQU
   Burch J. R., 1990, 27th ACM/IEEE Design Automation Conference. Proceedings 1990 (Cat. No.90CH2894-4), P46, DOI 10.1109/DAC.1990.114827
   Carrasco R. C., 1994, Grammatical Inference and Applications. Second International Colloquium, ICGI-94 Proceedings, P139
   Chen Hao., 2004, NDSS, P171
   Chicano F., 2008, P 10 ANN C GEN EV CO, p[1727, 2008]
   Chicano F, 2011, LECT NOTES COMPUT SC, V6956, P82, DOI 10.1007/978-3-642-23716-4_11
   COOPER GF, 1992, MACH LEARN, V9, P309, DOI 10.1007/BF00994110
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Edelkamp S., 2004, International Journal on Software Tools for Technology Transfer, V5, P247, DOI 10.1007/s10009-002-0104-3
   Edelkamp S., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P57
   Edelkamp S, 1998, LECT NOTES ARTIF INT, V1504, P81
   Edelkamp S., 1999, DATA STRUCTURES LEAM
   Elsinga JW, 2016, THESIS
   Engels G, 2000, LECT NOTES COMPUT SC, V1939, P323
   Estler HC, 2011, ICAPS WORKSH KNOWL E, V2011, P54
   Ferreira M., 2008, P HIGH PERF COMP SIM, V5, P319
   Francesca G, 2011, P INT COMP SOFTW APP, P108, DOI 10.1109/COMPSAC.2011.22
   Gaschig J., 1979, CMUCS79124
   Ge N, 2014, LECT NOTES COMPUT SC, V8748, P13, DOI 10.1007/978-3-319-11587-0_4
   Giannakopoulou D., 2003, P 9 EUR SOFTW ENG 11, P257, DOI DOI 10.1145/949952.940106
   Groce A., 2002, Software Engineering Notes, V27, P12, DOI 10.1145/566171.566175
   Groce A., 2004, International Journal on Software Tools for Technology Transfer, V6, P260, DOI 10.1007/s10009-003-0130-9
   Han JW, 2000, SIGMOD RECORD, V29, P1
   Hausmann J. H., 2005, THESIS
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Heckel R, 2006, ELECTRON NOTES THEOR, V148, P187, DOI 10.1016/j.entcs.2005.12.018
   Heckel R, 2005, ELECTRON NOTES THEOR, V127, P101, DOI 10.1016/j.entcs.2004.08.037
   HECKERMAN D, 1995, MACH LEARN, V20, P197, DOI 10.1023/A:1022623210503
   Kambayashi Y., 2017, HARM SEARCH ALG P 3, V514, P52
   Kastenberg H, 2006, LECT NOTES COMPUT SC, V3925, P299
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Kumazawa T, 2016, P 9 EAI INT C BIOINS, P214
   Leue, 2001, PROTOCOL VERIFICATIO
   Leue Stefan, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P264, DOI 10.1007/978-3-642-39176-7_17
   Maeoka J, 2016, STUD COMPUT INTELL, V614, P75, DOI 10.1007/978-3-319-23467-0_6
   Mao H, 2016, MACH LEARN, V105, P255, DOI 10.1007/s10994-016-5565-9
   Marrero W., 1997, MODEL CHECKING SECUR
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Milewicz R, 2017, COMPUT LANG SYST STR, V47, P170, DOI 10.1016/j.cl.2016.06.001
   Nasereddin H. H., 2009, INT J WEB APPL, V1, P183
   Nikanjam A, 2012, J COMPUT SCI TECH-CH, V27, P1077, DOI 10.1007/s11390-012-1285-1
   Parsa S, 2011, LECT NOTES COMPUT SC, V6783, P610
   Pearl J., 1988, PROBABILISTIC REASON
   Pelikan M, 2003, SICE 2003 ANNUAL CONFERENCE, VOLS 1-3, P2738
   Pira E, 2017, J SYST SOFTWARE, V131, P181, DOI 10.1016/j.jss.2017.05.128
   Pira E, 2016, APPL SOFT COMPUT, V49, P1185, DOI 10.1016/j.asoc.2016.06.039
   Rafe V, 2015, APPL SOFT COMPUT, V33, P136, DOI 10.1016/j.asoc.2015.04.032
   Rungta N, 2006, PROCEEDINGS OF FORMAL METHODS IN COMPUTER AIDED DESIGN, P60
   Snippe E., 2011, 14 20 STUD C IT
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Taentzer G., 2005, WORKSH MOD TRANS PRA
   Vardhan A., 2006, THESIS
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yang XB, 2010, ADV INFORM KNOWL PRO, P65, DOI 10.1007/978-1-84882-628-1_4
   Yousefian R, 2016, J INTELL FUZZY SYST, V31, P137, DOI 10.3233/IFS-162127
   Yousefian R, 2014, APPL SOFT COMPUT, V24, P169, DOI 10.1016/j.asoc.2014.06.055
   Zaki M. J., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P283
   Zojaji Z, 2016, APPL INTELL, V45, P1066, DOI 10.1007/s10489-016-0804-0
NR 74
TC 17
Z9 17
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2018
VL 97
BP 110
EP 134
DI 10.1016/j.infsof.2018.01.004
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GA0MR
UT WOS:000428008600009
DA 2024-07-18
ER

PT J
AU Yang, XL
   Lo, D
   Xia, X
   Sun, JL
AF Yang, Xinli
   Lo, David
   Xia, Xin
   Sun, Jianling
TI TLEL: A two-layer ensemble learning approach for just-in-time defect
   prediction
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Ensemble learning; Just-in-time defect prediction; Cost effectiveness
ID SOFTWARE; DIVERSITY; FAULTS
AB Context: Defect prediction is a very meaningful topic, particularly at change-level. Change-level defect prediction, which is also referred as just-in-time defect prediction, could not only ensure software quality in the development process, but also make the developers check and fix the defects in time [1].
   Objective: Ensemble learning becomes a hot topic in recent years. There have been several studies about applying ensemble learning to defect prediction [2-5]. Traditional ensemble learning approaches only have one layer, i.e., they use ensemble learning once. There are few studies that leverages ensemble learning twice or more. To bridge this research gap, we try to hybridize various ensemble learning methods to see if it will improve the performance of just-in-time defect prediction. In particular, we focus on one way to do this by hybridizing bagging and stacking together and leave other possibly hybridization strategies for future work.
   Method: In this paper, we propose a two-layer ensemble learning approach TLEL which leverages decision tree and ensemble learning to improve the performance of just-in-time defect prediction. In the inner layer, we combine decision tree and bagging to build a Random Forest model. In the outer layer, we use random under-sampling to train many different Random Forest models and use stacking to ensemble them once more.
   Results: To evaluate the performance of TLEL, we use two metrics, i.e., cost effectiveness and F1-score. We perform experiments on the datasets from six large open source projects, i.e., Bugzilla, Columba, JDT, Platform, Mozilla, and PostgreSQL, containing a total of 137,417 changes. Also, we compare our approach with three baselines, i.e., Deeper, the approach proposed by us [6], DNC, the approach proposed by Wang et al. [2], and MKEL, the approach proposed by Wang et al. [3]. The experimental results show that on average across the six datasets, TLEL could discover over 70% of the bugs by reviewing only 20% of the lines of code, as compared with about 50% for the baselines. In addition, the F1-scores TLEL can achieve are substantially and statistically significantly higher than those of three baselines across the six datasets.
   Conclusion: TLEL can achieve a substantial and statistically significant improvement over the state-of-the-art methods, i.e., Deeper, DNC and MKEL. Moreover, TLEL could discover over 70% of the bugs by reviewing only 20% of the lines of code. (C) 2017 Elsevier B.V. All rights reserved.
C1 [Yang, Xinli; Xia, Xin; Sun, Jianling] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Zhejiang University; Singapore Management University
RP Xia, X (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
EM zdyxl@zju.edu.cn; davidlo@smu.edu.sg; xxia@zju.edu.cn; sunjl@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU NSFC [61602403, 61572426]; Ministry of Science and Technology of China
   [2015BAH17F01]
FX This research was supported by NSFC Program (No. 61602403 and 61572426),
   and National Key Technology R&D Program of the Ministry of Science and
   Technology of China (No. 2015BAH17F01).
CR [Anonymous], 2015, DATA MINING
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Brown G, 2005, J MACH LEARN RES, V6, P1621
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Cliff N., 2014, ORDINAL METHODS BEHA
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   HO TK, 1994, IEEE T PATTERN ANAL, V16, P66, DOI 10.1109/34.273716
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khoshgoftaar T. M., 2000, Empirical Software Engineering, V5, P313, DOI 10.1023/A:1009896203228
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Peng Y, 2011, INT J INF TECH DECIS, V10, P187, DOI 10.1142/S0219622011004282
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rodriguez D, 2013, INFORM SOFTWARE TECH, V55, P1810, DOI 10.1016/j.infsof.2013.05.002
   Rokach L, 2010, ARTIF INTELL REV, V33, P1, DOI 10.1007/s10462-009-9124-7
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tang EK, 2006, MACH LEARN, V65, P247, DOI 10.1007/s10994-006-9449-2
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Xia H, 2013, IEEE T KNOWL DATA EN, V25, P1574, DOI 10.1109/TKDE.2012.89
   Xia X., 2016, IEEE T RELIAB, V65
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P134, DOI 10.1109/CSMR-WCRE.2014.6747163
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 50
TC 143
Z9 153
U1 0
U2 40
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2017
VL 87
BP 206
EP 220
DI 10.1016/j.infsof.2017.03.007
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EV2QD
UT WOS:000401599300013
OA Green Published
DA 2024-07-18
ER

PT J
AU Hong, S
   Kwak, T
   Lee, B
   Jeon, Y
   Ko, B
   Kim, Y
   Kim, M
AF Hong, Shin
   Kwak, Taehoon
   Lee, Byeongcheol
   Jeon, Yiru
   Ko, Bongseok
   Kim, Yunho
   Kim, Moonzoo
TI MUSEUM: Debugging real-world multilingual programs using mutation
   analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Debugging; mutation analysis; Language interoperability; Foreign
   function interface
AB Context The programming language ecosystem has diversified over the last few decades. Non-trivial programs are likely to be written in more than a single language to take advantage of various control/data abstractions and legacy libraries.
   Objective: Debugging multilingual bugs is challenging because language interfaces are difficult to use correctly and the scope of fault localization goes beyond language boundaries. To locate the causes of real-world multilingual bugs, this article proposes a mutation-based fault localization technique (MUSEUM).
   Method: MUSEUM modifies a buggy program systematically with our new mutation operators as well as conventional mutation operators, observes the dynamic behavioral changes in a test suite, and reports suspicious statements. To reduce the analysis cost, MUSEUM selects a subset of mutated programs and test cases.
   Results: Our empirical evaluation shows that MUSEUM is (i) effective: it identifies the buggy statements as the most suspicious statements for both resolved and unresolved non-trivial bugs in real-world multilingual programming projects; and (ii) efficient: it locates the buggy statements in modest amount of time using multiple machines in parallel. Also, by applying selective mutation analysis (i.e., selecting subsets of mutants and test cases to use), MUSEUM achieves significant speedup with marginal accuracy loss compared to the full mutation analysis.
   Conclusion: It is concluded that MUSEUM- locates real-world multilingual bugs accurately. This result shows that mutation analysis can provide an effective, efficient, and language semantics agnostic analysis on multilingual code. Our light-weight analysis approach would play important roles as programmers write and debug large and complex programs in diverse programming languages. (C) 2016 The Authors. Published by Elsevier B.V.
C1 [Hong, Shin] Handong Global Univ, 558 Handong Ro, Pohang 37554, Gyeongbuk, South Korea.
   [Kwak, Taehoon; Jeon, Yiru; Kim, Yunho; Kim, Moonzoo] Korea Inst Sci & Technol, 291 Daehak Ro, Daejeon 34141, South Korea.
   [Lee, Byeongcheol; Ko, Bongseok] Gwangju Inst Sci & Technol, 123 Cheomdangwagi Ro, Gwangju, South Korea.
C3 Handong Global University; Korea Institute of Science & Technology
   (KIST); Gwangju Institute of Science & Technology (GIST)
RP Lee, B (corresponding author), Gwangju Inst Sci & Technol, 123 Cheomdangwagi Ro, Gwangju, South Korea.
EM hongshin@handong.edu; thkwak@kaist.ac.kr; byeong@gist.ac.kr;
   podray@kaist.ac.kr; bsk@gist.ac.kr; kimyunho@kaist.ac.kr;
   moonzoo@cs.kaist.ac.kr
FU MSIP, Korea, under the ITRC support program
   [IITP-2016-H85011610120001002]; NRF - Korea government (MSIP)
   [NRF-2014K1A3A1A09063167, NRF-2015R1C1A1A01055259,
   NRF-2015R1C1A1A01052876, NRF-2016R1A2B4008113]; IITP grant program -
   MSIP (Research and Development of Dual Operating System Architecture
   with High-Reliable RTOS and High-Performance OS) [R0101-15-0081]; IITP
   grant program - MSIP (High Performance Big Data Analytics Platform
   Performance Acceleration Technologies Development) [R0190-16-2012]; GIST
   Research Institute (GRI)
FX This work is supported by the MSIP, Korea, under the ITRC support
   program (IITP-2016-H85011610120001002) supervised by the IITP, the NRF
   grants (NRF-2014K1A3A1A09063167, NRF-2015R1C1A1A01055259,
   NRF-2015R1C1A1A01052876, and NRF-2016R1A2B4008113) funded by the Korea
   government (MSIP), the IITP grant programs funded by the MSIP (Research
   and Development of Dual Operating System Architecture with High-Reliable
   RTOS and High-Performance OS [No. R0101-15-0081] and High Performance
   Big Data Analytics Platform Performance Acceleration Technologies
   Development [No. R0190-16-2012]), and the GIST Research Institute (GRI)
   grant in 2016.
CR Abreu R., 2006, PAC RIM INT S DEP CO
   Agrawal H., 1989, TECHNICAL REPORT
   Ammann Paul, 2014, ICST
   [Anonymous], 2008, AZUREUSCOMMITLOG LIS
   [Anonymous], 2009, JAVA GNOME AVOID SEG
   [Anonymous], 2012, XERIAL SQLITE JDBC I
   [Anonymous], 2015, JNI APIS DEVELOPER G
   [Anonymous], 2015, 419729 SWT
   [Anonymous], 2003, JDK4804447 JNI
   [Anonymous], 2011, JNI LOCAL REFERENCE
   [Anonymous], ASE
   [Anonymous], 2014, 958706 FIR
   [Anonymous], 2013, XERIAL SQLITE JDBC
   Arnold M., 2011, ACM T SOFTW ENG METH, V21, DOI DOI 10.1145/2063239.2063241
   Clause J., 2010, ICSE
   Dawson M., 2009, LOW BEST PRACTICES U
   Deng L., 2013, ICST
   Furr M, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1377492.1377493
   Graves T. L., 1998, ICSE
   Hong S., 2015, ASE
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Jung C., 2014, ICSE
   Kondoh Goh., 2008, ISSTA
   Lee B., 2010, PLDI
   Lee B, 2015, SOFTWARE PRACT EXPER, V45, P1277, DOI 10.1002/spe.2276
   Li S., 2009, CCS
   Li S., 2011, OOPSLA
   Li Siliang., 2014, ECOOP
   Liang S., 1999, Java native interface: programmers guide and reference, V1
   Maldonado J. C., 2001, PROTEUM FAMILY TOOLS
   Meyerovich L. A., 2013, OOPSLA
   Moon S., 2014, ICST
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   OCHIAI AKIRA, 1957, BULL JAPANESE SOC SCI FISH, V22, P526
   Offutt J., 1993, ICSE
   Papadakis M., 2013, P IEEE INT WORK C SO
   Papadakis M., 2014, SAC
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Ravitch T., 2009, PLDI
   Siefers Joseph., 2010, CCS
   Tan G., 2006, SAFE JAVA NATIVE INT
   Tan G., 2008, EMPIRICAL SECURITY S
   Tan Gang., 2007, OOPSLA
   Wong E., 2009, TECHNICAL REPORT
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu G., 2011, PLDI
   Xu G., 2008, ICSE
   Zhang L., 2013, OOPSLA
NR 48
TC 25
Z9 27
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2017
VL 82
BP 80
EP 95
DI 10.1016/j.infsof.2016.10.002
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED9CE
UT WOS:000389167000005
OA hybrid
DA 2024-07-18
ER

PT J
AU Alberto, A
   Cavalcanti, A
   Gaudel, MC
   Simao, A
AF Alberto, Alex
   Cavalcanti, Ana
   Gaudel, Marie-Claude
   Simao, Adenilso
TI Formal mutation testing for <i>Circus</i>
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Circus; Mutation; Testing; Formal specification
ID REFINEMENT; SYSTEMS; GENERATION; COVERAGE; CZT
AB Context: The demand from industry for more dependable and scalable test-development mechanisms has fostered the use of formal models to guide the generation of tests. Despite many advancements having been obtained with state-based models, such as Finite State Machines (FSMs) and Input/Output Transition Systems (IOTSs), more advanced formalisms are required to specify large, state-rich, concurrent systems. Circus, a state-rich process algebra combining Z, CSP and a refinement calculus, is suitable for this; however, deriving tests from such models is accordingly more challenging. Recently, a testing theory has been stated for Circus, allowing the verification of process refinement based on exhaustive test sets.
   Objective: We investigate fault-based testing for refinement from Circus specifications using mutation. We seek the benefits of such techniques in test-set quality assertion and fault-based test-case selection. We target results relevant not only for Circus, but to any process algebra for refinement that combines CSP with a data language.
   Method: We present a formal definition for fault-based test sets, extending the Circus testing theory, and an extensive study of mutation operators for Circus. Using these results, we propose an approach to generate tests to kill mutants. Finally, we explain how prototype tool support can be obtained with the implementation of a mutant generator, a translator from Circus to CSP, and a refinement checker for CSP, and with a more sophisticated chain of tools that support the use of symbolic tests.
   Results: We formally characterise mutation testing for Circus, defining the exhaustive test sets that can kill a given mutant. We also provide a technique to select tests from these sets based on specification traces of the mutants. Finally, we present mutation operators that consider faults related to both reactive and data manipulation behaviour. Altogether, we define a new fault-based test-generation technique for Circus.
   Conclusion: We conclude that mutation testing for Circus can truly aid making test generation from state-rich model more tractable, by focussing on particular faults. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Alberto, Alex; Simao, Adenilso] Univ Sao Paulo, ICMC, Sao Carlos, SP, Brazil.
   [Cavalcanti, Ana] Univ York, Dept Comp Sci, York YO10 5GH, N Yorkshire, England.
   [Gaudel, Marie-Claude] Univ Paris Saclay, LRI, Univ Paris Sud, CNRS, F-91405 Orsay, France.
C3 Universidade de Sao Paulo; University of York - UK; Centre National de
   la Recherche Scientifique (CNRS); Universite Paris Cite; Universite
   Paris Saclay
RP Alberto, A (corresponding author), Univ Sao Paulo, ICMC, Sao Carlos, SP, Brazil.
EM alexdba@gmail.com
RI Simao, Adenilso S/E-9620-2011
OI Simao, Adenilso/0000-0002-1454-2607; Cavalcanti, Ana Lucia
   Caneca/0000-0002-0831-1976
FU Digiteo research cluster [Convention N2014-1411D]; Brazilian Funding
   Agency CNPq [400834/2014-6]; EPSRC [EP/H017461/1, EP/E025366/1,
   EP/M025756/1] Funding Source: UKRI
FX We are grateful to the Digiteo research cluster for their financial
   support of our collaboration (Convention N2014-1411D), to the Brazilian
   Funding Agency CNPq (Grant 400834/2014-6), and to the Royal Society.
CR Aichernig B., 2008, FORM ASP COMPUT, V21, P33164
   Aichernig B. K., 2003, Formal Aspects of Computing, V15, P280, DOI 10.1007/s00165-003-0011-8
   Aichernig Bernhard K., 2013, Theories of Programming and Formal Methods. Essays Dedicated to Jifeng He on the Occasion of His 70th Birthday. LNCS 8051, P23, DOI 10.1007/978-3-642-39698-4_2
   Aichernig BK, 2015, SCI COMPUT PROGRAM, V97, P383, DOI 10.1016/j.scico.2014.05.004
   Aichernig BK, 2006, LECT NOTES COMPUT SC, V3922, P324
   Alkrarha O, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P421, DOI 10.1109/ITNG.2015.74
   Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   Andrews Z., 2013, P 2013 IEEE 11 INT S, P1, DOI [10.1109/ISADS.2013.6513445, DOI 10.1109/ISADS.2013.6513445]
   Andrews Z, 2013, ANN IEEE SYST CONF, P356, DOI 10.1109/SysCon.2013.6549906
   [Anonymous], 1999, FDR US MAN TUT VERS
   [Anonymous], 2006, THESIS
   [Anonymous], 2015, 2015 IEEE 8 INT C SO, DOI DOI 10.1109/ICST.2015.7102627
   Black PE, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ASE.2000.873653
   Brillout Angelo, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P208, DOI 10.1007/978-3-642-17071-3_11
   Brinksma Ed., 1988, PROTOCOL SPECIFICATI, VVIII, P63
   BUDD TA, 1985, COMPUT LANG, V10, P63, DOI 10.1016/0096-0551(85)90011-6
   Cavalcanti A, 2007, LECT NOTES COMPUT SC, V4789, P151
   Cavalcanti A, 2014, LECT NOTES COMPUT SC, V8411, P415
   Cavalcanti A, 2010, LECT NOTES COMPUT SC, V6445, P1, DOI 10.1007/978-3-642-16690-7_1
   Cavalcanti A, 2011, ACTA INFORM, V48, P97, DOI 10.1007/s00236-011-0133-z
   Cavalcanti A, 2011, FORM ASP COMPUT, V23, P465, DOI 10.1007/s00165-010-0170-3
   Cavalcanti A, 2010, LECT NOTES COMPUT SC, V5713, P42
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Dorofeeva R, 2005, LECT NOTES COMPUT SC, V3731, P204
   Feliachi A., 2015, INT J SOFTWARE INFOR, V9, P177
   Feliachi A., 2012, THESIS
   Feliachi A, 2012, LECT NOTES COMPUT SC, V7152, P243, DOI 10.1007/978-3-642-27705-4_20
   Fischer C, 2000, THESIS
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Freitas Leo, 2011, International Journal on Software Tools for Technology Transfer, V13, P463, DOI 10.1007/s10009-011-0195-9
   Freitas L, 2006, THESIS
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   FUJIWARA S, 1992, IFIP TRANS C, V3, P267
   Gaudel M.-C., 1998, Formal Aspects of Computing, V10, P436, DOI 10.1007/s001650050026
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   Gibson-Robinson T., 2014, Lecture Notes in Computer Science, V8413, P187
   Gromov M, 2009, LECT NOTES COMPUT SC, V5522, P137, DOI 10.1007/978-3-642-02138-1_9
   Guo Q, 2007, SOFTW TEST VERIF REL, V17, P41, DOI 10.1002/stvr.352
   Herzner W., 2011, SOFTWARETECHNIK TREN, V31
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Hierons RM, 2006, IEEE T COMPUT, V55, P618, DOI 10.1109/TC.2006.80
   Hierons RM, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P157, DOI 10.1109/SEFM.2009.12
   Hoare C. A. R., 1998, Unifying Theories of Programming
   Huo J, 2009, SOFTW TEST VERIF REL, V19, P55, DOI 10.1002/stvr.396
   Jourdan GV, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P547
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Krenn W, 2009, ELECTRON NOTES THEOR, V253, P71, DOI 10.1016/j.entcs.2009.09.052
   Krichen M., 2012, Int. J. Crit. Comput.-Based Syst, V3, P26, DOI [10.1504/IJCCBS.2012.045075, DOI 10.1504/IJCCBS.2012.045075]
   Kuhn DR, 1999, ACM T SOFTW ENG METH, V8, P411, DOI 10.1145/322993.322996
   Labbé S, 2008, FORM ASP COMPUT, V20, P563, DOI 10.1007/s00165-008-0086-3
   Lestiennes G, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ISSRE.2002.1173206
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Malik P, 2005, LECT NOTES COMPUT SC, V3455, P65
   Oliveira MVM, 2014, LECT NOTES COMPUT SC, V8739, P39, DOI 10.1007/978-3-319-10181-1_3
   Miller T, 2005, LECT NOTES COMPUT SC, V3771, P227
   Morgan Carroll, 1994, Programming from specifications
   Mota Alexandre, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P235, DOI 10.1007/978-3-319-10431-7_17
   Oliveira M, 2009, FORM ASP COMPUT, V21, P3, DOI 10.1007/s00165-007-0052-5
   Oliveira M, 2013, FORM ASP COMPUT, V25, P133, DOI 10.1007/s00165-007-0044-5
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis M, 2013, SPRINGERPLUS, V2, DOI 10.1186/2193-1801-2-121
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A, 1996, COMPUT NETWORKS ISDN, V29, P81, DOI 10.1016/S0169-7552(96)00019-0
   Roscoe AW, 1998, PRENTICE HALL SERIES
   Scattergood B., 2011, Tech, Rep
   Schneider S, 2005, FORM ASP COMPUT, V17, P390, DOI 10.1007/s00165-005-0076-7
   Srivatanakul T, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P340, DOI 10.1109/APSEC.2003.1254388
   Tretmans J., 1996, Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, TACAS '96. Proceedings, P127
   Van der Bijl M, 2004, LNCS, V2931, P1102
   Weiglhofer Martin, 2008, Unifying Theories of Programming. Second International Symposium, UTP 2008. Revised Selected Papers, P181
   Weiglhofer M, 2009, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2009.194
   Wimmel G, 2002, LECT NOTES COMPUT SC, V2495, P471
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   WOODCOCK JCP, FORMAL ASPE IN PRESS
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 77
TC 7
Z9 7
U1 0
U2 14
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 131
EP 153
DI 10.1016/j.infsof.2016.04.003
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200010
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Omar, E
   Ghosh, S
   Whitley, D
AF Omar, Elmandi
   Ghosh, Sudipto
   Whitley, Darrell
TI Subtle higher order mutants
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Higher order mutation testing; Search-based software engineering;
   Software testing; Genetic algorithm; Local search
ID MUTATION; TOOL; ASPECTJ
AB Context: Research has shown the majority of real faults are complex and cannot be simulated with traditional First Order Mutants (FOMs). Higher Order Mutants (HOMs), which are created by making multiple syntactic changes to the source code (i.e, combining multiple FOMs), can potentially be used to simulate realistic faults.
   Objective: Our goal is to find subtle HOMs, which we define to be HOMs that are not killed by a reference test suite that kills all the FOMs. Subtle HOMs represent cases where single faults interact by masking each other to produce complex faulty behavior. The fault-detection effectiveness of a test suite can be improved by adding test cases that detect subtle HOMs.
   Method: We developed six search-based techniques to find subtle HOMs: Genetic Algorithm, Local Search, Data-Interaction Guided Local Search, Test-Case Guided Local Search, Restricted Random Search and Restricted Enumeration. We then performed empirical studies to evaluate the ability of the search techniques to find subtle HOMs and investigated factors that impact the characteristics of the subtle HOMs.
   Results: Local Search and both the Guided Local Search techniques were more effective than the other techniques at finding subtle HOMs. The majority of subtle HOMs that were found resulted from combining mutated Java primitive operators.
   Conclusions: The proposed techniques are able to find subtle HOMs. Composing subtle HOMs of lower degrees is an effective way for finding new subtle HOM5 of higher degrees. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Omar, Elmandi; Ghosh, Sudipto; Whitley, Darrell] Colorado State Univ, Ft Collins, CO 80523 USA.
C3 Colorado State University
RP Ghosh, S (corresponding author), Colorado State Univ, Ft Collins, CO 80523 USA.
EM Elmandi.omar@colostate.edu; ghosh@cs.colostate.edu;
   whitley@cs.colostate.edu
RI Ghosh, Sudipto/ABI-4888-2020
CR Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], ASPECTJ IN ACTION
   [Anonymous], 2015, 2015 IEEE 8 INT C SO
   [Anonymous], 1980, Order No. 8025191
   [Anonymous], 2009, International Journal of software Engineering and its Applications
   [Anonymous], 1971, TECHNICAL REPORT
   Arcuri A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1003
   Bækken JS, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P169
   Debroy Vidroha, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P165, DOI 10.1109/ISSRE.2009.14
   Delamare R, 2009, IEEE ICST WORKSHOP, P200, DOI 10.1109/ICSTW.2009.41
   DeMillo R. A., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P351, DOI 10.1109/CMPSAC.1991.170202
   DiGiuseppe N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P3, DOI 10.1109/ICSM.2011.6080767
   Ferrari Fabiano Cutigi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P52, DOI 10.1109/ICST.2008.37
   Gopinath R., 2014, P INT S SOFTW REL EN
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P397
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Irvine SA, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P169, DOI 10.1109/TAIC.PART.2007.38
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Madeyski L, 2010, IET SOFTW, V4, P32, DOI 10.1049/iet-sen.2008.0038
   Mohapatra D.P., 2008, INFORMATICA, V32
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   Omar E., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P1, DOI 10.1109/ISSRE.2012.6
   Omar E, 2014, IEEE ICST WORKSHOP, P165, DOI 10.1109/ICSTW.2014.19
   Omar E, 2013, PROC INT SYMP SOFTW, P340, DOI 10.1109/ISSRE.2013.6698887
   Omar E, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1271, DOI 10.1145/2576768.2598286
   Oram Andrew, 1991, MANAGING PROJECTS MA
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   PIT, 2011, MUT TEST SYST
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Nguyen QV, 2015, ADV INTELL SYST, V358, P391, DOI 10.1007/978-3-319-17996-4_35
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Untch R., 1992, P 30 ANN SE REGIONAL, P285
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Wah KSHT, 2003, SCI COMPUT PROGRAM, V48, P119, DOI 10.1016/S0167-6423(03)00022-4
   Wedyan F, 2015, INFORM SOFTWARE TECH, V59, P233, DOI 10.1016/j.infsof.2014.11.008
   Wedyan F, 2012, INFORM SOFTWARE TECH, V54, P900, DOI 10.1016/j.infsof.2011.12.001
   Xie T, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P179
   Xu Jeff Offutt andWuzhi, 2004, SIGSOFT Softw. Eng. Notes, V29, P1, DOI [10.1145/1022494.1022529, DOI 10.1145/1022494.1022529]
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 48
TC 15
Z9 16
U1 1
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2017
VL 81
SI SI
BP 3
EP 18
DI 10.1016/j.infsof.2016.01.016
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EB8IH
UT WOS:000387634200002
DA 2024-07-18
ER

PT J
AU Burgueño, L
   Wimmer, M
   Vallecillo, A
AF Burgueno, Loli
   Wimmer, Manuel
   Vallecillo, Antonio
TI A Linda-based platform for the parallel execution of out-place model
   transformations
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Model transformation; Performance; Scalability; Parallelization
AB Context: The performance and scalability of model transformations is gaining interest as industry is progressively adopting model-driven techniques and multicore computers are becoming commonplace. However, existing model transformation engines are mostly based on sequential and in-memory execution strategies, and thus their capabilities to transform large models in parallel and distributed environments are limited.
   Objective: This paper presents a solution that provides concurrency and distribution to model transformations.
   Method: Inspired by the concepts and principles of the Linda coordination language, and the use of data parallelism to achieve parallelization, a novel Java-based execution platform is introduced. It offers a set of core features for the parallel execution of out-place transformations that can be used as a target for high-level transformation language compilers.
   Results: Significant gains in performance and scalability of this platform are reported with regard to existing model transformation solutions. These results are demonstrated by running a model transformation test suite, and by its comparison against several state-of-the-art model transformation engines.
   Conclusion: Our Linda-based approach to the concurrent execution of model transformations can serve as a platform for their scalable and efficient implementation in parallel and distributed environments. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Burgueno, Loli; Vallecillo, Antonio] Univ Malaga, Atenea Res Grp, Bulevar Louis Pasteur 35, E-29071 Malaga, Spain.
   [Wimmer, Manuel] Vienna Univ Technol, Business Informat Grp, Karlspl 13, A-1040 Vienna, Austria.
C3 Universidad de Malaga; Technische Universitat Wien
RP Burgueño, L (corresponding author), Univ Malaga, Atenea Res Grp, Bulevar Louis Pasteur 35, E-29071 Malaga, Spain.
EM loli@lcc.uma.es
RI Vallecillo, Antonio/B-1884-2014; Burgueño, Lola/L-3817-2014
OI Vallecillo, Antonio/0000-0002-8139-9986; Burgueño,
   Lola/0000-0002-7779-8810
FU Christian Doppler Forschungsgesellschaft; BMWFW, Austria; 
   [TIN2014-52034-R]
FX This work is funded by Research Project TIN2014-52034-R as well as by
   the Christian Doppler Forschungsgesellschaft and the BMWFW, Austria. We
   would like to thank Salvador Martinez and Dimitris Kolovos for their
   help with the p-ATL and ETL transformations, respectively.
CR [Anonymous], P WORKSH SCAL MOD DR
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2012, J OBJECT TECHNOL
   [Anonymous], CEUR WORKSHOP P
   Benelallam A, 2015, P 2015 ACM SIGPLAN I, P37
   Benelallam A, 2014, LECT NOTES COMPUT SC, V8569, P230
   Bergmann Gabor., 2009, Electronic Communication of the European Association of Software Science and Technology, V18, P1
   Brambilla M., 2012, MOD DRIV SOFTW ENG P
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Burgeno L., 2015, CEUR WORKSHOP P, P52
   Burgueno L., 2014, P 2 WORKSH SCAL MOD, P23
   Burgueno L, 2013, P DOCT S, P9
   Class C., 2012, EarthChem Library, DOI 10.1594/IEDA/100060
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dijkstra E.W., 1974, ROLE SCI THOUGHT
   Pagán JE, 2015, SOFTW SYST MODEL, V14, P219, DOI 10.1007/s10270-013-0326-8
   Pagán JE, 2014, INFORM SOFTWARE TECH, V56, P586, DOI 10.1016/j.infsof.2014.01.005
   Fritzsche M., 2010, P MOD 2010, V161, P213
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   GELERNTER D, 1992, COMMUN ACM, V35, P96, DOI 10.1145/129630.129635
   Gómez A, 2015, LECT NOTES COMPUT SC, V9033, P19, DOI 10.1007/978-3-662-46675-9_2
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Horn Tassilo., 2014, TTC at STAF, P93
   Imre Gabor, 2012, Multicore Software Engineering, Performance, and Tools. Proceedings International Conference (MSEPT 2012), P86, DOI 10.1007/978-3-642-31202-1_10
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2010, LECT NOTES COMPUT SC, V6142, P123, DOI 10.1007/978-3-642-13688-7_9
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Krause C, 2014, LECT NOTES COMPUT SC, V8411, P325
   Deák L, 2013, 2013 IEEE EUROCON, P475, DOI 10.1109/EUROCON.2013.6625024
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Mamoud Q.H., 2005, GETTING STARTED JAVA
   MCLAUGHRY SW, 1999, HICSS 99, V8, P8037
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Object Management Group (OMG), 2005, PTC051101 OMG
   Papadopoulos G. A., 1998, ADV COMPUT, V46, P329, DOI [DOI 10.1016/S0065-2458(08)60208-9, 10.1016/S0065-2458(08)60208-9]
   Popov George, 2010, Latest Trends on Computers . 14th WSEAS International Conference on Computers (Part of the 14th WSEAS CSCC Multiconference), P411
   Razavi A, 2012, PROC INT CONF SOFTW, P562, DOI 10.1109/ICSE.2012.6227160
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Rivera JE, 2009, SIMUL-T SOC MOD SIM, V85, P778, DOI 10.1177/0037549709341635
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sadalage P.J., 2012, NoSQL Distilled
   Sanchez Cuadrado Jesus, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P1, DOI 10.1007/978-3-642-38883-5_1
   Sanchez Cuadrado Jesus, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P176, DOI 10.1007/978-3-642-30476-7_12
   Santiago I, 2012, INFORM SOFTWARE TECH, V54, P1340, DOI 10.1016/j.infsof.2012.07.008
   Scientific Computing Associates, LIND US GUID REF MAN
   Seki M, 2009, INT J PARALLEL PROG, V37, P37, DOI 10.1007/s10766-008-0086-1
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Tisi M, 2013, LECT NOTES COMPUT SC, V8107, P656, DOI 10.1007/978-3-642-41533-3_40
   Tisi M, 2011, LECT NOTES COMPUT SC, V6981, P32, DOI 10.1007/978-3-642-24485-8_4
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   von Pilgrim J, 2008, LECT NOTES COMPUT SC, V5095, P17, DOI 10.1007/978-3-540-69100-6_2
   Wagelaar D, 2011, LECT NOTES COMPUT SC, V6981, P623, DOI 10.1007/978-3-642-24485-8_46
   Wells GC, 2006, SCI COMPUT PROGRAM, V59, P82, DOI 10.1016/j.scico.2005.07.005
   Wells GC, 2004, CONCURR COMP-PRACT E, V16, P1005, DOI 10.1002/cpe.794
   Wischenbart Martin., 2012, Proceedings of the 21st International Conference on World Wide Web, P939
NR 59
TC 10
Z9 11
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2016
VL 79
BP 17
EP 35
DI 10.1016/j.infsof.2016.06.001
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DW0AE
UT WOS:000383302500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lindgren, E
   Münch, J
AF Lindgren, Eveliina
   Muench, Juergen
TI Raising the odds of success: the current state of experimentation in
   product development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product management; Hypothesis-driven Software development;
   Experiment-driven Software development; Continuous experimentation; Lean
   startup; Lean UX
AB Context: An experiment-driven approach to software product and service development is gaining increasing attention as a way to channel limited resources to the efficient creation of customer value. In this approach, software capabilities are developed incrementally and validated in continuous experiments with stakeholders such as customers and users. The experiments provide factual feedback for guiding, subsequent development.
   Objective: This paper explores the state of the practice of experimentation in the software industry. It also identifies the key challenges and success factors that practitioners associate with the approach.
   Method: A qualitative survey based on semi-structured interviews and thematic coding analysis was conducted. Ten Finnish software development companies, represented by thirteen interviewees; participated in the study.
   Results: The study found that although the principles of continuous experimentation resonated with industry practitioners, the state of the practice is not yet mature. In particular, experimentation is rarely systematic and continuous. Key challenges relate to changing the organizational culture, accelerating the development cycle speed, and finding the right measures for customer value and product success. Success factors include a supportive organizational culture, deep customer and domain knowledge, and the availability of the relevant skills and tools to conduct experiments.
   Conclusions: It is concluded that the major issues in moving towards continuous experimentation are on an organizational level; most significant technical challenges have been solved. An evolutionary approach is proposed as a way to transition towards experiment-driven development. (C) 2016 Elsevier B.V. All rights reserved.
C1 [Lindgren, Eveliina; Muench, Juergen] Univ Helsinki, Dept Comp Sci, POB 68, FI-00014 Helsinki, Finland.
   [Muench, Juergen] Reutlingen Univ, Alteburgstr 150, D-72762 Reutlingen, Germany.
C3 University of Helsinki
RP Lindgren, E (corresponding author), Univ Helsinki, Dept Comp Sci, POB 68, FI-00014 Helsinki, Finland.
EM eveliina.lindgren@alumni.helsinki.fi; juergen.muench@cs.helsinki.fi
RI Münch, Jürgen/ABC-2316-2020; Lai, Stephen/L-5253-2016
OI Münch, Jürgen/0000-0003-0327-8094; 
FU Tekes; Need for Speed program
FX We wish to thank the participants in the study for their time and
   contributions and the reviewers for their valuable comments. We would
   also like to thank the Finnish technology agency, Tekes, for funding the
   Cloud Software Factory project, and the Need for Speed program, under
   which the proposed study was undertaken.
CR Alvarez C., 2014, Lean Customer Development: Building Products Your Customers Will Buy
   Amatriain X, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P2201, DOI 10.1145/2505515.2514701
   [Anonymous], INTERVIEW GUIDE CODE
   [Anonymous], SOLVE BIG PROBLEMS T
   [Anonymous], ORG CULTURE
   [Anonymous], PEER REV WORKSH 3 WO
   [Anonymous], 2014, RCOSE 2014 P
   [Anonymous], 2003, SURVEY HDB
   [Anonymous], UX LEAN APPL LEAN PR
   [Anonymous], 2015, J SYST SOFTW
   [Anonymous], DASMA SOFTW METR C M
   [Anonymous], MANAGING SO IN PRESS
   [Anonymous], PRINCIPLES AGILE MAN
   [Anonymous], P 2 INT WORKSH RAP C
   [Anonymous], 2013, CHI 13 EXTENDED ABST, DOI DOI 10.1145/2468356.2468758
   [Anonymous], NEED SPEED N4S RES P
   [Anonymous], RES PROGR
   [Anonymous], 2008, Guide to Advanced Empirical Software Engineering, DOI 10.1007/978-1-84800-044-5_9
   Blank S., 2007, 4 STEPS EPIPHANY SUC
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   Croll Alistair., 2013, Lean Analytics: Use Data to Build a Better Startup Faster, V1
   Davenport TH, 2009, HARVARD BUS REV, V87, P68
   Fabijan A, 2015, LECT NOTES BUS INF P, V210, P139, DOI 10.1007/978-3-319-19593-3_12
   Giardino C, 2015, LECT NOTES BUS INF P, V212, P52, DOI 10.1007/978-3-319-18612-2_5
   Holmstrom Olsson Helena, 2013, Lean Enterprise Software and Systems, P152, DOI [10.1007/978-3, DOI 10.1007/978-3]
   Humble J., 2014, Lean Enterprise: How High Performance Organizations Innovate at Scale
   Jansen H., 2010, Forum Qualitative Sozialforschung/Forum: Qualitative Social Research, V11, P1, DOI [DOI 10.17169/FQS-11.2, 10.17169/fqs-11.2.1450, DOI 10.17169/FQS-11.2.1450]
   Karvonen T, 2015, LECT NOTES BUS INF P, V210, P117, DOI 10.1007/978-3-319-19593-3_10
   Kohavi R, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1168
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY, DOI DOI 10.1002/EV.1427
   Lindgren E, 2015, LECT NOTES BUS INF P, V212, P117, DOI 10.1007/978-3-319-18612-2_10
   Munch J., 2013, Lecture Notes in Business Information Processing, V167, DOI DOI 10.1007/978-3-642-44930-7_9
   Olsson HH, 2013, LECT NOTES BUS INF P, V150, P79
   Olsson HH, 2014, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2014.75
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Papatheocharous E, 2014, J SOFTW-EVOL PROC, V26, P855, DOI 10.1002/smr.1664
   Ries E, 2011, The Lean Startup
   Robson C., 2011, REAL WORLD RES RESOU
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sauvola T, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P9, DOI 10.1109/SEAA.2015.63
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Steiber A, 2013, EUR J INNOV MANAG, V16, P243, DOI 10.1108/14601061311324566
   Tang D., 2010, P 16 ACM SIGKDD INT, P17, DOI [DOI 10.1145/1835804.1835810, 10.1145/1835804.1835810]
   Thomke S, 2001, HARVARD BUS REV, V79, P66
NR 45
TC 64
Z9 72
U1 0
U2 77
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2016
VL 77
BP 80
EP 91
DI 10.1016/j.infsof.2016.04.008
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ5UQ
UT WOS:000379271000006
DA 2024-07-18
ER

PT J
AU Yu, Y
   Wang, HM
   Yin, G
   Wang, T
AF Yu, Yue
   Wang, Huaimin
   Yin, Gang
   Wang, Tao
TI Reviewer recommendation for pull-requests in GitHub: What can we learn
   from code review and bug assignment?
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 21st Asia-Pacific Software Engineering Conference (APSEC)
CY DEC 01-04, 2014
CL Jeju, SOUTH KOREA
DE Pull-request; Reviewer recommendation; Social network analysis
ID SOFTWARE-DEVELOPMENT; ACCURATE; APACHE; OSS
AB Context: The pull-based model, widely used in distributed software development, offers an extremely low barrier to entry for potential contributors (anyone can submit of contributions to any project, through pull-requests). Meanwhile, the project's core team must act as guardians of code quality, ensuring that pull-requests are carefully inspected before being merged into the main development line. However, with pull-requests becoming increasingly popular, the need for qualified reviewers also increases. GITHus facilitates this, by enabling the crowd-sourcing of pull-request reviews to a larger community of coders than just the project's core team, as a part of their social coding philosophy. However, having access to more potential reviewers does not necessarily mean that it's easier to find the right ones (the "needle in a haystack" problem). If left unsupervised, this process may result in communication overhead and delayed pull-request processing.
   Objective: This study aims to investigate whether and how previous approaches used in bug triaging and code review can be adapted to recommending reviewers for pull-requests, and how to improve the recommendation performance.
   Method: First, we extend three typical approaches used in bug triaging and code review for the new challenge of assigning reviewers to pull-requests. Second, we analyze social relations between contributors and reviewers, and propose a novel approach by mining each project's comment networks (CNs). Finally, we combine the CNs with traditional approaches, and evaluate the effectiveness of all these methods on 84 GITHus projects through both quantitative and qualitative analysis.
   Results: We find that CN-based recommendation can achieve, by itself, similar performance as the traditional approaches. However, the mixed approaches can achieve significant improvements compared to using either of them independently.
   Conclusion: Our study confirms that traditional approaches to bug triaging and code review are feasible for pull-request reviewer recommendations on GITHus. Furthermore, their performance can be improved significantly by combining them with information extracted from prior social interactions between developers on GITHus. These results prompt for novel tools to support process automation in social coding platforms, that combine social (e.g., common interests among developers) and technical factors (e.g., developers' expertise). (C) 2016 Elsevier B.V. All rights reserved.
C1 [Yu, Yue; Wang, Huaimin; Yin, Gang; Wang, Tao] Natl Univ Def Technol, Coll Comp, Natl Lab Parallel & Distributed Proc, Changsha 410073, Hunan, Peoples R China.
C3 National University of Defense Technology - China
RP Yu, Y (corresponding author), Natl Univ Def Technol, Coll Comp, Natl Lab Parallel & Distributed Proc, Changsha 410073, Hunan, Peoples R China.
EM yuyue@nudt.edu.cn; hmwang@nudt.edu.cn; yingang@nudt.edu.com;
   taowang2005@nudt.edu.com
RI Yu, Yue/AAN-1852-2021
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Barr ET, 2012, LECT NOTES COMPUT SC, V7212, P316, DOI 10.1007/978-3-642-28872-2_22
   Bastian M., 2009, P INT AAAI C WEBL SO, V3, P361
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Bhattacharya P., 2010, Software Main- tenance (ICSM), 2010 IEEE International Conference on, P1
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Bilenko M., 2003, P 9 ACM SIGKDD INT C, P39, DOI DOI 10.1145/956750.956759
   Bird C., 2007, MSR 07, P6, DOI DOI 10.1109/MSR.2007.23
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   CANFORA G, 2006, P 2006 ACM S APPL CO, P1767, DOI DOI 10.1145/1141277.1141693
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dabbish L, 2013, IEEE SOFTWARE, V30, P37, DOI 10.1109/MS.2012.172
   Even S., 2011, Graph Algorithms
   Fagan M., 2002, Software Pioneers, P575
   Fraenkel J.R., 2009, DESIGN EVALUATE RES, V7th Eds
   GABRIEL KR, 1969, ANN MATH STAT, V40, P224, DOI 10.1214/aoms/1177697819
   Georgios G., 2014, INTERNAL REPORT
   Gharehyazie M, 2015, EMPIR SOFTW ENG, V20, P1318, DOI 10.1007/s10664-014-9332-x
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Jeong G., 2009, 2009006 ROSAEC MEMO
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   John M., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083000, DOI 10.1145/1082983.1083000]
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Konietschke F., 2011, PACKAGE NPARCOMP
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Lee JB, 2013, ASIA PAC SOFWR ENG, P1, DOI 10.1109/APSEC.2013.103
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thongtanunam Patanamon, 2014, P 7 INT WORKSHOP COO, P119
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Tsoumakas G., 2007, INT J DATA WAREHOUS, V3, P1, DOI DOI 10.4018/JDWM.2007070101
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Wu WJ, 2011, ASIA PAC SOFWR ENG, P389, DOI 10.1109/APSEC.2011.15
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Yu Y, 2014, SCI WORLD J, DOI 10.1155/2014/420841
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zobel J., 1998, SIGIR Forum, V32, P18, DOI 10.1145/281250.281256
NR 60
TC 145
Z9 162
U1 2
U2 35
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2016
VL 74
BP 204
EP 218
DI 10.1016/j.infsof.2016.01.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA DJ7BX
UT WOS:000374368000015
DA 2024-07-18
ER

PT J
AU Kosar, T
   Bohra, S
   Mernik, M
AF Kosar, Tomaz
   Bohra, Sudev
   Mernik, Marjan
TI Domain-Specific Languages: A Systematic Mapping Study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Domain-Specific Languages; Systematic Mapping Study; Systematic Review
ID MODEL; EVOLUTION; CODE
AB Context: In this study we report on a Systematic Mapping Study (SMS) for Domain-Specific Languages (DSLs), based on an automatic search including primary studies from journals, conferences, and workshops during the period from 2006 until 2012.
   Objective: The main objective of the described work was to perform an SMS on DSLs to better understand the DSL research field, identify research trends, and any possible open issues. The set of research questions was inspired by a DSL survey paper published in 2005.
   Method: We conducted a SMS over 5 stages: defining research questions, conducting the search, screening, classifying, and data extraction. Our SMS included 1153 candidate primary studies from the ISI Web of Science and ACM Digital Library, 390 primary studies were classified after screening.
   Results: This SMS discusses two main research questions: research space and trends/demographics of the literature within the field of DSLs. Both research questions are further subdivided into several research sub-questions. The results from the first research question clearly show that the DSL community focuses more on the development of new techniques/methods rather than investigating the integrations of DSLs with other software engineering processes or measuring the effectiveness of DSL approaches. Furthermore, there is a clear lack of evaluation research. Amongst different DSL development phases more attention is needed in regard to domain analysis, validation, and maintenance. The second research question revealed that the number of publications remains stable, and has not increased over the years. Top cited papers and venues are mentioned, as well as identifying the more active institutions carrying DSL research.
   Conclusion: The statistical findings regarding research questions paint an interesting picture about the mainstreams of the DSL community, as well as open issues where researchers can improve their research in their future work. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Kosar, Tomaz; Mernik, Marjan] Univ Maribor, Fac Elect Engn & Comp Sci, SLO-2000 Maribor, Slovenia.
   [Bohra, Sudev] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 University of Maribor; Carnegie Mellon University
RP Kosar, T (corresponding author), Univ Maribor, Fac Elect Engn & Comp Sci, Smetanova Ulica 17, SLO-2000 Maribor, Slovenia.
EM tomaz.kosar@um.si
RI Mernik, Marjan/A-1147-2008
OI Mernik, Marjan/0000-0002-2775-0667; Kosar, Tomaz/0000-0001-8714-9649
CR Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   [Anonymous], 2004, Software Factories
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   BARIIC A, 2012, P 8 INT C QUAL INF C, P342, DOI DOI 10.1109/QUATIC.2012.63
   Barisic A, 2013, FORMAL AND PRACTICAL ASPECTS OF DOMAIN-SPECIFIC LANGUAGES: RECENT DEVELOPMENTS, P386, DOI 10.4018/978-1-4666-2092-6.ch014
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Barreiros E, 2011, INT SYMP EMP SOFTWAR, P107, DOI 10.1109/ESEM.2011.19
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bryant BR, 2011, COMPUT SCI INF SYST, V8, P225, DOI 10.2298/CSIS110114012B
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Canovas Izquierdo Javier Luis, 2013, Cooperative Design, Visualization, and Engineering. 10th International Conference, CDVE 2013. Proceedings: LNCS 8091, P101, DOI 10.1007/978-3-642-40840-3_16
   Carvalho J, 2011, P 1 WORKSH EXP EMP S, P5
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Ceh I, 2011, COMPUT SCI INF SYST, V8, P317, DOI 10.2298/CSIS101231019C
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   Efftinge S., 2006, P WORKSH MOD S ECL S
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Erdweg S, 2015, COMPUT LANG SYST STR, V44, P24, DOI 10.1016/j.cl.2015.08.007
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Fowler M., 2010, Domain-specific languages
   Gabriel P., 2011, P 13 C IB SOFTW ENG, P149, DOI [10.48550/ARXIV.1109.6794, DOI 10.48550/ARXIV.1109.6794]
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Ghosh D, 2011, COMMUN ACM, V54, P44, DOI 10.1145/1965724.1965740
   Gray Jeff., 2007, HDB DYNAMIC SYSTEM M
   Hudak P., 1996, ACM COMPUT SURV, V28, P196, DOI [10.1145/242224.242477, DOI 10.1145/242224.242477]
   Kang Kyo C, 1990, Technical Report
   Karakoidas V, 2015, COMPUT LANG SYST STR, V41, P1, DOI 10.1016/j.cl.2015.01.001
   Kitchenham B., 2009, INF SOFTW TECHNOL, V51, P638
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kleppe A., 2008, Software Language Engineering: Creating Domain-Specific Languages using Metamodels
   Kosar T., PROTOCOL SYSTEMATIC
   Kosar T, 2008, INFORM SOFTWARE TECH, V50, P390, DOI 10.1016/j.infsof.2007.04.002
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   Mehmood A, 2013, INFORM SOFTWARE TECH, V55, P395, DOI 10.1016/j.infsof.2012.09.003
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mernik M, 2013, FORMAL AND PRACTICAL ASPECTS OF DOMAIN-SPECIFIC LANGUAGES: RECENT DEVELOPMENTS, P1, DOI 10.4018/978-1-4666-2092-6
   Mernik M, 2005, COMPUT LANG SYST STR, V31, P1, DOI 10.1016/j.cl.2004.02.001
   Mernik M, 2002, LECT NOTES COMPUT SC, V2304, P1
   Paige RF, 2014, SCI COMPUT PROGRAM, V96, P396, DOI 10.1016/j.scico.2014.05.007
   Parr Terence., 2010, LANGUAGE IMPLEMENTAT
   Petersen K., 2008, C EVALUATION ASSESSM, P71
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Prähofer H, 2013, COMPUT LANG SYST STR, V39, P67, DOI 10.1016/j.cl.2013.02.001
   Pretorius R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P342
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sprinkle J, 2009, IEEE SOFTWARE, V26, P15, DOI 10.1109/MS.2009.92
   Tairas R, 2015, SOFTW SYST MODEL, V14, P889, DOI 10.1007/s10270-013-0352-6
   Vacchi E, 2015, COMPUT LANG SYST STR, V43, P1, DOI 10.1016/j.cl.2015.02.001
   van der Meer A.P., 2014, THESIS
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   WARD MP, 1994, SOFTWARE-CONC TOOL, V15, P147
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   [No title captured]
NR 67
TC 128
Z9 138
U1 1
U2 32
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2016
VL 71
BP 77
EP 91
DI 10.1016/j.infsof.2015.11.001
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DB0RW
UT WOS:000368216200004
DA 2024-07-18
ER

PT J
AU Dittrich, Y
AF Dittrich, Yvonne
TI What does it mean to use a method? Towards a practice theory for
   software engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Cooperative and human aspects of software engineering; Software
   engineering methods; Practice theory
ID EMPIRICAL-RESEARCH
AB Context: Methods and processes, along with the tools to support them, are at the heart of software engineering as a discipline. However, as we all know, that often the use of the same method neither impacts software projects in a comparable manner nor the software they result in. What is lacking is an understanding of how methods affect software development.
   Objective: The article develops a set of concepts based on the practice-concept in philosophy of sociology as a base to describe software development as social practice, and develop an understanding of methods and their application that explains the heterogeneity in the outcome. Practice here is not understood as opposed to theory, but as a commonly agreed upon way of acting that is acknowledged by the team.
   Method: The article applies concepts from philosophy of sociology and social theory to describe software development and develops the concepts of method and method usage. The results and steps in the philosophical argumentation are exemplified using published empirical research.
   Results: The article develops a conceptual base for understanding software development as social and epistemic practices, and defines methods as practice patterns that need to be related to, and integrated in, an existing development practice. The application of a method is conceptualized as a development of practice. This practice is in certain aspects aligned with the description of the method, but a method always under-defines practice. The implication for research, industrial software development and teaching are indicated.
   Conclusion: The theoretical/philosophical concepts allow the explaining of heterogeneity in application of software engineering methods in line with empirical research results. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Dittrich, Yvonne] IT Univ Copenhagen, DK-2300 Copenhagen S, Denmark.
C3 IT University Copenhagen
RP Dittrich, Y (corresponding author), IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen S, Denmark.
EM ydi@itu.dk
OI Dittrich, Yvonne/0000-0003-4757-3394
CR Agar MichaelH., 1996, The Professional Stranger: An Informal Introduction to Ethnography, VSecond
   Alexander C., 1979, The timeless way of building, V1
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], 2014, P 7 INT WORKSH COOP
   [Anonymous], P IFIP WG 8 1 WORK C
   [Anonymous], THESIS
   [Anonymous], HAUPTSTROMUNGEN GEGE
   [Anonymous], ROLE ETHNOGRAP UNPUB
   [Anonymous], 2007, INT C GLOB SOFTW ENG
   [Anonymous], THESIS
   [Anonymous], THESIS
   [Anonymous], P 3 S HIST LOG WALT
   Barnes TJ, 2008, GEOFORUM, V39, P1542, DOI 10.1016/j.geoforum.2007.02.013
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Bosch J., 2014, CONTINUOUS SOFTWARE
   Button G., 1994, REQUIREMENTS ENG SOC, P217
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Dittrich Y, 2014, INFORM SOFTWARE TECH, V56, P1436, DOI 10.1016/j.infsof.2014.02.012
   Draxler S, 2014, IEEE T SOFTWARE ENG, V40, P1061, DOI 10.1109/TSE.2014.2354047
   Dreyfus H. L., 1991, BEING IN THE WORLD C
   Fitzgerald B, 1996, INFORM SYST J, V6, P3
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Fitzgerald B., 2002, Information systems development : methods in action
   Floyd Christiane, 1992, SOFTWARE DEV REALITY
   Gamma Erich., 1994, DESIGN PATTERNS
   Garfinkel Harold, 1967, STUDIES ETHNOMETHODO
   Gerson EM, 2008, COMPUT SUPP COOP WOR, P193, DOI 10.1007/978-1-84628-901-9_8
   GERSON EM, 1986, ACM T OFF INF SYST, V4, P257, DOI 10.1145/214427.214431
   Hanssen GK, 2014, INFORM SOFTWARE TECH, V56, P1421, DOI 10.1016/j.infsof.2014.06.013
   Henderson-Sellers B, 2008, LECT NOTES BUS INF P, V5, P1
   IEEE Computer Society, 2004, GUID SOFTW ENG BOD K
   Johansson C, 2000, LECT NOTES COMPUT SC, V1756, P171, DOI 10.1007/BFb0101420
   Kant I., 1991, Kant: Political Writings, P61
   Knorr KarinCetina., 2001, The Practice Turn in Contemporary Theory, P175
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Mathiassen L, 1996, METHOD ENGINEERING, P232
   Mi P., 1991, Proceedings. First International Conference on the Software Process. Manufacturing Complex Systems (Cat. No.91TH0418-4), P188
   Nicolini D., 2012, PRACTICE THEORY WORK
   Norbjerg J, 2002, SOCIAL THINKING-SOFTWARE PRACTICE, P205
   Päivärinta T, 2015, SCI COMPUT PROGRAM, V101, P124, DOI 10.1016/j.scico.2014.11.012
   Parnas DL, 2009, IEEE SOFTWARE, V26, P56, DOI 10.1109/MS.2009.184
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   Plonka L, 2015, INT J HUM-COMPUT ST, V73, P66, DOI 10.1016/j.ijhcs.2014.09.001
   Rönkkö K, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P204, DOI 10.1109/ISESE.2002.1166941
   Ronkko K., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P433, DOI 10.1007/s10606-005-9004-x
   Ronkko K., 2004, Proc. 8th Conf. Participatory Des.: Artful Integr.: Interweaving Media, V1, P112, DOI DOI 10.1145/1011870.1011884
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Schatzki T.R., 2001, PRACTICE TURN CONT T, V44
   Schatzki T. R., 1996, Social Practices
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   Schmidt Kjeld, 2014, COOP 2014, P427, DOI [10.1007/978-3-319-06498-7_26, DOI 10.1007/978-3-319-06498-7_26]
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Sharp H, 2009, INTERACT COMPUT, V21, P108, DOI 10.1016/j.intcom.2008.10.006
   STRAUSS A, 1985, SOCIOL QUART, V26, P1, DOI 10.1111/j.1533-8525.1985.tb00212.x
   Unphon H, 2010, J SYST SOFTWARE, V83, P2211, DOI 10.1016/j.jss.2010.06.043
   Wilson E.O., 1975, P1
NR 60
TC 31
Z9 31
U1 0
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2016
VL 70
BP 220
EP 231
DI 10.1016/j.infsof.2015.07.001
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DA3LC
UT WOS:000367697600016
DA 2024-07-18
ER

PT J
AU Nguyen, PH
   Kramer, M
   Klein, J
   Le Traon, Y
AF Nguyen, Phu H.
   Kramer, Max
   Klein, Jacques
   Le Traon, Yves
TI An extensive systematic review on the Model-Driven Development of secure
   systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Systematic review; Model-Driven Security; MDS; Model-Driven Engineering;
   MDE; Software security engineering
ID ACCESS-CONTROL POLICIES; DATA WAREHOUSES; INTERORGANIZATIONAL WORKFLOWS;
   WEB SERVICES; UML MODELS; SPECIFICATION; ARCHITECTURE; FRAMEWORK;
   METHODOLOGY; REQUIREMENTS
AB Context: Model-Driven Security (MDS) is as a specialised Model-Driven Engineering research area for supporting the development of secure systems. Over a decade of research on MDS has resulted in a large number of publications.
   Objective: To provide a detailed analysis of the state of the art in MDS, a systematic literature review (SLR) is essential.
   Method: We conducted an extensive SLR on MDS. Derived from our research questions, we designed a rigorous, extensive search and selection process to identify a set of primary MDS studies that is as complete as possible. Our three-pronged search process consists of automatic searching, manual searching, and snowballing. After discovering and considering more than thousand relevant papers, we identified, strictly selected, and reviewed 108 MDS publications.
   Results: The results of our SLR show the overall status of the key artefacts of MDS, and the identified primary MDS studies. For example, regarding security modelling artefact, we found that developing domain-specific languages plays a key role in many MDS approaches. The current limitations in each MDS artefact are pointed out and corresponding potential research directions are suggested. Moreover, we categorise the identified primary MDS studies into 5 significant MDS studies, and other emerging or less common MDS studies. Finally, some trend analyses of MDS research are given.
   Conclusion: Our results suggest the need for addressing multiple security concerns more systematically and simultaneously, for tool chains supporting the MDS development cycle, and for more empirical studies on the application of MDS methodologies. To the best of our knowledge, this SLR is the first in the field of Software Engineering that combines a snowballing strategy with database searching. This combination has delivered an extensive literature study on MDS. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Nguyen, Phu H.] Simula Res Lab, N-1364 Martin, TN, Norway.
   [Kramer, Max] Karlsruhe Inst Technol, D-76131 Karlsruhe, Germany.
   [Klein, Jacques; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-2721 Luxembourg, Luxembourg.
C3 Helmholtz Association; Karlsruhe Institute of Technology; University of
   Luxembourg
RP Nguyen, PH (corresponding author), Simula Res Lab, Martin Linges Vei 25, N-1364 Martin, TN, Norway.
EM phu@simula.no
RI LE TRAON, Yves/T-2911-2019; Nguyen, Phu H./P-7109-2019
OI Nguyen, Phu H./0000-0003-1773-8581; LE TRAON, Yves/0000-0002-1045-4861;
   Klein, Jacques/0000-0003-4052-475X
FU Fonds National de la Recherche (FNR); Luxembourg, under the MITER
   project [C10/IS/783852]; German Federal Ministry of Education and
   Research [BMBF 01BY1172]
FX This work is supported by the Fonds National de la Recherche (FNR),
   Luxembourg, under the MITER project C10/IS/783852 and the
   http://www.kastel.kit.edu/ KASTEL project by the German Federal Ministry
   of Education and Research under Grant BMBF 01BY1172.
CR Abramov J, 2012, LECT NOTES BUS INF P, V107, P126
   Abramov J, 2012, INFORM SOFTWARE TECH, V54, P1029, DOI 10.1016/j.infsof.2012.04.001
   Abramov J, 2012, COMPUT SECUR, V31, P299, DOI 10.1016/j.cose.2012.01.004
   Ahn GJ, 2007, SACMAT'07: PROCEEDINGS OF THE 12TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P215
   Alam M., 2006, P INT C AV REL SEC A, V8, P692, DOI [10.1109/ARES.2006.84, DOI 10.1109/ARES.2006.84]
   Alam M.Z., 2006, P 20 S MALAYSIAN CHE, P1
   Alam MM, 2004, INMIC 2004: 8TH INTERNATIONAL MULTITOPIC CONFERENCE, PROCEEDINGS, P498
   Alam M, 2007, LECT NOTES COMPUT SC, V4364, P278
   Alam M, 2006, LECT NOTES COMPUT SC, V4083, P142
   Almorsy Mohamed, 2014, 23rd Australian Software Engineering Conference (ASWEC 2014), P152, DOI 10.1109/ASWEC.2014.18
   Almorsy M., 2012, Proceedings, V4, P279
   Almorsy M, 2014, AUTOMAT SOFTW ENG, V21, P187, DOI 10.1007/s10515-013-0133-z
   [Anonymous], ADV MODEL DRIVEN SEC
   [Anonymous], 2012, SYNTHESIS LECT SOFTW
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Basin David, 2011, Foundations of Security Analysis and Design VI. FOSAD Tutorial Lectures: LNCS 6858, P101, DOI 10.1007/978-3-642-23082-0_4
   Basin D., 2011, P 16 ACM S ACCESS CO, P1, DOI DOI 10.1145/1998441.1998443
   Basin D., 2003, Proceedings 8th ACM Symposium on Access Control Models and Technologies (SACMAT '03), P100, DOI DOI 10.1145/775412.775425
   Basin D, 2007, LECT NOTES COMPUT SC, V4735, P420
   Basin D, 2014, IEEE T SOFTWARE ENG, V40, P324, DOI 10.1109/TSE.2013.2297116
   Basin D, 2009, INFORM SOFTWARE TECH, V51, P815, DOI 10.1016/j.infsof.2008.05.011
   Bertolino A., 2014, ENG SECURE FUTURE IN, P266, DOI [10.1007/978-3-319-07452-8_11, DOI 10.1007/978-3-319-07452-8_11]
   Best B, 2007, PROC INT CONF SOFTW, P581
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Blanco C, 2014, COMPUT J, V58, P2351, DOI [10.1093/comjnl/bxu070, DOI 10.1093/COMJNL/BXU070]
   Blanco C, 2014, J UNIVERS COMPUT SCI, V20, P79
   Blanco C, 2009, LECT NOTES COMPUT SC, V5691, P24, DOI 10.1007/978-3-642-03730-6_3
   Blanco C, 2009, J RES PRACT INF TECH, V41, P135
   Borek M, 2012, IEEE ANNU SOFTW ENG, P62, DOI 10.1109/SEW.2012.13
   Bouaziz R, 2013, IEEE ENABL TECHNOL, P231, DOI 10.1109/WETICE.2013.27
   Braga C, 2011, SOFTW SYST MODEL, V10, P395, DOI 10.1007/s10270-010-0156-x
   Breu R, 2005, LECT NOTES COMPUT SC, V3416, P122
   Breu Ruth, 2007, International Journal on Software Tools for Technology Transfer, V9, P457, DOI 10.1007/s10009-007-0045-y
   Breu R, 2008, LECT NOTES BUS INF P, V5, P59
   Brucker AD, 2006, LECT NOTES COMPUT SC, V4199, P306
   Burt CC, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P159, DOI 10.1109/EDOC.2003.1233846
   Busch M., 2014, ENG SECURE FUTURE IN, P119
   Clavel M, 2008, LECT NOTES COMPUT SC, V5095, P326, DOI 10.1007/978-3-540-69100-6_22
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Eby M, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P221
   Elrakaiby Yehia, 2014, Engineering Secure Software and Systems. 6th International Symposium, ESSoS 2014. Proceedings: LNCS 8364, P19, DOI 10.1007/978-3-319-04897-0_2
   Fernández-Medina E, 2004, LECT NOTES COMPUT SC, V3288, P217
   Fernández-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   Fernández-Medina E, 2004, LECT NOTES COMPUT SC, V3273, P380
   Fernández-Medina E, 2007, INFORM SYST, V32, P826, DOI 10.1016/j.is.2006.07.003
   Fink T, 2006, ELECTRON NOTES THEOR, V142, P161, DOI 10.1016/j.entcs.2004.12.045
   Fox J., 2005, P INT C ENG COMP BAS
   Gallino Juan Pedro Silva, 2012, Web Services and Formal Methods. 8th International Workshop (WS-FM 2011). Revised Selected Papers, P128, DOI 10.1007/978-3-642-29834-9_10
   Garcia de Dios M.A., 2014, ENG SECURE FUTURE IN, V8431, P97
   Georg G, 2009, INFORM SOFTWARE TECH, V51, P846, DOI 10.1016/j.infsof.2008.05.004
   Gilmore S, 2011, SOFTW SYST MODEL, V10, P287, DOI 10.1007/s10270-010-0155-y
   Hafner M, 2005, LECT NOTES COMPUT SC, V3713, P39
   Hafner M., 2009, SECURITY ENG SERVICE, P159, DOI [10.1007/978-3-540-79539-1_7, DOI 10.1007/978-3-540-79539-1_7]
   Hafner M, 2008, LECT NOTES COMPUT SC, V5002, P132
   Hafner M, 2006, LECT NOTES COMPUT SC, V4199, P275
   Hoisl B., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P673, DOI 10.1109/ARES.2011.105
   Hoisl B, 2014, SOFTW SYST MODEL, V13, P513, DOI 10.1007/s10270-012-0263-y
   Horcas JM, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P138
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jensen J., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P704, DOI 10.1109/ARES.2011.110
   Jiirjens Jan, 2007, International Journal on Software Tools for Technology Transfer, V9, P527, DOI 10.1007/s10009-007-0048-8
   Jürjens J, 2006, LECT NOTES COMPUT SC, V4085, P600
   Jürjens J, 2011, LECT NOTES COMPUT SC, V6698, P52, DOI 10.1007/978-3-642-21470-7_5
   Jürjens J, 2005, LECT NOTES COMPUT SC, V3655, P42
   Jürjens J, 2005, LECT NOTES COMPUT SC, V3713, P142, DOI 10.1007/11557432_11
   Jurjens J., 2002, UML 2002  The Unified Modeling Language, V2460, P1
   Jurjens J., 2002, Proceedings 2002 ACM Symposium on Applied Computing (SAC '02), P1026
   Kaddani A, 2014, INT CONF MULTIMED, P1235, DOI 10.1109/ICMCS.2014.6911301
   Kasal K., 2011, P 44 HAW INT C SYST, P1, DOI DOI 10.1109/HICSS.2011.310
   Katt B., 2013, Formal Methods for Components and Objects; Lecture Notes in Computer Science, V7542, P169
   Khwaja AA, 2002, INT J SOFTW ENG KNOW, V12, P581, DOI 10.1142/S0218194002001062
   Kim DK, 2006, P INT COMP SOFTW APP, P317
   Kim DK, 2004, LECT NOTES COMPUT SC, V2984, P180
   Kim S, 2011, J SYST SOFTWARE, V84, P2035, DOI 10.1016/j.jss.2011.03.084
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   Memon M, 2014, SOFTW SYST MODEL, V13, P549, DOI 10.1007/s10270-012-0268-6
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Menzel M., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P146, DOI 10.1109/SCC.2010.63
   Menzel Michael, 2010, 2010 IEEE International Conference on Web Services (ICWS), P243, DOI 10.1109/ICWS.2010.25
   Menzel M, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P251, DOI 10.1109/SCC.2009.57
   Moebius N., 2009, INT J ADV SOFTWARE, V1, P59
   Moebius N., 2012, P 1 INT WORKSH MOD D, P1, DOI DOI 10.1145/2422498.2422507
   Moebius N, 2010, LECT NOTES COMPUT SC, V5965, P166, DOI 10.1007/978-3-642-11747-3_13
   Moebius N, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P68, DOI 10.1109/IWSESS.2009.5068461
   Moebius N, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P841, DOI 10.1109/ARES.2009.22
   Moebius N, 2009, IEEE AUS SOFT ENGR, P44, DOI 10.1109/ASWEC.2009.15
   Moral-García S, 2014, COMPUT STAND INTER, V36, P748, DOI 10.1016/j.csi.2013.12.009
   Morin B., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering - ASE, V10, P205, DOI [10.1145/1858996.1859040, DOI 10.1145/1858996.1859040]
   Mouelhi T, 2008, LECT NOTES COMPUT SC, V5301, P537, DOI 10.1007/978-3-540-87875-9_38
   Mouheb D, 2010, STUD COMPUT INTELL, V296, P197, DOI 10.1007/978-3-642-13273-5_13
   Mouheb D., 2009, P SOC MED TOUR S SOM
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Mouratidis H, 2006, LECT NOTES COMPUT SC, V4001, P48, DOI 10.1007/11767138_5
   Mouratidis H, 2009, LECT NOTES COMPUT SC, V5565, P231, DOI 10.1007/978-3-642-02144-2_21
   Nakamura Y., 2005, P INT C SERV COMP
   Neisse R, 2013, ANN CONF PRIV SECUR, P169, DOI 10.1109/PST.2013.6596051
   Nguyen P.H., 2013, P 12 ANN INT C ASP O, P61, DOI DOI 10.1145/24514362451445
   Nguyen P.H., 2013, P 20 AS PAC SOFTW EN
   Nguyen PH, 2014, LECT NOTES COMPUT SC, V8400, P109, DOI 10.1007/978-3-642-55099-7_4
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   Pavlich-Mariscal JA, 2010, COMPUT SECUR, V29, P350, DOI 10.1016/j.cose.2009.11.005
   Ray I, 2004, INFORM SOFTWARE TECH, V46, P575, DOI 10.1016/j.infsof.2003.10.007
   Sánchez O, 2009, J UNIVERS COMPUT SCI, V15, P2957
   Sánchez P, 2010, INFORM SOFTWARE TECH, V52, P249, DOI 10.1016/j.infsof.2009.09.001
   Satoh F, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P513
   Satoh F, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P585
   Schefer-Wenzl S, 2014, INFORM SOFTWARE TECH, V56, P1289, DOI 10.1016/j.infsof.2014.04.010
   SCHNJAKIN M, 2009, P 2009 ACM WORKSH SE, P13, DOI DOI 10.1145/1655121.1655126
   Simmonds D, 2005, NINTH IEEE INTERNATIONAL EDOC ENTERPRISE COMPUTING CONFERENCE, PROCEEDINGS, P119, DOI 10.1109/EDOC.2005.5
   Sohr K, 2008, ANN COMPUT SECURITY, P257, DOI 10.1109/ACSAC.2008.35
   Soler E, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P294
   Soler E, 2009, J UNIVERS COMPUT SCI, V15, P1607
   Trujillo J, 2009, COMPUT STAND INTER, V31, P969, DOI 10.1016/j.csi.2008.09.040
   Trujillo J, 2009, INFORM SOFTWARE TECH, V51, P1033, DOI 10.1016/j.infsof.2008.12.003
   Uzunov AV, 2012, J UNIVERS COMPUT SCI, V18, P2920
   Vela B, 2013, INFORM SOFTWARE TECH, V55, P1651, DOI 10.1016/j.infsof.2013.03.003
   Vela B., 2010, P 2010 EDBT ICDT WOR
   Vela B, 2012, DECIS SUPPORT SYST, V52, P899, DOI 10.1016/j.dss.2011.11.008
   Velal B, 2006, SIGMOD REC, V35, P22, DOI 10.1145/1168092.1168095
   Villarroel R, 2006, J RES PRACT INF TECH, V38, P31
   Wada H., 2010, WEB SERVICES RES EME, P358
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Wolter C, 2009, J SYST ARCHITECT, V55, P211, DOI 10.1016/j.sysarc.2008.10.002
   Xiao L, 2009, INFORM SOFTWARE TECH, V51, P933, DOI 10.1016/j.infsof.2008.05.005
   Zhu ZJ, 2009, INFORM SOFTWARE TECH, V51, P865, DOI 10.1016/j.infsof.2008.05.007
NR 127
TC 52
Z9 56
U1 0
U2 30
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2015
VL 68
BP 62
EP 81
DI 10.1016/j.infsof.2015.08.006
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT8OP
UT WOS:000363076200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pernstål, J
   Gorschek, T
   Feldt, R
   Florén, D
AF Pernstal, J.
   Gorschek, T.
   Feldt, R.
   Floren, D.
TI Requirements communication and balancing in large-scale
   software-intensive product development
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 40th Euromicro Conference on Software Engineering and Advanced
   Applications (SEAA)
CY AUG 27-29, 2014
CL Univ Verona, Dept Comp Sci, Verona, ITALY
SP Elsevier Informat & Software Technol Journal, EDALab s r l, Euromicro
HO Univ Verona, Dept Comp Sci
DE Organizational management and coordination; Requirements engineering;
   Software engineering; Automotive industry; Case study; Lean and agile
   product development
ID COORDINATION; IMPROVEMENT; CHALLENGES; BUSINESS; DESIGN; GAP
AB Context: Several industries developing products on a large-scale are facing major challenges as their products are becoming more and more software-intensive. Whereas software was once considered a detail to be bundled, it has since become an intricate and interdependent part of most products. The advancement of software increases the uncertainty and the interdependencies between development tasks and artifacts. A key success factor is good requirements engineering (RE), and in particular, the challenges of effectively and efficiently coordinating and communicating requirements.
   Objective: In this work we present a lightweight RE framework and demonstrate and evaluate its industrial applicability in response to the needs of a Swedish automotive company for improving specific problems in inter-departmental requirements coordination and communication in large-scale development of software-intensive systems.
   Method: A case study approach and a dynamic validation were used to develop and evaluate the framework in close collaboration with our industrial partner, involving three real-life cases in an ongoing car project. Experience and feedback were collected through observations when applying the framework and from 10 senior industry professionals in a questionnaire and in-depth follow-up interviews.
   Results: The experience and feedback about using the framework revealed that it is relevant and applicable for the industry as well as a useful and efficient way to resolve real problems in coordinating and communicating requirements identified at the case company. However, other concerns, such as accessibility to necessary resources and competences in the early development phases, were identified when using the method, which allowed for earlier pre-emptive action to be taken.
   Conclusion: Overall, the experience from using the framework and the positive feedback from industry professionals indicated a feasible framework that is applicable in the industry for improving problems related to coordination and communication of requirements. Based on the promising results, our industrial partner has decided upon further validations of the framework in a large-scale pilot program. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Pernstal, J.; Floren, D.] Volvo Car Corp, SE-40531 Gothenburg, Sweden.
   [Gorschek, T.; Feldt, R.] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
C3 Volvo; Blekinge Institute Technology
RP Pernstål, J (corresponding author), Volvo Car Corp, SE-40531 Gothenburg, Sweden.
EM jpernsta@volvocars.com; tony.gorschek@bth.se; robert.feldt@bth.se;
   dfloren@volvocars.com
CR ABG, 1997, V MOD DEV STAND IT S
   [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   ADLER PS, 1995, ORGAN SCI, V6, P147, DOI 10.1287/orsc.6.2.147
   Almefelt L., 2006, RES ENG DES, V17, P3
   [Anonymous], 1998, 15504 ISOIEC
   [Anonymous], P 25 INT C SOFTW ENG
   [Anonymous], 2008, 15288 ISOIEC
   [Anonymous], 2012, 142294 ISO
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 1998, Software process improvement
   [Anonymous], 8301998 IEEE
   [Anonymous], 1997, 12207 ISOIEC
   Broy M., 2007, P IEEE, P95
   Charfi F., 2004, P 2004 IEEE INT C IN
   Clark K.B., 1991, PRODUCT DEV PERFORMA
   CMMI, 2010, CMUSEI2010TR033 CMMI
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cooper RobertG., 2001, Winning at New Products: Accelerating the Process from Idea to Launch, V3rd
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dannenberg J., 2004, MERCER MANAGEMENT J, V17, P88
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fricker S, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2010.44
   Galbraith J.R., 1973, Designing complex organizations
   Gorschek T, 2003, P 9 INT WORKSH REQ E, P101
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gulke T., 2012, REQUIREMENTS ENG FDN
   HARDY CJ, 1995, INFORM SOFTWARE TECH, V37, P467, DOI 10.1016/0950-5849(95)97291-F
   Ivarsson M, 2012, INT J SOFTW ENG KNOW, V22, P17, DOI 10.1142/S0218194012500027
   Karlsson C, 1996, INT J OPER PROD MAN, V16, P24, DOI 10.1108/01443579610109820
   Konrad S, 2008, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2008.31
   Kotonya G., 1998, Requirements engineering: processes and techniques
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kuilboer JP, 2000, INFORM SOFTWARE TECH, V42, P27, DOI 10.1016/S0950-5849(99)00054-3
   Lakemond Nicolette, 2007, International Journal of Technology Intelligence and Planning, V3, P317, DOI 10.1504/IJTIP.2007.016303
   Maiden N, 2005, IEEE SOFTWARE, V22, P104, DOI 10.1109/MS.2005.113
   Middleton Peter, 2007, International Journal of Productivity and Quality Management, V2, P387, DOI 10.1504/IJPQM.2007.013334
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Morgan J., 2020, The Toyota Product Development System: integrating People, Process, and Technology
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Object Management Group OMG, 2010, OMG UML 2 3 INFR
   Object Management Group OMG, 2010, OMG UML VERS 2 3 INF
   Parnas D.L., 1972, Communications of the ACM, V15
   Pernstål J, 2013, J SYST SOFTWARE, V86, P2797, DOI 10.1016/j.jss.2013.06.035
   Pernstål J, 2012, INT J SOFTW ENG KNOW, V22, P965, DOI 10.1142/S0218194012500271
   Pernstal J., 2013, COMMUNICATION PROBLE
   Pernstål J, 2013, LECT NOTES COMPUT SC, V7983, P93, DOI 10.1007/978-3-642-39259-7_10
   Peters A., 1999, THE TQM MAGAZINE, V11, P172
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Potter Ben., 1996, INTRO FORMAL SPECIFI, V2nd
   Prasad KV, 2010, P IEEE, V98, P510, DOI 10.1109/JPROC.2010.2041835
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Reich BH, 1996, MIS QUART, V20, P55, DOI 10.2307/249542
   Robson C., 2002, Real World Research, V2nd
   Rudolf H, 2010, LECT NOTES BUS INF P, V65, P104, DOI 10.1007/978-3-642-16416-3_15
   Savolainen J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P289, DOI 10.1109/RE.2010.41
   Schwaber K., 2001, Agile software development with scrum
   Sekimura T, 2006, FUJITSU SCI TECH J, V42, P407
   Shook J, 2009, MIT SLOAN MANAGE REV, V50, P30
   Sobek D.K., 2008, UNDERSTANDING A3 THI
   Sobek DK, 1999, SLOAN MANAGE REV, V40, P67
   Sommerville I, 2001, Software Engineering
   Thompson J., 2017, Organizations in action
   Unterkalmsteiner M., 2013, ACM T SOFTW ENG METH, DOI [http://dx.doi.org/10.1145/0000000.0000000, DOI 10.1145/0000000.0000000]
   Vandevelde A, 2003, INT J OPER PROD MAN, V23, P1326, DOI 10.1108/01443570310501871
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Weber M, 2003, IEEE SOFTWARE, V20, P16, DOI 10.1109/MS.2003.1159025
   Wheelwright S.C., 1994, INT MARKET REV, V11, P32
NR 69
TC 10
Z9 13
U1 3
U2 53
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2015
VL 67
BP 44
EP 64
DI 10.1016/j.infsof.2015.06.007
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA CT2AO
UT WOS:000362604600004
DA 2024-07-18
ER

PT J
AU Kupiainen, E
   Mäntylä, MV
   Itkonen, J
AF Kupiainen, Eetu
   Mantyla, Mika V.
   Itkonen, Juha
TI Using metrics in Agile and Lean Software Development - A systematic
   literature review of industrial studies
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Review
DE Agile; Lean; Metrics; Measurement; Systematic literature review;
   Software engineering
ID PLAN-DRIVEN
AB Context: Software industry has widely adopted Agile software development methods. Agile literature proposes a few key metrics but little is known of the actual metrics use in Agile teams. Objective: The objective of this paper is to increase knowledge of the reasons for and effects of using metrics in industrial Agile development. We focus on the metrics that Agile teams use, rather than the ones used from outside by software engineering researchers. In addition, we analyse the influence of the used metrics.
   Method: This paper presents a systematic literature review (SLR) on using metrics in industrial Agile software development. We identified 774 papers, which we reduced to 30 primary studies through our paper selection process.
   Results: The results indicate that the reasons for and the effects of using metrics are focused on the following areas: sprint planning, progress tracking, software quality measurement, fixing software process problems, and motivating people. Additionally, we show that although Agile teams use many metrics suggested in the Agile literature, they also use many custom metrics. Finally, the most influential metrics in the primary studies are Velocity and Effort estimate.
   Conclusion: The use of metrics in Agile software development is similar to Traditional software development. Projects and sprints need to be planned and tracked. Quality needs to be measured. Problems in the process need to be identified and fixed. Future work should focus on metrics that had high importance but low prevalence in our study, as they can offer the largest impact to the software industry. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Kupiainen, Eetu; Mantyla, Mika V.; Itkonen, Juha] Aalto Univ, Dept Comp Sci & Engn, Espoo, Finland.
   [Mantyla, Mika V.] Univ Oulu, Dept Informat Proc Sci, SF-90100 Oulu, Finland.
C3 Aalto University; University of Oulu
RP Mäntylä, MV (corresponding author), Aalto Univ, Dept Comp Sci & Engn, Espoo, Finland.
EM eetu.kupiainen@gmail.com; mika.mantyla@oulu.fi; juha.itkonen@aalto.fl
RI Mäntylä, Mika V/E-7644-2012; Itkonen, Juha/E-8360-2012
OI Itkonen, Juha/0000-0001-9084-495X; Mantyla, Mika/0000-0002-2841-5879
FU EU FP7 Grant [318082 - UQASAR]
FX This work has been partially funded by EU FP7 Grant 318082 - UQASAR
   (http://www.uqasar.eu/). The authors thank the individuals of the UQASAR
   project and the participants and reviewers of WeTSOM2014 workshop, who
   provided comments on the earlier version of this paper.
CR Abbas N., 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), P77, DOI 10.1109/AGILE.2010.16
   Anderson DJ, 2005, AGILE 2005, Proceedings, P193, DOI 10.1109/ADC.2005.42
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2020, KANB BOARD
   [Anonymous], 2004, XP Ser
   [Anonymous], 2002, AGILE SOFTWARE DEV S
   Beck K., 2007, Manifesto for Agile Software Development
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Cheng TH, 2009, 2009 ICSE WORKSHOP ON SOFTWARE DEVELOPMENT GOVERNANCE, P29, DOI 10.1109/SDG.2009.5071334
   CMMI Product Team, 2010, Technical Report CMU/SEI-2010-TR-033
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dubinsky Y, 2005, AGILE 2005, Proceedings, P12, DOI 10.1109/ADC.2005.8
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Elssamadisy A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P617, DOI 10.1109/ICSE.2002.1008006
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   GOLDRATT EM, 2006, HAYSTACK SYNDROME SI
   GRADY RB, 1994, COMPUTER, V27, P18, DOI 10.1109/2.312034
   Green P., 2011, P ANN HAW INT C SYST
   Greening D.R., 2010, P ANN HAW INT C SYST
   Hartmann D., 2006, AGILE 2006
   Haugen NC, 2006, AGILE 2006, PROCEEDINGS, P23, DOI 10.1109/AGILE.2006.16
   Hodgetts P, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P106
   Hodgkins P, 2007, AGILE 2007, PROCEEDINGS, P194, DOI 10.1109/AGILE.2007.11
   Hong N, 2010, ASIA PAC SOFWR ENG, P310, DOI 10.1109/APSEC.2010.43
   ISO/IEC, 2011, 250102011 ISOIEC PEC
   ITKONEN J, 2005, P INT C AG, P201
   Jakobsen C. R., 2011, Proceedings of the 2011 Agile Conference, P168, DOI 10.1109/AGILE.2011.11
   Janus Andre, 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P9, DOI 10.1109/WETSoM.2012.6226998
   Jones C., 2008, APPL SOFTWARE MEASUR, V3
   Keaveney S, 2006, ECIS 2006 P
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Kupiainen E, 2014, INT WORKSH EM TRENDS, P23
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Mahnic V, 2012, ELEKTRON ELEKTROTECH, V18, P73, DOI 10.5755/j01.eee.18.8.2630
   dos Santos PSM, 2013, LECT NOTES BUS INF P, V149, P121
   Middleton Peter, 2007, International Journal of Productivity and Quality Management, V2, P387, DOI 10.1504/IJPQM.2007.013334
   Mujtaba Shahid, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P139, DOI 10.1109/ASWEC.2010.37
   Patel C, 2006, P 39 ANN HAW INT C S, V1, p10c
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K., MODERN SOFTWARE ENG
   Petersen K, 2012, LECT NOTES BUS INF P, V111, P108
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Polk R., 2011, Proceedings of the 2011 Agile Conference, P263, DOI 10.1109/AGILE.2011.10
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Bellini CGP, 2008, INT J SOFTW ENG KNOW, V18, P37, DOI 10.1142/S021819400800357X
   PULFORD K, 1995, QUANTITATIVE APPROAC
   Purao S, 2003, ACM COMPUT SURV, V35, P191, DOI 10.1145/857076.857090
   RadjenoviC Danijel, 2013, INF SOFTW TECHNOL, V55, P1397
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Seber GAF, 2002, ESTIMATION ANIMAL AB
   Seikola M, 2011, EUROMICRO CONF PROC, P321, DOI 10.1109/SEAA.2011.56
   Staron Miroslaw, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P3, DOI 10.1007/978-3-642-21843-9_3
   Staron M, 2010, INFORM SOFTWARE TECH, V52, P1069, DOI 10.1016/j.infsof.2010.05.005
   Sutherland J., 2009, HR Wallingford Report TR173, P1
   Talby D, 2006, AGILE 2006, PROCEEDINGS, P100, DOI 10.1109/AGILE.2006.45
   Talby D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE DEVELOPMENT GOVERNANCE, P40, DOI 10.1109/SDG.2009.5071336
   Trapa V, 2006, AGILE 2006, Proceedings, P243, DOI 10.1109/AGILE.2006.49
   Trimble J, 2013, P ANN HICSS, P4826, DOI 10.1109/HICSS.2013.237
   VersionOne, 2012, 7 ANN STAT AG SURV
   Womack J., 2006, The machine that changed the world
   Zuse Horst., 1998, A framework of software measurement
   [No title captured]
NR 68
TC 109
Z9 123
U1 7
U2 98
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 143
EP 163
DI 10.1016/j.infsof.2015.02.005
PG 21
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CG3KL
UT WOS:000353179000008
DA 2024-07-18
ER

PT J
AU Blanco, C
   de Guzmán, IGR
   Fernández-Medina, E
   Trujillo, J
AF Blanco, Carlos
   Garcia-Rodriguez de Guzman, Ignacio
   Fernandez-Medina, Eduardo
   Trujillo, Juan
TI An architecture for automatically developing secure OLAP applications
   from models
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Security; Confidentiality; Model driven development; Data warehouse;
   OLAP; SQL Server Analysis Services
ID DATA WAREHOUSES; ACCESS-CONTROL
AB Context: Decision makers query enterprise information stored in Data Warehouses (DW) by using tools (such as On-Line Analytical Processing (OLAP) tools) which use specific views or cubes from the corporate DW or Data Marts, based on the multidimensional modeling. Since the information managed is critical, security constraints have to be correctly established in order to avoid unauthorized accesses.
   Objective: In previous work we have defined a Model-Driven based approach for developing a secure DWs repository by following a relational approach. Nevertheless, is also important to define security constraints in the metadata layer that connects the DWs repository with the OLAP tools, that is, over the same multidimensional structures that final users manage. This paper defines a proposal to develop secure OLAP applications and incorporates it into our previous approach.
   Method: Our proposal is composed of models and transformations. Our models have been defined using the extension capabilities from UML (conceptual model) and extending the OLAP package of CWM with security (logical model). Transformations have been defined by using a graphical notation and implemented into QVT and MOFScript. Finally, this proposal has been evaluated through case studies.
   Results: A complete MDA architecture for developing secure OLAP applications. The main contributions of this paper are: improvement of a UML profile for conceptual modeling; definition of a logical metamodel for OLAP applications; and definition and implementation of transformations from conceptual to logical models, and from logical models to the secure implementation into a specific OLAP tool (SSAS).
   Conclusion: Our proposal allows us to develop secure OLAP applications, providing a complete MDA architecture composed of several security models and automatic transformations towards the final secure implementation. Security aspects are early identified and fitted into a most robust solution that provides us a better information assurance and a saving of time in maintenance. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Blanco, Carlos] Univ Cantabria, Fac Sci, Dep Math Stat & Comp Sci, GSyA Res Grp, Santander 39071, Spain.
   [Garcia-Rodriguez de Guzman, Ignacio] Univ Castilla La Mancha, Escuela Super Informat, Inst Informat Technol & Syst, Dept Informat Technol & Syst,Alarcos Res Grp, E-13071 Ciudad Real, Spain.
   [Fernandez-Medina, Eduardo] Univ Castilla La Mancha, Escuela Super Informat, Inst Informat Technol & Syst, Dept Informat Technol & Syst,GSyA Res Grp, E-13071 Ciudad Real, Spain.
   [Trujillo, Juan] Univ Alicante, Fac Informat, Dept Informat Languages & Syst, Lucentia Res Grp, Alicante 03690, Spain.
C3 Universidad de Cantabria; Universidad de Castilla-La Mancha; Universidad
   de Castilla-La Mancha; Universitat d'Alacant
RP Blanco, C (corresponding author), Univ Cantabria, Fac Sci, Dep Math Stat & Comp Sci, GSyA Res Grp, Av Castros S-N, Santander 39071, Spain.
EM Carlos.Blanco@unican.es; Ignacio.GRodriguez@uclm.es;
   Eduardo.Fdezmedina@uclm.es; jtrujillo@dlsi.ua.es
RI Trujillo, Juan/L-7079-2014; de Guzmán, Ignacio
   García-Rodríguez/N-4489-2014; Rosado, David G./L-8221-2014;
   Fernandez-Medina, Eduardo/D-4648-2011; Blanco, Carlos/H-6911-2012
OI Trujillo, Juan/0000-0003-0139-6724; de Guzmán, Ignacio
   García-Rodríguez/0000-0002-0038-0942; Rosado, David
   G./0000-0003-4613-5501; Fernandez-Medina, Eduardo/0000-0003-2553-9320;
   Blanco, Carlos/0000-0001-9001-0904
FU Ministerio de Economia y Competitividad [TIN2012-36904,
   TIN2012-37493-C01, TIN2012-37493-C03]; Fondo Europeo de Desarrollo
   Regional FEDER; Consejeria de Educaciln, Ciencia y Cultura de la Junta
   de Comunidades de Castilla La Mancha [PEII11-037-7035, PEII11-
   0399-9449]
FX This research is part of the following Projects: SIGMA-CC
   (TIN2012-36904), GEODAS-BC (TIN2012-37493-C01) and GEODAS-BI
   (TIN2012-37493-C03) funded by the Ministerio de Economia y
   Competitividad and Fondo Europeo de Desarrollo Regional FEDER. SERENIDAD
   (PEII11-037-7035) and MOTERO (PEII11- 0399-9449) funded by the
   Consejeria de Educaciln, Ciencia y Cultura de la Junta de Comunidades de
   Castilla La Mancha, and Fondo Europeo de Desarrollo Regional FEDER.
CR Abraham A., 2011, EVALUATION APPROACHE, V191, P9
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Blanco Carlos, 2008, International Journal of Business Intelligence and Data Mining, V3, P255, DOI 10.1504/IJBIDM.2008.022136
   Cuzzocrea A., 2009, PRIVACY PRESERVING O, P1575
   Fernández-Medina E, 2007, EUR J INFORM SYST, V16, P374, DOI 10.1057/palgrave.ejis.3000687
   Fernández-Medina E, 2007, INFORM SYST, V32, P826, DOI 10.1016/j.is.2006.07.003
   Fernández-Medina E, 2006, DECIS SUPPORT SYST, V42, P1270, DOI 10.1016/j.dss.2005.10.008
   Fernández-Medina E, 2009, INFORM SOFTWARE TECH, V51, P809, DOI 10.1016/j.infsof.2008.05.010
   Fischer-Hubner S., 2012, VERIFICATION SECURIT, V7449, P207
   Inmon W., 2008, SERIES DATA MANAGEME
   Jurjens J., 2011, TECHNICAL REPORTS CO
   Jurjens Jan., 2004, SECURE SYSTEMS DEV U
   Nunes F.J.B., 2010, IEEE C SERV, V0, P48
   OMG, 2011, QVT MET OBJ FAC 2 0
   OMG, 2003, CWM COMM WAR MET VER
   OMG, 2003, MDA MOD DRIV ARCH GU
   PRIEBE T, 2001, 20 INT C CONC MOD ER
   Rosenthal A., 2000, 2 INT WORKSH DES MAN, V28, P81
   Saltor F., 2002, BUILDING SECURE DATA
   Soler E, 2008, COMPUT STAND INTER, V30, P341, DOI 10.1016/j.csi.2008.03.002
   Soler E, 2009, J UNIVERS COMPUT SCI, V15, P1607
   Thuraisingham Bhavani, 2007, International Journal of Business Intelligence and Data Mining, V2, P367, DOI 10.1504/IJBIDM.2007.016379
   Trujillo J, 2009, COMPUT STAND INTER, V31, P969, DOI 10.1016/j.csi.2008.09.040
   Trujillo J, 2009, INFORM SOFTWARE TECH, V51, P1033, DOI 10.1016/j.infsof.2008.12.003
   Weippl E., 2001, WORKSH SEC DISTR DAT
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
NR 26
TC 5
Z9 5
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 1
EP 16
DI 10.1016/j.infsof.2014.10.008
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CB1ZT
UT WOS:000349427200001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Garousi, G
   Garousi-Yusifoglu, V
   Ruhe, G
   Zhi, JJ
   Moussavi, M
   Smith, B
AF Garousi, Golara
   Garousi-Yusifoglu, Vahid
   Ruhe, Guenther
   Zhi, Junji
   Moussavi, Mahmoud
   Smith, Brian
TI Usage and usefulness of technical software documentation: An industrial
   case study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 17th International Conference on Evaluation and Assessment in software
   Engineering
CY APR 14-16, 2013
CL Porto de Galinhas, BRAZIL
DE Technical software documentation; Usage; Usefulness; Industrial context;
   Case study
ID MAINTENANCE; STATE; UML
AB Context: Software documentation is an integral part of any software development process. However, software practitioners are often concerned about the value, degree of usage and usefulness of documentation during development and maintenance.
   Objective: Motivated by the needs of NovAtel Inc. (NovAtel), a world-leading company developing software systems in support of global navigation satellite systems, and based on the results of a former systematic mapping study, we aimed at better understanding of the usage and the usefulness of various technical documents during software development and maintenance.
   Method: We utilized the results of a former systematic mapping study and performed an industrial case study at NovAtel. From the joint definition of the analysis goals, the research method incorporates qualitative and quantitative analysis of 55 documents (design, test and process related) and 1630 of their revisions. In addition, we conducted a survey on the usage and usefulness of documents. A total of 25 staff members from the industrial partner, all having a medium to high level of experience, participated in the survey.
   Results: In the context of the case study, a number of findings were derived. They include that (1) technical documentation was consulted least frequently for maintenance purpose and most frequently as an information source for development, (2) source code was considered most frequently as the preferred information source during software maintenance, (3) there is no significant difference between the usage of various documentation types during both development and maintenance, and (4) initial hypotheses stating that up-to-date information, accuracy and preciseness have the highest impact on usefulness of technical documentation.
   Conclusions: It is concluded that the usage of documentation differs for various purposes and it depends on the type of the information needs as well as the tasks to be completed (e.g., development and maintenance). The results have been confirmed to be helpful for the company under study, and the firm is currently implementing some of the recommendations given. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Garousi, Golara] GeoLOG Syst Ltd, Calgary, AB, Canada.
   [Garousi, Golara; Garousi-Yusifoglu, Vahid; Ruhe, Guenther; Moussavi, Mahmoud] Univ Calgary, Schulich Sch Engn, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
   [Garousi-Yusifoglu, Vahid] Atilim Univ, Dept Software Engn, Syst & Software Qual Engn Res Grp SySoQual, Ankara, Turkey.
   [Ruhe, Guenther] Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
   [Zhi, Junji] Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
   [Smith, Brian] NovAtel Inc, Calgary, AB, Canada.
C3 University of Calgary; Atilim University; University of Calgary;
   University of Toronto; Hexagon AB
RP Garousi-Yusifoglu, V (corresponding author), Atilim Univ, Dept Software Engn, Ankara, Turkey.
OI Garousi, Vahid/0000-0001-6590-7576
FU NSERC CRD [CRDPJ414157-11]; NSERC ENGAGE [EGP-413039]; Atilim
   University; Visiting Scientist Fellowship Program of the Scientific and
   Technological Research Council of Turkey (TUBITAK) [2221]
FX First of all, we would like to sincerely thank all the software
   engineers at NovAtel who participated in the survey and for their
   continuous support during this project. This work was supported by the
   NSERC CRD Grant #CRDPJ414157-11, and NSERC ENGAGE Grant #EGP-413039.
   Vahid Garousi was also additionally supported by Atilim University and
   the Visiting Scientist Fellowship Program (#2221) of the Scientific and
   Technological Research Council of Turkey (TUBITAK). We appreciate the
   technical support provided by Kornelia Streb in visualizing the analysis
   results. Finally, the authors would like to thank the anonymous
   reviewers and the special issue editors for their valuable comments.
CR Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Biffl S., 2006, Value-Based Software Engineering
   Briand LC, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P13, DOI 10.1109/CSMR.2003.1192406
   Ciolkowski M, 2003, LECT NOTES COMPUT SC, V2765, P104
   Cohen J., 1988, STAT POWER ANAL BEHA
   CURTIS B, 1989, J SYST SOFTWARE, V9, P167, DOI 10.1016/0164-1212(89)90019-8
   Das S., 2007, P 2007 S COMP HUM IN
   de Souza S., 2006, J BRAZ COMPUT SOC, V12, P31, DOI DOI 10.1007/BF03194494
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Falessi D, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491515
   Falessi D, 2010, EMPIR SOFTW ENG, V15, P250, DOI 10.1007/s10664-009-9121-0
   Forward A., 2002, THESIS U OTTAWA
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Garousi G., 2013, P 17 INT C EVALUATIO, P24
   Garousi V, 2010, J SYST SOFTWARE, V83, P2251, DOI 10.1016/j.jss.2010.07.012
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   John M., 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083000, DOI 10.1145/1082983.1083000]
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Mao JY, 2000, J MANAGE INFORM SYST, V17, P153
   Parnas DL, 2011, FUTURE OF SOFTWARE ENGINEERING, P125, DOI 10.1007/978-3-642-15187-3_8
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sanchez-Rosado I., 2009, INT C SOFTW PROC PRO
   Schoonewille H., 2011, ACM C DES COMM SIGDO
   SIBSON R, 1973, COMPUT J, V16, P30, DOI 10.1093/comjnl/16.1.30
   Stettina Christoph Johann, 2011, P 29 ACM INT C DES C, P159, DOI DOI 10.1145/2038476.2038509
   Sun B., 2012, THESIS U CALGARY
   Tang A., 2005, P WORK IEEE IFIP C S
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   Tryggeseth E., 1997, Empirical Software Engineering, V2, P201, DOI 10.1023/A:1009778023863
   Visconti M, 2004, LECT NOTES COMPUT SC, V3009, P485
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wang R. Y., 1996, Journal of Management Information Systems, V12, P5
   Wingkvist A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P476, DOI 10.1109/QUATIC.2010.88
   Zhi J., ONLINE PAPER REPOSIT
   Zhi J., J SYST SOFTWARE
NR 39
TC 29
Z9 40
U1 2
U2 10
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 664
EP 682
DI 10.1016/j.infsof.2014.08.003
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA AU9YI
UT WOS:000345947500037
DA 2024-07-18
ER

PT J
AU Kanij, T
   Grundy, J
   Merkel, R
AF Kanij, Tanjila
   Grundy, John
   Merkel, Robert
TI Performance appraisal of software testers
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Performance appraisal; Software testers; Project management
AB Context: To determine the effectiveness of software testers a suitable performance appraisal approach is necessary, both for research and practice purposes. However, review of relevant literature reveals little information of how software testers are appraised in practice.
   Objective: (i) To enhance our knowledge of industry practice of performance appraisal of software testers and (ii) to collect feedback from project managers on a proposed performance appraisal form for software testers.
   Method: A web-based survey with questionnaire was used to collect responses. Participants were recruited using cluster and snowball sampling. 18 software development project managers participated.
   Results: We found two broad trends in performance appraisal of software testers - same employee appraisal process for all employees and a specialized performance appraisal method for software testers. Detailed opinions were collected and analyzed on how performance of software testers should be appraised. Our proposed appraisal approach was generally well-received.
   Conclusion: Factors such as number of bugs found after delivery and efficiency of executing test cases were considered important in appraising software testers' performance. Our proposed approach was refined based on the feedback received. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Kanij, Tanjila; Grundy, John] Swinburne Univ Technol, Melbourne, Vic, Australia.
   [Merkel, Robert] Monash Univ, Melbourne, Vic 3004, Australia.
C3 Swinburne University of Technology; Monash University
RP Kanij, T (corresponding author), Swinburne Univ Technol, Melbourne, Vic, Australia.
EM tkanij@swin.edu.au
RI Grundy, John/AAF-1716-2019
OI Grundy, John/0000-0003-4928-7076
CR [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Bairdain E., 1964, IBM CORPORATION, P78
   Berger Raymond M., 1966, P 4 SIGCPR C COMP PE, P83, DOI [10.1145/1142620.1142629, DOI 10.1145/1142620.1142629]
   DENSCOMBE M., 2003, GOOD RES GUIDE SMALL, V2nd
   Dickmann Robert A., 1964, P 2 SIGCPR C COMP PE, P45, DOI [10.1145/1142635.1142640, DOI 10.1145/1142635.1142640]
   Fernández-Sanz L, 2009, COMPUTER, V42, P110, DOI 10.1109/MC.2009.329
   Grady R.B., 1987, SOFTWARE METRICS EST, V1
   Grote D., 1996, COMPLETE GUIDE PERFO
   Hutcheson MarnieL., 2003, SOFTWARE TESTING FUN
   Iivonen J., 2010, P 2010 ACM IEEE INT
   Kaner C., 1999, SOFTWARE TESTING QUA, P80
   Kaner C., SOFTW TEST AN REV C
   Kanij Tanjila, 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P63, DOI 10.1109/CHASE.2012.6223025
   Kanij T., 2013, 26 C SOFTW IN PRESS
   Kanij T, 2011, INT SYMP EMP SOFTWAR, P359, DOI 10.1109/ESEM.2011.48
   Killingsworth BL, 2001, INFORM SYST MANAGE, V18, P8, DOI 10.1201/1078/43195.18.2.20010301/31271.2
   Mayer David B., 1968, P 1968 23 ACM NAT C, P657, DOI [10.1145/800186.810630, DOI 10.1145/800186.810630]
   Merkel R., DOES INDIVIDUAL MATT
   Powell Bill, 1975, P 3 ANN ACM SIGUCCS, P19, DOI [10.1145/800115.803716, DOI 10.1145/800115.803716]
NR 20
TC 11
Z9 12
U1 5
U2 44
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2014
VL 56
IS 5
BP 495
EP 505
DI 10.1016/j.infsof.2013.11.002
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AG6RB
UT WOS:000335545000004
DA 2024-07-18
ER

PT J
AU Chiam, YK
   Staples, M
   Ye, X
   Zhu, LM
AF Chiam, Yin Kia
   Staples, Mark
   Ye, Xin
   Zhu, Liming
TI Applying a selection method to choose Quality Attribute Techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Quality Attribute Techniques; Technique selection; Risk management; AHP
ID SOFTWARE; ARCHITECTURE; MANAGEMENT; FRAMEWORK
AB Context: Software products have requirements on software quality attributes such as safety and performance. Development teams use various specific techniques to achieve these quality requirements. We call these "Quality Attribute Techniques" (QATs). QATs are used to identify, analyse and control potential product quality problems. Although QATs are widely used in practice, there is no systematic approach to represent, select, and integrate them in existing approaches to software process modelling and tailoring.
   Objective: This research aims to provide a systematic approach to better select and integrate QATs into tailored software process models for projects that develop products with specific product quality requirements.
   Method: A selection method is developed to support the choice of appropriate techniques for any quality attribute, across the lifecycle. The selection method is based on three perspectives: (I) risk management; (2) process integration; and (3) cost/benefit using Analytic Hierarchy Process (AHP). An industry case study is used to validate the feasibility and effectiveness of applying the selection method.
   Results: The case study demonstrates that the selection method provides a more methodological and effective approach to choose QATs for projects that target a specific quality attribute, compared to the ad hoc selection performed by development teams.
   Conclusion: The proposed selection method can be used to systematically choose QATs for projects to target specific product qualities throughout the software development lifecycle. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Chiam, Yin Kia; Staples, Mark; Zhu, Liming] NICTA, Eveleigh, NSW 2015, Australia.
   [Chiam, Yin Kia; Staples, Mark; Zhu, Liming] Univ New S Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
   [Chiam, Yin Kia] Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur 50603, Malaysia.
   [Ye, Xin] Dalian Univ Technol, Inst Informat & Decis Technol, Dalian, Peoples R China.
C3 Australian National University; University of New South Wales Sydney;
   Universiti Malaya; Dalian University of Technology
RP Chiam, YK (corresponding author), Univ Malaya, Fac Comp Sci & Informat Technol, Kuala Lumpur 50603, Malaysia.
EM yinkia@um.edu.my
RI CHIAM, YIN KIA/B-8380-2010; Zhu, Li/GXH-9801-2022
OI CHIAM, YIN KIA/0000-0003-1107-7719; Zhu, Liming/0000-0001-5839-3765
FU Australian Government; Department of Broadband, Communications and the
   Digital Economy; Australian Research Council through the ICT Centre of
   Excellence program
FX NICTA is funded by the Australian Government as represented by the
   Department of Broadband, Communications and the Digital Economy and the
   Australian Research Council through the ICT Centre of Excellence
   program.
CR Al-Naeem T, 2005, PROC INT CONF SOFTW, P244
   [Anonymous], 1985, Computers & Standards, V4, P101, DOI 10.1016/0167-8051(85)90023-3
   [Anonymous], 1993, Decisions with Multiple Objectives
   [Anonymous], 1997, 12207ASNZS ISOIEC
   [Anonymous], 1998, 61508 IEC 1
   [Anonymous], 1996, Safety-critical computer systems
   [Anonymous], 62279 IEC
   [Anonymous], 2008, PERFORMANCE MODELING
   [Anonymous], THESIS U POLITECNICA
   Babar M.A., 2006, P EMP ASS SOFTW ENG, P1
   Babar MA, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P309, DOI 10.1109/ASWEC.2004.1290484
   Basili V. R., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P345
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   Borcsok J., 2007, INT C SYST ICONS 200, P38
   Bowers J., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P100
   Bridges W., 2004, SELECTION HAZARD EVA
   Carlsson C, 1996, FUZZY SET SYST, V78, P139, DOI 10.1016/0165-0114(95)00165-4
   Charette R. N., 1989, SOFTWARE ENG RISK AN
   Charette RN, 1996, IEEE SOFTWARE, V13, P110, DOI 10.1109/52.526838
   Chiam Y.K., 2011, THESIS U NEW S WALES
   Chiam YK, 2009, COMM COM INF SC, V42, P173
   Chiam YinKia., 2010, Proceedings of the 11th International Conference on Product Focused Software, P59
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   EMAM KE, 2000, IEEE T SOFTWARE ENG, V26, P541
   Ferre X, 2005, LECT NOTES COMPUT SC, V3547, P202
   Glass RL, 2004, COMMUN ACM, V47, P19, DOI 10.1145/986213.986228
   Holt J, 1997, COMPUT CONTROL ENG J, V8, P167, DOI 10.1049/cce:19970406
   Hotman E, 2005, LECT NOTES ARTIF INT, V3681, P184
   Jiang L, 2005, 12th IEEE International Conference and Workshops on the Engineering of Computer-Based Systems, Proceedings, P105
   Jiang L., 2005, THESIS U CALGARY CAN
   Jones C., 2000, Software assessment, benchmarks, and best practices
   Jones Paul L, 2002, Biomed Instrum Technol, V36, P237
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Keeney RL, 1999, IIE SOLUTIONS, V31, P24
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Lyons M, 2009, APPL ERGON, V40, P379, DOI 10.1016/j.apergo.2008.11.004
   Mc Caffery F, 2010, SOFTWARE QUAL J, V18, P81, DOI 10.1007/s11219-009-9086-7
   NASA Aeronautics and Space Administration, 2004, NASAGB871913
   Opydo D., MAKEITRATIONAL
   Perry W.E., 1983, STRUCTURED APPROACH
   Piattini M., 2007, ACM SIGSOFT SOFTWARE, V32, P1
   Rombach H. D., 1993, Experimental Software Engineering Issues: Critical Assessment and Future Directions. International Workshop Proceedings, P239
   Roy B.M., 1996, MULTICRITERIA METHOD
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Svahnberg M, 2003, INT J SOFTW ENG KNOW, V13, P547, DOI 10.1142/S0218194003001421
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   Vegas S, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P39
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
   Zhu LM, 2007, LECT NOTES COMPUT SC, V4470, P49
   Zhu LM, 2009, LECT NOTES COMPUT SC, V5543, P246
   Zhu LM, 2005, SOFTWARE QUAL J, V13, P357, DOI 10.1007/s11219-005-4251-0
   Zurich Risk Engineering, 1998, WHICH HAZ AN SEL GUI
NR 54
TC 8
Z9 9
U1 0
U2 29
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD AUG
PY 2013
VL 55
IS 8
BP 1419
EP 1436
DI 10.1016/j.infsof.2013.02.001
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168DF
UT WOS:000320685200004
DA 2024-07-18
ER

PT J
AU Stolee, KT
   Elbaum, S
   Sarma, A
AF Stolee, Kathryn T.
   Elbaum, Sebastian
   Sarma, Anita
TI Discovering how end-user programmers and their communities use public
   repositories: A study on Yahoo! Pipes
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE End-user programmers; Community analysis; Artifact repositories; Web
   mashups; Diversity analysis
AB Context: End-user programmers are numerous, write software that matters to an increasingly large number of users, and face software engineering challenges that are similar to their professionals counterparts. Yet, we know little about how these end-user programmers create and share artifacts in repositories as part of a community.
   Objective: This work aims to gain a better understanding of end-user programmer communities, the characteristics of artifacts in community repositories, and how authors evolve over time.
   Method: An artifact-based analysis of 32,000 mashups from the Yahoo! Pipes repository was performed. The popularity, configurability, complexity, and diversity of the artifacts were measured. Additionally, for the most prolific authors, we explore their submission trends over time.
   Results: Similar to other online communities, there is great deal of attrition but authors who persevere tend to improve over time, creating pipes that are more configurable, diverse, complex, and popular. We also discovered, however, that end-user programmers do not effectively reuse existing programs, submit pipes that are highly similar to others already in the repository, and in most cases do not have an awareness of the community or the richness of artifacts that exist in repositories.
   Conclusion: There is a need for better end-user programmer support in several stages of the software life-cycle, including development, maintenance, search, and program understanding. Without such support, the community repositories will continue to be cluttered with highly-similar artifacts and authors may not be able to take full advantage of the community resources. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Stolee, Kathryn T.; Elbaum, Sebastian; Sarma, Anita] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Stolee, KT (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM kstolee@cse.unl.edu; elbaum@cse.unl.edu; asarma@cse.unl.edu
OI Stolee, Kathryn/0000-0003-0584-7094; Sarma, Anita/0000-0002-1859-1692
FU NSF Graduate Research Fellowship under CFDA [47.076]; NSF [0915526];
   AFOSR [9550-10-1-0406]; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [1218265, 0915526]
   Funding Source: National Science Foundation
FX This work was supported by the NSF Graduate Research Fellowship under
   CFDA#47.076, NSF Award #0915526, and AFOSR Awards #9550-10-1-0406.
CR [Anonymous], 2009, P 4 INT C COMMUNITIE, DOI DOI 10.1145/1556460.1556489
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bozzon A, 2011, LECT NOTES COMPUT SC, V6585, P192
   Crowston K, 2010, ACM COMPUT SURV, P7
   Dahotre A, 2010, P 2010 ACM IEEE INT, P29
   DANIEL F, 2012, INT C COMP WORLD WID, P493
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Ennals Robert., 2007, Proceedings of the 2007 ACM SIGMOD international conference on Management of data, P1116
   Fischer G, 2008, LECT NOTES COMPUT SC, V5247, P279, DOI 10.1007/978-3-540-85992-5_27
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Grammel L, 2010, LECT NOTES COMPUT SC, V6400, P137
   Greenshpan O., 2009, Proc. VLDB Endow, V2, P538
   Ko A.J, ACM COMPUTING SURVEY
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Koesnandar Andhy., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, SIGSOFT '08/FSE-16, P124
   Kuttal Sandeep Kaur, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P25, DOI 10.1007/978-3-642-21530-8_4
   Madey G., 2002, P 8 AMERICAS C INFOR, P1806
   Muhammad I., 2012, P 2012 ACM ANN C EXT, P1949
   Oh W, 2007, MANAGE SCI, V53, P1086, DOI 10.1287/mnsc.1060.0623
   Panko R. R., 1998, Journal of End User Computing, V10, P15
   Riabov A., 2008, Proceeding of the 17th international con- ference on World Wide Web, P775
   Scacchi W., 2007, Advances in Computers, V69, P243, DOI [DOI 10.1016/S0065-2458(06)69005-0, 10.1016/S0065-2458(06)69005-0]
   Scaffidi C, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P207, DOI 10.1109/VLHCC.2005.34
   Scaffidi C, 2009, S VIS LANG HUM CEN C, P93, DOI 10.1109/VLHCC.2009.5295290
   Soi S, 2010, LECT NOTES COMPUT SC, V6385s, P384, DOI 10.1007/978-3-642-16985-4_34
   Stolee KT, 2011, INT SYMP EMP SOFTWAR, P147, DOI 10.1109/ESEM.2011.23
   Stolee KT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P81, DOI 10.1145/1985793.1985805
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wong J., 2008, International Conference on Software Engineering, P35, DOI DOI 10.1145/1370847.1370855
NR 29
TC 16
Z9 17
U1 0
U2 8
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2013
VL 55
IS 7
BP 1289
EP 1303
DI 10.1016/j.infsof.2012.10.004
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 161UD
UT WOS:000320217900011
DA 2024-07-18
ER

PT J
AU Guana, V
   Correal, D
AF Guana, Victor
   Correal, Dario
TI Improving software product line configuration: A quality
   attribute-driven approach
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture; Model driven; software product lines; Variability
   management; Quality evaluation; Sensitivity points; Domain specific
   modeling
ID ARCHITECTURE
AB Context: During the definition of software product lines (SPLs) it is necessary to choose the components that appropriately fulfil a product's intended functionalities, including its quality requirements (i.e., security, performance, scalability). The selection of the appropriate set of assets from many possible combinations is usually done manually, turning this process into a complex, time-consuming, and error-prone task.
   Objective: Our main objective is to determine whether, with the use of modeling tools, we can simplify and automate the definition process of a SPL, improving the selection process of reusable assets.
   Method: We developed a model-driven strategy based on the identification of critical points (sensitivity points) inside the SPL architecture. This strategy automatically selects the components that appropriately match the product's functional and quality requirements. We validated our approach experimenting with different real configuration and derivation scenarios in a mobile healthcare SPL where we have worked during the last three years.
   Results: Through our SPL experiment, we established that our approach improved in nearly 98% the selection of reusable assets when compared with the unassisted analysis selection. However, using our approach there is an increment in the time required for the configuration corresponding to the learning curve of the proposed tools.
   Conclusion: We can conclude that our domain-specific modeling approach significantly improves the software architect's decision making when selecting the most suitable combinations of reusable components in the context of a SPL. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Guana, Victor] Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2E8, Canada.
   [Correal, Dario] Univ Los Andes, Syst & Comp Engn Dept, Bogota, DC, Colombia.
C3 University of Alberta; Universidad de los Andes (Colombia)
RP Correal, D (corresponding author), Univ Los Andes, Syst & Comp Engn Dept, Cra 1E N 19A-40, Bogota, DC, Colombia.
EM guana@ualberta.ca; dcorreal@uniandes.edu.co
OI Correal, Dario/0000-0001-9502-4504
FU capacitation division of the Fundacion SantaFe de Bogota (FSFB)
FX We would like to thank the capacitation division of the Fundacion
   SantaFe de Bogota (FSFB) for the support, compromise and help offered
   during these years. We would like to thank also the members of the
   Model-Oriented Software Architectures (MooSAS) team.
CR [Anonymous], ADV INFORM SYSTEMS E
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], SOFTWARE PRODUCT LIN
   Arboleda H., 2008, WORKSH P, P46
   Bass L, 2002, LECT NOTES COMPUT SC, V2290, P169
   Benavides D., 2006, TECHNICAL REPORT
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bezivin J., 2004, UPGRADE: The European Journal for the Informatics Professional, V5
   Clements P., 2003, SEI S SOFTW
   Correal D., 2011, MODEL ORIENTED SOFTW
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K., 2005, Companion to the 20th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, OOPSLA 2005, October 16-20, 2005, P126, DOI DOI 10.1145/1094855.1094896
   Etxeberria L., 1 INT WORKSH VAR SOF, P51
   Etxeberria L, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P243, DOI 10.1109/SPLC.2008.37
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gasevic Dragan., 2009, Model driven engineering and ontology development, P125
   González-Baixauli B, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P198
   Gonzalez-Baixauli B., INT WORKSH REQ REUS, P4
   Guana V., 2011, SENSITIVITY POINT AN
   Guana V., 2011, P 15 INT SOFTW PROD, V2, P19
   Jarzabek S, 2006, IEE P-SOFTW, V153, P61, DOI 10.1049/ip-sen:20050008
   Kang K. C., 1990, Technical Report
   Kent S., 2002, IFM 02
   Kuusela J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P61, DOI 10.1109/ICSE.2000.870397
   Lee K., LECT NOTES COMPUTER, V6287, P32
   Northrop L.M., 2009, A Framework for Software Product Line Practice
   *OMG, 2002, AD20020410 OMG
   Peña Y, 2010, LECT NOTES COMPUT SC, V6413, P86, DOI 10.1007/978-3-642-16385-2_12
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rozanski N., 2011, Software Systems Architecture: Working with Stakeholders Using Viewpoints and Perspectives
   Schirmeier H., SYST SCI HICSS 09 42, P1
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Soetens Q., 2010, P QUATIC, V10
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Tsang E., 1995, FDN CONSTRAINT SATIS
   Warmer J., 1999, AW OBJ TECHNOL S
   Yin R.K., 2011, Qualitative research from start to finish
   Zhu LM, 2005, SOFTWARE QUAL J, V13, P357, DOI 10.1007/s11219-005-4251-0
NR 39
TC 9
Z9 10
U1 0
U2 25
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2013
VL 55
IS 3
BP 541
EP 562
DI 10.1016/j.infsof.2012.09.007
PG 22
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 095XV
UT WOS:000315369200005
DA 2024-07-18
ER

PT J
AU Patig, S
   Stolz, M
AF Patig, Susanne
   Stolz, Manuela
TI A pattern-based approach for the verification of business process
   descriptions
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Business process model; Verification; Model checking; SPIN
ID PROCESS MODELS; SEMANTICS
AB Context: Empirical studies indicate that companies mostly adopt business process management to support organizational concerns. Consequently, descriptions of business processes usually rely on natural languages or tables. Nevertheless, many companies also intend to support process execution using software (e.g. ERP systems, databases, office applications). This involves significant implementation effort, and therefore the underlying business process description should be correct.
   Objective: This paper presents an approach for verifying business process descriptions that can be presented in any style, e.g. as text, tables or graphical process model created with some or other process modelling language.
   Method: Because of its generality and the availability of tools, model checking is used here to verify business process descriptions. In particular, the SPIN model checker was chosen because it is well-established and continuously improved. The proposed composition-based approach permits the semi-automatic implementation of any kind of business process description in the SPIN tool and the verification of numerous correctness properties, which refer to workflow control flow patterns, safety and liveness.
   Results: Because of systemizing, the proposed approach represents all 43 workflow control-flow patterns by 20 basic ones, six fragments and their relationships. For the basic patterns and fragments, PROMELA inline-constructs are provided, and the set of applicable correctness properties is suggested. The correctness properties are specified as templates in linear temporal logic. Implementing a business process description consists of assembling the inline-constructs and associating business semantics with the symbols in the logical formulae of the correctness properties. For verification, the SPIN algorithms are used.
   Conclusion: By using the approach presented, business process descriptions can be checked for correctness even if the original business process description is vague. The control structures allowed in the business process descriptions are not restricted, and the verifiable correctness properties go beyond soundness. (C) 2012 Elsevier B.V. All rights reserved.
C1 [Patig, Susanne; Stolz, Manuela] Univ Bern, Inst Informat Syst, CH-3012 Bern, Switzerland.
C3 University of Bern
RP Patig, S (corresponding author), Univ Bern, Inst Informat Syst, Engehaldenstr 8, CH-3012 Bern, Switzerland.
EM Susanne.patig@iwi.unibe.ch; manuela.c.stolz@credit-suisse.com
CR Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Becker J, 2007, LECT NOTES COMPUT SC, V4656, P68
   Ben-Ari M., 2008, Principles of the Spin Model Checker
   Börger E, 2007, LECT NOTES COMPUT SC, V4801, P1
   Cao Honghua., 2006, CIT 06, P190
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   DIVINE, PAR LTL MOD CHECK
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   Foerster A, 2007, TASE 2007: FIRST JOINT IEEE/IFIP SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P197, DOI 10.1109/TASE.2007.56
   Formal Systems, FDR2 FAIL DIV REF
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Holzmann G. J., 2008, SPIN MODEL CHECKER P, V4th
   Johannesson P, 2001, INFORM SYST, V26, P165, DOI 10.1016/S0306-4379(01)00015-1
   Kim GW, 2009, I C COMM SOFTW NET, P433, DOI 10.1109/ICCSN.2009.154
   Koehler J, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P96, DOI 10.1109/EDOC.2002.1137700
   Kovas M., 2006, P INT WORKSH GRAPH T, P221
   Kühne S, 2010, J SOFTW MAINT EVOL-R, V22, P547, DOI 10.1002/smr.517
   Lamport L., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P657
   Leyla Nazia., 2010, P 2010 C CTR ADV STU, P253
   Liu Y, 2007, IBM SYST J, V46, P335, DOI 10.1147/sj.462.0335
   Lu SY, 2006, THEOR COMPUT SCI, V353, P71, DOI 10.1016/j.tcs.2005.10.035
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   NuSMV, 2011, NEW SYMB MOD CHECK
   Patig S., 2011, BPM SOFTW PROC MOD L
   Patig S, 2010, LECT NOTES COMPUT SC, V6336, P13, DOI 10.1007/978-3-642-15618-2_4
   Puhlmann R, 2005, LECT NOTES COMPUT SC, V3649, P153, DOI 10.1007/11538394_11
   Russell N, 2005, LECT NOTES COMPUT SC, V3716, P353
   Russell N., 2006, Workflow Control-Flow Patterns: A Revised View
   Sadiq W, 2000, INFORM SYST, V25, P117, DOI 10.1016/S0306-4379(00)00012-0
   Salomie I, 2007, INT C INTELL COMP CO, P185, DOI 10.1109/ICCP.2007.4352159
   Spin, SPIN ON THE FLY LTL
   STEFANSEN C, 2005, CEUR WORKSHOP P, V161
   Stolz M., 2010, VERIFICATION WORKFLO
   van der Aalst WMP, 2005, LECT NOTES COMPUT SC, V3760, P130
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Aalst WMP, 1999, INFORM SOFTWARE TECH, V41, P639, DOI 10.1016/S0950-5849(99)00016-6
   van Dongen BF, 2006, IEEE INT ENTERP DIST, P116
   VANDERAALST WMP, 2002, LECT NOTES COMPUTER, V2348, P535
   Vaz C., 2007, IADIS INT C WWW INT, P84
   Verbeek H.M.W., 2006, BPM0605
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   Weidlich M, 2007, 2ND IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE, PROCEEDINGS, P266, DOI 10.1109/APSCC.2007.36
   Wenjia Huai, 2010, 2010 Proceedings of 7th International Conference on Ubiquitous Intelligence & Computing and 7th International Conference on Autonomic & Trusted Computing (UIC/ATC 2010), P422, DOI 10.1109/UIC-ATC.2010.114
   Wong PYH, 2007, LECT NOTES COMPUT SC, V4829, P51
   Wong PYH, 2009, LECT NOTES COMPUT SC, V5423, P56
   Wong PYH, 2008, LECT NOTES COMPUT SC, V5256, P355, DOI 10.1007/978-3-540-88194-0_22
   Wynn MT, 2009, BUS PROCESS MANAG J, V15, P74, DOI 10.1108/14637150910931479
NR 48
TC 5
Z9 7
U1 0
U2 31
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2013
VL 55
IS 1
BP 58
EP 87
DI 10.1016/j.infsof.2012.07.002
PG 30
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 036GA
UT WOS:000311013200004
DA 2024-07-18
ER

PT J
AU Domínguez-Jiménez, JJ
   Estero-Botaro, A
   García-Domínguez, A
   Medina-Bulo, I
AF Dominguez-Jimenez, J. J.
   Estero-Botaro, A.
   Garcia-Dominguez, A.
   Medina-Bulo, I.
TI Evolutionary mutation testing
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Mutation testing; Evolutionary algorithm; Genetic algorithm; Web
   Service; WS-BPEL
AB Context: Mutation testing is a testing technique that has been applied successfully to several programming languages. However, it is often regarded as computationally expensive, so several refinements have been proposed to reduce its cost. Moreover. WS-BPEL compositions are being widely adopted by developers, but present new challenges for testing, since they can take much longer to run than traditional programs of the same size. Therefore, it is interesting to reduce the number of mutants required.
   Objective: We present Evolutionary Mutation Testing (EMT), a novel mutant reduction technique for finding mutants that help derive new test cases that improve the quality of the initial test suite. It uses evolutionary algorithms to reduce the number of mutants that are generated and executed with respect to the exhaustive execution of all possible mutants, keeping as many difficult to kill and potentially equivalent mutants (strong mutants) as possible in the reduced set.
   Method: To evaluate EMT we have developed GAmera, a mutation testing system powered by a co-evolutive genetic algorithm. We have applied this system to three WS-BPEL compositions to estimate its effectiveness, comparing it with random selection.
   Results: The results obtained experimentally show that EMT can select all strong mutants generating 15% less mutants than random selection in over 20% less time for complex compositions. When generating a percentage of all mutants, EMT finds on average more strong mutants than random selection. This has been confirmed to be statistically significant within a 99.9% confidence interval.
   Conclusions: EMT has reduced for the three tested compositions the number of mutants required to select those which are useful to derive new test cases that improve the quality of the test suite. The directed search performed by EMT makes it more effective than random selection, especially as compositions become more complex and the search space widens. (C) 2011 Elsevier B.V. All rights reserved.
C1 [Dominguez-Jimenez, J. J.; Estero-Botaro, A.; Garcia-Dominguez, A.; Medina-Bulo, I.] Univ Cadiz, Dept Comp Languages & Syst, Escuela Super Ingn, Cadiz 11002, Spain.
C3 Universidad de Cadiz
RP Domínguez-Jiménez, JJ (corresponding author), Univ Cadiz, Dept Comp Languages & Syst, Escuela Super Ingn, C Chile 1, Cadiz 11002, Spain.
EM juanjose.dominguez@uca.es; antonia.estero@uca.es;
   antonio.garciadominguez@uca.es; inmaculada.medina@uca.es
RI Medina-Bulo, Inmaculada/L-5523-2014; Estero-Botaro, Antonia/M-1243-2014;
   Garcia Dominguez, Antonio/IAN-2064-2023; Domínguez-Jiménez, Juan
   José/M-1187-2014
OI Medina-Bulo, Inmaculada/0000-0002-7543-2671; Estero-Botaro,
   Antonia/0000-0003-4726-7856; Garcia Dominguez,
   Antonio/0000-0002-4744-9150; Domínguez-Jiménez, Juan
   José/0000-0001-5266-1239
CR Acree A. T., 1980, On Mutation
   Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Agrawal H., 1989, Technical Report. Technical Report SERCTR- 41- P
   [Anonymous], 1980, THESIS YALE U NEW HA
   [Anonymous], 1988, SERCTR14P PURD U
   [Anonymous], 1991, Foundations of Genetic Algorithms, DOI DOI 10.1016/B978-0-08-050684-5.50009-4
   [Anonymous], P 2006 INT WORKSH AU
   CHOI BJ, 1993, J SYST SOFTWARE, V20, P135, DOI 10.1016/0164-1212(93)90005-I
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   DeMillo R. A., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P351, DOI 10.1109/CMPSAC.1991.170202
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DOMINGUEZJIMINE.JJ, 2009, ECOWS 09
   ESTEROBOTARO A, 2008, ICSSEA 2008
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   HOWDEN WE, 1977, IEEE T SOFTWARE ENG, V3, P266, DOI 10.1109/TSE.1977.231144
   HUSSAIN S, 2008, THESIS KINGS COLL LO
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   JIA Y, 2010, IEEE T SOFTWARE  JUN
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   KOVAL A, 2008, UNDERSTANDING TRAVEL
   KRAUSER EW, 1991, IEEE T SOFTWARE ENG, V17, P403, DOI 10.1109/32.90444
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   MAYER P, 2006, THESIS LEIBNIZ U HAN
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Michael CC, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P307, DOI 10.1109/ASE.1997.632858
   Mitchell M., 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   Muhlenbein H., 1991, FDN GENETIC ALGORITH, P316, DOI DOI 10.1016/B978-0-08-050684-5.50023-9
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1992, PROC INT CONF PARAL, P257
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   OFFUTT AJ, 1996, ISSETR9609 G MAS U
   Organization for the Advancement of Structured Information Standards, 2007, WEB SERV BUS PROC EX
   PALOMODUARTE M, 2008, ECOWS 08, P63
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   Rosin CD, 1997, EVOL COMPUT, V5, P1, DOI 10.1162/evco.1997.5.1.1
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   UNTCH R, 1993, P 1993 INT S SOFTW T, P139, DOI DOI 10.1145/154183.154265
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   WIEGAND RP, 2003, THESIS G MASON U FAI
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   WOODWARD MR, 1993, INFORM SOFTWARE TECH, V35, P163, DOI 10.1016/0950-5849(93)90053-6
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   ZAPF CN, 1993, THESIS CLEMSON U
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   2007, XSL TRANSFORMATIONS
NR 51
TC 34
Z9 38
U1 0
U2 14
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2011
VL 53
IS 10
BP 1108
EP 1123
DI 10.1016/j.infsof.2011.03.008
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 801ER
UT WOS:000293421200007
DA 2024-07-18
ER

PT J
AU Lee, H
   Chung, K
   Park, H
   Choi, K
AF Lee, Hongsuk
   Chung, Kihyun
   Park, Hyunsang
   Choi, Kyunghee
TI Modeling software requirement with timing diagram and Simulink Stateflow
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Timing diagram; Modeling software; Simulink/Stateflow; Finite-state
   machine; Statechart
AB Context: A methodology is needed to model software specification with both timing diagram and Simulink/Stateflow (SL/SF) and to convert timing diagram model into SL/SF model.
   Objectives: This paper aims to propose a timing diagram drawing method and the algorithm to convert a timing diagram model into the equivalently behaving SL/SF model.
   Method: We add a few extra features to those of the typical timing diagrams. The extra features were chosen by the field engineers' requests and the survey of many different commercial models. This paper proposes the formal method to describe the timing diagram. Based on the formal description, the converting algorithm translates a timing diagram into the SL/SF model.
   Results: By providing a path from timing diagram to SL/SF, system specifications can be described with both SL/SF and timing diagram. This paper addresses the details of outcomes that the proposed method was successfully applied to modeling "Theft watch system" and "Automotive power window controller. The proposed method has been successfully applied to other commercial systems, and to the models provided by Mathworks.
   Conclusion: This paper proposed a methodology to describe system specification with both timing diagram and SL/SF. The strategy might help designers more efficiently describe specifications. In addition, the mixed specification can be simulated in SL/SF, and the specification can utilize other third party SL/SF tools such as test case generation or model check utilities. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Lee, Hongsuk; Chung, Kihyun] Ajou Univ, Dept EE, Suwon 442749, South Korea.
   [Park, Hyunsang; Choi, Kyunghee] Ajou Univ, Grad Sch Informat & Commun, Suwon 442749, South Korea.
C3 Ajou University; Ajou University
RP Chung, K (corresponding author), Ajou Univ, Dept EE, 5 Wonchon Dong, Suwon 442749, South Korea.
EM khchung@ajou.ac.kr
RI Park, Hyun Sang/KSM-9402-2024
OI Park, Hyun Sang/0009-0005-4012-7588
CR Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   [Anonymous], DES AUT C EURO VHDL
   [Anonymous], UML SUP SPEC V2 2
   [Anonymous], LNCS INTEGRATION SOF
   [Anonymous], STAT STAT COD 7 US G
   [Anonymous], SYSTEMVERILOG VERIFI
   [Anonymous], AUTOMATING MANUFACTU
   [Anonymous], TIMING DIAGRAMS ADD
   [Anonymous], SOFTWARE ENG J
   [Anonymous], APPL CONC SYST DES 1
   [Anonymous], DIGITAL DESIGN PRINC
   [Anonymous], AUT POW WIND SYST DE
   Bombieri N, 2006, DES AUT TEST EUROPE, P1006
   Caldari M, 2003, DESIGNERS FORUM: DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, P26
   Drechsler R., 2004, Advanced formal verification
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hayhurst Kelly J., 2001, A practical tutorial on modified condition/decision coverage
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   VAHID F, 1995, IEEE T COMPUT AID D, V14, P694, DOI 10.1109/43.387730
   Vahid F., 2002, EMBEDDED SYSTEM DESI
   Wang F, 2004, P IEEE, V92, P1283, DOI 10.1109/JPROC.2004.831197
NR 22
TC 1
Z9 2
U1 0
U2 6
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2011
VL 53
IS 5
SI SI
BP 484
EP 493
DI 10.1016/j.infsof.2010.11.012
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 742DI
UT WOS:000288919900005
DA 2024-07-18
ER

PT J
AU Tizzei, LP
   Dias, M
   Rubira, CMF
   Garcia, A
   Lee, J
AF Tizzei, Leonardo P.
   Dias, Marcelo
   Rubira, Cecilia M. F.
   Garcia, Alessandro
   Lee, Jaejoon
TI Components meet aspects: Assessing design stability of a software
   product line
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Product Line Architecture; Component-based Development; Aspect-Oriented
   Software Development; Design stability
ID MODEL
AB Context: It is important for Product Line Architectures (PLA) to remain stable accommodating evolutionary changes of stakeholder's requirements. Otherwise, architectural modifications may have to be propagated to products of a product line, thereby increasing maintenance costs. A key challenge is that several features are likely to exert a crosscutting impact on the PLA decomposition, thereby making it more difficult to preserve its stability in the presence of changes. Some researchers claim that the use of aspects can ameliorate instabilities caused by changes in crosscutting features. Hence, it is important to understand which aspect-oriented (AO) and non-aspect-oriented techniques better cope with PLA stability through evolution.
   Objective: This paper evaluates the positive and negative change impact of component and aspect based design on PLAs. The objective of the evaluation is to assess how aspects and components promote PLA stability in the presence of various types of evolutionary change. To support a broader analysis, we also evaluate the PLA stability of a hybrid approach (i.e. combined use of aspects and components) against the isolated use of component-based, 00, and AO approaches.
   Method: An quantitative and qualitative analysis of PLA stability which involved four different implementations of a PLA: (i) an 00 implementation, (ii) an AO implementation, (iii) a component-based implementation, and (iv) a hybrid implementation where both components and aspects are employed. Each implementation has eight releases and they are functionally equivalent. We used conventional metrics suites for change impact and modularity to measure the architecture stability evaluation of the 4 implementations.
   Results: The combination of aspects and components promotes superior PLA resilience than the other PlAs in most of the circumstances. Conclusion: It is concluded that the combination of aspects and components supports the design of high cohesive and loosely coupled PLAs. It also contributes to improve modularity by untangling feature implementation. (C) 2010 Published by Elsevier B.V.
C1 [Tizzei, Leonardo P.; Dias, Marcelo; Rubira, Cecilia M. F.] Univ Estadual Campinas, Inst Comp, Campinas, SP, Brazil.
   [Garcia, Alessandro] Pontifical Catolic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
   [Lee, Jaejoon] Univ Lancaster, Dept Comp, Lancaster, England.
C3 Universidade Estadual de Campinas; Pontificia Universidade Catolica do
   Rio de Janeiro; Lancaster University
RP Tizzei, LP (corresponding author), Univ Estadual Campinas, Inst Comp, Campinas, SP, Brazil.
EM tizzei@ic.unicamp.br; marcelo.dias@students.ic.unicamp.br;
   cmrubira@ic.unicamp.br; alessandro.garcia@puc-rj.br;
   j.lee@comp.lancs.ac.uk
RI Rubira, Cecilia Mary Fischer/G-5594-2012; Tizzei, Leonardo
   Pondian/G-2418-2012
OI Rubira, Cecilia Mary Fischer/0000-0003-4549-7105; Lee,
   Jaejoon/0000-0001-6016-8540
FU Capes-Brazil; Fapesp-Brazil [2008/02501-9]; CNPq-Brazil; Fapesp-Brazil;
   Faperj-Brazil; PUC-Rio
FX We would like to thank the anonymous referees for the insightful
   comments. Leonardo P.Tizzei is supported by Capes-Brazil. Marcelo Dias
   is supported by Fapesp-Brazil under grant 2008/02501-9. Cecilia M. F.
   Rubira is partially supported by CNPq-Brazil and Fapesp-Brazil.
   Alessandro Garcia is partially supported by Faperj-Brazil, by
   CNPq-Brazil, and by PUC-Rio productivity grant.
CR Alves V, 2005, LECT NOTES COMPUT SC, V3714, P70
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], 1996, PATTERN ORIENTED SOF
   [Anonymous], ENTERPRISE JAVABEANS
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Bass Len, 2012, SEI S SOFTW
   Bertoncello I., 2008, P INT WORKSH EXC HAN, P47
   Cacho Nelio., 2008, AOSD 08 P 7 INT C AS, P72
   Cheesman J., 2000, UML COMPONENTS SIMPL
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   da Silva MC, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P327, DOI 10.1109/ASE.2003.1240331
   de Freitas EP, 2007, LECT NOTES COMPUT SC, V4765, P55
   Filho F.C., 2006, INT C FDN SOFTWARE E, P152
   Filman R., 2004, ASPECT ORIENTED SOFT
   Gamma Erich., 1994, DESIGN PATTERNS
   Garcia A., 2005, AOSD 05, P3
   GODIL I, 2005, P CASCON 2005 TOR CA, P83
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   Hoffman K, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P91
   Hopkins J, 2000, COMMUN ACM, V43, P27, DOI 10.1145/352183.352198
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang Kyo C, 1990, Technical Report
   Kelly D, 2006, IEEE T SOFTWARE ENG, V32, P315, DOI 10.1109/TSE.2006.42
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kulesza U, 2007, LECT NOTES COMPUT SC, V4765, P155
   Kvale A.A., 2005, 2005 ACM S APPL COMP, P1491
   Laddad Ramnivas., 2003, ASPECTJ ACTION
   Lagaisse B, 2005, LECT NOTES COMPUT SC, V3489, P139
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Lee K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P103
   Lehman MM, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P84, DOI 10.1109/METRIC.1998.731229
   LIEBERHERR K, 1999, NUCCS9901
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   Loughran N, 2006, LECT NOTES COMPUT SC, V3844, P262
   Mattsson M, 2000, J SOFTW MAINT-RES PR, V12, P79, DOI 10.1002/(SICI)1096-908X(200003/04)12:2<79::AID-SMR204>3.0.CO;2-A
   Mezini M, 2003, LECT NOTES COMPUT SC, V2655, P24
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nunes C, 2009, EUR CON SFTWR MTNCE, P229, DOI 10.1109/CSMR.2009.50
   OLDEN JD, 2008, ENCY LIFE SCI, P1
   Ossher H, 2001, COMMUN ACM, V44, P43, DOI 10.1145/383845.383856
   Pessemier N, 2006, LECT NOTES COMPUT SC, V4089, P259
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   SANTANNA C, 2003, P 17 BRAZ S SOFTW EN
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   Sullivan K., 2002, AOSD 2002 C P, P19
   Suvée D, 2006, LECT NOTES COMPUT SC, V4063, P114
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   SZYPERSKI C, 2002, COMPONENT SOFTWARE
   Thiel S., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P130
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   YAU SS, 1985, IEEE T SOFTWARE ENG, V11, P849, DOI 10.1109/TSE.1985.232544
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 70
TC 33
Z9 33
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2011
VL 53
IS 2
BP 121
EP 136
DI 10.1016/j.infsof.2010.08.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 701IX
UT WOS:000285812700001
DA 2024-07-18
ER

PT J
AU Mosbahi, O
   Ben Ayed, LJ
   Khalgui, M
AF Mosbahi, Olfa
   Ben Ayed, Leila Jemni
   Khalgui, Mohamed
TI A formal approach for the development of reactive systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Reactive systems; Event-B method; Refinement; Language TLA(+); Liveness
   properties; Verification
ID TEMPORAL LOGIC
AB Context: This paper deals with the development and verification of liveness properties on reactive systems using the Event-B method. By considering the limitation of the Event-B method to invariance properties, we propose to apply the language TLA(+) to verify liveness properties on Event-B models. Objective: This paper deals with the use of two verification approaches: theorem proving and model-checking, in the construction and verification of safe reactive systems. The theorem prover concerned is part of the Click_n_Prove tool associated to the Event-B method and the model checker is TLC for TLA(+) models.
   Method: To verify liveness properties on Event-B systems, we extend first the expressivity and the semantics of a B model (called temporal B model) to deal with the specification of fairness and eventuality properties. Second, we propose semantics of the extension over traces, in the same spirit as TLA(+) does. Third, we give verification rules in the axiomatic way of the Event-B method. Finally, we give transformation rules from a temporal B model into a TLA(+) module. We present in particular, our prototype system called B2TLA(+), that we have developed to support this transformation; then we can verify liveness properties thanks to the model checker TLC on finite state systems. For the verification of infinite-state systems, we propose the use of the predicate diagrams and its associated tool DIXIT. As the B refinement preserves invariance properties through refinement steps, we propose some rules to get the preservation of liveness properties by the B refinement.
   Results: The proposed approach is applied for the development of some reactive systems examples and our prototype system B2TLA(+) is successfully used to transform a temporal B model into a TLA(+) module.
   Conclusion: The paper successfully defines an approach for the specification and verification of safety and liveness properties for the development of reactive systems using the Event-B method, the language TLA(+) and the predicate diagrams with their associated tools. The approach is illustrated on a case study of a parcel sorting system. (c) 2010 Elsevier B.V. All rights reserved.
C1 [Mosbahi, Olfa; Ben Ayed, Leila Jemni] Fac Sci Tunis, El Manur Tunis 2092, Tunisia.
   [Mosbahi, Olfa; Ben Ayed, Leila Jemni] INRIA Lorraine, LORIA, F-54506 Vandoeuvre Les Nancy, France.
   [Khalgui, Mohamed] Univ Halle Wittenberg, D-06108 Halle, Germany.
C3 Universite de Tunis-El-Manar; Faculte des Sciences de Tunis (FST);
   Universite de Lorraine; Martin Luther University Halle Wittenberg
RP Mosbahi, O (corresponding author), Fac Sci Tunis, Campus Univ, El Manur Tunis 2092, Tunisia.
EM olfamosbahi@gmail.com
OI Al-Sugheir, Mohamed/0000-0002-8193-933X
CR ABRIAL DCJ, 1996, FORMAL SPECIFICATION
   Abrial J., 1996, 1 C B METHOD PUTTING, P169
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial JR, 2003, LECT NOTES COMPUT SC, V2651, P168
   Abrial JR, 1998, LECT NOTES COMPUT SC, V1393, P83
   ABRIAL JR, 2007, CLICK N PROVE SET TH
   ABRIAL JR, 2000, EVENT DRIVEN CIRCUIT
   ABRIAL JR, 1997, NATO ASI SERIES F, V158, P129
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 1990, Predicate Calculus and Program Semantics
   [Anonymous], P 1 INT WORKSH DES A
   Arkoudas K, 2003, LECT NOTES COMPUT SC, V3051, P21
   Back R. J. R., 1990, LECT NOTES COMPUTER, V430
   Back Ralph-Johan, 1998, GRADUATE TEXTS COMPU
   BACK RJR, 1989, LECT NOTES COMPUT SC, V375, P115
   Barradas H. R., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P360
   Bellegarde F., 2002, ZB 2002: Formal Specification and Development in Z and B. 2nd International Conference of B and Z Users. Proceedings (Lecture Notes in Computer Science Vol.2272), P477
   Bert D, 2000, LECT NOTES COMPUT SC, V1945, P235
   Cansell D, 2001, J UNIVERS COMPUT SCI, V7, P159
   CANSELL D, 2001, WORKSH INT DIAGR FOR
   Chandy K.M., 1989, Parallel program design
   Clarke E, 2001, LECT NOTES COMPUT SC, V2000, P176
   Clarke E. M., 1994, APPL THEORY PETRI NE, P1
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1999, MODEL CHECKING, P1
   Clarke EM, 1997, LOGIC PROGRAMM, P3
   CLEARSY, 2004, B4FREE AIX EN PROVEN
   *CLEARSY, 2002, AT B AIX EN PROV F T
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   DIJKSTRA EW, 1976, DISCIPLINE PROGRAMMI, pCH14
   DIJKSTRA RM, 1995, INFORM PROCESS LETT, V53, P329, DOI 10.1016/0020-0190(94)00215-K
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Fejoz L., 2005, DIXIT GRAPHICAL TOOL
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HOLZMANN G, 2003, P FORM METH EUR C FM
   Julliand J., 1999, IFM'99. Proceedings of the 1st International Conference on Integrated Formal Methods, P89
   Kaltenbach M, 1994, CSTR9431 U TEX AUST
   KAUFMANN M, 2004, SPANISH ROYAL ACAD S, V98, P181
   LAMPORT L, 1994, ACM T PROGR LANG SYS, V16, P872, DOI 10.1145/177492.177726
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   MANNA Z, 1994, CSTR941518 STANF U D
   Masson PA, 2000, LECT NOTES COMPUT SC, V1945, P398
   Mery D., 1998, 9 S INF CONTR MAN IN
   Mery D., 1992, P 4 INT COMP AID VER, P343
   MOSBAHI A, 2008, THESIS LORIA CAMPUS
   MOSBAHI O, 2007, ICSOFT
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Pnueli Amir, 1977, FOCS, P46, DOI DOI 10.1109/SFCS.1977.32
   SPIVEY JM, 1988, TRACTS THEORETICAL C, V3
   Wohlin C, 2005, INFORM SOFTWARE TECH, V47, P957, DOI 10.1016/j.infsof.2005.09.002
   WORDSWORTH J, 1987, INFORM SOFTWARE TECH, V29, P27, DOI 10.1016/0950-5849(87)90017-6
   2003, TLC THE TLA MODEL CH
NR 54
TC 4
Z9 4
U1 0
U2 3
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2011
VL 53
IS 1
BP 14
EP 33
DI 10.1016/j.infsof.2010.07.004
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 692QV
UT WOS:000285171100003
DA 2024-07-18
ER

PT J
AU Mentis, A
   Katsaros, P
   Angelis, L
   Kakarontzas, G
AF Mentis, Anakreon
   Katsaros, Panagiotis
   Angelis, Lefteris
   Kakarontzas, George
TI Quantification of interacting runtime qualities in software
   architectures: Insights from transaction processing in client-server
   architectures
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architecture validation; Software quality; Design tradeoffs;
   Transaction processing; Simulation
ID COMPONENT-BASED SYSTEMS; PERFORMANCE; MODEL; REPLICATION; PREDICTION
AB Context: Architecture is fundamental for fulfilling requirements related to the non-functional behavior of a software system such as the quality requirement that response time does not degrade to a point where it is noticeable. Approaches like the Architecture Tradeoff Analysis Method (ATAM) combine qualitative analysis heuristics (e.g. scenarios) for one or more quality metrics with quantitative analyses. A quantitative analysis evaluates a single metric such as response time. However, since quality metrics interact with each other, a change in the architecture can affect unpredictably multiple quality metrics.
   Objective: This paper introduces a quantitative method that determines the impact of a design change on multiple metrics, thus reducing the risks in architecture design. As a proof of concept, the method is applied on a simulation model of transaction processing in client server architecture.
   Method: Factor analysis is used to unveil latent (i.e. not directly measurable) quality features represented by new variables that reflect architecture-specific correlations between metrics. Separate Analyses of Variance (ANOVA) are then applied to these variables, for interpreting the tradeoffs detected by factor analysis in terms of the quantified metrics.
   Results: The results for the examined transaction processing architecture show three latent quality features, the corresponding groups of strongly correlated quality metrics and the impact of architecture characteristics on the latent quality features.
   Conclusion: The proposed method is a systematic way for relating the variability of quality metrics and the implied tradeoffs to specific architecture characteristics. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Mentis, Anakreon; Katsaros, Panagiotis; Angelis, Lefteris; Kakarontzas, George] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Katsaros, P (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM anakreon@csd.auth.gr; katsaros@csd.auth.gr; lef@csd.auth.gr;
   gkakaron@teilar.gr
RI Katsaros, Panagiotis/JBR-8825-2023; Kakarontzas, George/JUV-0315-2023;
   Katsaros, Panagiotis/D-2546-2012
OI Kakarontzas, George/0000-0003-1208-606X; Katsaros,
   Panagiotis/0000-0002-4309-5295
CR ALTURI V, 1997, INFORM SOFTWARE TECH, V39, P47
   Anderson TW, 1956, P 3 BERK S MATH STAT, P1954
   [Anonymous], TPC BENCHM C STAND S
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Balsamo S, 2003, ESM 2003: 17TH EUROPEAN SIMULATION MULTICONFERENCE, P562
   BALSAMO S, 2004, ACM SIGSOFT SOFTWARE, V29, P115
   Bardram JE, 2005, LECT NOTES COMPUT SC, V3712, P155
   Becker S, 2008, LECT NOTES COMPUT SC, V5119, P79, DOI 10.1007/978-3-540-69814-2_7
   BENGTSSON PO, 1998, P 5 INT C SOFTW REUS
   Berander P., 2005, SOFTWARE QUALITY ATT
   Blom G., 1958, Statistical Estimates and Transformed Beta-variables
   Burke B., 2006, Enterprise JavaBeans 3.0
   Chrysanthis PK, 1998, RECOVERY MECHANISMS IN DATABASE SYSTEMS, P370
   Clements P., 2003, SEI S SOFTW
   Crnkovic I, 2005, LECT NOTES COMPUT SC, V3549, P257
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   *DOD, 2002, DOD INSTR 5000 61 MO
   EGUILUZ HR, 2003, CMUSEI2003TR003
   Field A, 2018, Discovering Statistics Using IBM SPSS Statistics, Vfifth
   Gorton I., 2006, ESSENTIAL SOFTWARE A
   Grunske L., 2006, 28th International Conference on Software Engineering Proceedings, P849, DOI 10.1145/1134285.1134431
   Grunske L, 2007, J SYST SOFTWARE, V80, P678, DOI 10.1016/j.jss.2006.08.014
   Katsaros P, 2007, CONCURR COMP-PRACT E, V19, P37, DOI 10.1002/cpe.1059
   Katsaros P, 2006, INFORM SOFTWARE TECH, V48, P795, DOI 10.1016/j.infsof.2005.10.004
   KAZMAN R, 1994, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.1994.296768
   KELTON WD, 1984, OPER RES, V32, P169, DOI 10.1287/opre.32.1.169
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KLEIN J, 2009, BEAUTIFUL ARCHITECTU
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krzanowski W.J., 1993, Principles of multivarite analysis, a user's perspective
   Litoiu M, 2000, IEEE T SOFTWARE ENG, V26, P1168, DOI 10.1109/32.888630
   Losavio F, 2001, TOOLS, V38, P123, DOI 10.1109/TOOLS.2001.911761
   MARTIN CP, 1997, ADV T MODELS ARCHITE
   Martis M.S., 2006, ELECT J BUSINESS RES, P39
   Mentis Anakreon, 2009, 2009 International Conference on High Performance Computing & Simulation (HPCS), P138, DOI 10.1109/HPCSIM.2009.5191824
   MENTIS A, 2008, P 1 INT C SIM TOOLS
   Mentis A, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P237, DOI 10.1109/SEAA.2009.84
   MERSON P, 2005, COMP 20 ANN ACM SIGP, P134
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   *OBJ MAN GROUP, 2003, AB970505 OMG
   *OBJ MAN GROUP, 2003, PTC20030308 OMG
   Olumofin FG, 2007, INFORM SOFTWARE TECH, V49, P309, DOI 10.1016/j.infsof.2006.05.003
   Paul HS, 2003, CONCURR COMP-PRACT E, V15, P1363, DOI 10.1002/cpe.743
   Reussner R, 2008, LECT NOTES COMPUT SC, V4909, P243
   Seng JL, 2003, IND MANAGE DATA SYST, V103, P516, DOI 10.1108/02635570310489214
   Shaw M, 1995, LECT NOTES COMPUT SC, V1000, P307
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Smith ConnieU., 2001, PERFORMANCE SOLUTION
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Varga A, 2001, MODELLING AND SIMULATION 2001, P319
   VIEIRA M, 2008, DEPENDABILITY BENCHM
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   ZHU L, 2005, P 5 WORK IEEE IFIP C, P35
   2008, ACID SIM TOOLS
NR 54
TC 4
Z9 4
U1 0
U2 4
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD DEC
PY 2010
VL 52
IS 12
BP 1331
EP 1345
DI 10.1016/j.infsof.2010.07.006
PG 15
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 677DB
UT WOS:000283968200006
DA 2024-07-18
ER

PT J
AU Lukins, SK
   Kraft, NA
   Etzkorn, LH
AF Lukins, Stacy K.
   Kraft, Nicholas A.
   Etzkorn, Letha H.
TI Bug localization using latent Dirichlet allocation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Bug localization; Program comprehension; Latent Dirichlet allocation;
   Information retrieval
ID DESIGN INSTABILITY
AB Context: Some recent static techniques for automatic bug localization have been built around modern information retrieval (IR) models such as latent semantic indexing (LSI). Latent Dirichlet allocation (LDA) is a generative statistical model that has significant advantages, in modularity and extensibility, over both LSI and probabilistic LSI (pLSI). Moreover, LDA has been shown effective in topic model based information retrieval. In this paper, we present a static LDA-based technique for automatic bug localization and evaluate its effectiveness.
   Objective: We evaluate the accuracy and scalability of the LDA-based technique and investigate whether it is suitable for use with open-source software systems of varying size, including those developed using agile methods.
   Method: We present five case studies designed to determine the accuracy and scalability of the LDA-based technique, as well as its relationships to software system size and to source code stability. The studies examine over 300 bugs across more than 25 iterations of three software systems.
   Results: The results of the studies show that the LDA-based technique maintains sufficient accuracy across all bugs in a single iteration of a software system and is scalable to a large number of bugs across multiple revisions of two software systems. The results of the studies also indicate that the accuracy of the LDA-based technique is not affected by the size of the subject software system or by the stability of its source code base.
   Conclusion: We conclude that an effective static technique for automatic bug localization can be built around LDA. We also conclude that there is no significant relationship between the accuracy of the LDA-based technique and the size of the subject software system or the stability of its source code base. Thus, the LDA-based technique is widely applicable. (C) 2010 Elsevier B.V. All rights reserved.
C1 [Lukins, Stacy K.; Etzkorn, Letha H.] Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
   [Kraft, Nicholas A.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 University of Alabama System; University of Alabama Huntsville;
   University of Alabama System; University of Alabama Tuscaloosa
RP Lukins, SK (corresponding author), Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
EM slukins@cs.uah.edu; nkraft@cs.ua.edu; etzkorl@uah.edu
FU National Science Foundation [CCF-0915403, CCF-0915559]; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [0915403] Funding Source: National Science Foundation;
   Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [0915559] Funding Source: National Science
   Foundation
FX This work was funded in part by the National Aeronautics and Space
   Administration under Grants NAG5-12725 and NCC8-200, and by the National
   Science Foundation under Grants CCF-0915403 and CCF-0915559.
CR Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   [Anonymous], 2009, Understand - Source Code Analysis and Metrics
   [Anonymous], RHINO
   [Anonymous], 2006, P 29 ANN INT ACM SIG, DOI DOI 10.1145/1148170.1148204
   [Anonymous], 2007, HDB LATENT SEMANTIC
   [Anonymous], The porter stemming algorithm
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Del Ventisette C., 2008, USE REMOTE SENSING T, P1
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Girolami Mark., 2003, Proceedings of the 26th annual international ACM SIGIR conference on Research and development in informaion retrieval, SIGIR '03, P433
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   KONTOSTATHIS A, 2007, P 40 HAW INT C SYST, P1
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Li W, 2000, INFORM SOFTWARE TECH, V42, P373, DOI 10.1016/S0950-5849(99)00088-9
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   LUKINS SK, 2009, THESIS U ALABAMA HUN
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Maskeri G., 2008, ISEC 08, P113, DOI 10.1145/1342211.1342234
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Olague HM, 2006, J SOFTW MAINT EVOL-R, V18, P237, DOI 10.1002/smr.332
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   RODEN P, 2008, THESIS U ALABAMA HUN
   Stein C., 2005, Journal of Computer Sciences, V1, P137, DOI 10.3844/jcssp.2005.137.144
NR 32
TC 204
Z9 241
U1 0
U2 22
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD SEP
PY 2010
VL 52
IS 9
BP 972
EP 990
DI 10.1016/j.infsof.2010.04.002
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 629QL
UT WOS:000280214700007
DA 2024-07-18
ER

PT J
AU Thörn, C
AF Thorn, Christer
TI Current state and potential of variability management practices in
   software-intensive SMEs: Results from a regional industrial survey
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software engineering; Variability; SME; Survey
ID PRODUCT LINE; REQUIREMENTS; REUSE
AB Context: More and more, small and medium-sized enterprises (SMEs) are using software to augment the functionality of their products and offerings. Variability management of software is becoming an interesting topic for SMEs with expanding portfolios and increasingly complex product structures. While the use of software product lines to resolve high variability is well known in larger organizations, there is less known about the practices in SMEs.
   Objective: This paper presents results from a survey of software developing SMEs. The purpose of the paper is to provide a snapshot of the current awareness and practices of variability modeling in organizations that are developing software with the constraints present in SMEs.
   Method: A survey with questions regarding the variability practices was distributed to software developing organizations in a region of Sweden that has many SMEs. The response rate was 13% and 25 responses are used in this analysis.
   Results: We find that, although there are SMEs that develop implicit software product lines and have relatively sophisticated variability structures for their solution space, the structures of the problem space and the product space have room for improvement.
   Conclusions: The answers in the survey indicate that SMEs are in situations where they can benefit from more structured variability management, but the awareness need to be raised. Even though the problem space similarity is high, there is little reuse and traceability activities performed. The existence of SMEs with qualified variability management and product line practices indicates that small organizations are capable to apply such practices. (C) 2009 Elsevier B.V. All rights reserved.
C1 Jonkoping Univ, Sch Engn, Jonkoping 55111, Sweden.
C3 Jonkoping University
RP Thörn, C (corresponding author), Jonkoping Univ, Sch Engn, POB 1026, Jonkoping 55111, Sweden.
EM christer.thorn@jth.hj.se
CR Ahmed F, 2007, INFORM SOFTWARE TECH, V49, P194, DOI 10.1016/j.infsof.2006.05.004
   Ahmed F, 2008, INFORM SOFTWARE TECH, V50, P1098, DOI 10.1016/j.infsof.2007.10.013
   AMERICA P, 2001, INTRO DOMAIN ANAL
   [Anonymous], THESIS U CALIFORNIA
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   BEUCHE D, SCI COMPUTER PROGRAM, V53
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Clements P., 2002, Software product lines
   Creps D., 1996, Domain Engineering Handbook
   CZARNECKI K, 2002, ENCY SOFTWARE ENG, DOI DOI 10.1002/0471028959.SOF095
   CZARNECKI K, 2005, OOPSLA 05, P126
   DUENAS JC, 2004, INT WORKSH REQ REUS
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   Fayad ME, 2000, COMMUN ACM, V43, P115, DOI 10.1145/330534.330555
   Graaf H, 2003, IEEE SOFTWARE, V20, P61, DOI 10.1109/MS.2003.1241368
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Groves L., 2000, Proceedings 2000 Australian Software Engineering Conference, P189, DOI 10.1109/ASWEC.2000.844576
   Halmans G., 2004, Informatik Forschung und Entwicklung, V18, P113, DOI 10.1007/s00450-004-0156-6
   Hofer C, 2002, EUROMICRO CONF PROC, P361, DOI 10.1109/EURMIC.2002.1046219
   Jarzabek S, 2003, J SYST SOFTWARE, V68, P171, DOI 10.1016/S0164-1212(03)00060-8
   John I, 2001, IESE02600D
   Kamsties E., 1998, Requirements Engineering, V3, P84, DOI 10.1007/BF02919967
   Kang Kyo C, 1990, Technical Report
   Kitchenham BA, 2007, GUIDE ADV EMPIRICAL, P63
   LAPORTE CY, 2008, LNCS, P129
   MCGREGOR JD, 2007, SPLIT 07, P59
   Mehta A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P417, DOI 10.1109/ICSE.2002.1007987
   Miller J, 2004, J SYST SOFTWARE, V73, P183, DOI 10.1016/j.jss.2003.12.019
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   NIKULA U, 2000, 1 TEL BUS RES CTR
   PREDONZANI P, 2000, ART H COMP SCI LIBR, pR15
   Rech J, 2007, IEEE SOFTWARE, V24, P99, DOI 10.1109/MS.2007.183
   Singer J., 2007, GUIDE ADV EMPIRICAL, P9
   SLYNGSTAD OPN, 2006, ISESE 06, P242
   Svahnberg M., 2001, 0201 BLEK I TECHN
   THORN C, 2008, SERPS 08
   THORN C, 2008, MISE 08, P21
   Verlage M, 2005, PROC INT CONF SOFTW, P534
   von Knethen A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ICRE.2002.1048538
   von Wangenheim CG, 2006, INFORM SOFTWARE TECH, V48, P890, DOI 10.1016/j.infsof.2005.12.010
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 45
TC 8
Z9 8
U1 0
U2 5
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2010
VL 52
IS 4
BP 411
EP 421
DI 10.1016/j.infsof.2009.10.009
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 576CL
UT WOS:000276121400004
DA 2024-07-18
ER

PT J
AU Toral, SL
   Martínez-Torres, MR
   Barrero, F
AF Toral, S. L.
   Martinez-Torres, M. R.
   Barrero, F.
TI Analysis of virtual communities supporting OSS projects using social
   network analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Virtual communities; Knowledge brokers; Social network analysis; Open
   Source Software
ID OPEN SOURCE SOFTWARE; KNOWLEDGE; MODEL; INFORMATION; WEB; COLLABORATION;
   DESIGN
AB This paper analyses the behaviour of virtual communities for Open Source Software (OSS) projects. The development of OSS projects relies on virtual communities, which are built on relationships among members, being their final objective sharing knowledge and improving the underlying project. This study addresses the interactive collaboration in these kinds of communities applying social network analysis (SNA). In particular, SNA techniques will be used to identify those members playing a middle-man role among other community members. Results will illustrate the importance of this role to achieve successful virtual communities. (c) 2009 Elsevier B.V. All rights reserved.
C1 [Toral, S. L.; Barrero, F.] Univ Seville, ES Ingn, Seville 41092, Spain.
   [Martinez-Torres, M. R.] Univ Seville, Escuela Univ Estudios Empresariales, Seville 41018, Spain.
C3 University of Sevilla; University of Sevilla
RP Toral, SL (corresponding author), Univ Seville, ES Ingn, Camino Descubrimientos S-N, Seville 41092, Spain.
EM toral@esi.us.es; rmtorres@us.es; fbarrero@esi.us.es
RI Toral, Sergio/E-6309-2010; Martinez-Torres, Rocio/E-6611-2010; Barrero,
   Federico/A-9626-2013
OI Toral, Sergio/0000-0003-2612-0388; Martinez-Torres,
   Rocio/0000-0002-1640-0020; Barrero, Federico/0000-0002-2896-4472
FU Spanish Ministry of Education and Science [DP12007-60128]; Consejeria de
   Innovacion, Ciencia y Empresa [P07-TIC-02621]
FX This work has been supported by the Spanish Ministry of Education and
   Science (Research Project with reference DP12007-60128) and the
   Consejeria de Innovacion, Ciencia y Empresa (Research Project with
   reference P07-TIC-02621).
CR Amin A, 2008, RES POLICY, V37, P353, DOI 10.1016/j.respol.2007.11.003
   [Anonymous], 2004, HIDDEN POWER SOCIAL
   [Anonymous], 1999, CATHEDRAL BAZAAR
   [Anonymous], 2000, The social life of information
   Barcellini F, 2008, INTERACT COMPUT, V20, P141, DOI 10.1016/j.intcom.2007.10.004
   Barrero F, 2008, INTERNET RES, V18, P79, DOI 10.1108/10662240810849603
   Bird Christian, 2006, INT C SOFTWARE ENG P, P137, DOI DOI 10.1145/1137983.1138016
   BONACCI D, 2004, INTERDISCIPLINARY DE, V2, P126
   Bonaccorsi A, 2003, RES POLICY, V32, P1243, DOI 10.1016/S0048-7333(03)00051-9
   Carotenuto L., 1999, CHANG PLAC WORKSH LO
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Fox S, 2000, J MANAGE STUD, V37, P853, DOI 10.1111/1467-6486.00207
   Gini C, 1936, MEASURE CONCENTRATIO
   HEMETSBERGER A, 2006, MANAGEMENT LEARNING, V37, P1350
   HENKEL J, 2003, P 6 INT TAG WIRTSCH, P1
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Hildreth P., 2000, J KNOWL MANAG, V4, P27, DOI DOI 10.1108/13673270010315920
   Johnson C. M., 2001, Internet and Higher Education, V4, P45, DOI 10.1016/S1096-7516(01)00047-1
   Johnson JP, 2006, INF ECON POLICY, V18, P477, DOI 10.1016/j.infoecopol.2006.07.001
   Jones Q, 2004, INFORM SYST RES, V15, P194, DOI 10.1287/isre.1040.0023
   Kautz H, 1997, COMMUN ACM, V40, P63, DOI 10.1145/245108.245123
   Knock N., 2001, IEEE T PROFESSIONAL, V44, P267, DOI DOI 10.1109/47.968108
   Kogut B., 2000, The emergence of E-Innovation
   Kolbitsch J, 2006, J UNIVERS COMPUT SCI, V12, P187
   Kuk G, 2006, MANAGE SCI, V52, P1031, DOI 10.1287/mnsc.1060.0551
   Lave J., 1991, SITUATED LEARNING LE, DOI DOI 10.1017/CBO9780511815355
   Lee GK, 2003, ORGAN SCI, V14, P633, DOI 10.1287/orsc.14.6.633.24866
   Marín SLT, 2005, IEEE T EDUC, V48, P632, DOI 10.1109/TE.2005.853074
   Martinez-Torres MR, 2006, INFORM MANAGE-AMSTER, V43, P617, DOI 10.1016/j.im.2006.03.002
   MARTINEZTORRES MR, 2009, P IADIS INT C WEB BA, P96
   Millen D., 2005, ACM Queue, V3, P28, DOI 10.1145/1105664.1105676
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nooy W., 2005, Exploratory Network Analysis with Pajek
   PALEN L, 2002, ORGANIZATIONAL
   Pan SL, 2003, J STRATEGIC INF SYST, V12, P71, DOI 10.1016/S0963-8687(02)00023-9
   Preece J, 2001, BEHAV INFORM TECHNOL, V20, P347, DOI 10.1080/01449290110084683
   Raghavan P, 2002, IEEE INTERNET COMPUT, V6, P91, DOI 10.1109/4236.989007
   Rheingold H., 1993, The virtual community: Homesteading on the electronic frontier
   Shang RA, 2006, INTERNET RES, V16, P398, DOI 10.1108/10662240610690025
   Sowe S, 2006, INFORM SOFTWARE TECH, V48, P1025, DOI 10.1016/j.infsof.2005.12.019
   Timmers P., 1998, Electronic Markets, V8, P3, DOI [10.1080/10196789800000016, DOI 10.1080/10196789800000016]
   Toral SL, 2009, BEHAV INFORM TECHNOL, V28, P405, DOI 10.1080/01449290903121394
   Toral SL, 2009, J UNIVERS COMPUT SCI, V15, P648
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   Wenger E., 2009, COMMUNITIES PRACTICE
   Xu J., 2005, P 38 ANN HAW INT C S, P188
   Yaghmour Karim., 2003, BUILDING EMBEDDED LI
   Yang SJH, 2008, INT J HUM-COMPUT ST, V66, P36, DOI 10.1016/j.ijhcs.2007.08.005
NR 49
TC 86
Z9 95
U1 3
U2 55
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2010
VL 52
IS 3
BP 296
EP 303
DI 10.1016/j.infsof.2009.10.007
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 571PF
UT WOS:000275765900004
OA Green Published
DA 2024-07-18
ER

PT J
AU Dias-Neto, AC
   Travassos, GH
AF Dias-Neto, Arilo Claudio
   Travassos, Guilherme Horta
TI Model-based testing approaches selection for software projects
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software testing; Model-based testing; Software technologies selection;
   Experimental studies
AB Selecting software technologies for software projects represents a challenge to software engineers. It is known that software projects differ from each other by presenting different characteristics that can complicate the selection of such technologies. This is not different when considering model-based testing. There are many approaches with different characteristics described in the technical literature that can be used in software projects. However, there is no indication as to how they can fit a software project. Therefore, a strategy to select model-based testing approaches for software projects called Porantim is fully described in this paper. Porantim is based on a body of knowledge describing model-based testing approaches and their characterization attributes (identified by secondary and primary experimental studies), and a process to guide by adequacy and impact criteria regarding the use of this sort of software technology that can be used by software engineers to select model-based testing approaches for software projects. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Dias-Neto, Arilo Claudio; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, Syst Engn & Comp Sci Program, COPPE, BR-21941972 Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro
RP Dias-Neto, AC (corresponding author), Univ Fed Rio de Janeiro, Syst Engn & Comp Sci Program, COPPE, POB 68511, BR-21941972 Rio De Janeiro, Brazil.
EM acdn@cos.ufrj.br; ght@cos.ufrj.br
RI Travassos, Guilherme Horta/G-2842-2012
OI Travassos, Guilherme Horta/0000-0002-4258-0424
FU CNPq [75459/2007-5]; FAPERJ; FAPEAM; Siemens Corporate Research
FX Our thanks to CNPq (Grant 75459/2007-5), FAPERJ, FAPEAM, and Siemens
   Corporate Research for supporting this research. We would like to thank
   Sira Vegas, Natalia Juristo, and Vic Basili for allowing us to reuse the
   original study package and by the lessons on the Characterization
   Schema.
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2004, Dictionary of Algorithms and Data Structures
   [Anonymous], INT C PRACT SOFTW QU
   ASADA T, 1992, CMUSEI92TR213 SEI
   BASILI VR, 1991, SOFTWARE ENG J, V6, P303, DOI 10.1049/sej.1991.0032
   Basili1 Victor R, 1994, Encyclopedia of Software Eng., V1, P469, DOI DOI 10.1002/0471028959.SOF110
   BERGER P, 2003, THESIS COPPE UFRJ RI
   Bernard E, 2004, SOFTWARE PRACT EXPER, V34, P915, DOI 10.1002/spe.597
   BIRK A, 1997, P 20 ASE LAK TAH CA
   Briand L.C., 2001, P 4 INT C UNIFIED MO, P194, DOI DOI 10.5555/647245.719446
   CLARKE J, 1998, P 11 SOFTW QUAL WEEK
   DALAL SR, 1999, INT C SOFTW ENG ICSE, P285
   Dawes J, 2008, INT J MARKET RES, V50, P61, DOI 10.1177/147078530805000106
   DIAS AC, 2006, 5 BRAZ S SOFTW QUAL
   DIAS AC, 2008, 3 INT WORKSH AUT SOF, P21
   DIAS AC, 2009, WORKSH AUT SOFTW TES
   DIAS AC, 2007, TRES71307 PESCCOPPEU
   DIAS AC, 2008, P INT S EMP SOFTW EN
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Dias A, 2008, IEEE SOFTWARE, V25, P10
   El-Far I.K., 2001, ENCY SOFTWARE ENG
   Gardner M.J., 1989, STAT CONFIDENCE CONF
   HORTMANN M, 2005, MODEL BASED TESTING, P439
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   KONTIO J, 1996, P CASCON 9 C TOR CAN, P12
   MAFRA SN, 2006, BRAZ S SOFTW ENG FLO, V1, P239
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Memon A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P164, DOI 10.1109/ASE.2003.1240304
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   MONETA C, 1990, TUM19019
   MONTONI M, 2007, P 29 INT C SOFTW ENG, P104
   Pretschner A, 2005, PROC INT CONF SOFTW, P722
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   SANTOS P, 2007, P 2007 ACM S APPL CO
   *SEI, 2002, CAP MAT MOD INT CMMI, P729
   Utting M., 2006, 042006 U WAIK DEP CO
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   XAVIER JR, 2002, 16 BRAZ S SOFTW ENG
NR 41
TC 20
Z9 20
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV
PY 2009
VL 51
IS 11
SI SI
BP 1487
EP 1504
DI 10.1016/j.infsof.2009.06.010
PG 18
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 504LW
UT WOS:000270619300002
DA 2024-07-18
ER

PT J
AU Di Penta, M
   Cerulo, L
   Aversano, L
AF Di Penta, Massimiliano
   Cerulo, Luigi
   Aversano, Lerina
TI The life and death of statically detected vulnerabilities: An empirical
   study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 8th IEEE International Working Conference on Source Code Analysis and
   Manipulation
CY SEP 28-29, 2008
CL Beijing, PEOPLES R CHINA
SP IEEE Comp Soc, Semant Designs, SAP, Reengn Forum, Ctr Res Evolut Search & Testing
DE Software vulnerabilities; Mining software repositories; Empirical study
AB Vulnerable statements constitute a major problem for developers and maintainers of networking systems. Their presence can ease the success of security attacks, aimed at gaining unauthorized access to data and functionality, or at causing system crashes and data loss. Examples of attacks caused by source code vulnerabilities are buffer overflows, command injections. and cross-site scripting.
   This paper reports on an empirical study, conducted across three networking systems, aimed at observing the evolution and decay of vulnerabilities detected by three freely available static analysis tools. in particular, the study compares the decay of different kinds of vulnerabilities. characterizes the decay likelihood through probability density functions, and reports a quantitative and qualitative analysis of the reasons for vulnerability removals. The study is performed by using a framework that traces the evolution of source code fragments across subsequent commits. (C) 2009 Elsevier B.V. All rights reserved.
C1 [Di Penta, Massimiliano; Aversano, Lerina] Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
   [Cerulo, Luigi] Univ Sannio, Dept Biol & Environm Studies, I-82100 Benevento, Italy.
C3 University of Sannio; University of Sannio
RP Di Penta, M (corresponding author), Univ Sannio, Dept Engn, Via Traiano, I-82100 Benevento, Italy.
EM dipenta@unisannio.it; lcerulo@unisannio.it; aversano@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021; Aversano, Lerina/AAG-3855-2019
OI Aversano, Lerina/0000-0003-2436-6835; Di Penta,
   Massimiliano/0000-0002-0340-9747; Cerulo, Luigi/0000-0001-8342-3487
CR Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   BALASUBRAMANIAN S, 2008, THESIS UTAH STATE U
   Calzolari F, 2001, INFORM SOFTWARE TECH, V43, P477, DOI 10.1016/S0950-5849(01)00156-2
   CANFORA G, 2007, MSR 07, P14
   Canfora G, 2009, IEEE SOFTWARE, V26, P50, DOI 10.1109/MS.2009.26
   CIFUENTES C., 2008, Proceedings of the 2008 workshop on Static analysis, SAW'08, ACM, New York, NY, USA, P4, DOI DOI 10.1145/1394504.1394505
   Cifuentes C, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P263
   Cohen J., 1988, STAT POWER ANAL BEHA
   DaCosta D, 2003, PROC IEEE INT CONF S, P266, DOI 10.1109/ICSM.2003.1235429
   DAHN C, 2003, WCRE, P323
   Del Grosso C, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1037
   Di Penta M, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P101, DOI 10.1109/SCAM.2008.20
   DICKEY DA, 1981, ECONOMETRICA, V49, P1057, DOI 10.2307/1912517
   DIPENTA M, 2009, LIFE DEATH STAT DETE
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Evans D, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.976940
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Geiger R, 2006, LECT NOTES COMPUT SC, V3922, P411
   Huang Yao-Wen, 2003, Proceedings of the 12th International Conference on World Wide Web, P148
   JONES W, 1991, INT S SOFTW REL ENG, P35
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Kim Y, 2007, LECT NOTES OPER RES, V7, P45
   Korel B, 1996, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.1996.493403
   KRSUL IV, 1998, THESIS W LAFAYETTE
   LI PL, 2004, SIGSOFT 04 FSE 12, P263
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Merlo E, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P191
   Miller R.G., 1969, Simultaneous statistical inference
   MOCKUS A, 2003, ICSE 03, P274
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   OZMENT A, 2006, P 15 US SEC S AUG
   Ruwase Olatunji, 2004, NDSS, P159
   Scott David., 2002, P 11 INT WORLD WIDE, P396
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   VIEGA J, 2000, P 16 ANN COMP SEC AP, P3
   Wang S, 2005, FLUID POWER SYST TEC, V12, P35
   WOOD A, 1999, IEEE COMPUT, V9, P69
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 42
TC 25
Z9 29
U1 0
U2 1
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD OCT
PY 2009
VL 51
IS 10
BP 1469
EP 1484
DI 10.1016/j.infsof.2009.04.013
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 481VN
UT WOS:000268840400008
DA 2024-07-18
ER

PT J
AU Hierons, RM
AF Hierons, R. M.
TI Using status messages in the distributed test architecture
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Distributed test architecture; Controllability problem; Observability
   problem; Status message
ID SYNCHRONIZABLE TEST SEQUENCES; CHECKING SEQUENCES; GENERATION;
   OBSERVABILITY
AB If the system under test has multiple interfaces/ports and these are physically distributed then in testing we place a tester at each port. If these testers cannot directly communicate with one another and there is no global clock then we are testing in the distributed test architecture. If the distributed test architecture is used then there may be input sequences that cannot be applied in testing without introducing controllability problems. Additionally, observability problems can allow fault masking. In this paper we consider the situation in which the testers can apply a status message: an input that causes the system under test to identify its current state. We show how such a status message can be used in order to overcome controllability and observability problems. (C) 2008 Elsevier B.V. All rights reserved.
C1 Brunel Univ, Sch Informat Syst & Comp Math, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Hierons, RM (corresponding author), Brunel Univ, Sch Informat Syst & Comp Math, Uxbridge UB8 3PH, Middx, England.
EM Rob.Hierons@brunel.ac.uk
OI Hierons, Robert/0000-0002-4771-1446
CR [Anonymous], PROTOCOL TEST SYSTEM
   Bauer A, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P243
   BOYD S, 1991, INFORM PROCESS LETT, V40, P131, DOI 10.1016/0020-0190(91)90166-F
   Broekman Bart., 2003, Testing embedded software
   Cacciari L, 1999, INFORM SOFTWARE TECH, V41, P767, DOI 10.1016/S0950-5849(99)00036-1
   Chen Chyi-Chuann, 2005, Plant Biology (Rockville), V2005, P232
   Chen J, 2004, LECT NOTES COMPUT SC, V3235, P229
   CHEN WH, 1995, IEEE ACM T NETWORK, V3, P152, DOI 10.1109/90.374116
   DODD PS, 1992, SOFTWARE PRACT EXPER, V22, P863, DOI 10.1002/spe.4380221005
   DSSOULI R, 1986, PROTOCOL SPECIFICATI, V6, P217
   Duale AY, 2004, IEEE T COMPUT, V53, P614, DOI 10.1109/TC.2004.1275300
   Fecko MA, 2003, IEEE ACM T NETWORK, V11, P796, DOI 10.1109/TNET.2003.818182
   Gibbons A., 1985, Algorithmic graph theory
   Gunter D, 2000, 8TH INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS AND SIMULATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS, PROCEEDINGS, P267, DOI 10.1109/MASCOT.2000.876548
   Hierons RM, 2003, INFORM SOFTWARE TECH, V45, P793, DOI 10.1016/S0950-5849(03)00060-0
   Huang C. M., 1991, IEEE ANN PHOEN C COM, P608
   Khoumsi A, 2002, IEEE T SOFTWARE ENG, V28, P1085, DOI 10.1109/TSE.2002.1049406
   LEE D, 1994, P IEEE, V84, P1089
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   LUO G, 1994, COMPUT STAND INTER, V16, P119, DOI 10.1016/0920-5489(94)90003-5
   LUO G, 1993, 6 IFIP WORKSH PROT T, P139
   MANSOURISAMANI M, 1993, IEEE NETWORK     NOV, P20
   Miller RE, 1993, IEEE ACM T NETWORK, V1, P116, DOI 10.1109/90.222912
   Niske M, 2007, LECT NOTES COMPUT SC, V4680, P301
   Rafiq O, 2003, J SUPERCOMPUT, V24, P203, DOI 10.1023/A:1021759127956
   Rezaki A, 1995, COMPUT COMMUN, V18, P911, DOI 10.1016/0140-3664(96)81589-1
   SARIKAYA B, 1984, IEEE T COMMUN, V32, P389, DOI 10.1109/TCOM.1984.1096074
   Tai KC, 1998, COMPUT NETWORKS ISDN, V30, P1111, DOI 10.1016/S0169-7552(98)00013-0
   Thimbleby H, 2003, SOFTWARE PRACT EXPER, V33, P1081, DOI 10.1002/spe.540
   URAL H, 1993, COMPUT COMMUN, V16, P653, DOI 10.1016/0140-3664(93)90082-4
   UYAR MU, 1999, IEEE MIL COMM C MILC
   YANG X, 1990, MOL REPROD DEV, V27, P118, DOI 10.1002/mrd.1080270206
   Young YC, 1998, 1998 IEEE WORKSHOP ON APPLICATION-SPECIFIC SOFTWARE ENGINEERING AND TECHNOLOGY (ASSET 98) - PROCEEDINGS, P80, DOI 10.1109/ASSET.1998.688238
   Zulkernine M, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P763, DOI 10.1109/DSN.2002.1029022
   [No title captured]
NR 35
TC 4
Z9 4
U1 0
U2 0
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2009
VL 51
IS 7
SI SI
BP 1123
EP 1130
DI 10.1016/j.infsof.2008.11.002
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 456JD
UT WOS:000266840500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nguyen, L
   Shanks, G
AF Nguyen, Lemai
   Shanks, Graeme
TI A framework for understanding creativity in requirements engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Creativity; Requirements engineering; Problem solving; Conceptual
   framework
AB Creativity is important in the discovery and analysis of user and business requirements to achieve innovative uses of information and communication technologies. This paper builds a theoretical framework for understanding creativity in requirements engineering. The framework provides a systematic means of understanding creativity in requirements engineering and comprises five elements (product, process, domain, people and socio-organisational context). The framework provides researchers with a sound basis for exploring how the five elements of creativity can be incorporated within RE methods and techniques to support creative requirements engineering. It provides practitioners with a systematic means of creating environments that nurture and develop creative people, cognitive and collaborative processes and products. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Nguyen, Lemai] Deakin Univ, Sch Informat Syst, Melbourne, Vic 3125, Australia.
   [Shanks, Graeme] Univ Melbourne, Dept Informat Syst, Melbourne, Vic 3010, Australia.
C3 Deakin University; University of Melbourne
RP Nguyen, L (corresponding author), Deakin Univ, Sch Informat Syst, 221 Burwood Highway, Melbourne, Vic 3125, Australia.
EM lemai@deakin.edu.au
RI Nguyen, Lemai/X-6662-2019
OI SHANKS, GRAEME/0000-0003-4316-8017; Nguyen, Lemai/0000-0003-3695-7245
FU International Studies Programme 2006, Deakin University
FX This project was funded by the International Studies Programme 2006,
   Deakin University. The project was hosted by Centre for Human Computer
   Interaction Design, City University, London, UK, from July to November
   2006.; The authors thank Professor Neil Maiden, City University, London,
   UK, for hosting a research visit by one of the authors and his valuable
   feedback for the work.
CR AMABILE TM, 1986, J PERS SOC PSYCHOL, V50, P14, DOI 10.1037/0022-3514.50.1.14
   [Anonymous], 13 IEEE INT C REQ EN
   ARMAREGO J, 2004, P 9 AUSTR WORKSH REQ
   ARNABILE TM, RES ORGAN BEHAV
   Avison D., 2006, Information Systems Development-Methodologies, Techniques & Tools
   Baer J, 1998, CREATIVITY RES J, V11, P173, DOI 10.1207/s15326934crj1102_7
   Baer J, 2005, ROEPER REV, V27, P158, DOI 10.1080/02783190509554310
   BLACKBURN T, 2007, 18 AUSTR C INF SYST
   BLACKBURN T, 2006, P 10 INT C CSCW DES
   Boden MA, 1998, ARTIF INTELL, V103, P347, DOI 10.1016/S0004-3702(98)00055-1
   Boden Margaret A., 1991, CREATIVE MIND MYTHS
   BOEHM B, 2005, VALUE BASED SOFTWARE
   Bruner J.S., 1962, CONT APPROACHES CREA, P1, DOI [DOI 10.1037/13117-001, https://doi.org/10.1037/13117-001]
   CARROLL J, 1999, OPPORTUNISM REQUIREM
   Carroll J.M., 1996, DESIGN RATIONALE CON, P107
   COUGER DJ, 1996, CREATIVITY INNOVATIO
   COUGER JD, 1996, CREATIVITY INNOVATIO, V5, P262
   Cross N., 1995, DESIGN STUD, V16, P143, DOI DOI 10.1016/0142-694X(94)00007-Z
   Csikszentmihalyi M., 1997, The nature of creativity, P325
   CYBULSKI J, 2003, P PAC AS C INF SYST
   DALGARNO B, 1996, ASCILITE C
   DALLMAN S, 2005, P 13 EUR C INF SYST
   DAUPERT D, 2002, OSBORNE PARNES CREAT
   Dennis A., 2004, Systems Analysis Design, V3rd
   DORST K., 1995, DESIGN STUD, V16, P261, DOI DOI 10.1016/0142-694X(94)00012-3
   EDISON T, 1903, HARPERS MONTHLY
   Fairbank J, 2003, BEHAV INFORM TECHNOL, V22, P305, DOI 10.1080/01449290310001593630
   Gardner H., 1993, Creative minds: An anatomy of creativity
   Gardner H., 1993, Frames of mind: The theory of multiple intelligences
   GREGOR S, 2006, MIS Q, V30, P1
   GUILDFORD JP, 1975, PERSPECTIVES CREATIV
   Guilford JP, 1950, AM PSYCHOL, V5, P444, DOI 10.1037/h0063487
   Guindon R., 1990, Human-Computer Interaction, V5, P305, DOI 10.1207/s15327051hci0502&3_6
   HOFFMANN O, 2005, AUSTR J INFORM S SEP
   HOLYOAK KJ, 1990, INVITATION COGNITIVE, P117
   Hussain Z, 2007, BEHAV INFORM TECHNOL, V26, P221, DOI 10.1080/01449290600877413
   Jackson M, 2005, INFORM SOFTWARE TECH, V47, P903, DOI 10.1016/j.infsof.2005.08.004
   JACKSON PW, 1965, J PERS, V33, P309, DOI 10.1111/j.1467-6494.1965.tb01389.x
   Jirotka M., 1994, Requirements Engineering: Social and Technical Issues
   KANT E, 1984, INFORM PROCESS MANAG, V20, P97, DOI 10.1016/0306-4573(84)90042-6
   Kaufmann G., 2004, Creativity and Innovation Management, V13, P154, DOI DOI 10.1111/J.0963-1690.2004.00305.X
   KHUSHALANI A, 1994, AUSTR J INFORM SYSTE, V1, P13
   Kurtzberg TR, 2005, CREATIVITY RES J, V17, P51, DOI 10.1207/s15326934crj1701_5
   Kurtzberg TR, 2000, CREATIVITY RES J, V13, P285
   Loucopoulos P., 1995, SYSTEM REQUIREMENTS
   Loveless A.M., 2002, Literature review in creativity, new technologies and learning
   MACEDO L, 2001, P AISB 01 S ART INT
   MACEDO L, 2002, 2 WORKSH CREAT SYST
   MAIDEN N, 2004, P 2004 C DES INT SYS
   MAIDEN NAM, 2007, CAN REQUIREMENTS BE
   Mayer R. E., 1992, Thinking, problem solving, cognition
   Mich L., 2004, REQUIREMENTS ENG FDN
   Neisser U, 1996, AM PSYCHOL, V51, P77, DOI 10.1037/0003-066X.51.2.77
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   Nguyen L., 2003, Requirements Engineering, V8, P55, DOI 10.1007/s00766-002-0136-y
   Nguyen L., 1999, Requirements Engineering, V4, P152, DOI 10.1007/s007660050025
   NGUYEN L, PSI HDB VIR IN PRESS, pCH16
   NGUYEN L, 2008, P PAC AS C INF SYST
   NGUYEN L, 2007, INFORM SYSTEMS FDN T
   Nguyen L., 2006, RATIONALE MANAGEMENT
   NGUYEN L, 2006, P 17 AUSTR C INF SYS
   NGUYEN L, 2005, 7 INT BUSINESS INFOR
   Nguyen L., 2000, P 33 HAW INT C SYST
   Nunamaker J. F.  Jr., 1987, Journal of Management Information Systems, V3, P5
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   OHLSSON S, 1984, SCAND J PSYCHOL, V25, P65, DOI 10.1111/j.1467-9450.1984.tb01001.x
   Osborn A.F., 1979, APPL IMAGINATION PRI, V3rd rev
   Piaget J., 2001, The Psychology of Intelligence
   PLSEK PE, 1997, DIRECTED CREATIVITY
   PLUCKER J, 2003, CREATIVITY
   Plucker J.A., 2004, Creativity: From Potential to Realization
   POHL K, 1994, INFORM SYST, V19, P243, DOI 10.1016/0306-4379(94)90044-2
   REGEV G, 2006, 14 IEEE INT REQ ENG
   ROBERTSON J, 2005, IEEE SOFTWARE    JAN
   Robillard PN, 2005, IEEE SOFTWARE, V22, P60, DOI 10.1109/MS.2005.161
   Root-Bernstein R., 2004, Creativity: From potential to realization, P127, DOI [10.1037/10692-008, DOI 10.1037/10692-008]
   SCHMID K, 2006, SOFTWARETECHNIK TREN, V26
   Schon D., 1996, Bringing Design to Software, P171
   Shneiderman B., 2000, ACM Transactions on Computer-Human Interaction, V7, P114, DOI 10.1145/344949.345077
   Simon H., 1992, Sciences of the artificial
   Solomon B., 1999, Encyclopedia of creativity, V2, P273
   SOSA R, 2003, IJCAI CREAT WORKSH A
   Sternberg R.J., 1997, The nature of creativity
   Sternberg R.J., 1999, Handbook of Creativity, DOI [10.1017/cbo9780511807916.003, DOI 10.1017/CBO9780511807916.003]
   Sternberg RJ, 2005, INT J HUM-COMPUT ST, V63, P370, DOI 10.1016/j.ijhcs.2005.04.003
   SWEENEY RB, 2003, P 4 C INF TECHN CURR
   TARDIF TZ, 1997, NATURE CREATIVITY CO, P429
   TORRANCE EP, 1997, NATURE CREATIVITY, P43
   Wallas G., 1926, ART THOUGHT
   WARR A, 2005, P 5 INT C CREAT COGN
   Wertheimer M., 1959, Productive thinking
NR 91
TC 83
Z9 86
U1 3
U2 21
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2009
VL 51
IS 3
BP 655
EP 662
DI 10.1016/j.infsof.2008.09.002
PG 8
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 400TM
UT WOS:000262891500009
DA 2024-07-18
ER

PT J
AU Sun, P
   Jiang, CJ
AF Sun, Ping
   Jiang, Changjun
TI Analysis of workflow dynamic changes based on Petri net
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Workflow; Dynamic change; Petri net; Change region; Migration
AB Dynamic adaptability has become one of the major research topics in the area of workflow management system. When adjusting a workflow process to some structural changes, there is a potential problem: the new workflow may contain errors, such as deadlock, inconsistency and even loss of instance. This paper primary addresses the issues related to workflow structural changes. It firstly defines a class of structural change called compatible change. This kind of change can be applied to the workflow process, without causing any structural errors or behavioral inconsistencies. Secondly, an algorithm is put forward to calculate the minimal region affected by the changes. Furthermore, it proves that the change regions can be used to check the compatibility of workflow changes. This approach is applicable and efficient in terms of time and space for large-scale and complex systems. Lastly, this paper discusses the problem to decide whether an active workflow instance can be smoothly evolved to the new workflow, and provides a sufficient condition for valid migration. In the end, an example is given to illustrate the effectiveness of the proposed concepts and method. (C) 2008 Elsevier B.V. All rights reserved.
C1 [Sun, Ping] Tongji Univ, Dept Comp Sci & Engn, Shanghai 201804, Peoples R China.
   Minist Educ, Key Lab Embedded Syst, Shanghai 201804, Peoples R China.
   Minist Educ, Serv Comp, Shanghai 201804, Peoples R China.
C3 Tongji University
RP Sun, P (corresponding author), Tongji Univ, Dept Comp Sci & Engn, Shanghai 201804, Peoples R China.
EM ping-sun@sohu.com; cgyan2@163.com
FU National Basic Research Program of China [2003CB316902]; National
   Hi-tech Research and Development Program of China [2007AA01Z136]
FX Supported by the National Basic Research Program of China under Grant
   No. 2003CB316902, the National Hi-tech Research and Development Program
   of China under Grant No. 2007AA01Z136.
CR Agostini A., 2000, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V9, P335, DOI 10.1023/A:1008703327801
   Agostini A, 2000, LECT NOTES COMPUT SC, V1806, P218
   CASATI F, 1996, P 15 INT C CONC MOD, P438
   ELLIS C, 1995, P C ORG COMP SYST, P10
   ELLIS C, 2000, LNCS, V1806, P516
   Hruz B., 2007, MODELING CONTROL DIS
   Jiang C., 2003, BEHAV THEORY APPL PE
   KRADOLFER M, 2004, COMPUTER SCI, V13, P104
   Reichert M, 1998, J INTELL INF SYST, V10, P93, DOI 10.1023/A:1008604709862
   Rinderle S, 2004, DATA KNOWL ENG, V50, P9, DOI 10.1016/j.datak.2004.01.002
   Rinderle S, 2004, DISTRIB PARALLEL DAT, V16, P91, DOI 10.1023/B:DAPD.0000026270.78463.77
   Sadiq SW, 2000, INT J COOP INF SYST, V9, P93, DOI 10.1142/S0218843000000077
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van der Aalst WMP, 2002, THEOR COMPUT SCI, V270, P125, DOI 10.1016/S0304-3975(00)00321-2
   van der Aalst WMP, 2001, INFORM SYST FRONT, V3, P297, DOI 10.1023/A:1011409408711
   WESKE M, 2001, P 34 HAW INT C SYST, P390
   *WORKF MAN COAL, 1994, TC001003 WFMC
NR 18
TC 31
Z9 40
U1 0
U2 9
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2009
VL 51
IS 2
BP 284
EP 292
DI 10.1016/j.infsof.2008.02.004
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 386YX
UT WOS:000261919900004
DA 2024-07-18
ER

PT J
AU Dijkman, RM
   Quartel, DAC
   van Sinderen, MJ
AF Dijkman, Remco M.
   Quartel, Dick A. C.
   van Sinderen, Marten J.
TI Consistency in multi-viewpoint design of enterprise information systems
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE multi-viewpoint design; enterprise information systems; viewpoint
   consistency; conceptual modelling; view integration
ID ARCHITECTURE; FRAMEWORK
AB Different stakeholders in the design of an enterprise information system have their own view on that design. To help produce a coherent design this paper presents a framework that aids in specifying relations and consistency rules between such views. The contribution of our framework is that it provides a collection of basic concepts. These basic concepts aid in relating viewpoints by providing: (i) a common terminology that helps stakeholders to understand each others concepts; and (ii) re-usable consistency rules. We show that our framework can be applied, by performing a case study in which we specify the relations and consistency rules between three RM-ODP viewpoints. (C) 2007 Elsevier B.V. All rights reserved.
C1 [Dijkman, Remco M.] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Dijkman, Remco M.; Quartel, Dick A. C.; van Sinderen, Marten J.] Univ Twente, NL-7500 AE Enschede, Netherlands.
C3 Eindhoven University of Technology; University of Twente
RP Dijkman, RM (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM R.M.Dijkman@tue.nl; D.A.C.Quartel@utwente.nl; M.J.vanSinderen@utwente.nl
RI Dijkman, Remco M/B-2721-2014; Dijkman, Remco/P-4281-2019
OI Dijkman, Remco/0000-0003-4083-0036
CR Andrade J, 2004, IEEE T SOFTWARE ENG, V30, P282, DOI 10.1109/TSE.2004.1
   [Anonymous], 2000, IEEE STD, V1471-2000, P1
   Boiten E, 2000, COMPUT NETW, V34, P503, DOI 10.1016/S1389-1286(00)00114-6
   Boiten E, 1999, SCI COMPUT PROGRAM, V35, P29, DOI 10.1016/S0167-6423(99)00006-4
   Dijkman R, 2004, INT J COOP INF SYST, V13, P337, DOI 10.1142/S0218843004001012
   DIJKMAN RM, 2005, YATL4MDR MODEL TRANS
   DIJKMAN RM, 2006, THESIS U TWENTE ENSC
   Eertink H, 1999, LECT NOTES COMPUT SC, V1708, P76
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   *ITU T ISO IEC, 1995, 9014 ITUT ISOIEC
   *ITU T ISO IEC, 1999, 911 ITUT ISOIEC
   Jonkers H, 2004, INT J COOP INF SYST, V13, P257, DOI 10.1142/S0218843004000985
   Lankhorst M., 2005, ENTERPRISE ARCHITECT
   LEITE JCSD, 1991, IEEE T SOFTWARE ENG, V17, P1253, DOI 10.1109/32.106986
   Milner R., 1989, Communication and concurrency
   NAUMENKO A, 2002, THESIS SWISS FEDERAL
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   *OBJ MAN GROUP, 2003, PTC031014 OBJ MAN GR
   *OBJ MAN GROUP, 2002, FORMAL020403 OBJ MAN
   QUARTEL D, 1998, THESIS U TWENTE ENSC
   Quartel DAC, 1997, COMPUT NETWORKS ISDN, V29, P413, DOI 10.1016/S0169-7552(97)83471-X
   Spanoudakis G., 1999, Automated Software Engineering, V6, P171, DOI 10.1023/A:1008718614166
   Van Eck P, 2004, INT J COOP INF SYST, V13, P235, DOI 10.1142/S0218843004000961
   VANSINDEREN M, 1995, THESIS U TWENTE ENSC
   WEGMANN A, 2003, P 5 INT C ENT INF SY, V3, P483
   Wieringa RJ, 2003, LECT NOTES COMPUT SC, V2681, P209
NR 26
TC 22
Z9 22
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2008
VL 50
IS 7-8
BP 737
EP 752
DI 10.1016/j.infsof.2007.07.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 305KT
UT WOS:000256178000009
OA Green Published
DA 2024-07-18
ER

PT J
AU Aurum, A
   Daneshgar, F
   Ward, J
AF Aurum, Aybueke
   Daneshgar, Farhad
   Ward, James
TI Investigating Knowledge Management practices in software development
   organisations - An Australian experience
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Knowledge Management; Software Engineering; software process models; KM
   activities; KM process enablers
ID CREATION; SYSTEMS; PERFORMANCE; SUCCESS
AB This study, using both quantitative and qualitative methods, investigates current practice of Knowledge Management (KM) in Software Engineering (SE) processes in two Australian companies on the basis that they both claimed to apply KM practices in their software development work. It also describes the KM activities and KM process used in SE practice, and examines the enablers of KM process for SE in terms of leadership, technology, culture, process and measurement.
   One of the main findings showed that software developers believe in the usefulness of knowledge sharing; however, their ability to utilise some of the KM systems was limited. The most commonly used systems included personal networks, informal networks, group-ware and third-party knowledge. There is a need to formalise knowledge sharing of practices, while also supporting informal and ad-hoc knowledge sharing. While KM was considered to be important, the tools, techniques and methodologies currently employed for software development were inadequate to address effective management of knowledge in these organisations. In both organisations, a uniform model of the KM process did not exist. Among the four KM enablers, leadership was considered to be the most significant as top-down KM strategies were seemingly being pursued by management. Technology was also considered to be an obvious mechanism for KM, despite some of their current KM systems either being unsuitable or inaccessible. In addition, the crucial role that personal networks played in accessing tacit and implicit knowledge was seen as a key reason to foster a culture that encourages participants to share their knowledge with others. (C) 2008 Published by Elsevier B.V.
C1 [Aurum, Aybueke; Daneshgar, Farhad; Ward, James] Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
C3 University of New South Wales Sydney
RP Aurum, A (corresponding author), Univ New S Wales, Sch Informat Syst Technol & Management, Sydney, NSW 2052, Australia.
EM aybuke@unsw.edu.au; f.daneshgar@unsw.edu.au; james.ward@optusnet.com.au
OI Aurum, Aybuke/0000-0003-2416-4555
CR Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   Alavi M, 1999, P 32 ANN HAW INT C S
   Andersen Arthur, 1997, KNOWLEDGE MANAGEMENT
   Andrade J, 2003, LECT NOTES ARTIF INT, V2773, P1008
   [Anonymous], 1999, COMMUNICATIONS ASS I
   [Anonymous], P 26 ANN NASA SOFTW
   [Anonymous], 1999, P 32 HAWAII INT C SY
   Aurum A., 2003, Managing Software Engineering Knowledge
   Baetjer H., 1998, SOFTWARE CAPITAL EC
   BALTHAZARD PA, 2004, P 37 HAW INT C SYST, P97
   BASILI V, 2001, P 13 INT C SOFTW ENG, P102
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Borg W., 1993, APPL ED RES PRACTICA, V3rd
   DAVENPORT TH, 1997, ORG MANAGE WHAT THEY
   De Jager M., 1999, LIBR MANAGE, V20, P367
   Desouza KC, 2003, COMMUN ACM, V46, P99
   Desouza KC, 2006, IEEE SOFTWARE, V23, P30, DOI 10.1109/MS.2006.135
   Dibella A., 1998, ORG LEARN
   Dingsoyr T., 2005, COMMUN ACM, V48, P97
   DINGSOYR T, 2001, LECT NOTES COMPUTER, V2188, P167
   Disterer G., 2002, Journal of Knowledge Management, V6, P512, DOI 10.1108/13673270210450450
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Hansen MT, 1999, HARVARD BUS REV, V77, P106
   Hellstrom Tomas., 2001, The Journal of High Technology Management Research, V12, P25, DOI DOI 10.1016/S1047-8310(00)00037-7
   JASHAPARA J, 2004, KNOWL MAN INT APPR F
   JOHANSSON C, 1999, P WORKSH LEARN SOFTW, P69
   Klint P, 2002, DATA KNOWL ENG, V41, P141, DOI 10.1016/S0169-023X(02)00038-1
   KNEUPER R, 2002, HDB SOFTWARE ENG KNO, V2, pS579
   KO D, 2004, HAW INT C SYST SCI H
   Komi-Sirviö S, 2002, IEEE SOFTWARE, V19, P60, DOI 10.1109/MS.2002.1003457
   Laudon KC, 2006, MANAGING INFORM SYST
   Lee H, 2003, J MANAGE INFORM SYST, V20, P179
   Leedy P.D., 2005, PRACTICAL RES PLANNI, V8th
   Lucas H.C., 1999, INFORM TECHNOLOGY PR
   Markus ML, 2001, J MANAGE INFORM SYST, V18, P57
   Mathiassen L., 2003, Journal of Knowledge Management, V7, P63, DOI 10.1108/13673270310477298
   NONAKA I, 1994, ORGAN SCI, V5, P14, DOI 10.1287/orsc.5.1.14
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Polyani M., 1966, TACIT DIMENSION
   RAUB SP, 2009, RES PRACTICE HUMAN R, V9, P139
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   ROUT T, 2006, 6 INT SPICE C SOFTW
   Ruggles R, 1998, CALIF MANAGE REV, V40, P80, DOI 10.2307/41165944
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   SADREI E, 2007, INT J REQUIREMENTS E, V12, P145
   Schneider K, 2002, IEEE SOFTWARE, V19, P46, DOI 10.1109/MS.2002.1003453
   Stålhane T, 2003, LECT NOTES COMPUT SC, V2765, P129
   Tiwana A, 2004, INFORM SOFTWARE TECH, V46, P899, DOI 10.1016/j.infsof.2004.03.006
   ukherji T., 2005, IIMB MANAG REV, V17, P33
   von Krogh G, 1998, CALIF MANAGE REV, V40, P133, DOI 10.2307/41165947
   Von Krogh G., 2005, PUTTING KNOWLEDGE NE
   Ward J, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P137, DOI 10.1109/ASWEC.2004.1290466
   Wickramasinghe N., 2002, International Journal of Accounting Information Systems, V3, P83, DOI [DOI 10.1016/S1467-0895(02)00037-4, 10.1016/S1467-0895(02)00037-4]
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 54
TC 88
Z9 98
U1 1
U2 36
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2008
VL 50
IS 6
BP 511
EP 533
DI 10.1016/j.infsof.2007.05.005
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 295WY
UT WOS:000255506100003
DA 2024-07-18
ER

PT J
AU Zhong, H
   Zhang, L
   Mei, H
AF Zhong, Hao
   Zhang, Lu
   Mei, Hong
TI An experimental study of four typical test suite reduction techniques
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article; Proceedings Paper
CT 28th International Conference on Software Engineering (ICSE 2006)
CY MAY 20-28, 2006
CL Shanghai, PEOPLES R CHINA
DE test suite reduction; software testing; test suite minimization;
   empirical studies
ID MINIMIZATION; ALGORITHMS
AB In software development, developers often rely on testing to reveal bugs. Typically, a test suite should be prepared before initial testing, and new test cases may be added to the test suite during the whole testing process. This may usually cause the test suite to contain more or less redundancy. In other words, a subset of the test suite (called the representative set) may still satisfy all the test objectives. As the redundancy can increase the cost of executing the test suite, quite a few test suite reduction techniques have been brought out in spite of the NP-completeness of the general problem of finding the optimal representative set of a test suite. In the literature, there have been some experimental studies of test suite reduction techniques, but the limitations of the these experimental studies are quite obvious. Recently proposed techniques are not experimentally compared against each other, and reported experiments are mainly based on small programs or even simulation data. This paper presents a new experimental study of the four typical test suite reduction techniques, including Harrold et al.'s heuristic, and three other recently proposed techniques such as Chen and Lau's GRE heuristic, Mansour and El-Fakin's genetic algorithm-based approach, and Black et al.'s ILP-based approach. Based on the results of this experimental study, we also provide a guideline for choosing the appropriate test suite reduction technique and some insights into why the techniques vary in effectiveness and efficiency. (C) 2007 Elsevier B.V. All rights reserved.
C1 Peking Univ, Key Lab High Confidence Technol, Minist Educ, Beijing, Peoples R China.
   Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing, Peoples R China.
C3 Peking University; Peking University
RP Zhang, L (corresponding author), Peking Univ, Key Lab High Confidence Technol, Minist Educ, Beijing, Peoples R China.
EM zhonghao@pku.edu.cn; zhanglu@sei.pku.edu.cn; meih@pku.edu.cn
RI Zhong, Hao/B-2435-2015
OI Zhong, Hao/0000-0002-4302-9183
CR Aho AV., 1974, DESIGN ANAL COMPUTER
   [Anonymous], THESIS MIT
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P777, DOI 10.1016/S0950-5849(98)00094-9
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   FOSSE PT, 1991, FAULT TOL COMP 1991, P410
   Gizdarski E, 2000, PROCEEDINGS OF THE NINTH ASIAN TEST SYMPOSIUM (ATS 2000), P171, DOI 10.1109/ATS.2000.893621
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Gupta KC, 1996, INT J MICROWAVE MILL, V6, P83
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   HARROLD MJ, 2000, USING COMPONENT META
   HARTMANN J, 1989, P INT C SOFTW MAINT
   Horgan J. R., 1992, Proceedings of the Second Symposium on Assessment of Quality Software Development Tools (Cat. No.92TH0415-0), P2, DOI 10.1109/AQSDT.1992.205829
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   JOHNSON DS, 1974, J COMPUT SYST SCI, V9, P256, DOI 10.1016/S0022-0000(74)80044-9
   Leung H. K. N., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), P60, DOI 10.1109/ICSM.1989.65194
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Mansour N, 1999, J SOFTW MAINT-RES PR, V11, P19, DOI 10.1002/(SICI)1096-908X(199901/02)11:1<19::AID-SMR182>3.0.CO;2-M
   MYERS GJ, 1979, SOFTWARE RELIABILITY
   OFFUTT J, 1995, P 12 INT C TEST COMP, P111
   Orso A., 2004, ACM SIGSO SOFTWARE E, V29, P241, DOI DOI 10.1145/1029894.1029928
   Ralphs TK, 2005, OPER RES COMPUT SCI, V29, P61
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rusu V, 2000, LECT NOTES COMPUT SC, V1945, P338
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   VOKOLOS FI, 1997, P 3 INT C REL QUAL S
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Wong WE, 1999, J SYST SOFTWARE, V48, P79, DOI 10.1016/S0164-1212(99)00048-5
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   ZHONG H, 2006, P 28 INT C SOFTW ENG, P636
NR 38
TC 48
Z9 54
U1 1
U2 12
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2008
VL 50
IS 6
BP 534
EP 546
DI 10.1016/j.infsof.2007.06.003
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 295WY
UT WOS:000255506100004
DA 2024-07-18
ER

PT J
AU Bush, WR
AF Bush, William R.
TI Software, regulation, and domain specificity
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE regulation of software; domain specific software development; realtime
   software; Web software development
AB The growing pervasiveness of computer systems is bringing with it more societal reliance on those systems, which in turn is attracting the attention of various legal and political entities. This increasing attention will, one way or another, result in more regulation. This paper discusses regulation and its various forms, its effects on software development, and the software development tools and techniques that can be used to respond effectively to the demands of regulation. In particular, the maturing of software technology is leading to domain specific solutions that fit the needs of both software developers and regulators. (C) 2006 Elsevier B.V. All rights reserved.
RP Bush, WR (corresponding author), 64 Placitas Ave, Atherton, CA 94027 USA.
EM bill@bush.com
CR Biegel S., 2001, Beyond our control? Confronting the limits of our legal system in the age of cyberspace
   Burns A., 2001, Real-time Systems and Programming Languages: Ada 95, Real-Time Java and Real-Time POSIX, V3rd
   Bush WR, 2005, LECT NOTES COMPUT SC, V3362, P86
   CHEN S, 2005, 14 INT WORLD WID WEB
   COOKE DE, 2006, IEEE COMPUTER    JAN, P63
   GARFINKEL S, MICROSOFTS SECRET BU
   Gehtland J., 2006, PRAGMATIC AJAX WEB 2
   GONG L, 2003, JAVA 2 PLATFORM SECU
   HORSTMANSHOF S, PREFAST LESS SIC BUG
   INGHAM MD, 2004, AM I AER ASTR 1 INT
   LEMOS R, BROWSERS FEEL FUZZ S
   Moore G., 2002, CROSSING CHASM
   PEEL FW, 1978, U ARKANSAS LITTLE RO, V1, P1
   TAIVALSAARI A, 1999, TR9973 SUN MICR LAB
   WELLINGS A, 2004, CONCURRENT REAL TIME, P347
NR 15
TC 3
Z9 3
U1 0
U2 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2007
VL 49
IS 1
BP 44
EP 54
DI 10.1016/j.infsof.2006.08.007
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 115AK
UT WOS:000242706600005
DA 2024-07-18
ER

PT J
AU Kurniawati, F
   Jeffery, R
AF Kurniawati, Felicia
   Jeffery, Ross
TI The use and effects of an electronic process guide and experience
   repository: a longitudinal study
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE software process improvement; electronic process guide; experience
   repository; industry case study
AB This paper presents a consolidated view of two evaluations on the use of an electronic process guide and experience repository within a small software development company. The use and effects of the tool were studied over a period of one and a half years, first for 6 months and then 1 year after its installation, for another 5 months. The tool was used regularly and in a consistent manner in both studies but declining usage was observed in the second study. The repository remained used to retrieve mostly examples and templates but the number of retrievals of anecdotal experiences, such as lessons teamed had noticeably increased. Similar benefits such as time saving and improved documentation quality were observed in both studies, with additional benefits in the second study like improved project planning and cost estimation, and easier negotiation and traceability of altered or new system requirements with clients. The initial load that users experienced in learning to use the tool was not observed in the second study. The results show that tangible benefits can be realised quickly and continued to be experienced, leading to users having higher morale and more confidence in executing their tasks. (C) 2005 Elsevier B.V. All rights reserved.
C1 Univ New S Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
   Natl ICT Australia Ltd, Alexandria, NSW 1435, Australia.
C3 University of New South Wales Sydney; NICTA
RP Kurniawati, F (corresponding author), Univ New S Wales, Sch Comp Sci & Engn, K17, Sydney, NSW 2052, Australia.
EM feliciak@cse.unsw.edu.au; rossj@cse.unsw.edu.au
CR ALTHOFF K, 1999, P 11 INT C SOFTW ENG, P25
   [Anonymous], P 5 INT C PROC SOFTW
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   BECKERKORNSTAED.U, 1999, P SOFTW TECHN ENG PR, P161
   BECKERKORNSTAED.U, 1999, P 11 C ADV INF SYST, P119
   Brossler P, 1999, P WORKSH LEARN SOFTW, P77
   CALDIERA G, 1998, ENCY SOFTWARE ENG, P469
   Conradi R, 2000, LECT NOTES COMPUT SC, V1840, P391
   Cook JE, 1999, ACM T SOFTW ENG METH, V8, P147, DOI 10.1145/304399.304401
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dingsoyr T, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P350, DOI 10.1109/ASWEC.2004.1290488
   Dingsoyr T, 2003, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.2003.1201190
   HENNINGER S, 2001, LNCS, V2188, P182
   HOLZ H, 2001, P 3 INT WORKSH ADV L, P163
   Horton RP, 2001, J INF TECHNOL, V16, P237, DOI 10.1080/02683960110102407
   HOUDEK F, 1997, P 1997 S SOFTW REUS, V22, P81
   *ISO IEC, 1995, 12207 ISO IEC
   Keung J, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P52, DOI 10.1109/ASWEC.2004.1290457
   Kurniawati F, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P128, DOI 10.1109/ASWEC.2004.1290465
   KURNIAWATI F, 2004, 5 INT WORKSH SOFTW P
   Lewis B., 2002, IT Professional, V4, P27, DOI 10.1109/6294.988698
   LINDVALL M, 2001, P 3 INT WORKSH ADV L, P106
   LOWE DB, 1999, P ACM INT C HYP HYP, P139
   MAURER F, 1999, P 12 KNOWL ACQ WORKS
   MOE NB, 2002, EUROSPI
   *OBJ OR PTY LTD, 1998, OBJ OR MAN SUCC SOFT
   Schneider K, 2003, PROC INT CONF SOFTW, P534, DOI 10.1109/ICSE.2003.1201233
   Schneider K, 2000, LECT NOTES COMPUT SC, V1840, P407
   Scott L, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P162, DOI 10.1109/ISESE.2003.1237975
   Scott L, 2002, INFORM SOFTWARE TECH, V44, P601, DOI 10.1016/S0950-5849(02)00080-0
   Scott L, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P182, DOI 10.1109/ASWEC.2001.948512
   SCOTT L, 2002, 021 CAESER
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
NR 33
TC 5
Z9 5
U1 0
U2 2
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2006
VL 48
IS 7
BP 566
EP 577
DI 10.1016/j.infsof.2005.06.002
PG 12
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 049QQ
UT WOS:000238031900011
DA 2024-07-18
ER

PT J
AU Wang, ETG
   Ying, TC
   Jiang, JJ
   Klein, G
AF Wang, ETG
   Ying, TC
   Jiang, JJ
   Klein, G
TI Group cohesion in organizational innovation: An empirical examination of
   ERP implementation
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE organizational innovation; group dynamics; user participation;
   enterprise resources planning
ID USER PARTICIPATION; KNOWLEDGE INTEGRATION; GROUP COHESIVENESS; SOCIAL
   NETWORKS; SYSTEMS; SUCCESS; PERFORMANCE; MANAGEMENT; CONFLICT;
   CONTINGENCY
AB I-Enterprise Resource Planning systems present unique difficulties ill implementation in that they typically involve changes to the entire organization and are a novel application for the organization. These characteristics add to the importance of making groups more cohesive in their goals, commitment, and ability to work toward completion of the new system Project. Such cohesiveness is built partly through the willingness of the learn members to participate and commitment to learning the new system. To determine if these relationships hold, a survey of users and managers in Taiwan was conducted to test a model derived from social capital theory. The data support the positive relationships between group cohesion and both willingness to participate and commitment to learning. Group cohesion is likewise positively related to meeting management goals. Resources within an organization should support the climate of learning and the building of team participation. (c) 2005 published by Elsevier B.V.
C1 Univ Cent Florida, Dept Informat Management, Orlando, FL 32816 USA.
   Natl Cent Univ, Dept Informat Management, Jhongli, Taiwan.
   Ming Hsin Univ Sci & Technol, Dept Informat Management, Hsinchu, Taiwan.
   Univ Colorado, Coll Business Adm, Colorado Springs, CO 80907 USA.
C3 State University System of Florida; University of Central Florida;
   National Central University; University of Colorado System; University
   of Colorado at Colorado Springs
RP Univ Cent Florida, Dept Informat Management, Orlando, FL 32816 USA.
EM ewang@mgt.ncu.edu.tw; tcying@mis.must.edu.tw; jjiang@bus.ucf.edu;
   gklein@uccs.edu
RI Jiang, James/JPK-7730-2023; 江, 俊毅/N-6899-2018
CR Adler P.S., 2002, ACAD MANAGE REV, V27, P17
   Al-Mashari M, 2003, EUR J OPER RES, V146, P352, DOI 10.1016/S0377-2217(02)00554-4
   Al-Mashari M., 2001, KNOWL PROCESS MANAG, V8, P175, DOI [DOI 10.1002/KPM.114, https://doi.org/10.1002/kpm.114]
   Aladwani A.M., 2000, DATA BASE ADV INF SY, V31, P25
   [Anonymous], INT J PROJECT MANAGE
   [Anonymous], 1999, COMMUNICATIONS ASS I
   ARMSTRONG JS, 1977, J MARKETING RES, V14, P396, DOI 10.2307/3150783
   BARKI H, 1994, INFORM SYST RES, V5, P422, DOI 10.1287/isre.5.4.422
   Beal DJ, 2003, J APPL PSYCHOL, V88, P989, DOI 10.1037/0021-9010.88.6.989
   Bingi P, 1999, INFORM SYST MANAGE, V16, P7, DOI 10.1201/1078/43197.16.3.19990601/31310.2
   BOLAND RJ, 1995, ORGAN SCI, V6, P350, DOI 10.1287/orsc.6.4.350
   Brehm J, 1997, AM J POLIT SCI, V41, P999, DOI 10.2307/2111684
   CARRON AV, 1982, J SPORT PSYCHOL, V4, P123, DOI 10.1123/jsp.4.2.123
   Carron AV, 2000, SMALL GR RES, V31, P89, DOI 10.1177/104649640003100105
   Carron AV, 2002, J SPORT EXERCISE PSY, V24, P168, DOI 10.1123/jsep.24.2.168
   CARRON AV, 1995, J SPORT PSYCHOL, V4, P244
   CAVAYE ALM, 1995, INFORM MANAGE, V28, P311, DOI 10.1016/0378-7206(94)00053-L
   CHIN W. W., STAT STRATEGIES SMAL, P307
   Chin WW, 1998, QUANT METH SER, P295
   CHIN WW, 2001, UNPUB PLS GRAPH USER
   DAMANPOUR F, 1991, ACAD MANAGE J, V34, P555, DOI 10.5465/256406
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DION KL, 1992, SMALL GR RES, V23, P242, DOI 10.1177/1046496492232007
   FESTINGER L, 1950, PSYCHOL REV, V57, P271, DOI 10.1037/h0056932
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   Fukuyama Francis., 1995, Trust: The Social Virtues and the Creation of Prosperity
   Gabbay S.M., 1999, Corporate Social Capital and Liability, DOI DOI 10.1007/978-1-4615-5027-3_1
   Gable G.G., 2003, ICIS 2003 P, P576
   GOODMAN PS, 1987, RES ORGAN BEHAV, V9, P121
   GRANOVETTER MS, 1973, AM J SOCIOL, V78, P1360, DOI 10.1086/225469
   Grover V, 1996, INFORM MANAGE, V31, P177, DOI 10.1016/S0378-7206(96)01079-8
   HENDERSON RM, 1990, ADMIN SCI QUART, V35, P9, DOI 10.2307/2393549
   Hong KK, 2002, INFORM MANAGE-AMSTER, V40, P25, DOI 10.1016/S0378-7206(01)00134-3
   Huang J. C., 2003, International Journal of Project Management, V21, P167, DOI 10.1016/S0263-7863(02)00091-1
   Huang JC, 2001, EUR J INFORM SYST, V10, P161, DOI 10.1057/palgrave.ejis.3000402
   HUFNAGEL EM, 1994, INFORM SYST RES, V5, P48, DOI 10.1287/isre.5.1.48
   Hunton J. E., 2001, International Journal of Accounting Information Systems, V2, P1, DOI 10.1016/S1467-0895(00)00013-0
   Hunton JE, 1999, ACCOUNT ORG SOC, V24, P597, DOI 10.1016/S0361-3682(99)00023-9
   Hunton JE, 1998, ADV ACC INFORM SYST, V6, P3
   INGLEHART R, 1997, MODERNIZATION POST M
   KLEIN HJ, 1995, ORGAN BEHAV HUM DEC, V61, P44, DOI 10.1006/obhd.1995.1004
   Koh ISY, 1996, INFORM SYST J, V6, P283, DOI 10.1111/j.1365-2575.1996.tb00019.x
   Kostova T, 2003, ACAD MANAGE REV, V28, P297
   Krumbholz M, 2001, INFORM SYST, V26, P185, DOI 10.1016/S0306-4379(01)00016-3
   Langfred CW, 1998, SMALL GR RES, V29, P124, DOI 10.1177/1046496498291005
   Langfred CW, 2000, J ORGAN BEHAV, V21, P563, DOI 10.1002/1099-1379(200008)21:5<563::AID-JOB31>3.0.CO;2-H
   Leana CR, 1999, ACAD MANAGE REV, V24, P538, DOI 10.2307/259141
   Lin N, 1999, ANNU REV SOCIOL, V25, P467, DOI 10.1146/annurev.soc.25.1.467
   Lin WT, 2000, INFORM MANAGE, V37, P283, DOI 10.1016/S0378-7206(99)00055-5
   Locke E.A., 1979, RES ORGAN BEHAV, V1, P265
   LUCAS HC, 1988, MIS QUART, V12, P537, DOI 10.2307/249129
   Mabert V.A., 2000, PRODUCTION INVENTORY, V41, P52
   Markus M. L., 2000, Framing the domains of IT research: Glimpsing the future through the past, P173
   Markus ML, 2000, COMMUN ACM, V43, P42, DOI 10.1145/332051.332068
   Mathieu JE, 2000, J APPL PSYCHOL, V85, P273, DOI 10.1037//0021-9010.85.2.273
   MILLER KI, 1986, ACAD MANAGE J, V29, P727, DOI 10.5465/255942
   Motwani J, 2002, INT J PROD ECON, V75, P83, DOI 10.1016/S0925-5273(01)00183-9
   MUDRACK PE, 1989, HUM RELAT, V42, P771, DOI 10.1177/001872678904200902
   MULLEN B, 1994, PSYCHOL BULL, V115, P210, DOI 10.1037/0033-2909.115.2.210
   Nahapiet J, 1998, ACAD MANAGE REV, V23, P242, DOI 10.2307/259373
   NELSON RE, 1989, ACAD MANAGE J, V32, P377, DOI 10.5465/256367
   Newell S, 2004, BRIT J MANAGE, V15, pS43
   Nord W.R., 1987, IMPLEMENTING ROUTINE
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Palaniswamy R, 2000, INFORM SYST MANAGE, V17, P43, DOI 10.1201/1078/43192.17.3.20000601/31240.7
   Parr A. N., 1999, New Information Technologies in Organizational Processes: Field Studies and Theoretical Reflections on the Future of Work. IFIP TC8 WG8.2 International Working Conference, P99
   PUTNAM R, 1995, J DEMOCRACY, V0006
   Ravichandran T, 2000, MIS QUART, V24, P381, DOI 10.2307/3250967
   Reagans R, 2001, ORGAN SCI, V12, P502, DOI 10.1287/orsc.12.4.502.10637
   Robey D., 1993, Journal of Management Information Systems, V10, P123
   ROBEY D, 1989, MANAGE SCI, V35, P1172, DOI 10.1287/mnsc.35.10.1172
   Sahay S., 1996, ACCOUNTING MANAGEMEN, V6, P255, DOI DOI 10.1016/S0959-8022(99)00017-X
   Saleem N., 1996, Journal of Management Information Systems, V13, P145
   Schneider SK, 1999, HUM RELAT, V52, P1445, DOI 10.1177/001872679905201105
   Shang S, 2002, INFORM SYST J, V12, P271, DOI 10.1046/j.1365-2575.2002.00132.x
   Sharma R, 2003, MIS QUART, V27, P533
   Sinkula JM, 1997, J ACAD MARKET SCI, V25, P305, DOI 10.1177/0092070397254003
   SLEVIN DP, 1991, INFORM MANAGE, V21, P161, DOI 10.1016/0378-7206(91)90062-7
   Sumner M, 2000, J INFORM TECHNOL, V15, P317, DOI 10.1080/02683960010009079
   Taylor JC, 1998, J ORGAN CHANGE MANAG, V11, P233, DOI 10.1108/09534819810216265
   Teram E, 1999, HUM RELAT, V52, P263, DOI 10.1023/A:1016988903857
   Thompson L, 1998, J EXP SOC PSYCHOL, V34, P289, DOI 10.1006/jesp.1998.1351
   Thong JYL, 2001, OMEGA-INT J MANAGE S, V29, P143, DOI 10.1016/S0305-0483(00)00035-9
   Tiwana A., 2001, THESIS GEORGIA STATE
   Umble EJ, 2003, EUR J OPER RES, V146, P241, DOI 10.1016/S0377-2217(02)00547-7
   Widmeyer W.N., 1985, MEASUREMENT COHESION
   Willcocks L, 2000, COMMUN ACM, V43, P32, DOI 10.1145/332051.332065
   Wixom BH, 2001, MIS QUART, V25, P17, DOI 10.2307/3250957
   Wold H., 1985, Measuring the unmeasurable, P221, DOI DOI 10.1007/978-94-009-5079-5
   Yourdon E., 1993, Decline and Fall of the American Programmer
NR 90
TC 42
Z9 50
U1 0
U2 44
PU ELSEVIER
PI AMSTERDAM
PA RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2006
VL 48
IS 4
BP 235
EP 244
DI 10.1016/j.infsof.2005.04.006
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 027PP
UT WOS:000236427800002
DA 2024-07-18
ER

PT J
AU Diab, H
   Koukane, F
   Frappier, M
   St-Denis, R
AF Diab, H
   Koukane, F
   Frappier, M
   St-Denis, R
TI μ<sub>c</sub>ROSE:: automated measurement of COSMIC-FFP for Rational
   Rose RealTime
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE measure; measurement tool; COSMIC-FFP; function points; real-time
   system; Rational Rose RealTime
ID FUNCTION POINTS; RELIABILITY
AB During the last 10 years, many organizations have invested resources and energy in order to be rated at the highest level as possible according to some maturity models for software development. Since measures play an important role in these models, it is essential that CASE tools offer facilities to automatically measure the sizes of various documents produced using them. This paper introduces a tool, called mucROSE, that automatically measures the functional software size, as defined by the COSMIC-FFP method, for Rational Rose RealTime models. mucROSE streamlines the measurement process, ensuring repeatability and consistency in measurement while reducing measurement cost. It is the first tool to address automatic measurement of COSMIC-FFP and it can be integrated into the Rational Rose RealTime toolset. (C) 2004 Elsevier B.V. All rights reserved.
C1 Univ Sherbrooke, Fac Sci, Dept Informat, Sherbrooke, PQ J1K 2R1, Canada.
C3 University of Sherbrooke
RP Univ Sherbrooke, Fac Sci, Dept Informat, Sherbrooke, PQ J1K 2R1, Canada.
EM hassan.diab@usherbrooke.ca; marc.frappier@usherbrooke.ca;
   richard.st-denis@usherbrooke.ca
RI St.Denis, Richard D/C-8997-2012
OI St-Denis, Richard/0000-0002-4099-7445
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2001, 12 EUR SOFTW CONTR M
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   *COSMIC, FFP MEAS MAN VERS 2
   DIAB H, 2003, THESIS U SHERBROOKE
   DIAB H, 2001, P 4 EUR C SOFTW MEAS, P185
   DIAB H, 2002, LECT NOTES COMPUTER, V2495
   DION F, 2000, GENDARME MEASURE TAI
   Furey S, 1997, IEEE SOFTWARE, V14, P28, DOI 10.1109/52.582971
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   *HIER PTY LTD, 1999, OV HIER FFP
   *INT SOFTW BENCHM, 2002, BENCHM REL 6
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   KEMERER CF, 1993, COMMUN ACM, V36, P85, DOI 10.1145/151220.151230
   KEMERER CF, 1992, IEEE T SOFTWARE ENG, V18, P1011, DOI 10.1109/32.177370
   MENDES O, 1996, FUNCTION POINT TOOL
   Selic B., 1994, REAL TIME OBJECT ORI
NR 17
TC 22
Z9 23
U1 0
U2 4
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR 1
PY 2005
VL 47
IS 3
BP 151
EP 166
DI 10.1016/j.infsof.2004.06.007
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 896QV
UT WOS:000226949500002
DA 2024-07-18
ER

PT J
AU Zegour, DE
AF Zegour, DE
TI Scalable distributed compact trie hashing (CTH*)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE compact trie hashing; linear hashing; range-partitioning; scalable
   distributed data structures
AB This last decade, a new class of data structures named Scalable Distributed Data Structures (SDDSs), is appeared completely dedicated to a distributed environment. This type of data structures opened an important axis of research, considering that the data management in a transparent manner is fundamental in a computer network. All the existing methods are mainly based on Linear hashing (LH*) and Range-partitioning (RP*). In this paper, we propose a new method with the constraints of the SDDS. Our approach is an adaptation of the well-known method Trie hashing (TH) for a distributed environment, i.e. a network of interconnected computers. The latter uses a digital tree (trie) as access function. Our major objective is the distribution of file buckets and the tree representing the hashing function. We have considered TH with the tree represented in compact form (CTH) because this option is probably more interesting for the reduction of the message size circulating on the network. Contrary to the majority of the existing methods, the proposed one provides the order of distributed files, then facilitates both the range query operations and the ordered traversal of files. Moreover, the following properties make our method a promising opening towards a new class of SDDS: (a) preservation of the order of records, (b) works without multicast (c) three bytes are sufficient to address a server, (d) the transfer of some bytes is enough for the update of the client trees. The access performances should exceed the ones of traditional files and some competitive scalable and distributed data structures. (C) 2004 Elsevier B.V. All rights reserved.
C1 INI, Dept Informat, Algiers, Algeria.
RP Zegour, DE (corresponding author), INI, Dept Informat, BP 68M,Oued Smar 16270, Algiers, Algeria.
EM dzegour@yahoo.fr
CR DEVINE R, 1993, LECT NOTES COMPUTER
   HIDOUCI WK, 1993, ETUDE COMPARAISON AR
   KROLL B, 1994, IN PRESS ACM SIGMOD
   LITWIN W, 1980, 80 VLDB ACM
   LITWIN W, 1993, HPLDTD93009
   LITWIN W, 1987, INT C VLDB VEN IT
   LITWIN W, 1985, INT C F D O KYOT MAY
   LITWIN W, 1993, ACM SIGMOD INT C MAN
   LITWIN W, 1986, 2 INT C DAT ENG IEEE
   LITWIN W, 1981, 81 SIGMOD ACM, P19
   LITWIN W, 2000, LH RS HIGH AVAILABIL
   LITWIN W, 1994, P 20 C VLDB CHIL
   LITWIN W, 1993, LH SCALABLE DISTRIBU
   LOMET DB, 1983, ACM T DATABASE SYST, V8, P136, DOI 10.1145/319830.319837
   MATSLIACH G, 1990, INFORM PROCESS LETT, V34, P313, DOI 10.1016/0020-0190(90)90016-Q
   MATSLIACH G, 1991, IEEE PDIS C
   OTOO EJ, 1987, CODATA
   Perrizo W., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P215, DOI 10.1109/69.87961
   TORENVLIET L, 1983, VLDB, V83, P142
   ZEGOUR D, 1988, THESIS U PARIS 9 DAU
   ZEGOUR DE, 2001, PRESENTATION GEN PRO
   ZEGOUR DE, TRIE HASHING SEQUENT
NR 22
TC 1
Z9 1
U1 0
U2 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD NOV 1
PY 2004
VL 46
IS 14
BP 923
EP 935
DI 10.1016/j.infsof.2004.04.001
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 851NQ
UT WOS:000223692200001
DA 2024-07-18
ER

EF